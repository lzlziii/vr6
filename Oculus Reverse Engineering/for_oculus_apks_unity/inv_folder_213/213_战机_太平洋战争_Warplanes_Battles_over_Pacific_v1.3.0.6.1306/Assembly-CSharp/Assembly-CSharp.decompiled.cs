using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.Diagnostics;
using System.Globalization;
using System.IO;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Security.Cryptography;
using System.Text;
using System.Threading;
using Bhaptics.Tact.Unity;
using CodeStage.AntiCheat.ObscuredTypes;
using ExitGames.Client.Photon;
using Facebook.WitAi;
using Facebook.WitAi.Lib;
using Google.Maps.Coord;
using Google.Maps.Event;
using Google.Maps.Feature.Shape;
using Il2CppDummyDll;
using LightShaft.Scripts;
using Newtonsoft.Json.Linq;
using Oculus.Platform;
using Oculus.Platform.Models;
using Photon.Pun;
using Photon.Realtime;
using Photon.Voice;
using Photon.Voice.PUN;
using Photon.Voice.Unity;
using Rewired;
using Rewired.Components;
using Rewired.Integration.UnityUI;
using Rewired.UI;
using Rewired.UI.ControlMapper;
using Rewired.Utils.Interfaces;
using SC;
using SimpleJSON;
using Unity.Burst;
using Unity.Collections;
using Unity.Collections.LowLevel.Unsafe;
using Unity.Jobs;
using Unity.Mathematics;
using Unity.Profiling;
using Unity.VideoHelper.Animation;
using UnityEngine;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Experimental.Rendering;
using UnityEngine.Networking;
using UnityEngine.Rendering;
using UnityEngine.SceneManagement;
using UnityEngine.UI;
using UnityEngine.Video;
using UnityEngine.XR;
using UnityEngine.XR.Management;
using Viveport;
using Viveport.Internal;
using YoutubeLight;
using emotitron.Compression;
using emotitron.Networking;
using emotitron.SyncAnimInternal;
using emotitron.Utilities;
using emotitron.Utilities.GUIUtilities;
using emotitron.Utilities.Networking;
using emotitron.Utilities.SmartVars;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x917710", Offset = "0x917710")]
public class SmoothCameraOrbit : MonoBehaviour
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 targetOffset;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float distance;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maxDistance;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float minDistance;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float xSpeed;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float ySpeed;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int yMinLimit;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int yMaxLimit;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int zoomRate;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float panSpeed;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float zoomDampening;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float autoRotate;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float autoRotateSpeed;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float xDeg;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float yDeg;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float currentDistance;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float desiredDistance;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Quaternion currentRotation;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Quaternion desiredRotation;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Quaternion rotation;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector3 position;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float idleTimer;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float idleSmooth;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0x10D8200", Offset = "0x10D8200", VA = "0x10D8200")]
	private void Start()
	{
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0x10D8528", Offset = "0x10D8528", VA = "0x10D8528")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0x10D8204", Offset = "0x10D8204", VA = "0x10D8204")]
	public void Init()
	{
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0x10D852C", Offset = "0x10D852C", VA = "0x10D852C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0x10D89B4", Offset = "0x10D89B4", VA = "0x10D89B4")]
	private static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0x10D89E4", Offset = "0x10D89E4", VA = "0x10D89E4")]
	public SmoothCameraOrbit()
	{
	}
}
[Token(Token = "0x2000003")]
public class UnluckFPS : MonoBehaviour
{
	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMesh _textMesh;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float updateInterval;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float accum;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int frames;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float timeleft;

	[Token(Token = "0x6000007")]
	[Address(RVA = "0xED4704", Offset = "0xED4704", VA = "0xED4704")]
	public void Start()
	{
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0xED4770", Offset = "0xED4770", VA = "0xED4770")]
	public void Update()
	{
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0xED4884", Offset = "0xED4884", VA = "0xED4884")]
	public UnluckFPS()
	{
	}
}
[Token(Token = "0x2000004")]
public class UnluckFlagGUI : MonoBehaviour
{
	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] prefabs;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material[] bgrs;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Light[] lights;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject nextButton;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject prevButton;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject bgrButton;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject lightButton;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject texturePreview;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject activeObj;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int counter;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int bCounter;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int lCounter;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TextMesh txt;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public TextMesh debug;

	[Token(Token = "0x600000A")]
	[Address(RVA = "0xED4894", Offset = "0xED4894", VA = "0xED4894")]
	public void Start()
	{
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0xED4F80", Offset = "0xED4F80", VA = "0xED4F80")]
	public void Update()
	{
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0xED512C", Offset = "0xED512C", VA = "0xED512C")]
	public void ButtonUp()
	{
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0xED5438", Offset = "0xED5438", VA = "0xED5438")]
	public void LightChange()
	{
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0xED53CC", Offset = "0xED53CC", VA = "0xED53CC")]
	public void NextBgr()
	{
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0xED535C", Offset = "0xED535C", VA = "0xED535C")]
	public void Next()
	{
	}

	[Token(Token = "0x6000010")]
	[Address(RVA = "0xED5394", Offset = "0xED5394", VA = "0xED5394")]
	public void Prev()
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0xED4C44", Offset = "0xED4C44", VA = "0xED4C44")]
	public void Swap()
	{
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0xED54EC", Offset = "0xED54EC", VA = "0xED54EC")]
	public UnluckFlagGUI()
	{
	}
}
[Token(Token = "0x2000005")]
public class UnluckAnimatedMesh : MonoBehaviour
{
	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshFilter[] meshCache;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public Transform meshCached;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform meshContainerFBX;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float playSpeed;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float playSpeedRandom;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool randomSpeedLoop;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	protected float currentSpeed;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public float currentFrame;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[HideInInspector]
	public int meshCacheCount;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public MeshFilter meshFilter;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public Renderer rendererComponent;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float updateInterval;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool randomRotateX;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	public bool randomRotateY;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
	public bool randomRotateZ;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5F")]
	public bool randomStartFrame;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool randomRotateLoop;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	public bool loop;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	public bool pingPong;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
	public bool playOnAwake;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Vector2 randomStartDelay;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	protected float startDelay;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected float startDelayCounter;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float updateSeed;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	protected bool pingPongToggle;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected float startPlay;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	protected float animateDelay;

	[Token(Token = "0x6000013")]
	[Address(RVA = "0xED33EC", Offset = "0xED33EC", VA = "0xED33EC")]
	public void Start()
	{
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0xED361C", Offset = "0xED361C", VA = "0xED361C")]
	protected void Update()
	{
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0xED36AC", Offset = "0xED36AC", VA = "0xED36AC")]
	public void Play()
	{
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0xED37F4", Offset = "0xED37F4", VA = "0xED37F4")]
	public void RandomRotate()
	{
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0xED35C8", Offset = "0xED35C8", VA = "0xED35C8")]
	public void GetRequiredComponents()
	{
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0xED37B4", Offset = "0xED37B4", VA = "0xED37B4")]
	public void RandomizePlaySpeed()
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0xED3918", Offset = "0xED3918", VA = "0xED3918")]
	public void FillCacheArray()
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0xED3508", Offset = "0xED3508", VA = "0xED3508")]
	public void CheckIfMeshHasChanged()
	{
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0xED3AE4", Offset = "0xED3AE4", VA = "0xED3AE4", Slot = "4")]
	public virtual void AnimatedMesh()
	{
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0xED3C90", Offset = "0xED3C90", VA = "0xED3C90")]
	public bool PingPongFrame()
	{
		return default(bool);
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0xED3D00", Offset = "0xED3D00", VA = "0xED3D00")]
	public bool NextFrame()
	{
		return default(bool);
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0xED3D7C", Offset = "0xED3D7C", VA = "0xED3D7C")]
	public void RandomizePropertiesAfterLoop()
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0xED3BA4", Offset = "0xED3BA4", VA = "0xED3BA4")]
	public void Animate()
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0xED3DDC", Offset = "0xED3DDC", VA = "0xED3DDC")]
	public UnluckAnimatedMesh()
	{
	}
}
[Token(Token = "0x2000006")]
public class UnluckAnimatedMeshInterpolated : UnluckAnimatedMesh
{
	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float prevFrame;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3[] vertices;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3[] verticesNext;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Vector3[] verticesOut;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3[] normals;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Vector3[] normalsNext;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3[] normalsOut;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Vector4[] tangents;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Vector4[] tangentsNext;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Vector4[] tangentsOut;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool play;

	[Token(Token = "0x6000021")]
	[Address(RVA = "0xED3E0C", Offset = "0xED3E0C", VA = "0xED3E0C", Slot = "4")]
	public override void AnimatedMesh()
	{
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0xED3E18", Offset = "0xED3E18", VA = "0xED3E18")]
	protected new void Update()
	{
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0xED42E0", Offset = "0xED42E0", VA = "0xED42E0")]
	public new bool PingPongFrame()
	{
		return default(bool);
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0xED4370", Offset = "0xED4370", VA = "0xED4370")]
	public new bool NextFrame()
	{
		return default(bool);
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0xED3E94", Offset = "0xED3E94", VA = "0xED3E94")]
	public new void Animate()
	{
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0xED4408", Offset = "0xED4408", VA = "0xED4408")]
	private void Lerp(float delta)
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0xED46CC", Offset = "0xED46CC", VA = "0xED46CC")]
	public UnluckAnimatedMeshInterpolated()
	{
	}
}
[Token(Token = "0x2000007")]
public class AudioInsideOutside : MonoBehaviour
{
	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PlaneBody planeBody;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip insideClip;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip outsideClip;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float time;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool inside;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool restartAudio;

	[Token(Token = "0x6000028")]
	[Address(RVA = "0xC19AD8", Offset = "0xC19AD8", VA = "0xC19AD8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0xC19B60", Offset = "0xC19B60", VA = "0xC19B60")]
	private void Update()
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0xC19CCC", Offset = "0xC19CCC", VA = "0xC19CCC")]
	private void SetInside()
	{
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0xC19D1C", Offset = "0xC19D1C", VA = "0xC19D1C")]
	private void SetOutside()
	{
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0xC19D68", Offset = "0xC19D68", VA = "0xC19D68")]
	public AudioInsideOutside()
	{
	}
}
[Token(Token = "0x2000008")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x917748", Offset = "0x917748")]
public class BHapticClips : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000009")]
	public class Face
	{
		[Token(Token = "0x4000060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FileHapticClip explosionFar;

		[Token(Token = "0x4000061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FileHapticClip explosionNear;

		[Token(Token = "0x6000039")]
		[Address(RVA = "0xBDB60C", Offset = "0xBDB60C", VA = "0xBDB60C")]
		public Face()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200000A")]
	public class Arm
	{
		[Token(Token = "0x4000062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ArmsHapticClip shot;

		[Token(Token = "0x4000063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ArmsHapticClip accelerate;

		[Token(Token = "0x4000064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ArmsHapticClip reload;

		[Token(Token = "0x4000065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ArmsHapticClip shock;

		[Token(Token = "0x600003A")]
		[Address(RVA = "0xBDB604", Offset = "0xBDB604", VA = "0xBDB604")]
		public Arm()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200000B")]
	public class Vest
	{
		[Token(Token = "0x4000066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FileHapticClip explosionBelow;

		[Token(Token = "0x4000067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FileHapticClip explosionNear;

		[Token(Token = "0x4000068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FileHapticClip damageFront;

		[Token(Token = "0x4000069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public FileHapticClip damageBack;

		[Token(Token = "0x400006A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public FileHapticClip damageLeft;

		[Token(Token = "0x400006B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public FileHapticClip damageRight;

		[Token(Token = "0x400006C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public FileHapticClip heartBeat;

		[Token(Token = "0x400006D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public FileHapticClip heartBeatFast;

		[Token(Token = "0x400006E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public FileHapticClip planeAcceleration;

		[Token(Token = "0x400006F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public FileHapticClip planeCrash;

		[Token(Token = "0x4000070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public FileHapticClip planeDriveFast;

		[Token(Token = "0x4000071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public FileHapticClip planeDriveSlow;

		[Token(Token = "0x4000072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public FileHapticClip planeLanding;

		[Token(Token = "0x4000073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public FileHapticClip recoil;

		[Token(Token = "0x4000074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public FileHapticClip recoilLeft;

		[Token(Token = "0x4000075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public FileHapticClip recoilRight;

		[Token(Token = "0x4000076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public FileHapticClip lightCannon;

		[Token(Token = "0x4000077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public FileHapticClip cannon20mm;

		[Token(Token = "0x4000078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public FileHapticClip flakHit;

		[Token(Token = "0x4000079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public FileHapticClip launchRocket;

		[Token(Token = "0x400007A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public HapticSourceMixer planeTaxing;

		[Token(Token = "0x400007B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[HideInInspector]
		public float planeAccelerationTime;

		[Token(Token = "0x400007C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[HideInInspector]
		public float planeDriveFastTime;

		[Token(Token = "0x400007D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[HideInInspector]
		public float planeDriveSlowTime;

		[Token(Token = "0x400007E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[HideInInspector]
		public float heartBeatTime;

		[Token(Token = "0x400007F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[HideInInspector]
		public float heartBeatFastTime;

		[Token(Token = "0x600003B")]
		[Address(RVA = "0xBDB614", Offset = "0xBDB614", VA = "0xBDB614")]
		public void Init()
		{
		}

		[Token(Token = "0x600003C")]
		[Address(RVA = "0xBDB66C", Offset = "0xBDB66C", VA = "0xBDB66C")]
		private float GetTime(FileHapticClip clip)
		{
			return default(float);
		}

		[Token(Token = "0x600003D")]
		[Address(RVA = "0xBDB758", Offset = "0xBDB758", VA = "0xBDB758")]
		public Vest()
		{
		}
	}

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool isEnabled;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static BHapticClips instance;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Face face;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Arm arm;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vest vest;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static float heartBeatCheckTime;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static float lastHP;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static int heartBeatsLeft;

	[Token(Token = "0x17000001")]
	public static BHapticClips Instance
	{
		[Token(Token = "0x600002D")]
		[Address(RVA = "0xC1A484", Offset = "0xC1A484", VA = "0xC1A484")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0xC1A5A4", Offset = "0xC1A5A4", VA = "0xC1A5A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0xC1A8F0", Offset = "0xC1A8F0", VA = "0xC1A8F0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0xC1A848", Offset = "0xC1A848", VA = "0xC1A848")]
	private static void DataLoaded()
	{
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0xC1AA54", Offset = "0xC1AA54", VA = "0xC1AA54")]
	private static void SettingsChanged(eCheck i, bool b)
	{
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0xC1AAD4", Offset = "0xC1AAD4", VA = "0xC1AAD4")]
	public static void ProcessHeartBeat(float nHP)
	{
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0xC1AD18", Offset = "0xC1AD18", VA = "0xC1AD18")]
	public static void ProcessPlaneTaxing()
	{
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0xC1AF00", Offset = "0xC1AF00", VA = "0xC1AF00")]
	public static void HandleExplosion(Vector3 explosionPosition, eFX fxType = eFX.none)
	{
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0xC1B1F0", Offset = "0xC1B1F0", VA = "0xC1B1F0")]
	private static float GetFXIntensity(eFX fx)
	{
		return default(float);
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0xC1B214", Offset = "0xC1B214", VA = "0xC1B214")]
	public static void HandleGunShot(HandType hand)
	{
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0xC1B398", Offset = "0xC1B398", VA = "0xC1B398")]
	public BHapticClips()
	{
	}
}
[Token(Token = "0x200000C")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x91775C", Offset = "0x91775C")]
public class BhapticsConfig : ScriptableObject
{
	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x91A3C4", Offset = "0x91A3C4")]
	public bool launchPlayerIfNotRunning;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x91A3FC", Offset = "0x91A3FC")]
	public BhapticsAndroidManager AndroidManagerPrefab;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91A434", Offset = "0x91A434")]
	public bool UseOnlyBackgroundMode;

	[Token(Token = "0x600003E")]
	[Address(RVA = "0xC20544", Offset = "0xC20544", VA = "0xC20544")]
	public BhapticsConfig()
	{
	}
}
[Token(Token = "0x200000D")]
public class BhapticsLogger
{
	[Token(Token = "0x200000E")]
	public enum LogLevel
	{
		[Token(Token = "0x4000085")]
		Debug,
		[Token(Token = "0x4000086")]
		Info,
		[Token(Token = "0x4000087")]
		Error
	}

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LogLevel level;

	[Token(Token = "0x600003F")]
	[Address(RVA = "0xC20A9C", Offset = "0xC20A9C", VA = "0xC20A9C")]
	public static void LogDebug(string format, params object[] args)
	{
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0xC20B88", Offset = "0xC20B88", VA = "0xC20B88")]
	public static void LogInfo(string format, params object[] args)
	{
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0xC20C78", Offset = "0xC20C78", VA = "0xC20C78")]
	public static void LogError(string format, params object[] args)
	{
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0xC20D18", Offset = "0xC20D18", VA = "0xC20D18")]
	public BhapticsLogger()
	{
	}
}
[Token(Token = "0x200000F")]
public class BhapticsManager
{
	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IHaptic Haptic;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool Init;

	[Token(Token = "0x6000044")]
	[Address(RVA = "0xC1823C", Offset = "0xC1823C", VA = "0xC1823C")]
	public static IHaptic GetHaptic()
	{
		return null;
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0xC181E4", Offset = "0xC181E4", VA = "0xC181E4")]
	public static void Initialize()
	{
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0xC20D70", Offset = "0xC20D70", VA = "0xC20D70")]
	public static void Dispose()
	{
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0xC20FF0", Offset = "0xC20FF0", VA = "0xC20FF0")]
	public BhapticsManager()
	{
	}
}
[Token(Token = "0x2000010")]
public class BhapticsVisualizer : MonoBehaviour
{
	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private VisualFeedback[] visualFeedback;

	[Token(Token = "0x6000049")]
	[Address(RVA = "0xC215B4", Offset = "0xC215B4", VA = "0xC215B4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0xC21608", Offset = "0xC21608", VA = "0xC21608")]
	private void Update()
	{
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0xC217AC", Offset = "0xC217AC", VA = "0xC217AC")]
	public BhapticsVisualizer()
	{
	}
}
[Token(Token = "0x2000011")]
public class Bhaptics_Setup : MonoBehaviour
{
	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public BhapticsConfig Config;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Bhaptics_Setup instance;

	[Token(Token = "0x600004C")]
	[Address(RVA = "0xC217B4", Offset = "0xC217B4", VA = "0xC217B4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0xC21A30", Offset = "0xC21A30", VA = "0xC21A30")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0xC218A0", Offset = "0xC218A0", VA = "0xC218A0")]
	private void Initialize()
	{
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0xC21A88", Offset = "0xC21A88", VA = "0xC21A88")]
	public Bhaptics_Setup()
	{
	}
}
[Token(Token = "0x2000012")]
public class ExtendEngineOverheat : MonoBehaviour
{
	[Token(Token = "0x2000013")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9177B0", Offset = "0x9177B0")]
	private sealed class <Extend>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400008D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400008E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000002")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000056")]
			[Address(RVA = "0xBE89C8", Offset = "0xBE89C8", VA = "0xBE89C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000003")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000058")]
			[Address(RVA = "0xBE8A10", Offset = "0xBE8A10", VA = "0xBE8A10", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000053")]
		[Address(RVA = "0xBE87D4", Offset = "0xBE87D4", VA = "0xBE87D4")]
		[DebuggerHidden]
		public <Extend>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6000054")]
		[Address(RVA = "0xBE8800", Offset = "0xBE8800", VA = "0xBE8800", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000055")]
		[Address(RVA = "0xBE8804", Offset = "0xBE8804", VA = "0xBE8804", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000057")]
		[Address(RVA = "0xBE89D0", Offset = "0xBE89D0", VA = "0xBE89D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0x12FA0A8", Offset = "0x12FA0A8", VA = "0x12FA0A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0x12FA0D4", Offset = "0x12FA0D4", VA = "0x12FA0D4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92361C", Offset = "0x92361C")]
	private IEnumerator Extend()
	{
		return null;
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0x12FA130", Offset = "0x12FA130", VA = "0x12FA130")]
	public ExtendEngineOverheat()
	{
	}
}
[Token(Token = "0x2000014")]
public class Spinner : MonoBehaviour
{
	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RectTransform Progress;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float RotationSpeed;

	[Token(Token = "0x6000059")]
	[Address(RVA = "0x10E0148", Offset = "0x10E0148", VA = "0x10E0148")]
	private void Update()
	{
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0x10E0194", Offset = "0x10E0194", VA = "0x10E0194")]
	public Spinner()
	{
	}
}
[Token(Token = "0x2000015")]
public class VolumeAnimator : AnimationCurveAnimator, IPointerExitHandler, IEventSystemHandler
{
	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LayoutElement Target;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public RectTransform Transform;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Selectable Selectable;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool isEntered;

	[Token(Token = "0x600005B")]
	[Address(RVA = "0xE20F60", Offset = "0xE20F60", VA = "0xE20F60")]
	private void Start()
	{
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0xE21028", Offset = "0xE21028", VA = "0xE21028", Slot = "10")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0xE210E4", Offset = "0xE210E4", VA = "0xE210E4", Slot = "6")]
	protected override void InStarting()
	{
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0xE21104", Offset = "0xE21104", VA = "0xE21104", Slot = "8")]
	protected override void InFinished()
	{
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0xE21110", Offset = "0xE21110", VA = "0xE21110", Slot = "9")]
	protected override void OutFinished()
	{
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0xE21130", Offset = "0xE21130", VA = "0xE21130")]
	public VolumeAnimator()
	{
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0xE21138", Offset = "0xE21138", VA = "0xE21138")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9236CC", Offset = "0x9236CC")]
	private void <Start>b__4_0()
	{
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0xE21208", Offset = "0xE21208", VA = "0xE21208")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9236DC", Offset = "0x9236DC")]
	private void <Start>b__4_1(float x)
	{
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0xE2122C", Offset = "0xE2122C", VA = "0xE2122C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9236EC", Offset = "0x9236EC")]
	private void <OnPointerExit>b__5_0(float x)
	{
	}
}
[Token(Token = "0x2000016")]
public class PointerRouter : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler
{
	[Token(Token = "0x14000001")]
	public event Action OnEnter
	{
		[Token(Token = "0x6000064")]
		[Address(RVA = "0x117C8A8", Offset = "0x117C8A8", VA = "0x117C8A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9236FC", Offset = "0x9236FC")]
		add
		{
		}
		[Token(Token = "0x6000065")]
		[Address(RVA = "0x117C948", Offset = "0x117C948", VA = "0x117C948")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92370C", Offset = "0x92370C")]
		remove
		{
		}
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0x117C9E8", Offset = "0x117C9E8", VA = "0x117C9E8", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0x117C9FC", Offset = "0x117C9FC", VA = "0x117C9FC")]
	public PointerRouter()
	{
	}
}
[Token(Token = "0x2000017")]
[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x9177C0", Offset = "0x9177C0")]
public class DrawIfAttribute : PropertyAttribute
{
	[Token(Token = "0x2000018")]
	public enum DisablingType
	{
		[Token(Token = "0x400009A")]
		ReadOnly = 2,
		[Token(Token = "0x400009B")]
		DontDraw
	}

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91A48C", Offset = "0x91A48C")]
	private string <comparedPropertyName>k__BackingField;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91A49C", Offset = "0x91A49C")]
	private object <comparedValue>k__BackingField;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91A4AC", Offset = "0x91A4AC")]
	private DisablingType <disablingType>k__BackingField;

	[Token(Token = "0x17000004")]
	public string comparedPropertyName
	{
		[Token(Token = "0x6000068")]
		[Address(RVA = "0xD978A4", Offset = "0xD978A4", VA = "0xD978A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92371C", Offset = "0x92371C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000069")]
		[Address(RVA = "0xD978AC", Offset = "0xD978AC", VA = "0xD978AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92372C", Offset = "0x92372C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000005")]
	public object comparedValue
	{
		[Token(Token = "0x600006A")]
		[Address(RVA = "0xD978B4", Offset = "0xD978B4", VA = "0xD978B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92373C", Offset = "0x92373C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600006B")]
		[Address(RVA = "0xD978BC", Offset = "0xD978BC", VA = "0xD978BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92374C", Offset = "0x92374C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000006")]
	public DisablingType disablingType
	{
		[Token(Token = "0x600006C")]
		[Address(RVA = "0xD978C4", Offset = "0xD978C4", VA = "0xD978C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92375C", Offset = "0x92375C")]
		get
		{
			return default(DisablingType);
		}
		[Token(Token = "0x600006D")]
		[Address(RVA = "0xD978CC", Offset = "0xD978CC", VA = "0xD978CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92376C", Offset = "0x92376C")]
		private set
		{
		}
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0xD978D4", Offset = "0xD978D4", VA = "0xD978D4")]
	public DrawIfAttribute(string comparedPropertyName, object comparedValue, DisablingType disablingType = DisablingType.DontDraw)
	{
	}
}
[Token(Token = "0x2000019")]
public class PlayerPrefsX
{
	[Token(Token = "0x200001A")]
	private enum ArrayType
	{
		[Token(Token = "0x40000A1")]
		Float,
		[Token(Token = "0x40000A2")]
		Int32,
		[Token(Token = "0x40000A3")]
		Bool,
		[Token(Token = "0x40000A4")]
		String,
		[Token(Token = "0x40000A5")]
		Vector2,
		[Token(Token = "0x40000A6")]
		Vector3,
		[Token(Token = "0x40000A7")]
		Quaternion,
		[Token(Token = "0x40000A8")]
		Color
	}

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int endianDiff1;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int endianDiff2;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int idx;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static byte[] byteBlock;

	[Token(Token = "0x600006F")]
	[Address(RVA = "0x10D3E74", Offset = "0x10D3E74", VA = "0x10D3E74")]
	public static bool SetBool(string name, bool value)
	{
		return default(bool);
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0x10D3F10", Offset = "0x10D3F10", VA = "0x10D3F10")]
	public static bool GetBool(string name)
	{
		return default(bool);
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0x10D3F30", Offset = "0x10D3F30", VA = "0x10D3F30")]
	public static bool GetBool(string name, bool defaultValue)
	{
		return default(bool);
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0x10D3F54", Offset = "0x10D3F54", VA = "0x10D3F54")]
	public static long GetLong(string key, long defaultValue)
	{
		return default(long);
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0x10D4014", Offset = "0x10D4014", VA = "0x10D4014")]
	public static long GetLong(string key)
	{
		return default(long);
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0x10D4004", Offset = "0x10D4004", VA = "0x10D4004")]
	private static void SplitLong(long input, out int lowBits, out int highBits)
	{
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0x10D40AC", Offset = "0x10D40AC", VA = "0x10D40AC")]
	public static void SetLong(string key, long value)
	{
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0x10D4148", Offset = "0x10D4148", VA = "0x10D4148")]
	public static bool SetVector2(string key, Vector2 vector)
	{
		return default(bool);
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0x10D429C", Offset = "0x10D429C", VA = "0x10D429C")]
	private static Vector2 GetVector2(string key)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0x10D43F4", Offset = "0x10D43F4", VA = "0x10D43F4")]
	public static Vector2 GetVector2(string key, Vector2 defaultValue)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0x10D4444", Offset = "0x10D4444", VA = "0x10D4444")]
	public static bool SetVector3(string key, Vector3 vector)
	{
		return default(bool);
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0x10D44F0", Offset = "0x10D44F0", VA = "0x10D44F0")]
	public static Vector3 GetVector3(string key)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0x10D452C", Offset = "0x10D452C", VA = "0x10D452C")]
	public static Vector3 GetVector3(string key, Vector3 defaultValue)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0x10D4590", Offset = "0x10D4590", VA = "0x10D4590")]
	public static bool SetQuaternion(string key, Quaternion vector)
	{
		return default(bool);
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0x10D464C", Offset = "0x10D464C", VA = "0x10D464C")]
	public static Quaternion GetQuaternion(string key)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0x10D46B0", Offset = "0x10D46B0", VA = "0x10D46B0")]
	public static Quaternion GetQuaternion(string key, Quaternion defaultValue)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0x10D4720", Offset = "0x10D4720", VA = "0x10D4720")]
	public static bool SetColor(string key, Color color)
	{
		return default(bool);
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0x10D47DC", Offset = "0x10D47DC", VA = "0x10D47DC")]
	public static Color GetColor(string key)
	{
		return default(Color);
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0x10D4848", Offset = "0x10D4848", VA = "0x10D4848")]
	public static Color GetColor(string key, Color defaultValue)
	{
		return default(Color);
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0x10D48B8", Offset = "0x10D48B8", VA = "0x10D48B8")]
	public static bool SetBoolArray(string key, bool[] boolArray)
	{
		return default(bool);
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0x10D4CA8", Offset = "0x10D4CA8", VA = "0x10D4CA8")]
	public static bool[] GetBoolArray(string key)
	{
		return null;
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0x10D4F64", Offset = "0x10D4F64", VA = "0x10D4F64")]
	public static bool[] GetBoolArray(string key, bool defaultValue, int defaultSize)
	{
		return null;
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0x10D5030", Offset = "0x10D5030", VA = "0x10D5030")]
	public static bool SetStringArray(string key, string[] stringArray)
	{
		return default(bool);
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0x10D5348", Offset = "0x10D5348", VA = "0x10D5348")]
	public static string[] GetStringArray(string key)
	{
		return null;
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0x10D5614", Offset = "0x10D5614", VA = "0x10D5614")]
	public static string[] GetStringArray(string key, string defaultValue, int defaultSize)
	{
		return null;
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0x10D5714", Offset = "0x10D5714", VA = "0x10D5714")]
	public static bool SetIntArray(string key, int[] intArray)
	{
		return default(bool);
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0x10D41DC", Offset = "0x10D41DC", VA = "0x10D41DC")]
	public static bool SetFloatArray(string key, float[] floatArray)
	{
		return default(bool);
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0x10D57D4", Offset = "0x10D57D4", VA = "0x10D57D4")]
	public static bool SetVector2Array(string key, Vector2[] vector2Array)
	{
		return default(bool);
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0x10D5894", Offset = "0x10D5894", VA = "0x10D5894")]
	public static bool SetVector3Array(string key, Vector3[] vector3Array)
	{
		return default(bool);
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0x10D5954", Offset = "0x10D5954", VA = "0x10D5954")]
	public static bool SetQuaternionArray(string key, Quaternion[] quaternionArray)
	{
		return default(bool);
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0x10D5A14", Offset = "0x10D5A14", VA = "0x10D5A14")]
	public static bool SetColorArray(string key, Color[] colorArray)
	{
		return default(bool);
	}

	[Token(Token = "0x600008E")]
	private static bool SetValue<T>(string key, T array, ArrayType arrayType, int vectorNumber, Action<T, byte[], int> convert) where T : IList
	{
		return default(bool);
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0x10D5AD4", Offset = "0x10D5AD4", VA = "0x10D5AD4")]
	private static void ConvertFromInt(int[] array, byte[] bytes, int i)
	{
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0x10D5B0C", Offset = "0x10D5B0C", VA = "0x10D5B0C")]
	private static void ConvertFromFloat(float[] array, byte[] bytes, int i)
	{
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0x10D5BE0", Offset = "0x10D5BE0", VA = "0x10D5BE0")]
	private static void ConvertFromVector2(Vector2[] array, byte[] bytes, int i)
	{
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0x10D5C58", Offset = "0x10D5C58", VA = "0x10D5C58")]
	private static void ConvertFromVector3(Vector3[] array, byte[] bytes, int i)
	{
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0x10D5CF8", Offset = "0x10D5CF8", VA = "0x10D5CF8")]
	private static void ConvertFromQuaternion(Quaternion[] array, byte[] bytes, int i)
	{
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0x10D5DAC", Offset = "0x10D5DAC", VA = "0x10D5DAC")]
	private static void ConvertFromColor(Color[] array, byte[] bytes, int i)
	{
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0x10D5E60", Offset = "0x10D5E60", VA = "0x10D5E60")]
	public static int[] GetIntArray(string key)
	{
		return null;
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0x10D5F80", Offset = "0x10D5F80", VA = "0x10D5F80")]
	public static int[] GetIntArray(string key, int defaultValue, int defaultSize)
	{
		return null;
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0x10D42D4", Offset = "0x10D42D4", VA = "0x10D42D4")]
	public static float[] GetFloatArray(string key)
	{
		return null;
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0x10D6048", Offset = "0x10D6048", VA = "0x10D6048")]
	public static float[] GetFloatArray(string key, float defaultValue, int defaultSize)
	{
		return null;
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0x10D611C", Offset = "0x10D611C", VA = "0x10D611C")]
	public static Vector2[] GetVector2Array(string key)
	{
		return null;
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0x10D623C", Offset = "0x10D623C", VA = "0x10D623C")]
	public static Vector2[] GetVector2Array(string key, Vector2 defaultValue, int defaultSize)
	{
		return null;
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0x10D6318", Offset = "0x10D6318", VA = "0x10D6318")]
	public static Vector3[] GetVector3Array(string key)
	{
		return null;
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0x10D6438", Offset = "0x10D6438", VA = "0x10D6438")]
	public static Vector3[] GetVector3Array(string key, Vector3 defaultValue, int defaultSize)
	{
		return null;
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0x10D6524", Offset = "0x10D6524", VA = "0x10D6524")]
	public static Quaternion[] GetQuaternionArray(string key)
	{
		return null;
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0x10D6644", Offset = "0x10D6644", VA = "0x10D6644")]
	public static Quaternion[] GetQuaternionArray(string key, Quaternion defaultValue, int defaultSize)
	{
		return null;
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0x10D6738", Offset = "0x10D6738", VA = "0x10D6738")]
	public static Color[] GetColorArray(string key)
	{
		return null;
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0x10D6858", Offset = "0x10D6858", VA = "0x10D6858")]
	public static Color[] GetColorArray(string key, Color defaultValue, int defaultSize)
	{
		return null;
	}

	[Token(Token = "0x60000A1")]
	private static void GetValue<T>(string key, T list, ArrayType arrayType, int vectorNumber, Action<T, byte[]> convert) where T : IList
	{
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0x10D694C", Offset = "0x10D694C", VA = "0x10D694C")]
	private static void ConvertToInt(List<int> list, byte[] bytes)
	{
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0x10D69B8", Offset = "0x10D69B8", VA = "0x10D69B8")]
	private static void ConvertToFloat(List<float> list, byte[] bytes)
	{
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0x10D6AB0", Offset = "0x10D6AB0", VA = "0x10D6AB0")]
	private static void ConvertToVector2(List<Vector2> list, byte[] bytes)
	{
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0x10D6B34", Offset = "0x10D6B34", VA = "0x10D6B34")]
	private static void ConvertToVector3(List<Vector3> list, byte[] bytes)
	{
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0x10D6BC8", Offset = "0x10D6BC8", VA = "0x10D6BC8")]
	private static void ConvertToQuaternion(List<Quaternion> list, byte[] bytes)
	{
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0x10D6C98", Offset = "0x10D6C98", VA = "0x10D6C98")]
	private static void ConvertToColor(List<Color> list, byte[] bytes)
	{
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0x10D6D68", Offset = "0x10D6D68", VA = "0x10D6D68")]
	public static void ShowArrayType(string key)
	{
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0x10D4A28", Offset = "0x10D4A28", VA = "0x10D4A28")]
	private static void Initialize()
	{
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0x10D4BA8", Offset = "0x10D4BA8", VA = "0x10D4BA8")]
	private static bool SaveBytes(string key, byte[] bytes)
	{
		return default(bool);
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0x10D5B48", Offset = "0x10D5B48", VA = "0x10D5B48")]
	private static void ConvertFloatToBytes(float f, byte[] bytes)
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0x10D6A20", Offset = "0x10D6A20", VA = "0x10D6A20")]
	private static float ConvertBytesToFloat(byte[] bytes)
	{
		return default(float);
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0x10D4B10", Offset = "0x10D4B10", VA = "0x10D4B10")]
	private static void ConvertInt32ToBytes(int i, byte[] bytes)
	{
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0x10D4ED4", Offset = "0x10D4ED4", VA = "0x10D4ED4")]
	private static int ConvertBytesToInt32(byte[] bytes)
	{
		return default(int);
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0x10D6EE0", Offset = "0x10D6EE0", VA = "0x10D6EE0")]
	private static void ConvertTo4Bytes(byte[] bytes)
	{
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0x10D706C", Offset = "0x10D706C", VA = "0x10D706C")]
	private static void ConvertFrom4Bytes(byte[] bytes)
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0x10D71F8", Offset = "0x10D71F8", VA = "0x10D71F8")]
	public PlayerPrefsX()
	{
	}
}
[Token(Token = "0x200001B")]
public class DemoCustomPlayerScript : MonoBehaviour
{
	[Token(Token = "0x60000B2")]
	[Address(RVA = "0xD9390C", Offset = "0xD9390C", VA = "0xD9390C")]
	public void Play(string path)
	{
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0xD93980", Offset = "0xD93980", VA = "0xD93980")]
	public DemoCustomPlayerScript()
	{
	}
}
[Token(Token = "0x200001C")]
public class ReactingLights : MonoBehaviour
{
	[Token(Token = "0x200001D")]
	public enum VideoSide
	{
		[Token(Token = "0x40000B0")]
		up,
		[Token(Token = "0x40000B1")]
		left,
		[Token(Token = "0x40000B2")]
		right,
		[Token(Token = "0x40000B3")]
		down,
		[Token(Token = "0x40000B4")]
		center
	}

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VideoPlayer videoSource;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Light[] lights;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color averageColor;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Texture2D tex;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public VideoSide videoSide;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool createTexture;

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0x118A5BC", Offset = "0x118A5BC", VA = "0x118A5BC")]
	private void Start()
	{
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0x118A664", Offset = "0x118A664", VA = "0x118A664")]
	private void NewFrame(VideoPlayer vplayer, long frame)
	{
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0x118ACA4", Offset = "0x118ACA4", VA = "0x118ACA4")]
	private Color32 AverageColorFromTexture(Texture2D tex)
	{
		return default(Color32);
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0x118AD88", Offset = "0x118AD88", VA = "0x118AD88")]
	public ReactingLights()
	{
	}
}
[Token(Token = "0x200001E")]
public static class UISetExtensions
{
	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly MethodInfo toggleSetMethod;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly MethodInfo sliderSetMethod;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly MethodInfo scrollbarSetMethod;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly FieldInfo dropdownValueField;

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0xED1CA0", Offset = "0xED1CA0", VA = "0xED1CA0")]
	static UISetExtensions()
	{
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0xED1F1C", Offset = "0xED1F1C", VA = "0xED1F1C")]
	public static void Set(this Toggle instance, bool value, bool sendCallback = false)
	{
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0xED208C", Offset = "0xED208C", VA = "0xED208C")]
	public static void Set(this Slider instance, float value, bool sendCallback = false)
	{
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0xED2218", Offset = "0xED2218", VA = "0xED2218")]
	public static void Set(this Scrollbar instance, float value, bool sendCallback = false)
	{
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0xED23A4", Offset = "0xED23A4", VA = "0xED23A4")]
	public static void Set(this Dropdown instance, int value)
	{
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0xED1E00", Offset = "0xED1E00", VA = "0xED1E00")]
	private static MethodInfo FindSetMethod(Type objectType)
	{
		return null;
	}
}
[Token(Token = "0x200001F")]
public class LoadVideoTitleToText : MonoBehaviour
{
	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMesh textMesh;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public YoutubePlayer player;

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0x113EBC4", Offset = "0x113EBC4", VA = "0x113EBC4")]
	public void SetVideoTitle()
	{
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0x113EBF0", Offset = "0x113EBF0", VA = "0x113EBF0")]
	public LoadVideoTitleToText()
	{
	}
}
[Token(Token = "0x2000020")]
public class PauseIcon : MonoBehaviour
{
	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public YoutubePlayer p;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image playImage;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image pauseImage;

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0x1739F1C", Offset = "0x1739F1C", VA = "0x1739F1C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0x1739FB4", Offset = "0x1739FB4", VA = "0x1739FB4")]
	public PauseIcon()
	{
	}
}
[Token(Token = "0x2000021")]
public class VideoProgressBar : MonoBehaviour, IDragHandler, IEventSystemHandler, IPointerDownHandler
{
	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public YoutubePlayer player;

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0xE1F054", Offset = "0xE1F054", VA = "0xE1F054", Slot = "4")]
	public void OnDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0xE1F070", Offset = "0xE1F070", VA = "0xE1F070", Slot = "5")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0xE1F08C", Offset = "0xE1F08C", VA = "0xE1F08C")]
	public VideoProgressBar()
	{
	}
}
[Token(Token = "0x2000022")]
public class YT_RotateCamera : MonoBehaviour
{
	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speedH;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float speedV;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float yaw;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float pitch;

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0x1263AF8", Offset = "0x1263AF8", VA = "0x1263AF8")]
	private void Update()
	{
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0x1263BC0", Offset = "0x1263BC0", VA = "0x1263BC0")]
	public YT_RotateCamera()
	{
	}
}
[Token(Token = "0x2000023")]
public class VideoPlayerController : MonoBehaviour
{
	[Token(Token = "0x60000C7")]
	[Address(RVA = "0xE1E070", Offset = "0xE1E070", VA = "0xE1E070")]
	public VideoPlayerController()
	{
	}
}
[Token(Token = "0x2000024")]
public class YoutubeDemoScript : MonoBehaviour
{
	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private YoutubePlayer player;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private DemoCustomPlayerScript customPlayer;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private InputField urlInput;

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0x1267E44", Offset = "0x1267E44", VA = "0x1267E44")]
	public void PreLoadTheVideoOnly()
	{
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0x1267F0C", Offset = "0x1267F0C", VA = "0x1267F0C")]
	public void LoadUrlForACustomPlayer()
	{
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0x1268070", Offset = "0x1268070", VA = "0x1268070")]
	public void PlayFromUrlField()
	{
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0x1268100", Offset = "0x1268100", VA = "0x1268100")]
	public void PlayFromUrlFieldStartingAt()
	{
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0x12681A4", Offset = "0x12681A4", VA = "0x12681A4")]
	public void PlayCustomPlaylist()
	{
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0x1268354", Offset = "0x1268354", VA = "0x1268354")]
	public YoutubeDemoScript()
	{
	}
}
[Token(Token = "0x2000025")]
public class YoutubeLogo : MonoBehaviour
{
	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string youtubeurl;

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0x1268730", Offset = "0x1268730", VA = "0x1268730")]
	private void OnMouseDown()
	{
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0x126873C", Offset = "0x126873C", VA = "0x126873C")]
	public YoutubeLogo()
	{
	}
}
[Token(Token = "0x2000026")]
public class YoutubePlayerLivestream : MonoBehaviour
{
	[Token(Token = "0x2000027")]
	private class DownloadUrlResponse
	{
		[Token(Token = "0x40000C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string data;

		[Token(Token = "0x40000CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isValid;

		[Token(Token = "0x40000CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public long httpCode;

		[Token(Token = "0x60000D8")]
		[Address(RVA = "0x11BE604", Offset = "0x11BE604", VA = "0x11BE604")]
		public DownloadUrlResponse()
		{
		}
	}

	[Token(Token = "0x2000028")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x917808", Offset = "0x917808")]
	private sealed class <DownloadYoutubeUrl>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public YoutubePlayerLivestream <>4__this;

		[Token(Token = "0x40000CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string url;

		[Token(Token = "0x40000D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action<string> callback;

		[Token(Token = "0x40000D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string <videoId>5__2;

		[Token(Token = "0x40000D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private UnityWebRequest <request>5__3;

		[Token(Token = "0x17000007")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000DC")]
			[Address(RVA = "0x11BE634", Offset = "0x11BE634", VA = "0x11BE634", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000008")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000DE")]
			[Address(RVA = "0x11BE67C", Offset = "0x11BE67C", VA = "0x11BE67C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000D9")]
		[Address(RVA = "0x11BE1D8", Offset = "0x11BE1D8", VA = "0x11BE1D8")]
		[DebuggerHidden]
		public <DownloadYoutubeUrl>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x60000DA")]
		[Address(RVA = "0x11BE204", Offset = "0x11BE204", VA = "0x11BE204", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000DB")]
		[Address(RVA = "0x11BE208", Offset = "0x11BE208", VA = "0x11BE208", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000DD")]
		[Address(RVA = "0x11BE63C", Offset = "0x11BE63C", VA = "0x11BE63C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000029")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x917818", Offset = "0x917818")]
	private sealed class <GetUrlFromJson>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string _videoID;

		[Token(Token = "0x40000D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string pageSource;

		[Token(Token = "0x40000D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action<string> callback;

		[Token(Token = "0x40000D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private UnityWebRequest <request>5__2;

		[Token(Token = "0x17000009")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000E2")]
			[Address(RVA = "0x11BEFF4", Offset = "0x11BEFF4", VA = "0x11BEFF4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000E4")]
			[Address(RVA = "0x11BF03C", Offset = "0x11BF03C", VA = "0x11BF03C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000DF")]
		[Address(RVA = "0x11BE684", Offset = "0x11BE684", VA = "0x11BE684")]
		[DebuggerHidden]
		public <GetUrlFromJson>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60000E0")]
		[Address(RVA = "0x11BE6B0", Offset = "0x11BE6B0", VA = "0x11BE6B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000E1")]
		[Address(RVA = "0x11BE6B4", Offset = "0x11BE6B4", VA = "0x11BE6B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000E3")]
		[Address(RVA = "0x11BEFFC", Offset = "0x11BEFFC", VA = "0x11BEFFC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string _livestreamUrl;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private DownloadUrlResponse downloadYoutubeUrlResponse;

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0x1269EDC", Offset = "0x1269EDC", VA = "0x1269EDC")]
	private void Start()
	{
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0x1269EE4", Offset = "0x1269EE4", VA = "0x1269EE4")]
	public void GetLivestreamUrl(string url)
	{
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0x1269F94", Offset = "0x1269F94", VA = "0x1269F94")]
	public void StartProcess(Action<string> callback, string url)
	{
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0x126A04C", Offset = "0x126A04C", VA = "0x126A04C")]
	private void OnLiveUrlLoaded(string url)
	{
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0x1269FCC", Offset = "0x1269FCC", VA = "0x1269FCC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9237BC", Offset = "0x9237BC")]
	private IEnumerator DownloadYoutubeUrl(string url, Action<string> callback)
	{
		return null;
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0x126A0F0", Offset = "0x126A0F0", VA = "0x126A0F0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92381C", Offset = "0x92381C")]
	private IEnumerator GetUrlFromJson(Action<string> callback, string _videoID, string pageSource)
	{
		return null;
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0x126A170", Offset = "0x126A170", VA = "0x126A170")]
	public static void WriteLog(string filename, string c)
	{
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0x126A42C", Offset = "0x126A42C", VA = "0x126A42C")]
	public YoutubePlayerLivestream()
	{
	}
}
[Token(Token = "0x200002A")]
public class YoutubeSimplified : MonoBehaviour
{
	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private YoutubePlayer player;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string url;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool autoPlay;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool fullscreen;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private VideoPlayer videoPlayer;

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0x12736E4", Offset = "0x12736E4", VA = "0x12736E4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0x127376C", Offset = "0x127376C", VA = "0x127376C")]
	private void Start()
	{
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0x1273770", Offset = "0x1273770", VA = "0x1273770")]
	public void Play()
	{
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0x12737E8", Offset = "0x12737E8", VA = "0x12737E8")]
	public YoutubeSimplified()
	{
	}
}
[Serializable]
[Token(Token = "0x200002B")]
public class YoutubeTimedEvent
{
	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int time;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool pauseVideo;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent timeEvent;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool called;

	[Token(Token = "0x1700000B")]
	public bool Called
	{
		[Token(Token = "0x60000E9")]
		[Address(RVA = "0x127478C", Offset = "0x127478C", VA = "0x127478C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000EA")]
		[Address(RVA = "0x1274794", Offset = "0x1274794", VA = "0x1274794")]
		set
		{
		}
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0x12747A0", Offset = "0x12747A0", VA = "0x12747A0")]
	public YoutubeTimedEvent()
	{
	}
}
[Serializable]
[Token(Token = "0x200002C")]
public class UrlLoadEvent : UnityEvent<string>
{
	[Token(Token = "0x60000EC")]
	[Address(RVA = "0xED6CE0", Offset = "0xED6CE0", VA = "0xED6CE0")]
	public UrlLoadEvent()
	{
	}
}
[Token(Token = "0x200002D")]
public class ChannelSearchDemo : MonoBehaviour
{
	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private YoutubeAPIManager youtubeapi;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text searchField;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Dropdown mainFilters;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] channelListUI;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject[] videoListUI;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject videoUIResult;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject channelUIResult;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject mainUI;

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0x103D868", Offset = "0x103D868", VA = "0x103D868")]
	private void Start()
	{
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0x103D928", Offset = "0x103D928", VA = "0x103D928")]
	public void SearchChannel()
	{
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0x103DA20", Offset = "0x103DA20", VA = "0x103DA20")]
	private void OnSearchDone(YoutubeChannel[] results)
	{
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0x103DA60", Offset = "0x103DA60", VA = "0x103DA60")]
	private void LoadChannelsOnUI(YoutubeChannel[] videoList)
	{
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0x103DC14", Offset = "0x103DC14", VA = "0x103DC14")]
	public void LoadChannelResult(string channelId)
	{
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0x103DCC8", Offset = "0x103DCC8", VA = "0x103DCC8")]
	private void OnChannelResultLoaded(YoutubeData[] videoList)
	{
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0x103DEC4", Offset = "0x103DEC4", VA = "0x103DEC4")]
	public ChannelSearchDemo()
	{
	}
}
[Token(Token = "0x200002E")]
public class CommentsDemo : MonoBehaviour
{
	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private YoutubeAPIManager youtubeapi;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text videoIdInput;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text commentsTextArea;

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0x1041BD8", Offset = "0x1041BD8", VA = "0x1041BD8")]
	private void Start()
	{
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0x1041C98", Offset = "0x1041C98", VA = "0x1041C98")]
	public void GetComments()
	{
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0x1041D64", Offset = "0x1041D64", VA = "0x1041D64")]
	private void OnFinishLoadingComments(YoutubeComments[] comments)
	{
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0x1041FC8", Offset = "0x1041FC8", VA = "0x1041FC8")]
	public CommentsDemo()
	{
	}
}
[Token(Token = "0x200002F")]
public class IndividualVideoDataDemo : MonoBehaviour
{
	[Token(Token = "0x2000030")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x917828", Offset = "0x917828")]
	private sealed class <DownloadThumb>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string url;

		[Token(Token = "0x40000FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public IndividualVideoDataDemo <>4__this;

		[Token(Token = "0x40000FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UnityWebRequest <request>5__2;

		[Token(Token = "0x1700000C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000101")]
			[Address(RVA = "0xE64604", Offset = "0xE64604", VA = "0xE64604", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000103")]
			[Address(RVA = "0xE6464C", Offset = "0xE6464C", VA = "0xE6464C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000FE")]
		[Address(RVA = "0xE644BC", Offset = "0xE644BC", VA = "0xE644BC")]
		[DebuggerHidden]
		public <DownloadThumb>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x60000FF")]
		[Address(RVA = "0xE644E8", Offset = "0xE644E8", VA = "0xE644E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000100")]
		[Address(RVA = "0xE644EC", Offset = "0xE644EC", VA = "0xE644EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000102")]
		[Address(RVA = "0xE6460C", Offset = "0xE6460C", VA = "0xE6460C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private YoutubeAPIManager youtubeapi;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text videoIdInput;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text UI_title;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text UI_description;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text UI_duration;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text UI_likes;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text UI_dislikes;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text UI_favorites;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Text UI_comments;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Text UI_views;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Image UI_thumbnail;

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0x13AA1E4", Offset = "0x13AA1E4", VA = "0x13AA1E4")]
	private void Start()
	{
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0x13AA2A4", Offset = "0x13AA2A4", VA = "0x13AA2A4")]
	public void GetVideoData()
	{
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0x13AA370", Offset = "0x13AA370", VA = "0x13AA370")]
	private void OnFinishLoadingData(YoutubeData result)
	{
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0x13AA638", Offset = "0x13AA638", VA = "0x13AA638")]
	private void LoadThumbnail(string url)
	{
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0x13AA664", Offset = "0x13AA664", VA = "0x13AA664")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92391C", Offset = "0x92391C")]
	private IEnumerator DownloadThumb(string url)
	{
		return null;
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0x13AA6DC", Offset = "0x13AA6DC", VA = "0x13AA6DC")]
	public IndividualVideoDataDemo()
	{
	}
}
[Token(Token = "0x2000031")]
public class PlaylistDemo : MonoBehaviour
{
	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private YoutubeAPIManager youtubeapi;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text searchField;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public YoutubeVideoUi[] videoListUI;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject videoUIResult;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject mainUI;

	[Token(Token = "0x6000104")]
	[Address(RVA = "0x117C4BC", Offset = "0x117C4BC", VA = "0x117C4BC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0x117C57C", Offset = "0x117C57C", VA = "0x117C57C")]
	public void GetPlaylist()
	{
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0x117C64C", Offset = "0x117C64C", VA = "0x117C64C")]
	private void OnGetPlaylistDone(YoutubePlaylistItems[] results)
	{
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0x117C68C", Offset = "0x117C68C", VA = "0x117C68C")]
	private void LoadVideosOnUI(YoutubePlaylistItems[] videoList)
	{
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0x117C860", Offset = "0x117C860", VA = "0x117C860")]
	public PlaylistDemo()
	{
	}
}
[Token(Token = "0x2000032")]
public class VideoSearchDemo : MonoBehaviour
{
	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private YoutubeAPIManager youtubeapi;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text searchField;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text categoryField;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Toggle categoryFilter;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Dropdown mainFilters;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public YoutubeVideoUi[] videoListUI;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject videoUIResult;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject mainUI;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string customFilter;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string regionCode;

	[Token(Token = "0x6000109")]
	[Address(RVA = "0xE1F094", Offset = "0xE1F094", VA = "0xE1F094")]
	private void Start()
	{
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0xE1F154", Offset = "0xE1F154", VA = "0xE1F154")]
	private void CustomFilterCheck()
	{
	}

	[Token(Token = "0x600010B")]
	[Address(RVA = "0xE1F224", Offset = "0xE1F224", VA = "0xE1F224")]
	public void GetTrendingVideos()
	{
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0xE1F2D8", Offset = "0xE1F2D8", VA = "0xE1F2D8")]
	public void Search()
	{
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0xE1F478", Offset = "0xE1F478", VA = "0xE1F478")]
	public void SearchByLocation(string location)
	{
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0xE1F634", Offset = "0xE1F634", VA = "0xE1F634")]
	private void OnSearchDone(YoutubeData[] results)
	{
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0xE1F674", Offset = "0xE1F674", VA = "0xE1F674")]
	private void LoadVideosOnUI(YoutubeData[] videoList)
	{
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0xE1F8BC", Offset = "0xE1F8BC", VA = "0xE1F8BC")]
	public VideoSearchDemo()
	{
	}
}
[Token(Token = "0x2000033")]
public class YoutubeApiGetUnlimitedVideos : MonoBehaviour
{
	[Token(Token = "0x2000034")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x917838", Offset = "0x917838")]
	private sealed class <YoutubeSearch>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string keyword;

		[Token(Token = "0x4000114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public YoutubeApiGetUnlimitedVideos <>4__this;

		[Token(Token = "0x4000115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UnityWebRequest <request>5__2;

		[Token(Token = "0x1700000E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000119")]
			[Address(RVA = "0x11BDE84", Offset = "0x11BDE84", VA = "0x11BDE84", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600011B")]
			[Address(RVA = "0x11BDECC", Offset = "0x11BDECC", VA = "0x11BDECC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000116")]
		[Address(RVA = "0x11BD88C", Offset = "0x11BD88C", VA = "0x11BD88C")]
		[DebuggerHidden]
		public <YoutubeSearch>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000117")]
		[Address(RVA = "0x11BD8B8", Offset = "0x11BD8B8", VA = "0x11BD8B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000118")]
		[Address(RVA = "0x11BD8BC", Offset = "0x11BD8BC", VA = "0x11BD8BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600011A")]
		[Address(RVA = "0x11BDE8C", Offset = "0x11BDE8C", VA = "0x11BDE8C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000035")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x917848", Offset = "0x917848")]
	private sealed class <YoutubeGetNextPage>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public YoutubeApiGetUnlimitedVideos <>4__this;

		[Token(Token = "0x4000119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string pageToken;

		[Token(Token = "0x400011A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UnityWebRequest <request>5__2;

		[Token(Token = "0x17000010")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600011F")]
			[Address(RVA = "0x11BD83C", Offset = "0x11BD83C", VA = "0x11BD83C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000011")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000121")]
			[Address(RVA = "0x11BD884", Offset = "0x11BD884", VA = "0x11BD884", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600011C")]
		[Address(RVA = "0x11BD288", Offset = "0x11BD288", VA = "0x11BD288")]
		[DebuggerHidden]
		public <YoutubeGetNextPage>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x600011D")]
		[Address(RVA = "0x11BD2B4", Offset = "0x11BD2B4", VA = "0x11BD2B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600011E")]
		[Address(RVA = "0x11BD2B8", Offset = "0x11BD2B8", VA = "0x11BD2B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000120")]
		[Address(RVA = "0x11BD844", Offset = "0x11BD844", VA = "0x11BD844", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string APIKey;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string searchKeyword;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private List<YoutubeData> searchResults;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int currentResults;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int maxResult;

	[Token(Token = "0x6000111")]
	[Address(RVA = "0x1267108", Offset = "0x1267108", VA = "0x1267108")]
	private void Start()
	{
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0x12671F0", Offset = "0x12671F0", VA = "0x12671F0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9239CC", Offset = "0x9239CC")]
	private IEnumerator YoutubeSearch(string keyword)
	{
		return null;
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0x1267268", Offset = "0x1267268", VA = "0x1267268")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x923A2C", Offset = "0x923A2C")]
	private IEnumerator YoutubeGetNextPage(string pageToken)
	{
		return null;
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0x12672E0", Offset = "0x12672E0", VA = "0x12672E0")]
	private void SetSnippet(JSONNode resultSnippet, out YoutubeSnippet data)
	{
	}

	[Token(Token = "0x6000115")]
	[Address(RVA = "0x1267C9C", Offset = "0x1267C9C", VA = "0x1267C9C")]
	public YoutubeApiGetUnlimitedVideos()
	{
	}
}
[Token(Token = "0x2000036")]
public class YoutubeChannelUI : MonoBehaviour
{
	[Token(Token = "0x2000037")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x917858", Offset = "0x917858")]
	private sealed class <DownloadThumb>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400011F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public YoutubeChannelUI <>4__this;

		[Token(Token = "0x4000122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UnityWebRequest <request>5__2;

		[Token(Token = "0x17000012")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000129")]
			[Address(RVA = "0x11BE024", Offset = "0x11BE024", VA = "0x11BE024", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000013")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600012B")]
			[Address(RVA = "0x11BE06C", Offset = "0x11BE06C", VA = "0x11BE06C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000126")]
		[Address(RVA = "0x11BDED4", Offset = "0x11BDED4", VA = "0x11BDED4")]
		[DebuggerHidden]
		public <DownloadThumb>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000127")]
		[Address(RVA = "0x11BDF00", Offset = "0x11BDF00", VA = "0x11BDF00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000128")]
		[Address(RVA = "0x11BDF04", Offset = "0x11BDF04", VA = "0x11BDF04", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600012A")]
		[Address(RVA = "0x11BE02C", Offset = "0x11BE02C", VA = "0x11BE02C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text videoName;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string videoId;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string thumbUrl;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image videoThumb;

	[Token(Token = "0x6000122")]
	[Address(RVA = "0x1267D14", Offset = "0x1267D14", VA = "0x1267D14")]
	public void LoadChannel()
	{
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0x1267D9C", Offset = "0x1267D9C", VA = "0x1267D9C")]
	public void LoadThumbnail()
	{
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0x1267DC8", Offset = "0x1267DC8", VA = "0x1267DC8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x923B2C", Offset = "0x923B2C")]
	private IEnumerator DownloadThumb()
	{
		return null;
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0x1267E34", Offset = "0x1267E34", VA = "0x1267E34")]
	public YoutubeChannelUI()
	{
	}
}
[Token(Token = "0x2000038")]
public class YoutubeVideoUi : MonoBehaviour
{
	[Token(Token = "0x2000039")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x917868", Offset = "0x917868")]
	private sealed class <PlayVideo>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400012A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string url;

		[Token(Token = "0x400012B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public YoutubeVideoUi <>4__this;

		[Token(Token = "0x17000014")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000136")]
			[Address(RVA = "0x11C6820", Offset = "0x11C6820", VA = "0x11C6820", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000015")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000138")]
			[Address(RVA = "0x11C6868", Offset = "0x11C6868", VA = "0x11C6868", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000133")]
		[Address(RVA = "0x11C66D4", Offset = "0x11C66D4", VA = "0x11C66D4")]
		[DebuggerHidden]
		public <PlayVideo>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000134")]
		[Address(RVA = "0x11C6700", Offset = "0x11C6700", VA = "0x11C6700", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000135")]
		[Address(RVA = "0x11C6704", Offset = "0x11C6704", VA = "0x11C6704", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000137")]
		[Address(RVA = "0x11C6828", Offset = "0x11C6828", VA = "0x11C6828", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200003A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x917878", Offset = "0x917878")]
	private sealed class <DownloadThumb>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400012C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400012D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400012E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public YoutubeVideoUi <>4__this;

		[Token(Token = "0x400012F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UnityWebRequest <request>5__2;

		[Token(Token = "0x17000016")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600013C")]
			[Address(RVA = "0x11C6684", Offset = "0x11C6684", VA = "0x11C6684", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000017")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600013E")]
			[Address(RVA = "0x11C66CC", Offset = "0x11C66CC", VA = "0x11C66CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000139")]
		[Address(RVA = "0x11C6534", Offset = "0x11C6534", VA = "0x11C6534")]
		[DebuggerHidden]
		public <DownloadThumb>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x600013A")]
		[Address(RVA = "0x11C6560", Offset = "0x11C6560", VA = "0x11C6560", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600013B")]
		[Address(RVA = "0x11C6564", Offset = "0x11C6564", VA = "0x11C6564", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600013D")]
		[Address(RVA = "0x11C668C", Offset = "0x11C668C", VA = "0x11C668C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text videoName;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string videoId;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string thumbUrl;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image videoThumb;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject mainUI;

	[Token(Token = "0x600012C")]
	[Address(RVA = "0x127520C", Offset = "0x127520C", VA = "0x127520C")]
	public void PlayYoutubeVideo()
	{
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0x12754A0", Offset = "0x12754A0", VA = "0x12754A0")]
	private void VideoFinished(VideoPlayer vPlayer)
	{
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0x1275610", Offset = "0x1275610", VA = "0x1275610")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x923BDC", Offset = "0x923BDC")]
	public IEnumerator PlayVideo(string url)
	{
		return null;
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0x1275688", Offset = "0x1275688", VA = "0x1275688")]
	public void LoadThumbnail()
	{
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0x12756B4", Offset = "0x12756B4", VA = "0x12756B4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x923C3C", Offset = "0x923C3C")]
	private IEnumerator DownloadThumb()
	{
		return null;
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0x1275720", Offset = "0x1275720", VA = "0x1275720")]
	public void VideoFinished()
	{
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0x1275794", Offset = "0x1275794", VA = "0x1275794")]
	public YoutubeVideoUi()
	{
	}
}
[Token(Token = "0x200003B")]
public class YoutubeAPIManager : MonoBehaviour
{
	[Token(Token = "0x200003C")]
	public enum YoutubeSearchOrderFilter
	{
		[Token(Token = "0x4000137")]
		none,
		[Token(Token = "0x4000138")]
		date,
		[Token(Token = "0x4000139")]
		rating,
		[Token(Token = "0x400013A")]
		relevance,
		[Token(Token = "0x400013B")]
		title,
		[Token(Token = "0x400013C")]
		videoCount,
		[Token(Token = "0x400013D")]
		viewCount
	}

	[Token(Token = "0x200003D")]
	public enum YoutubeSafeSearchFilter
	{
		[Token(Token = "0x400013F")]
		none,
		[Token(Token = "0x4000140")]
		moderate,
		[Token(Token = "0x4000141")]
		strict
	}

	[Token(Token = "0x200003E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x917888", Offset = "0x917888")]
	private sealed class <GetVideosFromChannel>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string channelId;

		[Token(Token = "0x4000145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int maxResults;

		[Token(Token = "0x4000146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public YoutubeAPIManager <>4__this;

		[Token(Token = "0x4000147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action<YoutubeData[]> callback;

		[Token(Token = "0x4000148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private UnityWebRequest <request>5__2;

		[Token(Token = "0x17000018")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600015A")]
			[Address(RVA = "0x11BA474", Offset = "0x11BA474", VA = "0x11BA474", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000019")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600015C")]
			[Address(RVA = "0x11BA4BC", Offset = "0x11BA4BC", VA = "0x11BA4BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000157")]
		[Address(RVA = "0x11B9F50", Offset = "0x11B9F50", VA = "0x11B9F50")]
		[DebuggerHidden]
		public <GetVideosFromChannel>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6000158")]
		[Address(RVA = "0x11B9F7C", Offset = "0x11B9F7C", VA = "0x11B9F7C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000159")]
		[Address(RVA = "0x11B9F80", Offset = "0x11B9F80", VA = "0x11B9F80", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600015B")]
		[Address(RVA = "0x11BA47C", Offset = "0x11BA47C", VA = "0x11BA47C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200003F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x917898", Offset = "0x917898")]
	private sealed class <YoutubeCallPlaylist>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400014A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400014B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string playlistId;

		[Token(Token = "0x400014C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int maxResults;

		[Token(Token = "0x400014D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public YoutubeAPIManager <>4__this;

		[Token(Token = "0x400014E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action<YoutubePlaylistItems[]> callback;

		[Token(Token = "0x400014F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private UnityWebRequest <request>5__2;

		[Token(Token = "0x1700001A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000160")]
			[Address(RVA = "0x11BB120", Offset = "0x11BB120", VA = "0x11BB120", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000162")]
			[Address(RVA = "0x11BB168", Offset = "0x11BB168", VA = "0x11BB168", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600015D")]
		[Address(RVA = "0x11BABE8", Offset = "0x11BABE8", VA = "0x11BABE8")]
		[DebuggerHidden]
		public <YoutubeCallPlaylist>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x600015E")]
		[Address(RVA = "0x11BAC14", Offset = "0x11BAC14", VA = "0x11BAC14", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600015F")]
		[Address(RVA = "0x11BAC18", Offset = "0x11BAC18", VA = "0x11BAC18", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000161")]
		[Address(RVA = "0x11BB128", Offset = "0x11BB128", VA = "0x11BB128", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000040")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9178A8", Offset = "0x9178A8")]
	private sealed class <YoutubeCallComments>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string videoId;

		[Token(Token = "0x4000153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public YoutubeAPIManager <>4__this;

		[Token(Token = "0x4000154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action<YoutubeComments[]> callback;

		[Token(Token = "0x4000155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private UnityWebRequest <request>5__2;

		[Token(Token = "0x1700001C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000166")]
			[Address(RVA = "0x11BAB98", Offset = "0x11BAB98", VA = "0x11BAB98", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000168")]
			[Address(RVA = "0x11BABE0", Offset = "0x11BABE0", VA = "0x11BABE0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000163")]
		[Address(RVA = "0x11BA860", Offset = "0x11BA860", VA = "0x11BA860")]
		[DebuggerHidden]
		public <YoutubeCallComments>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6000164")]
		[Address(RVA = "0x11BA88C", Offset = "0x11BA88C", VA = "0x11BA88C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000165")]
		[Address(RVA = "0x11BA890", Offset = "0x11BA890", VA = "0x11BA890", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000167")]
		[Address(RVA = "0x11BABA0", Offset = "0x11BABA0", VA = "0x11BABA0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000041")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9178B8", Offset = "0x9178B8")]
	private sealed class <YoutubeSearchUsingCategory>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string keyword;

		[Token(Token = "0x4000159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string category;

		[Token(Token = "0x400015A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public YoutubeSearchOrderFilter order;

		[Token(Token = "0x400015B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public YoutubeSafeSearchFilter safeSearch;

		[Token(Token = "0x400015C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int maxresult;

		[Token(Token = "0x400015D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public YoutubeAPIManager <>4__this;

		[Token(Token = "0x400015E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Action<YoutubeData[]> callback;

		[Token(Token = "0x400015F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private UnityWebRequest <request>5__2;

		[Token(Token = "0x1700001E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600016C")]
			[Address(RVA = "0x11BD238", Offset = "0x11BD238", VA = "0x11BD238", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600016E")]
			[Address(RVA = "0x11BD280", Offset = "0x11BD280", VA = "0x11BD280", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000169")]
		[Address(RVA = "0x11BCAB0", Offset = "0x11BCAB0", VA = "0x11BCAB0")]
		[DebuggerHidden]
		public <YoutubeSearchUsingCategory>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x600016A")]
		[Address(RVA = "0x11BCADC", Offset = "0x11BCADC", VA = "0x11BCADC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600016B")]
		[Address(RVA = "0x11BCAE0", Offset = "0x11BCAE0", VA = "0x11BCAE0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600016D")]
		[Address(RVA = "0x11BD240", Offset = "0x11BD240", VA = "0x11BD240", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000042")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9178C8", Offset = "0x9178C8")]
	private sealed class <YoutubeSearchChannel>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string keyword;

		[Token(Token = "0x4000163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public YoutubeSearchOrderFilter order;

		[Token(Token = "0x4000164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public YoutubeSafeSearchFilter safeSearch;

		[Token(Token = "0x4000165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int maxresult;

		[Token(Token = "0x4000166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public YoutubeAPIManager <>4__this;

		[Token(Token = "0x4000167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Action<YoutubeChannel[]> callback;

		[Token(Token = "0x4000168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private UnityWebRequest <request>5__2;

		[Token(Token = "0x17000020")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000172")]
			[Address(RVA = "0x11BCA60", Offset = "0x11BCA60", VA = "0x11BCA60", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000021")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000174")]
			[Address(RVA = "0x11BCAA8", Offset = "0x11BCAA8", VA = "0x11BCAA8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600016F")]
		[Address(RVA = "0x11BC210", Offset = "0x11BC210", VA = "0x11BC210")]
		[DebuggerHidden]
		public <YoutubeSearchChannel>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6000170")]
		[Address(RVA = "0x11BC23C", Offset = "0x11BC23C", VA = "0x11BC23C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000171")]
		[Address(RVA = "0x11BC240", Offset = "0x11BC240", VA = "0x11BC240", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000173")]
		[Address(RVA = "0x11BCA68", Offset = "0x11BCA68", VA = "0x11BCA68", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000043")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9178D8", Offset = "0x9178D8")]
	private sealed class <GetTrendingVideos>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400016A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400016B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string regionCode;

		[Token(Token = "0x400016C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int maxresult;

		[Token(Token = "0x400016D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public YoutubeAPIManager <>4__this;

		[Token(Token = "0x400016E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action<YoutubeData[]> callback;

		[Token(Token = "0x400016F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private UnityWebRequest <request>5__2;

		[Token(Token = "0x17000022")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000178")]
			[Address(RVA = "0x11B9F00", Offset = "0x11B9F00", VA = "0x11B9F00", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000023")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600017A")]
			[Address(RVA = "0x11B9F48", Offset = "0x11B9F48", VA = "0x11B9F48", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000175")]
		[Address(RVA = "0x11B99C0", Offset = "0x11B99C0", VA = "0x11B99C0")]
		[DebuggerHidden]
		public <GetTrendingVideos>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6000176")]
		[Address(RVA = "0x11B99EC", Offset = "0x11B99EC", VA = "0x11B99EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000177")]
		[Address(RVA = "0x11B99F0", Offset = "0x11B99F0", VA = "0x11B99F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000179")]
		[Address(RVA = "0x11B9F08", Offset = "0x11B9F08", VA = "0x11B9F08", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000044")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9178E8", Offset = "0x9178E8")]
	private sealed class <YoutubeSearch>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string keyword;

		[Token(Token = "0x4000173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public YoutubeSearchOrderFilter order;

		[Token(Token = "0x4000174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public YoutubeSafeSearchFilter safeSearch;

		[Token(Token = "0x4000175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int maxresult;

		[Token(Token = "0x4000176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string customFilters;

		[Token(Token = "0x4000177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public YoutubeAPIManager <>4__this;

		[Token(Token = "0x4000178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Action<YoutubeData[]> callback;

		[Token(Token = "0x4000179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private UnityWebRequest <request>5__2;

		[Token(Token = "0x17000024")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600017E")]
			[Address(RVA = "0x11BB8E0", Offset = "0x11BB8E0", VA = "0x11BB8E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000025")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000180")]
			[Address(RVA = "0x11BB928", Offset = "0x11BB928", VA = "0x11BB928", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600017B")]
		[Address(RVA = "0x11BB170", Offset = "0x11BB170", VA = "0x11BB170")]
		[DebuggerHidden]
		public <YoutubeSearch>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x600017C")]
		[Address(RVA = "0x11BB19C", Offset = "0x11BB19C", VA = "0x11BB19C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600017D")]
		[Address(RVA = "0x11BB1A0", Offset = "0x11BB1A0", VA = "0x11BB1A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600017F")]
		[Address(RVA = "0x11BB8E8", Offset = "0x11BB8E8", VA = "0x11BB8E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000045")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9178F8", Offset = "0x9178F8")]
	private sealed class <YoutubeSearchByLocation>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400017A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400017B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400017C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string keyword;

		[Token(Token = "0x400017D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public YoutubeSearchOrderFilter order;

		[Token(Token = "0x400017E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public YoutubeSafeSearchFilter safeSearch;

		[Token(Token = "0x400017F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int locationRadius;

		[Token(Token = "0x4000180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float latitude;

		[Token(Token = "0x4000181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float longitude;

		[Token(Token = "0x4000182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int maxResult;

		[Token(Token = "0x4000183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string customFilters;

		[Token(Token = "0x4000184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public YoutubeAPIManager <>4__this;

		[Token(Token = "0x4000185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Action<YoutubeData[]> callback;

		[Token(Token = "0x4000186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private UnityWebRequest <request>5__2;

		[Token(Token = "0x17000026")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000184")]
			[Address(RVA = "0x11BC1C0", Offset = "0x11BC1C0", VA = "0x11BC1C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000027")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000186")]
			[Address(RVA = "0x11BC208", Offset = "0x11BC208", VA = "0x11BC208", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000181")]
		[Address(RVA = "0x11BB930", Offset = "0x11BB930", VA = "0x11BB930")]
		[DebuggerHidden]
		public <YoutubeSearchByLocation>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6000182")]
		[Address(RVA = "0x11BB95C", Offset = "0x11BB95C", VA = "0x11BB95C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000183")]
		[Address(RVA = "0x11BB960", Offset = "0x11BB960", VA = "0x11BB960", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000185")]
		[Address(RVA = "0x11BC1C8", Offset = "0x11BC1C8", VA = "0x11BC1C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000046")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x917908", Offset = "0x917908")]
	private sealed class <LoadSingleVideo>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string videoId;

		[Token(Token = "0x400018A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public YoutubeAPIManager <>4__this;

		[Token(Token = "0x400018B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action<YoutubeData> callback;

		[Token(Token = "0x400018C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private UnityWebRequest <request>5__2;

		[Token(Token = "0x17000028")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600018A")]
			[Address(RVA = "0x11BA810", Offset = "0x11BA810", VA = "0x11BA810", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000029")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600018C")]
			[Address(RVA = "0x11BA858", Offset = "0x11BA858", VA = "0x11BA858", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000187")]
		[Address(RVA = "0x11BA4C4", Offset = "0x11BA4C4", VA = "0x11BA4C4")]
		[DebuggerHidden]
		public <LoadSingleVideo>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6000188")]
		[Address(RVA = "0x11BA4F0", Offset = "0x11BA4F0", VA = "0x11BA4F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000189")]
		[Address(RVA = "0x11BA4F4", Offset = "0x11BA4F4", VA = "0x11BA4F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600018B")]
		[Address(RVA = "0x11BA818", Offset = "0x11BA818", VA = "0x11BA818", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private YoutubeData data;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private YoutubeData[] searchResults;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private YoutubeComments[] comments;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private YoutubePlaylistItems[] playslistItems;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private YoutubeChannel[] channels;

	[Token(Token = "0x4000135")]
	private const string APIKey = "AIzaSyCSh8NNjutCdJ3pAMJjWrGFbB8_onIMn1Y";

	[Token(Token = "0x600013F")]
	[Address(RVA = "0x12656C0", Offset = "0x12656C0", VA = "0x12656C0")]
	public void GetVideoData(string videoId, Action<YoutubeData> callback)
	{
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0x126576C", Offset = "0x126576C", VA = "0x126576C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0x12657E0", Offset = "0x12657E0", VA = "0x12657E0")]
	public void GetChannelVideos(string channelId, int maxResults, Action<YoutubeData[]> callback)
	{
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0x126589C", Offset = "0x126589C", VA = "0x126589C")]
	public void Search(string keyword, int maxResult, YoutubeSearchOrderFilter order, YoutubeSafeSearchFilter safeSearch, string customFilters, Action<YoutubeData[]> callback)
	{
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0x1265974", Offset = "0x1265974", VA = "0x1265974")]
	public void TrendingVideos(string regionCode, int maxResult, Action<YoutubeData[]> callback)
	{
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0x1265A30", Offset = "0x1265A30", VA = "0x1265A30")]
	public void SearchForChannels(string keyword, int maxResult, YoutubeSearchOrderFilter order, YoutubeSafeSearchFilter safeSearch, Action<YoutubeChannel[]> callback)
	{
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0x1265B00", Offset = "0x1265B00", VA = "0x1265B00")]
	public void SearchByCategory(string keyword, string category, int maxResult, YoutubeSearchOrderFilter order, YoutubeSafeSearchFilter safeSearch, Action<YoutubeData[]> callback)
	{
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0x1265BD4", Offset = "0x1265BD4", VA = "0x1265BD4")]
	public void SearchByLocation(string keyword, int maxResult, int locationRadius, float latitude, float longitude, YoutubeSearchOrderFilter order, YoutubeSafeSearchFilter safeSearch, string customFilters, Action<YoutubeData[]> callback)
	{
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0x1265CD8", Offset = "0x1265CD8", VA = "0x1265CD8")]
	public void GetComments(string videoId, Action<YoutubeComments[]> callback)
	{
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0x1265D84", Offset = "0x1265D84", VA = "0x1265D84")]
	public void GetPlaylistItems(string playlistId, int maxResults, Action<YoutubePlaylistItems[]> callback)
	{
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0x126580C", Offset = "0x126580C", VA = "0x126580C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x923D3C", Offset = "0x923D3C")]
	private IEnumerator GetVideosFromChannel(string channelId, int maxResults, Action<YoutubeData[]> callback)
	{
		return null;
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0x1265DB0", Offset = "0x1265DB0", VA = "0x1265DB0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x923D9C", Offset = "0x923D9C")]
	private IEnumerator YoutubeCallPlaylist(string playlistId, int maxResults, Action<YoutubePlaylistItems[]> callback)
	{
		return null;
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0x1265D04", Offset = "0x1265D04", VA = "0x1265D04")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x923DFC", Offset = "0x923DFC")]
	private IEnumerator YoutubeCallComments(string videoId, Action<YoutubeComments[]> callback)
	{
		return null;
	}

	[Token(Token = "0x600014C")]
	[Address(RVA = "0x1265B2C", Offset = "0x1265B2C", VA = "0x1265B2C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x923E5C", Offset = "0x923E5C")]
	private IEnumerator YoutubeSearchUsingCategory(string keyword, string category, int maxresult, YoutubeSearchOrderFilter order, YoutubeSafeSearchFilter safeSearch, Action<YoutubeData[]> callback)
	{
		return null;
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0x1265A5C", Offset = "0x1265A5C", VA = "0x1265A5C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x923EBC", Offset = "0x923EBC")]
	private IEnumerator YoutubeSearchChannel(string keyword, int maxresult, YoutubeSearchOrderFilter order, YoutubeSafeSearchFilter safeSearch, Action<YoutubeChannel[]> callback)
	{
		return null;
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0x12659A0", Offset = "0x12659A0", VA = "0x12659A0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x923F1C", Offset = "0x923F1C")]
	private IEnumerator GetTrendingVideos(string regionCode, int maxresult, Action<YoutubeData[]> callback)
	{
		return null;
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0x12658C8", Offset = "0x12658C8", VA = "0x12658C8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x923F7C", Offset = "0x923F7C")]
	private IEnumerator YoutubeSearch(string keyword, int maxresult, YoutubeSearchOrderFilter order, YoutubeSafeSearchFilter safeSearch, string customFilters, Action<YoutubeData[]> callback)
	{
		return null;
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0x1265C08", Offset = "0x1265C08", VA = "0x1265C08")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x923FDC", Offset = "0x923FDC")]
	private IEnumerator YoutubeSearchByLocation(string keyword, int maxResult, int locationRadius, float latitude, float longitude, YoutubeSearchOrderFilter order, YoutubeSafeSearchFilter safeSearch, string customFilters, Action<YoutubeData[]> callback)
	{
		return null;
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0x12656EC", Offset = "0x12656EC", VA = "0x12656EC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92403C", Offset = "0x92403C")]
	private IEnumerator LoadSingleVideo(string videoId, Action<YoutubeData> callback)
	{
		return null;
	}

	[Token(Token = "0x6000152")]
	[Address(RVA = "0x1265E40", Offset = "0x1265E40", VA = "0x1265E40")]
	private void SetSnippet(JSONNode resultSnippet, out YoutubeSnippet data)
	{
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0x12667D0", Offset = "0x12667D0", VA = "0x12667D0")]
	private void SetStatistics(JSONNode resultStatistics, out YoutubeStatistics data)
	{
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0x12669A8", Offset = "0x12669A8", VA = "0x12669A8")]
	private void SetContentDetails(JSONNode resultContentDetails, out YoutubeContentDetails data)
	{
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0x1266CEC", Offset = "0x1266CEC", VA = "0x1266CEC")]
	private void SetComment(JSONNode commentsData, out YoutubeComments data)
	{
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0x1267100", Offset = "0x1267100", VA = "0x1267100")]
	public YoutubeAPIManager()
	{
	}
}
[Token(Token = "0x2000047")]
public class YoutubeData
{
	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public YoutubeSnippet snippet;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public YoutubeStatistics statistics;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public YoutubeContentDetails contentDetails;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string id;

	[Token(Token = "0x600018D")]
	[Address(RVA = "0x1267E3C", Offset = "0x1267E3C", VA = "0x1267E3C")]
	public YoutubeData()
	{
	}
}
[Token(Token = "0x2000048")]
public class YoutubeComments
{
	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string authorDisplayName;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string authorProfileImageUrl;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string authorChannelUrl;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string authorChannelId;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string videoId;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string textDisplay;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string textOriginal;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool canRate;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string viewerRating;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int likeCount;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string publishedAt;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string updatedAt;

	[Token(Token = "0x600018E")]
	[Address(RVA = "0x12670F8", Offset = "0x12670F8", VA = "0x12670F8")]
	public YoutubeComments()
	{
	}
}
[Token(Token = "0x2000049")]
public class YoutubePlaylistItems
{
	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string videoId;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public YoutubeSnippet snippet;

	[Token(Token = "0x600018F")]
	[Address(RVA = "0x126A434", Offset = "0x126A434", VA = "0x126A434")]
	public YoutubePlaylistItems()
	{
	}
}
[Token(Token = "0x200004A")]
public class YoutubeChannel
{
	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string id;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string title;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string description;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string thumbnail;

	[Token(Token = "0x6000190")]
	[Address(RVA = "0x1267D0C", Offset = "0x1267D0C", VA = "0x1267D0C")]
	public YoutubeChannel()
	{
	}
}
[Token(Token = "0x200004B")]
public class YoutubeContentDetails
{
	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string duration;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string dimension;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string definition;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string caption;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string licensedContent;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string projection;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool ageRestrict;

	[Token(Token = "0x6000191")]
	[Address(RVA = "0x1266CE4", Offset = "0x1266CE4", VA = "0x1266CE4")]
	public YoutubeContentDetails()
	{
	}
}
[Token(Token = "0x200004C")]
public class YoutubeSnippet
{
	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string publishedAt;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string channelId;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string title;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string description;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public YoutubeTumbnails thumbnails;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string channelTitle;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string[] tags;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string categoryId;

	[Token(Token = "0x6000192")]
	[Address(RVA = "0x12667B8", Offset = "0x12667B8", VA = "0x12667B8")]
	public YoutubeSnippet()
	{
	}
}
[Token(Token = "0x200004D")]
public class YoutubeTumbnails
{
	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public YoutubeThumbnailData defaultThumbnail;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public YoutubeThumbnailData mediumThumbnail;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public YoutubeThumbnailData highThumbnail;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public YoutubeThumbnailData standardThumbnail;

	[Token(Token = "0x6000193")]
	[Address(RVA = "0x12667C0", Offset = "0x12667C0", VA = "0x12667C0")]
	public YoutubeTumbnails()
	{
	}
}
[Token(Token = "0x200004E")]
public class YoutubeThumbnailData
{
	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string url;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string width;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string height;

	[Token(Token = "0x6000194")]
	[Address(RVA = "0x12667C8", Offset = "0x12667C8", VA = "0x12667C8")]
	public YoutubeThumbnailData()
	{
	}
}
[Token(Token = "0x200004F")]
public class YoutubeStatistics
{
	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string viewCount;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string likeCount;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string dislikeCount;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string favoriteCount;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string commentCount;

	[Token(Token = "0x6000195")]
	[Address(RVA = "0x12669A0", Offset = "0x12669A0", VA = "0x12669A0")]
	public YoutubeStatistics()
	{
	}
}
[Token(Token = "0x2000050")]
public class YoutubeDemoUsage : MonoBehaviour
{
	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject mainUI;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text videoUrlInput;

	[Token(Token = "0x6000196")]
	[Address(RVA = "0x126835C", Offset = "0x126835C", VA = "0x126835C")]
	public void DemoPlayback()
	{
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0x12684A8", Offset = "0x12684A8", VA = "0x12684A8")]
	public void PlayFromInput()
	{
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0x1268604", Offset = "0x1268604", VA = "0x1268604")]
	private void OnVideoFinished(VideoPlayer vPlayer)
	{
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0x1268728", Offset = "0x1268728", VA = "0x1268728")]
	public YoutubeDemoUsage()
	{
	}
}
[Token(Token = "0x2000051")]
public class YoutubeSubtitlesReader : MonoBehaviour
{
	[Token(Token = "0x2000052")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x917918", Offset = "0x917918")]
	private sealed class <DownloadSubtitle>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public YoutubeSubtitlesReader <>4__this;

		[Token(Token = "0x40001CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UnityWebRequest <request>5__2;

		[Token(Token = "0x1700002A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001A8")]
			[Address(RVA = "0x11C5FD0", Offset = "0x11C5FD0", VA = "0x11C5FD0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001AA")]
			[Address(RVA = "0x11C6018", Offset = "0x11C6018", VA = "0x11C6018", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001A5")]
		[Address(RVA = "0x11C5C9C", Offset = "0x11C5C9C", VA = "0x11C5C9C")]
		[DebuggerHidden]
		public <DownloadSubtitle>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x60001A6")]
		[Address(RVA = "0x11C5CC8", Offset = "0x11C5CC8", VA = "0x11C5CC8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001A7")]
		[Address(RVA = "0x11C5CCC", Offset = "0x11C5CCC", VA = "0x11C5CCC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001A9")]
		[Address(RVA = "0x11C5FD8", Offset = "0x11C5FD8", VA = "0x11C5FD8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000053")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x917928", Offset = "0x917928")]
	private sealed class <DownloadSubtitleFile>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string url;

		[Token(Token = "0x40001CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public YoutubeSubtitlesReader <>4__this;

		[Token(Token = "0x40001D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UnityWebRequest <request>5__2;

		[Token(Token = "0x1700002C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001AE")]
			[Address(RVA = "0x11C6104", Offset = "0x11C6104", VA = "0x11C6104", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001B0")]
			[Address(RVA = "0x11C614C", Offset = "0x11C614C", VA = "0x11C614C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001AB")]
		[Address(RVA = "0x11C6020", Offset = "0x11C6020", VA = "0x11C6020")]
		[DebuggerHidden]
		public <DownloadSubtitleFile>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x60001AC")]
		[Address(RVA = "0x11C604C", Offset = "0x11C604C", VA = "0x11C604C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001AD")]
		[Address(RVA = "0x11C6050", Offset = "0x11C6050", VA = "0x11C6050", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001AF")]
		[Address(RVA = "0x11C610C", Offset = "0x11C610C", VA = "0x11C610C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000054")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x917938", Offset = "0x917938")]
	private sealed class <>c
	{
		[Token(Token = "0x40001D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40001D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<string, string> <>9__15_0;

		[Token(Token = "0x40001D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<string, bool> <>9__15_1;

		[Token(Token = "0x60001B2")]
		[Address(RVA = "0x11C5C54", Offset = "0x11C5C54", VA = "0x11C5C54")]
		public <>c()
		{
		}

		[Token(Token = "0x60001B3")]
		[Address(RVA = "0x11C5C5C", Offset = "0x11C5C5C", VA = "0x11C5C5C")]
		internal string <ParseStream>b__15_0(string s)
		{
			return null;
		}

		[Token(Token = "0x60001B4")]
		[Address(RVA = "0x11C5C78", Offset = "0x11C5C78", VA = "0x11C5C78")]
		internal bool <ParseStream>b__15_1(string l)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000055")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x917948", Offset = "0x917948")]
	private sealed class <GetVttSubTitleParts>d__16 : IEnumerable<string>, IEnumerable, IEnumerator<string>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string <>2__current;

		[Token(Token = "0x40001D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <>l__initialThreadId;

		[Token(Token = "0x40001D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private byte[] r;

		[Token(Token = "0x40001D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public byte[] <>3__r;

		[Token(Token = "0x40001D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private StreamReader <reader>5__2;

		[Token(Token = "0x1700002E")]
		private string System.Collections.Generic.IEnumerator<System.String>.Current
		{
			[Token(Token = "0x60001B8")]
			[Address(RVA = "0x11C6438", Offset = "0x11C6438", VA = "0x11C6438", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001BA")]
			[Address(RVA = "0x11C6480", Offset = "0x11C6480", VA = "0x11C6480", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001B5")]
		[Address(RVA = "0x11C6154", Offset = "0x11C6154", VA = "0x11C6154")]
		[DebuggerHidden]
		public <GetVttSubTitleParts>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x60001B6")]
		[Address(RVA = "0x11C618C", Offset = "0x11C618C", VA = "0x11C618C", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001B7")]
		[Address(RVA = "0x11C6190", Offset = "0x11C6190", VA = "0x11C6190", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001B9")]
		[Address(RVA = "0x11C6440", Offset = "0x11C6440", VA = "0x11C6440", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x60001BB")]
		[Address(RVA = "0x11C6488", Offset = "0x11C6488", VA = "0x11C6488", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<string> System.Collections.Generic.IEnumerable<System.String>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60001BC")]
		[Address(RVA = "0x11C6530", Offset = "0x11C6530", VA = "0x11C6530", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly string[] _delimiters;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string videoID;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string langCode;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public VideoPlayer videoPlayer;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool subtitleLoaded;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string currentTextLine;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text uiSubtitle;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<SubtitleItem> subtitleList;

	[Token(Token = "0x600019A")]
	[Address(RVA = "0x12737F8", Offset = "0x12737F8", VA = "0x12737F8")]
	public YoutubeSubtitlesReader()
	{
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0x127393C", Offset = "0x127393C", VA = "0x127393C")]
	private void Start()
	{
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0x127396C", Offset = "0x127396C", VA = "0x127396C")]
	public void LoadSubtitle()
	{
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0x1273A08", Offset = "0x1273A08", VA = "0x1273A08")]
	private void WhenSubtitleLoadAreReady(List<SubtitleItem> result)
	{
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0x127399C", Offset = "0x127399C", VA = "0x127399C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92436C", Offset = "0x92436C")]
	private IEnumerator DownloadSubtitle()
	{
		return null;
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0x1273A9C", Offset = "0x1273A9C", VA = "0x1273A9C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9243CC", Offset = "0x9243CC")]
	private IEnumerator DownloadSubtitleFile(string url)
	{
		return null;
	}

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0x1273B14", Offset = "0x1273B14", VA = "0x1273B14")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0x1273D0C", Offset = "0x1273D0C", VA = "0x1273D0C")]
	public List<SubtitleItem> ParseStream(byte[] subtitleBytes)
	{
		return null;
	}

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0x1274474", Offset = "0x1274474", VA = "0x1274474")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92442C", Offset = "0x92442C")]
	private IEnumerable<string> GetVttSubTitleParts(byte[] r)
	{
		return null;
	}

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0x12744E0", Offset = "0x12744E0", VA = "0x12744E0")]
	private bool TryParseTimecodeLine(string line, out double startTc, out double endTc)
	{
		return default(bool);
	}

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0x127458C", Offset = "0x127458C", VA = "0x127458C")]
	private int ParseVttTimecode(string s)
	{
		return default(int);
	}
}
[Token(Token = "0x2000056")]
public class SubtitleItem
{
	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91A4FC", Offset = "0x91A4FC")]
	private double <StartTime>k__BackingField;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91A50C", Offset = "0x91A50C")]
	private double <EndTime>k__BackingField;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91A51C", Offset = "0x91A51C")]
	private string <text>k__BackingField;

	[Token(Token = "0x17000030")]
	public double StartTime
	{
		[Token(Token = "0x60001BD")]
		[Address(RVA = "0x10EBFC8", Offset = "0x10EBFC8", VA = "0x10EBFC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92459C", Offset = "0x92459C")]
		get
		{
			return default(double);
		}
		[Token(Token = "0x60001BE")]
		[Address(RVA = "0x10EBFD0", Offset = "0x10EBFD0", VA = "0x10EBFD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9245AC", Offset = "0x9245AC")]
		set
		{
		}
	}

	[Token(Token = "0x17000031")]
	public double EndTime
	{
		[Token(Token = "0x60001BF")]
		[Address(RVA = "0x10EBFD8", Offset = "0x10EBFD8", VA = "0x10EBFD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9245BC", Offset = "0x9245BC")]
		get
		{
			return default(double);
		}
		[Token(Token = "0x60001C0")]
		[Address(RVA = "0x10EBFE0", Offset = "0x10EBFE0", VA = "0x10EBFE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9245CC", Offset = "0x9245CC")]
		set
		{
		}
	}

	[Token(Token = "0x17000032")]
	public string text
	{
		[Token(Token = "0x60001C1")]
		[Address(RVA = "0x10EBFE8", Offset = "0x10EBFE8", VA = "0x10EBFE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9245DC", Offset = "0x9245DC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001C2")]
		[Address(RVA = "0x10EBFF0", Offset = "0x10EBFF0", VA = "0x10EBFF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9245EC", Offset = "0x9245EC")]
		set
		{
		}
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0x10EBFF8", Offset = "0x10EBFF8", VA = "0x10EBFF8")]
	public SubtitleItem()
	{
	}
}
[Token(Token = "0x2000057")]
public class HouseGen : MonoBehaviour
{
	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float W;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float H;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float roofH;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float halfW;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool randomizeOnStart;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float roofOffsetZ;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int[] wallTex;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int[] roofTex;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color[] roofColor;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool createTangent;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform[] points;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3[] vertices;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector2[] uv;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Color[] colors;

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int[] triangles;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private MultiplayerSync.SyncState mSync;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Mesh mesh;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int[] sideTrianglesR;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int[] sideTrianglesL;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int[] sideTriangles;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static Vector2[] uvWall;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static int[] mul;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static Color[] colorsT;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static float textureXMul;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private static float textureYMul;

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static float skewBack;

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private static float skewFront;

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0x14217F8", Offset = "0x14217F8", VA = "0x14217F8")]
	public void Awake()
	{
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0x14219F8", Offset = "0x14219F8", VA = "0x14219F8")]
	public void Randomize()
	{
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0x14240BC", Offset = "0x14240BC", VA = "0x14240BC")]
	public void RandomizeLow()
	{
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0x1424164", Offset = "0x1424164", VA = "0x1424164")]
	private Vector3 GetFrontPoint(Transform p)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0x1424180", Offset = "0x1424180", VA = "0x1424180")]
	private float FixDu(float du)
	{
		return default(float);
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0x1421CC4", Offset = "0x1421CC4", VA = "0x1421CC4")]
	public void Init()
	{
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0x14241E0", Offset = "0x14241E0", VA = "0x14241E0")]
	private void UpdateMesh()
	{
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0x14243BC", Offset = "0x14243BC", VA = "0x14243BC")]
	private void UpdateCollider()
	{
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0x14241CC", Offset = "0x14241CC", VA = "0x14241CC")]
	private Vector3 RotateL(Vector3 v)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0x142449C", Offset = "0x142449C", VA = "0x142449C")]
	public HouseGen()
	{
	}
}
[Token(Token = "0x2000058")]
public class Tangent : MonoBehaviour
{
	[Token(Token = "0x60001CF")]
	[Address(RVA = "0x10EE3D4", Offset = "0x10EE3D4", VA = "0x10EE3D4")]
	public void CreateTangent(Mesh theMesh)
	{
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0x10EE8DC", Offset = "0x10EE8DC", VA = "0x10EE8DC")]
	public Tangent()
	{
	}
}
[Token(Token = "0x2000059")]
public class TerrainGen4 : MonoBehaviour
{
	[Token(Token = "0x200005A")]
	private struct GraphNode
	{
		[Token(Token = "0x400024D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public unsafe int* list;

		[Token(Token = "0x400024E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int head;

		[Token(Token = "0x400024F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int nextPath;

		[Token(Token = "0x4000250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int visitor;

		[Token(Token = "0x4000251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public unsafe GraphNode* previous;

		[Token(Token = "0x4000252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly GCHandle handle;

		[Token(Token = "0x60001F0")]
		[Address(RVA = "0x1373620", Offset = "0x1373620", VA = "0x1373620")]
		public GraphNode(int capacity)
		{
		}

		[Token(Token = "0x60001F1")]
		[Address(RVA = "0x13736AC", Offset = "0x13736AC", VA = "0x13736AC")]
		public void Add(int p)
		{
		}

		[Token(Token = "0x60001F2")]
		[Address(RVA = "0x13736C4", Offset = "0x13736C4", VA = "0x13736C4")]
		public void Change(int p, int n)
		{
		}

		[Token(Token = "0x60001F3")]
		[Address(RVA = "0x13736F4", Offset = "0x13736F4", VA = "0x13736F4")]
		public void Remove(int p)
		{
		}

		[Token(Token = "0x60001F4")]
		[Address(RVA = "0x1373788", Offset = "0x1373788", VA = "0x1373788")]
		public void Dispose()
		{
		}

		[Token(Token = "0x60001F5")]
		[Address(RVA = "0x13737B4", Offset = "0x13737B4", VA = "0x13737B4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}

	[Token(Token = "0x200005B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x917958", Offset = "0x917958")]
	private sealed class <Start>d__66 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TerrainGen4 <>4__this;

		[Token(Token = "0x17000035")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001F9")]
			[Address(RVA = "0x13735D0", Offset = "0x13735D0", VA = "0x13735D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000036")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001FB")]
			[Address(RVA = "0x1373618", Offset = "0x1373618", VA = "0x1373618", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001F6")]
		[Address(RVA = "0x1372F6C", Offset = "0x1372F6C", VA = "0x1372F6C")]
		[DebuggerHidden]
		public <Start>d__66(int <>1__state)
		{
		}

		[Token(Token = "0x60001F7")]
		[Address(RVA = "0x1372F98", Offset = "0x1372F98", VA = "0x1372F98", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001F8")]
		[Address(RVA = "0x1372F9C", Offset = "0x1372F9C", VA = "0x1372F9C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001FA")]
		[Address(RVA = "0x13735D8", Offset = "0x13735D8", VA = "0x13735D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Texture2D __globalMaskToCopy;

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GraphNode[] vertexNeightbours;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int4[] trisNeightbour;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float editorScale;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool forceDenseMesh;

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public int multiLocationObjectId;

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Collider collider;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool useRawHMap;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool cubicFactor;

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
	public bool approximateMipBasedHeight;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float rawHeightDecrease;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x91A53C", Offset = "0x91A53C")]
	public float reduceDistinctShoreHeight;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x91A554", Offset = "0x91A554")]
	public float ridgesIntensity;

	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91A56C", Offset = "0x91A56C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x91A56C", Offset = "0x91A56C")]
	public uint computeStrokes;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool isBase;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int trianglesCount;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float shoreMaxSize;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float rockOnSlope;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float scaleHM;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public Vector2 offsetHM;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool createTangent;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Texture2D hmap;

	[Token(Token = "0x400020E")]
	public const float kDefaultScale = 4f;

	[Token(Token = "0x400020F")]
	public const float kDefaultMapSize = 16000f;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static float MAP_SCALE;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static float MAP_SIZE;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static float MAP_SIZE_RCP_SQ;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector3 scale;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private NativeArray<Vector3> vertices;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private unsafe Vector3* weakPtrVertices;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Vector2[] uv;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector2[] uv2;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Vector2[] uv3;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector2[] uv4;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Color[] colors;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int[] triangles;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Texture2D maskTex;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Texture2DArray maskArray;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Color32[] hmap0mip;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Color32[] hmap2mip;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Color32[] hmap4mip;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private float widthToHeightRatio;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private float heightToWidthRatio;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private float texHeightOffset;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private float texWidthOffset;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Vector2Int hmap0mipSize;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Vector2Int hmap2mipSize;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Vector2Int hmap4mipSize;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private Vector2Int hmap0mipSizeMinusOne;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Vector2Int hmap2mipSizeMinusOne;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private Vector2Int hmap4mipSizeMinusOne;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private bool texOnlyRedChannel;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private Vector4 limitMinDistances;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private float minLandHeight;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public Mesh mesh;

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public static bool dontDelayInit;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91A5C0", Offset = "0x91A5C0")]
	private static Transform <MainTransform>k__BackingField;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private MultiplayerSync.SyncState mSync;

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private int[] shoreEdges;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private int[] trianglesG;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private int[] trianglesW;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private Vector3[] vr;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private int[] tr;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private float offHM;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	public int vIndex;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public int tIndex;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	private int trisMapCounter;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public int initialGrid;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private unsafe Color32* ptrHmap0;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private unsafe Color32* ptrHmap2;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private unsafe Color32* ptrHmap4;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private unsafe GraphNode* weakPtrVrMap;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private unsafe int4* weakPtrTrisMap;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public bool flip;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	private float error;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private float lastH;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	private float lastMipH;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private float last4MipH;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	private bool lastWasWater;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static float maxH;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public static float maxHCloseZone;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private float minDistance;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
	public float errorPercent;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public float detailAreaRange;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	private int iterations;

	[Token(Token = "0x17000033")]
	public static Texture2D globalMaskToCopy
	{
		[Token(Token = "0x60001D1")]
		[Address(RVA = "0x21DE510", Offset = "0x21DE510", VA = "0x21DE510")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000034")]
	public static Transform MainTransform
	{
		[Token(Token = "0x60001D2")]
		[Address(RVA = "0x21DE658", Offset = "0x21DE658", VA = "0x21DE658")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9245FC", Offset = "0x9245FC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001D3")]
		[Address(RVA = "0x21DE6BC", Offset = "0x21DE6BC", VA = "0x21DE6BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92460C", Offset = "0x92460C")]
		private set
		{
		}
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0x21DE724", Offset = "0x21DE724", VA = "0x21DE724")]
	public void InitMultiplayerSync()
	{
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0x21DE798", Offset = "0x21DE798", VA = "0x21DE798")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0x21DE8E4", Offset = "0x21DE8E4", VA = "0x21DE8E4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92461C", Offset = "0x92461C")]
	public IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0x21DE950", Offset = "0x21DE950", VA = "0x21DE950")]
	private void PlaneTrees(Texture2D mask)
	{
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0x21DEDA8", Offset = "0x21DEDA8", VA = "0x21DEDA8")]
	private void PlantTreesBasedOnAlpha()
	{
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0x21DF0FC", Offset = "0x21DF0FC", VA = "0x21DF0FC")]
	private void MarkLandEdge()
	{
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0x21DF404", Offset = "0x21DF404", VA = "0x21DF404")]
	private void ShoreDistanceCorrection()
	{
	}

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0x21DF8D0", Offset = "0x21DF8D0", VA = "0x21DF8D0")]
	private void VerticesDistortion()
	{
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0x21DFE48", Offset = "0x21DFE48", VA = "0x21DFE48")]
	private bool CanPlaceTree(Vector3 point)
	{
		return default(bool);
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0x21DFED8", Offset = "0x21DFED8", VA = "0x21DFED8")]
	private void PrepareZones()
	{
	}

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0x21E0180", Offset = "0x21E0180", VA = "0x21E0180")]
	public void Init()
	{
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0x21E0664", Offset = "0x21E0664", VA = "0x21E0664")]
	public void SyncMaskFinalizer()
	{
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0x21E1B78", Offset = "0x21E1B78", VA = "0x21E1B78")]
	private void UpdateMesh()
	{
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0x21E2F40", Offset = "0x21E2F40", VA = "0x21E2F40")]
	private void AssignTerrainMasksToMesh()
	{
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0x21E1A3C", Offset = "0x21E1A3C", VA = "0x21E1A3C")]
	private void UpdateMeshCollider()
	{
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0x21E0F30", Offset = "0x21E0F30", VA = "0x21E0F30")]
	public void GenNewMesh()
	{
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0x21E3424", Offset = "0x21E3424", VA = "0x21E3424")]
	public unsafe void SetupVertex(Vector3* ptrVr, Vector2* ptrUv, Color* ptrColor, int i, bool full)
	{
	}

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0x21E407C", Offset = "0x21E407C", VA = "0x21E407C")]
	public unsafe void FlipIfNeeded(int* ptrTr, Color* ptrColors, int t, int t2)
	{
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0x21E3A60", Offset = "0x21E3A60", VA = "0x21E3A60")]
	public void CalculateData(Vector3 v)
	{
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0x21E3B48", Offset = "0x21E3B48", VA = "0x21E3B48")]
	public unsafe bool CanBreakEdge(int* ptrTr, Vector3* ptrVr, int t)
	{
		return default(bool);
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0x21E4308", Offset = "0x21E4308", VA = "0x21E4308")]
	private unsafe void InterpolateTriangle(int* ptrTr, Vector3* ptrVr, Color* ptrColor, int t, int vIdx, Vector3 intpPos)
	{
	}

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0x21E3E8C", Offset = "0x21E3E8C", VA = "0x21E3E8C")]
	public unsafe void BreakTriangles(int* ptrTr, Vector3* ptrVr, int t)
	{
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0x21E43C8", Offset = "0x21E43C8", VA = "0x21E43C8")]
	public unsafe int BreakTriangle(int* ptrTr, int t, int createdVertexIndex, int ct = -1)
	{
		return default(int);
	}

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0x21E3A18", Offset = "0x21E3A18", VA = "0x21E3A18")]
	public unsafe Vector3 FindNewVertex(int* ptrTr, Vector3* ptrVr, int t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0x21E4120", Offset = "0x21E4120", VA = "0x21E4120")]
	private unsafe static Color32 GetBilinear(Color32* array, float x, float y, int xLength, int yLength, int xLengthMinusOne, int yLengthMinusOne)
	{
		return default(Color32);
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0x21E45CC", Offset = "0x21E45CC", VA = "0x21E45CC")]
	private static Color32 Blerp(Color32 c00, Color32 c10, Color32 c01, Color32 c11, float tx, float ty)
	{
		return default(Color32);
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0x21E4648", Offset = "0x21E4648", VA = "0x21E4648")]
	public TerrainGen4()
	{
	}
}
[Token(Token = "0x200005C")]
public class MUI_AutoRotation1 : MonoBehaviour
{
	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private DeviceOrientation orientation;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool landscapeRight;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool landscapeLeft;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	public bool portrait;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	public bool portraitUpsideDown;

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0x1140768", Offset = "0x1140768", VA = "0x1140768")]
	public void Start()
	{
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0x11409EC", Offset = "0x11409EC", VA = "0x11409EC")]
	public void Update()
	{
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0x1140918", Offset = "0x1140918", VA = "0x1140918")]
	public void AdjustOrientation()
	{
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0x1140A2C", Offset = "0x1140A2C", VA = "0x1140A2C")]
	public MUI_AutoRotation1()
	{
	}
}
[Token(Token = "0x200005D")]
public class MUI_Checkbox : MonoBehaviour
{
	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public eCheck stateNum;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject objectToCall;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string functionToCall;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material materialOff;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material materialOn;

	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Renderer r;

	[Token(Token = "0x6000200")]
	[Address(RVA = "0x1140A3C", Offset = "0x1140A3C", VA = "0x1140A3C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0x1140B78", Offset = "0x1140B78", VA = "0x1140B78")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0x1140CDC", Offset = "0x1140CDC", VA = "0x1140CDC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0x1140B7C", Offset = "0x1140B7C", VA = "0x1140B7C")]
	public void ChangeMaterial()
	{
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0x1140CE0", Offset = "0x1140CE0", VA = "0x1140CE0")]
	private void Click()
	{
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0x1140E10", Offset = "0x1140E10", VA = "0x1140E10")]
	public MUI_Checkbox()
	{
	}
}
[Token(Token = "0x200005E")]
public class MUI_CheckboxOn : MonoBehaviour
{
	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public eCheck stateNum;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool invert;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject objectToCall;

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string functionToCall;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material materialOff;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material materialOn;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Renderer r;

	[Token(Token = "0x6000206")]
	[Address(RVA = "0x1140E18", Offset = "0x1140E18", VA = "0x1140E18")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0x1140E6C", Offset = "0x1140E6C", VA = "0x1140E6C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0x1141020", Offset = "0x1141020", VA = "0x1141020")]
	private void Start()
	{
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0x1140EEC", Offset = "0x1140EEC", VA = "0x1140EEC")]
	private void ChangeMaterial()
	{
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0x1141058", Offset = "0x1141058", VA = "0x1141058")]
	private void Click()
	{
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0x11411C4", Offset = "0x11411C4", VA = "0x11411C4")]
	public MUI_CheckboxOn()
	{
	}
}
[Token(Token = "0x200005F")]
public class MUI_ComboBox : MonoBehaviour
{
	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject objectToCall;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string functionToCall;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material materialOff;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMesh selectedText;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject itemsList;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject listBkg;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject listItemPrefab;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject listItemPrefabNext;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool fixedPosition;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform fixedCenter;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Material materialOn;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Renderer r;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool isOpen;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<string> items;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private List<bool> notSelectableLabel;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int selectedIndex;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private bool multiSelection;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<bool> itemsMultiSelected;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool closeMultiSelectionAfterSelect;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
	private bool listChanged;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private List<GameObject> itemsObjects;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float bkgSizeOrg;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private string selectedTextFormat;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<MUI_ComboBox> listCacheChilds;

	[Token(Token = "0x600020C")]
	[Address(RVA = "0x11411CC", Offset = "0x11411CC", VA = "0x11411CC")]
	public static void Init()
	{
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0x1141288", Offset = "0x1141288", VA = "0x1141288")]
	private static bool CallbackHaveOpenComboBoxChild(GameObject go)
	{
		return default(bool);
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0x114149C", Offset = "0x114149C", VA = "0x114149C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0x1141554", Offset = "0x1141554", VA = "0x1141554")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0x1141610", Offset = "0x1141610", VA = "0x1141610")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0x1141630", Offset = "0x1141630", VA = "0x1141630")]
	private void Start()
	{
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0x1141668", Offset = "0x1141668", VA = "0x1141668")]
	private void Update()
	{
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0x11415D4", Offset = "0x11415D4", VA = "0x11415D4")]
	private void ChangeMaterial()
	{
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0x1141848", Offset = "0x1141848", VA = "0x1141848")]
	private void Click()
	{
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0x114229C", Offset = "0x114229C", VA = "0x114229C")]
	private void OnClickItem(int idx)
	{
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0x1141A8C", Offset = "0x1141A8C", VA = "0x1141A8C")]
	private void RebuildList()
	{
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0x11429B4", Offset = "0x11429B4", VA = "0x11429B4")]
	private void UpdateSelectedItem()
	{
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0x1142B30", Offset = "0x1142B30", VA = "0x1142B30")]
	public void SetMultiSelection(bool multi, bool closeAfterSelect, string label)
	{
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0x1142C90", Offset = "0x1142C90", VA = "0x1142C90")]
	public void ClearItems()
	{
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0x1142D2C", Offset = "0x1142D2C", VA = "0x1142D2C")]
	public int AddNotSelectableLabel(string text)
	{
		return default(int);
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0x1142DC8", Offset = "0x1142DC8", VA = "0x1142DC8")]
	public int AddItem(string text)
	{
		return default(int);
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0x114279C", Offset = "0x114279C", VA = "0x114279C")]
	public void SetSelected(int idx)
	{
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0x1142EBC", Offset = "0x1142EBC", VA = "0x1142EBC")]
	public void SetSelectedTextFormat(string text)
	{
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0x1142ED4", Offset = "0x1142ED4", VA = "0x1142ED4")]
	public void SetNotSelectedText(string text)
	{
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0x1142F6C", Offset = "0x1142F6C", VA = "0x1142F6C")]
	public void SetSelectedText(string text)
	{
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0x1142FF4", Offset = "0x1142FF4", VA = "0x1142FF4")]
	public int GetSelectedIndex()
	{
		return default(int);
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0x11425BC", Offset = "0x11425BC", VA = "0x11425BC")]
	public void SetSelected(int idx, bool selected)
	{
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0x1142430", Offset = "0x1142430", VA = "0x1142430")]
	public bool IsSelectedItem(int idx)
	{
		return default(bool);
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0x1143084", Offset = "0x1143084", VA = "0x1143084")]
	public int GetItemsCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0x11430D0", Offset = "0x11430D0", VA = "0x11430D0")]
	public bool IsOpen()
	{
		return default(bool);
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0x1141620", Offset = "0x1141620", VA = "0x1141620")]
	public void Close()
	{
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0x11430D8", Offset = "0x11430D8", VA = "0x11430D8")]
	public MUI_ComboBox()
	{
	}
}
[Token(Token = "0x2000060")]
public class MUI_ComboBoxItem : MonoBehaviour
{
	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMesh text;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMesh textLabel;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject checkIcon;

	[Token(Token = "0x6000228")]
	[Address(RVA = "0x11432A4", Offset = "0x11432A4", VA = "0x11432A4")]
	public MUI_ComboBoxItem()
	{
	}
}
[Token(Token = "0x2000061")]
public class MUI_CreateTextShadow : MonoBehaviour
{
	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color shadowColor;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 shadowOffset;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int createShadowDelay;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject shadowObject;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private TextMesh tmThis;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private TextMesh tmShadow;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string lastText;

	[Token(Token = "0x6000229")]
	[Address(RVA = "0x11459FC", Offset = "0x11459FC", VA = "0x11459FC")]
	private void Start()
	{
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0x1145A08", Offset = "0x1145A08", VA = "0x1145A08")]
	private void Update()
	{
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0x1146038", Offset = "0x1146038", VA = "0x1146038")]
	public void TextChanged()
	{
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0x1145B90", Offset = "0x1145B90", VA = "0x1145B90")]
	private void CreateShadow()
	{
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0x11460E4", Offset = "0x11460E4", VA = "0x11460E4")]
	public MUI_CreateTextShadow()
	{
	}
}
[Token(Token = "0x2000062")]
public class MUI_DialogWindow : MonoBehaviour
{
	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMesh[] textMesh;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] button;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject picture;

	[Token(Token = "0x600022E")]
	[Address(RVA = "0x1146184", Offset = "0x1146184", VA = "0x1146184")]
	private void Start()
	{
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0x1146188", Offset = "0x1146188", VA = "0x1146188")]
	private void SetText0(string text)
	{
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0x114627C", Offset = "0x114627C", VA = "0x114627C")]
	private void SetText1(string text)
	{
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0x1146288", Offset = "0x1146288", VA = "0x1146288")]
	private void SetText2(string text)
	{
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0x1146294", Offset = "0x1146294", VA = "0x1146294")]
	private void SetText3(string text)
	{
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0x1146194", Offset = "0x1146194", VA = "0x1146194")]
	private void SetText(int index, string text)
	{
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0x11462A0", Offset = "0x11462A0", VA = "0x11462A0")]
	private void ShowButton(int index)
	{
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0x11462F8", Offset = "0x11462F8", VA = "0x11462F8")]
	private void HideButton(int index)
	{
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0x1146350", Offset = "0x1146350", VA = "0x1146350")]
	private void SetPictureMaterial(Material mat)
	{
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0x1146410", Offset = "0x1146410", VA = "0x1146410")]
	public MUI_DialogWindow()
	{
	}
}
[Token(Token = "0x2000063")]
public class MUI_HideObjectsWhenVisible : MonoBehaviour
{
	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] objects;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool showOnDisable;

	[Token(Token = "0x6000238")]
	[Address(RVA = "0x13597E8", Offset = "0x13597E8", VA = "0x13597E8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0x13598D4", Offset = "0x13598D4", VA = "0x13598D4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0x13599C8", Offset = "0x13599C8", VA = "0x13599C8")]
	public MUI_HideObjectsWhenVisible()
	{
	}
}
[Token(Token = "0x2000064")]
public class MUI_HideWhenKeyPresent : MonoBehaviour
{
	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string keyID;

	[Token(Token = "0x600023B")]
	[Address(RVA = "0x13599D8", Offset = "0x13599D8", VA = "0x13599D8")]
	public void Start()
	{
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0x1359A2C", Offset = "0x1359A2C", VA = "0x1359A2C")]
	public MUI_HideWhenKeyPresent()
	{
	}
}
[Token(Token = "0x2000065")]
public class MUI_Init : MonoBehaviour
{
	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool waitForInitialize;

	[Token(Token = "0x600023D")]
	[Address(RVA = "0x1359A80", Offset = "0x1359A80", VA = "0x1359A80")]
	private void Awake()
	{
	}

	[Token(Token = "0x600023E")]
	[Address(RVA = "0x1359BF0", Offset = "0x1359BF0", VA = "0x1359BF0")]
	private void Start()
	{
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0x1359BF4", Offset = "0x1359BF4", VA = "0x1359BF4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0x1359A84", Offset = "0x1359A84", VA = "0x1359A84")]
	private void Init()
	{
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0x1359CC4", Offset = "0x1359CC4", VA = "0x1359CC4")]
	public MUI_Init()
	{
	}
}
[Token(Token = "0x2000066")]
public class MUI_OKButton : MonoBehaviour
{
	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static float handledBackTime;

	[Token(Token = "0x6000242")]
	[Address(RVA = "0x1359CCC", Offset = "0x1359CCC", VA = "0x1359CCC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0x1359DC0", Offset = "0x1359DC0", VA = "0x1359DC0")]
	public MUI_OKButton()
	{
	}
}
[Token(Token = "0x2000067")]
public class MUI_backButton : MonoBehaviour
{
	[Token(Token = "0x6000245")]
	[Address(RVA = "0x1359DDC", Offset = "0x1359DDC", VA = "0x1359DDC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0x1359F2C", Offset = "0x1359F2C", VA = "0x1359F2C")]
	public MUI_backButton()
	{
	}
}
[Token(Token = "0x2000068")]
public class MUI_button_creator : MonoBehaviour
{
	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material buttonMaterial;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector2 buttonSize;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float buttonSliceSidesMargin;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float textPosX;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float textPosY;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float textCharacterSize;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextAnchor textAnchor;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public TextAlignment textAlignment;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int textFontSize;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public FontStyle textFontStyle;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Font textFont;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Color textColor;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float textAreaW;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float textAreaH;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool textAddShadow;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public Color textShadowColor;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public Vector3 textShadowOffset;

	[Token(Token = "0x6000247")]
	[Address(RVA = "0x1359F34", Offset = "0x1359F34", VA = "0x1359F34")]
	public void UpdateInEditor()
	{
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0x135AAFC", Offset = "0x135AAFC", VA = "0x135AAFC")]
	protected TextMesh GetChildTextMesh(GameObject go)
	{
		return null;
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0x135AD50", Offset = "0x135AD50", VA = "0x135AD50")]
	public MUI_button_creator()
	{
	}
}
[Token(Token = "0x2000069")]
public class MUI_click_ApplicationQuit : MonoBehaviour
{
	[Token(Token = "0x600024A")]
	[Address(RVA = "0x135ADF4", Offset = "0x135ADF4", VA = "0x135ADF4")]
	private void Click()
	{
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0x135ADFC", Offset = "0x135ADFC", VA = "0x135ADFC")]
	public MUI_click_ApplicationQuit()
	{
	}
}
[Token(Token = "0x200006A")]
public class MUI_click_CallFunction : MonoBehaviour
{
	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject objectToCall;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string functionToCall;

	[Token(Token = "0x600024C")]
	[Address(RVA = "0x135AE04", Offset = "0x135AE04", VA = "0x135AE04")]
	private void Click()
	{
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0x135AF08", Offset = "0x135AF08", VA = "0x135AF08")]
	public MUI_click_CallFunction()
	{
	}
}
[Token(Token = "0x200006B")]
public class MUI_click_CallFunction_Int : MonoBehaviour
{
	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject objectToCall;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string functionToCall;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int param;

	[Token(Token = "0x600024E")]
	[Address(RVA = "0x135AF10", Offset = "0x135AF10", VA = "0x135AF10")]
	private void Click()
	{
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0x135AFF8", Offset = "0x135AFF8", VA = "0x135AFF8")]
	public void MUI_SetGameObject(GameObject go)
	{
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0x135B000", Offset = "0x135B000", VA = "0x135B000")]
	public void MUI_SetFunction(string fun)
	{
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0x135B008", Offset = "0x135B008", VA = "0x135B008")]
	public void MUI_SetParam(int p)
	{
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0x135B010", Offset = "0x135B010", VA = "0x135B010")]
	public MUI_click_CallFunction_Int()
	{
	}
}
[Token(Token = "0x200006C")]
public class MUI_click_CallFunction_Int_OpenUrl : MonoBehaviour
{
	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject objectToCall;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string functionToCall;

	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int param;

	[Token(Token = "0x6000253")]
	[Address(RVA = "0x135B018", Offset = "0x135B018", VA = "0x135B018")]
	private void Down()
	{
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0x135B01C", Offset = "0x135B01C", VA = "0x135B01C")]
	private void Click()
	{
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0x135B020", Offset = "0x135B020", VA = "0x135B020")]
	private void Call()
	{
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0x135B108", Offset = "0x135B108", VA = "0x135B108")]
	private void MUI_SetGameObject(GameObject go)
	{
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0x135B110", Offset = "0x135B110", VA = "0x135B110")]
	private void MUI_SetFunction(string fun)
	{
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0x135B118", Offset = "0x135B118", VA = "0x135B118")]
	private void MUI_SetParam(int p)
	{
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0x135B120", Offset = "0x135B120", VA = "0x135B120")]
	public MUI_click_CallFunction_Int_OpenUrl()
	{
	}
}
[Token(Token = "0x200006D")]
public class MUI_click_CallFunction_Object : MonoBehaviour
{
	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject objectToCall;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string functionToCall;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject param;

	[Token(Token = "0x600025A")]
	[Address(RVA = "0x135B128", Offset = "0x135B128", VA = "0x135B128")]
	private void SetObjectToCall(GameObject obj)
	{
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0x135B130", Offset = "0x135B130", VA = "0x135B130")]
	private void SetFunctionToCall(string fun)
	{
	}

	[Token(Token = "0x600025C")]
	[Address(RVA = "0x135B138", Offset = "0x135B138", VA = "0x135B138")]
	private void SetParam(GameObject val)
	{
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0x135B140", Offset = "0x135B140", VA = "0x135B140")]
	private void Click()
	{
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0x135B1D0", Offset = "0x135B1D0", VA = "0x135B1D0")]
	public MUI_click_CallFunction_Object()
	{
	}
}
[Token(Token = "0x200006E")]
public class MUI_click_CallFunction_OpenUrl : MonoBehaviour
{
	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject objectToCall;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string functionToCall;

	[Token(Token = "0x600025F")]
	[Address(RVA = "0x135B1D8", Offset = "0x135B1D8", VA = "0x135B1D8")]
	private void Down()
	{
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0x135B1DC", Offset = "0x135B1DC", VA = "0x135B1DC")]
	private void Click()
	{
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0x135B1E0", Offset = "0x135B1E0", VA = "0x135B1E0")]
	private void Call()
	{
	}

	[Token(Token = "0x6000262")]
	[Address(RVA = "0x135B2E4", Offset = "0x135B2E4", VA = "0x135B2E4")]
	public MUI_click_CallFunction_OpenUrl()
	{
	}
}
[Token(Token = "0x200006F")]
public class MUI_click_CallFunction_SelfName : MonoBehaviour
{
	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject objectToCall;

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string functionToCall;

	[Token(Token = "0x6000263")]
	[Address(RVA = "0x135B2EC", Offset = "0x135B2EC", VA = "0x135B2EC")]
	private void Click()
	{
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0x135B3A8", Offset = "0x135B3A8", VA = "0x135B3A8")]
	public MUI_click_CallFunction_SelfName()
	{
	}
}
[Token(Token = "0x2000070")]
public class MUI_click_CallFunction_String : MonoBehaviour
{
	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject objectToCall;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string functionToCall;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string param;

	[Token(Token = "0x6000265")]
	[Address(RVA = "0x135B3B0", Offset = "0x135B3B0", VA = "0x135B3B0")]
	public void SetObjectToCall(GameObject obj)
	{
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0x135B3B8", Offset = "0x135B3B8", VA = "0x135B3B8")]
	public void SetFunctionToCall(string fun)
	{
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0x135B3C0", Offset = "0x135B3C0", VA = "0x135B3C0")]
	public void SetParam(string val)
	{
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0x135B3C8", Offset = "0x135B3C8", VA = "0x135B3C8")]
	private void Click()
	{
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0x135B458", Offset = "0x135B458", VA = "0x135B458")]
	public MUI_click_CallFunction_String()
	{
	}
}
[Token(Token = "0x2000071")]
public class MUI_click_CallFunction_V3 : MonoBehaviour
{
	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject objectToCall;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string functionToCall;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 param;

	[Token(Token = "0x600026A")]
	[Address(RVA = "0x135B4AC", Offset = "0x135B4AC", VA = "0x135B4AC")]
	private void Click()
	{
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0x135B5A4", Offset = "0x135B5A4", VA = "0x135B5A4")]
	private void MUI_SetGameObject(GameObject go)
	{
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0x135B5AC", Offset = "0x135B5AC", VA = "0x135B5AC")]
	private void MUI_SetFunction(string fun)
	{
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0x135B5B4", Offset = "0x135B5B4", VA = "0x135B5B4")]
	private void MUI_SetParam(Vector3 p)
	{
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0x135B5C0", Offset = "0x135B5C0", VA = "0x135B5C0")]
	public MUI_click_CallFunction_V3()
	{
	}
}
[Token(Token = "0x2000072")]
public class MUI_click_LoadScene : MonoBehaviour
{
	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string sceneName;

	[Token(Token = "0x600026F")]
	[Address(RVA = "0x135B5C8", Offset = "0x135B5C8", VA = "0x135B5C8")]
	private void Click()
	{
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0x135B664", Offset = "0x135B664", VA = "0x135B664")]
	public MUI_click_LoadScene()
	{
	}
}
[Token(Token = "0x2000073")]
public class MUI_click_OpenUrl : MonoBehaviour
{
	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string url;

	[Token(Token = "0x6000271")]
	[Address(RVA = "0x135BE34", Offset = "0x135BE34", VA = "0x135BE34")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0x135BEEC", Offset = "0x135BEEC", VA = "0x135BEEC")]
	private void Click()
	{
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0x135BF58", Offset = "0x135BF58", VA = "0x135BF58")]
	private void SetUrl(string val)
	{
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0x135BF60", Offset = "0x135BF60", VA = "0x135BF60")]
	public MUI_click_OpenUrl()
	{
	}
}
[Token(Token = "0x2000074")]
public class MUI_click_SaveData : MonoBehaviour
{
	[Token(Token = "0x6000275")]
	[Address(RVA = "0x135BFB4", Offset = "0x135BFB4", VA = "0x135BFB4")]
	private void Click()
	{
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0x135C010", Offset = "0x135C010", VA = "0x135C010")]
	public MUI_click_SaveData()
	{
	}
}
[Token(Token = "0x2000075")]
public class MUI_click_ShowHideObjects : MonoBehaviour
{
	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] objectToShow;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] objectToHide;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool listenToCallback;

	[Token(Token = "0x6000277")]
	[Address(RVA = "0x135C1B0", Offset = "0x135C1B0", VA = "0x135C1B0")]
	public void Click()
	{
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0x135C340", Offset = "0x135C340", VA = "0x135C340")]
	public void ForceClick()
	{
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0x135C1C0", Offset = "0x135C1C0", VA = "0x135C1C0")]
	private void Process()
	{
	}

	[Token(Token = "0x600027A")]
	[Address(RVA = "0x135C344", Offset = "0x135C344", VA = "0x135C344")]
	public void SetObjectToShow(GameObject obj)
	{
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0x135C420", Offset = "0x135C420", VA = "0x135C420")]
	public void ListenToCallback()
	{
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0x135C42C", Offset = "0x135C42C", VA = "0x135C42C")]
	public MUI_click_ShowHideObjects()
	{
	}
}
[Token(Token = "0x2000076")]
public class MUI_effect_Pulse : MonoBehaviour
{
	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float time;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve scale;

	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool startPulsing;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool pulseWhenPaused;

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float blinkFrequency;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float currentTime;

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool pulse;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 localScale;

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool initialized;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	private bool blink;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float blinkTime;

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float blinkCurrTime;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Renderer r;

	[Token(Token = "0x600027D")]
	[Address(RVA = "0x135C434", Offset = "0x135C434", VA = "0x135C434")]
	private void Awake()
	{
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0x135C488", Offset = "0x135C488", VA = "0x135C488")]
	private void Start()
	{
	}

	[Token(Token = "0x600027F")]
	[Address(RVA = "0x135C4D4", Offset = "0x135C4D4", VA = "0x135C4D4")]
	private void StopPulse()
	{
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0x135C528", Offset = "0x135C528", VA = "0x135C528")]
	private void StartPulse()
	{
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0x135C534", Offset = "0x135C534", VA = "0x135C534")]
	private void Update()
	{
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0x135C7AC", Offset = "0x135C7AC", VA = "0x135C7AC")]
	private void StartBlink()
	{
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0x135C714", Offset = "0x135C714", VA = "0x135C714")]
	private void StopBlink()
	{
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0x135C7BC", Offset = "0x135C7BC", VA = "0x135C7BC")]
	private void StartBlinkTime(float time)
	{
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0x135C7D0", Offset = "0x135C7D0", VA = "0x135C7D0")]
	public MUI_effect_Pulse()
	{
	}
}
[Token(Token = "0x2000077")]
public class MUI_multipage_text : MonoBehaviour
{
	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int maxLines;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool activateOnStart;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool resetOnOpen;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	public bool closeOnEnd;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	public bool translate;

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject buttonClose;

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject buttonNext;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject buttonPrev;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMesh text;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string[] lines;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int lineToShow;

	[Token(Token = "0x6000286")]
	[Address(RVA = "0x135C7F0", Offset = "0x135C7F0", VA = "0x135C7F0")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0x135C888", Offset = "0x135C888", VA = "0x135C888")]
	public void Start()
	{
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0x135CB5C", Offset = "0x135CB5C", VA = "0x135CB5C")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0x135CDD8", Offset = "0x135CDD8", VA = "0x135CDD8")]
	public void PrepareText(string t)
	{
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0x135CE94", Offset = "0x135CE94", VA = "0x135CE94")]
	public void CloseNow()
	{
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0x135C8D4", Offset = "0x135C8D4", VA = "0x135C8D4")]
	private void SetTextInternal(string t)
	{
	}

	[Token(Token = "0x600028C")]
	[Address(RVA = "0x135CEBC", Offset = "0x135CEBC", VA = "0x135CEBC")]
	private bool IsEmpty(string line)
	{
		return default(bool);
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0x135CB78", Offset = "0x135CB78", VA = "0x135CB78")]
	private void ShowLines()
	{
	}

	[Token(Token = "0x600028E")]
	[Address(RVA = "0x135CF60", Offset = "0x135CF60", VA = "0x135CF60")]
	public void Next()
	{
	}

	[Token(Token = "0x600028F")]
	[Address(RVA = "0x135CF98", Offset = "0x135CF98", VA = "0x135CF98")]
	public void Prev()
	{
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0x135CFD4", Offset = "0x135CFD4", VA = "0x135CFD4")]
	public MUI_multipage_text()
	{
	}
}
[Token(Token = "0x2000078")]
public class MUI_setup_Anchor : MonoBehaviour
{
	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool hideOnStart;

	[Token(Token = "0x6000291")]
	[Address(RVA = "0x135CFE4", Offset = "0x135CFE4", VA = "0x135CFE4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0x135D208", Offset = "0x135D208", VA = "0x135D208")]
	public MUI_setup_Anchor()
	{
	}
}
[Token(Token = "0x2000079")]
public class MUI_setup_FontColor : MonoBehaviour
{
	[Token(Token = "0x6000293")]
	[Address(RVA = "0x135D218", Offset = "0x135D218", VA = "0x135D218")]
	private void Start()
	{
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0x135D32C", Offset = "0x135D32C", VA = "0x135D32C")]
	public MUI_setup_FontColor()
	{
	}
}
[Token(Token = "0x200007A")]
public class MUI_setup_Scaler : MonoBehaviour
{
	[Token(Token = "0x40002D6")]
	private const float maxScreenHeightInMM = 90f;

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool updateOnAwake;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 myScale;

	[Token(Token = "0x6000295")]
	[Address(RVA = "0x135D334", Offset = "0x135D334", VA = "0x135D334")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0x135D624", Offset = "0x135D624", VA = "0x135D624")]
	private void Start()
	{
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0x135D3D8", Offset = "0x135D3D8", VA = "0x135D3D8")]
	public void UpdateScale()
	{
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0x135D6B8", Offset = "0x135D6B8", VA = "0x135D6B8")]
	public MUI_setup_Scaler()
	{
	}
}
[Token(Token = "0x200007B")]
public class MUI_setup_ShowHide : MonoBehaviour
{
	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] objectToShow;

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] objectToHide;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool hideAllCall;

	[Token(Token = "0x6000299")]
	[Address(RVA = "0x135D6C8", Offset = "0x135D6C8", VA = "0x135D6C8")]
	private void Start()
	{
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0x135D788", Offset = "0x135D788", VA = "0x135D788")]
	private void MUISetupHideAll(bool hide)
	{
	}

	[Token(Token = "0x600029B")]
	[Address(RVA = "0x135D858", Offset = "0x135D858", VA = "0x135D858")]
	public MUI_setup_ShowHide()
	{
	}
}
[Token(Token = "0x200007C")]
public class MUI_setup_SliceCorners : MonoBehaviour
{
	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float marginU;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float marginV;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float borderScale;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	protected bool calculated;

	[Token(Token = "0x600029C")]
	[Address(RVA = "0x135D860", Offset = "0x135D860", VA = "0x135D860")]
	private void Start()
	{
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0x135D870", Offset = "0x135D870", VA = "0x135D870")]
	public void Calculate()
	{
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0x135DDF8", Offset = "0x135DDF8", VA = "0x135DDF8")]
	public MUI_setup_SliceCorners()
	{
	}
}
[Token(Token = "0x200007D")]
public class MUI_setup_SliceSides : MonoBehaviour
{
	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91A5D0", Offset = "0x91A5D0")]
	public float margin;

	[Token(Token = "0x600029F")]
	[Address(RVA = "0x135DE18", Offset = "0x135DE18", VA = "0x135DE18")]
	private void Start()
	{
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0x135A530", Offset = "0x135A530", VA = "0x135A530")]
	public void Calculate()
	{
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0x135DE1C", Offset = "0x135DE1C", VA = "0x135DE1C")]
	public MUI_setup_SliceSides()
	{
	}
}
[Token(Token = "0x200007E")]
public class MUI_setup_SliceSides_Vertical : MonoBehaviour
{
	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91A608", Offset = "0x91A608")]
	public float margin;

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0x135DE30", Offset = "0x135DE30", VA = "0x135DE30")]
	private void Start()
	{
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0x135DE34", Offset = "0x135DE34", VA = "0x135DE34")]
	public void Calculate()
	{
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0x135E408", Offset = "0x135E408", VA = "0x135E408")]
	public MUI_setup_SliceSides_Vertical()
	{
	}
}
[Token(Token = "0x200007F")]
public class MUI_setup_TextScale : MonoBehaviour
{
	[Token(Token = "0x60002A5")]
	[Address(RVA = "0x135E41C", Offset = "0x135E41C", VA = "0x135E41C")]
	private void Start()
	{
	}

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0x135AC14", Offset = "0x135AC14", VA = "0x135AC14")]
	public void Calculate()
	{
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0x135E420", Offset = "0x135E420", VA = "0x135E420")]
	public void CalculateAuto()
	{
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0x135E50C", Offset = "0x135E50C", VA = "0x135E50C")]
	public MUI_setup_TextScale()
	{
	}
}
[Serializable]
[Token(Token = "0x2000080")]
public class MUI_window_grid_line
{
	[Token(Token = "0x2000081")]
	public enum eAlign
	{
		[Token(Token = "0x40002E8")]
		center_vertical,
		[Token(Token = "0x40002E9")]
		center_horizontal,
		[Token(Token = "0x40002EA")]
		left,
		[Token(Token = "0x40002EB")]
		right,
		[Token(Token = "0x40002EC")]
		top,
		[Token(Token = "0x40002ED")]
		bottom
	}

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public eAlign alignTo;

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float margin;

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color color;

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string pos;

	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject alignObject;

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0x135ED74", Offset = "0x135ED74", VA = "0x135ED74")]
	public string GetPosInfo()
	{
		return null;
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0x135ED7C", Offset = "0x135ED7C", VA = "0x135ED7C")]
	public MUI_window_grid_line()
	{
	}
}
[Token(Token = "0x2000082")]
public class MUI_window_grid : MonoBehaviour
{
	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string linesName;

	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool draw;

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MUI_window_grid_line[] lines;

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0x135E514", Offset = "0x135E514", VA = "0x135E514")]
	private void Start()
	{
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0x135E578", Offset = "0x135E578", VA = "0x135E578")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0x135ED18", Offset = "0x135ED18", VA = "0x135ED18")]
	public MUI_window_grid()
	{
	}
}
[Token(Token = "0x2000083")]
public class MUI_zoom : MonoBehaviour
{
	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool hideOnStart;

	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float min;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float max;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float mid;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float speed;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MUI_Scroll scroll;

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0x135EDE0", Offset = "0x135EDE0", VA = "0x135EDE0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0x135EEB4", Offset = "0x135EEB4", VA = "0x135EEB4")]
	private void Start()
	{
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0x135F018", Offset = "0x135F018", VA = "0x135F018")]
	private void Update()
	{
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0x135F1EC", Offset = "0x135F1EC", VA = "0x135F1EC")]
	public MUI_zoom()
	{
	}
}
[Token(Token = "0x2000084")]
public class MissionAreaWall : MonoBehaviour
{
	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Renderer wallRend;

	[Token(Token = "0x40002F8")]
	private const float kWallToPlaneDistance = 10f;

	[Token(Token = "0x40002F9")]
	private const float kWallFadeInThreshold = 1000f;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int fadePropId;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int scalePropId;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material mat;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform wall;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float lastRadioTime;

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0x11F7424", Offset = "0x11F7424", VA = "0x11F7424")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0x11F751C", Offset = "0x11F751C", VA = "0x11F751C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0x11F7924", Offset = "0x11F7924", VA = "0x11F7924")]
	private void PlayRadio()
	{
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0x11F79BC", Offset = "0x11F79BC", VA = "0x11F79BC")]
	public MissionAreaWall()
	{
	}
}
[Token(Token = "0x2000085")]
public class OvrAvatarTestDriver : OvrAvatarDriver
{
	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 headPos;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion headRot;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0xF46F34", Offset = "0xF46F34", VA = "0xF46F34")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0xF47098", Offset = "0xF47098", VA = "0xF47098")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0xF47434", Offset = "0xF47434", VA = "0xF47434")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0xF475D8", Offset = "0xF475D8", VA = "0xF475D8", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0xF47604", Offset = "0xF47604", VA = "0xF47604")]
	public OvrAvatarTestDriver()
	{
	}
}
[Token(Token = "0x2000086")]
public class PoseEditHelper : MonoBehaviour
{
	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform poseRoot;

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0x117D9AC", Offset = "0x117D9AC", VA = "0x117D9AC")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0x117DA34", Offset = "0x117DA34", VA = "0x117DA34")]
	private void DrawJoints(Transform joint)
	{
	}

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0x117DBA8", Offset = "0x117DBA8", VA = "0x117DBA8")]
	public PoseEditHelper()
	{
	}
}
[Token(Token = "0x2000087")]
public class GazeTargetSpawner : MonoBehaviour
{
	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject GazeTargetPrefab;

	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int NumberOfDummyTargets;

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int RadiusMultiplier;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool isVisible;

	[Token(Token = "0x17000037")]
	public bool IsVisible
	{
		[Token(Token = "0x60002BE")]
		[Address(RVA = "0x1476020", Offset = "0x1476020", VA = "0x1476020")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002BF")]
		[Address(RVA = "0x1476028", Offset = "0x1476028", VA = "0x1476028")]
		set
		{
		}
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0x1476164", Offset = "0x1476164", VA = "0x1476164")]
	private void Start()
	{
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0x147632C", Offset = "0x147632C", VA = "0x147632C")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0x1476334", Offset = "0x1476334", VA = "0x1476334")]
	public GazeTargetSpawner()
	{
	}
}
[Token(Token = "0x2000088")]
public class RemoteLoopbackManager : MonoBehaviour
{
	[Token(Token = "0x2000089")]
	private class PacketLatencyPair
	{
		[Token(Token = "0x400030C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte[] PacketData;

		[Token(Token = "0x400030D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float FakeLatency;

		[Token(Token = "0x60002C9")]
		[Address(RVA = "0xD8DE14", Offset = "0xD8DE14", VA = "0xD8DE14")]
		public PacketLatencyPair()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200008A")]
	public class SimulatedLatencySettings
	{
		[Token(Token = "0x400030E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x91A660", Offset = "0x91A660")]
		public float FakeLatencyMax;

		[Token(Token = "0x400030F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x91A678", Offset = "0x91A678")]
		public float FakeLatencyMin;

		[Token(Token = "0x4000310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x91A690", Offset = "0x91A690")]
		public float LatencyWeight;

		[Token(Token = "0x4000311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x91A6A8", Offset = "0x91A6A8")]
		public int MaxSamples;

		[Token(Token = "0x4000312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal float AverageWindow;

		[Token(Token = "0x4000313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal float LatencySum;

		[Token(Token = "0x4000314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal LinkedList<float> LatencyValues;

		[Token(Token = "0x60002CA")]
		[Address(RVA = "0xD8DE1C", Offset = "0xD8DE1C", VA = "0xD8DE1C")]
		public float NextValue()
		{
			return default(float);
		}

		[Token(Token = "0x60002CB")]
		[Address(RVA = "0xD8DF54", Offset = "0xD8DF54", VA = "0xD8DF54")]
		public SimulatedLatencySettings()
		{
		}
	}

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OvrAvatar LocalAvatar;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar LoopbackAvatar;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimulatedLatencySettings LatencySettings;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int PacketSequence;

	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LinkedList<PacketLatencyPair> packetQueue;

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0x118FA7C", Offset = "0x118FA7C", VA = "0x118FA7C")]
	private void Start()
	{
	}

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0x118FBC0", Offset = "0x118FBC0", VA = "0x118FBC0")]
	private void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0x118FF98", Offset = "0x118FF98", VA = "0x118FF98")]
	private void Update()
	{
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0x118FEF0", Offset = "0x118FEF0", VA = "0x118FEF0")]
	private void SendPacketData(byte[] data)
	{
	}

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0x11902C8", Offset = "0x11902C8", VA = "0x11902C8")]
	private void ReceivePacketData(byte[] data)
	{
	}

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0x11905B0", Offset = "0x11905B0", VA = "0x11905B0")]
	public RemoteLoopbackManager()
	{
	}
}
[Token(Token = "0x200008B")]
public class P2PManager
{
	[Token(Token = "0x200008C")]
	private enum MessageType : byte
	{
		[Token(Token = "0x4000316")]
		Update = 1
	}

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0xF48018", Offset = "0xF48018", VA = "0xF48018")]
	public P2PManager()
	{
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0xF480F8", Offset = "0xF480F8", VA = "0xF480F8")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0xF481DC", Offset = "0xF481DC", VA = "0xF481DC")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0xF4825C", Offset = "0xF4825C", VA = "0xF4825C")]
	private void PeerConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0xF483CC", Offset = "0xF483CC", VA = "0xF483CC")]
	private void ConnectionStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0xF4860C", Offset = "0xF4860C", VA = "0xF4860C")]
	public void SendAvatarUpdate(ulong userID, Transform rootTransform, uint sequence, byte[] avatarPacket)
	{
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0xF489FC", Offset = "0xF489FC", VA = "0xF489FC")]
	public void GetRemotePackets()
	{
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0xF48CB8", Offset = "0xF48CB8", VA = "0xF48CB8")]
	public void processAvatarPacket(RemotePlayer remote, ref byte[] packet, ref int offset)
	{
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0xF487D8", Offset = "0xF487D8", VA = "0xF487D8")]
	private void PackByte(byte b, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0xF48BEC", Offset = "0xF48BEC", VA = "0xF48BEC")]
	private byte ReadByte(byte[] buf, ref int offset)
	{
		return default(byte);
	}

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0xF488BC", Offset = "0xF488BC", VA = "0xF488BC")]
	private void PackFloat(float f, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0xF48EF0", Offset = "0xF48EF0", VA = "0xF48EF0")]
	private float ReadFloat(byte[] buf, ref int offset)
	{
		return default(float);
	}

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0xF48820", Offset = "0xF48820", VA = "0xF48820")]
	private void PackULong(ulong u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0xF48C30", Offset = "0xF48C30", VA = "0xF48C30")]
	private ulong ReadULong(byte[] buf, ref int offset)
	{
		return default(ulong);
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0xF48960", Offset = "0xF48960", VA = "0xF48960")]
	private void PackUInt32(uint u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0xF48F78", Offset = "0xF48F78", VA = "0xF48F78")]
	private uint ReadUInt32(byte[] buf, ref int offset)
	{
		return default(uint);
	}
}
[Token(Token = "0x200008D")]
public class PlayerController : SocialPlatformManager
{
	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Camera spyCamera;

	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private GameObject cameraRig;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool showUI;

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0x10C815C", Offset = "0x10C815C", VA = "0x10C815C", Slot = "5")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0x10C8198", Offset = "0x10C8198", VA = "0x10C8198", Slot = "6")]
	public override void Start()
	{
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0x10C81D0", Offset = "0x10C81D0", VA = "0x10C81D0", Slot = "4")]
	public override void Update()
	{
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0x10C81F8", Offset = "0x10C81F8", VA = "0x10C81F8")]
	private void checkInput()
	{
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0x10C8394", Offset = "0x10C8394", VA = "0x10C8394")]
	private void ToggleCamera()
	{
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0x10C8414", Offset = "0x10C8414", VA = "0x10C8414")]
	private void ToggleUI()
	{
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0x10C8468", Offset = "0x10C8468", VA = "0x10C8468")]
	public PlayerController()
	{
	}
}
[Token(Token = "0x200008E")]
public class RemotePlayer
{
	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong remoteUserID;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool stillInRoom;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public PeerConnectionState p2pConnectionState;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PeerConnectionState voipConnectionState;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar RemoteAvatar;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 receivedRootPosition;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 receivedRootPositionPrior;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Quaternion receivedRootRotation;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Quaternion receivedRootRotationPrior;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public VoipAudioSourceHiLevel voipSource;

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0x1190654", Offset = "0x1190654", VA = "0x1190654")]
	public RemotePlayer()
	{
	}
}
[Token(Token = "0x200008F")]
public class RoomManager
{
	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong roomID;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ulong invitedRoomID;

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool amIServer;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool startupDone;

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0xDC2CF8", Offset = "0xDC2CF8", VA = "0xDC2CF8")]
	public RoomManager()
	{
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0xDC2DFC", Offset = "0xDC2DFC", VA = "0xDC2DFC")]
	private void AcceptingInviteCallback(Message<string> msg)
	{
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0xDC2F7C", Offset = "0xDC2F7C", VA = "0xDC2F7C")]
	public bool CheckForInvite()
	{
		return default(bool);
	}

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0xDC30B8", Offset = "0xDC30B8", VA = "0xDC30B8")]
	public void CreateRoom()
	{
	}

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0xDC318C", Offset = "0xDC318C", VA = "0xDC318C")]
	private void CreateAndJoinPrivateRoomCallback(Message<Oculus.Platform.Models.Room> msg)
	{
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0xDC32C8", Offset = "0xDC32C8", VA = "0xDC32C8")]
	private void OnLaunchInviteWorkflowComplete(Message msg)
	{
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0xDC2FAC", Offset = "0xDC2FAC", VA = "0xDC2FAC")]
	public void JoinExistingRoom(ulong roomID)
	{
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0xDC3350", Offset = "0xDC3350", VA = "0xDC3350")]
	private void JoinRoomCallback(Message<Oculus.Platform.Models.Room> msg)
	{
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0xDC3AA8", Offset = "0xDC3AA8", VA = "0xDC3AA8")]
	private void RoomUpdateCallback(Message<Oculus.Platform.Models.Room> msg)
	{
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0xDC3DA8", Offset = "0xDC3DA8", VA = "0xDC3DA8")]
	public void LeaveCurrentRoom()
	{
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0xDC3630", Offset = "0xDC3630", VA = "0xDC3630")]
	private void ProcessRoomData(Message<Oculus.Platform.Models.Room> msg)
	{
	}
}
[Token(Token = "0x2000090")]
public class SocialPlatformManager : MonoBehaviour
{
	[Token(Token = "0x2000091")]
	public enum State
	{
		[Token(Token = "0x400034E")]
		INITIALIZING,
		[Token(Token = "0x400034F")]
		CHECKING_LAUNCH_STATE,
		[Token(Token = "0x4000350")]
		CREATING_A_ROOM,
		[Token(Token = "0x4000351")]
		WAITING_IN_A_ROOM,
		[Token(Token = "0x4000352")]
		JOINING_A_ROOM,
		[Token(Token = "0x4000353")]
		CONNECTED_IN_A_ROOM,
		[Token(Token = "0x4000354")]
		LEAVING_A_ROOM,
		[Token(Token = "0x4000355")]
		SHUTDOWN
	}

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3 START_ROTATION_ONE;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly Vector3 START_POSITION_ONE;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 START_ROTATION_TWO;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static readonly Vector3 START_POSITION_TWO;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static readonly Vector3 START_ROTATION_THREE;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private static readonly Vector3 START_POSITION_THREE;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static readonly Vector3 START_ROTATION_FOUR;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private static readonly Vector3 START_POSITION_FOUR;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static readonly Color BLACK;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static readonly Color WHITE;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static readonly Color CYAN;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static readonly Color BLUE;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static readonly Color GREEN;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float voiceCurrent;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private uint packetSequence;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar localAvatarPrefab;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar remoteAvatarPrefab;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject helpPanel;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected MeshRenderer helpMesh;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material riftMaterial;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material gearMaterial;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected OvrAvatar localAvatar;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected GameObject localTrackingSpace;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected GameObject localPlayerHead;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Dictionary<ulong, RemotePlayer> remoteUsers;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject roomSphere;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected MeshRenderer sphereMesh;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject roomFloor;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected MeshRenderer floorMesh;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected State currentState;

	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected static SocialPlatformManager s_instance;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected RoomManager roomManager;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected P2PManager p2pManager;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected VoipManager voipManager;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected ulong myID;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected string myOculusID;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public static readonly float VOIP_SCALE;

	[Token(Token = "0x17000038")]
	public static State CurrentState
	{
		[Token(Token = "0x60002FB")]
		[Address(RVA = "0x10DA884", Offset = "0x10DA884", VA = "0x10DA884")]
		get
		{
			return default(State);
		}
	}

	[Token(Token = "0x17000039")]
	public static ulong MyID
	{
		[Token(Token = "0x60002FC")]
		[Address(RVA = "0x10DA8F4", Offset = "0x10DA8F4", VA = "0x10DA8F4")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x1700003A")]
	public static string MyOculusID
	{
		[Token(Token = "0x60002FD")]
		[Address(RVA = "0x10DA9D4", Offset = "0x10DA9D4", VA = "0x10DA9D4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0x10D8AA4", Offset = "0x10D8AA4", VA = "0x10D8AA4", Slot = "4")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0x10D8E34", Offset = "0x10D8E34", VA = "0x10D8E34", Slot = "5")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0x10D9540", Offset = "0x10D9540", VA = "0x10D9540")]
	private void InitCallback(Message<PlatformInitialize> msg)
	{
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0x10D9860", Offset = "0x10D9860", VA = "0x10D9860", Slot = "6")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0x10D9864", Offset = "0x10D9864", VA = "0x10D9864")]
	private void IsEntitledCallback(Message msg)
	{
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0x10D9984", Offset = "0x10D9984", VA = "0x10D9984")]
	private void GetLoggedInUserCallback(Message<Oculus.Platform.Models.User> msg)
	{
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0x10DA08C", Offset = "0x10DA08C", VA = "0x10DA08C")]
	private void GetLoggedInUserFriendsAndRoomsCallback(Message<UserAndRoomList> msg)
	{
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0x10DA480", Offset = "0x10DA480", VA = "0x10DA480")]
	public void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0x10DA690", Offset = "0x10DA690", VA = "0x10DA690")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0x10DA818", Offset = "0x10DA818", VA = "0x10DA818")]
	public void AddUser(ulong userID, ref RemotePlayer remoteUser)
	{
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0x10D91CC", Offset = "0x10D91CC", VA = "0x10D91CC")]
	public void LogOutputLine(string line)
	{
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0x10D96E8", Offset = "0x10D96E8", VA = "0x10D96E8")]
	public static void TerminateWithError(Message msg)
	{
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0x10D9280", Offset = "0x10D9280", VA = "0x10D9280")]
	public static void TransitionToState(State newState)
	{
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0x10DAAFC", Offset = "0x10DAAFC", VA = "0x10DAAFC")]
	private static void SetSphereColorForState()
	{
	}

	[Token(Token = "0x6000300")]
	[Address(RVA = "0x10DAC78", Offset = "0x10DAC78", VA = "0x10DAC78")]
	public static void SetFloorColorForState(bool host)
	{
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0x10DAD5C", Offset = "0x10DAD5C", VA = "0x10DAD5C")]
	public static void MarkAllRemoteUsersAsNotInRoom()
	{
	}

	[Token(Token = "0x6000302")]
	[Address(RVA = "0x10DAEB8", Offset = "0x10DAEB8", VA = "0x10DAEB8")]
	public static void MarkRemoteUserInRoom(ulong userID)
	{
	}

	[Token(Token = "0x6000303")]
	[Address(RVA = "0x10DAF9C", Offset = "0x10DAF9C", VA = "0x10DAF9C")]
	public static void ForgetRemoteUsersNotInRoom()
	{
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0x10D97A0", Offset = "0x10D97A0", VA = "0x10D97A0")]
	public static void LogOutput(string line)
	{
	}

	[Token(Token = "0x6000305")]
	[Address(RVA = "0x10DB4E4", Offset = "0x10DB4E4", VA = "0x10DB4E4")]
	public static bool IsUserInRoom(ulong userID)
	{
		return default(bool);
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0x10DB578", Offset = "0x10DB578", VA = "0x10DB578")]
	public static void AddRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0x10DB2D0", Offset = "0x10DB2D0", VA = "0x10DB2D0")]
	public static void RemoveRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0x10DB768", Offset = "0x10DB768", VA = "0x10DB768")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0x10D8A20", Offset = "0x10D8A20", VA = "0x10D8A20")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9246CC", Offset = "0x9246CC")]
	public static void MicFilter(short[] pcmData, UIntPtr pcmDataLength, int frequency, int numChannels)
	{
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0x10DB8AC", Offset = "0x10DB8AC", VA = "0x10DB8AC")]
	public static RemotePlayer GetRemoteUser(ulong userID)
	{
		return null;
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0x10DB988", Offset = "0x10DB988", VA = "0x10DB988")]
	public SocialPlatformManager()
	{
	}
}
[Token(Token = "0x2000092")]
public class VoipManager
{
	[Token(Token = "0x600030D")]
	[Address(RVA = "0xE2096C", Offset = "0xE2096C", VA = "0xE2096C")]
	public VoipManager()
	{
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0xE20A4C", Offset = "0xE20A4C", VA = "0xE20A4C")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0xE20B30", Offset = "0xE20B30", VA = "0xE20B30")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0xE20BB0", Offset = "0xE20BB0", VA = "0xE20BB0")]
	private void VoipConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x6000311")]
	[Address(RVA = "0xE20D20", Offset = "0xE20D20", VA = "0xE20D20")]
	private void VoipStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}
}
[Token(Token = "0x2000093")]
public class GazeTarget : MonoBehaviour
{
	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarGazeTargetType Type;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ovrAvatarGazeTargets RuntimeTargetList;

	[Token(Token = "0x6000312")]
	[Address(RVA = "0x1475CEC", Offset = "0x1475CEC", VA = "0x1475CEC")]
	static GazeTarget()
	{
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0x1475D64", Offset = "0x1475D64", VA = "0x1475D64")]
	private void Start()
	{
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0x1475ED8", Offset = "0x1475ED8", VA = "0x1475ED8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000315")]
	[Address(RVA = "0x1475F3C", Offset = "0x1475F3C", VA = "0x1475F3C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0x1475DA0", Offset = "0x1475DA0", VA = "0x1475DA0")]
	private void UpdateGazeTarget()
	{
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0x1476000", Offset = "0x1476000", VA = "0x1476000")]
	private ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0x1476018", Offset = "0x1476018", VA = "0x1476018")]
	public GazeTarget()
	{
	}
}
[Serializable]
[Token(Token = "0x2000094")]
public class AvatarLayer
{
	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int layerIndex;

	[Token(Token = "0x6000319")]
	[Address(RVA = "0xC19F68", Offset = "0xC19F68", VA = "0xC19F68")]
	public AvatarLayer()
	{
	}
}
[Serializable]
[Token(Token = "0x2000095")]
public class PacketRecordSettings
{
	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	internal bool RecordingFrames;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float UpdateRate;

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	internal float AccumulatedTime;

	[Token(Token = "0x600031A")]
	[Address(RVA = "0xF501EC", Offset = "0xF501EC", VA = "0xF501EC")]
	public PacketRecordSettings()
	{
	}
}
[Token(Token = "0x2000096")]
public class OvrAvatar : MonoBehaviour
{
	[Token(Token = "0x2000097")]
	public class PacketEventArgs : EventArgs
	{
		[Token(Token = "0x40003B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly OvrAvatarPacket Packet;

		[Token(Token = "0x600034F")]
		[Address(RVA = "0xD84110", Offset = "0xD84110", VA = "0xD84110")]
		public PacketEventArgs(OvrAvatarPacket packet)
		{
		}
	}

	[Token(Token = "0x2000098")]
	public enum HandType
	{
		[Token(Token = "0x40003B7")]
		Right,
		[Token(Token = "0x40003B8")]
		Left,
		[Token(Token = "0x40003B9")]
		Max
	}

	[Token(Token = "0x2000099")]
	public enum HandJoint
	{
		[Token(Token = "0x40003BB")]
		HandBase,
		[Token(Token = "0x40003BC")]
		IndexBase,
		[Token(Token = "0x40003BD")]
		IndexTip,
		[Token(Token = "0x40003BE")]
		ThumbBase,
		[Token(Token = "0x40003BF")]
		ThumbTip,
		[Token(Token = "0x40003C0")]
		Max
	}

	[Token(Token = "0x200009A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x917968", Offset = "0x917968")]
	private sealed class <WaitForMouthAudioSource>d__137 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatar <>4__this;

		[Token(Token = "0x1700003B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000353")]
			[Address(RVA = "0xD840C0", Offset = "0xD840C0", VA = "0xD840C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000355")]
			[Address(RVA = "0xD84108", Offset = "0xD84108", VA = "0xD84108", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000350")]
		[Address(RVA = "0xD83EF0", Offset = "0xD83EF0", VA = "0xD83EF0")]
		[DebuggerHidden]
		public <WaitForMouthAudioSource>d__137(int <>1__state)
		{
		}

		[Token(Token = "0x6000351")]
		[Address(RVA = "0xD83F1C", Offset = "0xD83F1C", VA = "0xD83F1C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000352")]
		[Address(RVA = "0xD83F20", Offset = "0xD83F20", VA = "0xD83F20", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000354")]
		[Address(RVA = "0xD840C8", Offset = "0xD840C8", VA = "0xD840C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x91A6C0", Offset = "0x91A6C0")]
	public IntPtr sdkAvatar;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string oculusUserID;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatarDriver Driver;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x91A6F8", Offset = "0x91A6F8")]
	public bool EnableBody;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool EnableHands;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool EnableBase;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public bool EnableExpressive;

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x91A730", Offset = "0x91A730")]
	public bool RecordPackets;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool UseSDKPackets;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PacketRecordSettings PacketSettings;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x91A768", Offset = "0x91A768")]
	public bool StartWithControllers;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AvatarLayer FirstPersonLayer;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AvatarLayer ThirdPersonLayer;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool ShowFirstPerson;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool ShowThirdPerson;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	internal ovrAvatarCapabilities Capabilities;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x91A7A0", Offset = "0x91A7A0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91A7A0", Offset = "0x91A7A0")]
	[SerializeField]
	internal ovrAvatarAssetLevelOfDetail LevelOfDetail;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91A810", Offset = "0x91A810")]
	private bool CombineMeshes;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91A848", Offset = "0x91A848")]
	public bool UseTransparentRenderQueue;

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x91A880", Offset = "0x91A880")]
	public Shader Monochrome_SurfaceShader;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Shader Monochrome_SurfaceShader_SelfOccluding;

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Shader Monochrome_SurfaceShader_PBS;

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Shader Skinshaded_SurfaceShader_SingleComponent;

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Shader Skinshaded_VertFrag_SingleComponent;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Shader Skinshaded_VertFrag_CombinedMesh;

	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Shader Skinshaded_Expressive_SurfaceShader_SingleComponent;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Shader Skinshaded_Expressive_VertFrag_SingleComponent;

	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Shader Skinshaded_Expressive_VertFrag_CombinedMesh;

	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Shader Loader_VertFrag_CombinedMesh;

	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Shader EyeLens;

	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Shader ControllerShader;

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x91A8B8", Offset = "0x91A8B8")]
	public bool CanOwnMicrophone;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91A8F0", Offset = "0x91A8F0")]
	public bool EnableLaughter;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject MouthAnchor;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform LeftHandCustomPose;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform RightHandCustomPose;

	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private HashSet<ulong> assetLoadingIds;

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool assetsFinishedLoading;

	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private OvrAvatarMaterialManager materialManager;

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool waitingForCombinedMesh;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool doneExpressiveGlobalInit;

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private Vector4 clothingAlphaOffset;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private ulong clothingAlphaTexture;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private OVRLipSyncMicInput micInput;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private OVRLipSyncContext lipsyncContext;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private OVRLipSync.Frame currentFrame;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float[] visemes;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private AudioSource audioSource;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private ONSPAudioSource spatializedSource;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private List<float[]> voiceUpdates;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ovrAvatarVisemes RuntimeVisemes;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Transform cachedLeftHandCustomPose;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Transform[] cachedCustomLeftHandJoints;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private ovrAvatarTransform[] cachedLeftHandTransforms;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private Transform cachedRightHandCustomPose;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Transform[] cachedCustomRightHandJoints;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private ovrAvatarTransform[] cachedRightHandTransforms;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private bool showLeftController;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x189")]
	private bool showRightController;

	[Token(Token = "0x4000397")]
	private const bool USE_MOBILE_TEXTURE_FORMAT = true;

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 MOUTH_HEAD_OFFSET;

	[Token(Token = "0x4000399")]
	private const string MOUTH_HELPER_NAME = "MouthAnchor";

	[Token(Token = "0x400039A")]
	private const int VISEME_COUNT = 16;

	[Token(Token = "0x400039B")]
	private const float ACTION_UNIT_ONSET_SPEED = 30f;

	[Token(Token = "0x400039C")]
	private const float ACTION_UNIT_FALLOFF_SPEED = 20f;

	[Token(Token = "0x400039D")]
	private const float VISEME_LEVEL_MULTIPLIER = 1.5f;

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	internal ulong oculusUserIDInternal;

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	internal OvrAvatarBase Base;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	internal OvrAvatarTouchController ControllerLeft;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	internal OvrAvatarTouchController ControllerRight;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	internal OvrAvatarBody Body;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	internal OvrAvatarHand HandLeft;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	internal OvrAvatarHand HandRight;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	internal ovrAvatarLookAndFeelVersion LookAndFeelVersion;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	internal ovrAvatarLookAndFeelVersion FallbackLookAndFeelVersion;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private OvrAvatarPacket CurrentUnityPacket;

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public EventHandler<PacketEventArgs> PacketRecorded;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static string[,] HandJoints;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static Vector3 MOUTH_POSITION_OFFSET;

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static string VOICE_PROPERTY;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static string MOUTH_POSITION_PROPERTY;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static string MOUTH_DIRECTION_PROPERTY;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static string MOUTH_SCALE_PROPERTY;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static float MOUTH_SCALE_GLOBAL;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private static float MOUTH_MAX_GLOBAL;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static string NECK_JONT;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public float VoiceAmplitude;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	public bool EnableMouthVertexAnimation;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static ovrAvatarLights ovrLights;

	[Token(Token = "0x600031B")]
	[Address(RVA = "0xCC3B14", Offset = "0xCC3B14", VA = "0xCC3B14")]
	static OvrAvatar()
	{
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0xCC3F00", Offset = "0xCC3F00", VA = "0xCC3F00")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0xCC3F94", Offset = "0xCC3F94", VA = "0xCC3F94")]
	public void AssetLoadedCallback(OvrAvatarAsset asset)
	{
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0xCC3FFC", Offset = "0xCC3FFC", VA = "0xCC3FFC")]
	public void CombinedMeshLoadedCallback(IntPtr assetPtr)
	{
	}

	[Token(Token = "0x600031F")]
	[Address(RVA = "0xCC412C", Offset = "0xCC412C", VA = "0xCC412C")]
	private OvrAvatarSkinnedMeshRenderComponent AddSkinnedMeshRenderComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender)
	{
		return null;
	}

	[Token(Token = "0x6000320")]
	[Address(RVA = "0xCC420C", Offset = "0xCC420C", VA = "0xCC420C")]
	private OvrAvatarSkinnedMeshRenderPBSComponent AddSkinnedMeshRenderPBSComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS)
	{
		return null;
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0xCC42E8", Offset = "0xCC42E8", VA = "0xCC42E8")]
	private OvrAvatarSkinnedMeshPBSV2RenderComponent AddSkinnedMeshRenderPBSV2Component(IntPtr renderPart, GameObject go, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRenderPBSV2, bool isBodyPartZero, bool isControllerModel)
	{
		return null;
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0xCC44CC", Offset = "0xCC44CC", VA = "0xCC44CC")]
	public static IntPtr GetRenderPart(ovrAvatarComponent component, uint renderPartIndex)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000323")]
	[Address(RVA = "0xCC45A8", Offset = "0xCC45A8", VA = "0xCC45A8")]
	private static string GetRenderPartName(ovrAvatarComponent component, uint renderPartIndex)
	{
		return null;
	}

	[Token(Token = "0x6000324")]
	[Address(RVA = "0xCC4620", Offset = "0xCC4620", VA = "0xCC4620")]
	internal static void ConvertTransform(float[] transform, ref ovrAvatarTransform target)
	{
	}

	[Token(Token = "0x6000325")]
	[Address(RVA = "0xCC4708", Offset = "0xCC4708", VA = "0xCC4708")]
	internal static void ConvertTransform(ovrAvatarTransform transform, Transform target)
	{
	}

	[Token(Token = "0x6000326")]
	[Address(RVA = "0xCC4794", Offset = "0xCC4794", VA = "0xCC4794")]
	public static ovrAvatarTransform CreateOvrAvatarTransform(Vector3 position, Quaternion orientation)
	{
		return default(ovrAvatarTransform);
	}

	[Token(Token = "0x6000327")]
	[Address(RVA = "0xCC481C", Offset = "0xCC481C", VA = "0xCC481C")]
	private static ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0xCC4834", Offset = "0xCC4834", VA = "0xCC4834")]
	private void BuildRenderComponents()
	{
	}

	[Token(Token = "0x6000329")]
	private void AddAvatarComponent<T>(ref T root, ovrAvatarComponent nativeComponent) where T : OvrAvatarComponent
	{
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0xCC4CE4", Offset = "0xCC4CE4", VA = "0xCC4CE4")]
	private void UpdateCustomPoses()
	{
	}

	[Token(Token = "0x600032B")]
	[Address(RVA = "0xCC5064", Offset = "0xCC5064", VA = "0xCC5064")]
	private static bool UpdatePoseRoot(Transform poseRoot, ref Transform cachedPoseRoot, ref Transform[] cachedPoseJoints, ref ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0xCC520C", Offset = "0xCC520C", VA = "0xCC520C")]
	private static bool UpdateTransforms(Transform[] joints, ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0xCC5458", Offset = "0xCC5458", VA = "0xCC5458")]
	private static void OrderJoints(Transform transform, List<Transform> joints)
	{
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0xCC554C", Offset = "0xCC554C", VA = "0xCC554C")]
	private void AvatarSpecificationCallback(IntPtr avatarSpecification)
	{
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0xCC5954", Offset = "0xCC5954", VA = "0xCC5954")]
	private void Start()
	{
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0xCC5C80", Offset = "0xCC5C80", VA = "0xCC5C80")]
	private void Update()
	{
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0xCC66A4", Offset = "0xCC66A4", VA = "0xCC66A4")]
	public static ovrAvatarHandInputState CreateInputState(ovrAvatarTransform transform, OvrAvatarDriver.ControllerPose pose)
	{
		return default(ovrAvatarHandInputState);
	}

	[Token(Token = "0x6000332")]
	[Address(RVA = "0xCC66F8", Offset = "0xCC66F8", VA = "0xCC66F8")]
	public void ShowControllers(bool show)
	{
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0xCC580C", Offset = "0xCC580C", VA = "0xCC580C")]
	public void ShowLeftController(bool show)
	{
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0xCC58B0", Offset = "0xCC58B0", VA = "0xCC58B0")]
	public void ShowRightController(bool show)
	{
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0xCC6728", Offset = "0xCC6728", VA = "0xCC6728")]
	public void UpdateVoiceVisualization(float[] voiceSamples)
	{
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0xCC6058", Offset = "0xCC6058", VA = "0xCC6058")]
	private void RecordFrame()
	{
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0xCC699C", Offset = "0xCC699C", VA = "0xCC699C")]
	private void RecordUnityFrame()
	{
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0xCC678C", Offset = "0xCC678C", VA = "0xCC678C")]
	private void RecordSDKFrame()
	{
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0xCC6C4C", Offset = "0xCC6C4C", VA = "0xCC6C4C")]
	private void AddRenderParts(OvrAvatarComponent ovrComponent, ovrAvatarComponent component, Transform parent)
	{
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0xCC70C8", Offset = "0xCC70C8", VA = "0xCC70C8")]
	public void RefreshBodyParts()
	{
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0xCC7360", Offset = "0xCC7360", VA = "0xCC7360")]
	public ovrAvatarBodyComponent? GetBodyComponent()
	{
		return null;
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0xCC74B4", Offset = "0xCC74B4", VA = "0xCC74B4")]
	public Transform GetHandTransform(HandType hand, HandJoint joint)
	{
		return null;
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0xCC7698", Offset = "0xCC7698", VA = "0xCC7698")]
	public void GetPointingDirection(HandType hand, ref Vector3 forward, ref Vector3 up)
	{
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0xCC6224", Offset = "0xCC6224", VA = "0xCC6224")]
	private void UpdateVoiceBehavior()
	{
	}

	[Token(Token = "0x600033F")]
	[Address(RVA = "0xCC776C", Offset = "0xCC776C", VA = "0xCC776C")]
	private bool IsValidMic()
	{
		return default(bool);
	}

	[Token(Token = "0x6000340")]
	[Address(RVA = "0xCC6068", Offset = "0xCC6068", VA = "0xCC6068")]
	private void InitPostLoad()
	{
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0xCC785C", Offset = "0xCC785C", VA = "0xCC785C")]
	private static void ExpressiveGlobalInit()
	{
	}

	[Token(Token = "0x6000342")]
	[Address(RVA = "0xCC7EB4", Offset = "0xCC7EB4", VA = "0xCC7EB4")]
	private static void InitializeLights()
	{
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0xCC8398", Offset = "0xCC8398", VA = "0xCC8398")]
	private static ovrAvatarLight CreateLightDirectional(uint id, Vector3 direction, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x6000344")]
	[Address(RVA = "0xCC83C0", Offset = "0xCC83C0", VA = "0xCC83C0")]
	private static ovrAvatarLight CreateLightPoint(uint id, Vector3 position, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0xCC83E8", Offset = "0xCC83E8", VA = "0xCC83E8")]
	private static ovrAvatarLight CreateLightSpot(uint id, Vector3 position, Vector3 direction, float spotAngleDeg, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0xCC6530", Offset = "0xCC6530", VA = "0xCC6530")]
	private void UpdateExpressive()
	{
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0xCC7920", Offset = "0xCC7920", VA = "0xCC7920")]
	private void ConfigureHelpers()
	{
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0xCC8808", Offset = "0xCC8808", VA = "0xCC8808")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92472C", Offset = "0x92472C")]
	private IEnumerator WaitForMouthAudioSource()
	{
		return null;
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0xCC8874", Offset = "0xCC8874", VA = "0xCC8874")]
	public void DestroyHelperObjects()
	{
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0xCC86C8", Offset = "0xCC86C8", VA = "0xCC86C8")]
	public GameObject CreateHelperObject(Transform parent, Vector3 localPositionOffset, string helperName, string helperTag = "")
	{
		return null;
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0xCC8938", Offset = "0xCC8938", VA = "0xCC8938")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x600034C")]
	[Address(RVA = "0xCC8A20", Offset = "0xCC8A20", VA = "0xCC8A20")]
	public void UpdateVoiceData(float[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x600034D")]
	[Address(RVA = "0xCC8424", Offset = "0xCC8424", VA = "0xCC8424")]
	private void UpdateFacewave()
	{
	}

	[Token(Token = "0x600034E")]
	[Address(RVA = "0xCC8B08", Offset = "0xCC8B08", VA = "0xCC8B08")]
	public OvrAvatar()
	{
	}
}
[Token(Token = "0x200009B")]
public class OvrAvatarAsset
{
	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong assetID;

	[Token(Token = "0x6000356")]
	[Address(RVA = "0xF3A620", Offset = "0xF3A620", VA = "0xF3A620")]
	public OvrAvatarAsset()
	{
	}
}
[Token(Token = "0x200009C")]
public class OvrAvatarAssetMesh : OvrAvatarAsset
{
	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mesh mesh;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAvatarSkinnedMeshPose skinnedBindPose;

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string[] jointNames;

	[Token(Token = "0x6000357")]
	[Address(RVA = "0xF3A6E4", Offset = "0xF3A6E4", VA = "0xF3A6E4")]
	public OvrAvatarAssetMesh(ulong _assetId, IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0xF3B968", Offset = "0xF3B968", VA = "0xF3B968")]
	private void LoadSubmeshes(IntPtr asset, IntPtr indexBufferPtr, ulong indexCount)
	{
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0xF3B53C", Offset = "0xF3B53C", VA = "0xF3B53C")]
	private void LoadBlendShapes(IntPtr asset, long vertexCount)
	{
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0xF3B2CC", Offset = "0xF3B2CC", VA = "0xF3B2CC")]
	private void SetSkinnedBindPose(IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0xF3B3A8", Offset = "0xF3B3A8", VA = "0xF3B3A8")]
	private void GetVertexAndIndexData(IntPtr asset, ovrAvatarAssetType meshType, out long vertexCount, out IntPtr vertexBuffer, out uint indexCount, out IntPtr indexBuffer)
	{
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0xF3BBF8", Offset = "0xF3BBF8", VA = "0xF3BBF8")]
	public SkinnedMeshRenderer CreateSkinnedMeshRendererOnObject(GameObject target)
	{
		return null;
	}
}
[Token(Token = "0x200009D")]
public class OvrAvatarAssetTexture : OvrAvatarAsset
{
	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D texture;

	[Token(Token = "0x40003C9")]
	private const int ASTCHeaderSize = 16;

	[Token(Token = "0x600035D")]
	[Address(RVA = "0xF3C180", Offset = "0xF3C180", VA = "0xF3C180")]
	public OvrAvatarAssetTexture(ulong _assetId, IntPtr asset)
	{
	}
}
[Token(Token = "0x200009E")]
public class OvrAvatarBase : OvrAvatarComponent
{
	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ovrAvatarBaseComponent component;

	[Token(Token = "0x600035E")]
	[Address(RVA = "0xF3C3EC", Offset = "0xF3C3EC", VA = "0xF3C3EC")]
	private void Update()
	{
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0xF3C838", Offset = "0xF3C838", VA = "0xF3C838")]
	public OvrAvatarBase()
	{
	}
}
[Token(Token = "0x200009F")]
public class OvrAvatarBody : OvrAvatarComponent
{
	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ovrAvatarBodyComponent component;

	[Token(Token = "0x6000360")]
	[Address(RVA = "0xF3C950", Offset = "0xF3C950", VA = "0xF3C950")]
	public ovrAvatarComponent? GetNativeAvatarComponent()
	{
		return null;
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0xF3CAC0", Offset = "0xF3CAC0", VA = "0xF3CAC0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0xF3CBE4", Offset = "0xF3CBE4", VA = "0xF3CBE4")]
	public OvrAvatarBody()
	{
	}
}
[Token(Token = "0x20000A0")]
public class OvrAvatarComponent : MonoBehaviour
{
	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string[] LayerKeywords;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly string[] LayerSampleModeParameters;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly string[] LayerBlendModeParameters;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly string[] LayerMaskTypeParameters;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static readonly string[] LayerColorParameters;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static readonly string[] LayerSurfaceParameters;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static readonly string[] LayerSampleParametersParameters;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static readonly string[] LayerMaskParametersParameters;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static readonly string[] LayerMaskAxisParameters;

	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<Material, ovrAvatarMaterialState> materialStates;

	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<OvrAvatarRenderComponent> RenderParts;

	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected OvrAvatar owner;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected ovrAvatarComponent nativeAvatarComponent;

	[Token(Token = "0x6000363")]
	[Address(RVA = "0xF3CC44", Offset = "0xF3CC44", VA = "0xF3CC44")]
	public void SetOvrAvatarOwner(OvrAvatar ovrAvatarOwner)
	{
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0xF3C510", Offset = "0xF3C510", VA = "0xF3C510")]
	public void UpdateAvatar(IntPtr nativeComponent)
	{
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0xF3D294", Offset = "0xF3D294", VA = "0xF3D294")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0xF3D2F4", Offset = "0xF3D2F4", VA = "0xF3D2F4")]
	public void UpdateAvatarMaterial(Material mat, ovrAvatarMaterialState matState)
	{
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0xF3DAA8", Offset = "0xF3DAA8", VA = "0xF3DAA8")]
	public static Texture2D GetLoadedTexture(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0xF3C898", Offset = "0xF3C898", VA = "0xF3C898")]
	public OvrAvatarComponent()
	{
	}
}
[Token(Token = "0x20000A1")]
public abstract class OvrAvatarDriver : MonoBehaviour
{
	[Token(Token = "0x20000A2")]
	public enum PacketMode
	{
		[Token(Token = "0x40003DD")]
		SDK,
		[Token(Token = "0x40003DE")]
		Unity
	}

	[Token(Token = "0x20000A3")]
	public struct ControllerPose
	{
		[Token(Token = "0x40003DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarButton buttons;

		[Token(Token = "0x40003E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ovrAvatarTouch touches;

		[Token(Token = "0x40003E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 joystickPosition;

		[Token(Token = "0x40003E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float indexTrigger;

		[Token(Token = "0x40003E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float handTrigger;

		[Token(Token = "0x40003E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isActive;

		[Token(Token = "0x6000370")]
		[Address(RVA = "0xD84188", Offset = "0xD84188", VA = "0xD84188")]
		public static ControllerPose Interpolate(ControllerPose a, ControllerPose b, float t)
		{
			return default(ControllerPose);
		}
	}

	[Token(Token = "0x20000A4")]
	public struct PoseFrame
	{
		[Token(Token = "0x40003E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 headPosition;

		[Token(Token = "0x40003E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion headRotation;

		[Token(Token = "0x40003E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 handLeftPosition;

		[Token(Token = "0x40003E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Quaternion handLeftRotation;

		[Token(Token = "0x40003E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 handRightPosition;

		[Token(Token = "0x40003EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Quaternion handRightRotation;

		[Token(Token = "0x40003EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float voiceAmplitude;

		[Token(Token = "0x40003EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ControllerPose controllerLeftPose;

		[Token(Token = "0x40003ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public ControllerPose controllerRightPose;

		[Token(Token = "0x6000371")]
		[Address(RVA = "0xD84264", Offset = "0xD84264", VA = "0xD84264")]
		public static PoseFrame Interpolate(PoseFrame a, PoseFrame b, float t)
		{
			return default(PoseFrame);
		}
	}

	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PacketMode Mode;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected PoseFrame CurrentPose;

	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private ovrAvatarControllerType ControllerType;

	[Token(Token = "0x600036A")]
	[Address(RVA = "0xF3F154", Offset = "0xF3F154", VA = "0xF3F154")]
	public PoseFrame GetCurrentPose()
	{
		return default(PoseFrame);
	}

	[Token(Token = "0x600036B")]
	public abstract void UpdateTransforms(IntPtr sdkAvatar);

	[Token(Token = "0x600036C")]
	[Address(RVA = "0xF3F164", Offset = "0xF3F164", VA = "0xF3F164")]
	private void Start()
	{
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0xF3F1EC", Offset = "0xF3F1EC", VA = "0xF3F1EC")]
	public void UpdateTransformsFromPose(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0xF3F468", Offset = "0xF3F468", VA = "0xF3F468")]
	public static bool GetIsTrackedRemote()
	{
		return default(bool);
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0xF3F470", Offset = "0xF3F470", VA = "0xF3F470")]
	protected OvrAvatarDriver()
	{
	}
}
[Token(Token = "0x20000A5")]
public class OvrAvatarHand : OvrAvatarComponent
{
	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarHandComponent component;

	[Token(Token = "0x6000372")]
	[Address(RVA = "0xF3F480", Offset = "0xF3F480", VA = "0xF3F480")]
	private void Update()
	{
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0xF3F5E4", Offset = "0xF3F5E4", VA = "0xF3F5E4")]
	public OvrAvatarHand()
	{
	}
}
[Token(Token = "0x20000A6")]
public class OvrAvatarLocalDriver : OvrAvatarDriver
{
	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 centerEyePosition;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion centerEyeRotation;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x6000374")]
	[Address(RVA = "0xF3F64C", Offset = "0xF3F64C", VA = "0xF3F64C")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0xF3F7B0", Offset = "0xF3F7B0", VA = "0xF3F7B0")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0xF3FB4C", Offset = "0xF3FB4C", VA = "0xF3FB4C")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0xF3FD70", Offset = "0xF3FD70", VA = "0xF3FD70", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0xF3FD9C", Offset = "0xF3FD9C", VA = "0xF3FD9C")]
	public OvrAvatarLocalDriver()
	{
	}
}
[Token(Token = "0x20000A7")]
public class OvrAvatarMaterialManager : MonoBehaviour
{
	[Token(Token = "0x20000A8")]
	public enum TextureType
	{
		[Token(Token = "0x4000414")]
		DiffuseTextures,
		[Token(Token = "0x4000415")]
		NormalMaps,
		[Token(Token = "0x4000416")]
		RoughnessMaps,
		[Token(Token = "0x4000417")]
		Count
	}

	[Token(Token = "0x20000A9")]
	public struct AvatarComponentMaterialProperties
	{
		[Token(Token = "0x4000418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarBodyPartType TypeIndex;

		[Token(Token = "0x4000419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Color Color;

		[Token(Token = "0x400041A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture2D[] Textures;

		[Token(Token = "0x400041B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float DiffuseIntensity;

		[Token(Token = "0x400041C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float RimIntensity;

		[Token(Token = "0x400041D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float ReflectionIntensity;
	}

	[Token(Token = "0x20000AA")]
	public struct AvatarTextureArrayProperties
	{
		[Token(Token = "0x400041E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture2D[] Textures;

		[Token(Token = "0x400041F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2DArray TextureArray;
	}

	[Token(Token = "0x20000AB")]
	public struct AvatarMaterialPropertyBlock
	{
		[Token(Token = "0x4000420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector4[] Colors;

		[Token(Token = "0x4000421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float[] DiffuseIntensities;

		[Token(Token = "0x4000422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float[] RimIntensities;

		[Token(Token = "0x4000423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] ReflectionIntensities;
	}

	[Serializable]
	[Token(Token = "0x20000AC")]
	public class AvatarMaterialConfig
	{
		[Token(Token = "0x4000424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AvatarComponentMaterialProperties[] ComponentMaterialProperties;

		[Token(Token = "0x4000425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AvatarMaterialPropertyBlock MaterialPropertyBlock;

		[Token(Token = "0x6000388")]
		[Address(RVA = "0xD84C60", Offset = "0xD84C60", VA = "0xD84C60")]
		public AvatarMaterialConfig()
		{
		}
	}

	[Token(Token = "0x20000AD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x917978", Offset = "0x917978")]
	private sealed class <RunLoadingAnimation>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatarMaterialManager <>4__this;

		[Token(Token = "0x4000429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action callBack;

		[Token(Token = "0x400042A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <srcBlend>5__2;

		[Token(Token = "0x400042B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <dstBlend>5__3;

		[Token(Token = "0x400042C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string <lightModeTag>5__4;

		[Token(Token = "0x400042D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string <renderTypeTag>5__5;

		[Token(Token = "0x400042E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string <renderQueueTag>5__6;

		[Token(Token = "0x400042F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string <ignoreProjectorTag>5__7;

		[Token(Token = "0x4000430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int <renderQueue>5__8;

		[Token(Token = "0x4000431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool <transparentQueue>5__9;

		[Token(Token = "0x1700003D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600038C")]
			[Address(RVA = "0xD84C10", Offset = "0xD84C10", VA = "0xD84C10", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600038E")]
			[Address(RVA = "0xD84C58", Offset = "0xD84C58", VA = "0xD84C58", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000389")]
		[Address(RVA = "0xD84568", Offset = "0xD84568", VA = "0xD84568")]
		[DebuggerHidden]
		public <RunLoadingAnimation>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x600038A")]
		[Address(RVA = "0xD84594", Offset = "0xD84594", VA = "0xD84594", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600038B")]
		[Address(RVA = "0xD84598", Offset = "0xD84598", VA = "0xD84598", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600038D")]
		[Address(RVA = "0xD84C18", Offset = "0xD84C18", VA = "0xD84C18", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer TargetRenderer;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AvatarTextureArrayProperties[] TextureArrays;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly string[] TextureTypeToShaderProperties;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AvatarMaterialConfig LocalAvatarConfig;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<ReflectionProbeBlendInfo> ReflectionProbes;

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader CombinedShader;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string AVATAR_SHADER_LOADER;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string AVATAR_SHADER_MAINTEX;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string AVATAR_SHADER_NORMALMAP;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string AVATAR_SHADER_ROUGHNESSMAP;

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string AVATAR_SHADER_COLOR;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static string AVATAR_SHADER_DIFFUSEINTENSITY;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static string AVATAR_SHADER_RIMINTENSITY;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static string AVATAR_SHADER_REFLECTIONINTENSITY;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static string AVATAR_SHADER_CUBEMAP;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static string AVATAR_SHADER_ALPHA;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static string AVATAR_SHADER_LOADING_DIMMER;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static string AVATAR_SHADER_IRIS_COLOR;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static string AVATAR_SHADER_LIP_COLOR;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static string AVATAR_SHADER_BROW_COLOR;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static string AVATAR_SHADER_LASH_COLOR;

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static string AVATAR_SHADER_SCLERA_COLOR;

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static string AVATAR_SHADER_GUM_COLOR;

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static string AVATAR_SHADER_TEETH_COLOR;

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static string AVATAR_SHADER_LIP_SMOOTHNESS;

	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public static float[] DiffuseIntensities;

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public static float[] RimIntensities;

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public static float[] ReflectionIntensities;

	[Token(Token = "0x400040F")]
	private const float LOADING_ANIMATION_AMPLITUDE = 0.5f;

	[Token(Token = "0x4000410")]
	private const float LOADING_ANIMATION_PERIOD = 0.35f;

	[Token(Token = "0x4000411")]
	private const float LOADING_ANIMATION_CURVE_SCALE = 0.25f;

	[Token(Token = "0x4000412")]
	private const float LOADING_ANIMATION_DIMMER_MIN = 0.3f;

	[Token(Token = "0x6000379")]
	[Address(RVA = "0xF3FDE8", Offset = "0xF3FDE8", VA = "0xF3FDE8")]
	public void CreateTextureArrays()
	{
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0xF3FF74", Offset = "0xF3FF74", VA = "0xF3FF74")]
	public void SetRenderer(Renderer renderer)
	{
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0xF3FF9C", Offset = "0xF3FF9C", VA = "0xF3FF9C")]
	public void OnCombinedMeshReady()
	{
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0xF406F8", Offset = "0xF406F8", VA = "0xF406F8")]
	public void AddTextureIDToTextureManager(ulong assetID, bool isSingleComponent)
	{
	}

	[Token(Token = "0x600037D")]
	[Address(RVA = "0xF409E0", Offset = "0xF409E0", VA = "0xF409E0")]
	private void DeleteTextureSet()
	{
	}

	[Token(Token = "0x600037E")]
	[Address(RVA = "0xF40038", Offset = "0xF40038", VA = "0xF40038")]
	public void InitTextureArrays()
	{
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0xF40ACC", Offset = "0xF40ACC", VA = "0xF40ACC")]
	private void ProcessTexturesWithMips(Texture2D[] textures, int texArrayResolution, Texture2DArray texArray)
	{
	}

	[Token(Token = "0x6000380")]
	[Address(RVA = "0xF40470", Offset = "0xF40470", VA = "0xF40470")]
	private void SetMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0xF40D5C", Offset = "0xF40D5C", VA = "0xF40D5C")]
	private void ApplyMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0xF41000", Offset = "0xF41000", VA = "0xF41000")]
	public static ovrAvatarBodyPartType GetComponentType(string objectName)
	{
		return default(ovrAvatarBodyPartType);
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0xF41128", Offset = "0xF41128", VA = "0xF41128")]
	private ulong GetTextureIDForType(ovrAvatarPBSMaterialState materialState, TextureType type)
	{
		return default(ulong);
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0xF41160", Offset = "0xF41160", VA = "0xF41160")]
	public void ValidateTextures(ovrAvatarPBSMaterialState[] materialStates)
	{
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0xF40680", Offset = "0xF40680", VA = "0xF40680")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9247DC", Offset = "0x9247DC")]
	private IEnumerator RunLoadingAnimation(Action callBack)
	{
		return null;
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0xF41FD8", Offset = "0xF41FD8", VA = "0xF41FD8")]
	public OvrAvatarMaterialManager()
	{
	}
}
[Token(Token = "0x20000AE")]
public class OvrAvatarPacket
{
	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr ovrNativePacket;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<float> frameTimes;

	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<OvrAvatarDriver.PoseFrame> frames;

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<byte[]> encodedAudioPackets;

	[Token(Token = "0x1700003F")]
	public float Duration
	{
		[Token(Token = "0x600038F")]
		[Address(RVA = "0xF4251C", Offset = "0xF4251C", VA = "0xF4251C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000040")]
	public OvrAvatarDriver.PoseFrame FinalFrame
	{
		[Token(Token = "0x6000390")]
		[Address(RVA = "0xF42590", Offset = "0xF42590", VA = "0xF42590")]
		get
		{
			return default(OvrAvatarDriver.PoseFrame);
		}
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0xF42620", Offset = "0xF42620", VA = "0xF42620")]
	public OvrAvatarPacket()
	{
	}

	[Token(Token = "0x6000392")]
	[Address(RVA = "0xF42728", Offset = "0xF42728", VA = "0xF42728")]
	public OvrAvatarPacket(OvrAvatarDriver.PoseFrame initialPose)
	{
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0xF428C4", Offset = "0xF428C4", VA = "0xF428C4")]
	private OvrAvatarPacket(List<float> frameTimes, List<OvrAvatarDriver.PoseFrame> frames, List<byte[]> audioPackets)
	{
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0xF429E4", Offset = "0xF429E4", VA = "0xF429E4")]
	public void AddFrame(OvrAvatarDriver.PoseFrame frame, float deltaSeconds)
	{
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0xF42ABC", Offset = "0xF42ABC", VA = "0xF42ABC")]
	public OvrAvatarDriver.PoseFrame GetPoseFrame(float seconds)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x6000396")]
	[Address(RVA = "0xF42CEC", Offset = "0xF42CEC", VA = "0xF42CEC")]
	public static OvrAvatarPacket Read(Stream stream)
	{
		return null;
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0xF42FC8", Offset = "0xF42FC8", VA = "0xF42FC8")]
	public void Write(Stream stream)
	{
	}
}
[Token(Token = "0x20000AF")]
internal static class BinaryWriterExtensions
{
	[Token(Token = "0x6000398")]
	[Address(RVA = "0xC22000", Offset = "0xC22000", VA = "0xC22000")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.PoseFrame frame)
	{
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0xC22114", Offset = "0xC22114", VA = "0xC22114")]
	public static void Write(this BinaryWriter writer, Vector3 vec3)
	{
	}

	[Token(Token = "0x600039A")]
	[Address(RVA = "0xC222C0", Offset = "0xC222C0", VA = "0xC222C0")]
	public static void Write(this BinaryWriter writer, Vector2 vec2)
	{
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0xC22184", Offset = "0xC22184", VA = "0xC22184")]
	public static void Write(this BinaryWriter writer, Quaternion quat)
	{
	}

	[Token(Token = "0x600039C")]
	[Address(RVA = "0xC22218", Offset = "0xC22218", VA = "0xC22218")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.ControllerPose pose)
	{
	}
}
[Token(Token = "0x20000B0")]
internal static class BinaryReaderExtensions
{
	[Token(Token = "0x600039D")]
	[Address(RVA = "0xC21C00", Offset = "0xC21C00", VA = "0xC21C00")]
	public static OvrAvatarDriver.PoseFrame ReadPoseFrame(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0xC21FA4", Offset = "0xC21FA4", VA = "0xC21FA4")]
	public static Vector2 ReadVector2(this BinaryReader reader)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0xC21DA0", Offset = "0xC21DA0", VA = "0xC21DA0")]
	public static Vector3 ReadVector3(this BinaryReader reader)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0xC21E18", Offset = "0xC21E18", VA = "0xC21E18")]
	public static Quaternion ReadQuaternion(this BinaryReader reader)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0xC21EB4", Offset = "0xC21EB4", VA = "0xC21EB4")]
	public static OvrAvatarDriver.ControllerPose ReadControllerPose(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.ControllerPose);
	}
}
[Token(Token = "0x20000B1")]
public class OvrAvatarRemoteDriver : OvrAvatarDriver
{
	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Queue<OvrAvatarPacket> packetQueue;

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private IntPtr CurrentSDKPacket;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float CurrentPacketTime;

	[Token(Token = "0x4000439")]
	private const int MinPacketQueue = 1;

	[Token(Token = "0x400043A")]
	private const int MaxPacketQueue = 4;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int CurrentSequence;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool isStreaming;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private OvrAvatarPacket currentPacket;

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0xF431F0", Offset = "0xF431F0", VA = "0xF431F0")]
	public void QueuePacket(int sequence, OvrAvatarPacket packet)
	{
	}

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0xF43278", Offset = "0xF43278", VA = "0xF43278", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60003A4")]
	[Address(RVA = "0xF43294", Offset = "0xF43294", VA = "0xF43294")]
	private void UpdateFromSDKPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60003A5")]
	[Address(RVA = "0xF43438", Offset = "0xF43438", VA = "0xF43438")]
	private void UpdateFromUnityPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0xF435E8", Offset = "0xF435E8", VA = "0xF435E8")]
	public OvrAvatarRemoteDriver()
	{
	}
}
[Token(Token = "0x20000B2")]
public class OvrAvatarRenderComponent : MonoBehaviour
{
	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool firstSkinnedUpdate;

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SkinnedMeshRenderer mesh;

	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] bones;

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isBodyComponent;

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0xF4367C", Offset = "0xF4367C", VA = "0xF4367C")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0xF43760", Offset = "0xF43760", VA = "0xF43760")]
	protected SkinnedMeshRenderer CreateSkinnedMesh(ulong assetID, ovrAvatarVisibilityFlags visibilityMask, int thirdPersonLayer, int firstPersonLayer)
	{
		return null;
	}

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0xF43954", Offset = "0xF43954", VA = "0xF43954")]
	protected void UpdateSkinnedMesh(OvrAvatar avatar, Transform[] bones, ovrAvatarTransform localTransform, ovrAvatarVisibilityFlags visibilityMask, IntPtr renderPart)
	{
	}

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0xF43D14", Offset = "0xF43D14", VA = "0xF43D14")]
	protected Material CreateAvatarMaterial(string name, Shader shader)
	{
		return null;
	}

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0xF43E20", Offset = "0xF43E20", VA = "0xF43E20")]
	public OvrAvatarRenderComponent()
	{
	}
}
[Token(Token = "0x20000B3")]
[Flags]
public enum ovrAvatarCapabilities
{
	[Token(Token = "0x4000443")]
	Body = 1,
	[Token(Token = "0x4000444")]
	Hands = 2,
	[Token(Token = "0x4000445")]
	Base = 4,
	[Token(Token = "0x4000446")]
	BodyTilt = 0x10,
	[Token(Token = "0x4000447")]
	Expressive = 0x20,
	[Token(Token = "0x4000448")]
	All = -1
}
[Token(Token = "0x20000B4")]
public enum ovrAvatarMessageType
{
	[Token(Token = "0x400044A")]
	AvatarSpecification,
	[Token(Token = "0x400044B")]
	AssetLoaded,
	[Token(Token = "0x400044C")]
	Count
}
[Token(Token = "0x20000B5")]
public struct ovrAvatarMessage_AvatarSpecification
{
	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public IntPtr avatarSpec;

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ulong oculusUserID;
}
[Token(Token = "0x20000B6")]
public struct ovrAvatarMessage_AssetLoaded
{
	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ulong assetID;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr asset;
}
[Token(Token = "0x20000B7")]
public enum ovrAvatarAssetType
{
	[Token(Token = "0x4000452")]
	Mesh,
	[Token(Token = "0x4000453")]
	Texture,
	[Token(Token = "0x4000454")]
	Pose,
	[Token(Token = "0x4000455")]
	Material,
	[Token(Token = "0x4000456")]
	CombinedMesh,
	[Token(Token = "0x4000457")]
	PBSMaterial,
	[Token(Token = "0x4000458")]
	FailedLoad,
	[Token(Token = "0x4000459")]
	Count
}
[Token(Token = "0x20000B8")]
public struct ovrAvatarMeshVertex
{
	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public byte[] blendIndices;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float[] blendWeights;
}
[Token(Token = "0x20000B9")]
public struct ovrAvatarMeshVertexV2
{
	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float r;

	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float g;

	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float b;

	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float a;

	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public byte[] blendIndices;

	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float[] blendWeights;
}
[Token(Token = "0x20000BA")]
public struct ovrAvatarBlendVertex
{
	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x400047D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x400047E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x400047F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;
}
[Token(Token = "0x20000BB")]
public struct ovrAvatarMeshAssetData
{
	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x20000BC")]
public struct ovrAvatarMeshAssetDataV2
{
	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x20000BD")]
public enum ovrAvatarTextureFormat
{
	[Token(Token = "0x400048E")]
	RGB24,
	[Token(Token = "0x400048F")]
	DXT1,
	[Token(Token = "0x4000490")]
	DXT5,
	[Token(Token = "0x4000491")]
	ASTC_RGB_6x6,
	[Token(Token = "0x4000492")]
	ASTC_RGB_6x6_MIPMAPS,
	[Token(Token = "0x4000493")]
	Count
}
[Token(Token = "0x20000BE")]
public struct ovrAvatarTextureAssetData
{
	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTextureFormat format;

	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint sizeX;

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public uint sizeY;

	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public uint mipCount;

	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong textureDataSize;

	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr textureData;
}
[Token(Token = "0x20000BF")]
public enum ovrAvatarRenderPartType
{
	[Token(Token = "0x400049B")]
	SkinnedMeshRender,
	[Token(Token = "0x400049C")]
	SkinnedMeshRenderPBS,
	[Token(Token = "0x400049D")]
	ProjectorRender,
	[Token(Token = "0x400049E")]
	SkinnedMeshRenderPBS_V2,
	[Token(Token = "0x400049F")]
	Count
}
[Token(Token = "0x20000C0")]
public enum ovrAvatarLogLevel
{
	[Token(Token = "0x40004A1")]
	Unknown,
	[Token(Token = "0x40004A2")]
	Default,
	[Token(Token = "0x40004A3")]
	Verbose,
	[Token(Token = "0x40004A4")]
	Debug,
	[Token(Token = "0x40004A5")]
	Info,
	[Token(Token = "0x40004A6")]
	Warn,
	[Token(Token = "0x40004A7")]
	Error,
	[Token(Token = "0x40004A8")]
	Fatal,
	[Token(Token = "0x40004A9")]
	Silent
}
[Token(Token = "0x20000C1")]
public struct ovrAvatarTransform
{
	[Token(Token = "0x40004AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 position;

	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Quaternion orientation;

	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 scale;
}
[Token(Token = "0x20000C2")]
[Flags]
public enum ovrAvatarButton
{
	[Token(Token = "0x40004AE")]
	One = 1,
	[Token(Token = "0x40004AF")]
	Two = 2,
	[Token(Token = "0x40004B0")]
	Three = 4,
	[Token(Token = "0x40004B1")]
	Joystick = 8
}
[Token(Token = "0x20000C3")]
[Flags]
public enum ovrAvatarTouch
{
	[Token(Token = "0x40004B3")]
	One = 1,
	[Token(Token = "0x40004B4")]
	Two = 2,
	[Token(Token = "0x40004B5")]
	Joystick = 4,
	[Token(Token = "0x40004B6")]
	ThumbRest = 8,
	[Token(Token = "0x40004B7")]
	Index = 0x10,
	[Token(Token = "0x40004B8")]
	Pointing = 0x40,
	[Token(Token = "0x40004B9")]
	ThumbUp = 0x80
}
[Token(Token = "0x20000C4")]
public struct ovrAvatarHandInputState
{
	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarButton buttonMask;

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public ovrAvatarTouch touchMask;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float joystickX;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float joystickY;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float indexTrigger;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float handTrigger;

	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isActive;
}
[Token(Token = "0x20000C5")]
public struct ovrAvatarComponent
{
	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint renderPartCount;

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr renderParts;

	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string name;
}
[Token(Token = "0x20000C6")]
internal struct ovrAvatarComponent_Offsets
{
	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long transform;

	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int renderPartCount;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int renderParts;

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int name;
}
[Token(Token = "0x20000C7")]
public struct ovrAvatarBaseComponent
{
	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 basePosition;

	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr renderComponent;
}
[Token(Token = "0x20000C8")]
public struct ovrAvatarBodyComponent
{
	[Token(Token = "0x40004CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform leftEyeTransform;

	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarTransform rightEyeTransform;

	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ovrAvatarTransform centerEyeTransform;

	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public IntPtr renderComponent;
}
[Token(Token = "0x20000C9")]
public struct ovrAvatarBodyComponent_Offsets
{
	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long leftEyeTransform;

	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long rightEyeTransform;

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long centerEyeTransform;

	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long renderComponent;
}
[Token(Token = "0x20000CA")]
public struct ovrAvatarControllerComponent
{
	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x20000CB")]
public struct ovrAvatarHandComponent
{
	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x20000CC")]
public enum ovrAvatarMaterialLayerBlendMode
{
	[Token(Token = "0x40004D9")]
	Add,
	[Token(Token = "0x40004DA")]
	Multiply,
	[Token(Token = "0x40004DB")]
	Count
}
[Token(Token = "0x20000CD")]
public enum ovrAvatarMaterialLayerSampleMode
{
	[Token(Token = "0x40004DD")]
	Color,
	[Token(Token = "0x40004DE")]
	Texture,
	[Token(Token = "0x40004DF")]
	TextureSingleChannel,
	[Token(Token = "0x40004E0")]
	Parallax,
	[Token(Token = "0x40004E1")]
	Count
}
[Token(Token = "0x20000CE")]
public enum ovrAvatarMaterialMaskType
{
	[Token(Token = "0x40004E3")]
	None,
	[Token(Token = "0x40004E4")]
	Positional,
	[Token(Token = "0x40004E5")]
	ViewReflection,
	[Token(Token = "0x40004E6")]
	Fresnel,
	[Token(Token = "0x40004E7")]
	Pulse,
	[Token(Token = "0x40004E8")]
	Count
}
[Token(Token = "0x20000CF")]
public enum ovrAvatarControllerType
{
	[Token(Token = "0x40004EA")]
	Touch,
	[Token(Token = "0x40004EB")]
	Malibu,
	[Token(Token = "0x40004EC")]
	Go,
	[Token(Token = "0x40004ED")]
	Quest,
	[Token(Token = "0x40004EE")]
	Count
}
[Token(Token = "0x20000D0")]
public enum ovrAvatarAssetLevelOfDetail
{
	[Token(Token = "0x40004F0")]
	Lowest = 1,
	[Token(Token = "0x40004F1")]
	Medium = 3,
	[Token(Token = "0x40004F2")]
	Highest = 5
}
[Token(Token = "0x20000D1")]
public enum ovrAvatarLookAndFeelVersion
{
	[Token(Token = "0x40004F4")]
	Unknown = -1,
	[Token(Token = "0x40004F5")]
	One,
	[Token(Token = "0x40004F6")]
	Two
}
[Token(Token = "0x20000D2")]
public struct ovrAvatarMaterialLayerState
{
	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarMaterialLayerBlendMode blendMode;

	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarMaterialMaskType maskType;

	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector4 layerColor;

	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector4 sampleParameters;

	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong sampleTexture;

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector4 sampleScaleOffset;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector4 maskParameters;

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 maskAxis;

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0xBD937C", Offset = "0xBD937C", VA = "0xBD937C")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0xBD93AC", Offset = "0xBD93AC", VA = "0xBD93AC", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0xBD95C8", Offset = "0xBD95C8", VA = "0xBD95C8", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x20000D3")]
public struct ovrAvatarMaterialState
{
	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarMaterialMaskType baseMaskType;

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector4 baseMaskParameters;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector4 baseMaskAxis;

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong alphaMaskTextureID;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 alphaMaskScaleOffset;

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong normalMapTextureID;

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 normalMapScaleOffset;

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong parallaxMapTextureID;

	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector4 parallaxMapScaleOffset;

	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ulong roughnessMapTextureID;

	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector4 roughnessMapScaleOffset;

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public uint layerCount;

	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public ovrAvatarMaterialLayerState[] layers;

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0xBD96AC", Offset = "0xBD96AC", VA = "0xBD96AC")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0xBD96DC", Offset = "0xBD96DC", VA = "0xBD96DC", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0xBD9A78", Offset = "0xBD9A78", VA = "0xBD9A78", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x20000D4")]
public struct ovrAvatarExpressiveParameters
{
	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 irisColor;

	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector4 scleraColor;

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector4 lashColor;

	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector4 browColor;

	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 lipColor;

	[Token(Token = "0x4000514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector4 teethColor;

	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector4 gumColor;

	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float browLashIntensity;

	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float lipSmoothness;

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0xBD890C", Offset = "0xBD890C", VA = "0xBD890C")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0xBD893C", Offset = "0xBD893C", VA = "0xBD893C", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0xBD8BCC", Offset = "0xBD8BCC", VA = "0xBD8BCC", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x20000D5")]
public struct ovrAvatarPBSMaterialState
{
	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong albedoTextureID;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector4 albedoMultiplier;

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ulong metallicnessTextureID;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float glossinessScale;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong normalTextureID;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong heightTextureID;

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ulong occlusionTextureID;

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong emissionTextureID;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 emissionMultiplier;

	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong detailMaskTextureID;

	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ulong detailAlbedoTextureID;

	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ulong detailNormalTextureID;

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0xBD9BE0", Offset = "0xBD9BE0", VA = "0xBD9BE0")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0xBD9C10", Offset = "0xBD9C10", VA = "0xBD9C10", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0xBD9E00", Offset = "0xBD9E00", VA = "0xBD9E00", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x20000D6")]
public class OvrAvatarAssetMaterial : OvrAvatarAsset
{
	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarMaterialState material;

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0xF3A628", Offset = "0xF3A628", VA = "0xF3A628")]
	public OvrAvatarAssetMaterial(ulong id, IntPtr mat)
	{
	}
}
[Token(Token = "0x20000D7")]
public struct ovrAvatarSkinnedMeshPose
{
	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint jointCount;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarTransform[] jointTransform;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int[] jointParents;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr[] jointNames;
}
[Token(Token = "0x20000D8")]
[Flags]
public enum ovrAvatarVisibilityFlags
{
	[Token(Token = "0x400052B")]
	FirstPerson = 1,
	[Token(Token = "0x400052C")]
	ThirdPerson = 2,
	[Token(Token = "0x400052D")]
	SelfOccluding = 4
}
[Token(Token = "0x20000D9")]
public struct ovrAvatarRenderPart_SkinnedMeshRender
{
	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarMaterialState materialState;

	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x20000DA")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS
{
	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong albedoTextureAssetID;

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong surfaceTextureAssetID;

	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x20000DB")]
public struct ovrAvatarRenderPart_ProjectorRender
{
	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint componentIndex;

	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public uint renderPartIndex;

	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ovrAvatarMaterialState materialState;
}
[Token(Token = "0x20000DC")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2
{
	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarPBSMaterialState materialState;

	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x20000DD")]
public enum ovrAvatarHandGesture
{
	[Token(Token = "0x4000543")]
	Default,
	[Token(Token = "0x4000544")]
	GripSphere,
	[Token(Token = "0x4000545")]
	GripCube,
	[Token(Token = "0x4000546")]
	Count
}
[Token(Token = "0x20000DE")]
public enum ovrAvatarBodyPartType
{
	[Token(Token = "0x4000548")]
	Body,
	[Token(Token = "0x4000549")]
	Clothing,
	[Token(Token = "0x400054A")]
	Eyewear,
	[Token(Token = "0x400054B")]
	Hair,
	[Token(Token = "0x400054C")]
	Beard,
	[Token(Token = "0x400054D")]
	Count
}
[Token(Token = "0x20000DF")]
public struct ovrAvatarBlendShapeParams
{
	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint blendShapeParamCount;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] blendShapeParams;
}
[Token(Token = "0x20000E0")]
internal struct ovrAvatarBlendShapeParams_Offsets
{
	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int blendShapeParamCount;

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long blendShapeParams;
}
[Token(Token = "0x20000E1")]
public struct ovrAvatarVisemes
{
	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint visemeParamCount;

	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] visemeParams;
}
[Token(Token = "0x20000E2")]
internal struct ovrAvatarVisemes_Offsets
{
	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int visemeParamCount;

	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long visemeParams;
}
[Token(Token = "0x20000E3")]
public enum ovrAvatarGazeTargetType
{
	[Token(Token = "0x4000557")]
	AvatarHead,
	[Token(Token = "0x4000558")]
	AvatarHand,
	[Token(Token = "0x4000559")]
	Object,
	[Token(Token = "0x400055A")]
	ObjectStatic,
	[Token(Token = "0x400055B")]
	Count
}
[Token(Token = "0x20000E4")]
public struct ovrAvatarGazeTarget
{
	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public Vector3 worldPosition;

	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarGazeTargetType type;
}
[Token(Token = "0x20000E5")]
internal struct ovrAvatarGazeTarget_Offsets
{
	[Token(Token = "0x400055F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int id;

	[Token(Token = "0x4000560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int worldPosition;

	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int type;
}
[Token(Token = "0x20000E6")]
public struct ovrAvatarGazeTargets
{
	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint targetCount;

	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarGazeTarget[] targets;
}
[Token(Token = "0x20000E7")]
internal struct ovrAvatarGazeTargets_Offsets
{
	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int targetCount;

	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long targets;
}
[Token(Token = "0x20000E8")]
public enum ovrAvatarLightType
{
	[Token(Token = "0x4000567")]
	Point,
	[Token(Token = "0x4000568")]
	Direction,
	[Token(Token = "0x4000569")]
	Spot,
	[Token(Token = "0x400056A")]
	Count
}
[Token(Token = "0x20000E9")]
public struct ovrAvatarLight
{
	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarLightType type;

	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float intensity;

	[Token(Token = "0x400056E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 worldDirection;

	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 worldPosition;

	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float range;

	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float spotAngleDeg;
}
[Token(Token = "0x20000EA")]
internal struct ovrAvatarLight_Offsets
{
	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long id;

	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long type;

	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long intensity;

	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long worldDirection;

	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static long worldPosition;

	[Token(Token = "0x4000577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static long range;

	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static long spotAngleDeg;
}
[Token(Token = "0x20000EB")]
public struct ovrAvatarLights
{
	[Token(Token = "0x4000579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float ambientIntensity;

	[Token(Token = "0x400057A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint lightCount;

	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarLight[] lights;
}
[Token(Token = "0x20000EC")]
internal struct ovrAvatarLights_Offsets
{
	[Token(Token = "0x400057C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long ambientIntensity;

	[Token(Token = "0x400057D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long lightCount;

	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long lights;
}
[Token(Token = "0x20000ED")]
[Flags]
public enum ovrAvatarDebugContext : uint
{
	[Token(Token = "0x4000580")]
	None = 0u,
	[Token(Token = "0x4000581")]
	GazeTarget = 1u,
	[Token(Token = "0x4000582")]
	Any = uint.MaxValue
}
[Token(Token = "0x20000EE")]
public struct ovrAvatarDebugLine
{
	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 startPoint;

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 endPoint;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 color;

	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public IntPtr text;
}
[Token(Token = "0x20000EF")]
public struct ovrAvatarDebugTransform
{
	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr text;
}
[Token(Token = "0x20000F0")]
public delegate void specificationCallback(IntPtr specification);
[Token(Token = "0x20000F1")]
public delegate void assetLoadedCallback(OvrAvatarAsset asset);
[Token(Token = "0x20000F2")]
public delegate void combinedMeshLoadedCallback(IntPtr asset);
[Token(Token = "0x20000F3")]
public class OvrAvatarSDKManager : MonoBehaviour
{
	[Token(Token = "0x20000F4")]
	public struct AvatarSpecRequestParams
	{
		[Token(Token = "0x4000598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong _userId;

		[Token(Token = "0x4000599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public specificationCallback _callback;

		[Token(Token = "0x400059A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool _useCombinedMesh;

		[Token(Token = "0x400059B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public ovrAvatarAssetLevelOfDetail _lod;

		[Token(Token = "0x400059C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool _forceMobileTextureFormat;

		[Token(Token = "0x400059D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ovrAvatarLookAndFeelVersion _lookVersion;

		[Token(Token = "0x400059E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ovrAvatarLookAndFeelVersion _fallbackVersion;

		[Token(Token = "0x400059F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool _enableExpressive;

		[Token(Token = "0x60003DE")]
		[Address(RVA = "0xD84C68", Offset = "0xD84C68", VA = "0xD84C68")]
		public AvatarSpecRequestParams(ulong userId, specificationCallback callback, bool useCombinedMesh, ovrAvatarAssetLevelOfDetail lod, bool forceMobileTextureFormat, ovrAvatarLookAndFeelVersion lookVersion, ovrAvatarLookAndFeelVersion fallbackVersion, bool enableExpressive)
		{
		}
	}

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSDKManager _instance;

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool initialized;

	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<ulong, HashSet<specificationCallback>> specificationCallbacks;

	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<ulong, HashSet<assetLoadedCallback>> assetLoadedCallbacks;

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<IntPtr, combinedMeshLoadedCallback> combinedMeshLoadedCallbacks;

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<ulong, OvrAvatarAsset> assetCache;

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OvrAvatarTextureCopyManager textureCopyManager;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarLogLevel LoggingLevel;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Queue<AvatarSpecRequestParams> avatarSpecificationQueue;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<int> loadingAvatars;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool avatarSpecRequestAvailable;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float lastDispatchedAvatarSpecRequestTime;

	[Token(Token = "0x4000597")]
	private const float AVATAR_SPEC_REQUEST_TIMEOUT = 5f;

	[Token(Token = "0x17000041")]
	public static OvrAvatarSDKManager Instance
	{
		[Token(Token = "0x60003CD")]
		[Address(RVA = "0xF3DB38", Offset = "0xF3DB38", VA = "0xF3DB38")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0xF43E30", Offset = "0xF43E30", VA = "0xF43E30")]
	private bool Initialize()
	{
		return default(bool);
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0xF44138", Offset = "0xF44138", VA = "0xF44138")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0xF441A8", Offset = "0xF441A8", VA = "0xF441A8")]
	private void Update()
	{
	}

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0xF44B78", Offset = "0xF44B78", VA = "0xF44B78")]
	public bool IsAvatarSpecWaiting()
	{
		return default(bool);
	}

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0xF44BCC", Offset = "0xF44BCC", VA = "0xF44BCC")]
	public bool IsAvatarLoading()
	{
		return default(bool);
	}

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0xF44C20", Offset = "0xF44C20", VA = "0xF44C20")]
	public void AddLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0xF44C84", Offset = "0xF44C84", VA = "0xF44C84")]
	public void RemoveLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0xF44CE8", Offset = "0xF44CE8", VA = "0xF44CE8")]
	public void RequestAvatarSpecification(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x60003D6")]
	[Address(RVA = "0xF44978", Offset = "0xF44978", VA = "0xF44978")]
	private void DispatchAvatarSpecificationRequest(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0xF44DC4", Offset = "0xF44DC4", VA = "0xF44DC4")]
	public void BeginLoadingAsset(ulong assetId, ovrAvatarAssetLevelOfDetail lod, assetLoadedCallback callback)
	{
	}

	[Token(Token = "0x60003D8")]
	[Address(RVA = "0xF44F18", Offset = "0xF44F18", VA = "0xF44F18")]
	public void RegisterCombinedMeshCallback(IntPtr sdkAvatar, combinedMeshLoadedCallback callback)
	{
	}

	[Token(Token = "0x60003D9")]
	[Address(RVA = "0xF3DD0C", Offset = "0xF3DD0C", VA = "0xF3DD0C")]
	public OvrAvatarAsset GetAsset(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x60003DA")]
	[Address(RVA = "0xF4500C", Offset = "0xF4500C", VA = "0xF4500C")]
	public void DeleteAssetFromCache(ulong assetId)
	{
	}

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0xF440EC", Offset = "0xF440EC", VA = "0xF440EC")]
	public string GetAppId()
	{
		return null;
	}

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0xF40758", Offset = "0xF40758", VA = "0xF40758")]
	public OvrAvatarTextureCopyManager GetTextureCopyManager()
	{
		return null;
	}

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0xF450EC", Offset = "0xF450EC", VA = "0xF450EC")]
	public OvrAvatarSDKManager()
	{
	}
}
[Token(Token = "0x20000F5")]
public sealed class OvrAvatarSettings : ScriptableObject
{
	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSettings instance;

	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string ovrAppID;

	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string ovrGearAppID;

	[Token(Token = "0x17000042")]
	public static string AppID
	{
		[Token(Token = "0x60003DF")]
		[Address(RVA = "0xF450AC", Offset = "0xF450AC", VA = "0xF450AC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003E0")]
		[Address(RVA = "0xF45244", Offset = "0xF45244", VA = "0xF45244")]
		set
		{
		}
	}

	[Token(Token = "0x17000043")]
	public static string MobileAppID
	{
		[Token(Token = "0x60003E1")]
		[Address(RVA = "0xF450CC", Offset = "0xF450CC", VA = "0xF450CC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003E2")]
		[Address(RVA = "0xF45270", Offset = "0xF45270", VA = "0xF45270")]
		set
		{
		}
	}

	[Token(Token = "0x17000044")]
	public static OvrAvatarSettings Instance
	{
		[Token(Token = "0x60003E3")]
		[Address(RVA = "0xF45104", Offset = "0xF45104", VA = "0xF45104")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003E4")]
		[Address(RVA = "0xF4529C", Offset = "0xF4529C", VA = "0xF4529C")]
		set
		{
		}
	}

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0xF452EC", Offset = "0xF452EC", VA = "0xF452EC")]
	public OvrAvatarSettings()
	{
	}
}
[Token(Token = "0x20000F6")]
public class OvrAvatarSkinnedMeshRenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Shader surface;

	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader surfaceSelfOccluding;

	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool previouslyActive;

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0xF46B10", Offset = "0xF46B10", VA = "0xF46B10")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender, Shader surface, Shader surfaceSelfOccluding, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0xF3CC4C", Offset = "0xF3CC4C", VA = "0xF3CC4C")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0xF46C68", Offset = "0xF46C68", VA = "0xF46C68")]
	private void UpdateMeshMaterial(ovrAvatarVisibilityFlags visibilityMask, SkinnedMeshRenderer rootMesh)
	{
	}

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0xF46DD0", Offset = "0xF46DD0", VA = "0xF46DD0")]
	public OvrAvatarSkinnedMeshRenderComponent()
	{
	}
}
[Token(Token = "0x20000F7")]
public class OvrAvatarSkinnedMeshRenderPBSComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool isMaterialInitilized;

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0xF46DE0", Offset = "0xF46DE0", VA = "0xF46DE0")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS, Shader shader, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0xF3CE88", Offset = "0xF3CE88", VA = "0xF3CE88")]
	internal void UpdateSkinnedMeshRenderPBS(OvrAvatar avatar, IntPtr renderPart, Material mat)
	{
	}

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0xF46F24", Offset = "0xF46F24", VA = "0xF46F24")]
	public OvrAvatarSkinnedMeshRenderPBSComponent()
	{
	}
}
[Token(Token = "0x20000F8")]
public class OvrAvatarSkinnedMeshPBSV2RenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OvrAvatarMaterialManager avatarMaterialManager;

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool previouslyActive;

	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool isCombinedMaterial;

	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private ovrAvatarExpressiveParameters ExpressiveParameters;

	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool EnableExpressive;

	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int blendShapeCount;

	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private ovrAvatarBlendShapeParams blendShapeParams;

	[Token(Token = "0x40005AE")]
	private const string MAIN_MATERIAL_NAME = "main_material";

	[Token(Token = "0x40005AF")]
	private const string EYE_MATERIAL_NAME = "eye_material";

	[Token(Token = "0x40005B0")]
	private const string DEFAULT_MATERIAL_NAME = "_material";

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0xF45340", Offset = "0xF45340", VA = "0xF45340")]
	internal void Initialize(IntPtr renderPart, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRender, OvrAvatarMaterialManager materialManager, int thirdPersonLayer, int firstPersonLayer, bool combinedMesh, ovrAvatarAssetLevelOfDetail lod, bool assignExpressiveParams, OvrAvatar avatar, bool isControllerModel)
	{
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0xF3D058", Offset = "0xF3D058", VA = "0xF3D058")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0xF46294", Offset = "0xF46294", VA = "0xF46294")]
	private void InitializeSingleComponentMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0xF45A08", Offset = "0xF45A08", VA = "0xF45A08")]
	private void InitializeCombinedMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0xF4572C", Offset = "0xF4572C", VA = "0xF4572C")]
	private void SetMaterialTransparent(Material mat)
	{
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0xF45890", Offset = "0xF45890", VA = "0xF45890")]
	private void SetMaterialOpaque(Material mat)
	{
	}

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0xF46B00", Offset = "0xF46B00", VA = "0xF46B00")]
	public OvrAvatarSkinnedMeshPBSV2RenderComponent()
	{
	}
}
[Token(Token = "0x20000F9")]
public class OvrAvatarTextureCopyManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20000FA")]
	public struct FallbackTextureSet
	{
		[Token(Token = "0x40005BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool Initialized;

		[Token(Token = "0x40005C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2D DiffuseRoughness;

		[Token(Token = "0x40005C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Texture2D Normal;
	}

	[Token(Token = "0x20000FB")]
	private struct CopyTextureParams
	{
		[Token(Token = "0x40005C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture Src;

		[Token(Token = "0x40005C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture Dst;

		[Token(Token = "0x40005C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Mip;

		[Token(Token = "0x40005C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int SrcSize;

		[Token(Token = "0x40005C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int DstElement;

		[Token(Token = "0x60003FE")]
		[Address(RVA = "0xD852FC", Offset = "0xD852FC", VA = "0xD852FC")]
		public CopyTextureParams(Texture src, Texture dst, int mip, int srcSize, int dstElement)
		{
		}
	}

	[Token(Token = "0x20000FC")]
	public struct TextureSet
	{
		[Token(Token = "0x40005C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Dictionary<ulong, bool> TextureIDSingleMeshPair;

		[Token(Token = "0x40005C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool IsProcessed;

		[Token(Token = "0x60003FF")]
		[Address(RVA = "0xD8530C", Offset = "0xD8530C", VA = "0xD8530C")]
		public TextureSet(Dictionary<ulong, bool> textureIDSingleMeshPair, bool isProcessed)
		{
		}
	}

	[Token(Token = "0x20000FD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9179F8", Offset = "0x9179F8")]
	private sealed class <DeleteTextureSetCoroutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextureSet textureSetToDelete;

		[Token(Token = "0x40005CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public OvrAvatarTextureCopyManager <>4__this;

		[Token(Token = "0x40005CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int gameobjectID;

		[Token(Token = "0x17000045")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000403")]
			[Address(RVA = "0xD852AC", Offset = "0xD852AC", VA = "0xD852AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000046")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000405")]
			[Address(RVA = "0xD852F4", Offset = "0xD852F4", VA = "0xD852F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000400")]
		[Address(RVA = "0xD84C94", Offset = "0xD84C94", VA = "0xD84C94")]
		[DebuggerHidden]
		public <DeleteTextureSetCoroutine>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6000401")]
		[Address(RVA = "0xD84CC0", Offset = "0xD84CC0", VA = "0xD84CC0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000402")]
		[Address(RVA = "0xD84CC4", Offset = "0xD84CC4", VA = "0xD84CC4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000404")]
		[Address(RVA = "0xD852B4", Offset = "0xD852B4", VA = "0xD852B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FallbackTextureSet[] FallbackTextureSets;

	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Queue<CopyTextureParams> texturesToCopy;

	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, TextureSet> textureSets;

	[Token(Token = "0x40005B4")]
	private const int TEXTURES_TO_COPY_QUEUE_CAPACITY = 256;

	[Token(Token = "0x40005B5")]
	private const int COPIES_PER_FRAME = 8;

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_DIFFUSE_ROUGHNESS;

	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_NORMAL;

	[Token(Token = "0x40005B8")]
	private const string PATH_HIGHEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_2048";

	[Token(Token = "0x40005B9")]
	private const string PATH_MEDIUM_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_1024";

	[Token(Token = "0x40005BA")]
	private const string PATH_LOWEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_256";

	[Token(Token = "0x40005BB")]
	private const string PATH_HIGHEST_NORMAL = "FallbackTextures/fallback_normal_2048";

	[Token(Token = "0x40005BC")]
	private const string PATH_MEDIUM_NORMAL = "FallbackTextures/fallback_normal_1024";

	[Token(Token = "0x40005BD")]
	private const string PATH_LOWEST_NORMAL = "FallbackTextures/fallback_normal_256";

	[Token(Token = "0x40005BE")]
	private const int GPU_TEXTURE_COPY_WAIT_TIME = 10;

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0xF47650", Offset = "0xF47650", VA = "0xF47650")]
	public OvrAvatarTextureCopyManager()
	{
	}

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0xF47A38", Offset = "0xF47A38", VA = "0xF47A38")]
	public void Update()
	{
	}

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0xF47C38", Offset = "0xF47C38", VA = "0xF47C38")]
	public int GetTextureCount()
	{
		return default(int);
	}

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0xF40BB0", Offset = "0xF40BB0", VA = "0xF40BB0")]
	public void CopyTexture(Texture src, Texture dst, int mipLevel, int mipSize, int dstElement, bool useQueue = true)
	{
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0xF47BAC", Offset = "0xF47BAC", VA = "0xF47BAC")]
	private void CopyTexture(CopyTextureParams copyTextureParams)
	{
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0xF407D8", Offset = "0xF407D8", VA = "0xF407D8")]
	public void AddTextureIDToTextureSet(int gameobjectID, ulong textureID, bool isSingleMesh)
	{
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0xF40A28", Offset = "0xF40A28", VA = "0xF40A28")]
	public void DeleteTextureSet(int gameobjectID)
	{
	}

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0xF47C84", Offset = "0xF47C84", VA = "0xF47C84")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92492C", Offset = "0x92492C")]
	private IEnumerator DeleteTextureSetCoroutine(TextureSet textureSetToDelete, int gameobjectID)
	{
		return null;
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0xF44D78", Offset = "0xF44D78", VA = "0xF44D78")]
	public void CheckFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0xF47D14", Offset = "0xF47D14", VA = "0xF47D14")]
	private void InitFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}
}
[Token(Token = "0x20000FE")]
public class OvrAvatarTouchController : OvrAvatarComponent
{
	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarControllerComponent component;

	[Token(Token = "0x6000406")]
	[Address(RVA = "0xF47E4C", Offset = "0xF47E4C", VA = "0xF47E4C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000407")]
	[Address(RVA = "0xF47FB0", Offset = "0xF47FB0", VA = "0xF47FB0")]
	public OvrAvatarTouchController()
	{
	}
}
[Token(Token = "0x20000FF")]
public class OverheatLamp : MonoBehaviour
{
	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material matOn;

	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material matOff;

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Renderer lamp;

	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float blinkTime;

	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool off;

	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AudioSource audioSource;

	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float onTime;

	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float audioVolume;

	[Token(Token = "0x6000408")]
	[Address(RVA = "0xCC2CCC", Offset = "0xCC2CCC", VA = "0xCC2CCC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000409")]
	[Address(RVA = "0xCC2CF8", Offset = "0xCC2CF8", VA = "0xCC2CF8")]
	private void Update()
	{
	}

	[Token(Token = "0x600040A")]
	[Address(RVA = "0xCC31D8", Offset = "0xCC31D8", VA = "0xCC31D8")]
	private void Blink()
	{
	}

	[Token(Token = "0x600040B")]
	[Address(RVA = "0xCC3030", Offset = "0xCC3030", VA = "0xCC3030")]
	private void SwitchOn()
	{
	}

	[Token(Token = "0x600040C")]
	[Address(RVA = "0xCC3130", Offset = "0xCC3130", VA = "0xCC3130")]
	private void SwitchOff()
	{
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0xCC32BC", Offset = "0xCC32BC", VA = "0xCC32BC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0xCC32C0", Offset = "0xCC32C0", VA = "0xCC32C0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0xCC32C4", Offset = "0xCC32C4", VA = "0xCC32C4")]
	public OverheatLamp()
	{
	}
}
[Token(Token = "0x2000100")]
public class Ball_Control : MonoBehaviour
{
	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject objBall;

	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float speed;

	[Token(Token = "0x6000410")]
	[Address(RVA = "0xC1B3A4", Offset = "0xC1B3A4", VA = "0xC1B3A4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0xC1B458", Offset = "0xC1B458", VA = "0xC1B458")]
	private void Update()
	{
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0xC1B518", Offset = "0xC1B518", VA = "0xC1B518")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0xC1B51C", Offset = "0xC1B51C", VA = "0xC1B51C")]
	public Ball_Control()
	{
	}
}
[Token(Token = "0x2000101")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x917A08", Offset = "0x917A08")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x917A08", Offset = "0x917A08")]
public class SC_HDRLEV : MonoBehaviour
{
	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader shader;

	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material m_Material;

	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float ExposureValue;

	[Token(Token = "0x17000047")]
	protected Material material
	{
		[Token(Token = "0x6000416")]
		[Address(RVA = "0xDC47F4", Offset = "0xDC47F4", VA = "0xDC47F4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000414")]
	[Address(RVA = "0xDC4710", Offset = "0xDC4710", VA = "0xDC4710")]
	public float SetEV(float fEV)
	{
		return default(float);
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0xDC4724", Offset = "0xDC4724", VA = "0xDC4724")]
	protected void Start()
	{
	}

	[Token(Token = "0x6000417")]
	[Address(RVA = "0xDC48C0", Offset = "0xDC48C0", VA = "0xDC48C0")]
	protected void OnDisable()
	{
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0xDC496C", Offset = "0xDC496C", VA = "0xDC496C")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0xDC4A3C", Offset = "0xDC4A3C", VA = "0xDC4A3C")]
	public SC_HDRLEV()
	{
	}
}
[Token(Token = "0x2000102")]
public class SC_RTRef : MonoBehaviour
{
	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int cubemapSize;

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3[] camVectors;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 vCurCamDirection;

	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int sampleSize;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float nearClip;

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float farClip;

	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RenderingPath path;

	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public LayerMask layerMask;

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int RefreshRate;

	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool hasHDR;

	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float fMaxRangeHDR;

	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool hasSpecChain;

	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float fGlossiness;

	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float fGammaIn;

	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float fGammaOut;

	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool hasAsyncSample;

	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Shader EncodeShader;

	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Camera camHDR;

	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private RenderTexture HDRface0;

	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private RenderTexture RGBMface0;

	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int faceMask;

	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Material mat0;

	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool forceLDR;

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
	public bool hasLinearCube;

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private SC_WardSamples ISWard;

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Vector2 anisoXY;

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private RenderTexture[] rtTable01Array;

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private RenderTexture[] rtTable02Array;

	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool[] hasSkip;

	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private int[] sizeMipArray;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private GameObject hdrsampler;

	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Cubemap cubeRGBM;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public bool hasSmoothEdge;

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private int smoothEdge;

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Cubemap cubeRGBMTemp;

	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private RenderTexture m_rtDP;

	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private int mipmapNum;

	[Token(Token = "0x600041A")]
	[Address(RVA = "0xDC4A44", Offset = "0xDC4A44", VA = "0xDC4A44")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600041B")]
	[Address(RVA = "0xDC4AE4", Offset = "0xDC4AE4", VA = "0xDC4AE4")]
	private void UpdateCubemapLDR(int face)
	{
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0xDC4B0C", Offset = "0xDC4B0C", VA = "0xDC4B0C")]
	private void UpdateCubemapHDR(int face)
	{
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0xDC4B94", Offset = "0xDC4B94", VA = "0xDC4B94")]
	private void UpdateCubemapLDR2(int face)
	{
	}

	[Token(Token = "0x600041E")]
	[Address(RVA = "0xDC4BBC", Offset = "0xDC4BBC", VA = "0xDC4BBC")]
	private void UpdateGlossiness()
	{
	}

	[Token(Token = "0x600041F")]
	[Address(RVA = "0xDC4C80", Offset = "0xDC4C80", VA = "0xDC4C80")]
	private void UpdateGlossiness2()
	{
	}

	[Token(Token = "0x6000420")]
	[Address(RVA = "0xDC4D4C", Offset = "0xDC4D4C", VA = "0xDC4D4C")]
	private bool GenerateTables()
	{
		return default(bool);
	}

	[Token(Token = "0x6000421")]
	[Address(RVA = "0xDC5148", Offset = "0xDC5148", VA = "0xDC5148")]
	private void Init()
	{
	}

	[Token(Token = "0x6000422")]
	[Address(RVA = "0xDC58DC", Offset = "0xDC58DC", VA = "0xDC58DC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000423")]
	[Address(RVA = "0xDC58E0", Offset = "0xDC58E0", VA = "0xDC58E0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000424")]
	[Address(RVA = "0xDC5DA0", Offset = "0xDC5DA0", VA = "0xDC5DA0")]
	public SC_RTRef()
	{
	}
}
[Token(Token = "0x2000103")]
public class RotateSunInMultiplayer : MonoBehaviour
{
	[Token(Token = "0x2000104")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x917A9C", Offset = "0x917A9C")]
	private sealed class <Rotate>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RotateSunInMultiplayer <>4__this;

		[Token(Token = "0x17000048")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600042B")]
			[Address(RVA = "0xD8FE4C", Offset = "0xD8FE4C", VA = "0xD8FE4C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000049")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600042D")]
			[Address(RVA = "0xD8FE94", Offset = "0xD8FE94", VA = "0xD8FE94", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000428")]
		[Address(RVA = "0xD8FCF8", Offset = "0xD8FCF8", VA = "0xD8FCF8")]
		[DebuggerHidden]
		public <Rotate>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000429")]
		[Address(RVA = "0xD8FD24", Offset = "0xD8FD24", VA = "0xD8FD24", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600042A")]
		[Address(RVA = "0xD8FD28", Offset = "0xD8FD28", VA = "0xD8FD28", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600042C")]
		[Address(RVA = "0xD8FE54", Offset = "0xD8FE54", VA = "0xD8FE54", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform sun;

	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform skyDome;

	[Token(Token = "0x6000425")]
	[Address(RVA = "0xDC4274", Offset = "0xDC4274", VA = "0xDC4274")]
	private void Start()
	{
	}

	[Token(Token = "0x6000426")]
	[Address(RVA = "0xDC42A0", Offset = "0xDC42A0", VA = "0xDC42A0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9249DC", Offset = "0x9249DC")]
	private IEnumerator Rotate()
	{
		return null;
	}

	[Token(Token = "0x6000427")]
	[Address(RVA = "0xDC430C", Offset = "0xDC430C", VA = "0xDC430C")]
	public RotateSunInMultiplayer()
	{
	}
}
[Token(Token = "0x2000105")]
public enum eAI
{
	[Token(Token = "0x4000608")]
	none,
	[Token(Token = "0x4000609")]
	fighter,
	[Token(Token = "0x400060A")]
	bomber,
	[Token(Token = "0x400060B")]
	zeppelin
}
[Token(Token = "0x2000106")]
public class AIPilot : MonoBehaviour
{
	[Token(Token = "0x2000107")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x917AAC", Offset = "0x917AAC")]
	private sealed class <PilotMagic>d__85 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400063D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400063E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400063F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AIPilot <>4__this;

		[Token(Token = "0x1700004C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000460")]
			[Address(RVA = "0xBDA864", Offset = "0xBDA864", VA = "0xBDA864", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000462")]
			[Address(RVA = "0xBDA8AC", Offset = "0xBDA8AC", VA = "0xBDA8AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600045D")]
		[Address(RVA = "0xBDA658", Offset = "0xBDA658", VA = "0xBDA658")]
		[DebuggerHidden]
		public <PilotMagic>d__85(int <>1__state)
		{
		}

		[Token(Token = "0x600045E")]
		[Address(RVA = "0xBDA684", Offset = "0xBDA684", VA = "0xBDA684", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600045F")]
		[Address(RVA = "0xBDA688", Offset = "0xBDA688", VA = "0xBDA688", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000461")]
		[Address(RVA = "0xBDA86C", Offset = "0xBDA86C", VA = "0xBDA86C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000108")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x917ABC", Offset = "0x917ABC")]
	private sealed class <BombardierMagic>d__93 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AIPilot <>4__this;

		[Token(Token = "0x1700004E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000466")]
			[Address(RVA = "0xBDA608", Offset = "0xBDA608", VA = "0xBDA608", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000468")]
			[Address(RVA = "0xBDA650", Offset = "0xBDA650", VA = "0xBDA650", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000463")]
		[Address(RVA = "0xBDA354", Offset = "0xBDA354", VA = "0xBDA354")]
		[DebuggerHidden]
		public <BombardierMagic>d__93(int <>1__state)
		{
		}

		[Token(Token = "0x6000464")]
		[Address(RVA = "0xBDA380", Offset = "0xBDA380", VA = "0xBDA380", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000465")]
		[Address(RVA = "0xBDA384", Offset = "0xBDA384", VA = "0xBDA384", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000467")]
		[Address(RVA = "0xBDA610", Offset = "0xBDA610", VA = "0xBDA610", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400060C")]
	public const int maxPilotLevel = 5;

	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float time;

	[Token(Token = "0x400060E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Hull target;

	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float setTargetTime;

	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private PlaneBody targetPlane;

	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public eAI type;

	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private PlaneBody plane;

	[Token(Token = "0x4000613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Hull hull;

	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int state;

	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool flyUp;

	[Token(Token = "0x4000616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector2 myJoystick;

	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LayerMask groundLayerMask;

	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static LayerMask hullLayerMask;

	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int hullLayerIndex;

	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static LayerMask hullGroundLayerMask;

	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private BombBay bombBay;

	[Token(Token = "0x400061C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private TorpedoBay torpedoBay;

	[Token(Token = "0x400061D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private RocketBay rocketBay;

	[Token(Token = "0x400061E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Cannon20mm c20mm;

	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool isPlayerTeam;

	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	public bool attackPlanes;

	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
	public bool attackVehicles;

	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x83")]
	public bool attackStructures;

	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public bool flyHome;

	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float lastCheckGroundTime;

	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float findTargetTime;

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float checkTargetAliveTime;

	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public bool pointReached;

	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
	private bool isFollowingPoint;

	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x96")]
	private bool requestPassingPoint;

	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Vector3 followPoint;

	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private int pilotLevel;

	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int bombardierLevel;

	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float reactionSpeed;

	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float lastRocketLaunch;

	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float evasiveTime;

	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float evasiveDir;

	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float evasiveChangeDirTime;

	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float evasiveMulY;

	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Transform planeToAvoid;

	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float avoidTime;

	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private float multiNextCheckCollideAITime;

	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float multiFlyAwayCollideAITime;

	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Vector3 forwardAim;

	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public int perfectShot;

	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public float bombDist;

	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private bool disableCheckBack;

	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public float bombardierTime;

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private float nextEvasiveManouverTime;

	[Token(Token = "0x1700004A")]
	public bool IsFollowingPoint
	{
		[Token(Token = "0x600042E")]
		[Address(RVA = "0x183DC04", Offset = "0x183DC04", VA = "0x183DC04")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700004B")]
	public bool CanFollowPoint
	{
		[Token(Token = "0x600042F")]
		[Address(RVA = "0x183DC0C", Offset = "0x183DC0C", VA = "0x183DC0C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000430")]
	[Address(RVA = "0x183DC14", Offset = "0x183DC14", VA = "0x183DC14")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000431")]
	[Address(RVA = "0x183DF34", Offset = "0x183DF34", VA = "0x183DF34")]
	public void Start()
	{
	}

	[Token(Token = "0x6000432")]
	[Address(RVA = "0x183E21C", Offset = "0x183E21C", VA = "0x183E21C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000433")]
	[Address(RVA = "0x183E36C", Offset = "0x183E36C", VA = "0x183E36C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000434")]
	[Address(RVA = "0x183E374", Offset = "0x183E374", VA = "0x183E374")]
	public bool IsFlyReloadOrHome()
	{
		return default(bool);
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0x183E37C", Offset = "0x183E37C", VA = "0x183E37C")]
	public bool CanBePlayedByPlayer(bool checkDist)
	{
		return default(bool);
	}

	[Token(Token = "0x6000436")]
	[Address(RVA = "0x183E478", Offset = "0x183E478", VA = "0x183E478")]
	public void StopFollowingPoint()
	{
	}

	[Token(Token = "0x6000437")]
	[Address(RVA = "0x183E480", Offset = "0x183E480", VA = "0x183E480")]
	public void FollowPoint(Vector3 point)
	{
	}

	[Token(Token = "0x6000438")]
	[Address(RVA = "0x183E498", Offset = "0x183E498", VA = "0x183E498")]
	public void RequestPassingThePoint()
	{
	}

	[Token(Token = "0x6000439")]
	[Address(RVA = "0x183E4A4", Offset = "0x183E4A4", VA = "0x183E4A4")]
	public int GetPilotLevel()
	{
		return default(int);
	}

	[Token(Token = "0x600043A")]
	[Address(RVA = "0x183E4AC", Offset = "0x183E4AC", VA = "0x183E4AC")]
	public void SetPilotLevel(int val)
	{
	}

	[Token(Token = "0x600043B")]
	[Address(RVA = "0x183E4B4", Offset = "0x183E4B4", VA = "0x183E4B4")]
	public void SetIsBot(int botExpLevel)
	{
	}

	[Token(Token = "0x600043C")]
	[Address(RVA = "0x183E000", Offset = "0x183E000", VA = "0x183E000")]
	private bool IsBot()
	{
		return default(bool);
	}

	[Token(Token = "0x600043D")]
	[Address(RVA = "0x183E4E0", Offset = "0x183E4E0", VA = "0x183E4E0")]
	public void SetTimeToNextTarget(float duration)
	{
	}

	[Token(Token = "0x600043E")]
	[Address(RVA = "0x183E518", Offset = "0x183E518", VA = "0x183E518")]
	public void ApplyPilots(PlayerPlane pp)
	{
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0x183E62C", Offset = "0x183E62C", VA = "0x183E62C")]
	public void SetPlayerTeam()
	{
	}

	[Token(Token = "0x6000440")]
	[Address(RVA = "0x183E638", Offset = "0x183E638", VA = "0x183E638")]
	public void FlyHome()
	{
	}

	[Token(Token = "0x6000441")]
	[Address(RVA = "0x183E224", Offset = "0x183E224", VA = "0x183E224")]
	public void SetTarget(Hull h)
	{
	}

	[Token(Token = "0x6000442")]
	[Address(RVA = "0x183E6B4", Offset = "0x183E6B4", VA = "0x183E6B4")]
	private void FindTarget()
	{
	}

	[Token(Token = "0x6000443")]
	[Address(RVA = "0x183EE34", Offset = "0x183EE34", VA = "0x183EE34")]
	private void CheckTargetAlive()
	{
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0x183EEF0", Offset = "0x183EEF0", VA = "0x183EEF0")]
	private void TargetRoutine()
	{
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0x183EF54", Offset = "0x183EF54", VA = "0x183EF54")]
	public bool IsGroundAhead()
	{
		return default(bool);
	}

	[Token(Token = "0x6000446")]
	[Address(RVA = "0x183F088", Offset = "0x183F088", VA = "0x183F088")]
	private void StepCheckGround()
	{
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0x183F140", Offset = "0x183F140", VA = "0x183F140")]
	public void HullHit()
	{
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0x183F66C", Offset = "0x183F66C", VA = "0x183F66C")]
	public void Update()
	{
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0x183FD6C", Offset = "0x183FD6C", VA = "0x183FD6C")]
	public void SetJoystick(Vector2 j)
	{
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0x183FE68", Offset = "0x183FE68", VA = "0x183FE68")]
	public bool CheckBack()
	{
		return default(bool);
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0x184101C", Offset = "0x184101C", VA = "0x184101C")]
	public void AvoidThisPlane(Transform t)
	{
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0x18403A8", Offset = "0x18403A8", VA = "0x18403A8")]
	public void AvoidPlane()
	{
	}

	[Token(Token = "0x600044D")]
	[Address(RVA = "0x1840514", Offset = "0x1840514", VA = "0x1840514")]
	public void Evasive()
	{
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0x18400C4", Offset = "0x18400C4", VA = "0x18400C4")]
	public bool CheckCollideAIPlane()
	{
		return default(bool);
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0x183FD18", Offset = "0x183FD18", VA = "0x183FD18")]
	public void FlyUp()
	{
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0x184105C", Offset = "0x184105C", VA = "0x184105C")]
	public void Shoot(Vector3 aimPos)
	{
	}

	[Token(Token = "0x6000451")]
	[Address(RVA = "0x183FAB8", Offset = "0x183FAB8", VA = "0x183FAB8")]
	private void ProcessPointFollowing()
	{
	}

	[Token(Token = "0x6000452")]
	[Address(RVA = "0x1840C20", Offset = "0x1840C20", VA = "0x1840C20")]
	public void AttackAirTarget()
	{
	}

	[Token(Token = "0x6000453")]
	[Address(RVA = "0x184093C", Offset = "0x184093C", VA = "0x184093C")]
	public void AttackGroundTarget()
	{
	}

	[Token(Token = "0x6000454")]
	[Address(RVA = "0x183E5C0", Offset = "0x183E5C0", VA = "0x183E5C0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x924A8C", Offset = "0x924A8C")]
	public IEnumerator PilotMagic()
	{
		return null;
	}

	[Token(Token = "0x6000455")]
	[Address(RVA = "0x1841F5C", Offset = "0x1841F5C", VA = "0x1841F5C")]
	public GameObject GetTarget()
	{
		return null;
	}

	[Token(Token = "0x6000456")]
	[Address(RVA = "0x18410E4", Offset = "0x18410E4", VA = "0x18410E4")]
	public void AccurateAim()
	{
	}

	[Token(Token = "0x6000457")]
	[Address(RVA = "0x1841D0C", Offset = "0x1841D0C", VA = "0x1841D0C")]
	public Vector3 GetAimPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000458")]
	[Address(RVA = "0x1840598", Offset = "0x1840598", VA = "0x1840598")]
	public void BombTarget()
	{
	}

	[Token(Token = "0x6000459")]
	[Address(RVA = "0x1841FF0", Offset = "0x1841FF0", VA = "0x1841FF0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x924AEC", Offset = "0x924AEC")]
	public IEnumerator BombardierMagic()
	{
		return null;
	}

	[Token(Token = "0x600045A")]
	[Address(RVA = "0x183F5A4", Offset = "0x183F5A4", VA = "0x183F5A4")]
	private void DoEvasiveManouver()
	{
	}

	[Token(Token = "0x600045B")]
	[Address(RVA = "0x184205C", Offset = "0x184205C", VA = "0x184205C")]
	public AIPilot()
	{
	}
}
[Token(Token = "0x2000109")]
public class AchievementButton : MonoBehaviour
{
	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int achievment;

	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMesh tm;

	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Renderer icon;

	[Token(Token = "0x6000469")]
	[Address(RVA = "0x18420F4", Offset = "0x18420F4", VA = "0x18420F4")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x600046A")]
	[Address(RVA = "0x18420F8", Offset = "0x18420F8", VA = "0x18420F8")]
	public void Print()
	{
	}

	[Token(Token = "0x600046B")]
	[Address(RVA = "0x184262C", Offset = "0x184262C", VA = "0x184262C")]
	public void Click()
	{
	}

	[Token(Token = "0x600046C")]
	[Address(RVA = "0x18426D8", Offset = "0x18426D8", VA = "0x18426D8")]
	public AchievementButton()
	{
	}
}
[Token(Token = "0x200010A")]
public class AchievementWindow : MonoBehaviour
{
	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMesh tName;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMesh tm;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Renderer icon;

	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Renderer progress;

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMesh tReward;

	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject claimRewardButton;

	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject closeButton;

	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int achievement;

	[Token(Token = "0x600046D")]
	[Address(RVA = "0x18426E0", Offset = "0x18426E0", VA = "0x18426E0")]
	public static void SetAchievement(int a)
	{
	}

	[Token(Token = "0x600046E")]
	[Address(RVA = "0x1842748", Offset = "0x1842748", VA = "0x1842748")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x600046F")]
	[Address(RVA = "0x184274C", Offset = "0x184274C", VA = "0x184274C")]
	public void Print()
	{
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0x1842E90", Offset = "0x1842E90", VA = "0x1842E90")]
	public void ClaimReward()
	{
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0x184316C", Offset = "0x184316C", VA = "0x184316C")]
	public AchievementWindow()
	{
	}
}
[Token(Token = "0x200010B")]
public enum eAchievementType
{
	[Token(Token = "0x400064F")]
	none,
	[Token(Token = "0x4000650")]
	destroyPlanes,
	[Token(Token = "0x4000651")]
	destroyFighters,
	[Token(Token = "0x4000652")]
	destroyBombers,
	[Token(Token = "0x4000653")]
	destroyVechicles,
	[Token(Token = "0x4000654")]
	destroyShips,
	[Token(Token = "0x4000655")]
	destroyStructures,
	[Token(Token = "0x4000656")]
	finishMissions,
	[Token(Token = "0x4000657")]
	finishSoloMissions,
	[Token(Token = "0x4000658")]
	_skills_unused_,
	[Token(Token = "0x4000659")]
	planes,
	[Token(Token = "0x400065A")]
	_baloons_unused_,
	[Token(Token = "0x400065B")]
	_AA_unused_,
	[Token(Token = "0x400065C")]
	num
}
[Token(Token = "0x200010C")]
public class Achievements : MonoBehaviour
{
	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int[] aReward;

	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int[] aGoal;

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static int[] aBaseGoal;

	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static int[] aType;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static int[] aClosed;

	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static string[] aName;

	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static int destroyedFighters;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private static int destroyedBombers;

	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static int destroyedShips;

	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private static int destroyedVechicles;

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static int destroyedStructures;

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private static int finishedMissionsSolo;

	[Token(Token = "0x6000473")]
	[Address(RVA = "0x1843178", Offset = "0x1843178", VA = "0x1843178")]
	public static int Num()
	{
		return default(int);
	}

	[Token(Token = "0x6000474")]
	[Address(RVA = "0x1842A6C", Offset = "0x1842A6C", VA = "0x1842A6C")]
	public static bool IsClosed(int t)
	{
		return default(bool);
	}

	[Token(Token = "0x6000475")]
	[Address(RVA = "0x18424EC", Offset = "0x18424EC", VA = "0x18424EC")]
	public static bool IsReadyToClaim(int t)
	{
		return default(bool);
	}

	[Token(Token = "0x6000476")]
	[Address(RVA = "0x18430D0", Offset = "0x18430D0", VA = "0x18430D0")]
	public static int FindAchievementToClaim()
	{
		return default(int);
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0x184303C", Offset = "0x184303C", VA = "0x184303C")]
	public static void CloseAchievement(int t)
	{
	}

	[Token(Token = "0x6000478")]
	[Address(RVA = "0x18431E8", Offset = "0x18431E8", VA = "0x18431E8")]
	public static void OnEndMission()
	{
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0x18431EC", Offset = "0x18431EC", VA = "0x18431EC")]
	public static void OnMissionFinished(bool victory)
	{
	}

	[Token(Token = "0x600047A")]
	[Address(RVA = "0x18431F0", Offset = "0x18431F0", VA = "0x18431F0")]
	public static void OnPlayerShotDownPlayerPlane(string planePrefabID)
	{
	}

	[Token(Token = "0x600047B")]
	[Address(RVA = "0x18431F4", Offset = "0x18431F4", VA = "0x18431F4")]
	public static void OnPlayerShotDownHull(Hull hull, Missile m)
	{
	}

	[Token(Token = "0x600047C")]
	[Address(RVA = "0x18431F8", Offset = "0x18431F8", VA = "0x18431F8")]
	public static void OnStartBase()
	{
	}

	[Token(Token = "0x600047D")]
	[Address(RVA = "0x18431FC", Offset = "0x18431FC", VA = "0x18431FC")]
	public static void OnStartMission()
	{
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0x1843200", Offset = "0x1843200", VA = "0x1843200")]
	public static void Init_FromInitNationOnClick()
	{
	}

	[Token(Token = "0x600047F")]
	[Address(RVA = "0x1842434", Offset = "0x1842434", VA = "0x1842434")]
	public static Material GetMaterial(int t)
	{
		return null;
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0x1842588", Offset = "0x1842588", VA = "0x1842588")]
	public static string GetAName(int t)
	{
		return null;
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0x1842B04", Offset = "0x1842B04", VA = "0x1842B04")]
	public static string GetDescription(int t)
	{
		return null;
	}

	[Token(Token = "0x6000482")]
	[Address(RVA = "0x1842E00", Offset = "0x1842E00", VA = "0x1842E00")]
	public static int GetReward(int t)
	{
		return default(int);
	}

	[Token(Token = "0x6000483")]
	[Address(RVA = "0x1843334", Offset = "0x1843334", VA = "0x1843334")]
	public static int GetProgress(int t)
	{
		return default(int);
	}

	[Token(Token = "0x6000484")]
	[Address(RVA = "0x18433D8", Offset = "0x18433D8", VA = "0x18433D8")]
	public static int GetProgress2(int t)
	{
		return default(int);
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0x1842304", Offset = "0x1842304", VA = "0x1842304")]
	public static float GetProgressF(int t)
	{
		return default(float);
	}

	[Token(Token = "0x6000486")]
	[Address(RVA = "0x18435FC", Offset = "0x18435FC", VA = "0x18435FC")]
	public static float GetTotalProgressF()
	{
		return default(float);
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0x18436D8", Offset = "0x18436D8", VA = "0x18436D8")]
	public static void HullDestroyed(Hull h)
	{
	}

	[Token(Token = "0x6000488")]
	[Address(RVA = "0x184384C", Offset = "0x184384C", VA = "0x184384C")]
	public static void EndMission(bool solo)
	{
	}

	[Token(Token = "0x6000489")]
	[Address(RVA = "0x18438C0", Offset = "0x18438C0", VA = "0x18438C0")]
	public static void ResetValues()
	{
	}

	[Token(Token = "0x600048A")]
	[Address(RVA = "0x184394C", Offset = "0x184394C", VA = "0x184394C")]
	public static string GetSaveString()
	{
		return null;
	}

	[Token(Token = "0x600048B")]
	[Address(RVA = "0x1843CA4", Offset = "0x1843CA4", VA = "0x1843CA4")]
	public static void LoadFromString(string s)
	{
	}

	[Token(Token = "0x600048C")]
	[Address(RVA = "0x1843E48", Offset = "0x1843E48", VA = "0x1843E48")]
	public Achievements()
	{
	}
}
[Token(Token = "0x200010D")]
public class AchievmentChecker : MonoBehaviour
{
	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject window;

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject hideButton;

	[Token(Token = "0x600048E")]
	[Address(RVA = "0x1844370", Offset = "0x1844370", VA = "0x1844370")]
	public AchievmentChecker()
	{
	}
}
[Token(Token = "0x200010E")]
public class AdjustIconToText : MonoBehaviour
{
	[Token(Token = "0x200010F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x917ACC", Offset = "0x917ACC")]
	private sealed class <AdjustToText>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400066F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AdjustIconToText <>4__this;

		[Token(Token = "0x17000050")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000496")]
			[Address(RVA = "0xBDA98C", Offset = "0xBDA98C", VA = "0xBDA98C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000051")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000498")]
			[Address(RVA = "0xBDA9D4", Offset = "0xBDA9D4", VA = "0xBDA9D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000493")]
		[Address(RVA = "0xBDA8B4", Offset = "0xBDA8B4", VA = "0xBDA8B4")]
		[DebuggerHidden]
		public <AdjustToText>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000494")]
		[Address(RVA = "0xBDA8E0", Offset = "0xBDA8E0", VA = "0xBDA8E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000495")]
		[Address(RVA = "0xBDA8E4", Offset = "0xBDA8E4", VA = "0xBDA8E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000497")]
		[Address(RVA = "0xBDA994", Offset = "0xBDA994", VA = "0xBDA994", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject textObject;

	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool toLeft;

	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float margin;

	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool adjusted;

	[Token(Token = "0x600048F")]
	[Address(RVA = "0x1844384", Offset = "0x1844384", VA = "0x1844384")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000490")]
	[Address(RVA = "0x18443B0", Offset = "0x18443B0", VA = "0x18443B0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x924BEC", Offset = "0x924BEC")]
	public IEnumerator AdjustToText()
	{
		return null;
	}

	[Token(Token = "0x6000491")]
	[Address(RVA = "0x184441C", Offset = "0x184441C", VA = "0x184441C")]
	private void Adjust()
	{
	}

	[Token(Token = "0x6000492")]
	[Address(RVA = "0x18448D0", Offset = "0x18448D0", VA = "0x18448D0")]
	public AdjustIconToText()
	{
	}
}
[Token(Token = "0x2000110")]
public class AirplaneMaterialManager : MonoBehaviour
{
	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material baseMaterial;

	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material masksMaterial;

	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material decalMaterial;

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AirplaneMaterialManager instance;

	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material[] cacheMaterials;

	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Texture2D[] maskA;

	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Texture2D[] maskB;

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Texture2D[] maskD;

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<Material> trackedCustom;

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Dictionary<Material, List<GameObject>> disposeAfterDestroyed;

	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Vector3[] decalNumPos;

	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Vector4[] decalPosition;

	[Token(Token = "0x6000499")]
	[Address(RVA = "0x18448D8", Offset = "0x18448D8", VA = "0x18448D8")]
	public void Awake()
	{
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0x1844A28", Offset = "0x1844A28", VA = "0x1844A28")]
	private void Update()
	{
	}

	[Token(Token = "0x600049B")]
	[Address(RVA = "0x1844E58", Offset = "0x1844E58", VA = "0x1844E58")]
	public static PlaneColorSetup GetSetupByID(int id)
	{
		return null;
	}

	[Token(Token = "0x600049C")]
	[Address(RVA = "0x1844FE4", Offset = "0x1844FE4", VA = "0x1844FE4")]
	public static void Generate(int id, ref Material material, int size = 0)
	{
	}

	[Token(Token = "0x600049D")]
	[Address(RVA = "0x1845398", Offset = "0x1845398", VA = "0x1845398")]
	public static void GenerateS(PlaneColorSetup s, ref Material material, int size = 0)
	{
	}

	[Token(Token = "0x600049E")]
	[Address(RVA = "0x184628C", Offset = "0x184628C", VA = "0x184628C")]
	private bool IsCachedMaterial(Material material)
	{
		return default(bool);
	}

	[Token(Token = "0x600049F")]
	[Address(RVA = "0x184513C", Offset = "0x184513C", VA = "0x184513C")]
	private void GenerateInt(int id, ref Material material, int size = 0)
	{
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0x18454F4", Offset = "0x18454F4", VA = "0x18454F4")]
	private Material GenerateIntS(PlaneColorSetup setup, int id, ref Material result, int size = 0)
	{
		return null;
	}

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0x1846360", Offset = "0x1846360", VA = "0x1846360")]
	public static void Dispose(PlayerPlane playerPlane)
	{
	}

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0x1844C9C", Offset = "0x1844C9C", VA = "0x1844C9C")]
	public static void Dispose(Material m)
	{
	}

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0x1846414", Offset = "0x1846414", VA = "0x1846414")]
	public static void Dispose(ref Material m)
	{
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0x18464C4", Offset = "0x18464C4", VA = "0x18464C4")]
	public static void DisposeAfterObjectsDestroyed(Material mat, List<GameObject> objects)
	{
	}

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0x1846628", Offset = "0x1846628", VA = "0x1846628")]
	public static void ReleaseAll()
	{
	}

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0x1846878", Offset = "0x1846878", VA = "0x1846878")]
	public AirplaneMaterialManager()
	{
	}
}
[Token(Token = "0x2000111")]
public class AllTimeUpdateContent : MonoBehaviour
{
	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Renderer rend;

	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform posA;

	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform posB;

	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform posC;

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Transform cam;

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float rs;

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0x1846D18", Offset = "0x1846D18", VA = "0x1846D18")]
	private void Start()
	{
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0x1846D40", Offset = "0x1846D40", VA = "0x1846D40")]
	private void Update()
	{
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0x18470E8", Offset = "0x18470E8", VA = "0x18470E8")]
	public AllTimeUpdateContent()
	{
	}
}
[Token(Token = "0x2000112")]
public class AnimatedMenu : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000113")]
	public class ItemPair
	{
		[Token(Token = "0x4000698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AnimatedMenuItem item1;

		[Token(Token = "0x4000699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimatedMenuItem item2;

		[Token(Token = "0x60004C1")]
		[Address(RVA = "0xBDAF08", Offset = "0xBDAF08", VA = "0xBDAF08")]
		public ItemPair()
		{
		}
	}

	[Token(Token = "0x2000114")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x917ADC", Offset = "0x917ADC")]
	private sealed class <CurlItemsYielded>d__36 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400069A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400069B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400069C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimatedMenu <>4__this;

		[Token(Token = "0x400069D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool immediate;

		[Token(Token = "0x400069E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimatedMenuItem item;

		[Token(Token = "0x400069F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <posCnt>5__2;

		[Token(Token = "0x40006A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int <itemPos>5__3;

		[Token(Token = "0x40006A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int <loop>5__4;

		[Token(Token = "0x17000052")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004C5")]
			[Address(RVA = "0xBDAEB8", Offset = "0xBDAEB8", VA = "0xBDAEB8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000053")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004C7")]
			[Address(RVA = "0xBDAF00", Offset = "0xBDAF00", VA = "0xBDAF00", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004C2")]
		[Address(RVA = "0xBDA9EC", Offset = "0xBDA9EC", VA = "0xBDA9EC")]
		[DebuggerHidden]
		public <CurlItemsYielded>d__36(int <>1__state)
		{
		}

		[Token(Token = "0x60004C3")]
		[Address(RVA = "0xBDAA18", Offset = "0xBDAA18", VA = "0xBDAA18", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004C4")]
		[Address(RVA = "0xBDAA1C", Offset = "0xBDAA1C", VA = "0xBDAA1C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004C6")]
		[Address(RVA = "0xBDAEC0", Offset = "0xBDAEC0", VA = "0xBDAEC0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected AnimatedMenuItem[] items;

	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected ItemPair[] pairs;

	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected GameObject centerPos;

	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	protected GameObject hoverTarget;

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	protected float range;

	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	protected float angleDistance;

	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	protected float distHover;

	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	protected float speedHover;

	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	protected float curlOthersOffset;

	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	protected float curlTime;

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	protected float uncurlTime;

	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	protected int materialQueueCurlOffset;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private IMUIHoverable currHoverInEditor;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<AnimatedMenu> activeMenus;

	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float curlEndTime;

	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool curled;

	[Token(Token = "0x4000694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	private bool curlingImmediate;

	[Token(Token = "0x4000695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float uncurlEndTime;

	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private AnimatedMenuItem curledByItem;

	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private AnimatedMenuItem clickItem;

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0x184F3EC", Offset = "0x184F3EC", VA = "0x184F3EC", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0x184F3F0", Offset = "0x184F3F0", VA = "0x184F3F0", Slot = "5")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0x184F3F4", Offset = "0x184F3F4", VA = "0x184F3F4", Slot = "6")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0x184F480", Offset = "0x184F480", VA = "0x184F480", Slot = "7")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0x184F50C", Offset = "0x184F50C", VA = "0x184F50C", Slot = "8")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0x184FAF4", Offset = "0x184FAF4", VA = "0x184FAF4", Slot = "9")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0x185007C", Offset = "0x185007C", VA = "0x185007C")]
	public bool IsPairedItem(AnimatedMenuItem item, out bool no1, out AnimatedMenuItem secondItem)
	{
		return default(bool);
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0x1850214", Offset = "0x1850214", VA = "0x1850214")]
	private int CountItemsPositionsCount()
	{
		return default(int);
	}

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0x18502B4", Offset = "0x18502B4", VA = "0x18502B4")]
	private int GetItemPositionIndex(AnimatedMenuItem item, [Optional] AnimatedMenuItem exceptItem)
	{
		return default(int);
	}

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0x184F89C", Offset = "0x184F89C", VA = "0x184F89C")]
	public void GetItemPos(AnimatedMenuItem item, bool center, float range, out Quaternion rot, out Vector3 pos)
	{
	}

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0x18504CC", Offset = "0x18504CC", VA = "0x18504CC")]
	public void UpdatePositionsInEditor()
	{
	}

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0x185062C", Offset = "0x185062C", VA = "0x185062C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60004B7")]
	[Address(RVA = "0x184FB8C", Offset = "0x184FB8C", VA = "0x184FB8C")]
	private void HoverInEditor()
	{
	}

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0x1850770", Offset = "0x1850770", VA = "0x1850770")]
	public bool IsCurling()
	{
		return default(bool);
	}

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0x185079C", Offset = "0x185079C", VA = "0x185079C", Slot = "10")]
	protected virtual void CurlItems(AnimatedMenuItem item, bool immediate = false)
	{
	}

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0x18507CC", Offset = "0x18507CC", VA = "0x18507CC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x924C9C", Offset = "0x924C9C")]
	private IEnumerator CurlItemsYielded(AnimatedMenuItem item, bool immediate = false)
	{
		return null;
	}

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0x1850854", Offset = "0x1850854", VA = "0x1850854")]
	public void UncurlItems()
	{
	}

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0x18509E0", Offset = "0x18509E0", VA = "0x18509E0")]
	public void HideOtherItems(AnimatedMenuItem except, AnimatedMenuItem except2)
	{
	}

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0x1850B2C", Offset = "0x1850B2C", VA = "0x1850B2C")]
	public void ShowOtherItems(AnimatedMenuItem except, AnimatedMenuItem except2)
	{
	}

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0x1850C78", Offset = "0x1850C78", VA = "0x1850C78")]
	public void OnClick(AnimatedMenuItem item, bool immediate = false)
	{
	}

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0x1850D94", Offset = "0x1850D94", VA = "0x1850D94")]
	public AnimatedMenu()
	{
	}
}
[Token(Token = "0x2000115")]
public class AnimatedMenuItem : MonoBehaviour, IMUIHoverable
{
	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected AnimatedMenu menu;

	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 posdef;

	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Quaternion rotdef;

	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 posh;

	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Quaternion roth;

	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float speedHover;

	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool hoverRequest;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	private bool hover;

	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
	private bool hovered;

	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 hoverRequestPoint;

	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool leave;

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 curlStartPos;

	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Vector3 curlTargetPos;

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Quaternion curlStartRot;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Quaternion curlTargetRot;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float curlStartTime;

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float curlTime;

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool curling;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private List<KeyValuePair<Renderer, int>> renderQueueOrg;

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0x184FABC", Offset = "0x184FABC", VA = "0x184FABC")]
	public void Init(AnimatedMenu _menu, Vector3 _posdef, Quaternion _rotdef, Vector3 _posh, Quaternion _roth, float _speedHover)
	{
	}

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0x1850E24", Offset = "0x1850E24", VA = "0x1850E24")]
	public void Init(AnimatedMenu _menu, float _speedHover)
	{
	}

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0x1850E30", Offset = "0x1850E30", VA = "0x1850E30", Slot = "7")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0x1851820", Offset = "0x1851820", VA = "0x1851820", Slot = "8")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0x1850FEC", Offset = "0x1850FEC", VA = "0x1850FEC", Slot = "4")]
	public void OnHover(Vector3 point)
	{
	}

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0x1851B20", Offset = "0x1851B20", VA = "0x1851B20", Slot = "5")]
	public void OnMove(Vector3 point)
	{
	}

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0x1851B24", Offset = "0x1851B24", VA = "0x1851B24", Slot = "6")]
	public void OnLeave()
	{
	}

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0x1851BD8", Offset = "0x1851BD8", VA = "0x1851BD8")]
	public void Click()
	{
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0x1851C6C", Offset = "0x1851C6C", VA = "0x1851C6C")]
	public void ClickImmediate()
	{
	}

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0x1851C8C", Offset = "0x1851C8C", VA = "0x1851C8C")]
	public void StartCurl(Vector3 pos, Quaternion rot, int renderQueueOffset, float _curlTime)
	{
	}

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0x1850944", Offset = "0x1850944", VA = "0x1850944")]
	public void UnCurl(float _curlTime)
	{
	}

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0x1851F54", Offset = "0x1851F54", VA = "0x1851F54")]
	public void OnStartRotating()
	{
	}

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0x185200C", Offset = "0x185200C", VA = "0x185200C", Slot = "9")]
	public virtual void ExecuteClick(bool immediate = false)
	{
	}

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0x1850F08", Offset = "0x1850F08", VA = "0x1850F08")]
	private bool IsCurlingOrRotating()
	{
		return default(bool);
	}

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0x18518DC", Offset = "0x18518DC", VA = "0x18518DC")]
	private void UpdateMaterials(bool on)
	{
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0x1851114", Offset = "0x1851114", VA = "0x1851114")]
	private void StepHover()
	{
	}

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0x1851388", Offset = "0x1851388", VA = "0x1851388")]
	private void StepLeave()
	{
	}

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0x185157C", Offset = "0x185157C", VA = "0x185157C")]
	private void StepCurl()
	{
	}

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0x185233C", Offset = "0x185233C", VA = "0x185233C")]
	public AnimatedMenuItem()
	{
	}
}
[Token(Token = "0x2000116")]
public class AnimatedMenuItemCallFunc : AnimatedMenuItem
{
	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private GameObject actionObject;

	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private string actionFunction;

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0x18523B4", Offset = "0x18523B4", VA = "0x18523B4", Slot = "9")]
	public override void ExecuteClick(bool immediate = false)
	{
	}

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0x1852460", Offset = "0x1852460", VA = "0x1852460")]
	public AnimatedMenuItemCallFunc()
	{
	}
}
[Token(Token = "0x2000117")]
public class AnimatedMenuItemHighlight : MonoBehaviour
{
	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material matHighlight;

	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Renderer r;

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material materialOrg;

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0x1852044", Offset = "0x1852044", VA = "0x1852044")]
	public void OnHover()
	{
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0x18521F8", Offset = "0x18521F8", VA = "0x18521F8")]
	public void OnLeave()
	{
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0x1852464", Offset = "0x1852464", VA = "0x1852464")]
	public AnimatedMenuItemHighlight()
	{
	}
}
[Token(Token = "0x2000118")]
public class AnimatedMenuItemSecondSide : AnimatedMenuItem
{
	[Token(Token = "0x2000119")]
	public delegate void SecondSideSetActive(bool active);

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private GameObject secondSide;

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private float speedRotate;

	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private bool rotatingToSide;

	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
	private bool rotatingBack;

	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float startRotation;

	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private float currRotation;

	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Collider[] disabledColliders;

	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Collider[] disabledColliders2;

	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Renderer[] hiddenRenderers;

	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Renderer[] hiddenRenderers2;

	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private bool hideHiddenRenderers;

	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF9")]
	private bool rotatingImmediate;

	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private AnimatedMenuItem secondItemRotating;

	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public SecondSideSetActive secondSideSetActive;

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0x185246C", Offset = "0x185246C", VA = "0x185246C", Slot = "9")]
	public override void ExecuteClick(bool immediate = false)
	{
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0x1852024", Offset = "0x1852024", VA = "0x1852024")]
	public bool IsRotating()
	{
		return default(bool);
	}

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0x1852714", Offset = "0x1852714", VA = "0x1852714")]
	public bool IsOpenSecondSide()
	{
		return default(bool);
	}

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0x1852730", Offset = "0x1852730", VA = "0x1852730")]
	public void OnRotateBack()
	{
	}

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0x18527E4", Offset = "0x18527E4", VA = "0x18527E4", Slot = "7")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0x1852BE8", Offset = "0x1852BE8", VA = "0x1852BE8")]
	public AnimatedMenuItemSecondSide()
	{
	}
}
[Token(Token = "0x200011A")]
public class AnimatedMenuItemSecondSideOrCallFunc : AnimatedMenuItemSecondSide
{
	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[SerializeField]
	private GameObject actionObject;

	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private string actionFunction;

	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91AAB8", Offset = "0x91AAB8")]
	private bool <CallFunc>k__BackingField;

	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91AAC8", Offset = "0x91AAC8")]
	private Func<bool> <CallFuncCallback>k__BackingField;

	[Token(Token = "0x17000054")]
	public bool CallFunc
	{
		[Token(Token = "0x60004EA")]
		[Address(RVA = "0xC15BE4", Offset = "0xC15BE4", VA = "0xC15BE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x924D4C", Offset = "0x924D4C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60004EB")]
		[Address(RVA = "0xC15BEC", Offset = "0xC15BEC", VA = "0xC15BEC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x924D5C", Offset = "0x924D5C")]
		set
		{
		}
	}

	[Token(Token = "0x17000055")]
	public Func<bool> CallFuncCallback
	{
		[Token(Token = "0x60004EC")]
		[Address(RVA = "0xC15BF8", Offset = "0xC15BF8", VA = "0xC15BF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x924D6C", Offset = "0x924D6C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60004ED")]
		[Address(RVA = "0xC15C00", Offset = "0xC15C00", VA = "0xC15C00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x924D7C", Offset = "0x924D7C")]
		set
		{
		}
	}

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0xC15C08", Offset = "0xC15C08", VA = "0xC15C08", Slot = "9")]
	public override void ExecuteClick(bool immediate = false)
	{
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0xC15CF8", Offset = "0xC15CF8", VA = "0xC15CF8")]
	public AnimatedMenuItemSecondSideOrCallFunc()
	{
	}
}
[Token(Token = "0x200011B")]
public class AntiCheat : MonoBehaviour
{
	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static bool initialized;

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0xC160AC", Offset = "0xC160AC", VA = "0xC160AC")]
	public static void Initialize()
	{
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0xC16BE0", Offset = "0xC16BE0", VA = "0xC16BE0")]
	public AntiCheat()
	{
	}
}
[Token(Token = "0x200011C")]
public enum eNation
{
	[Token(Token = "0x40006CE")]
	us,
	[Token(Token = "0x40006CF")]
	en,
	[Token(Token = "0x40006D0")]
	rus,
	[Token(Token = "0x40006D1")]
	ger,
	[Token(Token = "0x40006D2")]
	jap,
	[Token(Token = "0x40006D3")]
	num
}
[Token(Token = "0x200011D")]
public enum eqType
{
	[Token(Token = "0x40006D5")]
	_____PLANES__ = 0,
	[Token(Token = "0x40006D6")]
	fighter = 1,
	[Token(Token = "0x40006D7")]
	hBomber = 4,
	[Token(Token = "0x40006D8")]
	tBomber = 5,
	[Token(Token = "0x40006D9")]
	zBomber = 6,
	[Token(Token = "0x40006DA")]
	zeppelin = 7,
	[Token(Token = "0x40006DB")]
	fighter_Grounded = 8,
	[Token(Token = "0x40006DC")]
	bomber_Grounded = 9,
	[Token(Token = "0x40006DD")]
	_____BALOONS__ = 20,
	[Token(Token = "0x40006DE")]
	baloon = 21,
	[Token(Token = "0x40006DF")]
	_____VEHICLES__ = 30,
	[Token(Token = "0x40006E0")]
	tank = 31,
	[Token(Token = "0x40006E1")]
	static_aa = 32,
	[Token(Token = "0x40006E2")]
	vehicle_aa = 33,
	[Token(Token = "0x40006E3")]
	truck = 34,
	[Token(Token = "0x40006E4")]
	convoyAmmo = 35,
	[Token(Token = "0x40006E5")]
	convoyFuel = 36,
	[Token(Token = "0x40006E6")]
	convoyTanks = 37,
	[Token(Token = "0x40006E7")]
	spotlight_AA = 38,
	[Token(Token = "0x40006E8")]
	longRangeArtillery = 39,
	[Token(Token = "0x40006E9")]
	_____TRAINS__ = 50,
	[Token(Token = "0x40006EA")]
	train = 51,
	[Token(Token = "0x40006EB")]
	trainFuel = 52,
	[Token(Token = "0x40006EC")]
	trainAmmo = 53,
	[Token(Token = "0x40006ED")]
	trainTanks = 54,
	[Token(Token = "0x40006EE")]
	_____SHIPS__ = 70,
	[Token(Token = "0x40006EF")]
	boat = 71,
	[Token(Token = "0x40006F0")]
	cutter = 72,
	[Token(Token = "0x40006F1")]
	destroyer = 73,
	[Token(Token = "0x40006F2")]
	cruiser = 74,
	[Token(Token = "0x40006F3")]
	carrier = 75,
	[Token(Token = "0x40006F4")]
	ship = 76,
	[Token(Token = "0x40006F5")]
	_____STRUCTURES__ = 100,
	[Token(Token = "0x40006F6")]
	bridge = 101,
	[Token(Token = "0x40006F7")]
	refinery = 102,
	[Token(Token = "0x40006F8")]
	storage = 103,
	[Token(Token = "0x40006F9")]
	fuelTank = 104,
	[Token(Token = "0x40006FA")]
	factory = 105,
	[Token(Token = "0x40006FB")]
	airfield = 106,
	[Token(Token = "0x40006FC")]
	townAA = 107,
	[Token(Token = "0x40006FD")]
	headquaters = 108,
	[Token(Token = "0x40006FE")]
	coalMine = 109,
	[Token(Token = "0x40006FF")]
	ourBase = 110,
	[Token(Token = "0x4000700")]
	radioTower = 111,
	[Token(Token = "0x4000701")]
	num = 112
}
[Token(Token = "0x200011E")]
public class ArmyManager : MonoBehaviour
{
	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EquipmentList[] data;

	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ArmyManager instance;

	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool destroyed;

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0xC18600", Offset = "0xC18600", VA = "0xC18600")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0xC18604", Offset = "0xC18604", VA = "0xC18604")]
	public static void Init()
	{
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0xC18840", Offset = "0xC18840", VA = "0xC18840")]
	private void InitLocal()
	{
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0xC18EC8", Offset = "0xC18EC8", VA = "0xC18EC8")]
	public static bool HasNation(eNation nation)
	{
		return default(bool);
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0xC1905C", Offset = "0xC1905C", VA = "0xC1905C")]
	public static bool Has(eNation nation, eqType type)
	{
		return default(bool);
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0xC19208", Offset = "0xC19208", VA = "0xC19208")]
	public static GameObject Get(MultiplayerSync.SyncState mSync, eNation nation, eqType type)
	{
		return null;
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0xC19528", Offset = "0xC19528", VA = "0xC19528")]
	public static GameObject[] GetList(eNation nation, eqType type)
	{
		return null;
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0xC1981C", Offset = "0xC1981C", VA = "0xC1981C")]
	public ArmyManager()
	{
	}
}
[Token(Token = "0x200011F")]
public class Artillery : MonoBehaviour
{
	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public eFX shootFX;

	[Token(Token = "0x4000706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform shootPos;

	[Token(Token = "0x4000707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float time;

	[Token(Token = "0x4000708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Animation anim;

	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string shootAnimName;

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0xC19920", Offset = "0xC19920", VA = "0xC19920")]
	private void Start()
	{
	}

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0xC19968", Offset = "0xC19968", VA = "0xC19968")]
	private void Update()
	{
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0xC199B4", Offset = "0xC199B4", VA = "0xC199B4")]
	private void Shoot()
	{
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0xC19AC4", Offset = "0xC19AC4", VA = "0xC19AC4")]
	public Artillery()
	{
	}
}
[Token(Token = "0x2000120")]
public class BaloonPitch : MonoBehaviour
{
	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private MultiplayerSync.SyncState mSync;

	[Token(Token = "0x6000500")]
	[Address(RVA = "0xC1B530", Offset = "0xC1B530", VA = "0xC1B530")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000501")]
	[Address(RVA = "0xC1B8A4", Offset = "0xC1B8A4", VA = "0xC1B8A4")]
	public BaloonPitch()
	{
	}
}
[Token(Token = "0x2000121")]
public class BarrelFireRotator : MonoBehaviour
{
	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform[] fires;

	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int[] angle;

	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int index;

	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 scale;

	[Token(Token = "0x6000502")]
	[Address(RVA = "0xC1B8AC", Offset = "0xC1B8AC", VA = "0xC1B8AC")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000503")]
	[Address(RVA = "0xC1BE10", Offset = "0xC1BE10", VA = "0xC1BE10")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000504")]
	[Address(RVA = "0xC1BFD8", Offset = "0xC1BFD8", VA = "0xC1BFD8")]
	public void Update()
	{
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0xC1C0CC", Offset = "0xC1C0CC", VA = "0xC1C0CC")]
	public BarrelFireRotator()
	{
	}
}
[Token(Token = "0x2000122")]
public class BaseButtonTutorial : MonoBehaviour
{
	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextMesh tm;

	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string trlTutorial;

	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private string trlMissions;

	[Token(Token = "0x6000507")]
	[Address(RVA = "0xC1C170", Offset = "0xC1C170", VA = "0xC1C170")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000508")]
	[Address(RVA = "0xC1C260", Offset = "0xC1C260", VA = "0xC1C260")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000509")]
	[Address(RVA = "0xC1C350", Offset = "0xC1C350", VA = "0xC1C350")]
	private void RegionChanged(TerritoryMap.Region region)
	{
	}

	[Token(Token = "0x600050A")]
	[Address(RVA = "0xC1C3F0", Offset = "0xC1C3F0", VA = "0xC1C3F0")]
	public BaseButtonTutorial()
	{
	}
}
[Token(Token = "0x2000123")]
public class BaseCamera : MonoBehaviour
{
	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float viewV;

	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static BaseCamera instance;

	[Token(Token = "0x600050B")]
	[Address(RVA = "0xC1C3F8", Offset = "0xC1C3F8", VA = "0xC1C3F8")]
	public void Awake()
	{
	}

	[Token(Token = "0x600050C")]
	[Address(RVA = "0xC1C488", Offset = "0xC1C488", VA = "0xC1C488")]
	public BaseCamera()
	{
	}
}
[Token(Token = "0x2000124")]
public class BaseLocation : MonoBehaviour
{
	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] forestPrefab;

	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] locationPrefab;

	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static BaseLocation instance;

	[Token(Token = "0x600050E")]
	[Address(RVA = "0xC1C4E0", Offset = "0xC1C4E0", VA = "0xC1C4E0")]
	public void Awake()
	{
	}

	[Token(Token = "0x600050F")]
	[Address(RVA = "0xC1C5E8", Offset = "0xC1C5E8", VA = "0xC1C5E8")]
	public static GameObject GetForestPrefab()
	{
		return null;
	}

	[Token(Token = "0x6000510")]
	[Address(RVA = "0xC1C6DC", Offset = "0xC1C6DC", VA = "0xC1C6DC")]
	public static GameObject GetBaseLocationPrefab()
	{
		return null;
	}

	[Token(Token = "0x6000511")]
	[Address(RVA = "0xC1C7D0", Offset = "0xC1C7D0", VA = "0xC1C7D0")]
	public BaseLocation()
	{
	}
}
[Token(Token = "0x2000125")]
public class BaseLocationLoader : MonoBehaviour
{
	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject[] locations;

	[Token(Token = "0x6000512")]
	[Address(RVA = "0xC1C7D8", Offset = "0xC1C7D8", VA = "0xC1C7D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000513")]
	[Address(RVA = "0xC1C964", Offset = "0xC1C964", VA = "0xC1C964")]
	public BaseLocationLoader()
	{
	}
}
[Token(Token = "0x2000126")]
public class BaseLocationPosition : MonoBehaviour
{
	[Token(Token = "0x6000514")]
	[Address(RVA = "0xC1C96C", Offset = "0xC1C96C", VA = "0xC1C96C")]
	public BaseLocationPosition()
	{
	}
}
[Token(Token = "0x2000127")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x917AEC", Offset = "0x917AEC")]
public class BaseMenu : MonoBehaviour
{
	[Token(Token = "0x2000128")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x917B00", Offset = "0x917B00")]
	private sealed class <Start>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400071C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400071D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000056")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000522")]
			[Address(RVA = "0xBDB8F4", Offset = "0xBDB8F4", VA = "0xBDB8F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000057")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000524")]
			[Address(RVA = "0xBDB93C", Offset = "0xBDB93C", VA = "0xBDB93C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600051F")]
		[Address(RVA = "0xBDB760", Offset = "0xBDB760", VA = "0xBDB760")]
		[DebuggerHidden]
		public <Start>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000520")]
		[Address(RVA = "0xBDB78C", Offset = "0xBDB78C", VA = "0xBDB78C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000521")]
		[Address(RVA = "0xBDB790", Offset = "0xBDB790", VA = "0xBDB790", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000523")]
		[Address(RVA = "0xBDB8FC", Offset = "0xBDB8FC", VA = "0xBDB8FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MissionGenerator missionGenerator;

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public WindowSettings settingsWnd;

	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Location loc;

	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static BaseMenu instance;

	[Token(Token = "0x6000515")]
	[Address(RVA = "0xC1C974", Offset = "0xC1C974", VA = "0xC1C974")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000516")]
	[Address(RVA = "0xC1CD38", Offset = "0xC1CD38", VA = "0xC1CD38")]
	public static void InitInEditor()
	{
	}

	[Token(Token = "0x6000517")]
	[Address(RVA = "0xC1CD3C", Offset = "0xC1CD3C", VA = "0xC1CD3C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x924D8C", Offset = "0x924D8C")]
	public IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000518")]
	[Address(RVA = "0xC1CD98", Offset = "0xC1CD98", VA = "0xC1CD98")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000519")]
	[Address(RVA = "0xC1D1E8", Offset = "0xC1D1E8", VA = "0xC1D1E8")]
	private void OnDeleteSave()
	{
	}

	[Token(Token = "0x600051A")]
	[Address(RVA = "0xC1D334", Offset = "0xC1D334", VA = "0xC1D334")]
	public void Condition_IsTutorialFinished(ShowWhenScriptConditionResult result)
	{
	}

	[Token(Token = "0x600051B")]
	[Address(RVA = "0xC1D1B8", Offset = "0xC1D1B8", VA = "0xC1D1B8")]
	private void OnOpenSettings()
	{
	}

	[Token(Token = "0x600051C")]
	[Address(RVA = "0xC1D350", Offset = "0xC1D350", VA = "0xC1D350")]
	public void OnClickCloseSettings()
	{
	}

	[Token(Token = "0x600051D")]
	[Address(RVA = "0xC1CF00", Offset = "0xC1CF00", VA = "0xC1CF00")]
	public void OnCloseSettings(bool fromClick = false)
	{
	}

	[Token(Token = "0x600051E")]
	[Address(RVA = "0xC1D358", Offset = "0xC1D358", VA = "0xC1D358")]
	public BaseMenu()
	{
	}
}
[Token(Token = "0x2000129")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x917B10", Offset = "0x917B10")]
public class BaseMultiplayer : MonoBehaviour
{
	[Token(Token = "0x400071E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool destroy;

	[Token(Token = "0x6000525")]
	[Address(RVA = "0xC1D360", Offset = "0xC1D360", VA = "0xC1D360")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000526")]
	[Address(RVA = "0xC1D48C", Offset = "0xC1D48C", VA = "0xC1D48C")]
	public BaseMultiplayer()
	{
	}
}
[Token(Token = "0x200012A")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x917B24", Offset = "0x917B24")]
public class BaseSingleplayer : MonoBehaviour
{
	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool destroy;

	[Token(Token = "0x6000527")]
	[Address(RVA = "0xC1D494", Offset = "0xC1D494", VA = "0xC1D494")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000528")]
	[Address(RVA = "0xC1D5C0", Offset = "0xC1D5C0", VA = "0xC1D5C0")]
	public BaseSingleplayer()
	{
	}
}
[Token(Token = "0x200012B")]
public class BaseStructure : MonoBehaviour
{
	[Token(Token = "0x4000720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public eBuilding type;

	[Token(Token = "0x4000721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int[] data;

	[Token(Token = "0x6000529")]
	[Address(RVA = "0xC1D5C8", Offset = "0xC1D5C8", VA = "0xC1D5C8")]
	public void Awake()
	{
	}

	[Token(Token = "0x600052A")]
	[Address(RVA = "0xC1D67C", Offset = "0xC1D67C", VA = "0xC1D67C")]
	public void Start()
	{
	}

	[Token(Token = "0x600052B")]
	[Address(RVA = "0xC1D760", Offset = "0xC1D760", VA = "0xC1D760")]
	public static bool CanDestroy(eBuilding t)
	{
		return default(bool);
	}

	[Token(Token = "0x600052C")]
	[Address(RVA = "0xC1D5CC", Offset = "0xC1D5CC", VA = "0xC1D5CC")]
	public static void Reset()
	{
	}

	[Token(Token = "0x600052D")]
	[Address(RVA = "0xC1D8E4", Offset = "0xC1D8E4", VA = "0xC1D8E4")]
	public BaseStructure()
	{
	}
}
[Serializable]
[Token(Token = "0x200012C")]
public class BArray
{
	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public eBuilding type;

	[Token(Token = "0x4000723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] data;

	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int num;

	[Token(Token = "0x600052E")]
	[Address(RVA = "0xC1A260", Offset = "0xC1A260", VA = "0xC1A260")]
	public void Add(GameObject p)
	{
	}

	[Token(Token = "0x600052F")]
	[Address(RVA = "0xC1A338", Offset = "0xC1A338", VA = "0xC1A338")]
	public void Apply()
	{
	}

	[Token(Token = "0x6000530")]
	[Address(RVA = "0xC1A47C", Offset = "0xC1A47C", VA = "0xC1A47C")]
	public BArray()
	{
	}
}
[Token(Token = "0x200012D")]
public class BaseStructures : MonoBehaviour
{
	[Token(Token = "0x200012E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x917B38", Offset = "0x917B38")]
	private sealed class <Start>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400072C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400072D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000058")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600053A")]
			[Address(RVA = "0xBDBA00", Offset = "0xBDBA00", VA = "0xBDBA00", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000059")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600053C")]
			[Address(RVA = "0xBDBA48", Offset = "0xBDBA48", VA = "0xBDBA48", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000537")]
		[Address(RVA = "0xBDB944", Offset = "0xBDB944", VA = "0xBDB944")]
		[DebuggerHidden]
		public <Start>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000538")]
		[Address(RVA = "0xBDB970", Offset = "0xBDB970", VA = "0xBDB970", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000539")]
		[Address(RVA = "0xBDB974", Offset = "0xBDB974", VA = "0xBDB974", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600053B")]
		[Address(RVA = "0xBDBA08", Offset = "0xBDBA08", VA = "0xBDBA08", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] hangars;

	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] workshops;

	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] tents;

	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] fuelTanks;

	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject[] baloons;

	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject[] AA;

	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static BArray[] data;

	[Token(Token = "0x6000531")]
	[Address(RVA = "0xC1D8EC", Offset = "0xC1D8EC", VA = "0xC1D8EC")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000532")]
	[Address(RVA = "0xC1DA30", Offset = "0xC1DA30", VA = "0xC1DA30")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x924E3C", Offset = "0x924E3C")]
	public IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000533")]
	[Address(RVA = "0xC1D848", Offset = "0xC1D848", VA = "0xC1D848")]
	public static void Add(eBuilding t, GameObject p)
	{
	}

	[Token(Token = "0x6000534")]
	[Address(RVA = "0xC1DA8C", Offset = "0xC1DA8C", VA = "0xC1DA8C")]
	public static void Apply()
	{
	}

	[Token(Token = "0x6000535")]
	[Address(RVA = "0xC1DB2C", Offset = "0xC1DB2C", VA = "0xC1DB2C")]
	public static int GetTotalBuildingsCount(eBuilding t)
	{
		return default(int);
	}

	[Token(Token = "0x6000536")]
	[Address(RVA = "0xC1DBB4", Offset = "0xC1DBB4", VA = "0xC1DBB4")]
	public BaseStructures()
	{
	}
}
[Token(Token = "0x200012F")]
public class BaseVehicle : MonoBehaviour
{
	[Token(Token = "0x2000130")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x917B48", Offset = "0x917B48")]
	private sealed class <Initialize>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BaseVehicle <>4__this;

		[Token(Token = "0x1700005A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000544")]
			[Address(RVA = "0xBDC15C", Offset = "0xBDC15C", VA = "0xBDC15C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000546")]
			[Address(RVA = "0xBDC1A4", Offset = "0xBDC1A4", VA = "0xBDC1A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000541")]
		[Address(RVA = "0xBDBA50", Offset = "0xBDBA50", VA = "0xBDBA50")]
		[DebuggerHidden]
		public <Initialize>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000542")]
		[Address(RVA = "0xBDBA7C", Offset = "0xBDBA7C", VA = "0xBDBA7C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000543")]
		[Address(RVA = "0xBDBA80", Offset = "0xBDBA80", VA = "0xBDBA80", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000545")]
		[Address(RVA = "0xBDC164", Offset = "0xBDC164", VA = "0xBDC164", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public int multiLocationObjectId;

	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public eqType type;

	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Track track;

	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool addFactory;

	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool initialized;

	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MultiplayerSync.SyncState mSync;

	[Token(Token = "0x600053D")]
	[Address(RVA = "0xC1DBBC", Offset = "0xC1DBBC", VA = "0xC1DBBC")]
	public void InitMultiplayerSync()
	{
	}

	[Token(Token = "0x600053E")]
	[Address(RVA = "0xC1DC30", Offset = "0xC1DC30", VA = "0xC1DC30")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x600053F")]
	[Address(RVA = "0xC1DC5C", Offset = "0xC1DC5C", VA = "0xC1DC5C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x924EEC", Offset = "0x924EEC")]
	public IEnumerator Initialize()
	{
		return null;
	}

	[Token(Token = "0x6000540")]
	[Address(RVA = "0xC1DCC8", Offset = "0xC1DCC8", VA = "0xC1DCC8")]
	public BaseVehicle()
	{
	}
}
[Token(Token = "0x2000131")]
public class BlinkIfMedals : MonoBehaviour
{
	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float time;

	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshRenderer _renderer;

	[Token(Token = "0x6000547")]
	[Address(RVA = "0xC224D8", Offset = "0xC224D8", VA = "0xC224D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0xC2252C", Offset = "0xC2252C", VA = "0xC2252C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000549")]
	[Address(RVA = "0xC22628", Offset = "0xC22628", VA = "0xC22628")]
	public BlinkIfMedals()
	{
	}
}
[Token(Token = "0x2000132")]
public class BlockFrontDecal : MonoBehaviour
{
	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool front;

	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool side;

	[Token(Token = "0x600054A")]
	[Address(RVA = "0xC22630", Offset = "0xC22630", VA = "0xC22630")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0xC2277C", Offset = "0xC2277C", VA = "0xC2277C")]
	private void Show(bool b)
	{
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0xC22A98", Offset = "0xC22A98", VA = "0xC22A98")]
	public BlockFrontDecal()
	{
	}
}
[Serializable]
[Token(Token = "0x2000133")]
public class Loadout
{
	[Token(Token = "0x400073B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public eMissile bombType;

	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int bombs;

	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int rockets;

	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject hookObject;

	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] slots;

	[Token(Token = "0x600054D")]
	[Address(RVA = "0x113EBF8", Offset = "0x113EBF8", VA = "0x113EBF8")]
	public Loadout()
	{
	}
}
[Token(Token = "0x2000134")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x917B58", Offset = "0x917B58")]
public class BombBay : MonoBehaviour
{
	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public eMissile bombType;

	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool diveBomber;

	[Token(Token = "0x4000742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int bombs;

	[Token(Token = "0x4000743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float delay;

	[Token(Token = "0x4000744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Loadout[] loadout;

	[Token(Token = "0x4000745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform[] slots;

	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject[] dummies;

	[Token(Token = "0x4000747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float time;

	[Token(Token = "0x4000748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private PlaneBody plane;

	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Hull hull;

	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int loadoutID;

	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int maxBombs;

	[Token(Token = "0x400074C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool skipFirstBombElement;

	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private RocketBay rocketBay;

	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private TorpedoBay torpedoBay;

	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Missile lastDropped;

	[Token(Token = "0x4000750")]
	public const int kExecutionOrder = 346;

	[Token(Token = "0x600054E")]
	[Address(RVA = "0xC22AA0", Offset = "0xC22AA0", VA = "0xC22AA0")]
	private void Start()
	{
	}

	[Token(Token = "0x600054F")]
	[Address(RVA = "0xC22F3C", Offset = "0xC22F3C", VA = "0xC22F3C")]
	public void Reload()
	{
	}

	[Token(Token = "0x6000550")]
	[Address(RVA = "0xC231AC", Offset = "0xC231AC", VA = "0xC231AC")]
	public bool NeedReload()
	{
		return default(bool);
	}

	[Token(Token = "0x6000551")]
	[Address(RVA = "0xC231CC", Offset = "0xC231CC", VA = "0xC231CC")]
	public bool HasMaxBombs()
	{
		return default(bool);
	}

	[Token(Token = "0x6000552")]
	[Address(RVA = "0xC231DC", Offset = "0xC231DC", VA = "0xC231DC")]
	public Missile GetLastDroppedMissile()
	{
		return null;
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0xC231E4", Offset = "0xC231E4", VA = "0xC231E4")]
	public Loadout GetCurrentLoadout()
	{
		return null;
	}

	[Token(Token = "0x6000554")]
	[Address(RVA = "0xC22F48", Offset = "0xC22F48", VA = "0xC22F48")]
	public void LoadBombs(int id)
	{
	}

	[Token(Token = "0x6000555")]
	[Address(RVA = "0xC23240", Offset = "0xC23240", VA = "0xC23240")]
	private void AlterOtherBays()
	{
	}

	[Token(Token = "0x6000556")]
	[Address(RVA = "0xC22B3C", Offset = "0xC22B3C", VA = "0xC22B3C")]
	public void Fill()
	{
	}

	[Token(Token = "0x6000557")]
	[Address(RVA = "0xC233B8", Offset = "0xC233B8", VA = "0xC233B8")]
	public bool HasBombs()
	{
		return default(bool);
	}

	[Token(Token = "0x6000558")]
	[Address(RVA = "0xC233C8", Offset = "0xC233C8", VA = "0xC233C8")]
	public bool DropBombNoAmmo()
	{
		return default(bool);
	}

	[Token(Token = "0x6000559")]
	[Address(RVA = "0xC23CEC", Offset = "0xC23CEC", VA = "0xC23CEC")]
	public bool DropBomb()
	{
		return default(bool);
	}

	[Token(Token = "0x600055A")]
	[Address(RVA = "0xC2356C", Offset = "0xC2356C", VA = "0xC2356C")]
	public bool DropBomb(bool diveMode, bool remote = false, [Optional] Vector3 gunsightProjectedPos)
	{
		return default(bool);
	}

	[Token(Token = "0x600055B")]
	[Address(RVA = "0xC23D04", Offset = "0xC23D04", VA = "0xC23D04")]
	public BombBay()
	{
	}
}
[Token(Token = "0x2000135")]
public enum eBridgeType
{
	[Token(Token = "0x4000752")]
	steelRoad,
	[Token(Token = "0x4000753")]
	steelTrain,
	[Token(Token = "0x4000754")]
	num
}
[Token(Token = "0x2000136")]
public class Bridge : MonoBehaviour
{
	[Token(Token = "0x4000755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject prefab;

	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject prefabEnd;

	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int count;

	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static eParty party;

	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool isObjective;

	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91AB48", Offset = "0x91AB48")]
	private bool <IsDestroyed>k__BackingField;

	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Hull[] hulls;

	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3[] segmentsPosition;

	[Token(Token = "0x400075D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] segmentsWorldPosition;

	[Token(Token = "0x400075E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 holeSize;

	[Token(Token = "0x400075F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 bridgeStart;

	[Token(Token = "0x4000760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 bridgeEnd;

	[Token(Token = "0x4000761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 bridgeDirection;

	[Token(Token = "0x4000762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 bridgeCenter;

	[Token(Token = "0x4000763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float bridgeLength;

	[Token(Token = "0x4000764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float segmentSize;

	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Quaternion bridgeRotation;

	[Token(Token = "0x1700005C")]
	public bool IsDestroyed
	{
		[Token(Token = "0x600055C")]
		[Address(RVA = "0xC24ED8", Offset = "0xC24ED8", VA = "0xC24ED8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x924F9C", Offset = "0x924F9C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600055D")]
		[Address(RVA = "0xC24EE0", Offset = "0xC24EE0", VA = "0xC24EE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x924FAC", Offset = "0x924FAC")]
		private set
		{
		}
	}

	[Token(Token = "0x600055E")]
	[Address(RVA = "0xC24EEC", Offset = "0xC24EEC", VA = "0xC24EEC")]
	public void Generate(Vector3 posS, Vector3 posE)
	{
	}

	[Token(Token = "0x600055F")]
	[Address(RVA = "0xC25AA0", Offset = "0xC25AA0", VA = "0xC25AA0")]
	private Vector3 FindHoleSize(Hull hull)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000560")]
	[Address(RVA = "0xC25B94", Offset = "0xC25B94", VA = "0xC25B94")]
	private void Destroyed(Hull h)
	{
	}

	[Token(Token = "0x6000561")]
	[Address(RVA = "0xC25C04", Offset = "0xC25C04", VA = "0xC25C04")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000562")]
	[Address(RVA = "0xC25ECC", Offset = "0xC25ECC", VA = "0xC25ECC")]
	public int GetNearestSegment(Vector3 pos)
	{
		return default(int);
	}

	[Token(Token = "0x6000563")]
	[Address(RVA = "0xC25FA8", Offset = "0xC25FA8", VA = "0xC25FA8")]
	public Vector3 GetNearestDestroyedSegment(Vector3 pos)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000564")]
	[Address(RVA = "0xC25E7C", Offset = "0xC25E7C", VA = "0xC25E7C")]
	private bool IsPointOnBridge(Vector3 point)
	{
		return default(bool);
	}

	[Token(Token = "0x6000565")]
	[Address(RVA = "0xC26178", Offset = "0xC26178", VA = "0xC26178")]
	public Bridge()
	{
	}
}
[Token(Token = "0x2000137")]
public class BriefingChooseWindow : MonoBehaviour
{
	[Token(Token = "0x4000766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject nextWindow;

	[Token(Token = "0x4000767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject testListButton;

	[Token(Token = "0x4000768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static BriefingChooseWindow instance;

	[Token(Token = "0x6000567")]
	[Address(RVA = "0xC26184", Offset = "0xC26184", VA = "0xC26184")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000568")]
	[Address(RVA = "0xC262D8", Offset = "0xC262D8", VA = "0xC262D8")]
	public static void GenerateMission(eMissionType type, Country country)
	{
	}

	[Token(Token = "0x6000569")]
	[Address(RVA = "0xC263BC", Offset = "0xC263BC", VA = "0xC263BC")]
	public BriefingChooseWindow()
	{
	}
}
[Token(Token = "0x2000138")]
public class BriefingGenerator : MonoBehaviour
{
	[Token(Token = "0x600056A")]
	[Address(RVA = "0xC1CD34", Offset = "0xC1CD34", VA = "0xC1CD34")]
	public static void Init()
	{
	}

	[Token(Token = "0x600056B")]
	[Address(RVA = "0xC263C4", Offset = "0xC263C4", VA = "0xC263C4")]
	public static string GetBriefing()
	{
		return null;
	}

	[Token(Token = "0x600056C")]
	[Address(RVA = "0xC26880", Offset = "0xC26880", VA = "0xC26880")]
	public BriefingGenerator()
	{
	}
}
[Token(Token = "0x2000139")]
public class ButtonStartMission : MonoBehaviour
{
	[Token(Token = "0x4000769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool clicked;

	[Token(Token = "0x600056D")]
	[Address(RVA = "0xC2707C", Offset = "0xC2707C", VA = "0xC2707C")]
	private void Start()
	{
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0xC27084", Offset = "0xC27084", VA = "0xC27084")]
	private void Click()
	{
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0xC27218", Offset = "0xC27218", VA = "0xC27218")]
	public ButtonStartMission()
	{
	}
}
[Token(Token = "0x200013A")]
public class Cloud : MonoBehaviour
{
	[Token(Token = "0x6000570")]
	[Address(RVA = "0x103E0AC", Offset = "0x103E0AC", VA = "0x103E0AC")]
	public Cloud()
	{
	}
}
[Token(Token = "0x200013B")]
public class CloudArea : MonoBehaviour
{
	[Token(Token = "0x200013C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x917B6C", Offset = "0x917B6C")]
	private sealed class <UpdateClouds>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CloudArea <>4__this;

		[Token(Token = "0x1700005D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600057F")]
			[Address(RVA = "0xBDD87C", Offset = "0xBDD87C", VA = "0xBDD87C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000581")]
			[Address(RVA = "0xBDD8C4", Offset = "0xBDD8C4", VA = "0xBDD8C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600057C")]
		[Address(RVA = "0xBDD7BC", Offset = "0xBDD7BC", VA = "0xBDD7BC")]
		[DebuggerHidden]
		public <UpdateClouds>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x600057D")]
		[Address(RVA = "0xBDD7E8", Offset = "0xBDD7E8", VA = "0xBDD7E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600057E")]
		[Address(RVA = "0xBDD7EC", Offset = "0xBDD7EC", VA = "0xBDD7EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000580")]
		[Address(RVA = "0xBDD884", Offset = "0xBDD884", VA = "0xBDD884", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200013D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x917B7C", Offset = "0x917B7C")]
	private sealed class <Sort>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CloudArea <>4__this;

		[Token(Token = "0x4000779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <k>5__2;

		[Token(Token = "0x400077A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <j>5__3;

		[Token(Token = "0x1700005F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000585")]
			[Address(RVA = "0xBDD76C", Offset = "0xBDD76C", VA = "0xBDD76C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000060")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000587")]
			[Address(RVA = "0xBDD7B4", Offset = "0xBDD7B4", VA = "0xBDD7B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000582")]
		[Address(RVA = "0xBDD304", Offset = "0xBDD304", VA = "0xBDD304")]
		[DebuggerHidden]
		public <Sort>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6000583")]
		[Address(RVA = "0xBDD330", Offset = "0xBDD330", VA = "0xBDD330", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000584")]
		[Address(RVA = "0xBDD334", Offset = "0xBDD334", VA = "0xBDD334", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000586")]
		[Address(RVA = "0xBDD774", Offset = "0xBDD774", VA = "0xBDD774", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400076A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Transform sun;

	[Token(Token = "0x400076B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float spread;

	[Token(Token = "0x400076C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private CloudSegment[] segments;

	[Token(Token = "0x400076D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int segmentsCount;

	[Token(Token = "0x400076E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static CloudArea instance;

	[Token(Token = "0x400076F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float time;

	[Token(Token = "0x4000770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool lastSortSuccesful;

	[Token(Token = "0x4000771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool sorting;

	[Token(Token = "0x4000772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Mesh mesh;

	[Token(Token = "0x6000571")]
	[Address(RVA = "0x103E0B4", Offset = "0x103E0B4", VA = "0x103E0B4")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000572")]
	[Address(RVA = "0x103E118", Offset = "0x103E118", VA = "0x103E118")]
	public static void Create(int num)
	{
	}

	[Token(Token = "0x6000573")]
	[Address(RVA = "0x103E27C", Offset = "0x103E27C", VA = "0x103E27C")]
	public static void Hide()
	{
	}

	[Token(Token = "0x6000574")]
	[Address(RVA = "0x103E33C", Offset = "0x103E33C", VA = "0x103E33C")]
	private void CreateInt(int num)
	{
	}

	[Token(Token = "0x6000575")]
	[Address(RVA = "0x103ED44", Offset = "0x103ED44", VA = "0x103ED44")]
	public void Update()
	{
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0x103EDC0", Offset = "0x103EDC0", VA = "0x103EDC0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x924FBC", Offset = "0x924FBC")]
	public IEnumerator UpdateClouds()
	{
		return null;
	}

	[Token(Token = "0x6000577")]
	[Address(RVA = "0x103E6CC", Offset = "0x103E6CC", VA = "0x103E6CC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92501C", Offset = "0x92501C")]
	private IEnumerator Sort()
	{
		return null;
	}

	[Token(Token = "0x6000578")]
	[Address(RVA = "0x103EE2C", Offset = "0x103EE2C", VA = "0x103EE2C")]
	private void Swap(int a, int b)
	{
	}

	[Token(Token = "0x6000579")]
	[Address(RVA = "0x103E738", Offset = "0x103E738", VA = "0x103E738")]
	private void GenerateMesh()
	{
	}

	[Token(Token = "0x600057A")]
	[Address(RVA = "0x103EF10", Offset = "0x103EF10", VA = "0x103EF10")]
	private void UpdateMesh()
	{
	}

	[Token(Token = "0x600057B")]
	[Address(RVA = "0x103F0A4", Offset = "0x103F0A4", VA = "0x103F0A4")]
	public CloudArea()
	{
	}
}
[Serializable]
[Token(Token = "0x200013E")]
public class CloudSegment
{
	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int triangle;

	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float dist;

	[Token(Token = "0x400077D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 offset;

	[Token(Token = "0x400077E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector2 uv;

	[Token(Token = "0x400077F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int uvIndex;

	[Token(Token = "0x6000588")]
	[Address(RVA = "0x103E5D8", Offset = "0x103E5D8", VA = "0x103E5D8")]
	public void Init(int t, Vector3 _offset)
	{
	}

	[Token(Token = "0x6000589")]
	[Address(RVA = "0x1040140", Offset = "0x1040140", VA = "0x1040140")]
	public void CheckH()
	{
	}

	[Token(Token = "0x600058A")]
	[Address(RVA = "0x103E5D0", Offset = "0x103E5D0", VA = "0x103E5D0")]
	public CloudSegment()
	{
	}
}
[Token(Token = "0x200013F")]
public class CloudSystem : MonoBehaviour
{
	[Token(Token = "0x600058C")]
	[Address(RVA = "0x104029C", Offset = "0x104029C", VA = "0x104029C")]
	public CloudSystem()
	{
	}
}
[Token(Token = "0x2000140")]
public class CameraFollow : MonoBehaviour
{
	[Token(Token = "0x4000780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4000781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float zoom;

	[Token(Token = "0x4000782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 dir;

	[Token(Token = "0x4000783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 offset;

	[Token(Token = "0x600058D")]
	[Address(RVA = "0x102F750", Offset = "0x102F750", VA = "0x102F750")]
	public void Start()
	{
	}

	[Token(Token = "0x600058E")]
	[Address(RVA = "0x102F990", Offset = "0x102F990", VA = "0x102F990")]
	public void Update()
	{
	}

	[Token(Token = "0x600058F")]
	[Address(RVA = "0x102F808", Offset = "0x102F808", VA = "0x102F808")]
	public void UpdateDir()
	{
	}

	[Token(Token = "0x6000590")]
	[Address(RVA = "0x102FC68", Offset = "0x102FC68", VA = "0x102FC68")]
	public CameraFollow()
	{
	}
}
[Token(Token = "0x2000141")]
public class CampaignMapHelper : MonoBehaviour
{
	[Token(Token = "0x4000784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x91AB58", Offset = "0x91AB58")]
	private float scale;

	[Token(Token = "0x4000785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Texture2D tex;

	[Token(Token = "0x4000786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Country country;

	[Token(Token = "0x4000787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private bool hideMap;

	[Token(Token = "0x6000591")]
	[Address(RVA = "0x10300F4", Offset = "0x10300F4", VA = "0x10300F4")]
	public CampaignMapHelper()
	{
	}
}
[Token(Token = "0x2000142")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x917B8C", Offset = "0x917B8C")]
public class CampaignTemplate : MonoBehaviour
{
	[Token(Token = "0x4000788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int finishedMissionsToConquerTerritory;

	[Token(Token = "0x4000789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MissionTemplate[] missions;

	[Token(Token = "0x400078A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public bool road;

	[Token(Token = "0x400078B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	[HideInInspector]
	public bool bridge;

	[Token(Token = "0x400078C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	[HideInInspector]
	public bool boats;

	[Token(Token = "0x400078D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	[HideInInspector]
	public bool ships;

	[Token(Token = "0x400078E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[HideInInspector]
	public bool tanks;

	[Token(Token = "0x400078F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	[HideInInspector]
	public bool town;

	[Token(Token = "0x4000790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
	[HideInInspector]
	public bool ourBase;

	[Token(Token = "0x4000791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly List<MissionTemplate>[] templates;

	[Token(Token = "0x6000592")]
	[Address(RVA = "0x1030104", Offset = "0x1030104", VA = "0x1030104")]
	public void Init()
	{
	}

	[Token(Token = "0x6000593")]
	[Address(RVA = "0x1030268", Offset = "0x1030268", VA = "0x1030268")]
	public int GetTotalMissions(eMissionType type)
	{
		return default(int);
	}

	[Token(Token = "0x6000594")]
	[Address(RVA = "0x10302F4", Offset = "0x10302F4", VA = "0x10302F4")]
	public MissionTemplate GetMission(eMissionType type, int i)
	{
		return null;
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0x1030390", Offset = "0x1030390", VA = "0x1030390")]
	public int GetMissionIdx(eMissionType type, MissionTemplate m)
	{
		return default(int);
	}

	[Token(Token = "0x6000596")]
	[Address(RVA = "0x103041C", Offset = "0x103041C", VA = "0x103041C")]
	public bool IsLocationOK(Location l)
	{
		return default(bool);
	}

	[Token(Token = "0x6000597")]
	[Address(RVA = "0x10304B4", Offset = "0x10304B4", VA = "0x10304B4")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000598")]
	[Address(RVA = "0x10304C0", Offset = "0x10304C0", VA = "0x10304C0")]
	public CampaignTemplate()
	{
	}
}
[Token(Token = "0x2000143")]
public class Cannon : MonoBehaviour
{
	[Token(Token = "0x2000144")]
	public delegate void OnShoot();

	[Token(Token = "0x4000792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public eMissile missileType;

	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float shootDelay;

	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int shotsInSeries;

	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int barrelsCount;

	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool shotByShot;

	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform[] barrel;

	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AudioClip playerAudioClip;

	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GunShellEmitter[] shellEmitters;

	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private MultiplePlayingAudio mpa;

	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int barrelIdx;

	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int shots;

	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float time;

	[Token(Token = "0x400079E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private AudioSource audios;

	[Token(Token = "0x400079F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private AudioClip defaultAudioClip;

	[Token(Token = "0x40007A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float audioTime;

	[Token(Token = "0x40007A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float[] audioDurationArray;

	[Token(Token = "0x40007A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float audioDist;

	[Token(Token = "0x40007A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float audioDuration;

	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float audioVolume;

	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private int audioShotIndex;

	[Token(Token = "0x40007A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Hull hull;

	[Token(Token = "0x40007A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private PlaneBody plane;

	[Token(Token = "0x40007A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Transform target;

	[Token(Token = "0x40007A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float temperature;

	[Token(Token = "0x40007AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float[] hideBarrelTime;

	[Token(Token = "0x40007AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float cooldownTime;

	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private List<Material> muzzleMats;

	[Token(Token = "0x40007AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool isDirectional;

	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	private bool awaked;

	[Token(Token = "0x40007AF")]
	private const float kShotDelayMul = 6.6666665f;

	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float damageMul;

	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public OnShoot onShoot;

	[Token(Token = "0x40007B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int[] angle;

	[Token(Token = "0x40007B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private int index;

	[Token(Token = "0x17000061")]
	public int BarrelIndex
	{
		[Token(Token = "0x6000599")]
		[Address(RVA = "0x1030524", Offset = "0x1030524", VA = "0x1030524")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000062")]
	public PlaneBody PlaneBody
	{
		[Token(Token = "0x600059A")]
		[Address(RVA = "0x103052C", Offset = "0x103052C", VA = "0x103052C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600059B")]
	[Address(RVA = "0x1030534", Offset = "0x1030534", VA = "0x1030534")]
	public void Awake()
	{
	}

	[Token(Token = "0x600059C")]
	[Address(RVA = "0x10305BC", Offset = "0x10305BC", VA = "0x10305BC")]
	private void InitOnAwake()
	{
	}

	[Token(Token = "0x600059D")]
	[Address(RVA = "0x1030F3C", Offset = "0x1030F3C", VA = "0x1030F3C")]
	public void MultiCheckAwaked()
	{
	}

	[Token(Token = "0x600059E")]
	[Address(RVA = "0x1030F4C", Offset = "0x1030F4C", VA = "0x1030F4C")]
	public Hull GetHull()
	{
		return null;
	}

	[Token(Token = "0x600059F")]
	[Address(RVA = "0x1030F54", Offset = "0x1030F54", VA = "0x1030F54")]
	public void ParentBarrel(Transform t)
	{
	}

	[Token(Token = "0x60005A0")]
	[Address(RVA = "0x1030FD0", Offset = "0x1030FD0", VA = "0x1030FD0")]
	public float GetTemperature()
	{
		return default(float);
	}

	[Token(Token = "0x60005A1")]
	[Address(RVA = "0x1030FD8", Offset = "0x1030FD8", VA = "0x1030FD8")]
	public void ClearTemperature()
	{
	}

	[Token(Token = "0x60005A2")]
	[Address(RVA = "0x1030FE0", Offset = "0x1030FE0", VA = "0x1030FE0")]
	public void SetIsDirectional(bool dir)
	{
	}

	[Token(Token = "0x60005A3")]
	[Address(RVA = "0x1030FEC", Offset = "0x1030FEC", VA = "0x1030FEC")]
	public bool IsDirectional()
	{
		return default(bool);
	}

	[Token(Token = "0x60005A4")]
	[Address(RVA = "0x1030FF4", Offset = "0x1030FF4", VA = "0x1030FF4")]
	public void CoolDownNow(int i)
	{
	}

	[Token(Token = "0x60005A5")]
	[Address(RVA = "0x103103C", Offset = "0x103103C", VA = "0x103103C")]
	private void CoolDown()
	{
	}

	[Token(Token = "0x60005A6")]
	[Address(RVA = "0x10310C4", Offset = "0x10310C4", VA = "0x10310C4")]
	public float GetNeededCooldownTime()
	{
		return default(float);
	}

	[Token(Token = "0x60005A7")]
	[Address(RVA = "0x10310D8", Offset = "0x10310D8", VA = "0x10310D8")]
	public void Start()
	{
	}

	[Token(Token = "0x60005A8")]
	[Address(RVA = "0x10311D8", Offset = "0x10311D8", VA = "0x10311D8")]
	public void SetPlayerAudioClip(bool isPlayer)
	{
	}

	[Token(Token = "0x60005A9")]
	[Address(RVA = "0x10312BC", Offset = "0x10312BC", VA = "0x10312BC")]
	public void SetTarget(Transform t)
	{
	}

	[Token(Token = "0x60005AA")]
	[Address(RVA = "0x10312C4", Offset = "0x10312C4", VA = "0x10312C4")]
	public bool CanShoot()
	{
		return default(bool);
	}

	[Token(Token = "0x60005AB")]
	[Address(RVA = "0x10312F0", Offset = "0x10312F0", VA = "0x10312F0")]
	public bool Shoot(Vector3 vTarget, bool remote = false, bool remoteTargetIsDir = false)
	{
		return default(bool);
	}

	[Token(Token = "0x60005AC")]
	[Address(RVA = "0x1030C9C", Offset = "0x1030C9C", VA = "0x1030C9C")]
	private void SetupAudio()
	{
	}

	[Token(Token = "0x60005AD")]
	[Address(RVA = "0x1031D54", Offset = "0x1031D54", VA = "0x1031D54")]
	private void CacheAudioDuration()
	{
	}

	[Token(Token = "0x60005AE")]
	[Address(RVA = "0x10321B4", Offset = "0x10321B4", VA = "0x10321B4")]
	private void EnsureAudioShotDelayIntegrity()
	{
	}

	[Token(Token = "0x60005AF")]
	[Address(RVA = "0x1031B2C", Offset = "0x1031B2C", VA = "0x1031B2C")]
	private void ShootAudio()
	{
	}

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0x10321F8", Offset = "0x10321F8", VA = "0x10321F8")]
	private void UpdateAudio()
	{
	}

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0x1032368", Offset = "0x1032368", VA = "0x1032368")]
	public bool ShootBack(Vector3 vTarget, bool remote = false)
	{
		return default(bool);
	}

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0x1032378", Offset = "0x1032378", VA = "0x1032378")]
	public Vector3 GetBarrelDirection()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0x10323C0", Offset = "0x10323C0", VA = "0x10323C0")]
	public Vector3 GetBarrelPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0x1031620", Offset = "0x1031620", VA = "0x1031620")]
	private void SingleShoot(Vector3 vTarget, bool remote, bool remoteTargetIsDir)
	{
	}

	[Token(Token = "0x60005B5")]
	[Address(RVA = "0x10326A8", Offset = "0x10326A8", VA = "0x10326A8")]
	public void Update()
	{
	}

	[Token(Token = "0x60005B6")]
	[Address(RVA = "0x1032578", Offset = "0x1032578", VA = "0x1032578")]
	private void AnimateMuzzle()
	{
	}

	[Token(Token = "0x60005B7")]
	[Address(RVA = "0x1032408", Offset = "0x1032408", VA = "0x1032408")]
	private void RotateMuzzles()
	{
	}

	[Token(Token = "0x60005B8")]
	[Address(RVA = "0x10328B4", Offset = "0x10328B4", VA = "0x10328B4")]
	public Cannon()
	{
	}

	[Token(Token = "0x60005BA")]
	[Address(RVA = "0x1032080", Offset = "0x1032080", VA = "0x1032080")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92511C", Offset = "0x92511C")]
	internal static float <CacheAudioDuration>g__ParseDuration|55_0(string strDuration)
	{
		return default(float);
	}

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0x10327A8", Offset = "0x10327A8", VA = "0x10327A8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92512C", Offset = "0x92512C")]
	private void <RotateMuzzles>g__Rotate|67_0(Transform b)
	{
	}
}
[Token(Token = "0x2000145")]
public class Cannon20mm : MonoBehaviour
{
	[Token(Token = "0x2000146")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x917BA0", Offset = "0x917BA0")]
	private sealed class <SingleShoot>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Cannon20mm <>4__this;

		[Token(Token = "0x40007C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool remoteTargetIsDir;

		[Token(Token = "0x40007C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 vTarget;

		[Token(Token = "0x40007C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool remote;

		[Token(Token = "0x17000063")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005D0")]
			[Address(RVA = "0xBDCC9C", Offset = "0xBDCC9C", VA = "0xBDCC9C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000064")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005D2")]
			[Address(RVA = "0xBDCCE4", Offset = "0xBDCCE4", VA = "0xBDCCE4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005CD")]
		[Address(RVA = "0xBDC8A8", Offset = "0xBDC8A8", VA = "0xBDC8A8")]
		[DebuggerHidden]
		public <SingleShoot>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x60005CE")]
		[Address(RVA = "0xBDC8D4", Offset = "0xBDC8D4", VA = "0xBDC8D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005CF")]
		[Address(RVA = "0xBDC8D8", Offset = "0xBDC8D8", VA = "0xBDC8D8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005D1")]
		[Address(RVA = "0xBDCCA4", Offset = "0xBDCCA4", VA = "0xBDCCA4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public eMissile missileType;

	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float shootDelay;

	[Token(Token = "0x40007B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int ammo;

	[Token(Token = "0x40007B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int barrelsCount;

	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int caliber;

	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform barrel;

	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float time;

	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Hull hull;

	[Token(Token = "0x40007BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private PlaneBody plane;

	[Token(Token = "0x40007BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform target;

	[Token(Token = "0x40007BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int maxAmmo;

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0x10329E4", Offset = "0x10329E4", VA = "0x10329E4")]
	public void Awake()
	{
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0x1032BD0", Offset = "0x1032BD0", VA = "0x1032BD0")]
	public void Reload()
	{
	}

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0x1032BDC", Offset = "0x1032BDC", VA = "0x1032BDC")]
	public bool NeedReload()
	{
		return default(bool);
	}

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0x1032BFC", Offset = "0x1032BFC", VA = "0x1032BFC")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x60005C4")]
	[Address(RVA = "0x1032C9C", Offset = "0x1032C9C", VA = "0x1032C9C")]
	public void ParentBarrel(Transform t)
	{
	}

	[Token(Token = "0x60005C5")]
	[Address(RVA = "0x1032D40", Offset = "0x1032D40", VA = "0x1032D40")]
	public bool HasAmmo()
	{
		return default(bool);
	}

	[Token(Token = "0x60005C6")]
	[Address(RVA = "0x1032D50", Offset = "0x1032D50", VA = "0x1032D50")]
	public void SetTarget(Transform t)
	{
	}

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0x1032D58", Offset = "0x1032D58", VA = "0x1032D58")]
	public bool Shoot()
	{
		return default(bool);
	}

	[Token(Token = "0x60005C8")]
	[Address(RVA = "0x1032D74", Offset = "0x1032D74", VA = "0x1032D74")]
	public bool Shoot(Vector3 vTarget, bool remote = false, bool remoteTargetIsDir = false)
	{
		return default(bool);
	}

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0x103308C", Offset = "0x103308C", VA = "0x103308C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92513C", Offset = "0x92513C")]
	public IEnumerator SingleShoot(Vector3 vTarget, bool remote, bool remoteTargetIsDir)
	{
		return null;
	}

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0x103313C", Offset = "0x103313C", VA = "0x103313C")]
	public bool IsDirectional()
	{
		return default(bool);
	}

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0x1033144", Offset = "0x1033144", VA = "0x1033144")]
	public Vector3 GetBarrelDirection()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0x10331D8", Offset = "0x10331D8", VA = "0x10331D8")]
	public Cannon20mm()
	{
	}
}
[Token(Token = "0x2000147")]
public class CannonAI : MonoBehaviour
{
	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float lastFlakTime;

	[Token(Token = "0x40007C6")]
	private const float kFindTargetDelay = 1.1f;

	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform turret;

	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform barrel;

	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Cannon cannon;

	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool parentCannonBarrel;

	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Hull target;

	[Token(Token = "0x40007CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Hull targetFlak;

	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float hitRange;

	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float bulletSpreadFactor;

	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float targetDotForwardShootThreshold;

	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float rSpeed;

	[Token(Token = "0x40007D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float maxElevation;

	[Token(Token = "0x40007D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Vector2 limitTurretAngle;

	[Token(Token = "0x40007D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public bool flak;

	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
	public bool airTargets;

	[Token(Token = "0x40007D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6E")]
	public bool groundTargets;

	[Token(Token = "0x40007D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6F")]
	public bool buildingOrShip;

	[Token(Token = "0x40007D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool moveBarrel;

	[Token(Token = "0x40007D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	public bool frontOnly;

	[Token(Token = "0x40007D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
	public bool upOnly;

	[Token(Token = "0x40007DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x73")]
	public bool allowPlayerMove;

	[Token(Token = "0x40007DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float yaw;

	[Token(Token = "0x40007DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float elevation;

	[Token(Token = "0x40007DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float bulletSpread;

	[Token(Token = "0x40007DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Hull hull;

	[Token(Token = "0x40007DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private PlaneBody plane;

	[Token(Token = "0x40007E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int aiCannonIdx;

	[Token(Token = "0x40007E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private int gunnerIdx;

	[Token(Token = "0x40007E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float findTargetDelay;

	[Token(Token = "0x40007E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private VRMachinegun vrmg;

	[Token(Token = "0x40007E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private PlayerPilot pPilot;

	[Token(Token = "0x40007E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private quaternion multiCannonTurretY;

	[Token(Token = "0x40007E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private quaternion multiCannonBarrelX;

	[Token(Token = "0x40007E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool animateMultiCannon;

	[Token(Token = "0x40007E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
	private bool isAnyOfPlayerPlanes;

	[Token(Token = "0x40007E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD2")]
	private bool awaked;

	[Token(Token = "0x40007EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD3")]
	public bool isPlane;

	[Token(Token = "0x40007EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private Quaternion turretBaseRot;

	[Token(Token = "0x40007EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private Quaternion barrelBaseRot;

	[Token(Token = "0x60005D3")]
	[Address(RVA = "0x10331FC", Offset = "0x10331FC", VA = "0x10331FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005D4")]
	[Address(RVA = "0x1033698", Offset = "0x1033698", VA = "0x1033698")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60005D5")]
	[Address(RVA = "0x1033200", Offset = "0x1033200", VA = "0x1033200")]
	private void InitOnAwake()
	{
	}

	[Token(Token = "0x60005D6")]
	[Address(RVA = "0x103378C", Offset = "0x103378C", VA = "0x103378C")]
	public void MultiCheckAwaked()
	{
	}

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0x103379C", Offset = "0x103379C", VA = "0x103379C")]
	public int GetAICannonIdx()
	{
		return default(int);
	}

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0x10337A4", Offset = "0x10337A4", VA = "0x10337A4")]
	public void SetGunnerIdx(int gidx)
	{
	}

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0x1033898", Offset = "0x1033898", VA = "0x1033898")]
	public int GetGunnerIdx()
	{
		return default(int);
	}

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0x10338A0", Offset = "0x10338A0", VA = "0x10338A0")]
	public VRMachinegun GetVRMachineGun()
	{
		return null;
	}

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0x10338A8", Offset = "0x10338A8", VA = "0x10338A8")]
	public PlayerPilot GetPlayerPilot()
	{
		return null;
	}

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0x10338B0", Offset = "0x10338B0", VA = "0x10338B0")]
	public void SetRotations(Vector3 turrentEulers, Vector3 barrelEulers)
	{
	}

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0x1033914", Offset = "0x1033914", VA = "0x1033914")]
	public void MultiSetTargetRadians(float cannonTurretY, float cannonBarrelX)
	{
	}

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0x1033AA0", Offset = "0x1033AA0", VA = "0x1033AA0")]
	private void Start()
	{
	}

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0x1033ED0", Offset = "0x1033ED0", VA = "0x1033ED0")]
	public void FindTarget()
	{
	}

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0x1034270", Offset = "0x1034270", VA = "0x1034270")]
	private bool IsControllerByPlayer()
	{
		return default(bool);
	}

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0x10342EC", Offset = "0x10342EC", VA = "0x10342EC")]
	private bool IsControllerByPlayer(out bool byGunner)
	{
		return default(bool);
	}

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0x1034380", Offset = "0x1034380", VA = "0x1034380")]
	public bool UpdateFlak()
	{
		return default(bool);
	}

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0x1034854", Offset = "0x1034854", VA = "0x1034854")]
	private void AnimMultiCannon()
	{
	}

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0x1034BD4", Offset = "0x1034BD4", VA = "0x1034BD4")]
	public void Process()
	{
	}

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0x1034D0C", Offset = "0x1034D0C", VA = "0x1034D0C")]
	private void AttackTarget()
	{
	}

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0x1035128", Offset = "0x1035128", VA = "0x1035128")]
	private void ZeroPosition()
	{
	}

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0x1035188", Offset = "0x1035188", VA = "0x1035188")]
	private void MoveParts(float3 dir)
	{
	}

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0x10354F8", Offset = "0x10354F8", VA = "0x10354F8")]
	public CannonAI()
	{
	}
}
[Token(Token = "0x2000148")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x917BB0", Offset = "0x917BB0")]
public class CannonAISystem : MonoBehaviour
{
	[Token(Token = "0x40007ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int flakHitDist;

	[Token(Token = "0x40007EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static CannonAISystem instance;

	[Token(Token = "0x40007EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly List<CannonAI> cannons;

	[Token(Token = "0x40007F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float time;

	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float lastFlakTime;

	[Token(Token = "0x40007F2")]
	private const float kFlakDelay = 0.4f;

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0x10355A8", Offset = "0x10355A8", VA = "0x10355A8")]
	private static void Init()
	{
	}

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0x1033C80", Offset = "0x1033C80", VA = "0x1033C80")]
	public static void Register(CannonAI cannon)
	{
	}

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0x10336F8", Offset = "0x10336F8", VA = "0x10336F8")]
	public static void Unregister(CannonAI cannon)
	{
	}

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0x103567C", Offset = "0x103567C", VA = "0x103567C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0x10356E4", Offset = "0x10356E4", VA = "0x10356E4")]
	private void Update()
	{
	}

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0x10359F0", Offset = "0x10359F0", VA = "0x10359F0")]
	private void UpdateFlaks()
	{
	}

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0x1035C00", Offset = "0x1035C00", VA = "0x1035C00")]
	public CannonAISystem()
	{
	}
}
[Token(Token = "0x2000149")]
public class Career
{
	[Token(Token = "0x200014A")]
	public enum Skill
	{
		[Token(Token = "0x40007F6")]
		cheaperPlanes,
		[Token(Token = "0x40007F7")]
		cheaperUpgrades,
		[Token(Token = "0x40007F8")]
		cheaperTraining,
		[Token(Token = "0x40007F9")]
		missionGold,
		[Token(Token = "0x40007FA")]
		primaryGold,
		[Token(Token = "0x40007FB")]
		secondaryGold,
		[Token(Token = "0x40007FC")]
		maxUpgrade,
		[Token(Token = "0x40007FD")]
		squadronSize,
		[Token(Token = "0x40007FE")]
		num
	}

	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int[] skills;

	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly int[] skillPercent;

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0x10360B8", Offset = "0x10360B8", VA = "0x10360B8")]
	public static int GetMedalsCount()
	{
		return default(int);
	}

	[Token(Token = "0x60005F2")]
	[Address(RVA = "0x10361D0", Offset = "0x10361D0", VA = "0x10361D0")]
	public static int MissionsToGetMedal()
	{
		return default(int);
	}

	[Token(Token = "0x60005F3")]
	[Address(RVA = "0x1036270", Offset = "0x1036270", VA = "0x1036270")]
	public static bool ApplySkill(Skill skill)
	{
		return default(bool);
	}

	[Token(Token = "0x60005F4")]
	[Address(RVA = "0x1036360", Offset = "0x1036360", VA = "0x1036360")]
	public static int GetSkill(Skill skill)
	{
		return default(int);
	}

	[Token(Token = "0x60005F5")]
	[Address(RVA = "0x103647C", Offset = "0x103647C", VA = "0x103647C")]
	public static int GetMaxUpgrade()
	{
		return default(int);
	}

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0x10364E0", Offset = "0x10364E0", VA = "0x10364E0")]
	public static int GetSquadronSize()
	{
		return default(int);
	}

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0x10365C0", Offset = "0x10365C0", VA = "0x10365C0")]
	public static string GetValue(Skill skill)
	{
		return null;
	}

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0x10366D8", Offset = "0x10366D8", VA = "0x10366D8")]
	public static float GetMul(Skill skill)
	{
		return default(float);
	}

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0x1036788", Offset = "0x1036788", VA = "0x1036788")]
	public static void Reset()
	{
	}

	[Token(Token = "0x60005FA")]
	[Address(RVA = "0x10367E0", Offset = "0x10367E0", VA = "0x10367E0")]
	public static void Init()
	{
	}

	[Token(Token = "0x60005FB")]
	[Address(RVA = "0x103691C", Offset = "0x103691C", VA = "0x103691C")]
	public static string GetSaveString()
	{
		return null;
	}

	[Token(Token = "0x60005FC")]
	[Address(RVA = "0x1036ACC", Offset = "0x1036ACC", VA = "0x1036ACC")]
	public static void LoadFromString(string s)
	{
	}

	[Token(Token = "0x60005FD")]
	[Address(RVA = "0x1036C30", Offset = "0x1036C30", VA = "0x1036C30")]
	public Career()
	{
	}
}
[Token(Token = "0x200014B")]
public class CarrierShip : MonoBehaviour
{
	[Token(Token = "0x200014C")]
	private enum PlaneState
	{
		[Token(Token = "0x4000823")]
		None,
		[Token(Token = "0x4000824")]
		Parked,
		[Token(Token = "0x4000825")]
		Parking,
		[Token(Token = "0x4000826")]
		Landing,
		[Token(Token = "0x4000827")]
		LandToTaxing,
		[Token(Token = "0x4000828")]
		TaxingToParking,
		[Token(Token = "0x4000829")]
		ParkingToTaxing,
		[Token(Token = "0x400082A")]
		Takeoff
	}

	[Serializable]
	[Token(Token = "0x200014D")]
	private class ApproachingPlane
	{
		[Token(Token = "0x400082B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform parkingSlot;

		[Token(Token = "0x400082C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x400082D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlaneState state;

		[Token(Token = "0x400082E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 targetPos;

		[Token(Token = "0x400082F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float speed;

		[Token(Token = "0x4000830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly PlaneStand stand;

		[Token(Token = "0x4000831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly PlaneBody plane;

		[Token(Token = "0x4000832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly AIPilot controller;

		[Token(Token = "0x4000833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public readonly BezierCurve curve;

		[Token(Token = "0x4000834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float step;

		[Token(Token = "0x4000835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float stepThreshold;

		[Token(Token = "0x17000065")]
		public float LandingProgress
		{
			[Token(Token = "0x600062D")]
			[Address(RVA = "0xBDCE64", Offset = "0xBDCE64", VA = "0xBDCE64")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000628")]
		[Address(RVA = "0xBDCCF4", Offset = "0xBDCCF4", VA = "0xBDCCF4")]
		public ApproachingPlane(PlaneBody pb)
		{
		}

		[Token(Token = "0x6000629")]
		[Address(RVA = "0xBDCDBC", Offset = "0xBDCDBC", VA = "0xBDCDBC")]
		public void CurveUpdated()
		{
		}

		[Token(Token = "0x600062A")]
		[Address(RVA = "0xBDCE1C", Offset = "0xBDCE1C", VA = "0xBDCE1C")]
		public Vector3 Move()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600062B")]
		[Address(RVA = "0xBDCE34", Offset = "0xBDCE34", VA = "0xBDCE34")]
		public Vector3 GetPoint()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600062C")]
		[Address(RVA = "0xBDCE58", Offset = "0xBDCE58", VA = "0xBDCE58")]
		public void SetState(PlaneState state)
		{
		}
	}

	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private PhysicMaterial physicsRagdollMaterial;

	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform planeDistributionGroup;

	[Token(Token = "0x4000801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform landingPointRear;

	[Token(Token = "0x4000802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform landingPointFront;

	[Token(Token = "0x4000803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public BezierCurveMono editorCurve;

	[Token(Token = "0x4000804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject[] prefabs;

	[Token(Token = "0x4000805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int totalTasksPlanes;

	[Token(Token = "0x4000806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool takeoff;

	[Token(Token = "0x4000807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	public bool landing;

	[Token(Token = "0x4000808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<CarrierShip> carrierShips;

	[Token(Token = "0x4000809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private List<ApproachingPlane> approachingPlanes;

	[Token(Token = "0x400080A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private PlaneBody[] planes;

	[Token(Token = "0x400080B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GameObject[] planesGO;

	[Token(Token = "0x400080C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private PlaneBody[] usedSlots;

	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private PlaneBody startingPlane;

	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ApproachingPlane landingPlane;

	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Transform startingPlaneTransform;

	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Transform landingPlaneTransform;

	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Quaternion startingPlaneStandRot;

	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Quaternion landingPlaneStandRot;

	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Quaternion startingPlaneBaseRot;

	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Quaternion landingPlaneBaseRot;

	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Quaternion startingDirection;

	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Quaternion landingDirection;

	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private float takeoffStep;

	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private bool takeoffOnrunway;

	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private float slotToCenter;

	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private int cacheAvailablePlanes;

	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private int cachedEmptySlots;

	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private bool isLanding;

	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private eParty party;

	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private MultiplayerSync.SyncState mSync;

	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private readonly Quaternion quat180Y;

	[Token(Token = "0x4000820")]
	private const float taxingSpeed = 6f;

	[Token(Token = "0x4000821")]
	private const float kMinimalLandingDistance = 300f;

	[Token(Token = "0x60005FF")]
	[Address(RVA = "0x1036CC8", Offset = "0x1036CC8", VA = "0x1036CC8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000600")]
	[Address(RVA = "0x1036D3C", Offset = "0x1036D3C", VA = "0x1036D3C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000601")]
	[Address(RVA = "0x1037648", Offset = "0x1037648", VA = "0x1037648")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000602")]
	[Address(RVA = "0x103772C", Offset = "0x103772C", VA = "0x103772C")]
	private void CarrierDestroyed(Hull h)
	{
	}

	[Token(Token = "0x6000603")]
	[Address(RVA = "0x1037A84", Offset = "0x1037A84", VA = "0x1037A84")]
	private void ToggleRagdoll(GameObject go, PlaneBody pb)
	{
	}

	[Token(Token = "0x6000604")]
	[Address(RVA = "0x1037060", Offset = "0x1037060", VA = "0x1037060")]
	private void Prepare()
	{
	}

	[Token(Token = "0x6000605")]
	[Address(RVA = "0x1037144", Offset = "0x1037144", VA = "0x1037144")]
	private List<GameObject> GetMissionPlanes(out int totalTaskPlanes)
	{
		return null;
	}

	[Token(Token = "0x6000606")]
	[Address(RVA = "0x1037FE4", Offset = "0x1037FE4", VA = "0x1037FE4")]
	private List<GameObject> GetPlanesFromSquadronAny(out int totalTaskPlanes)
	{
		return null;
	}

	[Token(Token = "0x6000607")]
	[Address(RVA = "0x10381B8", Offset = "0x10381B8", VA = "0x10381B8")]
	private int CalculatePlaneCount(int totalTasksPlanes)
	{
		return default(int);
	}

	[Token(Token = "0x6000608")]
	[Address(RVA = "0x10373A0", Offset = "0x10373A0", VA = "0x10373A0")]
	private void PlacePlanes(List<GameObject> prefabs, int totalTasksPlanes)
	{
	}

	[Token(Token = "0x6000609")]
	[Address(RVA = "0x1038240", Offset = "0x1038240", VA = "0x1038240")]
	private void CreatePlane(GameObject prefab, Transform slot, out GameObject go, out PlaneBody pb)
	{
	}

	[Token(Token = "0x600060A")]
	[Address(RVA = "0x10385E0", Offset = "0x10385E0", VA = "0x10385E0")]
	private void EmptySlot(PlaneBody pb)
	{
	}

	[Token(Token = "0x600060B")]
	[Address(RVA = "0x10386E0", Offset = "0x10386E0", VA = "0x10386E0")]
	private int FindEmptySlot()
	{
		return default(int);
	}

	[Token(Token = "0x600060C")]
	[Address(RVA = "0x10387C8", Offset = "0x10387C8", VA = "0x10387C8")]
	private void LerpPlaneToStand(PlaneBody pb, float t)
	{
	}

	[Token(Token = "0x600060D")]
	[Address(RVA = "0x10384B8", Offset = "0x10384B8", VA = "0x10384B8")]
	private void LerpPlaneToStand(GameObject go, PlaneBody pb, PlaneStand stand, float t)
	{
	}

	[Token(Token = "0x600060E")]
	[Address(RVA = "0x103884C", Offset = "0x103884C", VA = "0x103884C")]
	private void SetupTakeoff(PlaneBody pb)
	{
	}

	[Token(Token = "0x600060F")]
	[Address(RVA = "0x10389F0", Offset = "0x10389F0", VA = "0x10389F0")]
	private PlaneBody GetAvailablePlane()
	{
		return null;
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0x1038AEC", Offset = "0x1038AEC", VA = "0x1038AEC")]
	private void KeepPlanesAliveCheck()
	{
	}

	[Token(Token = "0x6000611")]
	[Address(RVA = "0x1038BCC", Offset = "0x1038BCC", VA = "0x1038BCC")]
	private void ProceedTakeoff()
	{
	}

	[Token(Token = "0x6000612")]
	[Address(RVA = "0x1038ED8", Offset = "0x1038ED8", VA = "0x1038ED8")]
	private void TakeoffTaxing()
	{
	}

	[Token(Token = "0x6000613")]
	[Address(RVA = "0x1038BDC", Offset = "0x1038BDC", VA = "0x1038BDC")]
	private void TakeoffRunway()
	{
	}

	[Token(Token = "0x6000614")]
	[Address(RVA = "0x10391E0", Offset = "0x10391E0", VA = "0x10391E0")]
	private void PrepareToLand(ApproachingPlane p)
	{
	}

	[Token(Token = "0x6000615")]
	[Address(RVA = "0x10393D8", Offset = "0x10393D8", VA = "0x10393D8")]
	private void ProceedLanding()
	{
	}

	[Token(Token = "0x6000616")]
	[Address(RVA = "0x1039510", Offset = "0x1039510", VA = "0x1039510")]
	private void ProceedFinalParking()
	{
	}

	[Token(Token = "0x6000617")]
	[Address(RVA = "0x1039418", Offset = "0x1039418", VA = "0x1039418")]
	private void ProceedRunwayToParking()
	{
	}

	[Token(Token = "0x6000618")]
	[Address(RVA = "0x1039758", Offset = "0x1039758", VA = "0x1039758")]
	private void ProceedLandingToTaxing()
	{
	}

	[Token(Token = "0x6000619")]
	[Address(RVA = "0x1039DB0", Offset = "0x1039DB0", VA = "0x1039DB0")]
	private void ProcessApproachingPlanes()
	{
	}

	[Token(Token = "0x600061A")]
	[Address(RVA = "0x103A070", Offset = "0x103A070", VA = "0x103A070")]
	public bool HandleApproachingPlane(PlaneBody pb)
	{
		return default(bool);
	}

	[Token(Token = "0x600061B")]
	[Address(RVA = "0x1039F04", Offset = "0x1039F04", VA = "0x1039F04")]
	private void StepApproachingPlane(ApproachingPlane p)
	{
	}

	[Token(Token = "0x600061C")]
	[Address(RVA = "0x1039C1C", Offset = "0x1039C1C", VA = "0x1039C1C")]
	private void ExchangePlane(PlaneBody landed)
	{
	}

	[Token(Token = "0x600061D")]
	[Address(RVA = "0x103A324", Offset = "0x103A324", VA = "0x103A324")]
	private void CalculateLandingPath(ApproachingPlane target)
	{
	}

	[Token(Token = "0x600061E")]
	[Address(RVA = "0x103A7B0", Offset = "0x103A7B0", VA = "0x103A7B0")]
	private Transform FindLandingPoint(ApproachingPlane target, out float dot)
	{
		return null;
	}

	[Token(Token = "0x600061F")]
	[Address(RVA = "0x103A964", Offset = "0x103A964", VA = "0x103A964")]
	private Transform FindLandingPoint(Transform target, out float dot)
	{
		return null;
	}

	[Token(Token = "0x6000620")]
	[Address(RVA = "0x10390D8", Offset = "0x10390D8", VA = "0x10390D8")]
	private void RemovePlane(PlaneBody pb)
	{
	}

	[Token(Token = "0x6000621")]
	[Address(RVA = "0x103AAF0", Offset = "0x103AAF0", VA = "0x103AAF0")]
	private bool CanHandleApproachingPlane()
	{
		return default(bool);
	}

	[Token(Token = "0x6000622")]
	[Address(RVA = "0x103A90C", Offset = "0x103A90C", VA = "0x103A90C")]
	private static Vector2 FindIntersection(Vector2 s1, Vector2 e1, Vector2 s2, Vector2 e2)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000623")]
	[Address(RVA = "0x103ABA4", Offset = "0x103ABA4", VA = "0x103ABA4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000624")]
	[Address(RVA = "0x103AC90", Offset = "0x103AC90", VA = "0x103AC90")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000625")]
	[Address(RVA = "0x103ADA0", Offset = "0x103ADA0", VA = "0x103ADA0")]
	public static bool RequestLanding(PlaneBody pb, Hull hull)
	{
		return default(bool);
	}

	[Token(Token = "0x6000626")]
	[Address(RVA = "0x103B074", Offset = "0x103B074", VA = "0x103B074")]
	public CarrierShip()
	{
	}
}
[Token(Token = "0x200014E")]
public class CashCounter : MonoBehaviour
{
	[Token(Token = "0x4000836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int cash;

	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool showText;

	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string text;

	[Token(Token = "0x600062E")]
	[Address(RVA = "0x103B660", Offset = "0x103B660", VA = "0x103B660")]
	public void Start()
	{
	}

	[Token(Token = "0x600062F")]
	[Address(RVA = "0x103B870", Offset = "0x103B870", VA = "0x103B870")]
	public void Update()
	{
	}

	[Token(Token = "0x6000630")]
	[Address(RVA = "0x103B70C", Offset = "0x103B70C", VA = "0x103B70C")]
	public void Print()
	{
	}

	[Token(Token = "0x6000631")]
	[Address(RVA = "0x103B938", Offset = "0x103B938", VA = "0x103B938")]
	public static string GetFormattedValue(int val)
	{
		return null;
	}

	[Token(Token = "0x6000632")]
	[Address(RVA = "0x103BA50", Offset = "0x103BA50", VA = "0x103BA50")]
	public CashCounter()
	{
	}
}
[Token(Token = "0x200014F")]
public class ChangeMaterial : MonoBehaviour
{
	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public eNation nation;

	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer[] renderers;

	[Token(Token = "0x400083B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int id;

	[Token(Token = "0x400083C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private PlayerPlane pp;

	[Token(Token = "0x400083D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Material material;

	[Token(Token = "0x400083E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool initialized;

	[Token(Token = "0x400083F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool custom;

	[Token(Token = "0x4000840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int[] col;

	[Token(Token = "0x6000633")]
	[Address(RVA = "0x103C8F0", Offset = "0x103C8F0", VA = "0x103C8F0")]
	public void Start()
	{
	}

	[Token(Token = "0x6000634")]
	[Address(RVA = "0x103C970", Offset = "0x103C970", VA = "0x103C970")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000635")]
	[Address(RVA = "0x103C974", Offset = "0x103C974", VA = "0x103C974")]
	private int GetValidId()
	{
		return default(int);
	}

	[Token(Token = "0x6000636")]
	[Address(RVA = "0x103C930", Offset = "0x103C930", VA = "0x103C930")]
	public void CreateDefaultTexture(ref Material m, int size = 0)
	{
	}

	[Token(Token = "0x6000637")]
	[Address(RVA = "0x103CA94", Offset = "0x103CA94", VA = "0x103CA94")]
	private void CreateTexture(int cid, ref Material m, int size = 0)
	{
	}

	[Token(Token = "0x6000638")]
	[Address(RVA = "0x103CBC8", Offset = "0x103CBC8", VA = "0x103CBC8")]
	public void LoadDefaultTexture()
	{
	}

	[Token(Token = "0x6000639")]
	[Address(RVA = "0x103CC48", Offset = "0x103CC48", VA = "0x103CC48")]
	public void SetColorID(int newID, int decalResolution = 0)
	{
	}

	[Token(Token = "0x600063A")]
	[Address(RVA = "0x103CC70", Offset = "0x103CC70", VA = "0x103CC70")]
	public void SetColorID(int newID, ref Material m, int decalResolution = 0)
	{
	}

	[Token(Token = "0x600063B")]
	[Address(RVA = "0x103CC90", Offset = "0x103CC90", VA = "0x103CC90")]
	public void SetColorSetup(PlaneColorSetup s, int decalResolution = 0)
	{
	}

	[Token(Token = "0x600063C")]
	[Address(RVA = "0x103CE54", Offset = "0x103CE54", VA = "0x103CE54")]
	public void SetColorSetup(Material material)
	{
	}

	[Token(Token = "0x600063D")]
	[Address(RVA = "0x103C9EC", Offset = "0x103C9EC", VA = "0x103C9EC")]
	public static int GetNationColor(eNation nation)
	{
		return default(int);
	}

	[Token(Token = "0x600063E")]
	[Address(RVA = "0x103D010", Offset = "0x103D010", VA = "0x103D010")]
	public static int GetNationColor(eNation nation, string planePrefab)
	{
		return default(int);
	}

	[Token(Token = "0x600063F")]
	[Address(RVA = "0x103CF40", Offset = "0x103CF40", VA = "0x103CF40")]
	public static int GetNationAreaColor(eNation nation, int lType)
	{
		return default(int);
	}

	[Token(Token = "0x6000640")]
	[Address(RVA = "0x103D070", Offset = "0x103D070", VA = "0x103D070")]
	public static int GetNationAreaColorNoRand(eNation nation, int lType)
	{
		return default(int);
	}

	[Token(Token = "0x6000641")]
	[Address(RVA = "0x103D128", Offset = "0x103D128", VA = "0x103D128")]
	public ChangeMaterial()
	{
	}
}
[Token(Token = "0x2000150")]
public class ChangeParentParent : MonoBehaviour
{
	[Token(Token = "0x2000151")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x917BC4", Offset = "0x917BC4")]
	private sealed class <StartYielded>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ChangeParentParent <>4__this;

		[Token(Token = "0x17000066")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000649")]
			[Address(RVA = "0xBDD024", Offset = "0xBDD024", VA = "0xBDD024", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000067")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600064B")]
			[Address(RVA = "0xBDD06C", Offset = "0xBDD06C", VA = "0xBDD06C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000646")]
		[Address(RVA = "0xBDCE74", Offset = "0xBDCE74", VA = "0xBDCE74")]
		[DebuggerHidden]
		public <StartYielded>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000647")]
		[Address(RVA = "0xBDCEA0", Offset = "0xBDCEA0", VA = "0xBDCEA0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000648")]
		[Address(RVA = "0xBDCEA4", Offset = "0xBDCEA4", VA = "0xBDCEA4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600064A")]
		[Address(RVA = "0xBDD02C", Offset = "0xBDD02C", VA = "0xBDD02C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject parentObject;

	[Token(Token = "0x4000842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float delay;

	[Token(Token = "0x4000843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform parentOfParent;

	[Token(Token = "0x4000844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool destroy;

	[Token(Token = "0x6000643")]
	[Address(RVA = "0x103D1C8", Offset = "0x103D1C8", VA = "0x103D1C8")]
	public void Start()
	{
	}

	[Token(Token = "0x6000644")]
	[Address(RVA = "0x103D1F4", Offset = "0x103D1F4", VA = "0x103D1F4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9251EC", Offset = "0x9251EC")]
	private IEnumerator StartYielded()
	{
		return null;
	}

	[Token(Token = "0x6000645")]
	[Address(RVA = "0x103D260", Offset = "0x103D260", VA = "0x103D260")]
	public ChangeParentParent()
	{
	}
}
[Token(Token = "0x2000152")]
public class ChangeParentPosition : MonoBehaviour
{
	[Token(Token = "0x2000153")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x917BD4", Offset = "0x917BD4")]
	private sealed class <StartYielded>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400084A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400084B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400084C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ChangeParentPosition <>4__this;

		[Token(Token = "0x17000068")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000652")]
			[Address(RVA = "0xBDD2B4", Offset = "0xBDD2B4", VA = "0xBDD2B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000069")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000654")]
			[Address(RVA = "0xBDD2FC", Offset = "0xBDD2FC", VA = "0xBDD2FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600064F")]
		[Address(RVA = "0xBDD074", Offset = "0xBDD074", VA = "0xBDD074")]
		[DebuggerHidden]
		public <StartYielded>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000650")]
		[Address(RVA = "0xBDD0A0", Offset = "0xBDD0A0", VA = "0xBDD0A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000651")]
		[Address(RVA = "0xBDD0A4", Offset = "0xBDD0A4", VA = "0xBDD0A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000653")]
		[Address(RVA = "0xBDD2BC", Offset = "0xBDD2BC", VA = "0xBDD2BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject parentObject;

	[Token(Token = "0x4000849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float delay;

	[Token(Token = "0x600064C")]
	[Address(RVA = "0x103D270", Offset = "0x103D270", VA = "0x103D270")]
	public void Start()
	{
	}

	[Token(Token = "0x600064D")]
	[Address(RVA = "0x103D29C", Offset = "0x103D29C", VA = "0x103D29C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92529C", Offset = "0x92529C")]
	private IEnumerator StartYielded()
	{
		return null;
	}

	[Token(Token = "0x600064E")]
	[Address(RVA = "0x103D308", Offset = "0x103D308", VA = "0x103D308")]
	public ChangeParentPosition()
	{
	}
}
[Token(Token = "0x2000154")]
public class Cirrus : MonoBehaviour
{
	[Token(Token = "0x6000655")]
	[Address(RVA = "0x103DECC", Offset = "0x103DECC", VA = "0x103DECC")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000656")]
	[Address(RVA = "0x103DFB8", Offset = "0x103DFB8", VA = "0x103DFB8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000657")]
	[Address(RVA = "0x103DFBC", Offset = "0x103DFBC", VA = "0x103DFBC")]
	public Cirrus()
	{
	}
}
[Serializable]
[Token(Token = "0x2000155")]
public class CloudSave_Game : CloudSave_GameInterface
{
	[Token(Token = "0x400084D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string gameID;

	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string gameVersion;

	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string gameplaySaveName;

	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	protected bool showConflictMessage;

	[Token(Token = "0x6000658")]
	[Address(RVA = "0x103F0B8", Offset = "0x103F0B8", VA = "0x103F0B8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000659")]
	[Address(RVA = "0x103F294", Offset = "0x103F294", VA = "0x103F294")]
	public static void Initialize(string cloudAutoAccountID)
	{
	}

	[Token(Token = "0x600065A")]
	[Address(RVA = "0x103F410", Offset = "0x103F410", VA = "0x103F410")]
	public static bool IsCloudEnabled()
	{
		return default(bool);
	}

	[Token(Token = "0x600065B")]
	[Address(RVA = "0x103F418", Offset = "0x103F418", VA = "0x103F418", Slot = "5")]
	public override string GetTextsLanguageID()
	{
		return null;
	}

	[Token(Token = "0x600065C")]
	[Address(RVA = "0x103F474", Offset = "0x103F474", VA = "0x103F474", Slot = "6")]
	public override string TranslateText(string trl)
	{
		return null;
	}

	[Token(Token = "0x600065D")]
	[Address(RVA = "0x103F5BC", Offset = "0x103F5BC", VA = "0x103F5BC", Slot = "7")]
	public override string GetGameID()
	{
		return null;
	}

	[Token(Token = "0x600065E")]
	[Address(RVA = "0x103F620", Offset = "0x103F620", VA = "0x103F620", Slot = "8")]
	public override string GetGameVersion()
	{
		return null;
	}

	[Token(Token = "0x600065F")]
	[Address(RVA = "0x103F684", Offset = "0x103F684", VA = "0x103F684", Slot = "9")]
	public override void BackToMainMenuScene()
	{
	}

	[Token(Token = "0x6000660")]
	[Address(RVA = "0x103F850", Offset = "0x103F850", VA = "0x103F850", Slot = "18")]
	public override GameObject GetCloudStatusLineObject()
	{
		return null;
	}

	[Token(Token = "0x6000661")]
	[Address(RVA = "0x103F964", Offset = "0x103F964", VA = "0x103F964", Slot = "17")]
	public override bool CanSendChangedLocalSaveInCurrentLevel()
	{
		return default(bool);
	}

	[Token(Token = "0x6000662")]
	[Address(RVA = "0x103F96C", Offset = "0x103F96C", VA = "0x103F96C", Slot = "19")]
	public override bool ShowCloudSavesConflictMessageBox()
	{
		return default(bool);
	}

	[Token(Token = "0x6000663")]
	[Address(RVA = "0x103F980", Offset = "0x103F980", VA = "0x103F980", Slot = "20")]
	public override bool ClearCloudSavesConflictMessageBox()
	{
		return default(bool);
	}

	[Token(Token = "0x6000664")]
	[Address(RVA = "0x103FB54", Offset = "0x103FB54", VA = "0x103FB54", Slot = "21")]
	public override void PlaySound(SoundType sndType)
	{
	}

	[Token(Token = "0x6000665")]
	[Address(RVA = "0x103FBCC", Offset = "0x103FBCC", VA = "0x103FBCC", Slot = "22")]
	public override void OnShowCloudScreens()
	{
	}

	[Token(Token = "0x6000666")]
	[Address(RVA = "0x103FBD0", Offset = "0x103FBD0", VA = "0x103FBD0", Slot = "10")]
	public override uint GetSaveCloudUserId()
	{
		return default(uint);
	}

	[Token(Token = "0x6000667")]
	[Address(RVA = "0x103FC2C", Offset = "0x103FC2C", VA = "0x103FC2C", Slot = "11")]
	public override CloudSave_Saves ExportGameSaves()
	{
		return null;
	}

	[Token(Token = "0x6000668")]
	[Address(RVA = "0x103FC88", Offset = "0x103FC88", VA = "0x103FC88", Slot = "12")]
	public override void ImportGameSave(CloudSave_Saves saves)
	{
	}

	[Token(Token = "0x6000669")]
	[Address(RVA = "0x103FCEC", Offset = "0x103FCEC", VA = "0x103FCEC", Slot = "13")]
	public override void DeleteLocalSaveOnRegister()
	{
	}

	[Token(Token = "0x600066A")]
	[Address(RVA = "0x103FD48", Offset = "0x103FD48", VA = "0x103FD48", Slot = "14")]
	public override string GetSavePreviewLabels()
	{
		return null;
	}

	[Token(Token = "0x600066B")]
	[Address(RVA = "0x103FDA4", Offset = "0x103FDA4", VA = "0x103FDA4", Slot = "15")]
	public override string GetSavePreview(CloudSave_Saves saves)
	{
		return null;
	}

	[Token(Token = "0x600066C")]
	[Address(RVA = "0x103FE08", Offset = "0x103FE08", VA = "0x103FE08", Slot = "16")]
	public override CompareSaveResult CompareSave(CloudSave_Saves save1, CloudSave_Saves save2)
	{
		return default(CompareSaveResult);
	}

	[Token(Token = "0x600066D")]
	[Address(RVA = "0x103FF90", Offset = "0x103FF90", VA = "0x103FF90", Slot = "23")]
	public override bool HaveSaveForPromoCode()
	{
		return default(bool);
	}

	[Token(Token = "0x600066E")]
	[Address(RVA = "0x103FFEC", Offset = "0x103FFEC", VA = "0x103FFEC", Slot = "24")]
	public override string GetPromoCodeSkuName(string sku)
	{
		return null;
	}

	[Token(Token = "0x600066F")]
	[Address(RVA = "0x1040030", Offset = "0x1040030", VA = "0x1040030", Slot = "25")]
	public override void OnUsePromoCode(string sku)
	{
	}

	[Token(Token = "0x6000670")]
	[Address(RVA = "0x1040034", Offset = "0x1040034", VA = "0x1040034")]
	public CloudSave_Game()
	{
	}
}
[Token(Token = "0x2000156")]
public enum ePaintType
{
	[Token(Token = "0x4000852")]
	colorP1,
	[Token(Token = "0x4000853")]
	colorP2
}
[Token(Token = "0x2000157")]
public class ColorButton : MonoBehaviour
{
	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Renderer colorR;

	[Token(Token = "0x4000855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer textureR;

	[Token(Token = "0x4000856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Renderer decalR;

	[Token(Token = "0x4000857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Renderer planeR;

	[Token(Token = "0x4000858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject planeBkg;

	[Token(Token = "0x4000859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject padlock;

	[Token(Token = "0x400085A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Renderer lockedIcon;

	[Token(Token = "0x400085B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Renderer color;

	[Token(Token = "0x400085C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Color currColor;

	[Token(Token = "0x400085D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int decal;

	[Token(Token = "0x400085E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private string textureName;

	[Token(Token = "0x400085F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int requiredMultiLevel;

	[Token(Token = "0x4000860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private GameObject requiredInfo;

	[Token(Token = "0x4000861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private TextMesh requiredInfoText;

	[Token(Token = "0x6000672")]
	[Address(RVA = "0x1040540", Offset = "0x1040540", VA = "0x1040540")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000673")]
	[Address(RVA = "0x1040630", Offset = "0x1040630", VA = "0x1040630")]
	public void SetPaintColor(Color c)
	{
	}

	[Token(Token = "0x6000674")]
	[Address(RVA = "0x10406B8", Offset = "0x10406B8", VA = "0x10406B8")]
	public void SetTextureName(string tn)
	{
	}

	[Token(Token = "0x6000675")]
	[Address(RVA = "0x10406C0", Offset = "0x10406C0", VA = "0x10406C0")]
	public void SetDecal(int d)
	{
	}

	[Token(Token = "0x6000676")]
	[Address(RVA = "0x1040940", Offset = "0x1040940", VA = "0x1040940")]
	public void SetLocked(int reqMultiLevel, GameObject reqInfo, TextMesh reqInfoText)
	{
	}

	[Token(Token = "0x6000677")]
	[Address(RVA = "0x1040A98", Offset = "0x1040A98", VA = "0x1040A98")]
	public void Click()
	{
	}

	[Token(Token = "0x6000678")]
	[Address(RVA = "0x1040EBC", Offset = "0x1040EBC", VA = "0x1040EBC")]
	public ColorButton()
	{
	}
}
[Token(Token = "0x2000158")]
public class ColorSchemeButton : MonoBehaviour
{
	[Token(Token = "0x4000862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int type;

	[Token(Token = "0x6000679")]
	[Address(RVA = "0x104121C", Offset = "0x104121C", VA = "0x104121C")]
	private void Start()
	{
	}

	[Token(Token = "0x600067A")]
	[Address(RVA = "0x1041220", Offset = "0x1041220", VA = "0x1041220")]
	private void Click()
	{
	}

	[Token(Token = "0x600067B")]
	[Address(RVA = "0x10413C8", Offset = "0x10413C8", VA = "0x10413C8")]
	public ColorSchemeButton()
	{
	}
}
[Token(Token = "0x2000159")]
public class ColorTypePick : MonoBehaviour
{
	[Token(Token = "0x4000863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public eColorSetup type;

	[Token(Token = "0x4000864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer color;

	[Token(Token = "0x4000865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ColorTypePick instance;

	[Token(Token = "0x600067C")]
	[Address(RVA = "0x10413D0", Offset = "0x10413D0", VA = "0x10413D0")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x600067D")]
	[Address(RVA = "0x1041590", Offset = "0x1041590", VA = "0x1041590")]
	public void Click()
	{
	}

	[Token(Token = "0x600067E")]
	[Address(RVA = "0x10413D4", Offset = "0x10413D4", VA = "0x10413D4")]
	public void SetColor()
	{
	}

	[Token(Token = "0x600067F")]
	[Address(RVA = "0x1040E1C", Offset = "0x1040E1C", VA = "0x1040E1C")]
	public static void SetDecal(int decal)
	{
	}

	[Token(Token = "0x6000680")]
	[Address(RVA = "0x1040E20", Offset = "0x1040E20", VA = "0x1040E20")]
	public static void SetColor(Color c)
	{
	}

	[Token(Token = "0x6000681")]
	[Address(RVA = "0x10415EC", Offset = "0x10415EC", VA = "0x10415EC")]
	public ColorTypePick()
	{
	}
}
[Token(Token = "0x200015A")]
public class ColorsList : MonoBehaviour
{
	[Token(Token = "0x4000866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color[] colors;

	[Token(Token = "0x4000867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color[] colorsB;

	[Token(Token = "0x4000868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject buttonsSelector1;

	[Token(Token = "0x4000869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject buttonsSelector2;

	[Token(Token = "0x400086A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject openSelectSchemesButton;

	[Token(Token = "0x400086B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ColorsList instance;

	[Token(Token = "0x400086C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int res;

	[Token(Token = "0x400086D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Color[] fullList;

	[Token(Token = "0x6000682")]
	[Address(RVA = "0x10415F4", Offset = "0x10415F4", VA = "0x10415F4")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000683")]
	[Address(RVA = "0x10417CC", Offset = "0x10417CC", VA = "0x10417CC")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000684")]
	[Address(RVA = "0x1041828", Offset = "0x1041828", VA = "0x1041828")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000685")]
	[Address(RVA = "0x1041760", Offset = "0x1041760", VA = "0x1041760")]
	public void SetColorsAlpha(int alpha)
	{
	}

	[Token(Token = "0x6000686")]
	[Address(RVA = "0x10418F0", Offset = "0x10418F0", VA = "0x10418F0")]
	public void SetColorsBrightness(int change)
	{
	}

	[Token(Token = "0x6000687")]
	[Address(RVA = "0x1041A84", Offset = "0x1041A84", VA = "0x1041A84")]
	public static Color[] GetList()
	{
		return null;
	}

	[Token(Token = "0x6000688")]
	[Address(RVA = "0x1041AF4", Offset = "0x1041AF4", VA = "0x1041AF4")]
	private void OnPickButtonSelection(GameObject selected)
	{
	}

	[Token(Token = "0x6000689")]
	[Address(RVA = "0x1041AF8", Offset = "0x1041AF8", VA = "0x1041AF8")]
	private void OnOpenSchemesSelection()
	{
	}

	[Token(Token = "0x600068A")]
	[Address(RVA = "0x1041AFC", Offset = "0x1041AFC", VA = "0x1041AFC")]
	private void OnCloseColorsList()
	{
	}

	[Token(Token = "0x600068B")]
	[Address(RVA = "0x1041B80", Offset = "0x1041B80", VA = "0x1041B80")]
	public ColorsList()
	{
	}
}
[Token(Token = "0x200015B")]
public class ControllerInput : MonoBehaviour
{
	[Token(Token = "0x200015C")]
	public enum eAction
	{
		[Token(Token = "0x4000886")]
		none,
		[Token(Token = "0x4000887")]
		FlyHorizontal,
		[Token(Token = "0x4000888")]
		FlyVertical,
		[Token(Token = "0x4000889")]
		Rudder,
		[Token(Token = "0x400088A")]
		RudderZero,
		[Token(Token = "0x400088B")]
		Throttle,
		[Token(Token = "0x400088C")]
		ThrottleZero,
		[Token(Token = "0x400088D")]
		LandingGear,
		[Token(Token = "0x400088E")]
		FlapsSwitch,
		[Token(Token = "0x400088F")]
		FlapsPosition,
		[Token(Token = "0x4000890")]
		Aim,
		[Token(Token = "0x4000891")]
		Shoot,
		[Token(Token = "0x4000892")]
		ChangeArmament,
		[Token(Token = "0x4000893")]
		LaunchRocketTorpedoBomb,
		[Token(Token = "0x4000894")]
		NextPlane,
		[Token(Token = "0x4000895")]
		NextSeat,
		[Token(Token = "0x4000896")]
		Pause,
		[Token(Token = "0x4000897")]
		Menu,
		[Token(Token = "0x4000898")]
		HelpBook,
		[Token(Token = "0x4000899")]
		HelpBookNext,
		[Token(Token = "0x400089A")]
		RadioOnOff,
		[Token(Token = "0x400089B")]
		RadioMute,
		[Token(Token = "0x400089C")]
		RadioTeam,
		[Token(Token = "0x400089D")]
		BombMode,
		[Token(Token = "0x400089E")]
		UI_Action_OK,
		[Token(Token = "0x400089F")]
		UI_Action_Cancel,
		[Token(Token = "0x40008A0")]
		MoveInBaseLeftRight,
		[Token(Token = "0x40008A1")]
		MoveInBaseForwardBack,
		[Token(Token = "0x40008A2")]
		TurnInBase,
		[Token(Token = "0x40008A3")]
		UIScrollUpDown
	}

	[Serializable]
	[Token(Token = "0x200015D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x917BE4", Offset = "0x917BE4")]
	private sealed class <>c
	{
		[Token(Token = "0x40008A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40008A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static ControllerInputAccumulator.ActivateExternalInput <>9__29_0;

		[Token(Token = "0x40008A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static ControllerInputAccumulator.ExternalInputRead <>9__29_1;

		[Token(Token = "0x40008A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static ControllerInputAccumulator.ActivateExternalInput <>9__29_2;

		[Token(Token = "0x40008A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static ControllerInputAccumulator.ExternalInputRead <>9__29_3;

		[Token(Token = "0x60006E7")]
		[Address(RVA = "0xBE4E38", Offset = "0xBE4E38", VA = "0xBE4E38")]
		public <>c()
		{
		}

		[Token(Token = "0x60006E8")]
		[Address(RVA = "0xBE4E40", Offset = "0xBE4E40", VA = "0xBE4E40")]
		internal bool <SetupAccumulators>b__29_0()
		{
			return default(bool);
		}

		[Token(Token = "0x60006E9")]
		[Address(RVA = "0xBE4F8C", Offset = "0xBE4F8C", VA = "0xBE4F8C")]
		internal float <SetupAccumulators>b__29_1()
		{
			return default(float);
		}

		[Token(Token = "0x60006EA")]
		[Address(RVA = "0xBE5034", Offset = "0xBE5034", VA = "0xBE5034")]
		internal bool <SetupAccumulators>b__29_2()
		{
			return default(bool);
		}

		[Token(Token = "0x60006EB")]
		[Address(RVA = "0xBE5090", Offset = "0xBE5090", VA = "0xBE5090")]
		internal float <SetupAccumulators>b__29_3()
		{
			return default(float);
		}
	}

	[Token(Token = "0x200015E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x917BF4", Offset = "0x917BF4")]
	private sealed class <StartYielded>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ControllerInput <>4__this;

		[Token(Token = "0x1700006A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006EF")]
			[Address(RVA = "0xBE55A8", Offset = "0xBE55A8", VA = "0xBE55A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006F1")]
			[Address(RVA = "0xBE55F0", Offset = "0xBE55F0", VA = "0xBE55F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006EC")]
		[Address(RVA = "0xBE5138", Offset = "0xBE5138", VA = "0xBE5138")]
		[DebuggerHidden]
		public <StartYielded>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x60006ED")]
		[Address(RVA = "0xBE5164", Offset = "0xBE5164", VA = "0xBE5164", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006EE")]
		[Address(RVA = "0xBE5168", Offset = "0xBE5168", VA = "0xBE5168", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006F0")]
		[Address(RVA = "0xBE55B0", Offset = "0xBE55B0", VA = "0xBE55B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400086E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string[] eActionString;

	[Token(Token = "0x400086F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static eAction[] XRButtonToAction;

	[Token(Token = "0x4000870")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static eAction[] XRAxis1DToAction;

	[Token(Token = "0x4000871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static eAction[][] XRAxis2DToAction;

	[Token(Token = "0x4000872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static ControllerInputAccumulator.Accumulator[] joystickAccumulators;

	[Token(Token = "0x4000873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static string[] disableVRcontrollers;

	[Token(Token = "0x4000874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static string[] standardGamepadNames;

	[Token(Token = "0x4000875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RewiredStandaloneInputModule inputModule;

	[Token(Token = "0x4000876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static float hitVibrationLevel;

	[Token(Token = "0x4000877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private static float hitVibrationTime;

	[Token(Token = "0x4000878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static ControllerInput instance;

	[Token(Token = "0x4000879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rewired.Player rplayer;

	[Token(Token = "0x400087A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ControlMapper controlMapper;

	[Token(Token = "0x400087B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private LanguageData langDataOrg;

	[Token(Token = "0x400087C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool startedDelayed;

	[Token(Token = "0x400087D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Action callbackAfterClosed;

	[Token(Token = "0x400087E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool checkJoysticksChanged;

	[Token(Token = "0x400087F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float ignoreInputUntilTime;

	[Token(Token = "0x4000880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool joystickRudderThrottleTheSameAxis;

	[Token(Token = "0x4000881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static float getShootTime;

	[Token(Token = "0x4000882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private static float getAimTime;

	[Token(Token = "0x4000884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static float dumpedRrudder;

	[Token(Token = "0x14000002")]
	public static event Action JoysticksChanged
	{
		[Token(Token = "0x600068D")]
		[Address(RVA = "0x1017A94", Offset = "0x1017A94", VA = "0x1017A94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92534C", Offset = "0x92534C")]
		add
		{
		}
		[Token(Token = "0x600068E")]
		[Address(RVA = "0x1017B8C", Offset = "0x1017B8C", VA = "0x1017B8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92535C", Offset = "0x92535C")]
		remove
		{
		}
	}

	[Token(Token = "0x600068F")]
	[Address(RVA = "0x1017C84", Offset = "0x1017C84", VA = "0x1017C84")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000690")]
	[Address(RVA = "0x1017DFC", Offset = "0x1017DFC", VA = "0x1017DFC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000691")]
	[Address(RVA = "0x1017ED4", Offset = "0x1017ED4", VA = "0x1017ED4")]
	private static void CheckCreateFromPrefab()
	{
	}

	[Token(Token = "0x6000692")]
	[Address(RVA = "0x1017FD0", Offset = "0x1017FD0", VA = "0x1017FD0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000693")]
	[Address(RVA = "0x101806C", Offset = "0x101806C", VA = "0x101806C")]
	private void SetupAccumulators()
	{
	}

	[Token(Token = "0x6000694")]
	[Address(RVA = "0x1018000", Offset = "0x1018000", VA = "0x1018000")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92536C", Offset = "0x92536C")]
	private IEnumerator StartYielded()
	{
		return null;
	}

	[Token(Token = "0x6000695")]
	[Address(RVA = "0x10183FC", Offset = "0x10183FC", VA = "0x10183FC")]
	public static bool IsCreated()
	{
		return default(bool);
	}

	[Token(Token = "0x6000696")]
	[Address(RVA = "0x10184E4", Offset = "0x10184E4", VA = "0x10184E4")]
	public static void OnChangedLanguage()
	{
	}

	[Token(Token = "0x6000697")]
	[Address(RVA = "0x1019094", Offset = "0x1019094", VA = "0x1019094")]
	public static bool IsControlsSetupAvailable()
	{
		return default(bool);
	}

	[Token(Token = "0x6000698")]
	[Address(RVA = "0x101914C", Offset = "0x101914C", VA = "0x101914C")]
	public static int GetJoysticksCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000699")]
	[Address(RVA = "0x1019200", Offset = "0x1019200", VA = "0x1019200")]
	public static bool HaveStandardGamepadJoystick()
	{
		return default(bool);
	}

	[Token(Token = "0x600069A")]
	[Address(RVA = "0x10196C8", Offset = "0x10196C8", VA = "0x10196C8")]
	public static void OpenControlsSetup(GameObject pivot, Action callbackAfterClosed)
	{
	}

	[Token(Token = "0x600069B")]
	[Address(RVA = "0x1019A64", Offset = "0x1019A64", VA = "0x1019A64")]
	public static void CloseControlsSetup()
	{
	}

	[Token(Token = "0x600069C")]
	[Address(RVA = "0x1019C24", Offset = "0x1019C24", VA = "0x1019C24")]
	public static bool RaycastControlMapper(Ray ray, out GameObject go, out Vector3 pos, out Vector3 normal)
	{
		return default(bool);
	}

	[Token(Token = "0x600069D")]
	[Address(RVA = "0x1019E2C", Offset = "0x1019E2C", VA = "0x1019E2C")]
	public static void ClickControlMapper(GameObject go, Vector3 pos)
	{
	}

	[Token(Token = "0x600069E")]
	[Address(RVA = "0x101A02C", Offset = "0x101A02C", VA = "0x101A02C")]
	protected void onControlMapperScreenClosed()
	{
	}

	[Token(Token = "0x600069F")]
	[Address(RVA = "0x101A8D4", Offset = "0x101A8D4", VA = "0x101A8D4")]
	protected void OnPlaneChanged(PlaneBody pb)
	{
	}

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0x101AA74", Offset = "0x101AA74", VA = "0x101AA74")]
	protected void OnControllerConnected(ControllerStatusChangedEventArgs args)
	{
	}

	[Token(Token = "0x60006A1")]
	[Address(RVA = "0x101AAE4", Offset = "0x101AAE4", VA = "0x101AAE4")]
	protected void OnControllerDisconnected(ControllerStatusChangedEventArgs args)
	{
	}

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0x101AB1C", Offset = "0x101AB1C", VA = "0x101AB1C")]
	protected void OnControllerAdded(ControllerAssignmentChangedEventArgs args)
	{
	}

	[Token(Token = "0x60006A3")]
	[Address(RVA = "0x101AB54", Offset = "0x101AB54", VA = "0x101AB54")]
	protected void OnControllerRemoved(ControllerAssignmentChangedEventArgs args)
	{
	}

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0x101AAAC", Offset = "0x101AAAC", VA = "0x101AAAC")]
	private void SetCheckJoysticksChanged()
	{
	}

	[Token(Token = "0x60006A5")]
	[Address(RVA = "0x101AB8C", Offset = "0x101AB8C", VA = "0x101AB8C")]
	private static bool IsIgnoreInputNow()
	{
		return default(bool);
	}

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0x101A118", Offset = "0x101A118", VA = "0x101A118")]
	private void CheckControlsSetup()
	{
	}

	[Token(Token = "0x60006A7")]
	[Address(RVA = "0x101AC88", Offset = "0x101AC88", VA = "0x101AC88")]
	private void Update()
	{
	}

	[Token(Token = "0x60006A8")]
	[Address(RVA = "0x101BD44", Offset = "0x101BD44", VA = "0x101BD44")]
	private static bool InsideDeadzone(float x, float y)
	{
		return default(bool);
	}

	[Token(Token = "0x60006A9")]
	[Address(RVA = "0x101BE04", Offset = "0x101BE04", VA = "0x101BE04")]
	private static bool InsideDeadzone(float x)
	{
		return default(bool);
	}

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0x101BE24", Offset = "0x101BE24", VA = "0x101BE24")]
	public static Vector2 GetFlyVector()
	{
		return default(Vector2);
	}

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0x101BE88", Offset = "0x101BE88", VA = "0x101BE88")]
	public static Vector2 GetFlyVector(out bool joystickSource)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0x101C2B4", Offset = "0x101C2B4", VA = "0x101C2B4")]
	public static void UpdateRudder()
	{
	}

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0x101C658", Offset = "0x101C658", VA = "0x101C658")]
	public static float GetRudder()
	{
		return default(float);
	}

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0x101C620", Offset = "0x101C620", VA = "0x101C620")]
	public static float DeadzoneCorrection(float v, float margin = 0.25f)
	{
		return default(float);
	}

	[Token(Token = "0x60006AF")]
	[Address(RVA = "0x101C728", Offset = "0x101C728", VA = "0x101C728")]
	public static float GetThrottle()
	{
		return default(float);
	}

	[Token(Token = "0x60006B0")]
	[Address(RVA = "0x101C78C", Offset = "0x101C78C", VA = "0x101C78C")]
	public static float GetThrottle(out bool joystickSource)
	{
		return default(float);
	}

	[Token(Token = "0x60006B1")]
	[Address(RVA = "0x101C940", Offset = "0x101C940", VA = "0x101C940")]
	public static float GetFlaps()
	{
		return default(float);
	}

	[Token(Token = "0x60006B2")]
	[Address(RVA = "0x101C9A4", Offset = "0x101C9A4", VA = "0x101C9A4")]
	public static float GetFlaps(out bool joystickSource)
	{
		return default(float);
	}

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0x101CA08", Offset = "0x101CA08", VA = "0x101CA08")]
	public static void SetFlaps(float val)
	{
	}

	[Token(Token = "0x60006B4")]
	[Address(RVA = "0x101C7F0", Offset = "0x101C7F0", VA = "0x101C7F0")]
	private static float GetAccumulatorValue(eAction action, out bool joystickSource)
	{
		return default(float);
	}

	[Token(Token = "0x60006B5")]
	[Address(RVA = "0x101CA74", Offset = "0x101CA74", VA = "0x101CA74")]
	private static void ResetAccumulatorValue(eAction action, float val)
	{
	}

	[Token(Token = "0x60006B6")]
	[Address(RVA = "0x101CB74", Offset = "0x101CB74", VA = "0x101CB74")]
	public static Vector2 GetMoveInBaseVector()
	{
		return default(Vector2);
	}

	[Token(Token = "0x60006B7")]
	[Address(RVA = "0x101CE2C", Offset = "0x101CE2C", VA = "0x101CE2C")]
	public static float GetTurnInBaseDirection()
	{
		return default(float);
	}

	[Token(Token = "0x60006B8")]
	[Address(RVA = "0x101CFD8", Offset = "0x101CFD8", VA = "0x101CFD8")]
	public static Vector2 GetGunMountRotation()
	{
		return default(Vector2);
	}

	[Token(Token = "0x60006B9")]
	[Address(RVA = "0x101C5B8", Offset = "0x101C5B8", VA = "0x101C5B8")]
	public static HandType GetDefaultLeft()
	{
		return default(HandType);
	}

	[Token(Token = "0x60006BA")]
	[Address(RVA = "0x101C248", Offset = "0x101C248", VA = "0x101C248")]
	public static HandType GetDefaultRight()
	{
		return default(HandType);
	}

	[Token(Token = "0x60006BB")]
	[Address(RVA = "0x101D17C", Offset = "0x101D17C", VA = "0x101D17C")]
	public static bool GetAction(eAction action, bool down, bool checkOpenControlMapper = true)
	{
		return default(bool);
	}

	[Token(Token = "0x60006BC")]
	[Address(RVA = "0x101D880", Offset = "0x101D880", VA = "0x101D880")]
	public static bool GetActionHold(eAction action, bool checkOpenControlMapper = true)
	{
		return default(bool);
	}

	[Token(Token = "0x60006BD")]
	[Address(RVA = "0x101D8F4", Offset = "0x101D8F4", VA = "0x101D8F4")]
	public static bool GetActionDown(eAction action, bool checkOpenControlMapper = true)
	{
		return default(bool);
	}

	[Token(Token = "0x60006BE")]
	[Address(RVA = "0x101D968", Offset = "0x101D968", VA = "0x101D968")]
	public static float GetAxisDelta(eAction action)
	{
		return default(float);
	}

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0x101DA5C", Offset = "0x101DA5C", VA = "0x101DA5C")]
	public static bool GetAxis(eAction action, out float val, out bool isAxis)
	{
		return default(bool);
	}

	[Token(Token = "0x60006C0")]
	[Address(RVA = "0x101DF84", Offset = "0x101DF84", VA = "0x101DF84")]
	public static bool GetAim()
	{
		return default(bool);
	}

	[Token(Token = "0x60006C1")]
	[Address(RVA = "0x101E350", Offset = "0x101E350", VA = "0x101E350")]
	public static bool GetShoot()
	{
		return default(bool);
	}

	[Token(Token = "0x60006C2")]
	[Address(RVA = "0x101E6F8", Offset = "0x101E6F8", VA = "0x101E6F8")]
	public static bool GetChangeArmament()
	{
		return default(bool);
	}

	[Token(Token = "0x60006C3")]
	[Address(RVA = "0x101E758", Offset = "0x101E758", VA = "0x101E758")]
	public static bool GetLandingGear()
	{
		return default(bool);
	}

	[Token(Token = "0x60006C4")]
	[Address(RVA = "0x101E7B8", Offset = "0x101E7B8", VA = "0x101E7B8")]
	public static bool GetLaunchRocketTorpedoBomb()
	{
		return default(bool);
	}

	[Token(Token = "0x60006C5")]
	[Address(RVA = "0x101E818", Offset = "0x101E818", VA = "0x101E818")]
	public static bool GetNextSeat()
	{
		return default(bool);
	}

	[Token(Token = "0x60006C6")]
	[Address(RVA = "0x101E878", Offset = "0x101E878", VA = "0x101E878")]
	public static bool GetPrevSeat()
	{
		return default(bool);
	}

	[Token(Token = "0x60006C7")]
	[Address(RVA = "0x101E880", Offset = "0x101E880", VA = "0x101E880")]
	public static bool GetNextPlane()
	{
		return default(bool);
	}

	[Token(Token = "0x60006C8")]
	[Address(RVA = "0x101E8E0", Offset = "0x101E8E0", VA = "0x101E8E0")]
	public static bool GetPrevPlane()
	{
		return default(bool);
	}

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0x101E8E8", Offset = "0x101E8E8", VA = "0x101E8E8")]
	public static bool GetPause()
	{
		return default(bool);
	}

	[Token(Token = "0x60006CA")]
	[Address(RVA = "0x101E948", Offset = "0x101E948", VA = "0x101E948")]
	public static bool GetMenu()
	{
		return default(bool);
	}

	[Token(Token = "0x60006CB")]
	[Address(RVA = "0x101E9A8", Offset = "0x101E9A8", VA = "0x101E9A8")]
	public static bool GetHelpBook()
	{
		return default(bool);
	}

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0x101EA08", Offset = "0x101EA08", VA = "0x101EA08")]
	public static bool GetHelpBookNext()
	{
		return default(bool);
	}

	[Token(Token = "0x60006CD")]
	[Address(RVA = "0x101EA68", Offset = "0x101EA68", VA = "0x101EA68")]
	public static bool GetGunLock()
	{
		return default(bool);
	}

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0x101EA70", Offset = "0x101EA70", VA = "0x101EA70")]
	public static bool GetRadioOnOff()
	{
		return default(bool);
	}

	[Token(Token = "0x60006CF")]
	[Address(RVA = "0x101EAD0", Offset = "0x101EAD0", VA = "0x101EAD0")]
	public static bool GetRadioMute()
	{
		return default(bool);
	}

	[Token(Token = "0x60006D0")]
	[Address(RVA = "0x101EB30", Offset = "0x101EB30", VA = "0x101EB30")]
	public static bool GetRadioTeam()
	{
		return default(bool);
	}

	[Token(Token = "0x60006D1")]
	[Address(RVA = "0x101EB90", Offset = "0x101EB90", VA = "0x101EB90")]
	public static bool GetBombMode()
	{
		return default(bool);
	}

	[Token(Token = "0x60006D2")]
	[Address(RVA = "0x101EBF0", Offset = "0x101EBF0", VA = "0x101EBF0")]
	public static bool GetGunMode()
	{
		return default(bool);
	}

	[Token(Token = "0x60006D3")]
	[Address(RVA = "0x101EBF8", Offset = "0x101EBF8", VA = "0x101EBF8")]
	public static void OnPlaneHit(float direction)
	{
	}

	[Token(Token = "0x60006D4")]
	[Address(RVA = "0x101ED9C", Offset = "0x101ED9C", VA = "0x101ED9C")]
	public static void OnPlaneShoot()
	{
	}

	[Token(Token = "0x60006D5")]
	[Address(RVA = "0x101EE40", Offset = "0x101EE40", VA = "0x101EE40")]
	public static void OnPlaneDropBomb()
	{
	}

	[Token(Token = "0x60006D6")]
	[Address(RVA = "0x101EE44", Offset = "0x101EE44", VA = "0x101EE44")]
	public static void OnPlaneLaunchRocket()
	{
	}

	[Token(Token = "0x60006D7")]
	[Address(RVA = "0x101EF10", Offset = "0x101EF10", VA = "0x101EF10")]
	public static void OnPlaneDropTorpedo()
	{
	}

	[Token(Token = "0x60006D8")]
	[Address(RVA = "0x101EF14", Offset = "0x101EF14", VA = "0x101EF14")]
	public static bool GetUIActionDown(eAction action, bool checkOpenControlMapper = true)
	{
		return default(bool);
	}

	[Token(Token = "0x60006D9")]
	[Address(RVA = "0x101EF84", Offset = "0x101EF84", VA = "0x101EF84")]
	public static bool GetUIActionHold(eAction action, bool checkOpenControlMapper = true)
	{
		return default(bool);
	}

	[Token(Token = "0x60006DA")]
	[Address(RVA = "0x101EFF4", Offset = "0x101EFF4", VA = "0x101EFF4")]
	public static bool GetUIActionOK(bool checkOpenControlMapper = true)
	{
		return default(bool);
	}

	[Token(Token = "0x60006DB")]
	[Address(RVA = "0x101F058", Offset = "0x101F058", VA = "0x101F058")]
	public static bool GetUIActionCancel(bool checkOpenControlMapper = true)
	{
		return default(bool);
	}

	[Token(Token = "0x60006DC")]
	[Address(RVA = "0x101F0BC", Offset = "0x101F0BC", VA = "0x101F0BC")]
	public static bool GetJoystickButtonUp(XRInput.Button button)
	{
		return default(bool);
	}

	[Token(Token = "0x60006DD")]
	[Address(RVA = "0x101F1EC", Offset = "0x101F1EC", VA = "0x101F1EC")]
	public static bool GetJoystickButtonDown(XRInput.Button button)
	{
		return default(bool);
	}

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0x101F31C", Offset = "0x101F31C", VA = "0x101F31C")]
	public static bool GetJoystickButton(XRInput.Button button)
	{
		return default(bool);
	}

	[Token(Token = "0x60006DF")]
	[Address(RVA = "0x101F44C", Offset = "0x101F44C", VA = "0x101F44C")]
	public static float GetJoystickAxis(XRInput.Axis1D axis)
	{
		return default(float);
	}

	[Token(Token = "0x60006E0")]
	[Address(RVA = "0x101F57C", Offset = "0x101F57C", VA = "0x101F57C")]
	public static Vector2 GetJoystickAxis2D(XRInput.Axis2D axis)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60006E1")]
	[Address(RVA = "0x101F708", Offset = "0x101F708", VA = "0x101F708")]
	public static float GetAccumulatedAction(eAction action)
	{
		return default(float);
	}

	[Token(Token = "0x60006E2")]
	[Address(RVA = "0x10185C4", Offset = "0x10185C4", VA = "0x10185C4")]
	private void UpdateLocalization()
	{
	}

	[Token(Token = "0x60006E3")]
	[Address(RVA = "0x101F87C", Offset = "0x101F87C", VA = "0x101F87C")]
	public static string TranslateControlKeyName(string keyname)
	{
		return null;
	}

	[Token(Token = "0x60006E4")]
	[Address(RVA = "0x101FBDC", Offset = "0x101FBDC", VA = "0x101FBDC")]
	public ControllerInput()
	{
	}
}
[Token(Token = "0x200015F")]
public class ConvoySetup : MonoBehaviour, IHull
{
	[Token(Token = "0x40008AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] cars;

	[Token(Token = "0x40008AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Road road;

	[Token(Token = "0x40008AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3[] vertices;

	[Token(Token = "0x40008AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int maxCars;

	[Token(Token = "0x40008B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int currentCars;

	[Token(Token = "0x40008B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private eParty party;

	[Token(Token = "0x40008B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool isObjective;

	[Token(Token = "0x40008B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91ACBC", Offset = "0x91ACBC")]
	private bool <IsTaskUnit>k__BackingField;

	[Token(Token = "0x40008B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MultiplayerSync.SyncState mSync;

	[Token(Token = "0x1700006C")]
	public bool IsTaskUnit
	{
		[Token(Token = "0x60006F2")]
		[Address(RVA = "0x1020F78", Offset = "0x1020F78", VA = "0x1020F78", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92541C", Offset = "0x92541C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60006F3")]
		[Address(RVA = "0x1020F80", Offset = "0x1020F80", VA = "0x1020F80", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92542C", Offset = "0x92542C")]
		set
		{
		}
	}

	[Token(Token = "0x60006F4")]
	[Address(RVA = "0x1020F8C", Offset = "0x1020F8C", VA = "0x1020F8C")]
	public void Awake()
	{
	}

	[Token(Token = "0x60006F5")]
	[Address(RVA = "0x1021000", Offset = "0x1021000", VA = "0x1021000")]
	public void Start()
	{
	}

	[Token(Token = "0x60006F6")]
	[Address(RVA = "0x1021460", Offset = "0x1021460", VA = "0x1021460", Slot = "6")]
	public void SetObjective(bool b)
	{
	}

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0x102146C", Offset = "0x102146C", VA = "0x102146C", Slot = "7")]
	public void SetExtraChallange(bool b)
	{
	}

	[Token(Token = "0x60006F8")]
	[Address(RVA = "0x1021470", Offset = "0x1021470", VA = "0x1021470", Slot = "8")]
	public void SetParty(eParty p)
	{
	}

	[Token(Token = "0x60006F9")]
	[Address(RVA = "0x1021478", Offset = "0x1021478", VA = "0x1021478")]
	public int GetMaxCars()
	{
		return default(int);
	}

	[Token(Token = "0x60006FA")]
	[Address(RVA = "0x1021480", Offset = "0x1021480", VA = "0x1021480")]
	public int GetCurrentCars()
	{
		return default(int);
	}

	[Token(Token = "0x60006FB")]
	[Address(RVA = "0x1021488", Offset = "0x1021488", VA = "0x1021488")]
	public void Destroyed(Hull h)
	{
	}

	[Token(Token = "0x60006FC")]
	[Address(RVA = "0x10214BC", Offset = "0x10214BC", VA = "0x10214BC", Slot = "10")]
	public void RegisterDestroyed(Hull.DestroyedCallback cb)
	{
	}

	[Token(Token = "0x60006FD")]
	[Address(RVA = "0x1021530", Offset = "0x1021530", VA = "0x1021530", Slot = "11")]
	public void UnregisterDestroyed(Hull.DestroyedCallback cb)
	{
	}

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0x10215A4", Offset = "0x10215A4", VA = "0x10215A4", Slot = "12")]
	public bool IsAlive()
	{
		return default(bool);
	}

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0x10215B4", Offset = "0x10215B4", VA = "0x10215B4", Slot = "9")]
	public void SetRadarType(eRadarType radarType)
	{
	}

	[Token(Token = "0x6000700")]
	[Address(RVA = "0x10215B8", Offset = "0x10215B8", VA = "0x10215B8")]
	public ConvoySetup()
	{
	}
}
[Token(Token = "0x2000160")]
public class Country : MonoBehaviour
{
	[Token(Token = "0x40008B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string countryName;

	[Token(Token = "0x40008B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int countryID;

	[Token(Token = "0x40008B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float mapToTerrainScale;

	[Token(Token = "0x40008B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float terrainScale;

	[Token(Token = "0x40008B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public eCondition condition;

	[Token(Token = "0x40008BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Location strictLocation;

	[Token(Token = "0x40008BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool land;

	[Token(Token = "0x40008BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool river;

	[Token(Token = "0x40008BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	public bool delta;

	[Token(Token = "0x40008BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
	public bool seashore;

	[Token(Token = "0x40008BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool strait;

	[Token(Token = "0x40008C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	public bool island;

	[Token(Token = "0x40008C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
	public bool islands;

	[Token(Token = "0x40008C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F")]
	public bool sea;

	[Token(Token = "0x40008C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool canal;

	[Token(Token = "0x40008C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public eNation[] nations;

	[Token(Token = "0x40008C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool requiredValidMissionType;

	[Token(Token = "0x40008C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string[] names;

	[Token(Token = "0x6000701")]
	[Address(RVA = "0x10215C8", Offset = "0x10215C8", VA = "0x10215C8")]
	public string GetTownName()
	{
		return null;
	}

	[Token(Token = "0x6000702")]
	[Address(RVA = "0x102188C", Offset = "0x102188C", VA = "0x102188C")]
	public string GetRiverName()
	{
		return null;
	}

	[Token(Token = "0x6000703")]
	[Address(RVA = "0x1021894", Offset = "0x1021894", VA = "0x1021894")]
	public string GetSeaName()
	{
		return null;
	}

	[Token(Token = "0x6000704")]
	[Address(RVA = "0x102189C", Offset = "0x102189C", VA = "0x102189C")]
	public string GetStraitName()
	{
		return null;
	}

	[Token(Token = "0x6000705")]
	[Address(RVA = "0x10218A4", Offset = "0x10218A4", VA = "0x10218A4")]
	public string GetIslandName()
	{
		return null;
	}

	[Token(Token = "0x6000706")]
	[Address(RVA = "0x10218AC", Offset = "0x10218AC", VA = "0x10218AC")]
	public string GetArchipelagoName()
	{
		return null;
	}

	[Token(Token = "0x6000707")]
	[Address(RVA = "0x10218B4", Offset = "0x10218B4", VA = "0x10218B4")]
	public string GetCanalName()
	{
		return null;
	}

	[Token(Token = "0x6000708")]
	[Address(RVA = "0x10215D0", Offset = "0x10215D0", VA = "0x10215D0")]
	private string GetAreaName(int i)
	{
		return null;
	}

	[Token(Token = "0x6000709")]
	[Address(RVA = "0x10218BC", Offset = "0x10218BC", VA = "0x10218BC")]
	public bool HasNation(eNation n)
	{
		return default(bool);
	}

	[Token(Token = "0x600070A")]
	[Address(RVA = "0x1021924", Offset = "0x1021924", VA = "0x1021924")]
	public bool HasTerrain(eTerrainType tt)
	{
		return default(bool);
	}

	[Token(Token = "0x600070B")]
	[Address(RVA = "0x102199C", Offset = "0x102199C", VA = "0x102199C")]
	public Country()
	{
	}
}
[Token(Token = "0x2000161")]
public enum eCrosshairType
{
	[Token(Token = "0x40008C8")]
	forward,
	[Token(Token = "0x40008C9")]
	bomb_unused,
	[Token(Token = "0x40008CA")]
	VR_machinegun,
	[Token(Token = "0x40008CB")]
	back
}
[Token(Token = "0x2000162")]
public class Crosshair : MonoBehaviour
{
	[Token(Token = "0x40008CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material[] mat;

	[Token(Token = "0x40008CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PlaneBody myPlane;

	[Token(Token = "0x40008CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float hMul;

	[Token(Token = "0x40008CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private eCrosshairType type;

	[Token(Token = "0x40008D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Crosshair instance;

	[Token(Token = "0x40008D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Transform t;

	[Token(Token = "0x40008D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer _renderer;

	[Token(Token = "0x600070D")]
	[Address(RVA = "0x1021C4C", Offset = "0x1021C4C", VA = "0x1021C4C")]
	public void Awake()
	{
	}

	[Token(Token = "0x600070E")]
	[Address(RVA = "0x102227C", Offset = "0x102227C", VA = "0x102227C")]
	public static void Hide()
	{
	}

	[Token(Token = "0x600070F")]
	[Address(RVA = "0x102237C", Offset = "0x102237C", VA = "0x102237C")]
	public static bool IsBack()
	{
		return default(bool);
	}

	[Token(Token = "0x6000710")]
	[Address(RVA = "0x1021D30", Offset = "0x1021D30", VA = "0x1021D30")]
	public static void Setup(PlaneBody p, eCrosshairType cType)
	{
	}

	[Token(Token = "0x6000711")]
	[Address(RVA = "0x102242C", Offset = "0x102242C", VA = "0x102242C")]
	public void Update()
	{
	}

	[Token(Token = "0x6000712")]
	[Address(RVA = "0x1022534", Offset = "0x1022534", VA = "0x1022534")]
	public Crosshair()
	{
	}
}
[Token(Token = "0x2000163")]
public class CrosshairAim : MonoBehaviour
{
	[Token(Token = "0x40008D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material red;

	[Token(Token = "0x40008D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material blue;

	[Token(Token = "0x40008D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Renderer r;

	[Token(Token = "0x6000713")]
	[Address(RVA = "0x1022548", Offset = "0x1022548", VA = "0x1022548")]
	public void Start()
	{
	}

	[Token(Token = "0x6000714")]
	[Address(RVA = "0x10225C0", Offset = "0x10225C0", VA = "0x10225C0")]
	public void LateUpdate()
	{
	}

	[Token(Token = "0x6000715")]
	[Address(RVA = "0x10228F0", Offset = "0x10228F0", VA = "0x10228F0")]
	public CrosshairAim()
	{
	}
}
[Token(Token = "0x2000164")]
public class CustomLODGroup : MonoBehaviour, IL_O_D
{
	[Token(Token = "0x40008D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float[] lodDist;

	[Token(Token = "0x40008D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] lods;

	[Token(Token = "0x40008D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float mul;

	[Token(Token = "0x40008D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected int len;

	[Token(Token = "0x40008DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	protected int currentLOD;

	[Token(Token = "0x40008DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected bool isVisible;

	[Token(Token = "0x6000716")]
	[Address(RVA = "0x10276CC", Offset = "0x10276CC", VA = "0x10276CC", Slot = "5")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000717")]
	[Address(RVA = "0x1027790", Offset = "0x1027790", VA = "0x1027790", Slot = "6")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6000718")]
	[Address(RVA = "0x10277F4", Offset = "0x10277F4", VA = "0x10277F4", Slot = "7")]
	public virtual void Process(Vector3 camPos, bool useCamPos, GameObject planeGo, bool isMulti)
	{
	}

	[Token(Token = "0x6000719")]
	[Address(RVA = "0x1027A10", Offset = "0x1027A10", VA = "0x1027A10")]
	private void ChangeLOD(int i)
	{
	}

	[Token(Token = "0x600071A")]
	[Address(RVA = "0x1027A50", Offset = "0x1027A50", VA = "0x1027A50", Slot = "8")]
	protected virtual void SetLOD(int i)
	{
	}

	[Token(Token = "0x600071B")]
	[Address(RVA = "0x1027AD8", Offset = "0x1027AD8", VA = "0x1027AD8", Slot = "9")]
	protected virtual void Hide()
	{
	}

	[Token(Token = "0x600071C")]
	[Address(RVA = "0x1027B28", Offset = "0x1027B28", VA = "0x1027B28")]
	public CustomLODGroup()
	{
	}
}
[Token(Token = "0x2000165")]
public class CustomLODMesh : CustomLODGroup
{
	[Token(Token = "0x40008DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x91ACCC", Offset = "0x91ACCC")]
	public MeshFilter mf;

	[Token(Token = "0x40008DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Mesh[] meshes;

	[Token(Token = "0x600071E")]
	[Address(RVA = "0x1027B88", Offset = "0x1027B88", VA = "0x1027B88", Slot = "8")]
	protected override void SetLOD(int i)
	{
	}

	[Token(Token = "0x600071F")]
	[Address(RVA = "0x1027BD0", Offset = "0x1027BD0", VA = "0x1027BD0", Slot = "9")]
	protected override void Hide()
	{
	}

	[Token(Token = "0x6000720")]
	[Address(RVA = "0x1027BF8", Offset = "0x1027BF8", VA = "0x1027BF8")]
	public CustomLODMesh()
	{
	}
}
[Token(Token = "0x2000166")]
public class CustomLODSkinnedMesh : CustomLODGroup
{
	[Token(Token = "0x40008DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x91AD04", Offset = "0x91AD04")]
	public SkinnedMeshRenderer smr;

	[Token(Token = "0x40008DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Mesh[] meshes;

	[Token(Token = "0x6000721")]
	[Address(RVA = "0x1027C64", Offset = "0x1027C64", VA = "0x1027C64", Slot = "8")]
	protected override void SetLOD(int i)
	{
	}

	[Token(Token = "0x6000722")]
	[Address(RVA = "0x1027CAC", Offset = "0x1027CAC", VA = "0x1027CAC", Slot = "9")]
	protected override void Hide()
	{
	}

	[Token(Token = "0x6000723")]
	[Address(RVA = "0x1027CD4", Offset = "0x1027CD4", VA = "0x1027CD4")]
	public CustomLODSkinnedMesh()
	{
	}
}
[Token(Token = "0x2000167")]
[ExecuteInEditMode]
public class CutsceneBezierLineDrawer : MonoBehaviour
{
	[Token(Token = "0x2000168")]
	private class BezierDrawer
	{
		[Token(Token = "0x40008E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool active;

		[Token(Token = "0x40008E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BezierSpline spline;

		[Token(Token = "0x40008E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public uint crc;

		[Token(Token = "0x40008E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LineRenderer renderer;

		[Token(Token = "0x600072A")]
		[Address(RVA = "0xBE62B8", Offset = "0xBE62B8", VA = "0xBE62B8")]
		public BezierDrawer()
		{
		}
	}

	[Token(Token = "0x40008E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool show;

	[Token(Token = "0x40008E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject root;

	[Token(Token = "0x40008E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<BezierDrawer> drawers;

	[Token(Token = "0x6000724")]
	[Address(RVA = "0x1029C20", Offset = "0x1029C20", VA = "0x1029C20")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000725")]
	[Address(RVA = "0x1029D58", Offset = "0x1029D58", VA = "0x1029D58")]
	private BezierDrawer FindDrawer(BezierSpline spline)
	{
		return null;
	}

	[Token(Token = "0x6000726")]
	[Address(RVA = "0x1029E70", Offset = "0x1029E70", VA = "0x1029E70")]
	private uint CRC(BezierSpline spline)
	{
		return default(uint);
	}

	[Token(Token = "0x6000727")]
	[Address(RVA = "0x1029FBC", Offset = "0x1029FBC", VA = "0x1029FBC")]
	private void FillLine(BezierSpline spline, LineRenderer renderer)
	{
	}

	[Token(Token = "0x6000728")]
	[Address(RVA = "0x102A068", Offset = "0x102A068", VA = "0x102A068")]
	private void Update()
	{
	}

	[Token(Token = "0x6000729")]
	[Address(RVA = "0x102A82C", Offset = "0x102A82C", VA = "0x102A82C")]
	public CutsceneBezierLineDrawer()
	{
	}
}
[Token(Token = "0x2000169")]
public class CutsceneLift : MonoBehaviour
{
	[Token(Token = "0x600072B")]
	[Address(RVA = "0x102A8A4", Offset = "0x102A8A4", VA = "0x102A8A4")]
	public CutsceneLift()
	{
	}
}
[Token(Token = "0x200016A")]
public class CutscenePlaneFlight : MonoBehaviour
{
	[Token(Token = "0x200016B")]
	private enum State
	{
		[Token(Token = "0x40008FA")]
		Idle,
		[Token(Token = "0x40008FB")]
		WarmUp,
		[Token(Token = "0x40008FC")]
		Start,
		[Token(Token = "0x40008FD")]
		Fly,
		[Token(Token = "0x40008FE")]
		FlyLand,
		[Token(Token = "0x40008FF")]
		Land,
		[Token(Token = "0x4000900")]
		CoolDown
	}

	[Token(Token = "0x40008E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private State state;

	[Token(Token = "0x40008E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private BezierSplineLinear spline;

	[Token(Token = "0x40008E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private BezierSpline splineStart;

	[Token(Token = "0x40008EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private BezierSpline splineFly;

	[Token(Token = "0x40008EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float speed;

	[Token(Token = "0x40008EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private AnimationCurve startSpeedCurve;

	[Token(Token = "0x40008ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float startTime;

	[Token(Token = "0x40008EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float totalTime;

	[Token(Token = "0x40008EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float engineVolMul;

	[Token(Token = "0x40008F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float engineMaxDist;

	[Token(Token = "0x40008F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private PlaneBody pb;

	[Token(Token = "0x40008F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private PlaneStand planeStand;

	[Token(Token = "0x40008F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool usePlaneStand;

	[Token(Token = "0x40008F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Action callbackLand;

	[Token(Token = "0x40008F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private GameObject shadow;

	[Token(Token = "0x40008F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int flyCnt;

	[Token(Token = "0x40008F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float rollDot;

	[Token(Token = "0x40008F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float rollAngle;

	[Token(Token = "0x600072C")]
	[Address(RVA = "0x102A8AC", Offset = "0x102A8AC", VA = "0x102A8AC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600072D")]
	[Address(RVA = "0x102AC64", Offset = "0x102AC64", VA = "0x102AC64")]
	public void Setup(int colorID, float engineVolMul, float engineMaxDist)
	{
	}

	[Token(Token = "0x600072E")]
	[Address(RVA = "0x102B124", Offset = "0x102B124", VA = "0x102B124")]
	public void SetIdle()
	{
	}

	[Token(Token = "0x600072F")]
	[Address(RVA = "0x102B214", Offset = "0x102B214", VA = "0x102B214")]
	public void SetWarmUp(float warmUpTime)
	{
	}

	[Token(Token = "0x6000730")]
	[Address(RVA = "0x102B278", Offset = "0x102B278", VA = "0x102B278")]
	public void SetStartAndFly(BezierSpline splineStart, AnimationCurve startSpeedCurve, BezierSpline splineFly, float speed)
	{
	}

	[Token(Token = "0x6000731")]
	[Address(RVA = "0x102B578", Offset = "0x102B578", VA = "0x102B578")]
	public void SetFlyAndLand(BezierSpline splineStart, AnimationCurve startSpeedCurve, BezierSpline splineFly, float speed, Action callbackLand)
	{
	}

	[Token(Token = "0x6000732")]
	[Address(RVA = "0x102B6BC", Offset = "0x102B6BC", VA = "0x102B6BC")]
	public void SetCoolDown(float coolDownTime)
	{
	}

	[Token(Token = "0x6000733")]
	[Address(RVA = "0x102B3BC", Offset = "0x102B3BC", VA = "0x102B3BC")]
	public void MoveTo(Vector3 pos, Vector3 dir)
	{
	}

	[Token(Token = "0x6000734")]
	[Address(RVA = "0x102B724", Offset = "0x102B724", VA = "0x102B724")]
	public void FlyTo(Vector3 pos, Vector3 pos2, Vector3 dir)
	{
	}

	[Token(Token = "0x6000735")]
	[Address(RVA = "0x102B9E8", Offset = "0x102B9E8", VA = "0x102B9E8")]
	public void SetFly(BezierSpline spline, float speed)
	{
	}

	[Token(Token = "0x6000736")]
	[Address(RVA = "0x102A9B8", Offset = "0x102A9B8", VA = "0x102A9B8")]
	private void StepEngineSound(bool on, float volMul = 1f, float pitch = 1f)
	{
	}

	[Token(Token = "0x6000737")]
	[Address(RVA = "0x102B170", Offset = "0x102B170", VA = "0x102B170")]
	private void ShowShadow(bool on)
	{
	}

	[Token(Token = "0x6000738")]
	[Address(RVA = "0x102BB34", Offset = "0x102BB34", VA = "0x102BB34")]
	private void Update()
	{
	}

	[Token(Token = "0x6000739")]
	[Address(RVA = "0x102C008", Offset = "0x102C008", VA = "0x102C008")]
	public CutscenePlaneFlight()
	{
	}
}
[Token(Token = "0x200016C")]
public class CutscenePlanes : MonoBehaviour
{
	[Token(Token = "0x200016D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x917C14", Offset = "0x917C14")]
	private sealed class <DelayedInitialize>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CutscenePlanes <>4__this;

		[Token(Token = "0x4000916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x4000917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <pi>5__3;

		[Token(Token = "0x4000918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <j>5__4;

		[Token(Token = "0x4000919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject <go>5__5;

		[Token(Token = "0x1700006D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000745")]
			[Address(RVA = "0xBE6678", Offset = "0xBE6678", VA = "0xBE6678", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000747")]
			[Address(RVA = "0xBE66C0", Offset = "0xBE66C0", VA = "0xBE66C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000742")]
		[Address(RVA = "0xBE62C0", Offset = "0xBE62C0", VA = "0xBE62C0")]
		[DebuggerHidden]
		public <DelayedInitialize>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6000743")]
		[Address(RVA = "0xBE62EC", Offset = "0xBE62EC", VA = "0xBE62EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000744")]
		[Address(RVA = "0xBE62F0", Offset = "0xBE62F0", VA = "0xBE62F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000746")]
		[Address(RVA = "0xBE6680", Offset = "0xBE6680", VA = "0xBE6680", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected BezierSpline[] flightSplines;

	[Token(Token = "0x4000902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected PlayerPlanesList prefabs;

	[Token(Token = "0x4000903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected int prefabsVariants;

	[Token(Token = "0x4000904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	protected int firstSpawnDelaySecMin;

	[Token(Token = "0x4000905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	protected int firstSpawnDelaySecMax;

	[Token(Token = "0x4000906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	protected int spawnDelaySecMin;

	[Token(Token = "0x4000907")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	protected int spawnDelaySecMax;

	[Token(Token = "0x4000908")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	protected int spawnPlanesMin;

	[Token(Token = "0x4000909")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	protected int spawnPlanesMax;

	[Token(Token = "0x400090A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	protected int planeSpeedMin;

	[Token(Token = "0x400090B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	protected int planeSpeedMax;

	[Token(Token = "0x400090C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	protected float planeEngineVolMul;

	[Token(Token = "0x400090D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	protected float planeEngineMaxDist;

	[Token(Token = "0x400090E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	protected bool initialized;

	[Token(Token = "0x400090F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected List<GameObject> planes;

	[Token(Token = "0x4000910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected float nextSpawnTime;

	[Token(Token = "0x4000911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected List<int> splineIdx;

	[Token(Token = "0x4000912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected MultiplayerSync.SyncState mSync;

	[Token(Token = "0x600073A")]
	[Address(RVA = "0x102C010", Offset = "0x102C010", VA = "0x102C010")]
	protected void Start()
	{
	}

	[Token(Token = "0x600073B")]
	[Address(RVA = "0x102C120", Offset = "0x102C120", VA = "0x102C120")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92543C", Offset = "0x92543C")]
	private IEnumerator DelayedInitialize()
	{
		return null;
	}

	[Token(Token = "0x600073C")]
	[Address(RVA = "0x102C18C", Offset = "0x102C18C", VA = "0x102C18C")]
	private void Update()
	{
	}

	[Token(Token = "0x600073D")]
	[Address(RVA = "0x102C4E0", Offset = "0x102C4E0", VA = "0x102C4E0")]
	protected void StartRandSync()
	{
	}

	[Token(Token = "0x600073E")]
	[Address(RVA = "0x102C5A0", Offset = "0x102C5A0", VA = "0x102C5A0")]
	protected void StopRandSync()
	{
	}

	[Token(Token = "0x600073F")]
	[Address(RVA = "0x102C608", Offset = "0x102C608", VA = "0x102C608")]
	protected GameObject SelectRandomPlane()
	{
		return null;
	}

	[Token(Token = "0x6000740")]
	[Address(RVA = "0x102C1F8", Offset = "0x102C1F8", VA = "0x102C1F8")]
	private void SpawnPlanes()
	{
	}

	[Token(Token = "0x6000741")]
	[Address(RVA = "0x102C764", Offset = "0x102C764", VA = "0x102C764")]
	public CutscenePlanes()
	{
	}
}
[Token(Token = "0x200016E")]
public class CutscenePlanesBaseCarrier : CutscenePlanes
{
	[Token(Token = "0x200016F")]
	private enum State
	{
		[Token(Token = "0x400092D")]
		Nothing,
		[Token(Token = "0x400092E")]
		EmptyLiftDown,
		[Token(Token = "0x400092F")]
		EmptyLiftMoveIn,
		[Token(Token = "0x4000930")]
		FullLiftUp,
		[Token(Token = "0x4000931")]
		WarmUp,
		[Token(Token = "0x4000932")]
		Landing,
		[Token(Token = "0x4000933")]
		Cooldown,
		[Token(Token = "0x4000934")]
		FullLiftDown,
		[Token(Token = "0x4000935")]
		FullLiftMoveOut,
		[Token(Token = "0x4000936")]
		EmptyLiftUp
	}

	[Token(Token = "0x400091A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private GameObject lift;

	[Token(Token = "0x400091B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private GameObject liftPosDown;

	[Token(Token = "0x400091C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private GameObject liftPosUp;

	[Token(Token = "0x400091D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private float liftUpDownTime;

	[Token(Token = "0x400091E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private AnimationCurve liftUpCurve;

	[Token(Token = "0x400091F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private AnimationCurve liftDownCurve;

	[Token(Token = "0x4000920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private float planeMoveInOutTime;

	[Token(Token = "0x4000921")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private AnimationCurve planeMoveInCurve;

	[Token(Token = "0x4000922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private AnimationCurve planeMoveOutCurve;

	[Token(Token = "0x4000923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private float warmUpTime;

	[Token(Token = "0x4000924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[SerializeField]
	private float coolDownTime;

	[Token(Token = "0x4000925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private GameObject planePosDownStart;

	[Token(Token = "0x4000926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private GameObject planePosDownLift;

	[Token(Token = "0x4000927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private BezierSpline splineDesk;

	[Token(Token = "0x4000928")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private AnimationCurve startSpeedCurve;

	[Token(Token = "0x4000929")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private State state;

	[Token(Token = "0x400092A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private float startTime;

	[Token(Token = "0x400092B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private CutscenePlaneFlight plane;

	[Token(Token = "0x6000748")]
	[Address(RVA = "0x102C81C", Offset = "0x102C81C", VA = "0x102C81C")]
	private new void Start()
	{
	}

	[Token(Token = "0x6000749")]
	[Address(RVA = "0x102C820", Offset = "0x102C820", VA = "0x102C820")]
	private void Update()
	{
	}

	[Token(Token = "0x600074A")]
	[Address(RVA = "0x102D4A8", Offset = "0x102D4A8", VA = "0x102D4A8")]
	public CutscenePlanesBaseCarrier()
	{
	}

	[Token(Token = "0x600074B")]
	[Address(RVA = "0x102D4AC", Offset = "0x102D4AC", VA = "0x102D4AC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9254EC", Offset = "0x9254EC")]
	private void <Update>b__20_0()
	{
	}
}
[Token(Token = "0x2000170")]
public class DamageMaterial : MonoBehaviour
{
	[Token(Token = "0x4000937")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Hull hull;

	[Token(Token = "0x4000938")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float lastDamage;

	[Token(Token = "0x4000939")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float timer;

	[Token(Token = "0x400093A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Renderer r;

	[Token(Token = "0x600074C")]
	[Address(RVA = "0x102D4FC", Offset = "0x102D4FC", VA = "0x102D4FC")]
	public void Awake()
	{
	}

	[Token(Token = "0x600074D")]
	[Address(RVA = "0x102D550", Offset = "0x102D550", VA = "0x102D550")]
	public void Start()
	{
	}

	[Token(Token = "0x600074E")]
	[Address(RVA = "0x102D5D0", Offset = "0x102D5D0", VA = "0x102D5D0")]
	private void Update()
	{
	}

	[Token(Token = "0x600074F")]
	[Address(RVA = "0x102D6F0", Offset = "0x102D6F0", VA = "0x102D6F0")]
	public DamageMaterial()
	{
	}
}
[Token(Token = "0x2000171")]
public class DecalsGenerator : MonoBehaviour
{
	[Token(Token = "0x400093B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector2[] uvArray;

	[Token(Token = "0x400093C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int num;

	[Token(Token = "0x400093D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3[] vertices;

	[Token(Token = "0x400093E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Color[] colors;

	[Token(Token = "0x400093F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector2[] uv;

	[Token(Token = "0x4000940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int[] triangles;

	[Token(Token = "0x4000941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int vertZ;

	[Token(Token = "0x4000942")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Mesh mesh;

	[Token(Token = "0x6000750")]
	[Address(RVA = "0x102D724", Offset = "0x102D724", VA = "0x102D724")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000751")]
	[Address(RVA = "0x102D728", Offset = "0x102D728", VA = "0x102D728")]
	public void GenerateOnMesh(Mesh m)
	{
	}

	[Token(Token = "0x6000752")]
	[Address(RVA = "0x102DECC", Offset = "0x102DECC", VA = "0x102DECC")]
	public void UpdateMesh()
	{
	}

	[Token(Token = "0x6000753")]
	[Address(RVA = "0x102E094", Offset = "0x102E094", VA = "0x102E094")]
	private void CreateTangent(Mesh theMesh)
	{
	}

	[Token(Token = "0x6000754")]
	[Address(RVA = "0x102E55C", Offset = "0x102E55C", VA = "0x102E55C")]
	public DecalsGenerator()
	{
	}
}
[Token(Token = "0x2000172")]
public class DelayedActivateObject : MonoBehaviour
{
	[Token(Token = "0x2000173")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x917C24", Offset = "0x917C24")]
	private sealed class <ActivateObjectsYielded>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DelayedActivateObject <>4__this;

		[Token(Token = "0x4000949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x1700006F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600075B")]
			[Address(RVA = "0xBE6ADC", Offset = "0xBE6ADC", VA = "0xBE6ADC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000070")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600075D")]
			[Address(RVA = "0xBE6B24", Offset = "0xBE6B24", VA = "0xBE6B24", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000758")]
		[Address(RVA = "0xBE68E4", Offset = "0xBE68E4", VA = "0xBE68E4")]
		[DebuggerHidden]
		public <ActivateObjectsYielded>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000759")]
		[Address(RVA = "0xBE6910", Offset = "0xBE6910", VA = "0xBE6910", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600075A")]
		[Address(RVA = "0xBE6914", Offset = "0xBE6914", VA = "0xBE6914", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600075C")]
		[Address(RVA = "0xBE6AE4", Offset = "0xBE6AE4", VA = "0xBE6AE4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000943")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] objects;

	[Token(Token = "0x4000944")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int delayLoops;

	[Token(Token = "0x4000945")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float delaySec;

	[Token(Token = "0x6000755")]
	[Address(RVA = "0xD92E18", Offset = "0xD92E18", VA = "0xD92E18")]
	private void Start()
	{
	}

	[Token(Token = "0x6000756")]
	[Address(RVA = "0xD92E44", Offset = "0xD92E44", VA = "0xD92E44")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9254FC", Offset = "0x9254FC")]
	private IEnumerator ActivateObjectsYielded()
	{
		return null;
	}

	[Token(Token = "0x6000757")]
	[Address(RVA = "0xD92EB0", Offset = "0xD92EB0", VA = "0xD92EB0")]
	public DelayedActivateObject()
	{
	}
}
[Token(Token = "0x2000174")]
public class DeleteIfNotNation : MonoBehaviour
{
	[Token(Token = "0x400094A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool onAwake;

	[Token(Token = "0x400094B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool onStart;

	[Token(Token = "0x400094C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public eNation nation;

	[Token(Token = "0x600075E")]
	[Address(RVA = "0xD92EB8", Offset = "0xD92EB8", VA = "0xD92EB8")]
	public void Awake()
	{
	}

	[Token(Token = "0x600075F")]
	[Address(RVA = "0xD92FF0", Offset = "0xD92FF0", VA = "0xD92FF0")]
	public void Start()
	{
	}

	[Token(Token = "0x6000760")]
	[Address(RVA = "0xD92EC8", Offset = "0xD92EC8", VA = "0xD92EC8")]
	private void Execute()
	{
	}

	[Token(Token = "0x6000761")]
	[Address(RVA = "0xD93000", Offset = "0xD93000", VA = "0xD93000")]
	public DeleteIfNotNation()
	{
	}
}
[Token(Token = "0x2000175")]
public class DeleteIfNotNations : MonoBehaviour
{
	[Token(Token = "0x400094D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public eNation[] nations;

	[Token(Token = "0x6000762")]
	[Address(RVA = "0xD93010", Offset = "0xD93010", VA = "0xD93010")]
	public void Start()
	{
	}

	[Token(Token = "0x6000763")]
	[Address(RVA = "0xD9317C", Offset = "0xD9317C", VA = "0xD9317C")]
	public DeleteIfNotNations()
	{
	}
}
[Token(Token = "0x2000176")]
public class DeleteRandomChildren : MonoBehaviour
{
	[Token(Token = "0x6000764")]
	[Address(RVA = "0xD93184", Offset = "0xD93184", VA = "0xD93184")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000765")]
	[Address(RVA = "0xD93534", Offset = "0xD93534", VA = "0xD93534")]
	public DeleteRandomChildren()
	{
	}
}
[Token(Token = "0x2000177")]
public class DeleteTimed : MonoBehaviour
{
	[Token(Token = "0x400094E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float time;

	[Token(Token = "0x6000766")]
	[Address(RVA = "0xD9353C", Offset = "0xD9353C", VA = "0xD9353C")]
	public void Start()
	{
	}

	[Token(Token = "0x6000767")]
	[Address(RVA = "0xD935C4", Offset = "0xD935C4", VA = "0xD935C4")]
	public DeleteTimed()
	{
	}
}
[Token(Token = "0x2000178")]
public class DeleteWhenCheck : MonoBehaviour
{
	[Token(Token = "0x400094F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public eCheck check;

	[Token(Token = "0x4000950")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool notChecked;

	[Token(Token = "0x6000768")]
	[Address(RVA = "0xD935D4", Offset = "0xD935D4", VA = "0xD935D4")]
	public void Start()
	{
	}

	[Token(Token = "0x6000769")]
	[Address(RVA = "0xD936A8", Offset = "0xD936A8", VA = "0xD936A8")]
	public DeleteWhenCheck()
	{
	}
}
[Token(Token = "0x2000179")]
public class Demo : MonoBehaviour
{
	[Token(Token = "0x4000951")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] showWhenDemo;

	[Token(Token = "0x4000952")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] hideWhenDemo;

	[Token(Token = "0x4000953")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] showWhenDemoFinished;

	[Token(Token = "0x4000954")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] hideWhenDemoFinished;

	[Token(Token = "0x600076A")]
	[Address(RVA = "0xD936B0", Offset = "0xD936B0", VA = "0xD936B0")]
	public static bool IsOver()
	{
		return default(bool);
	}

	[Token(Token = "0x600076B")]
	[Address(RVA = "0xD93760", Offset = "0xD93760", VA = "0xD93760")]
	private void Start()
	{
	}

	[Token(Token = "0x600076C")]
	[Address(RVA = "0xD93824", Offset = "0xD93824", VA = "0xD93824")]
	private void SetVisibility(GameObject[] arr, bool v)
	{
	}

	[Token(Token = "0x600076D")]
	[Address(RVA = "0xD93904", Offset = "0xD93904", VA = "0xD93904")]
	public Demo()
	{
	}
}
[Token(Token = "0x200017A")]
public class DestroyedBaloon : MonoBehaviour
{
	[Token(Token = "0x4000955")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Renderer rend;

	[Token(Token = "0x4000956")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer rendLOD;

	[Token(Token = "0x4000957")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform particleRoot;

	[Token(Token = "0x4000958")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ParticleSystem[] smoke;

	[Token(Token = "0x4000959")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 fallingSpeed;

	[Token(Token = "0x400095A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool haveFire;

	[Token(Token = "0x400095B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float fireVolume;

	[Token(Token = "0x600076E")]
	[Address(RVA = "0xD93988", Offset = "0xD93988", VA = "0xD93988")]
	public void Awake()
	{
	}

	[Token(Token = "0x600076F")]
	[Address(RVA = "0xD93A9C", Offset = "0xD93A9C", VA = "0xD93A9C")]
	public void Update()
	{
	}

	[Token(Token = "0x6000770")]
	[Address(RVA = "0xD93DF0", Offset = "0xD93DF0", VA = "0xD93DF0")]
	public DestroyedBaloon()
	{
	}
}
[Token(Token = "0x200017B")]
public class DetachOnStart : MonoBehaviour
{
	[Token(Token = "0x400095C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float destroyTime;

	[Token(Token = "0x6000771")]
	[Address(RVA = "0xD93E04", Offset = "0xD93E04", VA = "0xD93E04")]
	public void Start()
	{
	}

	[Token(Token = "0x6000772")]
	[Address(RVA = "0xD93F54", Offset = "0xD93F54", VA = "0xD93F54")]
	public DetachOnStart()
	{
	}
}
[Token(Token = "0x200017C")]
public class DevAllPlanesOnAirfield : MonoBehaviour
{
	[Token(Token = "0x6000773")]
	[Address(RVA = "0xD93F64", Offset = "0xD93F64", VA = "0xD93F64")]
	private void Start()
	{
	}

	[Token(Token = "0x6000774")]
	[Address(RVA = "0xD94178", Offset = "0xD94178", VA = "0xD94178")]
	private void Update()
	{
	}

	[Token(Token = "0x6000775")]
	[Address(RVA = "0xD93F68", Offset = "0xD93F68", VA = "0xD93F68")]
	private void Init()
	{
	}

	[Token(Token = "0x6000776")]
	[Address(RVA = "0xD943D0", Offset = "0xD943D0", VA = "0xD943D0")]
	private float fmod(float speed, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x6000777")]
	[Address(RVA = "0xD9417C", Offset = "0xD9417C", VA = "0xD9417C")]
	private void StepBones()
	{
	}

	[Token(Token = "0x6000778")]
	[Address(RVA = "0xD94428", Offset = "0xD94428", VA = "0xD94428")]
	public DevAllPlanesOnAirfield()
	{
	}
}
[Token(Token = "0x200017D")]
public class DisableComponent : MonoBehaviour
{
	[Token(Token = "0x400095D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MonoBehaviour component;

	[Token(Token = "0x400095E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool destroy;

	[Token(Token = "0x6000779")]
	[Address(RVA = "0xD94BA4", Offset = "0xD94BA4", VA = "0xD94BA4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600077A")]
	[Address(RVA = "0xD94C74", Offset = "0xD94C74", VA = "0xD94C74")]
	public DisableComponent()
	{
	}
}
[Token(Token = "0x200017E")]
public class DisplayAcceleration : MonoBehaviour
{
	[Token(Token = "0x400095F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TextMesh tm;

	[Token(Token = "0x600077B")]
	[Address(RVA = "0xD94C7C", Offset = "0xD94C7C", VA = "0xD94C7C")]
	private void Start()
	{
	}

	[Token(Token = "0x600077C")]
	[Address(RVA = "0xD94CD0", Offset = "0xD94CD0", VA = "0xD94CD0")]
	private void Update()
	{
	}

	[Token(Token = "0x600077D")]
	[Address(RVA = "0xD94ECC", Offset = "0xD94ECC", VA = "0xD94ECC")]
	public DisplayAcceleration()
	{
	}
}
[Token(Token = "0x200017F")]
public class DistantClouds : MonoBehaviour
{
	[Token(Token = "0x4000960")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform sky;

	[Token(Token = "0x4000961")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DistantClouds instance;

	[Token(Token = "0x4000962")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Mesh mesh;

	[Token(Token = "0x4000963")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int[] rnd;

	[Token(Token = "0x600077E")]
	[Address(RVA = "0xD957BC", Offset = "0xD957BC", VA = "0xD957BC")]
	public void Awake()
	{
	}

	[Token(Token = "0x600077F")]
	[Address(RVA = "0xD95824", Offset = "0xD95824", VA = "0xD95824")]
	public static void Create(int n)
	{
	}

	[Token(Token = "0x6000780")]
	[Address(RVA = "0xD95918", Offset = "0xD95918", VA = "0xD95918")]
	private void GenerateMesh(int num)
	{
	}

	[Token(Token = "0x6000781")]
	[Address(RVA = "0xD960C8", Offset = "0xD960C8", VA = "0xD960C8")]
	public static void OnFogUpdate(float hMul)
	{
	}

	[Token(Token = "0x6000782")]
	[Address(RVA = "0xD96280", Offset = "0xD96280", VA = "0xD96280")]
	public DistantClouds()
	{
	}
}
[Token(Token = "0x2000180")]
public class DontDestroyOnLoad : MonoBehaviour
{
	[Token(Token = "0x6000784")]
	[Address(RVA = "0xD96318", Offset = "0xD96318", VA = "0xD96318")]
	private void Start()
	{
	}

	[Token(Token = "0x6000785")]
	[Address(RVA = "0xD96390", Offset = "0xD96390", VA = "0xD96390")]
	public DontDestroyOnLoad()
	{
	}
}
[Token(Token = "0x2000181")]
public class DrawAllCollidersInEditor : MonoBehaviour
{
	[Token(Token = "0x4000964")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool draw;

	[Token(Token = "0x4000965")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool drawWre;

	[Token(Token = "0x4000966")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Color color;

	[Token(Token = "0x6000786")]
	[Address(RVA = "0xD97234", Offset = "0xD97234", VA = "0xD97234")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000787")]
	[Address(RVA = "0xD97844", Offset = "0xD97844", VA = "0xD97844")]
	public DrawAllCollidersInEditor()
	{
	}
}
[Token(Token = "0x2000182")]
public class EditorWindowSimple : MonoBehaviour
{
	[Token(Token = "0x6000788")]
	[Address(RVA = "0xDA8C48", Offset = "0xDA8C48", VA = "0xDA8C48")]
	private void Start()
	{
	}

	[Token(Token = "0x6000789")]
	[Address(RVA = "0xDA8C4C", Offset = "0xDA8C4C", VA = "0xDA8C4C")]
	private void Update()
	{
	}

	[Token(Token = "0x600078A")]
	[Address(RVA = "0xDA8C50", Offset = "0xDA8C50", VA = "0xDA8C50")]
	public EditorWindowSimple()
	{
	}
}
[Token(Token = "0x2000183")]
public class EquipmentList : MonoBehaviour
{
	[Token(Token = "0x4000967")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public eNation nation;

	[Token(Token = "0x4000968")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public eqType type;

	[Token(Token = "0x4000969")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] prefab;

	[Token(Token = "0x600078B")]
	[Address(RVA = "0x12F7C68", Offset = "0x12F7C68", VA = "0x12F7C68")]
	public GameObject Get(MultiplayerSync.SyncState mSync)
	{
		return null;
	}

	[Token(Token = "0x600078C")]
	[Address(RVA = "0x12F7DF8", Offset = "0x12F7DF8", VA = "0x12F7DF8")]
	public bool Fit(eNation n, eqType t)
	{
		return default(bool);
	}

	[Token(Token = "0x600078D")]
	[Address(RVA = "0x12F7EDC", Offset = "0x12F7EDC", VA = "0x12F7EDC")]
	public void UpdateName()
	{
	}

	[Token(Token = "0x600078E")]
	[Address(RVA = "0x12F7FFC", Offset = "0x12F7FFC", VA = "0x12F7FFC")]
	public EquipmentList()
	{
	}
}
[Token(Token = "0x2000184")]
public class ExtendBackgroundSize : MonoBehaviour
{
	[Token(Token = "0x400096A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] includeObjects;

	[Token(Token = "0x400096B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float margin;

	[Token(Token = "0x400096C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool started;

	[Token(Token = "0x400096D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	private bool calculate;

	[Token(Token = "0x400096E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 posOrg;

	[Token(Token = "0x400096F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 scaleOrg;

	[Token(Token = "0x600078F")]
	[Address(RVA = "0x12F98E4", Offset = "0x12F98E4", VA = "0x12F98E4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000790")]
	[Address(RVA = "0x12F9940", Offset = "0x12F9940", VA = "0x12F9940")]
	private void Start()
	{
	}

	[Token(Token = "0x6000791")]
	[Address(RVA = "0x12F994C", Offset = "0x12F994C", VA = "0x12F994C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000792")]
	[Address(RVA = "0x12F9C44", Offset = "0x12F9C44", VA = "0x12F9C44")]
	public void CalculateMaxBounds(GameObject go, ref Bounds bounds)
	{
	}

	[Token(Token = "0x6000793")]
	[Address(RVA = "0x12F995C", Offset = "0x12F995C", VA = "0x12F995C")]
	public void CalculateSize()
	{
	}

	[Token(Token = "0x6000794")]
	[Address(RVA = "0x12FA094", Offset = "0x12FA094", VA = "0x12FA094")]
	public ExtendBackgroundSize()
	{
	}
}
[Token(Token = "0x2000185")]
public class FPS_counter : MonoBehaviour
{
	[Token(Token = "0x4000970")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TextMesh tm;

	[Token(Token = "0x4000971")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int frame;

	[Token(Token = "0x4000972")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float time;

	[Token(Token = "0x6000795")]
	[Address(RVA = "0x12FF2C4", Offset = "0x12FF2C4", VA = "0x12FF2C4")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000796")]
	[Address(RVA = "0x12FF3A0", Offset = "0x12FF3A0", VA = "0x12FF3A0")]
	public void Update()
	{
	}

	[Token(Token = "0x6000797")]
	[Address(RVA = "0x12FF6B4", Offset = "0x12FF6B4", VA = "0x12FF6B4")]
	public FPS_counter()
	{
	}
}
[Token(Token = "0x2000186")]
public class FX_Effect : MonoBehaviour
{
	[Token(Token = "0x4000973")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float lifeTime;

	[Token(Token = "0x4000974")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public eSoundFX sound;

	[Token(Token = "0x4000975")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float soundDelay;

	[Token(Token = "0x4000976")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ParticleSystem[] particle;

	[Token(Token = "0x4000977")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected Vector3 speed;

	[Token(Token = "0x4000978")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool useSpeed;

	[Token(Token = "0x4000979")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected float hideTime;

	[Token(Token = "0x400097A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	protected float soundDelayTime;

	[Token(Token = "0x400097B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected Transform follow;

	[Token(Token = "0x400097C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected Vector3 offset;

	[Token(Token = "0x6000798")]
	[Address(RVA = "0x12FF6BC", Offset = "0x12FF6BC", VA = "0x12FF6BC")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000799")]
	[Address(RVA = "0x12FF6E4", Offset = "0x12FF6E4", VA = "0x12FF6E4")]
	public bool Hidden()
	{
		return default(bool);
	}

	[Token(Token = "0x600079A")]
	[Address(RVA = "0x12FF714", Offset = "0x12FF714", VA = "0x12FF714")]
	private void Update()
	{
	}

	[Token(Token = "0x600079B")]
	[Address(RVA = "0x12FF838", Offset = "0x12FF838", VA = "0x12FF838", Slot = "4")]
	protected virtual void Move()
	{
	}

	[Token(Token = "0x600079C")]
	[Address(RVA = "0x12FF9EC", Offset = "0x12FF9EC", VA = "0x12FF9EC", Slot = "5")]
	public virtual void Show(Vector3 pos, Vector3 sp)
	{
	}

	[Token(Token = "0x600079D")]
	[Address(RVA = "0x12FF740", Offset = "0x12FF740", VA = "0x12FF740")]
	protected void UpdateDelays()
	{
	}

	[Token(Token = "0x600079E")]
	[Address(RVA = "0x12FFBC4", Offset = "0x12FFBC4", VA = "0x12FFBC4", Slot = "6")]
	public virtual void Hide()
	{
	}

	[Token(Token = "0x600079F")]
	[Address(RVA = "0x12FFC78", Offset = "0x12FFC78", VA = "0x12FFC78")]
	public void Follow(Transform t)
	{
	}

	[Token(Token = "0x60007A0")]
	[Address(RVA = "0x12FFCF0", Offset = "0x12FFCF0", VA = "0x12FFCF0")]
	public FX_Effect()
	{
	}
}
[Token(Token = "0x2000187")]
public enum eFX
{
	[Token(Token = "0x400097E")]
	none = 0,
	[Token(Token = "0x400097F")]
	planeExplosion = 1,
	[Token(Token = "0x4000980")]
	planeGroundExplosion = 2,
	[Token(Token = "0x4000981")]
	bulletExplosion = 3,
	[Token(Token = "0x4000982")]
	flakExplosion = 4,
	[Token(Token = "0x4000983")]
	rocketExpl = 5,
	[Token(Token = "0x4000984")]
	bomberExplosion = 6,
	[Token(Token = "0x4000985")]
	gunGroundExplosion7 = 7,
	[Token(Token = "0x4000986")]
	bulletExplosion_double = 8,
	[Token(Token = "0x4000987")]
	rocketGroundExplosion = 9,
	[Token(Token = "0x4000988")]
	fireTruckExplosion = 10,
	[Token(Token = "0x4000989")]
	vechicleExplosion = 11,
	[Token(Token = "0x400098A")]
	AAExplosion = 12,
	[Token(Token = "0x400098B")]
	multiTeleport = 13,
	[Token(Token = "0x400098C")]
	artilleryShoot = 15,
	[Token(Token = "0x400098D")]
	smoke_White = 20,
	[Token(Token = "0x400098E")]
	smoke_Black = 21,
	[Token(Token = "0x400098F")]
	smoke_BlackFire = 22,
	[Token(Token = "0x4000990")]
	smoke_BlackFireBomber1 = 23,
	[Token(Token = "0x4000991")]
	smoke_BlackFireBomber2 = 24,
	[Token(Token = "0x4000992")]
	buildingExplosionSmall = 30,
	[Token(Token = "0x4000993")]
	buildingExplosionMed = 31,
	[Token(Token = "0x4000994")]
	buildingExplosionBig = 32,
	[Token(Token = "0x4000995")]
	waterSmallExplosion = 40,
	[Token(Token = "0x4000996")]
	waterBigExplosion = 41,
	[Token(Token = "0x4000997")]
	waterSmallExplosion_double = 42,
	[Token(Token = "0x4000998")]
	flareTrail = 43,
	[Token(Token = "0x4000999")]
	gunShell = 44,
	[Token(Token = "0x400099A")]
	aaGunSmoke = 45,
	[Token(Token = "0x400099B")]
	num = 46
}
[Token(Token = "0x2000188")]
public class FX_Manager : MonoBehaviour
{
	[Token(Token = "0x400099C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int arraySize;

	[Token(Token = "0x400099D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static FX_Manager instance;

	[Token(Token = "0x400099E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FX_Effect[] data;

	[Token(Token = "0x400099F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] prefab;

	[Token(Token = "0x60007A1")]
	[Address(RVA = "0x12FFD00", Offset = "0x12FFD00", VA = "0x12FFD00")]
	private void InitPrefabs()
	{
	}

	[Token(Token = "0x60007A2")]
	[Address(RVA = "0x12FFF50", Offset = "0x12FFF50", VA = "0x12FFF50")]
	private FX_Effect GetPrivate(int type, Vector3 pos, Vector3 speed)
	{
		return null;
	}

	[Token(Token = "0x60007A3")]
	[Address(RVA = "0x13002AC", Offset = "0x13002AC", VA = "0x13002AC")]
	public static FX_Effect Get(eFX type, Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x60007A4")]
	[Address(RVA = "0x1300574", Offset = "0x1300574", VA = "0x1300574")]
	public static FX_Effect Get(eFX type, Vector3 pos, Vector3 speed)
	{
		return null;
	}

	[Token(Token = "0x60007A5")]
	[Address(RVA = "0x130042C", Offset = "0x130042C", VA = "0x130042C")]
	public static void Init()
	{
	}

	[Token(Token = "0x60007A6")]
	[Address(RVA = "0x1300698", Offset = "0x1300698", VA = "0x1300698")]
	public FX_Manager()
	{
	}
}
[Token(Token = "0x2000189")]
public class FacilityContainer : MonoBehaviour
{
	[Token(Token = "0x60007A7")]
	[Address(RVA = "0x1300CBC", Offset = "0x1300CBC", VA = "0x1300CBC")]
	private void Start()
	{
	}

	[Token(Token = "0x60007A8")]
	[Address(RVA = "0x1300E38", Offset = "0x1300E38", VA = "0x1300E38")]
	public FacilityContainer()
	{
	}
}
[Token(Token = "0x200018A")]
public class FacilitySpawner : MonoBehaviour
{
	[Token(Token = "0x40009A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public eParty defaultParty;

	[Token(Token = "0x60007A9")]
	[Address(RVA = "0x130497C", Offset = "0x130497C", VA = "0x130497C")]
	private void Start()
	{
	}

	[Token(Token = "0x60007AA")]
	[Address(RVA = "0x1304D6C", Offset = "0x1304D6C", VA = "0x1304D6C")]
	public FacilitySpawner()
	{
	}
}
[Token(Token = "0x200018B")]
public class Factory : MonoBehaviour
{
	[Token(Token = "0x200018C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x917C34", Offset = "0x917C34")]
	private sealed class <Start>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Factory <>4__this;

		[Token(Token = "0x17000071")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007B4")]
			[Address(RVA = "0xBE8E78", Offset = "0xBE8E78", VA = "0xBE8E78", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000072")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007B6")]
			[Address(RVA = "0xBE8EC0", Offset = "0xBE8EC0", VA = "0xBE8EC0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007B1")]
		[Address(RVA = "0xBE8B74", Offset = "0xBE8B74", VA = "0xBE8B74")]
		[DebuggerHidden]
		public <Start>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60007B2")]
		[Address(RVA = "0xBE8BA0", Offset = "0xBE8BA0", VA = "0xBE8BA0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007B3")]
		[Address(RVA = "0xBE8BA4", Offset = "0xBE8BA4", VA = "0xBE8BA4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007B5")]
		[Address(RVA = "0xBE8E80", Offset = "0xBE8E80", VA = "0xBE8E80", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int count;

	[Token(Token = "0x40009A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int max;

	[Token(Token = "0x40009A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool skipPartyInitialization;

	[Token(Token = "0x60007AB")]
	[Address(RVA = "0x1304D60", Offset = "0x1304D60", VA = "0x1304D60")]
	public void SkipPartyInitialization()
	{
	}

	[Token(Token = "0x60007AC")]
	[Address(RVA = "0x1304D74", Offset = "0x1304D74", VA = "0x1304D74")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9255AC", Offset = "0x9255AC")]
	public IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60007AD")]
	[Address(RVA = "0x1304DE0", Offset = "0x1304DE0", VA = "0x1304DE0")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x60007AE")]
	[Address(RVA = "0x1304E4C", Offset = "0x1304E4C", VA = "0x1304E4C")]
	public void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60007AF")]
	[Address(RVA = "0x1304F14", Offset = "0x1304F14", VA = "0x1304F14")]
	public Factory()
	{
	}
}
[Token(Token = "0x200018D")]
public class Fade : MonoBehaviour
{
	[Token(Token = "0x200018E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x917C44", Offset = "0x917C44")]
	private sealed class <OutYield>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x40009BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string _text;

		[Token(Token = "0x40009BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool freeze;

		[Token(Token = "0x17000073")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007CB")]
			[Address(RVA = "0xBE9158", Offset = "0xBE9158", VA = "0xBE9158", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000074")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007CD")]
			[Address(RVA = "0xBE91A0", Offset = "0xBE91A0", VA = "0xBE91A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007C8")]
		[Address(RVA = "0xBE902C", Offset = "0xBE902C", VA = "0xBE902C")]
		[DebuggerHidden]
		public <OutYield>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x60007C9")]
		[Address(RVA = "0xBE9058", Offset = "0xBE9058", VA = "0xBE9058", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007CA")]
		[Address(RVA = "0xBE905C", Offset = "0xBE905C", VA = "0xBE905C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007CC")]
		[Address(RVA = "0xBE9160", Offset = "0xBE9160", VA = "0xBE9160", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200018F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x917C54", Offset = "0x917C54")]
	private sealed class <InYield>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x17000075")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007D1")]
			[Address(RVA = "0xBE8FDC", Offset = "0xBE8FDC", VA = "0xBE8FDC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000076")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007D3")]
			[Address(RVA = "0xBE9024", Offset = "0xBE9024", VA = "0xBE9024", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007CE")]
		[Address(RVA = "0xBE8EC8", Offset = "0xBE8EC8", VA = "0xBE8EC8")]
		[DebuggerHidden]
		public <InYield>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x60007CF")]
		[Address(RVA = "0xBE8EF4", Offset = "0xBE8EF4", VA = "0xBE8EF4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007D0")]
		[Address(RVA = "0xBE8EF8", Offset = "0xBE8EF8", VA = "0xBE8EF8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007D2")]
		[Address(RVA = "0xBE8FE4", Offset = "0xBE8FE4", VA = "0xBE8FE4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Renderer screenRenderer;

	[Token(Token = "0x40009A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fadeInOnAwakeTime;

	[Token(Token = "0x40009A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMesh subText;

	[Token(Token = "0x40009AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Fade instance;

	[Token(Token = "0x40009AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool fade;

	[Token(Token = "0x40009AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool fadeIn;

	[Token(Token = "0x40009AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	private bool freezeFadeIn;

	[Token(Token = "0x40009AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	private bool freezeAfterFadeOut;

	[Token(Token = "0x40009AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Color color;

	[Token(Token = "0x40009B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float StartTime;

	[Token(Token = "0x40009B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float duration;

	[Token(Token = "0x40009B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int black;

	[Token(Token = "0x40009B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform textParentOrg;

	[Token(Token = "0x40009B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 textPosOrg;

	[Token(Token = "0x40009B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Quaternion textRotOrg;

	[Token(Token = "0x40009B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string text;

	[Token(Token = "0x40009B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool initTextPos2Camera;

	[Token(Token = "0x40009B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static Vector3 textPos2Camera;

	[Token(Token = "0x40009B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static Quaternion textRot2Camera;

	[Token(Token = "0x60007B7")]
	[Address(RVA = "0x1304F20", Offset = "0x1304F20", VA = "0x1304F20")]
	public static void Out(float time, string _text = "", bool freeze = false)
	{
	}

	[Token(Token = "0x60007B8")]
	[Address(RVA = "0x13056E0", Offset = "0x13056E0", VA = "0x13056E0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92565C", Offset = "0x92565C")]
	public static IEnumerator OutYield(float time, string _text = "", bool freeze = false)
	{
		return null;
	}

	[Token(Token = "0x60007B9")]
	[Address(RVA = "0x1305770", Offset = "0x1305770", VA = "0x1305770")]
	public static bool IsFadingOut()
	{
		return default(bool);
	}

	[Token(Token = "0x60007BA")]
	[Address(RVA = "0x1305884", Offset = "0x1305884", VA = "0x1305884")]
	public static bool IsFading()
	{
		return default(bool);
	}

	[Token(Token = "0x60007BB")]
	[Address(RVA = "0x130596C", Offset = "0x130596C", VA = "0x130596C")]
	public static void FreezeFadeIn(bool freeze)
	{
	}

	[Token(Token = "0x60007BC")]
	[Address(RVA = "0x1305AE8", Offset = "0x1305AE8", VA = "0x1305AE8")]
	public static void FreezeAfterFadeOut(bool freeze)
	{
	}

	[Token(Token = "0x60007BD")]
	[Address(RVA = "0x1305C28", Offset = "0x1305C28", VA = "0x1305C28")]
	public static void In(float time, int frames = 15)
	{
	}

	[Token(Token = "0x60007BE")]
	[Address(RVA = "0x1305EE4", Offset = "0x1305EE4", VA = "0x1305EE4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9256BC", Offset = "0x9256BC")]
	public static IEnumerator InYield(float time)
	{
		return null;
	}

	[Token(Token = "0x60007BF")]
	[Address(RVA = "0x1305F58", Offset = "0x1305F58", VA = "0x1305F58")]
	public static bool IsFadingIn()
	{
		return default(bool);
	}

	[Token(Token = "0x60007C0")]
	[Address(RVA = "0x130606C", Offset = "0x130606C", VA = "0x130606C")]
	public static float GetFadePhase()
	{
		return default(float);
	}

	[Token(Token = "0x60007C1")]
	[Address(RVA = "0x1306148", Offset = "0x1306148", VA = "0x1306148")]
	public static float GetVal()
	{
		return default(float);
	}

	[Token(Token = "0x60007C2")]
	[Address(RVA = "0x1306278", Offset = "0x1306278", VA = "0x1306278")]
	public static void ChangeHint()
	{
	}

	[Token(Token = "0x60007C3")]
	[Address(RVA = "0x130627C", Offset = "0x130627C", VA = "0x130627C")]
	public void Awake()
	{
	}

	[Token(Token = "0x60007C4")]
	[Address(RVA = "0x1306644", Offset = "0x1306644", VA = "0x1306644")]
	public void Update()
	{
	}

	[Token(Token = "0x60007C5")]
	[Address(RVA = "0x1305338", Offset = "0x1305338", VA = "0x1305338")]
	public void UpdateScreen()
	{
	}

	[Token(Token = "0x60007C6")]
	[Address(RVA = "0x1306648", Offset = "0x1306648", VA = "0x1306648")]
	public Fade()
	{
	}
}
[Token(Token = "0x2000190")]
public class FakeMissile : MonoBehaviour
{
	[Token(Token = "0x40009C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x40009C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float delay;

	[Token(Token = "0x40009C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Renderer r;

	[Token(Token = "0x60007D4")]
	[Address(RVA = "0x1306D94", Offset = "0x1306D94", VA = "0x1306D94")]
	public void Awake()
	{
	}

	[Token(Token = "0x60007D5")]
	[Address(RVA = "0x1306DE8", Offset = "0x1306DE8", VA = "0x1306DE8")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x60007D6")]
	[Address(RVA = "0x1306E3C", Offset = "0x1306E3C", VA = "0x1306E3C")]
	public void Update()
	{
	}

	[Token(Token = "0x60007D7")]
	[Address(RVA = "0x1306F1C", Offset = "0x1306F1C", VA = "0x1306F1C")]
	public FakeMissile()
	{
	}
}
[Token(Token = "0x2000191")]
public class FallingItem : MonoBehaviour
{
	[Token(Token = "0x40009C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public eFX hitWater;

	[Token(Token = "0x40009C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool wasSplash;

	[Token(Token = "0x40009C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 size;

	[Token(Token = "0x60007D8")]
	[Address(RVA = "0x1306F30", Offset = "0x1306F30", VA = "0x1306F30")]
	public void SetSize(Vector3 size)
	{
	}

	[Token(Token = "0x60007D9")]
	[Address(RVA = "0x1306F4C", Offset = "0x1306F4C", VA = "0x1306F4C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60007DA")]
	[Address(RVA = "0x1307060", Offset = "0x1307060", VA = "0x1307060")]
	public FallingItem()
	{
	}
}
[Token(Token = "0x2000192")]
public class FallingPlaneSound : MonoBehaviour
{
	[Token(Token = "0x40009C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource _audio;

	[Token(Token = "0x40009C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool fadeOut;

	[Token(Token = "0x40009CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float volume;

	[Token(Token = "0x60007DB")]
	[Address(RVA = "0x1307070", Offset = "0x1307070", VA = "0x1307070")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007DC")]
	[Address(RVA = "0x13070F8", Offset = "0x13070F8", VA = "0x13070F8")]
	private void Update()
	{
	}

	[Token(Token = "0x60007DD")]
	[Address(RVA = "0x13072A0", Offset = "0x13072A0", VA = "0x13072A0")]
	public FallingPlaneSound()
	{
	}
}
[Token(Token = "0x2000193")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x917C64", Offset = "0x917C64")]
public class FirstSceneLoader : MonoBehaviour
{
	[Token(Token = "0x2000194")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x917C78", Offset = "0x917C78")]
	private sealed class <WaitLoad>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AsyncOperation <asyncOperation>5__2;

		[Token(Token = "0x40009D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <prevP>5__3;

		[Token(Token = "0x17000078")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007E7")]
			[Address(RVA = "0xBE9654", Offset = "0xBE9654", VA = "0xBE9654", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000079")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007E9")]
			[Address(RVA = "0xBE969C", Offset = "0xBE969C", VA = "0xBE969C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007E4")]
		[Address(RVA = "0xBE92D4", Offset = "0xBE92D4", VA = "0xBE92D4")]
		[DebuggerHidden]
		public <WaitLoad>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x60007E5")]
		[Address(RVA = "0xBE9300", Offset = "0xBE9300", VA = "0xBE9300", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007E6")]
		[Address(RVA = "0xBE9304", Offset = "0xBE9304", VA = "0xBE9304", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007E8")]
		[Address(RVA = "0xBE965C", Offset = "0xBE965C", VA = "0xBE965C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000195")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x917C88", Offset = "0x917C88")]
	private sealed class <DoNotStartYielded>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float <timeStart>5__2;

		[Token(Token = "0x1700007A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007ED")]
			[Address(RVA = "0xBE9284", Offset = "0xBE9284", VA = "0xBE9284", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007EF")]
			[Address(RVA = "0xBE92CC", Offset = "0xBE92CC", VA = "0xBE92CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007EA")]
		[Address(RVA = "0xBE91A8", Offset = "0xBE91A8", VA = "0xBE91A8")]
		[DebuggerHidden]
		public <DoNotStartYielded>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x60007EB")]
		[Address(RVA = "0xBE91D4", Offset = "0xBE91D4", VA = "0xBE91D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007EC")]
		[Address(RVA = "0xBE91D8", Offset = "0xBE91D8", VA = "0xBE91D8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007EE")]
		[Address(RVA = "0xBE928C", Offset = "0xBE928C", VA = "0xBE928C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject hngLogo;

	[Token(Token = "0x40009CC")]
	public const float hngLogoFadeIn = 0.5f;

	[Token(Token = "0x40009CD")]
	public const float sceneDelay = 0.25f;

	[Token(Token = "0x40009CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GUIStyle msgStyle;

	[Token(Token = "0x40009CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static FirstSceneLoader instance;

	[Token(Token = "0x17000077")]
	public static GameObject Logo
	{
		[Token(Token = "0x60007DE")]
		[Address(RVA = "0x1307E3C", Offset = "0x1307E3C", VA = "0x1307E3C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60007DF")]
	[Address(RVA = "0x1307F34", Offset = "0x1307F34", VA = "0x1307F34")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007E0")]
	[Address(RVA = "0x1307FD4", Offset = "0x1307FD4", VA = "0x1307FD4")]
	private void Start()
	{
	}

	[Token(Token = "0x60007E1")]
	[Address(RVA = "0x13080A8", Offset = "0x13080A8", VA = "0x13080A8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9257BC", Offset = "0x9257BC")]
	private IEnumerator WaitLoad()
	{
		return null;
	}

	[Token(Token = "0x60007E2")]
	[Address(RVA = "0x1308104", Offset = "0x1308104", VA = "0x1308104")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92581C", Offset = "0x92581C")]
	private IEnumerator DoNotStartYielded()
	{
		return null;
	}

	[Token(Token = "0x60007E3")]
	[Address(RVA = "0x1308160", Offset = "0x1308160", VA = "0x1308160")]
	public FirstSceneLoader()
	{
	}
}
[Token(Token = "0x2000196")]
public class FlyModeButton : MonoBehaviour
{
	[Token(Token = "0x40009D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMesh text;

	[Token(Token = "0x40009D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMesh textReward;

	[Token(Token = "0x40009D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject helpButton;

	[Token(Token = "0x60007F0")]
	[Address(RVA = "0x1462360", Offset = "0x1462360", VA = "0x1462360")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007F1")]
	[Address(RVA = "0x14625F0", Offset = "0x14625F0", VA = "0x14625F0")]
	private void Click()
	{
	}

	[Token(Token = "0x60007F2")]
	[Address(RVA = "0x14626F4", Offset = "0x14626F4", VA = "0x14626F4")]
	private void Prev()
	{
	}

	[Token(Token = "0x60007F3")]
	[Address(RVA = "0x1462364", Offset = "0x1462364", VA = "0x1462364")]
	private void Print()
	{
	}

	[Token(Token = "0x60007F4")]
	[Address(RVA = "0x1462BB0", Offset = "0x1462BB0", VA = "0x1462BB0")]
	public FlyModeButton()
	{
	}
}
[Token(Token = "0x2000197")]
public class FollowTransform : MonoBehaviour
{
	[Token(Token = "0x40009DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x40009DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 localPos;

	[Token(Token = "0x60007F5")]
	[Address(RVA = "0x1462BB8", Offset = "0x1462BB8", VA = "0x1462BB8")]
	private void SetTarget(Transform t)
	{
	}

	[Token(Token = "0x60007F6")]
	[Address(RVA = "0x1462C14", Offset = "0x1462C14", VA = "0x1462C14")]
	private void SetTargetLocalPos(Vector3 pos)
	{
	}

	[Token(Token = "0x60007F7")]
	[Address(RVA = "0x1462C20", Offset = "0x1462C20", VA = "0x1462C20")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60007F8")]
	[Address(RVA = "0x1462D54", Offset = "0x1462D54", VA = "0x1462D54")]
	public FollowTransform()
	{
	}
}
[Token(Token = "0x2000198")]
public class ForestChunk : MonoBehaviour
{
	[StructLayout(2)]
	[Token(Token = "0x2000199")]
	private struct PalmSort
	{
		[Token(Token = "0x4000A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int distance;

		[Token(Token = "0x4000A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int index;
	}

	[Token(Token = "0x40009DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Color colRight;

	[Token(Token = "0x40009DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Color colLeft;

	[Token(Token = "0x40009DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static Color colTopAdd;

	[Token(Token = "0x40009DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3[] palmPos;

	[Token(Token = "0x40009E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool[] palmShow;

	[Token(Token = "0x40009E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector2[] palmSI;

	[Token(Token = "0x40009E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Mesh[] meshes;

	[Token(Token = "0x40009E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int treesCount;

	[Token(Token = "0x40009E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int spriteNum;

	[Token(Token = "0x40009E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int sortDirection;

	[Token(Token = "0x40009E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private readonly float scaleMin;

	[Token(Token = "0x40009E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private readonly float scaleMax;

	[Token(Token = "0x40009E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector3[] treesPos;

	[Token(Token = "0x40009E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector3[] priorityTreesPos;

	[Token(Token = "0x40009EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int posNum;

	[Token(Token = "0x40009EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int priorityPosNum;

	[Token(Token = "0x40009EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int maxStandardTrees;

	[Token(Token = "0x40009ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int maxPriorityTrees;

	[Token(Token = "0x40009EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int generatedStandardTrees;

	[Token(Token = "0x40009EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int generatedPriorityTrees;

	[Token(Token = "0x40009F0")]
	private const int kCachePrepareMaxTrees = 4000;

	[Token(Token = "0x40009F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 lastSortPos;

	[Token(Token = "0x40009F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Vector3 center;

	[Token(Token = "0x40009F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3 chunkWorldPos;

	[Token(Token = "0x40009F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Renderer r;

	[Token(Token = "0x40009F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private MeshFilter mf;

	[Token(Token = "0x40009F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Material mat;

	[Token(Token = "0x40009F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private int queue;

	[Token(Token = "0x40009F8")]
	private const float minDistBetweenTrees = 22f;

	[Token(Token = "0x40009F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Vector3[] tmpPos;

	[Token(Token = "0x40009FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Vector2[] tmpSI;

	[Token(Token = "0x40009FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private PalmSort[] palmSort;

	[Token(Token = "0x40009FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static PalmSort[] tmpSortArray;

	[Token(Token = "0x40009FD")]
	private const int plantingGridSize = 91;

	[Token(Token = "0x40009FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private unsafe bool* weakPtrPlantedTreePos;

	[Token(Token = "0x40009FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private GCHandle gcHandlePlantArray;

	[Token(Token = "0x4000A00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private MultiplayerSync.SyncState mSync;

	[Token(Token = "0x60007F9")]
	[Address(RVA = "0x1462D88", Offset = "0x1462D88", VA = "0x1462D88")]
	public void Awake()
	{
	}

	[Token(Token = "0x60007FA")]
	[Address(RVA = "0x1462F24", Offset = "0x1462F24", VA = "0x1462F24")]
	private void SetupNearTreeGridArray()
	{
	}

	[Token(Token = "0x60007FB")]
	[Address(RVA = "0x1462F94", Offset = "0x1462F94", VA = "0x1462F94")]
	private int PositionToGridIndex(Vector3 pos)
	{
		return default(int);
	}

	[Token(Token = "0x60007FC")]
	[Address(RVA = "0x1463030", Offset = "0x1463030", VA = "0x1463030")]
	public void Init(int sn)
	{
	}

	[Token(Token = "0x60007FD")]
	[Address(RVA = "0x146310C", Offset = "0x146310C", VA = "0x146310C")]
	public void PrepareTreeAtPosition(Vector3 pos)
	{
	}

	[Token(Token = "0x60007FE")]
	[Address(RVA = "0x14631C4", Offset = "0x14631C4", VA = "0x14631C4")]
	public void PreparePriorityTreeAtPosition(Vector3 pos)
	{
	}

	[Token(Token = "0x60007FF")]
	[Address(RVA = "0x1463280", Offset = "0x1463280", VA = "0x1463280")]
	private unsafe void CreateTree(RaycastHit hit, Vector3* ptrPos, Vector2* ptrSI, ref int generatorCounter)
	{
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000800")]
	[Address(RVA = "0x1463500", Offset = "0x1463500", VA = "0x1463500")]
	public SpherecastCommand CreateCommand(Vector3 pos)
	{
		return default(SpherecastCommand);
	}

	[Token(Token = "0x6000801")]
	[Address(RVA = "0x14635E4", Offset = "0x14635E4", VA = "0x14635E4")]
	public void UpdateChunk(Vector3 camPos, float planeH, int sortDir)
	{
	}

	[Token(Token = "0x6000802")]
	[Address(RVA = "0x146373C", Offset = "0x146373C", VA = "0x146373C")]
	public void PrepareGenerate()
	{
	}

	[Token(Token = "0x6000803")]
	[Address(RVA = "0x14637BC", Offset = "0x14637BC", VA = "0x14637BC")]
	public void FinishGenerate()
	{
	}

	[Token(Token = "0x6000804")]
	[Address(RVA = "0x1463974", Offset = "0x1463974", VA = "0x1463974")]
	public int GenerateStandard(NativeArray<RaycastHit> result, int startIdx)
	{
		return default(int);
	}

	[Token(Token = "0x6000805")]
	[Address(RVA = "0x1463A70", Offset = "0x1463A70", VA = "0x1463A70")]
	public int GeneratePriority(NativeArray<RaycastHit> result, int startIdx)
	{
		return default(int);
	}

	[Token(Token = "0x6000806")]
	[Address(RVA = "0x1463B6C", Offset = "0x1463B6C", VA = "0x1463B6C")]
	private void Sort()
	{
	}

	[Token(Token = "0x6000807")]
	[Address(RVA = "0x1463D50", Offset = "0x1463D50", VA = "0x1463D50")]
	private unsafe void RadixSort(PalmSort* keys, int len)
	{
	}

	[Token(Token = "0x6000808")]
	[Address(RVA = "0x14638F0", Offset = "0x14638F0", VA = "0x14638F0")]
	public void GenerateMesh()
	{
	}

	[Token(Token = "0x6000809")]
	[Address(RVA = "0x1463E80", Offset = "0x1463E80", VA = "0x1463E80")]
	private void GenerateOneMesh()
	{
	}

	[Token(Token = "0x600080A")]
	[Address(RVA = "0x14636D0", Offset = "0x14636D0", VA = "0x14636D0")]
	private void UpdateMesh()
	{
	}

	[Token(Token = "0x600080B")]
	[Address(RVA = "0x1464478", Offset = "0x1464478", VA = "0x1464478")]
	public ForestChunk()
	{
	}
}
[Token(Token = "0x200019A")]
public class ForestGenerator : MonoBehaviour
{
	[Token(Token = "0x200019B")]
	public delegate bool RequestTreePlacement(Vector3 pos);

	[Token(Token = "0x200019C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x917C98", Offset = "0x917C98")]
	private sealed class <Start>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ForestGenerator <>4__this;

		[Token(Token = "0x4000A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x1700007C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000824")]
			[Address(RVA = "0xBE983C", Offset = "0xBE983C", VA = "0xBE983C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000826")]
			[Address(RVA = "0xBE9884", Offset = "0xBE9884", VA = "0xBE9884", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000821")]
		[Address(RVA = "0xBE96F0", Offset = "0xBE96F0", VA = "0xBE96F0")]
		[DebuggerHidden]
		public <Start>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x6000822")]
		[Address(RVA = "0xBE971C", Offset = "0xBE971C", VA = "0xBE971C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000823")]
		[Address(RVA = "0xBE9720", Offset = "0xBE9720", VA = "0xBE9720", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000825")]
		[Address(RVA = "0xBE9844", Offset = "0xBE9844", VA = "0xBE9844", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool denseForest;

	[Token(Token = "0x4000A04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int spriteNum;

	[Token(Token = "0x4000A05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int posNum;

	[Token(Token = "0x4000A06")]
	public const float kChunkSize = 2000f;

	[Token(Token = "0x4000A07")]
	public const int kChunksInRow = 4;

	[Token(Token = "0x4000A08")]
	public const int kTotalChunks = 16;

	[Token(Token = "0x4000A09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ForestChunk[] chunk;

	[Token(Token = "0x4000A0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 lastCamPos;

	[Token(Token = "0x4000A0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int treesCount;

	[Token(Token = "0x4000A0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool generateOnStart;

	[Token(Token = "0x4000A0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int[] chunkSortedIdx;

	[Token(Token = "0x4000A0E")]
	public const int treesNearRoads = 1000;

	[Token(Token = "0x4000A0F")]
	public const int treesTownTree = 1000;

	[Token(Token = "0x4000A10")]
	public const int kMaxTreesInChunk = 2000;

	[Token(Token = "0x4000A11")]
	public const int maxTrees = 32000;

	[Token(Token = "0x4000A12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static ForestGenerator instance;

	[Token(Token = "0x4000A13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private MultiplayerSync.SyncState mSync;

	[Token(Token = "0x4000A14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private NativeArray<RaycastHit> standardTreesResults;

	[Token(Token = "0x4000A15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private NativeArray<RaycastHit> priorityTreesResults;

	[Token(Token = "0x4000A16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private NativeArray<SpherecastCommand> standardRayCommands;

	[Token(Token = "0x4000A17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private NativeArray<SpherecastCommand> priorityRayCommands;

	[Token(Token = "0x4000A18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private JobHandle? standardRayHandle;

	[Token(Token = "0x4000A19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private JobHandle? priorityRayHandle;

	[Token(Token = "0x4000A1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private unsafe Color* weakPtrColors;

	[Token(Token = "0x4000A1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private unsafe int* weakPtrTriangles;

	[Token(Token = "0x4000A1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Vector3 lastSortPos;

	[Token(Token = "0x600080D")]
	[Address(RVA = "0x14645AC", Offset = "0x14645AC", VA = "0x14645AC")]
	public void Awake()
	{
	}

	[Token(Token = "0x600080E")]
	[Address(RVA = "0x1464908", Offset = "0x1464908", VA = "0x1464908")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92591C", Offset = "0x92591C")]
	public IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600080F")]
	[Address(RVA = "0x1464974", Offset = "0x1464974", VA = "0x1464974")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000810")]
	[Address(RVA = "0x1464B24", Offset = "0x1464B24", VA = "0x1464B24")]
	public unsafe void CacheTerrainData(int* tris, Color* colors)
	{
	}

	[Token(Token = "0x6000811")]
	[Address(RVA = "0x1464B2C", Offset = "0x1464B2C", VA = "0x1464B2C")]
	public static void AddTreesAroundPos(Vector3 pos, bool dense, [Optional] float3 noiseUV, float fogEnd = 1000f, [Optional] RequestTreePlacement canCreate)
	{
	}

	[Token(Token = "0x6000812")]
	[Address(RVA = "0x1464FE4", Offset = "0x1464FE4", VA = "0x1464FE4")]
	public static void AddTreeTown(Vector3 pos)
	{
	}

	[Token(Token = "0x6000813")]
	[Address(RVA = "0x1464ECC", Offset = "0x1464ECC", VA = "0x1464ECC")]
	private void AddTreePos(Vector3 pos)
	{
	}

	[Token(Token = "0x6000814")]
	[Address(RVA = "0x14650C8", Offset = "0x14650C8", VA = "0x14650C8")]
	private static int FindChunk(Vector3 pos)
	{
		return default(int);
	}

	[Token(Token = "0x6000815")]
	[Address(RVA = "0x14651C8", Offset = "0x14651C8", VA = "0x14651C8")]
	public void Generate()
	{
	}

	[Token(Token = "0x6000816")]
	[Address(RVA = "0x1465294", Offset = "0x1465294", VA = "0x1465294")]
	private void PrepareRaycastCommands()
	{
	}

	[Token(Token = "0x6000817")]
	[Address(RVA = "0x1464978", Offset = "0x1464978", VA = "0x1464978")]
	private void DisposeJob()
	{
	}

	[Token(Token = "0x6000818")]
	[Address(RVA = "0x14657A8", Offset = "0x14657A8", VA = "0x14657A8")]
	private void ProcessJobComplete()
	{
	}

	[Token(Token = "0x6000819")]
	[Address(RVA = "0x14659C0", Offset = "0x14659C0", VA = "0x14659C0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600081A")]
	[Address(RVA = "0x1465BC0", Offset = "0x1465BC0", VA = "0x1465BC0")]
	private int UpdateSortDirection()
	{
		return default(int);
	}

	[Token(Token = "0x600081B")]
	[Address(RVA = "0x1465C98", Offset = "0x1465C98", VA = "0x1465C98")]
	public ForestGenerator()
	{
	}
}
[Token(Token = "0x200019D")]
public class GameModeParams
{
	[Token(Token = "0x4000A21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool autoAim;

	[Token(Token = "0x4000A22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public bool autoAimPlane;

	[Token(Token = "0x4000A23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	public bool crosshair;

	[Token(Token = "0x4000A24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
	public bool bombCrosshair;

	[Token(Token = "0x4000A25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool radar;

	[Token(Token = "0x4000A26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	public bool switchPlanes;

	[Token(Token = "0x4000A27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
	public bool realisticDamage;

	[Token(Token = "0x4000A28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
	public bool takeOffLanding;

	[Token(Token = "0x4000A29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool flightDir;

	[Token(Token = "0x6000827")]
	[Address(RVA = "0x146A01C", Offset = "0x146A01C", VA = "0x146A01C")]
	public GameModeParams(bool autoAimGround, bool autoAimPlane, bool crosshair, bool bombCrosshair, bool radar, bool switchPlanes, bool realisticDamage, bool takeOffLanding, bool flightDir)
	{
	}

	[Token(Token = "0x6000828")]
	[Address(RVA = "0x146ABF0", Offset = "0x146ABF0", VA = "0x146ABF0")]
	public float GetRewardMul()
	{
		return default(float);
	}
}
[Token(Token = "0x200019E")]
public class GameMode : MonoBehaviour
{
	[Token(Token = "0x200019F")]
	public enum DifficultyMode
	{
		[Token(Token = "0x4000A2D")]
		easy,
		[Token(Token = "0x4000A2E")]
		medium,
		[Token(Token = "0x4000A2F")]
		hard,
		[Token(Token = "0x4000A30")]
		num
	}

	[Token(Token = "0x20001A0")]
	public enum FlightModel
	{
		[Token(Token = "0x4000A32")]
		arcade,
		[Token(Token = "0x4000A33")]
		realistic
	}

	[Token(Token = "0x4000A2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static DifficultyMode mode;

	[Token(Token = "0x4000A2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static List<GameModeParams> modes;

	[Token(Token = "0x6000829")]
	[Address(RVA = "0x1469DFC", Offset = "0x1469DFC", VA = "0x1469DFC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600082A")]
	[Address(RVA = "0x1469E54", Offset = "0x1469E54", VA = "0x1469E54")]
	public static void Init()
	{
	}

	[Token(Token = "0x600082B")]
	[Address(RVA = "0x146A0D4", Offset = "0x146A0D4", VA = "0x146A0D4")]
	public static void Reset()
	{
	}

	[Token(Token = "0x600082C")]
	[Address(RVA = "0x146A138", Offset = "0x146A138", VA = "0x146A138")]
	public static void Set(DifficultyMode i)
	{
	}

	[Token(Token = "0x600082D")]
	[Address(RVA = "0x1462814", Offset = "0x1462814", VA = "0x1462814")]
	public static DifficultyMode Get()
	{
		return default(DifficultyMode);
	}

	[Token(Token = "0x600082E")]
	[Address(RVA = "0x146A1A0", Offset = "0x146A1A0", VA = "0x146A1A0")]
	public static int GetI()
	{
		return default(int);
	}

	[Token(Token = "0x600082F")]
	[Address(RVA = "0x1462654", Offset = "0x1462654", VA = "0x1462654")]
	public static void Next()
	{
	}

	[Token(Token = "0x6000830")]
	[Address(RVA = "0x1462758", Offset = "0x1462758", VA = "0x1462758")]
	public static void Prev()
	{
	}

	[Token(Token = "0x6000831")]
	[Address(RVA = "0x146A1F8", Offset = "0x146A1F8", VA = "0x146A1F8")]
	public static bool CanAim()
	{
		return default(bool);
	}

	[Token(Token = "0x6000832")]
	[Address(RVA = "0x146A3D8", Offset = "0x146A3D8", VA = "0x146A3D8")]
	public static bool CanAimPlanes()
	{
		return default(bool);
	}

	[Token(Token = "0x6000833")]
	[Address(RVA = "0x146A5B8", Offset = "0x146A5B8", VA = "0x146A5B8")]
	public static bool ShowCrosshair()
	{
		return default(bool);
	}

	[Token(Token = "0x6000834")]
	[Address(RVA = "0x146A71C", Offset = "0x146A71C", VA = "0x146A71C")]
	public static bool ShowBombCrosshair()
	{
		return default(bool);
	}

	[Token(Token = "0x6000835")]
	[Address(RVA = "0x146A7C4", Offset = "0x146A7C4", VA = "0x146A7C4")]
	public static bool ShowRadar()
	{
		return default(bool);
	}

	[Token(Token = "0x6000836")]
	[Address(RVA = "0x146A928", Offset = "0x146A928", VA = "0x146A928")]
	public static bool CanSwitchPlanes()
	{
		return default(bool);
	}

	[Token(Token = "0x6000837")]
	[Address(RVA = "0x146A9D0", Offset = "0x146A9D0", VA = "0x146A9D0")]
	public static bool TakeOff()
	{
		return default(bool);
	}

	[Token(Token = "0x6000838")]
	[Address(RVA = "0x146AAC4", Offset = "0x146AAC4", VA = "0x146AAC4")]
	public static bool RealisticDamage()
	{
		return default(bool);
	}

	[Token(Token = "0x6000839")]
	[Address(RVA = "0x1462AB4", Offset = "0x1462AB4", VA = "0x1462AB4")]
	public static float GetRewardMul()
	{
		return default(float);
	}

	[Token(Token = "0x600083A")]
	[Address(RVA = "0x146AC4C", Offset = "0x146AC4C", VA = "0x146AC4C")]
	public static bool ShowFlightDir()
	{
		return default(bool);
	}

	[Token(Token = "0x600083B")]
	[Address(RVA = "0x146ACF4", Offset = "0x146ACF4", VA = "0x146ACF4")]
	public static float GetDamageArmorMul()
	{
		return default(float);
	}

	[Token(Token = "0x600083C")]
	[Address(RVA = "0x146ACFC", Offset = "0x146ACFC", VA = "0x146ACFC")]
	public static string GetSaveString()
	{
		return null;
	}

	[Token(Token = "0x600083D")]
	[Address(RVA = "0x146AD74", Offset = "0x146AD74", VA = "0x146AD74")]
	public static void LoadFromString(string save)
	{
	}

	[Token(Token = "0x600083E")]
	[Address(RVA = "0x146AE78", Offset = "0x146AE78", VA = "0x146AE78")]
	public GameMode()
	{
	}
}
[Token(Token = "0x20001A1")]
public class GamePromoWindow : MonoBehaviour
{
	[Token(Token = "0x20001A2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x917CA8", Offset = "0x917CA8")]
	private sealed class <PlayVideoDelayed>d__51 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x4000A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GamePromoWindow <>4__this;

		[Token(Token = "0x1700007E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600085D")]
			[Address(RVA = "0xE5B6F4", Offset = "0xE5B6F4", VA = "0xE5B6F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600085F")]
			[Address(RVA = "0xE5B73C", Offset = "0xE5B73C", VA = "0xE5B73C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600085A")]
		[Address(RVA = "0xE5B560", Offset = "0xE5B560", VA = "0xE5B560")]
		[DebuggerHidden]
		public <PlayVideoDelayed>d__51(int <>1__state)
		{
		}

		[Token(Token = "0x600085B")]
		[Address(RVA = "0xE5B58C", Offset = "0xE5B58C", VA = "0xE5B58C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600085C")]
		[Address(RVA = "0xE5B590", Offset = "0xE5B590", VA = "0xE5B590", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600085E")]
		[Address(RVA = "0xE5B6FC", Offset = "0xE5B6FC", VA = "0xE5B6FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001A3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x917CB8", Offset = "0x917CB8")]
	private sealed class <LaunchAppDelayed>d__61 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GamePromoWindow <>4__this;

		[Token(Token = "0x4000A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ulong appID;

		[Token(Token = "0x17000080")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000863")]
			[Address(RVA = "0xE5B510", Offset = "0xE5B510", VA = "0xE5B510", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000081")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000865")]
			[Address(RVA = "0xE5B558", Offset = "0xE5B558", VA = "0xE5B558", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000860")]
		[Address(RVA = "0xE5B424", Offset = "0xE5B424", VA = "0xE5B424")]
		[DebuggerHidden]
		public <LaunchAppDelayed>d__61(int <>1__state)
		{
		}

		[Token(Token = "0x6000861")]
		[Address(RVA = "0xE5B450", Offset = "0xE5B450", VA = "0xE5B450", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000862")]
		[Address(RVA = "0xE5B454", Offset = "0xE5B454", VA = "0xE5B454", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000864")]
		[Address(RVA = "0xE5B518", Offset = "0xE5B518", VA = "0xE5B518", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform root;

	[Token(Token = "0x4000A35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject[] showInPreview;

	[Token(Token = "0x4000A36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject[] showInFull;

	[Token(Token = "0x4000A37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform openPos;

	[Token(Token = "0x4000A38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject videoObject;

	[Token(Token = "0x4000A39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject buttonPlaying;

	[Token(Token = "0x4000A3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject buttonPaused;

	[Token(Token = "0x4000A3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject buttonMuteOff;

	[Token(Token = "0x4000A3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject buttonMuteOn;

	[Token(Token = "0x4000A3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private TextMesh textTime;

	[Token(Token = "0x4000A3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private GameObject buttonReplay;

	[Token(Token = "0x4000A3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private float playVideoDelay;

	[Token(Token = "0x4000A40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[SerializeField]
	private float replayVideoDelay;

	[Token(Token = "0x4000A41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private float trailerAudioVolume;

	[Token(Token = "0x4000A42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[SerializeField]
	private float openTime;

	[Token(Token = "0x4000A43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private float closeTime;

	[Token(Token = "0x4000A44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Vector3 previewPos;

	[Token(Token = "0x4000A45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3 previewScale;

	[Token(Token = "0x4000A46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector3 fullPos;

	[Token(Token = "0x4000A47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Vector3 fullScale;

	[Token(Token = "0x4000A48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private YoutubePlayer player;

	[Token(Token = "0x4000A49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool waitingForClosedBook;

	[Token(Token = "0x4000A4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
	private bool open;

	[Token(Token = "0x4000A4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC2")]
	private bool opening;

	[Token(Token = "0x4000A4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC3")]
	private bool closing;

	[Token(Token = "0x4000A4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float startAnimTime;

	[Token(Token = "0x4000A4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool playing;

	[Token(Token = "0x4000A4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	private bool videoWasPlaying;

	[Token(Token = "0x4000A50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCA")]
	private bool muted;

	[Token(Token = "0x4000A51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCB")]
	private bool playedBeginning;

	[Token(Token = "0x4000A52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private bool appPausedInPlaying;

	[Token(Token = "0x4000A53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
	private bool appUnpausedInPlaying;

	[Token(Token = "0x4000A54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCE")]
	private bool workaroundNotPlaying1Done;

	[Token(Token = "0x4000A55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float workaroundNotPlaying1Dt;

	[Token(Token = "0x4000A56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private bool workaroundNotPlaying2Done;

	[Token(Token = "0x4000A57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float workaroundNotPlaying2Dt;

	[Token(Token = "0x4000A58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int dismissKey;

	[Token(Token = "0x4000A59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static GamePromoWindow instance;

	[Token(Token = "0x6000840")]
	[Address(RVA = "0x1473698", Offset = "0x1473698", VA = "0x1473698")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000841")]
	[Address(RVA = "0x1473C0C", Offset = "0x1473C0C", VA = "0x1473C0C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000842")]
	[Address(RVA = "0x1473DEC", Offset = "0x1473DEC", VA = "0x1473DEC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000843")]
	[Address(RVA = "0x147485C", Offset = "0x147485C", VA = "0x147485C")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x6000844")]
	[Address(RVA = "0x1473C94", Offset = "0x1473C94", VA = "0x1473C94")]
	private void Setup(bool full)
	{
	}

	[Token(Token = "0x6000845")]
	[Address(RVA = "0x14745A0", Offset = "0x14745A0", VA = "0x14745A0")]
	private void InitPlayer()
	{
	}

	[Token(Token = "0x6000846")]
	[Address(RVA = "0x14749DC", Offset = "0x14749DC", VA = "0x14749DC")]
	private void UpdateVideoButtons()
	{
	}

	[Token(Token = "0x6000847")]
	[Address(RVA = "0x1474B58", Offset = "0x1474B58", VA = "0x1474B58")]
	private string GetConfigValue(string key)
	{
		return null;
	}

	[Token(Token = "0x6000848")]
	[Address(RVA = "0x1474CE8", Offset = "0x1474CE8", VA = "0x1474CE8")]
	private string GetBundleId()
	{
		return null;
	}

	[Token(Token = "0x6000849")]
	[Address(RVA = "0x1474998", Offset = "0x1474998", VA = "0x1474998")]
	private string GetTrailer()
	{
		return null;
	}

	[Token(Token = "0x600084A")]
	[Address(RVA = "0x1474934", Offset = "0x1474934", VA = "0x1474934")]
	private YoutubeSettings.YoutubeVideoQuality GetTrailerQuality()
	{
		return default(YoutubeSettings.YoutubeVideoQuality);
	}

	[Token(Token = "0x600084B")]
	[Address(RVA = "0x1474D2C", Offset = "0x1474D2C", VA = "0x1474D2C")]
	private string GetInstallLink()
	{
		return null;
	}

	[Token(Token = "0x600084C")]
	[Address(RVA = "0x1473760", Offset = "0x1473760", VA = "0x1473760")]
	public bool IsGamePromoAvailable()
	{
		return default(bool);
	}

	[Token(Token = "0x600084D")]
	[Address(RVA = "0x1474710", Offset = "0x1474710", VA = "0x1474710")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9259CC", Offset = "0x9259CC")]
	private IEnumerator PlayVideoDelayed(float delay)
	{
		return null;
	}

	[Token(Token = "0x600084E")]
	[Address(RVA = "0x147478C", Offset = "0x147478C", VA = "0x147478C")]
	private void OnClickOpen()
	{
	}

	[Token(Token = "0x600084F")]
	[Address(RVA = "0x1474D70", Offset = "0x1474D70", VA = "0x1474D70")]
	public bool IsOpen()
	{
		return default(bool);
	}

	[Token(Token = "0x6000850")]
	[Address(RVA = "0x1474DCC", Offset = "0x1474DCC", VA = "0x1474DCC")]
	private void OnClickBack()
	{
	}

	[Token(Token = "0x6000851")]
	[Address(RVA = "0x1474EF8", Offset = "0x1474EF8", VA = "0x1474EF8")]
	private void OnClickReplay()
	{
	}

	[Token(Token = "0x6000852")]
	[Address(RVA = "0x1474F60", Offset = "0x1474F60", VA = "0x1474F60")]
	private void OnClickPlay()
	{
	}

	[Token(Token = "0x6000853")]
	[Address(RVA = "0x1475038", Offset = "0x1475038", VA = "0x1475038")]
	private void OnClickPause()
	{
	}

	[Token(Token = "0x6000854")]
	[Address(RVA = "0x14750E4", Offset = "0x14750E4", VA = "0x14750E4")]
	private void OnClickMute()
	{
	}

	[Token(Token = "0x6000855")]
	[Address(RVA = "0x1475140", Offset = "0x1475140", VA = "0x1475140")]
	private void OnClickUnmute()
	{
	}

	[Token(Token = "0x6000856")]
	[Address(RVA = "0x1475198", Offset = "0x1475198", VA = "0x1475198")]
	private void OnClickInstall()
	{
	}

	[Token(Token = "0x6000857")]
	[Address(RVA = "0x1475284", Offset = "0x1475284", VA = "0x1475284")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x925A2C", Offset = "0x925A2C")]
	private IEnumerator LaunchAppDelayed(ulong appID)
	{
		return null;
	}

	[Token(Token = "0x6000858")]
	[Address(RVA = "0x14752FC", Offset = "0x14752FC", VA = "0x14752FC")]
	public GamePromoWindow()
	{
	}
}
[Token(Token = "0x20001A4")]
public class NetPlaneData
{
	[Token(Token = "0x4000A62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 position;

	[Token(Token = "0x4000A63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 eulerAngles;

	[Token(Token = "0x6000866")]
	[Address(RVA = "0xCB6350", Offset = "0xCB6350", VA = "0xCB6350")]
	public void Copy(NetPlaneData d)
	{
	}

	[Token(Token = "0x6000867")]
	[Address(RVA = "0xCB6384", Offset = "0xCB6384", VA = "0xCB6384")]
	public NetPlaneData()
	{
	}
}
[Token(Token = "0x20001A5")]
public class GhostPlane : MonoBehaviour
{
	[Token(Token = "0x4000A64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly float syncTime;

	[Token(Token = "0x4000A65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly float pos_drag;

	[Token(Token = "0x4000A66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly float pos_accMul;

	[Token(Token = "0x4000A67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly float rot_drag;

	[Token(Token = "0x4000A68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly float rot_accMul;

	[Token(Token = "0x4000A69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static readonly float speedAddMul;

	[Token(Token = "0x4000A6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float time;

	[Token(Token = "0x4000A6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 pos_localSpeed;

	[Token(Token = "0x4000A6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 pos_acc;

	[Token(Token = "0x4000A6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 rot_localSpeed;

	[Token(Token = "0x4000A6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 rot_acc;

	[Token(Token = "0x4000A6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private NetPlaneData netPlaneData;

	[Token(Token = "0x4000A70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private PlaneBody pb;

	[Token(Token = "0x4000A71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private byte[] buffCompress;

	[Token(Token = "0x6000868")]
	[Address(RVA = "0x1477274", Offset = "0x1477274", VA = "0x1477274")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000869")]
	[Address(RVA = "0x14772D0", Offset = "0x14772D0", VA = "0x14772D0")]
	private void Start()
	{
	}

	[Token(Token = "0x600086A")]
	[Address(RVA = "0x1477324", Offset = "0x1477324", VA = "0x1477324")]
	private void Update()
	{
	}

	[Token(Token = "0x600086B")]
	[Address(RVA = "0x14775C0", Offset = "0x14775C0", VA = "0x14775C0")]
	private void FlyNetPlane(Transform t)
	{
	}

	[Token(Token = "0x600086C")]
	[Address(RVA = "0x14777CC", Offset = "0x14777CC", VA = "0x14777CC")]
	public void GetPlaneData(PlaneBody pb, NetPlaneData npd)
	{
	}

	[Token(Token = "0x600086D")]
	[Address(RVA = "0x14778F0", Offset = "0x14778F0", VA = "0x14778F0")]
	public void SetPlaneData(Transform t, NetPlaneData npd, bool turnBack)
	{
	}

	[Token(Token = "0x600086E")]
	[Address(RVA = "0x1477AF0", Offset = "0x1477AF0", VA = "0x1477AF0")]
	public float GetRecvSpeed()
	{
		return default(float);
	}

	[Token(Token = "0x600086F")]
	[Address(RVA = "0x1477A94", Offset = "0x1477A94", VA = "0x1477A94")]
	public void OnRespawned()
	{
	}

	[Token(Token = "0x6000870")]
	[Address(RVA = "0x1477AFC", Offset = "0x1477AFC", VA = "0x1477AFC")]
	public GhostPlane()
	{
	}
}
[Token(Token = "0x20001A6")]
public class GiftTag : MonoBehaviour
{
	[Token(Token = "0x4000A72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject giftGroup;

	[Token(Token = "0x4000A73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject differentNationInfoGroup;

	[Token(Token = "0x4000A74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Renderer icon;

	[Token(Token = "0x4000A75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMesh contents;

	[Token(Token = "0x4000A76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMesh code;

	[Token(Token = "0x4000A77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject removeButton;

	[Token(Token = "0x4000A78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject removeButtonDifferentNation;

	[Token(Token = "0x4000A79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMesh differentNationInfo;

	[Token(Token = "0x6000872")]
	[Address(RVA = "0x1477BD4", Offset = "0x1477BD4", VA = "0x1477BD4")]
	public GiftTag()
	{
	}
}
[Token(Token = "0x20001A7")]
[ExecuteAlways]
public class GlobalShaderVariablesInitializer : MonoBehaviour
{
	[Token(Token = "0x4000A7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Texture2D UNormPower512LUT;

	[Token(Token = "0x6000873")]
	[Address(RVA = "0x1477BDC", Offset = "0x1477BDC", VA = "0x1477BDC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000874")]
	[Address(RVA = "0x1477C2C", Offset = "0x1477C2C", VA = "0x1477C2C")]
	public GlobalShaderVariablesInitializer()
	{
	}
}
[Token(Token = "0x20001A8")]
public class GraphicQuality : MonoBehaviour
{
	[Token(Token = "0x20001A9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x917CD8", Offset = "0x917CD8")]
	private sealed class <Start>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GraphicQuality <>4__this;

		[Token(Token = "0x17000082")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600087E")]
			[Address(RVA = "0xE5C3D0", Offset = "0xE5C3D0", VA = "0xE5C3D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000083")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000880")]
			[Address(RVA = "0xE5C418", Offset = "0xE5C418", VA = "0xE5C418", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600087B")]
		[Address(RVA = "0xE5C264", Offset = "0xE5C264", VA = "0xE5C264")]
		[DebuggerHidden]
		public <Start>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x600087C")]
		[Address(RVA = "0xE5C290", Offset = "0xE5C290", VA = "0xE5C290", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600087D")]
		[Address(RVA = "0xE5C294", Offset = "0xE5C294", VA = "0xE5C294", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600087F")]
		[Address(RVA = "0xE5C3D8", Offset = "0xE5C3D8", VA = "0xE5C3D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool lowRes;

	[Token(Token = "0x4000A7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GameObject forest;

	[Token(Token = "0x4000A7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static GameObject clouds;

	[Token(Token = "0x4000A7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static GameObject cirrus;

	[Token(Token = "0x4000A7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static int maxShadersLOD;

	[Token(Token = "0x4000A80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool ready;

	[Token(Token = "0x6000875")]
	[Address(RVA = "0x14129B4", Offset = "0x14129B4", VA = "0x14129B4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x925B2C", Offset = "0x925B2C")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000876")]
	[Address(RVA = "0x1412A20", Offset = "0x1412A20", VA = "0x1412A20")]
	private void Update()
	{
	}

	[Token(Token = "0x6000877")]
	[Address(RVA = "0x1412A38", Offset = "0x1412A38", VA = "0x1412A38")]
	private bool LowRes()
	{
		return default(bool);
	}

	[Token(Token = "0x6000878")]
	[Address(RVA = "0x1412A40", Offset = "0x1412A40", VA = "0x1412A40")]
	private void Change()
	{
	}

	[Token(Token = "0x6000879")]
	[Address(RVA = "0x1412D20", Offset = "0x1412D20", VA = "0x1412D20")]
	public GraphicQuality()
	{
	}
}
[Token(Token = "0x20001AA")]
public class HP_Bar : MonoBehaviour
{
	[Token(Token = "0x4000A84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float time;

	[Token(Token = "0x4000A85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Renderer r;

	[Token(Token = "0x4000A86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material material;

	[Token(Token = "0x6000881")]
	[Address(RVA = "0x1415574", Offset = "0x1415574", VA = "0x1415574")]
	private void Start()
	{
	}

	[Token(Token = "0x6000882")]
	[Address(RVA = "0x14156B8", Offset = "0x14156B8", VA = "0x14156B8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000883")]
	[Address(RVA = "0x14157AC", Offset = "0x14157AC", VA = "0x14157AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000884")]
	[Address(RVA = "0x14158EC", Offset = "0x14158EC", VA = "0x14158EC")]
	public HP_Bar()
	{
	}
}
[Token(Token = "0x20001AB")]
public class HideOnStart : MonoBehaviour
{
	[Token(Token = "0x6000885")]
	[Address(RVA = "0x141FE28", Offset = "0x141FE28", VA = "0x141FE28")]
	private void Start()
	{
	}

	[Token(Token = "0x6000886")]
	[Address(RVA = "0x141FE50", Offset = "0x141FE50", VA = "0x141FE50")]
	public HideOnStart()
	{
	}
}
[Token(Token = "0x20001AC")]
public class HideRendererOnStart : MonoBehaviour
{
	[Token(Token = "0x6000887")]
	[Address(RVA = "0x141FE58", Offset = "0x141FE58", VA = "0x141FE58")]
	private void Start()
	{
	}

	[Token(Token = "0x6000888")]
	[Address(RVA = "0x141FF10", Offset = "0x141FF10", VA = "0x141FF10")]
	public HideRendererOnStart()
	{
	}
}
[Token(Token = "0x20001AD")]
public class House : MonoBehaviour
{
	[Token(Token = "0x4000A87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float width;

	[Token(Token = "0x4000A88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float sideWidth;

	[Token(Token = "0x4000A89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float uMul;

	[Token(Token = "0x4000A8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool createTangent;

	[Token(Token = "0x4000A8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool createPhysics;

	[Token(Token = "0x4000A8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int trianglesCount;

	[Token(Token = "0x4000A8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public eBridgeType bridgeType;

	[Token(Token = "0x4000A8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material mapMaterial;

	[Token(Token = "0x4000A8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform[] wall;

	[Token(Token = "0x4000A90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material myMaterial;

	[Token(Token = "0x4000A91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3[] vertices;

	[Token(Token = "0x4000A92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector2[] uv;

	[Token(Token = "0x4000A93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3[] norm;

	[Token(Token = "0x4000A94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color[] colors;

	[Token(Token = "0x4000A95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int[] triangles;

	[Token(Token = "0x4000A96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool[] bridge;

	[Token(Token = "0x4000A97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool[] bridgeSegment;

	[Token(Token = "0x4000A98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private SplineCurve spline;

	[Token(Token = "0x4000A99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Renderer r;

	[Token(Token = "0x4000A9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int vert;

	[Token(Token = "0x4000A9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Mesh mesh;

	[Token(Token = "0x4000A9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private MultiplayerSync.SyncState mSync;

	[Token(Token = "0x4000A9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Vector3 lastNormal;

	[Token(Token = "0x6000889")]
	[Address(RVA = "0x141FF18", Offset = "0x141FF18", VA = "0x141FF18")]
	public void Awake()
	{
	}

	[Token(Token = "0x600088A")]
	[Address(RVA = "0x141FFB0", Offset = "0x141FFB0", VA = "0x141FFB0")]
	public void Start()
	{
	}

	[Token(Token = "0x600088B")]
	[Address(RVA = "0x141FFE4", Offset = "0x141FFE4", VA = "0x141FFE4")]
	public void SwitchMaterial()
	{
	}

	[Token(Token = "0x600088C")]
	[Address(RVA = "0x14200E8", Offset = "0x14200E8", VA = "0x14200E8")]
	public void PlantTrees()
	{
	}

	[Token(Token = "0x600088D")]
	[Address(RVA = "0x14202CC", Offset = "0x14202CC", VA = "0x14202CC")]
	public void BuildRoadMesh()
	{
	}

	[Token(Token = "0x600088E")]
	[Address(RVA = "0x1421260", Offset = "0x1421260", VA = "0x1421260")]
	public static float GetH(Vector3 pos)
	{
		return default(float);
	}

	[Token(Token = "0x600088F")]
	[Address(RVA = "0x1421390", Offset = "0x1421390", VA = "0x1421390")]
	public void UpdateMesh()
	{
	}

	[Token(Token = "0x6000890")]
	[Address(RVA = "0x14215A0", Offset = "0x14215A0", VA = "0x14215A0")]
	public void UpdateMeshCollider()
	{
	}

	[Token(Token = "0x6000891")]
	[Address(RVA = "0x1420EBC", Offset = "0x1420EBC", VA = "0x1420EBC")]
	public bool IsBridge(int segment)
	{
		return default(bool);
	}

	[Token(Token = "0x6000892")]
	[Address(RVA = "0x1421030", Offset = "0x1421030", VA = "0x1421030")]
	public void BuildBridge(int segment)
	{
	}

	[Token(Token = "0x6000893")]
	[Address(RVA = "0x14216B4", Offset = "0x14216B4", VA = "0x14216B4")]
	public Vector3[] GetVertices()
	{
		return null;
	}

	[Token(Token = "0x6000894")]
	[Address(RVA = "0x14216BC", Offset = "0x14216BC", VA = "0x14216BC")]
	public bool[] GetBridges()
	{
		return null;
	}

	[Token(Token = "0x6000895")]
	[Address(RVA = "0x14216C4", Offset = "0x14216C4", VA = "0x14216C4")]
	public float DistanceToRoad(Vector3 pos)
	{
		return default(float);
	}

	[Token(Token = "0x6000896")]
	[Address(RVA = "0x14217DC", Offset = "0x14217DC", VA = "0x14217DC")]
	public House()
	{
	}
}
[Token(Token = "0x20001AE")]
public enum eHull
{
	[Token(Token = "0x4000A9F")]
	vehicle,
	[Token(Token = "0x4000AA0")]
	plane,
	[Token(Token = "0x4000AA1")]
	ship,
	[Token(Token = "0x4000AA2")]
	baloon,
	[Token(Token = "0x4000AA3")]
	bridge,
	[Token(Token = "0x4000AA4")]
	building
}
[Token(Token = "0x20001AF")]
public interface IHull
{
	[Token(Token = "0x17000084")]
	bool IsTaskUnit
	{
		[Token(Token = "0x6000897")]
		get;
		[Token(Token = "0x6000898")]
		set;
	}

	[Token(Token = "0x6000899")]
	void SetObjective(bool b);

	[Token(Token = "0x600089A")]
	void SetExtraChallange(bool b);

	[Token(Token = "0x600089B")]
	void SetParty(eParty p);

	[Token(Token = "0x600089C")]
	void SetRadarType(eRadarType radarType);

	[Token(Token = "0x600089D")]
	void RegisterDestroyed(Hull.DestroyedCallback cb);

	[Token(Token = "0x600089E")]
	void UnregisterDestroyed(Hull.DestroyedCallback cb);

	[Token(Token = "0x600089F")]
	bool IsAlive();
}
[Token(Token = "0x20001B0")]
public class Hull : MonoBehaviour, IHull
{
	[Token(Token = "0x20001B1")]
	public delegate void DestroyedCallback(Hull hull);

	[Token(Token = "0x20001B2")]
	public delegate void OnHit();

	[Token(Token = "0x20001B3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x917CE8", Offset = "0x917CE8")]
	private sealed class <Start>d__63 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Hull <>4__this;

		[Token(Token = "0x17000086")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008E8")]
			[Address(RVA = "0xE5E6E8", Offset = "0xE5E6E8", VA = "0xE5E6E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000087")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008EA")]
			[Address(RVA = "0xE5E730", Offset = "0xE5E730", VA = "0xE5E730", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008E5")]
		[Address(RVA = "0xE5E274", Offset = "0xE5E274", VA = "0xE5E274")]
		[DebuggerHidden]
		public <Start>d__63(int <>1__state)
		{
		}

		[Token(Token = "0x60008E6")]
		[Address(RVA = "0xE5E2A0", Offset = "0xE5E2A0", VA = "0xE5E2A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008E7")]
		[Address(RVA = "0xE5E2A4", Offset = "0xE5E2A4", VA = "0xE5E2A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008E9")]
		[Address(RVA = "0xE5E6F0", Offset = "0xE5E6F0", VA = "0xE5E6F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001B4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x917CF8", Offset = "0x917CF8")]
	private sealed class <FallDown>d__87 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Hull <>4__this;

		[Token(Token = "0x4000ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <fallSpeed>5__2;

		[Token(Token = "0x17000088")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008EE")]
			[Address(RVA = "0xE5E224", Offset = "0xE5E224", VA = "0xE5E224", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000089")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008F0")]
			[Address(RVA = "0xE5E26C", Offset = "0xE5E26C", VA = "0xE5E26C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008EB")]
		[Address(RVA = "0xE5E070", Offset = "0xE5E070", VA = "0xE5E070")]
		[DebuggerHidden]
		public <FallDown>d__87(int <>1__state)
		{
		}

		[Token(Token = "0x60008EC")]
		[Address(RVA = "0xE5E09C", Offset = "0xE5E09C", VA = "0xE5E09C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008ED")]
		[Address(RVA = "0xE5E0A0", Offset = "0xE5E0A0", VA = "0xE5E0A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008EF")]
		[Address(RVA = "0xE5E22C", Offset = "0xE5E22C", VA = "0xE5E22C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000AA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool hookParentHull;

	[Token(Token = "0x4000AA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public eParty party;

	[Token(Token = "0x4000AA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public eHull type;

	[Token(Token = "0x4000AA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string myName;

	[Token(Token = "0x4000AA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool immune;

	[Token(Token = "0x4000AAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public eRadarType radarType;

	[Token(Token = "0x4000AAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int maxHP;

	[Token(Token = "0x4000AAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int armor;

	[Token(Token = "0x4000AAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public eFX expl;

	[Token(Token = "0x4000AAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject destroyedObject;

	[Token(Token = "0x4000AAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool hideWreck;

	[Token(Token = "0x4000AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	public bool fallDownBuilding;

	[Token(Token = "0x4000AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
	public bool scaleDestroyed;

	[Token(Token = "0x4000AB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public eRadio radioOnDestroyed;

	[Token(Token = "0x4000AB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector3 offsetTargetShot;

	[Token(Token = "0x4000AB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private PlaneBody plane;

	[Token(Token = "0x4000AB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int HP;

	[Token(Token = "0x4000AB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[HideInInspector]
	public bool isObjective;

	[Token(Token = "0x4000AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91B04C", Offset = "0x91B04C")]
	private bool <IsTaskUnit>k__BackingField;

	[Token(Token = "0x4000AB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[HideInInspector]
	public int flakAdd;

	[Token(Token = "0x4000AB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int attackersCnt;

	[Token(Token = "0x4000ABA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool isExtraChallange;

	[Token(Token = "0x4000ABB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private MultiplayerSync.UID multiplayerUID;

	[Token(Token = "0x4000ABC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private MultiplayerSync.SyncState mSync;

	[Token(Token = "0x4000ABD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Dictionary<int, int> multiPlayer2Damage;

	[Token(Token = "0x4000ABE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public OnHit onHit;

	[Token(Token = "0x4000ABF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private DestroyedCallback onDestroyed;

	[Token(Token = "0x4000AC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private RadarSymbol radarSymbol;

	[Token(Token = "0x4000AC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Hull parentHull;

	[Token(Token = "0x4000AC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private GameObject instancedDestroyedObject;

	[Token(Token = "0x4000AC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float cumulativeDamage;

	[Token(Token = "0x4000AC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private bool isPlayerTeam;

	[Token(Token = "0x4000AC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float radioTime1;

	[Token(Token = "0x4000AC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static float radioTime2;

	[Token(Token = "0x17000085")]
	public bool IsTaskUnit
	{
		[Token(Token = "0x60008A0")]
		[Address(RVA = "0x139E654", Offset = "0x139E654", VA = "0x139E654", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x925BDC", Offset = "0x925BDC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60008A1")]
		[Address(RVA = "0x139E65C", Offset = "0x139E65C", VA = "0x139E65C", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x925BEC", Offset = "0x925BEC")]
		set
		{
		}
	}

	[Token(Token = "0x60008A2")]
	[Address(RVA = "0x139E668", Offset = "0x139E668", VA = "0x139E668")]
	public void Awake()
	{
	}

	[Token(Token = "0x60008A3")]
	[Address(RVA = "0x139EEF8", Offset = "0x139EEF8", VA = "0x139EEF8")]
	public void InitMultiplayerUID(MultiplayerSync.UID uid, MultiplayerSync.SyncState sync)
	{
	}

	[Token(Token = "0x60008A4")]
	[Address(RVA = "0x139EF00", Offset = "0x139EF00", VA = "0x139EF00")]
	public MultiplayerSync.UID GetMultiplayerUID()
	{
		return default(MultiplayerSync.UID);
	}

	[Token(Token = "0x60008A5")]
	[Address(RVA = "0x139EF08", Offset = "0x139EF08", VA = "0x139EF08")]
	public MultiplayerSync.SyncState GetMultiplayerSync()
	{
		return null;
	}

	[Token(Token = "0x60008A6")]
	[Address(RVA = "0x139EF10", Offset = "0x139EF10", VA = "0x139EF10")]
	public bool IsBuildingOrShip()
	{
		return default(bool);
	}

	[Token(Token = "0x60008A7")]
	[Address(RVA = "0x139EF3C", Offset = "0x139EF3C", VA = "0x139EF3C")]
	public bool IsBuilding()
	{
		return default(bool);
	}

	[Token(Token = "0x60008A8")]
	[Address(RVA = "0x139EF50", Offset = "0x139EF50", VA = "0x139EF50")]
	public bool IsVehicle()
	{
		return default(bool);
	}

	[Token(Token = "0x60008A9")]
	[Address(RVA = "0x139EF64", Offset = "0x139EF64", VA = "0x139EF64")]
	public bool IsShip()
	{
		return default(bool);
	}

	[Token(Token = "0x60008AA")]
	[Address(RVA = "0x139EF74", Offset = "0x139EF74", VA = "0x139EF74")]
	public bool IsPlane()
	{
		return default(bool);
	}

	[Token(Token = "0x60008AB")]
	[Address(RVA = "0x139EF88", Offset = "0x139EF88", VA = "0x139EF88")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x60008AC")]
	[Address(RVA = "0x139F234", Offset = "0x139F234", VA = "0x139F234", Slot = "6")]
	public void SetObjective(bool b)
	{
	}

	[Token(Token = "0x60008AD")]
	[Address(RVA = "0x139F240", Offset = "0x139F240", VA = "0x139F240", Slot = "7")]
	public void SetExtraChallange(bool b)
	{
	}

	[Token(Token = "0x60008AE")]
	[Address(RVA = "0x139F24C", Offset = "0x139F24C", VA = "0x139F24C")]
	public void UpdateExtraChallange(bool b)
	{
	}

	[Token(Token = "0x60008AF")]
	[Address(RVA = "0x139F2F8", Offset = "0x139F2F8", VA = "0x139F2F8")]
	public bool IsExtraChallange()
	{
		return default(bool);
	}

	[Token(Token = "0x60008B0")]
	[Address(RVA = "0x139F300", Offset = "0x139F300", VA = "0x139F300", Slot = "8")]
	public void SetParty(eParty p)
	{
	}

	[Token(Token = "0x60008B1")]
	[Address(RVA = "0x139F308", Offset = "0x139F308", VA = "0x139F308")]
	public void ResetPartyIfEnemy()
	{
	}

	[Token(Token = "0x60008B2")]
	[Address(RVA = "0x139F31C", Offset = "0x139F31C", VA = "0x139F31C")]
	public void RegisterTaskUnit(DestroyedCallback cb)
	{
	}

	[Token(Token = "0x60008B3")]
	[Address(RVA = "0x139F3A0", Offset = "0x139F3A0", VA = "0x139F3A0", Slot = "10")]
	public void RegisterDestroyed(DestroyedCallback cb)
	{
	}

	[Token(Token = "0x60008B4")]
	[Address(RVA = "0x139F41C", Offset = "0x139F41C", VA = "0x139F41C", Slot = "11")]
	public void UnregisterDestroyed(DestroyedCallback cb)
	{
	}

	[Token(Token = "0x60008B5")]
	[Address(RVA = "0x139F498", Offset = "0x139F498", VA = "0x139F498")]
	public PlaneBody GetPlane()
	{
		return null;
	}

	[Token(Token = "0x60008B6")]
	[Address(RVA = "0x139F4A0", Offset = "0x139F4A0", VA = "0x139F4A0")]
	public float GetDamage()
	{
		return default(float);
	}

	[Token(Token = "0x60008B7")]
	[Address(RVA = "0x139F4C0", Offset = "0x139F4C0", VA = "0x139F4C0")]
	public void SetDamage(float f)
	{
	}

	[Token(Token = "0x60008B8")]
	[Address(RVA = "0x139F4F8", Offset = "0x139F4F8", VA = "0x139F4F8")]
	public float GetHealth()
	{
		return default(float);
	}

	[Token(Token = "0x60008B9")]
	[Address(RVA = "0x139F510", Offset = "0x139F510", VA = "0x139F510")]
	public int GetHP()
	{
		return default(int);
	}

	[Token(Token = "0x60008BA")]
	[Address(RVA = "0x139F518", Offset = "0x139F518", VA = "0x139F518")]
	public void RepairHull()
	{
	}

	[Token(Token = "0x60008BB")]
	[Address(RVA = "0x139F524", Offset = "0x139F524", VA = "0x139F524")]
	public void SetHP(int i)
	{
	}

	[Token(Token = "0x60008BC")]
	[Address(RVA = "0x139F52C", Offset = "0x139F52C", VA = "0x139F52C")]
	public int GetMaxHP()
	{
		return default(int);
	}

	[Token(Token = "0x60008BD")]
	[Address(RVA = "0x139F534", Offset = "0x139F534", VA = "0x139F534")]
	public void SetRemoteHP(int i)
	{
	}

	[Token(Token = "0x60008BE")]
	[Address(RVA = "0x139F5FC", Offset = "0x139F5FC", VA = "0x139F5FC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x925BFC", Offset = "0x925BFC")]
	public IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60008BF")]
	[Address(RVA = "0x139F668", Offset = "0x139F668", VA = "0x139F668", Slot = "9")]
	public void SetRadarType(eRadarType radarType)
	{
	}

	[Token(Token = "0x60008C0")]
	[Address(RVA = "0x139F670", Offset = "0x139F670", VA = "0x139F670")]
	public void AddToRadar()
	{
	}

	[Token(Token = "0x60008C1")]
	[Address(RVA = "0x139F7C0", Offset = "0x139F7C0", VA = "0x139F7C0")]
	public void RemoveFromRadar()
	{
	}

	[Token(Token = "0x60008C2")]
	[Address(RVA = "0x139F728", Offset = "0x139F728", VA = "0x139F728")]
	public Transform GetRadarTransform()
	{
		return null;
	}

	[Token(Token = "0x60008C3")]
	[Address(RVA = "0x139F880", Offset = "0x139F880", VA = "0x139F880")]
	public void AddAttacker(AIPilot p)
	{
	}

	[Token(Token = "0x60008C4")]
	[Address(RVA = "0x139F890", Offset = "0x139F890", VA = "0x139F890")]
	public void RemoveAttacker(AIPilot p)
	{
	}

	[Token(Token = "0x60008C5")]
	[Address(RVA = "0x139F8A0", Offset = "0x139F8A0", VA = "0x139F8A0")]
	public int GetAttackersCnt()
	{
		return default(int);
	}

	[Token(Token = "0x60008C6")]
	[Address(RVA = "0x139F8A8", Offset = "0x139F8A8", VA = "0x139F8A8")]
	public bool IsOnGround()
	{
		return default(bool);
	}

	[Token(Token = "0x60008C7")]
	[Address(RVA = "0x139F8BC", Offset = "0x139F8BC", VA = "0x139F8BC", Slot = "12")]
	public bool IsAlive()
	{
		return default(bool);
	}

	[Token(Token = "0x60008C8")]
	[Address(RVA = "0x139F8CC", Offset = "0x139F8CC", VA = "0x139F8CC")]
	public void Hit(float dam)
	{
	}

	[Token(Token = "0x60008C9")]
	[Address(RVA = "0x139F8D4", Offset = "0x139F8D4", VA = "0x139F8D4")]
	public void Hit2(Missile m, float dam)
	{
	}

	[Token(Token = "0x60008CA")]
	[Address(RVA = "0x13A0FC8", Offset = "0x13A0FC8", VA = "0x13A0FC8")]
	public void HitNoArmor(float dam)
	{
	}

	[Token(Token = "0x60008CB")]
	[Address(RVA = "0x139FD68", Offset = "0x139FD68", VA = "0x139FD68")]
	public void HitNoArmor2(Missile m, PlaneBody shooter, float dam, bool remote = false)
	{
	}

	[Token(Token = "0x60008CC")]
	[Address(RVA = "0x13A1F30", Offset = "0x13A1F30", VA = "0x13A1F30")]
	public void SetPlayerTeam()
	{
	}

	[Token(Token = "0x60008CD")]
	[Address(RVA = "0x13A1F3C", Offset = "0x13A1F3C", VA = "0x13A1F3C")]
	public bool IsPlayerTeam()
	{
		return default(bool);
	}

	[Token(Token = "0x60008CE")]
	[Address(RVA = "0x139FA20", Offset = "0x139FA20", VA = "0x139FA20")]
	private void RadioMsg(PlaneBody shooter)
	{
	}

	[Token(Token = "0x60008CF")]
	[Address(RVA = "0x13A0FD8", Offset = "0x13A0FD8", VA = "0x13A0FD8")]
	public void Bum(Missile m, PlaneBody shooter, bool remote = false)
	{
	}

	[Token(Token = "0x60008D0")]
	[Address(RVA = "0x13A23D8", Offset = "0x13A23D8", VA = "0x13A23D8")]
	public GameObject GetInstancedDestroyedObject()
	{
		return null;
	}

	[Token(Token = "0x60008D1")]
	[Address(RVA = "0x13A23E0", Offset = "0x13A23E0", VA = "0x13A23E0")]
	public void ExplodeOnMultiRespawn(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x60008D2")]
	[Address(RVA = "0x13A236C", Offset = "0x13A236C", VA = "0x13A236C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x925C5C", Offset = "0x925C5C")]
	public IEnumerator FallDown()
	{
		return null;
	}

	[Token(Token = "0x60008D3")]
	[Address(RVA = "0x13A20A0", Offset = "0x13A20A0", VA = "0x13A20A0")]
	private void ExplodeObjectsOnBridge(PlaneBody shooter)
	{
	}

	[Token(Token = "0x60008D4")]
	[Address(RVA = "0x13A2834", Offset = "0x13A2834", VA = "0x13A2834")]
	public string GetName()
	{
		return null;
	}

	[Token(Token = "0x60008D5")]
	[Address(RVA = "0x13A292C", Offset = "0x13A292C", VA = "0x13A292C")]
	public string GetInfoText()
	{
		return null;
	}

	[Token(Token = "0x60008D6")]
	[Address(RVA = "0x13A29DC", Offset = "0x13A29DC", VA = "0x13A29DC")]
	public float GetHPPercent()
	{
		return default(float);
	}

	[Token(Token = "0x60008D7")]
	[Address(RVA = "0x139EA44", Offset = "0x139EA44", VA = "0x139EA44")]
	public static Hull Get(Transform t)
	{
		return null;
	}

	[Token(Token = "0x60008D8")]
	[Address(RVA = "0x13A29F4", Offset = "0x13A29F4", VA = "0x13A29F4")]
	public void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60008D9")]
	[Address(RVA = "0x13A2AF0", Offset = "0x13A2AF0", VA = "0x13A2AF0")]
	public void MultiRespawn()
	{
	}

	[Token(Token = "0x60008DA")]
	[Address(RVA = "0x13A1F44", Offset = "0x13A1F44", VA = "0x13A1F44")]
	public bool GetMultiMaxDamageShooter(out int playerId, out int damage)
	{
		return default(bool);
	}

	[Token(Token = "0x60008DB")]
	[Address(RVA = "0x13A2B4C", Offset = "0x13A2B4C", VA = "0x13A2B4C")]
	public Hull()
	{
	}
}
[Token(Token = "0x20001B5")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x917D08", Offset = "0x917D08")]
public class HullManager : MonoBehaviour
{
	[Token(Token = "0x20001B6")]
	private struct Cache
	{
		[Token(Token = "0x4000AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 position;

		[Token(Token = "0x4000AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool active;
	}

	[Token(Token = "0x4000ACE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Hull[] data;

	[Token(Token = "0x4000ACF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int num;

	[Token(Token = "0x4000AD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Cache[] positionCache;

	[Token(Token = "0x4000AD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static PlaneBody steeringPlane;

	[Token(Token = "0x60008F1")]
	[Address(RVA = "0x139EB30", Offset = "0x139EB30", VA = "0x139EB30")]
	public static void Add(Hull newP)
	{
	}

	[Token(Token = "0x60008F2")]
	[Address(RVA = "0x139EFE8", Offset = "0x139EFE8", VA = "0x139EFE8")]
	public static void Remove(Hull h)
	{
	}

	[Token(Token = "0x60008F3")]
	[Address(RVA = "0x13A2BDC", Offset = "0x13A2BDC", VA = "0x13A2BDC")]
	private void Update()
	{
	}

	[Token(Token = "0x60008F4")]
	[Address(RVA = "0x13A2DF0", Offset = "0x13A2DF0", VA = "0x13A2DF0")]
	public static Hull GetFromMultiplayerUID(MultiplayerSync.UID uid)
	{
		return null;
	}

	[Token(Token = "0x60008F5")]
	[Address(RVA = "0x13A2F5C", Offset = "0x13A2F5C", VA = "0x13A2F5C")]
	public static bool IsEnemy(Hull myHull, Hull target, bool noneIsEnemy = false)
	{
		return default(bool);
	}

	[Token(Token = "0x60008F6")]
	[Address(RVA = "0x13A3190", Offset = "0x13A3190", VA = "0x13A3190")]
	public static List<Hull> GetEnemyPlanes()
	{
		return null;
	}

	[Token(Token = "0x60008F7")]
	[Address(RVA = "0x13A3388", Offset = "0x13A3388", VA = "0x13A3388")]
	public static int CountEnemyNotPlayersPlanes(bool onlyExtraChallange = false)
	{
		return default(int);
	}

	[Token(Token = "0x60008F8")]
	[Address(RVA = "0x13A361C", Offset = "0x13A361C", VA = "0x13A361C")]
	public static PlaneBody GetPointingPlane()
	{
		return null;
	}

	[Token(Token = "0x60008F9")]
	[Address(RVA = "0x13A3A1C", Offset = "0x13A3A1C", VA = "0x13A3A1C")]
	public static Hull GetEnemyHullForAI(Hull myHull, bool attackPlanes, bool attackVehicles, bool attackBuildings)
	{
		return null;
	}

	[Token(Token = "0x60008FA")]
	[Address(RVA = "0x13A3E30", Offset = "0x13A3E30", VA = "0x13A3E30")]
	public static Hull GetAnyEnemyPlane(Hull myHull)
	{
		return null;
	}

	[Token(Token = "0x60008FB")]
	[Address(RVA = "0x13A3FD8", Offset = "0x13A3FD8", VA = "0x13A3FD8")]
	public static Hull GetEnemyPlane(Hull myHull, eRadarType rType)
	{
		return null;
	}

	[Token(Token = "0x60008FC")]
	[Address(RVA = "0x13A4444", Offset = "0x13A4444", VA = "0x13A4444")]
	private static Hull GetEnemyPlaneAce(Hull myHull, eRadarType rType)
	{
		return null;
	}

	[Token(Token = "0x60008FD")]
	[Address(RVA = "0x13A45A4", Offset = "0x13A45A4", VA = "0x13A45A4")]
	public static int GetEnemyBaloonsCount(Hull myHull)
	{
		return default(int);
	}

	[Token(Token = "0x60008FE")]
	[Address(RVA = "0x13A4714", Offset = "0x13A4714", VA = "0x13A4714")]
	public static Hull GetEnemyHullInFront(Hull myHull, Vector3 forward, Vector3 up)
	{
		return null;
	}

	[Token(Token = "0x60008FF")]
	[Address(RVA = "0x13A49D0", Offset = "0x13A49D0", VA = "0x13A49D0")]
	public static Hull GetNearestEnemyHull(Hull myHull)
	{
		return null;
	}

	[Token(Token = "0x6000900")]
	[Address(RVA = "0x13A4C28", Offset = "0x13A4C28", VA = "0x13A4C28")]
	public static int CountEnemy()
	{
		return default(int);
	}

	[Token(Token = "0x6000901")]
	[Address(RVA = "0x13A4D80", Offset = "0x13A4D80", VA = "0x13A4D80")]
	public static int CountNonObjectiveEnemy()
	{
		return default(int);
	}

	[Token(Token = "0x6000902")]
	[Address(RVA = "0x13A4FC0", Offset = "0x13A4FC0", VA = "0x13A4FC0")]
	public static Hull GetNearestEnemyAirHull(Hull myHull)
	{
		return null;
	}

	[Token(Token = "0x6000903")]
	[Address(RVA = "0x13A522C", Offset = "0x13A522C", VA = "0x13A522C")]
	public static Hull GetNearestEnemyPlaneHull(Hull myHull)
	{
		return null;
	}

	[Token(Token = "0x6000904")]
	[Address(RVA = "0x13A5494", Offset = "0x13A5494", VA = "0x13A5494")]
	public static Hull GetNearestEnemyBuildingOrShip(Hull myHull, Vector3 forward)
	{
		return null;
	}

	[Token(Token = "0x6000905")]
	[Address(RVA = "0x13A5768", Offset = "0x13A5768", VA = "0x13A5768")]
	public static Hull GetNearestNonPlayerAirHull(Hull myHull)
	{
		return null;
	}

	[Token(Token = "0x6000906")]
	[Address(RVA = "0x13A5A88", Offset = "0x13A5A88", VA = "0x13A5A88")]
	public static float GetNearestEnemyAirHullDistSqr(Hull myHull)
	{
		return default(float);
	}

	[Token(Token = "0x6000907")]
	[Address(RVA = "0x13A5CE4", Offset = "0x13A5CE4", VA = "0x13A5CE4")]
	public static Hull GetNearestEnemyGroundHull(Hull myHull)
	{
		return null;
	}

	[Token(Token = "0x6000908")]
	[Address(RVA = "0x13A5F50", Offset = "0x13A5F50", VA = "0x13A5F50")]
	public static Hull GetEnemyInFront(Hull myHull, float range, Transform t)
	{
		return null;
	}

	[Token(Token = "0x6000909")]
	[Address(RVA = "0x13A6300", Offset = "0x13A6300", VA = "0x13A6300")]
	public static Hull GetEnemyNearScreenCenter(float range, bool excludePlanes = true)
	{
		return null;
	}

	[Token(Token = "0x600090A")]
	[Address(RVA = "0x13A6F48", Offset = "0x13A6F48", VA = "0x13A6F48")]
	public static void HitAllInRange(Missile m, Vector3 pos, float damage, float range, Hull hull, eParty excludeParty)
	{
	}

	[Token(Token = "0x600090B")]
	[Address(RVA = "0x13A72F0", Offset = "0x13A72F0", VA = "0x13A72F0")]
	public HullManager()
	{
	}
}
[Token(Token = "0x20001B7")]
public class InitiateLayerMasks : MonoBehaviour
{
	[Token(Token = "0x600090D")]
	[Address(RVA = "0x13AA6E4", Offset = "0x13AA6E4", VA = "0x13AA6E4")]
	public void Awake()
	{
	}

	[Token(Token = "0x600090E")]
	[Address(RVA = "0x13AA92C", Offset = "0x13AA92C", VA = "0x13AA92C")]
	public InitiateLayerMasks()
	{
	}
}
[Token(Token = "0x20001B8")]
public class IntroAnimation : MonoBehaviour
{
	[Token(Token = "0x4000AD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject target;

	[Token(Token = "0x4000AD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float animLength;

	[Token(Token = "0x4000AD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AnimationCurve pos_x;

	[Token(Token = "0x4000AD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float pos_x_scale;

	[Token(Token = "0x4000AD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AnimationCurve pos_y;

	[Token(Token = "0x4000AD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float pos_y_scale;

	[Token(Token = "0x4000ADA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private AnimationCurve pos_z;

	[Token(Token = "0x4000ADB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private float pos_z_scale;

	[Token(Token = "0x4000ADC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private AnimationCurve angle_x;

	[Token(Token = "0x4000ADD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private float angle_x_scale;

	[Token(Token = "0x4000ADE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private AnimationCurve angle_y;

	[Token(Token = "0x4000ADF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private float angle_y_scale;

	[Token(Token = "0x4000AE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private AnimationCurve angle_z;

	[Token(Token = "0x4000AE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private float angle_z_scale;

	[Token(Token = "0x4000AE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private AnimationCurve scale;

	[Token(Token = "0x4000AE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private float scale_scale;

	[Token(Token = "0x4000AE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private IntroAnimation[] activateNext;

	[Token(Token = "0x4000AE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 targetScale;

	[Token(Token = "0x4000AE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private bool animate;

	[Token(Token = "0x4000AE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float startTime;

	[Token(Token = "0x600090F")]
	[Address(RVA = "0x13B0CAC", Offset = "0x13B0CAC", VA = "0x13B0CAC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000910")]
	[Address(RVA = "0x13B0D48", Offset = "0x13B0D48", VA = "0x13B0D48")]
	public void Launch()
	{
	}

	[Token(Token = "0x6000911")]
	[Address(RVA = "0x13B10A0", Offset = "0x13B10A0", VA = "0x13B10A0")]
	public void Update()
	{
	}

	[Token(Token = "0x6000912")]
	[Address(RVA = "0x13B0E00", Offset = "0x13B0E00", VA = "0x13B0E00")]
	public void StepAnimate()
	{
	}

	[Token(Token = "0x6000913")]
	[Address(RVA = "0x13B10B0", Offset = "0x13B10B0", VA = "0x13B10B0")]
	public IntroAnimation()
	{
	}
}
[Token(Token = "0x20001B9")]
public class JoystickDumper : MonoBehaviour
{
	[Token(Token = "0x4000AE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool active;

	[Token(Token = "0x4000AE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float a;

	[Token(Token = "0x4000AEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float s;

	[Token(Token = "0x4000AEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float d;

	[Token(Token = "0x4000AEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static JoystickDumper instance;

	[Token(Token = "0x4000AED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Vector2 pos;

	[Token(Token = "0x4000AEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Vector2 speed;

	[Token(Token = "0x6000914")]
	[Address(RVA = "0x17DD9F8", Offset = "0x17DD9F8", VA = "0x17DD9F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000915")]
	[Address(RVA = "0x17DDA70", Offset = "0x17DDA70", VA = "0x17DDA70")]
	public static Vector2 Get(Vector2 newPos)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000916")]
	[Address(RVA = "0x17DDCBC", Offset = "0x17DDCBC", VA = "0x17DDCBC")]
	public JoystickDumper()
	{
	}
}
[Token(Token = "0x20001BA")]
public class Killwater : MonoBehaviour
{
	[Token(Token = "0x20001BB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x917D1C", Offset = "0x917D1C")]
	private sealed class <Start>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Killwater <>4__this;

		[Token(Token = "0x1700008A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600091E")]
			[Address(RVA = "0xE6803C", Offset = "0xE6803C", VA = "0xE6803C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000920")]
			[Address(RVA = "0xE68084", Offset = "0xE68084", VA = "0xE68084", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600091B")]
		[Address(RVA = "0xE67A84", Offset = "0xE67A84", VA = "0xE67A84")]
		[DebuggerHidden]
		public <Start>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x600091C")]
		[Address(RVA = "0xE67AB0", Offset = "0xE67AB0", VA = "0xE67AB0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600091D")]
		[Address(RVA = "0xE67AB4", Offset = "0xE67AB4", VA = "0xE67AB4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600091F")]
		[Address(RVA = "0xE68044", Offset = "0xE68044", VA = "0xE68044", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001BC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x917D2C", Offset = "0x917D2C")]
	private sealed class <Idle>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Killwater <>4__this;

		[Token(Token = "0x1700008C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000924")]
			[Address(RVA = "0xE67A34", Offset = "0xE67A34", VA = "0xE67A34", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000926")]
			[Address(RVA = "0xE67A7C", Offset = "0xE67A7C", VA = "0xE67A7C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000921")]
		[Address(RVA = "0xE675AC", Offset = "0xE675AC", VA = "0xE675AC")]
		[DebuggerHidden]
		public <Idle>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6000922")]
		[Address(RVA = "0xE675D8", Offset = "0xE675D8", VA = "0xE675D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000923")]
		[Address(RVA = "0xE675DC", Offset = "0xE675DC", VA = "0xE675DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000925")]
		[Address(RVA = "0xE67A3C", Offset = "0xE67A3C", VA = "0xE67A3C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000AEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem bowRight;

	[Token(Token = "0x4000AF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ParticleSystem bowLeft;

	[Token(Token = "0x4000AF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ParticleSystem center;

	[Token(Token = "0x4000AF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ParticleSystem right;

	[Token(Token = "0x4000AF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ParticleSystem rightEnd;

	[Token(Token = "0x4000AF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float rate;

	[Token(Token = "0x4000AF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private ParticleSystem left;

	[Token(Token = "0x4000AF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ParticleSystem leftEnd;

	[Token(Token = "0x4000AF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Ship ship;

	[Token(Token = "0x4000AF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Hull hull;

	[Token(Token = "0x6000917")]
	[Address(RVA = "0x17ED4FC", Offset = "0x17ED4FC", VA = "0x17ED4FC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x925D5C", Offset = "0x925D5C")]
	public IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000918")]
	[Address(RVA = "0x17ED568", Offset = "0x17ED568", VA = "0x17ED568")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x925DBC", Offset = "0x925DBC")]
	public IEnumerator Idle()
	{
		return null;
	}

	[Token(Token = "0x6000919")]
	[Address(RVA = "0x17ED5D4", Offset = "0x17ED5D4", VA = "0x17ED5D4")]
	private void Destroyed(Hull h)
	{
	}

	[Token(Token = "0x600091A")]
	[Address(RVA = "0x17ED8A8", Offset = "0x17ED8A8", VA = "0x17ED8A8")]
	public Killwater()
	{
	}
}
[Token(Token = "0x20001BD")]
public interface IL_O_D
{
	[Token(Token = "0x6000927")]
	void Process(Vector3 camPos, bool useCamPos, GameObject planeGo, bool isMulti);
}
[Token(Token = "0x20001BE")]
public class LODManager : MonoBehaviour
{
	[Token(Token = "0x4000AFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float checkTime;

	[Token(Token = "0x4000B00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IL_O_D[] data;

	[Token(Token = "0x4000B01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int num;

	[Token(Token = "0x6000928")]
	[Address(RVA = "0x1132F8C", Offset = "0x1132F8C", VA = "0x1132F8C")]
	public static void Register(IL_O_D lod)
	{
	}

	[Token(Token = "0x6000929")]
	[Address(RVA = "0x11331A8", Offset = "0x11331A8", VA = "0x11331A8")]
	public static void Remove(IL_O_D lod)
	{
	}

	[Token(Token = "0x600092A")]
	[Address(RVA = "0x113336C", Offset = "0x113336C", VA = "0x113336C")]
	private void Update()
	{
	}

	[Token(Token = "0x600092B")]
	[Address(RVA = "0x11333AC", Offset = "0x11333AC", VA = "0x11333AC")]
	private void UpdateLODs()
	{
	}

	[Token(Token = "0x600092C")]
	[Address(RVA = "0x113381C", Offset = "0x113381C", VA = "0x113381C")]
	public LODManager()
	{
	}
}
[Token(Token = "0x20001BF")]
public class L_O_D : MonoBehaviour, IL_O_D
{
	[Token(Token = "0x4000B02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float distLOD;

	[Token(Token = "0x4000B03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float distHideAll;

	[Token(Token = "0x4000B04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float distLODSqr;

	[Token(Token = "0x4000B05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float distHideAllSqr;

	[Token(Token = "0x4000B06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject hiRes;

	[Token(Token = "0x4000B07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject lowRes;

	[Token(Token = "0x4000B08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool hasHiRes;

	[Token(Token = "0x4000B09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool hasLowRes;

	[Token(Token = "0x4000B0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	public bool warningOnMissingLOD;

	[Token(Token = "0x4000B0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool off;

	[Token(Token = "0x4000B0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static float mul;

	[Token(Token = "0x4000B0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91B17C", Offset = "0x91B17C")]
	private bool <IsHighRes>k__BackingField;

	[Token(Token = "0x4000B0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91B18C", Offset = "0x91B18C")]
	private bool <IsVisible>k__BackingField;

	[Token(Token = "0x1700008E")]
	public bool IsHighRes
	{
		[Token(Token = "0x600092E")]
		[Address(RVA = "0x11349B8", Offset = "0x11349B8", VA = "0x11349B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x925EBC", Offset = "0x925EBC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600092F")]
		[Address(RVA = "0x11349C0", Offset = "0x11349C0", VA = "0x11349C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x925ECC", Offset = "0x925ECC")]
		protected set
		{
		}
	}

	[Token(Token = "0x1700008F")]
	public bool IsVisible
	{
		[Token(Token = "0x6000930")]
		[Address(RVA = "0x11349CC", Offset = "0x11349CC", VA = "0x11349CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x925EDC", Offset = "0x925EDC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000931")]
		[Address(RVA = "0x11349D4", Offset = "0x11349D4", VA = "0x11349D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x925EEC", Offset = "0x925EEC")]
		protected set
		{
		}
	}

	[Token(Token = "0x6000932")]
	[Address(RVA = "0x11349E0", Offset = "0x11349E0", VA = "0x11349E0")]
	public void SetHideDist(float a)
	{
	}

	[Token(Token = "0x6000933")]
	[Address(RVA = "0x11349F0", Offset = "0x11349F0", VA = "0x11349F0")]
	public void Start()
	{
	}

	[Token(Token = "0x6000934")]
	[Address(RVA = "0x1134C84", Offset = "0x1134C84", VA = "0x1134C84")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000935")]
	[Address(RVA = "0x1134CE4", Offset = "0x1134CE4", VA = "0x1134CE4", Slot = "4")]
	public void Process(Vector3 camPos, bool useCamPos, GameObject planeGo, bool isMulti)
	{
	}

	[Token(Token = "0x6000936")]
	[Address(RVA = "0x1134F28", Offset = "0x1134F28", VA = "0x1134F28")]
	public void SetCloseLOD()
	{
	}

	[Token(Token = "0x6000937")]
	[Address(RVA = "0x1134F94", Offset = "0x1134F94", VA = "0x1134F94", Slot = "5")]
	protected virtual void EnableHiRes()
	{
	}

	[Token(Token = "0x6000938")]
	[Address(RVA = "0x1134FD0", Offset = "0x1134FD0", VA = "0x1134FD0", Slot = "6")]
	protected virtual void DisableHiRes()
	{
	}

	[Token(Token = "0x6000939")]
	[Address(RVA = "0x1135008", Offset = "0x1135008", VA = "0x1135008", Slot = "7")]
	protected virtual void EnableLowRes()
	{
	}

	[Token(Token = "0x600093A")]
	[Address(RVA = "0x1135044", Offset = "0x1135044", VA = "0x1135044", Slot = "8")]
	protected virtual void DisableLowRes()
	{
	}

	[Token(Token = "0x600093B")]
	[Address(RVA = "0x1135064", Offset = "0x1135064", VA = "0x1135064", Slot = "9")]
	protected virtual void HideFarAway()
	{
	}

	[Token(Token = "0x600093C")]
	[Address(RVA = "0x113509C", Offset = "0x113509C", VA = "0x113509C")]
	public L_O_D()
	{
	}
}
[Token(Token = "0x20001C0")]
public class LandingWheelSound
{
	[Token(Token = "0x4000B0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool wasOnGround;

	[Token(Token = "0x4000B10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private bool wasLandRadio;

	[Token(Token = "0x4000B11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	private bool wasTakeoffRadio;

	[Token(Token = "0x4000B12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float lastLandRadio;

	[Token(Token = "0x4000B13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float lastTakeoffRadio;

	[Token(Token = "0x4000B14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float firstTakeoffTime;

	[Token(Token = "0x4000B15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float firstLandTime;

	[Token(Token = "0x4000B16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float audioVolume;

	[Token(Token = "0x4000B17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AudioSource audio;

	[Token(Token = "0x4000B18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private PlaneBody pb;

	[Token(Token = "0x600093E")]
	[Address(RVA = "0x11374C4", Offset = "0x11374C4", VA = "0x11374C4")]
	public void Prepare(bool groundContact)
	{
	}

	[Token(Token = "0x600093F")]
	[Address(RVA = "0x113750C", Offset = "0x113750C", VA = "0x113750C")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000940")]
	[Address(RVA = "0x11375AC", Offset = "0x11375AC", VA = "0x11375AC")]
	public void Compute(PlaneBody pb, bool groundContact, float landingStress)
	{
	}

	[Token(Token = "0x6000941")]
	[Address(RVA = "0x1137940", Offset = "0x1137940", VA = "0x1137940")]
	private void OnFirstTouchdown(float landingStress)
	{
	}

	[Token(Token = "0x6000942")]
	[Address(RVA = "0x1137BB4", Offset = "0x1137BB4", VA = "0x1137BB4")]
	private void OnTakeOff()
	{
	}

	[Token(Token = "0x6000943")]
	[Address(RVA = "0x1137C84", Offset = "0x1137C84", VA = "0x1137C84")]
	private void ApplyPitchFromSpeed()
	{
	}

	[Token(Token = "0x6000944")]
	[Address(RVA = "0x1138008", Offset = "0x1138008", VA = "0x1138008")]
	private void FadeOutAudio()
	{
	}

	[Token(Token = "0x6000945")]
	[Address(RVA = "0x11382F0", Offset = "0x11382F0", VA = "0x11382F0")]
	public LandingWheelSound()
	{
	}
}
[Token(Token = "0x20001C1")]
public class LandingZone : MonoBehaviour
{
	[Token(Token = "0x4000B19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<LandingZone> zones;

	[Token(Token = "0x6000946")]
	[Address(RVA = "0x11382F8", Offset = "0x11382F8", VA = "0x11382F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000947")]
	[Address(RVA = "0x1138384", Offset = "0x1138384", VA = "0x1138384")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000948")]
	[Address(RVA = "0x11380A8", Offset = "0x11380A8", VA = "0x11380A8")]
	public static bool IsWithinZone(Vector3 pos)
	{
		return default(bool);
	}

	[Token(Token = "0x6000949")]
	[Address(RVA = "0x1138410", Offset = "0x1138410", VA = "0x1138410")]
	public LandingZone()
	{
	}
}
[Token(Token = "0x20001C2")]
public class LensFlare2 : MonoBehaviour
{
	[Token(Token = "0x4000B1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3[] vert;

	[Token(Token = "0x4000B1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector2[] uvs;

	[Token(Token = "0x4000B1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int[] triangle;

	[Token(Token = "0x4000B1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Color[] color;

	[Token(Token = "0x4000B1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int[] uvIndex;

	[Token(Token = "0x4000B1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float[] scale;

	[Token(Token = "0x4000B20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Mesh mesh;

	[Token(Token = "0x4000B21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector3[] vertices;

	[Token(Token = "0x4000B22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Color[] colors;

	[Token(Token = "0x4000B23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector2[] uv;

	[Token(Token = "0x4000B24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int[] triangles;

	[Token(Token = "0x600094B")]
	[Address(RVA = "0x113A4B0", Offset = "0x113A4B0", VA = "0x113A4B0")]
	private void Start()
	{
	}

	[Token(Token = "0x600094C")]
	[Address(RVA = "0x113AB0C", Offset = "0x113AB0C", VA = "0x113AB0C")]
	public void Update()
	{
	}

	[Token(Token = "0x600094D")]
	[Address(RVA = "0x113A5C4", Offset = "0x113A5C4", VA = "0x113A5C4")]
	public void CreateMesh()
	{
	}

	[Token(Token = "0x600094E")]
	[Address(RVA = "0x113AA0C", Offset = "0x113AA0C", VA = "0x113AA0C")]
	public void UpdateMesh()
	{
	}

	[Token(Token = "0x600094F")]
	[Address(RVA = "0x113AEC0", Offset = "0x113AEC0", VA = "0x113AEC0")]
	public LensFlare2()
	{
	}
}
[Token(Token = "0x20001C3")]
public class Lightmap : MonoBehaviour
{
	[Token(Token = "0x4000B25")]
	private const int res = 1024;

	[Token(Token = "0x4000B26")]
	private const float pixelSize = 8.7890625f;

	[Token(Token = "0x4000B27")]
	private const float pixelSizeInv = 0.11377778f;

	[Token(Token = "0x4000B28")]
	private const float halfPixelSize = 4.3945312f;

	[Token(Token = "0x4000B29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Texture2D rt;

	[Token(Token = "0x4000B2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Texture2D cloudShadows;

	[Token(Token = "0x4000B2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static RenderTexture rtMips;

	[Token(Token = "0x6000950")]
	[Address(RVA = "0x113D3D8", Offset = "0x113D3D8", VA = "0x113D3D8")]
	public static Vector3 FixPos(Vector3 v)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000951")]
	[Address(RVA = "0x113D444", Offset = "0x113D444", VA = "0x113D444")]
	public static bool AddShadow(Vector3 v)
	{
		return default(bool);
	}

	[Token(Token = "0x6000952")]
	[Address(RVA = "0x113D860", Offset = "0x113D860", VA = "0x113D860")]
	private static void Set(int x, int y, float f)
	{
	}

	[Token(Token = "0x6000953")]
	[Address(RVA = "0x113D900", Offset = "0x113D900", VA = "0x113D900")]
	public static void AddShadowHouse(Vector3 v)
	{
	}

	[Token(Token = "0x6000954")]
	[Address(RVA = "0x113DA74", Offset = "0x113DA74", VA = "0x113DA74")]
	public static void Apply()
	{
	}

	[Token(Token = "0x6000955")]
	[Address(RVA = "0x113DBD0", Offset = "0x113DBD0", VA = "0x113DBD0")]
	public static void Clear()
	{
	}

	[Token(Token = "0x6000956")]
	[Address(RVA = "0x113D620", Offset = "0x113D620", VA = "0x113D620")]
	public static void Init()
	{
	}

	[Token(Token = "0x6000957")]
	[Address(RVA = "0x113DC7C", Offset = "0x113DC7C", VA = "0x113DC7C")]
	public Lightmap()
	{
	}
}
[Token(Token = "0x20001C4")]
public enum eCondition
{
	[Token(Token = "0x4000B2D")]
	england,
	[Token(Token = "0x4000B2E")]
	europe,
	[Token(Token = "0x4000B2F")]
	tropical,
	[Token(Token = "0x4000B30")]
	winter,
	[Token(Token = "0x4000B31")]
	desert,
	[Token(Token = "0x4000B32")]
	num
}
[Token(Token = "0x20001C5")]
public enum eTerrainType
{
	[Token(Token = "0x4000B34")]
	land,
	[Token(Token = "0x4000B35")]
	river,
	[Token(Token = "0x4000B36")]
	delta,
	[Token(Token = "0x4000B37")]
	seashore,
	[Token(Token = "0x4000B38")]
	strait,
	[Token(Token = "0x4000B39")]
	island,
	[Token(Token = "0x4000B3A")]
	islands,
	[Token(Token = "0x4000B3B")]
	sea,
	[Token(Token = "0x4000B3C")]
	canal,
	[Token(Token = "0x4000B3D")]
	num
}
[Token(Token = "0x20001C6")]
public enum eLocationType
{
	[Token(Token = "0x4000B3F")]
	None,
	[Token(Token = "0x4000B40")]
	PearlHarbor,
	[Token(Token = "0x4000B41")]
	Midway,
	[Token(Token = "0x4000B42")]
	PortMorseby,
	[Token(Token = "0x4000B43")]
	Truk,
	[Token(Token = "0x4000B44")]
	Palau,
	[Token(Token = "0x4000B45")]
	Palawan,
	[Token(Token = "0x4000B46")]
	Okinawa,
	[Token(Token = "0x4000B47")]
	IwoJima,
	[Token(Token = "0x4000B48")]
	Ogasawara,
	[Token(Token = "0x4000B49")]
	PapuaTalbot,
	[Token(Token = "0x4000B4A")]
	Guam,
	[Token(Token = "0x4000B4B")]
	Salomons,
	[Token(Token = "0x4000B4C")]
	Marians,
	[Token(Token = "0x4000B4D")]
	Philipines,
	[Token(Token = "0x4000B4E")]
	PapuaWest,
	[Token(Token = "0x4000B4F")]
	Hawaii,
	[Token(Token = "0x4000B50")]
	HawaiiIslands,
	[Token(Token = "0x4000B51")]
	Birma,
	[Token(Token = "0x4000B52")]
	BorneoNorth,
	[Token(Token = "0x4000B53")]
	BorneoEast,
	[Token(Token = "0x4000B54")]
	BorneoMiddleEast,
	[Token(Token = "0x4000B55")]
	Campaign
}
[Token(Token = "0x20001C7")]
public class Location : MonoBehaviour
{
	[Token(Token = "0x4000B56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Location instance;

	[Token(Token = "0x4000B57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public eLocationType locationType;

	[Token(Token = "0x4000B58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public eTerrainType terrainType;

	[Token(Token = "0x4000B59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool road;

	[Token(Token = "0x4000B5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool bridge;

	[Token(Token = "0x4000B5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool boats;

	[Token(Token = "0x4000B5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	public bool ships;

	[Token(Token = "0x4000B5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool tanks;

	[Token(Token = "0x4000B5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool town;

	[Token(Token = "0x4000B5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
	public bool myBase;

	[Token(Token = "0x6000958")]
	[Address(RVA = "0x113EC68", Offset = "0x113EC68", VA = "0x113EC68")]
	public string GetTerrainTypeName()
	{
		return null;
	}

	[Token(Token = "0x6000959")]
	[Address(RVA = "0x113ED1C", Offset = "0x113ED1C", VA = "0x113ED1C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600095A")]
	[Address(RVA = "0x113ED84", Offset = "0x113ED84", VA = "0x113ED84")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600095B")]
	[Address(RVA = "0x113EE5C", Offset = "0x113EE5C", VA = "0x113EE5C")]
	public void Start()
	{
	}

	[Token(Token = "0x600095C")]
	[Address(RVA = "0x113EEB4", Offset = "0x113EEB4", VA = "0x113EEB4")]
	protected List<Component> FillMultiIdObjects()
	{
		return null;
	}

	[Token(Token = "0x600095D")]
	[Address(RVA = "0x113F13C", Offset = "0x113F13C", VA = "0x113F13C")]
	protected int GetMultiLocationId(Component obj)
	{
		return default(int);
	}

	[Token(Token = "0x600095E")]
	[Address(RVA = "0x113F2A4", Offset = "0x113F2A4", VA = "0x113F2A4")]
	protected void InitMultiId(bool inEditor)
	{
	}

	[Token(Token = "0x600095F")]
	[Address(RVA = "0x113F7FC", Offset = "0x113F7FC", VA = "0x113F7FC")]
	public void UpdateMultiId()
	{
	}

	[Token(Token = "0x6000960")]
	[Address(RVA = "0x113F804", Offset = "0x113F804", VA = "0x113F804")]
	public void InitLocationObjectsMultiplayer()
	{
	}

	[Token(Token = "0x6000961")]
	[Address(RVA = "0x113F80C", Offset = "0x113F80C", VA = "0x113F80C")]
	private bool IsGenericLocation()
	{
		return default(bool);
	}

	[Token(Token = "0x6000962")]
	[Address(RVA = "0x113F81C", Offset = "0x113F81C", VA = "0x113F81C")]
	public void TranslateWorldSpace(Vector3 center)
	{
	}

	[Token(Token = "0x6000963")]
	[Address(RVA = "0x113FC40", Offset = "0x113FC40", VA = "0x113FC40")]
	public void Translate(Vector2 localNormalizedMapPos)
	{
	}

	[Token(Token = "0x6000964")]
	[Address(RVA = "0x114003C", Offset = "0x114003C", VA = "0x114003C")]
	public Location()
	{
	}

	[Token(Token = "0x6000966")]
	[Address(RVA = "0x1140048", Offset = "0x1140048", VA = "0x1140048")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x925EFC", Offset = "0x925EFC")]
	private int <InitMultiId>b__16_0(Component a, Component b)
	{
		return default(int);
	}
}
[Token(Token = "0x20001C8")]
public class MUI_click_LoadScene_Fade : MonoBehaviour
{
	[Token(Token = "0x4000B60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string sceneName;

	[Token(Token = "0x4000B61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fadeTime;

	[Token(Token = "0x4000B62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool load;

	[Token(Token = "0x4000B63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float startTime;

	[Token(Token = "0x4000B64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Action callbackBeforeLoad;

	[Token(Token = "0x4000B65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int waitFrames;

	[Token(Token = "0x4000B66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string fadeText;

	[Token(Token = "0x4000B67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static MUI_click_LoadScene_Fade fadeLoad;

	[Token(Token = "0x6000967")]
	[Address(RVA = "0x135B6B8", Offset = "0x135B6B8", VA = "0x135B6B8")]
	public static bool IsLoading()
	{
		return default(bool);
	}

	[Token(Token = "0x6000968")]
	[Address(RVA = "0x135B758", Offset = "0x135B758", VA = "0x135B758")]
	public static bool LoadScane(string _sceneName, float _fadeTime, [Optional] Action _callbackBeforeLoad, string _fadeText = "")
	{
		return default(bool);
	}

	[Token(Token = "0x6000969")]
	[Address(RVA = "0x135B924", Offset = "0x135B924", VA = "0x135B924")]
	public void Click()
	{
	}

	[Token(Token = "0x600096A")]
	[Address(RVA = "0x135B9B4", Offset = "0x135B9B4", VA = "0x135B9B4")]
	private void Start()
	{
	}

	[Token(Token = "0x600096B")]
	[Address(RVA = "0x135BA54", Offset = "0x135BA54", VA = "0x135BA54")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600096C")]
	[Address(RVA = "0x135BB2C", Offset = "0x135BB2C", VA = "0x135BB2C")]
	private void Update()
	{
	}

	[Token(Token = "0x600096D")]
	[Address(RVA = "0x135BCDC", Offset = "0x135BCDC", VA = "0x135BCDC")]
	public MUI_click_LoadScene_Fade()
	{
	}
}
[Token(Token = "0x20001C9")]
public class MUI_click_LoadScene_Progress_Fade : MonoBehaviour
{
	[Token(Token = "0x4000B68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string sceneName;

	[Token(Token = "0x4000B69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fadeTime;

	[Token(Token = "0x600096F")]
	[Address(RVA = "0x135BD48", Offset = "0x135BD48", VA = "0x135BD48")]
	public void Click()
	{
	}

	[Token(Token = "0x6000970")]
	[Address(RVA = "0x135BDD8", Offset = "0x135BDD8", VA = "0x135BDD8")]
	public MUI_click_LoadScene_Progress_Fade()
	{
	}
}
[Token(Token = "0x20001CA")]
public class MUI_click_Select : MonoBehaviour
{
	[Token(Token = "0x4000B6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4000B6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject hideTarget;

	[Token(Token = "0x4000B6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject hideTarget2;

	[Token(Token = "0x6000971")]
	[Address(RVA = "0x135C018", Offset = "0x135C018", VA = "0x135C018")]
	public void Click()
	{
	}

	[Token(Token = "0x6000972")]
	[Address(RVA = "0x135C1A8", Offset = "0x135C1A8", VA = "0x135C1A8")]
	public MUI_click_Select()
	{
	}
}
[Token(Token = "0x20001CB")]
public class MainMenuWindow : AnimatedMenu
{
	[Token(Token = "0x20001CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x917D3C", Offset = "0x917D3C")]
	private sealed class <>c__DisplayClass35_0
	{
		[Token(Token = "0x4000B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool multiplayer;

		[Token(Token = "0x600098D")]
		[Address(RVA = "0xE68AB8", Offset = "0xE68AB8", VA = "0xE68AB8")]
		public <>c__DisplayClass35_0()
		{
		}

		[Token(Token = "0x600098E")]
		[Address(RVA = "0xE68AC0", Offset = "0xE68AC0", VA = "0xE68AC0")]
		internal void <EnterGame>b__0()
		{
		}
	}

	[Token(Token = "0x20001CD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x917D4C", Offset = "0x917D4C")]
	private sealed class <OpenCloudSaveYielded>d__38 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MainMenuWindow <>4__this;

		[Token(Token = "0x17000090")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000992")]
			[Address(RVA = "0xE692A0", Offset = "0xE692A0", VA = "0xE692A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000091")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000994")]
			[Address(RVA = "0xE692E8", Offset = "0xE692E8", VA = "0xE692E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600098F")]
		[Address(RVA = "0xE69040", Offset = "0xE69040", VA = "0xE69040")]
		[DebuggerHidden]
		public <OpenCloudSaveYielded>d__38(int <>1__state)
		{
		}

		[Token(Token = "0x6000990")]
		[Address(RVA = "0xE6906C", Offset = "0xE6906C", VA = "0xE6906C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000991")]
		[Address(RVA = "0xE69070", Offset = "0xE69070", VA = "0xE69070", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000993")]
		[Address(RVA = "0xE692A8", Offset = "0xE692A8", VA = "0xE692A8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001CE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x917D5C", Offset = "0x917D5C")]
	private sealed class <CloseCloudSaveYielded>d__40 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MainMenuWindow <>4__this;

		[Token(Token = "0x17000092")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000998")]
			[Address(RVA = "0xE68E20", Offset = "0xE68E20", VA = "0xE68E20", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000093")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600099A")]
			[Address(RVA = "0xE68E68", Offset = "0xE68E68", VA = "0xE68E68", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000995")]
		[Address(RVA = "0xE68B38", Offset = "0xE68B38", VA = "0xE68B38")]
		[DebuggerHidden]
		public <CloseCloudSaveYielded>d__40(int <>1__state)
		{
		}

		[Token(Token = "0x6000996")]
		[Address(RVA = "0xE68B64", Offset = "0xE68B64", VA = "0xE68B64", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000997")]
		[Address(RVA = "0xE68B68", Offset = "0xE68B68", VA = "0xE68B68", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000999")]
		[Address(RVA = "0xE68E28", Offset = "0xE68E28", VA = "0xE68E28", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001CF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x917D6C", Offset = "0x917D6C")]
	private sealed class <ExitYielded>d__44 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000094")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600099E")]
			[Address(RVA = "0xE68FF0", Offset = "0xE68FF0", VA = "0xE68FF0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000095")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009A0")]
			[Address(RVA = "0xE69038", Offset = "0xE69038", VA = "0xE69038", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600099B")]
		[Address(RVA = "0xE68E70", Offset = "0xE68E70", VA = "0xE68E70")]
		[DebuggerHidden]
		public <ExitYielded>d__44(int <>1__state)
		{
		}

		[Token(Token = "0x600099C")]
		[Address(RVA = "0xE68E9C", Offset = "0xE68E9C", VA = "0xE68E9C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600099D")]
		[Address(RVA = "0xE68EA0", Offset = "0xE68EA0", VA = "0xE68EA0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600099F")]
		[Address(RVA = "0xE68FF8", Offset = "0xE68FF8", VA = "0xE68FF8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MainMenuWindow instance;

	[Token(Token = "0x4000B6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool openCloudSaveOnStart;

	[Token(Token = "0x4000B6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private GameObject wndMain;

	[Token(Token = "0x4000B70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private GameObject wndGamePromo;

	[Token(Token = "0x4000B71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private GameObject blinkCloudObject;

	[Token(Token = "0x4000B72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private AnimatedMenuItem itemCloudSave;

	[Token(Token = "0x4000B73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private AnimatedMenuItemSecondSide itemSettings;

	[Token(Token = "0x4000B74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private AnimatedMenuItemSecondSide itemControls;

	[Token(Token = "0x4000B75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private AnimatedMenuItem itemExit;

	[Token(Token = "0x4000B76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private AnimatedMenuItemSecondSideOrCallFunc itemSingleplayer;

	[Token(Token = "0x4000B77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private AnimatedMenuItemSecondSideOrCallFunc itemMultiplayer;

	[Token(Token = "0x4000B78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private TextMesh multiplayerMessage;

	[Token(Token = "0x4000B79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public bool loadLocation;

	[Token(Token = "0x4000B7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject locationPrefab;

	[Token(Token = "0x4000B7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject forestPrefab;

	[Token(Token = "0x4000B7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private bool singleplayerExist;

	[Token(Token = "0x4000B7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE9")]
	private bool blinkCloudSaveButton;

	[Token(Token = "0x4000B7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEA")]
	private bool stopBlinkCloudSave;

	[Token(Token = "0x4000B7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private float blinkCloudSaveTime;

	[Token(Token = "0x4000B80")]
	private const float exitFadeTime = 1f;

	[Token(Token = "0x6000973")]
	[Address(RVA = "0x135F6F4", Offset = "0x135F6F4", VA = "0x135F6F4", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000974")]
	[Address(RVA = "0x135F94C", Offset = "0x135F94C", VA = "0x135F94C", Slot = "6")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000975")]
	[Address(RVA = "0x135FA00", Offset = "0x135FA00", VA = "0x135FA00", Slot = "7")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000976")]
	[Address(RVA = "0x135FAB4", Offset = "0x135FAB4", VA = "0x135FAB4", Slot = "5")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x6000977")]
	[Address(RVA = "0x135FB10", Offset = "0x135FB10", VA = "0x135FB10", Slot = "8")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000978")]
	[Address(RVA = "0x135FDC0", Offset = "0x135FDC0", VA = "0x135FDC0", Slot = "9")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000979")]
	[Address(RVA = "0x135FEE0", Offset = "0x135FEE0", VA = "0x135FEE0", Slot = "10")]
	protected override void CurlItems(AnimatedMenuItem item, bool immediate = false)
	{
	}

	[Token(Token = "0x600097A")]
	[Address(RVA = "0x135FF98", Offset = "0x135FF98", VA = "0x135FF98")]
	public void ShowMainWindow(bool show)
	{
	}

	[Token(Token = "0x600097B")]
	[Address(RVA = "0x135FFB8", Offset = "0x135FFB8", VA = "0x135FFB8")]
	public bool HaveOpenSecondSideWindows()
	{
		return default(bool);
	}

	[Token(Token = "0x600097C")]
	[Address(RVA = "0x1360008", Offset = "0x1360008", VA = "0x1360008")]
	public void CloseOpenSecondSideWindows()
	{
	}

	[Token(Token = "0x600097D")]
	[Address(RVA = "0x1360078", Offset = "0x1360078", VA = "0x1360078")]
	private void OnClickSingleplayer()
	{
	}

	[Token(Token = "0x600097E")]
	[Address(RVA = "0x13601F4", Offset = "0x13601F4", VA = "0x13601F4")]
	private void OnClickMultiplayer()
	{
	}

	[Token(Token = "0x600097F")]
	[Address(RVA = "0x13601FC", Offset = "0x13601FC", VA = "0x13601FC")]
	private bool CallbackCallFuncMultiplayer()
	{
		return default(bool);
	}

	[Token(Token = "0x6000980")]
	[Address(RVA = "0x13603D8", Offset = "0x13603D8", VA = "0x13603D8")]
	private void OnMultiplayerSecondSideSetActive(bool active)
	{
	}

	[Token(Token = "0x6000981")]
	[Address(RVA = "0x135FD38", Offset = "0x135FD38", VA = "0x135FD38")]
	private void UpdateSingleplayer()
	{
	}

	[Token(Token = "0x6000982")]
	[Address(RVA = "0x1360080", Offset = "0x1360080", VA = "0x1360080")]
	private void EnterGame(bool multiplayer)
	{
	}

	[Token(Token = "0x6000983")]
	[Address(RVA = "0x1360450", Offset = "0x1360450", VA = "0x1360450")]
	private void OnStartGameDiff(int m)
	{
	}

	[Token(Token = "0x6000984")]
	[Address(RVA = "0x1360608", Offset = "0x1360608", VA = "0x1360608")]
	private void OnClickCloudSave()
	{
	}

	[Token(Token = "0x6000985")]
	[Address(RVA = "0x1360634", Offset = "0x1360634", VA = "0x1360634")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x925F0C", Offset = "0x925F0C")]
	private IEnumerator OpenCloudSaveYielded()
	{
		return null;
	}

	[Token(Token = "0x6000986")]
	[Address(RVA = "0x13606A0", Offset = "0x13606A0", VA = "0x13606A0")]
	public void OnUnloadCloudSave()
	{
	}

	[Token(Token = "0x6000987")]
	[Address(RVA = "0x13606CC", Offset = "0x13606CC", VA = "0x13606CC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x925F6C", Offset = "0x925F6C")]
	private IEnumerator CloseCloudSaveYielded()
	{
		return null;
	}

	[Token(Token = "0x6000988")]
	[Address(RVA = "0x1360738", Offset = "0x1360738", VA = "0x1360738")]
	public void OnCloudSaveConflict()
	{
	}

	[Token(Token = "0x6000989")]
	[Address(RVA = "0x1360744", Offset = "0x1360744", VA = "0x1360744")]
	public void ClearCloudSaveConflict()
	{
	}

	[Token(Token = "0x600098A")]
	[Address(RVA = "0x1360758", Offset = "0x1360758", VA = "0x1360758")]
	private void OnClickExit()
	{
	}

	[Token(Token = "0x600098B")]
	[Address(RVA = "0x1360808", Offset = "0x1360808", VA = "0x1360808")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x925FCC", Offset = "0x925FCC")]
	private IEnumerator ExitYielded()
	{
		return null;
	}

	[Token(Token = "0x600098C")]
	[Address(RVA = "0x1360864", Offset = "0x1360864", VA = "0x1360864")]
	public MainMenuWindow()
	{
	}
}
[Token(Token = "0x20001D0")]
public class MapIcon : MonoBehaviour
{
	[Token(Token = "0x60009A1")]
	[Address(RVA = "0x1361024", Offset = "0x1361024", VA = "0x1361024")]
	public void Awake()
	{
	}

	[Token(Token = "0x60009A2")]
	[Address(RVA = "0x136109C", Offset = "0x136109C", VA = "0x136109C")]
	public MapIcon()
	{
	}
}
[Token(Token = "0x20001D1")]
public class MapMarkerIcon : MonoBehaviour
{
	[Token(Token = "0x20001D2")]
	public enum IconType
	{
		[Token(Token = "0x4000B90")]
		AA,
		[Token(Token = "0x4000B91")]
		Airfield,
		[Token(Token = "0x4000B92")]
		Balloon,
		[Token(Token = "0x4000B93")]
		Base,
		[Token(Token = "0x4000B94")]
		Bomber,
		[Token(Token = "0x4000B95")]
		Bridge,
		[Token(Token = "0x4000B96")]
		Bunker,
		[Token(Token = "0x4000B97")]
		Dogfight,
		[Token(Token = "0x4000B98")]
		Factory,
		[Token(Token = "0x4000B99")]
		Naval,
		[Token(Token = "0x4000B9A")]
		RadioTower,
		[Token(Token = "0x4000B9B")]
		Tank,
		[Token(Token = "0x4000B9C")]
		Town,
		[Token(Token = "0x4000B9D")]
		Train,
		[Token(Token = "0x4000B9E")]
		Truck,
		[Token(Token = "0x4000B9F")]
		Num
	}

	[Token(Token = "0x4000B8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Material[] icons;

	[Token(Token = "0x4000B8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Material[] tutorialIcons;

	[Token(Token = "0x4000B8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Texture2D textureRed;

	[Token(Token = "0x4000B8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Texture2D textureBlue;

	[Token(Token = "0x4000B8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static MapMarkerIcon instance;

	[Token(Token = "0x60009A3")]
	[Address(RVA = "0x13610A4", Offset = "0x13610A4", VA = "0x13610A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009A4")]
	[Address(RVA = "0x13610F4", Offset = "0x13610F4", VA = "0x13610F4")]
	public static bool Setup(MeshRenderer tag, MissionPosition mp)
	{
		return default(bool);
	}

	[Token(Token = "0x60009A5")]
	[Address(RVA = "0x136119C", Offset = "0x136119C", VA = "0x136119C")]
	private static bool SetupTutorial(MeshRenderer tag, MissionPositionTutorial mp)
	{
		return default(bool);
	}

	[Token(Token = "0x60009A6")]
	[Address(RVA = "0x1361244", Offset = "0x1361244", VA = "0x1361244")]
	private static bool SetupCampaign(MeshRenderer tag, MissionPosition mp)
	{
		return default(bool);
	}

	[Token(Token = "0x60009A7")]
	[Address(RVA = "0x13613C4", Offset = "0x13613C4", VA = "0x13613C4")]
	public MapMarkerIcon()
	{
	}
}
[Token(Token = "0x20001D3")]
public class MarkAsTaskUnit : MonoBehaviour
{
	[Token(Token = "0x4000BA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public eqType type;

	[Token(Token = "0x60009A8")]
	[Address(RVA = "0x13613CC", Offset = "0x13613CC", VA = "0x13613CC")]
	private void Start()
	{
	}

	[Token(Token = "0x60009A9")]
	[Address(RVA = "0x13613D0", Offset = "0x13613D0", VA = "0x13613D0")]
	private void TaskUnitDestroyed(Hull h)
	{
	}

	[Token(Token = "0x60009AA")]
	[Address(RVA = "0x136143C", Offset = "0x136143C", VA = "0x136143C")]
	public MarkAsTaskUnit()
	{
	}
}
[Token(Token = "0x20001D4")]
public class MenuBaseHelp : MonoBehaviour
{
	[Token(Token = "0x4000BA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMesh text;

	[Token(Token = "0x60009AB")]
	[Address(RVA = "0x1365D54", Offset = "0x1365D54", VA = "0x1365D54")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009AC")]
	[Address(RVA = "0x1366094", Offset = "0x1366094", VA = "0x1366094")]
	public MenuBaseHelp()
	{
	}
}
[Token(Token = "0x20001D5")]
public class MenuBriefing : MonoBehaviour
{
	[Token(Token = "0x20001D6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x917D7C", Offset = "0x917D7C")]
	private sealed class <StartBriefing>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MenuBriefing <>4__this;

		[Token(Token = "0x17000096")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009B5")]
			[Address(RVA = "0xE6A6DC", Offset = "0xE6A6DC", VA = "0xE6A6DC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000097")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009B7")]
			[Address(RVA = "0xE6A724", Offset = "0xE6A724", VA = "0xE6A724", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009B2")]
		[Address(RVA = "0xE6A510", Offset = "0xE6A510", VA = "0xE6A510")]
		[DebuggerHidden]
		public <StartBriefing>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x60009B3")]
		[Address(RVA = "0xE6A53C", Offset = "0xE6A53C", VA = "0xE6A53C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009B4")]
		[Address(RVA = "0xE6A540", Offset = "0xE6A540", VA = "0xE6A540", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009B6")]
		[Address(RVA = "0xE6A6E4", Offset = "0xE6A6E4", VA = "0xE6A6E4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject windowShow;

	[Token(Token = "0x4000BA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMesh textBriefing;

	[Token(Token = "0x4000BA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMesh textTitle;

	[Token(Token = "0x4000BA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string trlTitleDefault;

	[Token(Token = "0x4000BA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public BaseMenu baseMenu;

	[Token(Token = "0x4000BA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMesh textRewardCustomGold;

	[Token(Token = "0x4000BA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject windowCommunity;

	[Token(Token = "0x60009AD")]
	[Address(RVA = "0x136609C", Offset = "0x136609C", VA = "0x136609C")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x60009AE")]
	[Address(RVA = "0x136619C", Offset = "0x136619C", VA = "0x136619C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92711C", Offset = "0x92711C")]
	public IEnumerator StartBriefing()
	{
		return null;
	}

	[Token(Token = "0x60009AF")]
	[Address(RVA = "0x1366208", Offset = "0x1366208", VA = "0x1366208")]
	private void OnStart()
	{
	}

	[Token(Token = "0x60009B0")]
	[Address(RVA = "0x136620C", Offset = "0x136620C", VA = "0x136620C")]
	private void OnBack()
	{
	}

	[Token(Token = "0x60009B1")]
	[Address(RVA = "0x1366234", Offset = "0x1366234", VA = "0x1366234")]
	public MenuBriefing()
	{
	}
}
[Token(Token = "0x20001D7")]
public class MenuCareer : MonoBehaviour
{
	[Token(Token = "0x4000BAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMesh medals;

	[Token(Token = "0x4000BAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMesh help;

	[Token(Token = "0x4000BAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject undoButton;

	[Token(Token = "0x4000BAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string save;

	[Token(Token = "0x4000BB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static MenuCareer instance;

	[Token(Token = "0x4000BB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool fromRefresh;

	[Token(Token = "0x60009B8")]
	[Address(RVA = "0x1366288", Offset = "0x1366288", VA = "0x1366288")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009B9")]
	[Address(RVA = "0x13666E4", Offset = "0x13666E4", VA = "0x13666E4")]
	private void Undo()
	{
	}

	[Token(Token = "0x60009BA")]
	[Address(RVA = "0x13667CC", Offset = "0x13667CC", VA = "0x13667CC")]
	public static void OnChangeSkill()
	{
	}

	[Token(Token = "0x60009BB")]
	[Address(RVA = "0x13668A4", Offset = "0x13668A4", VA = "0x13668A4")]
	public MenuCareer()
	{
	}
}
[Token(Token = "0x20001D8")]
public class MenuTips : MonoBehaviour
{
	[Token(Token = "0x4000BB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMesh tm;

	[Token(Token = "0x4000BB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int index;

	[Token(Token = "0x4000BB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int tipsNum;

	[Token(Token = "0x60009BD")]
	[Address(RVA = "0x13668B0", Offset = "0x13668B0", VA = "0x13668B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009BE")]
	[Address(RVA = "0x136697C", Offset = "0x136697C", VA = "0x136697C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009BF")]
	[Address(RVA = "0x1366A98", Offset = "0x1366A98", VA = "0x1366A98")]
	private void Next()
	{
	}

	[Token(Token = "0x60009C0")]
	[Address(RVA = "0x1366AA8", Offset = "0x1366AA8", VA = "0x1366AA8")]
	private void Prev()
	{
	}

	[Token(Token = "0x60009C1")]
	[Address(RVA = "0x1366AB8", Offset = "0x1366AB8", VA = "0x1366AB8")]
	private void FixIndex()
	{
	}

	[Token(Token = "0x60009C2")]
	[Address(RVA = "0x1366980", Offset = "0x1366980", VA = "0x1366980")]
	private void Print()
	{
	}

	[Token(Token = "0x60009C3")]
	[Address(RVA = "0x1366AD8", Offset = "0x1366AD8", VA = "0x1366AD8")]
	public MenuTips()
	{
	}
}
[Token(Token = "0x20001D9")]
public class MessageBox : MonoBehaviour
{
	[Token(Token = "0x4000BB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MessageBox instance;

	[Token(Token = "0x4000BB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMesh tm;

	[Token(Token = "0x4000BB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform bkg;

	[Token(Token = "0x4000BB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] buttons;

	[Token(Token = "0x4000BB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool yes;

	[Token(Token = "0x60009C4")]
	[Address(RVA = "0x11E2460", Offset = "0x11E2460", VA = "0x11E2460")]
	public void Awake()
	{
	}

	[Token(Token = "0x60009C5")]
	[Address(RVA = "0x11E24E4", Offset = "0x11E24E4", VA = "0x11E24E4")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x60009C6")]
	[Address(RVA = "0x11E24E8", Offset = "0x11E24E8", VA = "0x11E24E8")]
	public static bool IsOpen()
	{
		return default(bool);
	}

	[Token(Token = "0x60009C7")]
	[Address(RVA = "0x11E25DC", Offset = "0x11E25DC", VA = "0x11E25DC")]
	public static void Show(string t)
	{
	}

	[Token(Token = "0x60009C8")]
	[Address(RVA = "0x11E29FC", Offset = "0x11E29FC", VA = "0x11E29FC")]
	public static void ShowYesNo(string t)
	{
	}

	[Token(Token = "0x60009C9")]
	[Address(RVA = "0x11E2AEC", Offset = "0x11E2AEC", VA = "0x11E2AEC")]
	public static void ShowNurse(string t)
	{
	}

	[Token(Token = "0x60009CA")]
	[Address(RVA = "0x11E2BDC", Offset = "0x11E2BDC", VA = "0x11E2BDC")]
	public static void ShowMechanic(string t)
	{
	}

	[Token(Token = "0x60009CB")]
	[Address(RVA = "0x11E2CCC", Offset = "0x11E2CCC", VA = "0x11E2CCC")]
	public static void ShowMechanicYesNo(string t)
	{
	}

	[Token(Token = "0x60009CC")]
	[Address(RVA = "0x11E2DBC", Offset = "0x11E2DBC", VA = "0x11E2DBC")]
	public static void ShowGoldInApp()
	{
	}

	[Token(Token = "0x60009CD")]
	[Address(RVA = "0x11E2E6C", Offset = "0x11E2E6C", VA = "0x11E2E6C")]
	public static void ShowGoldInApp(string t)
	{
	}

	[Token(Token = "0x60009CE")]
	[Address(RVA = "0x11E2F5C", Offset = "0x11E2F5C", VA = "0x11E2F5C")]
	public void Yes()
	{
	}

	[Token(Token = "0x60009CF")]
	[Address(RVA = "0x11E26CC", Offset = "0x11E26CC", VA = "0x11E26CC")]
	private void ShowP(string t, int p, bool question, bool goldInApp)
	{
	}

	[Token(Token = "0x60009D0")]
	[Address(RVA = "0x11E2FC4", Offset = "0x11E2FC4", VA = "0x11E2FC4")]
	public MessageBox()
	{
	}
}
[Token(Token = "0x20001DA")]
public enum eMissile
{
	[Token(Token = "0x4000BBB")]
	gun_double_wide,
	[Token(Token = "0x4000BBC")]
	gun_single,
	[Token(Token = "0x4000BBD")]
	bombMed,
	[Token(Token = "0x4000BBE")]
	rocket,
	[Token(Token = "0x4000BBF")]
	torpedo,
	[Token(Token = "0x4000BC0")]
	gun_double_close,
	[Token(Token = "0x4000BC1")]
	tank,
	[Token(Token = "0x4000BC2")]
	cannon20mm_double_close,
	[Token(Token = "0x4000BC3")]
	cannon20mm_quadruple,
	[Token(Token = "0x4000BC4")]
	cannon20mm_double,
	[Token(Token = "0x4000BC5")]
	gun_double_med,
	[Token(Token = "0x4000BC6")]
	gun_quadruple,
	[Token(Token = "0x4000BC7")]
	bombSmall,
	[Token(Token = "0x4000BC8")]
	invisibleBomb,
	[Token(Token = "0x4000BC9")]
	bombBig,
	[Token(Token = "0x4000BCA")]
	bombHuge,
	[Token(Token = "0x4000BCB")]
	cannon37mm_double,
	[Token(Token = "0x4000BCC")]
	cannon20mm_single,
	[Token(Token = "0x4000BCD")]
	gun_6_boufighter,
	[Token(Token = "0x4000BCE")]
	gun_double_wide2,
	[Token(Token = "0x4000BCF")]
	gun_4_close,
	[Token(Token = "0x4000BD0")]
	gun_4_2x2,
	[Token(Token = "0x4000BD1")]
	cannon30mm_quadruple_close,
	[Token(Token = "0x4000BD2")]
	cannon20mm_quadruple_close,
	[Token(Token = "0x4000BD3")]
	cannon20mm_quadruple_close2,
	[Token(Token = "0x4000BD4")]
	cannon20mm_triple_close,
	[Token(Token = "0x4000BD5")]
	gun_6,
	[Token(Token = "0x4000BD6")]
	gun_quadruple2,
	[Token(Token = "0x4000BD7")]
	gun_quadruple3,
	[Token(Token = "0x4000BD8")]
	cannon37mm_single,
	[Token(Token = "0x4000BD9")]
	gun_6_2x3,
	[Token(Token = "0x4000BDA")]
	gun_8_2x4,
	[Token(Token = "0x4000BDB")]
	gun_6_special_F4F,
	[Token(Token = "0x4000BDC")]
	gun_4_2x2b,
	[Token(Token = "0x4000BDD")]
	bomb_kamikaze,
	[Token(Token = "0x4000BDE")]
	gun_4_2x2c,
	[Token(Token = "0x4000BDF")]
	cannon20mm_double_med,
	[Token(Token = "0x4000BE0")]
	cannon20mm_quadruple_close3,
	[Token(Token = "0x4000BE1")]
	gun_5,
	[Token(Token = "0x4000BE2")]
	gun_quadruple4,
	[Token(Token = "0x4000BE3")]
	gun_quadruple5,
	[Token(Token = "0x4000BE4")]
	cannon20mm_triple_close2,
	[Token(Token = "0x4000BE5")]
	handbomb,
	[Token(Token = "0x4000BE6")]
	flare,
	[Token(Token = "0x4000BE7")]
	cannon127mm_double,
	[Token(Token = "0x4000BE8")]
	bombTiny,
	[Token(Token = "0x4000BE9")]
	gun_brearcut_4,
	[Token(Token = "0x4000BEA")]
	gun_6_P82,
	[Token(Token = "0x4000BEB")]
	cannon20mm_quadruple_close4,
	[Token(Token = "0x4000BEC")]
	gun_4_2x2d,
	[Token(Token = "0x4000BED")]
	num
}
[Token(Token = "0x20001DB")]
public class Missile : MonoBehaviour
{
	[Token(Token = "0x4000BEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public eMissile type;

	[Token(Token = "0x4000BEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public eFX expl;

	[Token(Token = "0x4000BF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public eFX explTimeOut;

	[Token(Token = "0x4000BF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public eFX explGround;

	[Token(Token = "0x4000BF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public eFX explWater;

	[Token(Token = "0x4000BF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public eSoundFX sfxFly;

	[Token(Token = "0x4000BF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float speed;

	[Token(Token = "0x4000BF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float range;

	[Token(Token = "0x4000BF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float damage;

	[Token(Token = "0x4000BF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int bullets;

	[Token(Token = "0x4000BF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float hitRange;

	[Token(Token = "0x4000BF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool bomb;

	[Token(Token = "0x4000BFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	public bool torpedo;

	[Token(Token = "0x4000BFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject dummy;

	[Token(Token = "0x4000BFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject smoke;

	[Token(Token = "0x4000BFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public MissileDescriptionSet descriptionSet;

	[Token(Token = "0x4000BFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int radius;

	[Token(Token = "0x4000BFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private RaycastHit[] hitResult;

	[Token(Token = "0x4000C00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected AudioSource sndFly;

	[Token(Token = "0x4000C01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected bool remote;

	[Token(Token = "0x4000C02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	protected bool failure;

	[Token(Token = "0x4000C03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected GameObject myPlane;

	[Token(Token = "0x4000C04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected GameObject sender;

	[Token(Token = "0x4000C05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected Hull senderHull;

	[Token(Token = "0x4000C06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected bool shootByPlayer;

	[Token(Token = "0x4000C07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	protected eParty party;

	[Token(Token = "0x4000C08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected Vector3 vSpeed;

	[Token(Token = "0x4000C09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	protected float time;

	[Token(Token = "0x4000C0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Transform target;

	[Token(Token = "0x4000C0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float lastDamageGiven;

	[Token(Token = "0x4000C0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float damageMul;

	[Token(Token = "0x4000C0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float distanceMul;

	[Token(Token = "0x4000C0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private bool inWater;

	[Token(Token = "0x4000C0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC5")]
	private bool flyForward;

	[Token(Token = "0x4000C10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float lastGetHTime;

	[Token(Token = "0x4000C11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float lastGetH;

	[Token(Token = "0x60009D2")]
	[Address(RVA = "0x11E2FD0", Offset = "0x11E2FD0", VA = "0x11E2FD0")]
	public static bool IsBomb(eMissile m)
	{
		return default(bool);
	}

	[Token(Token = "0x60009D3")]
	[Address(RVA = "0x11E300C", Offset = "0x11E300C", VA = "0x11E300C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60009D4")]
	[Address(RVA = "0x11E3098", Offset = "0x11E3098", VA = "0x11E3098")]
	public bool Hidden()
	{
		return default(bool);
	}

	[Token(Token = "0x60009D5")]
	[Address(RVA = "0x11E30C8", Offset = "0x11E30C8", VA = "0x11E30C8")]
	public bool IsBombOrTorpedo()
	{
		return default(bool);
	}

	[Token(Token = "0x60009D6")]
	[Address(RVA = "0x11E3100", Offset = "0x11E3100", VA = "0x11E3100")]
	public bool IsShootByPlayer()
	{
		return default(bool);
	}

	[Token(Token = "0x60009D7")]
	[Address(RVA = "0x11E3108", Offset = "0x11E3108", VA = "0x11E3108")]
	public void SetDamageMul(float mul)
	{
	}

	[Token(Token = "0x60009D8")]
	[Address(RVA = "0x11E3210", Offset = "0x11E3210", VA = "0x11E3210")]
	public void DontChangeDamageFromDistanse()
	{
	}

	[Token(Token = "0x60009D9")]
	[Address(RVA = "0x11E321C", Offset = "0x11E321C", VA = "0x11E321C")]
	public PlaneBody GetPlaneShooter()
	{
		return null;
	}

	[Token(Token = "0x60009DA")]
	[Address(RVA = "0x11E32C0", Offset = "0x11E32C0", VA = "0x11E32C0")]
	protected void StartFlySnd()
	{
	}

	[Token(Token = "0x60009DB")]
	[Address(RVA = "0x11E3360", Offset = "0x11E3360", VA = "0x11E3360", Slot = "4")]
	public virtual void Setup(Vector3 pos, Quaternion rot, Vector3 vel, eParty p, GameObject mp, GameObject sender, bool _remote)
	{
	}

	[Token(Token = "0x60009DC")]
	[Address(RVA = "0x11E372C", Offset = "0x11E372C", VA = "0x11E372C", Slot = "5")]
	public virtual void SetTarget(Transform t)
	{
	}

	[Token(Token = "0x60009DD")]
	[Address(RVA = "0x11E3734", Offset = "0x11E3734", VA = "0x11E3734", Slot = "6")]
	public virtual void SetupBomb(Vector3 pos, Quaternion rot, Vector3 vel, eParty p, GameObject mp, bool iFlyForward, bool _remote)
	{
	}

	[Token(Token = "0x60009DE")]
	[Address(RVA = "0x11E39F8", Offset = "0x11E39F8", VA = "0x11E39F8")]
	public void SetupTorpedo(Vector3 pos, Quaternion rot, Vector3 vel, eParty p, GameObject mp, bool wasCorrectDrop, bool _remote)
	{
	}

	[Token(Token = "0x60009DF")]
	[Address(RVA = "0x11E3CC0", Offset = "0x11E3CC0", VA = "0x11E3CC0", Slot = "7")]
	public virtual void Hide()
	{
	}

	[Token(Token = "0x60009E0")]
	[Address(RVA = "0x11E3CE8", Offset = "0x11E3CE8", VA = "0x11E3CE8")]
	public float GetLastGivenDamage()
	{
		return default(float);
	}

	[Token(Token = "0x60009E1")]
	[Address(RVA = "0x11E3CF0", Offset = "0x11E3CF0", VA = "0x11E3CF0")]
	public void HitTorpedo(Collider other)
	{
	}

	[Token(Token = "0x60009E2")]
	[Address(RVA = "0x11E4700", Offset = "0x11E4700", VA = "0x11E4700", Slot = "8")]
	public virtual void Hit(Collider other)
	{
	}

	[Token(Token = "0x60009E3")]
	[Address(RVA = "0x11E3EAC", Offset = "0x11E3EAC", VA = "0x11E3EAC")]
	public void Bum(Transform t, Hull hull)
	{
	}

	[Token(Token = "0x60009E4")]
	[Address(RVA = "0x11E4BBC", Offset = "0x11E4BBC", VA = "0x11E4BBC")]
	public static void Multi_PlaneRemoteExpl(Hull hull, Quaternion misRot, eFX expl)
	{
	}

	[Token(Token = "0x60009E5")]
	[Address(RVA = "0x11E4EB8", Offset = "0x11E4EB8", VA = "0x11E4EB8")]
	public static void Multi_HullRemoteExpl(Hull hull, Vector3 posDelta, Quaternion misRot, eFX expl)
	{
	}

	[Token(Token = "0x60009E6")]
	[Address(RVA = "0x11E4F9C", Offset = "0x11E4F9C", VA = "0x11E4F9C")]
	public static void Multi_RemoteExpl(Vector3 pos, eFX expl)
	{
	}

	[Token(Token = "0x60009E7")]
	[Address(RVA = "0x11E4FA4", Offset = "0x11E4FA4", VA = "0x11E4FA4", Slot = "9")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x60009E8")]
	[Address(RVA = "0x11E5084", Offset = "0x11E5084", VA = "0x11E5084", Slot = "10")]
	protected virtual bool DetectCollision()
	{
		return default(bool);
	}

	[Token(Token = "0x60009E9")]
	[Address(RVA = "0x11E55C0", Offset = "0x11E55C0", VA = "0x11E55C0", Slot = "11")]
	protected virtual void Move()
	{
	}

	[Token(Token = "0x60009EA")]
	[Address(RVA = "0x11E564C", Offset = "0x11E564C", VA = "0x11E564C", Slot = "12")]
	protected virtual void PrepareMove()
	{
	}

	[Token(Token = "0x60009EB")]
	[Address(RVA = "0x11E5818", Offset = "0x11E5818", VA = "0x11E5818")]
	public bool MoveTorpedo()
	{
		return default(bool);
	}

	[Token(Token = "0x60009EC")]
	[Address(RVA = "0x11E5ACC", Offset = "0x11E5ACC", VA = "0x11E5ACC")]
	public float GetGroundH()
	{
		return default(float);
	}

	[Token(Token = "0x60009ED")]
	[Address(RVA = "0x11E5C90", Offset = "0x11E5C90", VA = "0x11E5C90")]
	public Missile()
	{
	}
}
[Serializable]
[Token(Token = "0x20001DC")]
public class MissileDescription
{
	[Token(Token = "0x4000C12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int mass;

	[Token(Token = "0x4000C13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string name;

	[Token(Token = "0x60009EE")]
	[Address(RVA = "0x11E5D18", Offset = "0x11E5D18", VA = "0x11E5D18")]
	public MissileDescription()
	{
	}
}
[Token(Token = "0x20001DD")]
public class MissileDescriptionSet : MonoBehaviour
{
	[Token(Token = "0x4000C14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private MissileDescription[] descriptions;

	[Token(Token = "0x60009EF")]
	[Address(RVA = "0x11E5D20", Offset = "0x11E5D20", VA = "0x11E5D20")]
	public MissileDescription Get(eNation nation)
	{
		return null;
	}

	[Token(Token = "0x60009F0")]
	[Address(RVA = "0x11E5D5C", Offset = "0x11E5D5C", VA = "0x11E5D5C")]
	public MissileDescription GetPlayerNation()
	{
		return null;
	}

	[Token(Token = "0x60009F1")]
	[Address(RVA = "0x11E5E30", Offset = "0x11E5E30", VA = "0x11E5E30")]
	public MissileDescriptionSet()
	{
	}
}
[Token(Token = "0x20001DE")]
public class MissileManager : MonoBehaviour
{
	[Token(Token = "0x4000C15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int arraySize;

	[Token(Token = "0x4000C16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int missilesNum;

	[Token(Token = "0x4000C17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static MissileManager instance;

	[Token(Token = "0x4000C18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Missile[] data;

	[Token(Token = "0x4000C19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Missile[] prefab;

	[Token(Token = "0x60009F2")]
	[Address(RVA = "0x11E5E38", Offset = "0x11E5E38", VA = "0x11E5E38")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009F3")]
	[Address(RVA = "0x11E5E3C", Offset = "0x11E5E3C", VA = "0x11E5E3C")]
	private void Initialize()
	{
	}

	[Token(Token = "0x60009F4")]
	[Address(RVA = "0x11E60D0", Offset = "0x11E60D0", VA = "0x11E60D0")]
	private Missile GetMissile(int type, Hull hull)
	{
		return null;
	}

	[Token(Token = "0x60009F5")]
	[Address(RVA = "0x11E5EF4", Offset = "0x11E5EF4", VA = "0x11E5EF4")]
	private void InitPrefabs()
	{
	}

	[Token(Token = "0x60009F6")]
	[Address(RVA = "0x11E6374", Offset = "0x11E6374", VA = "0x11E6374")]
	public static MissileDescriptionSet GetDescriptionSet(eMissile type)
	{
		return null;
	}

	[Token(Token = "0x60009F7")]
	[Address(RVA = "0x11E65B8", Offset = "0x11E65B8", VA = "0x11E65B8")]
	public static Missile Get(eMissile type, Hull hull)
	{
		return null;
	}

	[Token(Token = "0x60009F8")]
	[Address(RVA = "0x11E6614", Offset = "0x11E6614", VA = "0x11E6614")]
	public static GameObject GetDummy(eMissile type)
	{
		return null;
	}

	[Token(Token = "0x60009F9")]
	[Address(RVA = "0x11E6710", Offset = "0x11E6710", VA = "0x11E6710")]
	public static float GetSpeed(eMissile type)
	{
		return default(float);
	}

	[Token(Token = "0x60009FA")]
	[Address(RVA = "0x11E6730", Offset = "0x11E6730", VA = "0x11E6730")]
	public static Missile GetPrefab(eMissile type)
	{
		return null;
	}

	[Token(Token = "0x60009FB")]
	[Address(RVA = "0x11E6470", Offset = "0x11E6470", VA = "0x11E6470")]
	public static void Init()
	{
	}

	[Token(Token = "0x60009FC")]
	[Address(RVA = "0x11E67B0", Offset = "0x11E67B0", VA = "0x11E67B0")]
	public MissileManager()
	{
	}
}
[Token(Token = "0x20001DF")]
public class Mission : MonoBehaviourPunCallbacks
{
	[Token(Token = "0x20001E0")]
	public enum eHitRewardType
	{
		[Token(Token = "0x4000C70")]
		firstHit,
		[Token(Token = "0x4000C71")]
		secondHit,
		[Token(Token = "0x4000C72")]
		kill,
		[Token(Token = "0x4000C73")]
		num
	}

	[Token(Token = "0x20001E1")]
	public enum eSpecialTask
	{
		[Token(Token = "0x4000C75")]
		none,
		[Token(Token = "0x4000C76")]
		shotOnePlayerXtimes,
		[Token(Token = "0x4000C77")]
		shotOnePlayerXtimes_in_Ytime,
		[Token(Token = "0x4000C78")]
		shotAnyPlayerXtimes_in_Ytime,
		[Token(Token = "0x4000C79")]
		teamDefendVIP
	}

	[Token(Token = "0x20001E2")]
	private struct MultiUIDSync
	{
		[Token(Token = "0x4000C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MultiplayerSync.UID uid;

		[Token(Token = "0x4000C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public MultiplayerSync.SyncState mSync;

		[Token(Token = "0x6000A68")]
		[Address(RVA = "0xE71258", Offset = "0xE71258", VA = "0xE71258")]
		public MultiUIDSync(MultiplayerSync.UID _uid, MultiplayerSync.SyncState _mSync)
		{
		}
	}

	[Token(Token = "0x20001E3")]
	public enum MultiMessageType
	{
		[Token(Token = "0x4000C7D")]
		neutral,
		[Token(Token = "0x4000C7E")]
		positive,
		[Token(Token = "0x4000C7F")]
		negative
	}

	[Token(Token = "0x20001E4")]
	private class MultiMessageItem
	{
		[Token(Token = "0x4000C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string msg;

		[Token(Token = "0x4000C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MultiMessageType type;

		[Token(Token = "0x6000A69")]
		[Address(RVA = "0xE7121C", Offset = "0xE7121C", VA = "0xE7121C")]
		public MultiMessageItem(string _msg, MultiMessageType _type)
		{
		}
	}

	[Token(Token = "0x20001E5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x917D8C", Offset = "0x917D8C")]
	private sealed class <StartYielded>d__34 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Mission <>4__this;

		[Token(Token = "0x17000099")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A6D")]
			[Address(RVA = "0xE711CC", Offset = "0xE711CC", VA = "0xE711CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A6F")]
			[Address(RVA = "0xE71214", Offset = "0xE71214", VA = "0xE71214", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A6A")]
		[Address(RVA = "0xE7058C", Offset = "0xE7058C", VA = "0xE7058C")]
		[DebuggerHidden]
		public <StartYielded>d__34(int <>1__state)
		{
		}

		[Token(Token = "0x6000A6B")]
		[Address(RVA = "0xE705B8", Offset = "0xE705B8", VA = "0xE705B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A6C")]
		[Address(RVA = "0xE705BC", Offset = "0xE705BC", VA = "0xE705BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A6E")]
		[Address(RVA = "0xE711D4", Offset = "0xE711D4", VA = "0xE711D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001E6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x917D9C", Offset = "0x917D9C")]
	private sealed class <FirstMissionRadio>d__36 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x1700009B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A73")]
			[Address(RVA = "0xE6BA38", Offset = "0xE6BA38", VA = "0xE6BA38", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A75")]
			[Address(RVA = "0xE6BA80", Offset = "0xE6BA80", VA = "0xE6BA80", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A70")]
		[Address(RVA = "0xE6B8A4", Offset = "0xE6B8A4", VA = "0xE6B8A4")]
		[DebuggerHidden]
		public <FirstMissionRadio>d__36(int <>1__state)
		{
		}

		[Token(Token = "0x6000A71")]
		[Address(RVA = "0xE6B8D0", Offset = "0xE6B8D0", VA = "0xE6B8D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A72")]
		[Address(RVA = "0xE6B8D4", Offset = "0xE6B8D4", VA = "0xE6B8D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A74")]
		[Address(RVA = "0xE6BA40", Offset = "0xE6BA40", VA = "0xE6BA40", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001E7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x917DAC", Offset = "0x917DAC")]
	private sealed class <SpawnPlayerPlanes>d__40 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Mission <>4__this;

		[Token(Token = "0x4000C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <seatAtPlayerId>5__2;

		[Token(Token = "0x4000C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <seatIdx>5__3;

		[Token(Token = "0x1700009D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A79")]
			[Address(RVA = "0xE7053C", Offset = "0xE7053C", VA = "0xE7053C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A7B")]
			[Address(RVA = "0xE70584", Offset = "0xE70584", VA = "0xE70584", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A76")]
		[Address(RVA = "0xE6EECC", Offset = "0xE6EECC", VA = "0xE6EECC")]
		[DebuggerHidden]
		public <SpawnPlayerPlanes>d__40(int <>1__state)
		{
		}

		[Token(Token = "0x6000A77")]
		[Address(RVA = "0xE6EEF8", Offset = "0xE6EEF8", VA = "0xE6EEF8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A78")]
		[Address(RVA = "0xE6EEFC", Offset = "0xE6EEFC", VA = "0xE6EEFC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A7A")]
		[Address(RVA = "0xE70544", Offset = "0xE70544", VA = "0xE70544", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001E8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x917DBC", Offset = "0x917DBC")]
	private sealed class <Idle>d__48 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Mission <>4__this;

		[Token(Token = "0x1700009F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A7F")]
			[Address(RVA = "0xE6BD8C", Offset = "0xE6BD8C", VA = "0xE6BD8C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A81")]
			[Address(RVA = "0xE6BDD4", Offset = "0xE6BDD4", VA = "0xE6BDD4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A7C")]
		[Address(RVA = "0xE6BA88", Offset = "0xE6BA88", VA = "0xE6BA88")]
		[DebuggerHidden]
		public <Idle>d__48(int <>1__state)
		{
		}

		[Token(Token = "0x6000A7D")]
		[Address(RVA = "0xE6BAB4", Offset = "0xE6BAB4", VA = "0xE6BAB4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A7E")]
		[Address(RVA = "0xE6BAB8", Offset = "0xE6BAB8", VA = "0xE6BAB8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A80")]
		[Address(RVA = "0xE6BD94", Offset = "0xE6BD94", VA = "0xE6BD94", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001E9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x917DCC", Offset = "0x917DCC")]
	private sealed class <ShowSecondaryObjectives>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Mission <>4__this;

		[Token(Token = "0x170000A1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A85")]
			[Address(RVA = "0xE6EE7C", Offset = "0xE6EE7C", VA = "0xE6EE7C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A87")]
			[Address(RVA = "0xE6EEC4", Offset = "0xE6EEC4", VA = "0xE6EEC4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A82")]
		[Address(RVA = "0xE6E910", Offset = "0xE6E910", VA = "0xE6E910")]
		[DebuggerHidden]
		public <ShowSecondaryObjectives>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x6000A83")]
		[Address(RVA = "0xE6E93C", Offset = "0xE6E93C", VA = "0xE6E93C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A84")]
		[Address(RVA = "0xE6E940", Offset = "0xE6E940", VA = "0xE6E940", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A86")]
		[Address(RVA = "0xE6EE84", Offset = "0xE6EE84", VA = "0xE6EE84", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001EA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x917DDC", Offset = "0x917DDC")]
	private sealed class <MissionFailed>d__65 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Mission <>4__this;

		[Token(Token = "0x170000A3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A8B")]
			[Address(RVA = "0xE6BEF8", Offset = "0xE6BEF8", VA = "0xE6BEF8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A8D")]
			[Address(RVA = "0xE6BF40", Offset = "0xE6BF40", VA = "0xE6BF40", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A88")]
		[Address(RVA = "0xE6BDDC", Offset = "0xE6BDDC", VA = "0xE6BDDC")]
		[DebuggerHidden]
		public <MissionFailed>d__65(int <>1__state)
		{
		}

		[Token(Token = "0x6000A89")]
		[Address(RVA = "0xE6BE08", Offset = "0xE6BE08", VA = "0xE6BE08", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A8A")]
		[Address(RVA = "0xE6BE0C", Offset = "0xE6BE0C", VA = "0xE6BE0C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A8C")]
		[Address(RVA = "0xE6BF00", Offset = "0xE6BF00", VA = "0xE6BF00", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001EB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x917DEC", Offset = "0x917DEC")]
	private sealed class <PrimaryCompleted>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Mission <>4__this;

		[Token(Token = "0x170000A5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A91")]
			[Address(RVA = "0xE6CE34", Offset = "0xE6CE34", VA = "0xE6CE34", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A93")]
			[Address(RVA = "0xE6CE7C", Offset = "0xE6CE7C", VA = "0xE6CE7C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A8E")]
		[Address(RVA = "0xE6C8F8", Offset = "0xE6C8F8", VA = "0xE6C8F8")]
		[DebuggerHidden]
		public <PrimaryCompleted>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x6000A8F")]
		[Address(RVA = "0xE6C924", Offset = "0xE6C924", VA = "0xE6C924", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A90")]
		[Address(RVA = "0xE6C928", Offset = "0xE6C928", VA = "0xE6C928", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A92")]
		[Address(RVA = "0xE6CE3C", Offset = "0xE6CE3C", VA = "0xE6CE3C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001EC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x917DFC", Offset = "0x917DFC")]
	private sealed class <DelayAndLoadScene>d__73 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x4000C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string loadScene;

		[Token(Token = "0x4000C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float fadeTime;

		[Token(Token = "0x4000C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action call;

		[Token(Token = "0x170000A7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A97")]
			[Address(RVA = "0xE6B6A8", Offset = "0xE6B6A8", VA = "0xE6B6A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A99")]
			[Address(RVA = "0xE6B6F0", Offset = "0xE6B6F0", VA = "0xE6B6F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A94")]
		[Address(RVA = "0xE6B578", Offset = "0xE6B578", VA = "0xE6B578")]
		[DebuggerHidden]
		public <DelayAndLoadScene>d__73(int <>1__state)
		{
		}

		[Token(Token = "0x6000A95")]
		[Address(RVA = "0xE6B5A4", Offset = "0xE6B5A4", VA = "0xE6B5A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A96")]
		[Address(RVA = "0xE6B5A8", Offset = "0xE6B5A8", VA = "0xE6B5A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A98")]
		[Address(RVA = "0xE6B6B0", Offset = "0xE6B6B0", VA = "0xE6B6B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001ED")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x917E0C", Offset = "0x917E0C")]
	private sealed class <DelayedShowSelectRespawnPlane>d__133 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170000A9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A9D")]
			[Address(RVA = "0xE6B854", Offset = "0xE6B854", VA = "0xE6B854", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A9F")]
			[Address(RVA = "0xE6B89C", Offset = "0xE6B89C", VA = "0xE6B89C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A9A")]
		[Address(RVA = "0xE6B6F8", Offset = "0xE6B6F8", VA = "0xE6B6F8")]
		[DebuggerHidden]
		public <DelayedShowSelectRespawnPlane>d__133(int <>1__state)
		{
		}

		[Token(Token = "0x6000A9B")]
		[Address(RVA = "0xE6B724", Offset = "0xE6B724", VA = "0xE6B724", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A9C")]
		[Address(RVA = "0xE6B728", Offset = "0xE6B728", VA = "0xE6B728", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A9E")]
		[Address(RVA = "0xE6B85C", Offset = "0xE6B85C", VA = "0xE6B85C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001EE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x917E1C", Offset = "0x917E1C")]
	private sealed class <ShowMultiplayerEndGameCoroutine>d__152 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Mission <>4__this;

		[Token(Token = "0x4000CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool setObserver;

		[Token(Token = "0x4000CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool victory;

		[Token(Token = "0x4000CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool timeOver;

		[Token(Token = "0x4000CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
		public bool disconnected;

		[Token(Token = "0x4000CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string title;

		[Token(Token = "0x4000CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool longEnd;

		[Token(Token = "0x4000CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool <wasEndGameAndObserver>5__2;

		[Token(Token = "0x4000CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		private bool <continueNextMission>5__3;

		[Token(Token = "0x170000AB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AA3")]
			[Address(RVA = "0xE6E8C0", Offset = "0xE6E8C0", VA = "0xE6E8C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AA5")]
			[Address(RVA = "0xE6E908", Offset = "0xE6E908", VA = "0xE6E908", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AA0")]
		[Address(RVA = "0xE6CE84", Offset = "0xE6CE84", VA = "0xE6CE84")]
		[DebuggerHidden]
		public <ShowMultiplayerEndGameCoroutine>d__152(int <>1__state)
		{
		}

		[Token(Token = "0x6000AA1")]
		[Address(RVA = "0xE6CEB0", Offset = "0xE6CEB0", VA = "0xE6CEB0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AA2")]
		[Address(RVA = "0xE6CEB4", Offset = "0xE6CEB4", VA = "0xE6CEB4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AA4")]
		[Address(RVA = "0xE6E8C8", Offset = "0xE6E8C8", VA = "0xE6E8C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001EF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x917E2C", Offset = "0x917E2C")]
	private sealed class <Multi_InitSpecialTask>d__183 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Mission <>4__this;

		[Token(Token = "0x170000AD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AA9")]
			[Address(RVA = "0xE6C8A8", Offset = "0xE6C8A8", VA = "0xE6C8A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AAB")]
			[Address(RVA = "0xE6C8F0", Offset = "0xE6C8F0", VA = "0xE6C8F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AA6")]
		[Address(RVA = "0xE6BF48", Offset = "0xE6BF48", VA = "0xE6BF48")]
		[DebuggerHidden]
		public <Multi_InitSpecialTask>d__183(int <>1__state)
		{
		}

		[Token(Token = "0x6000AA7")]
		[Address(RVA = "0xE6BF74", Offset = "0xE6BF74", VA = "0xE6BF74", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AA8")]
		[Address(RVA = "0xE6BF78", Offset = "0xE6BF78", VA = "0xE6BF78", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AAA")]
		[Address(RVA = "0xE6C8B0", Offset = "0xE6C8B0", VA = "0xE6C8B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool on;

	[Token(Token = "0x4000C1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int instance_counter;

	[Token(Token = "0x4000C1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMesh goalText;

	[Token(Token = "0x4000C1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Renderer[] goalSymbol;

	[Token(Token = "0x4000C1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Renderer[] goalLines;

	[NonSerialized]
	[Token(Token = "0x4000C1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMesh multiLogText;

	[NonSerialized]
	[Token(Token = "0x4000C20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMesh multiTimerText;

	[NonSerialized]
	[Token(Token = "0x4000C21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMesh multiCoOpRespawnsText;

	[NonSerialized]
	[Token(Token = "0x4000C22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform multiPlayersListPos;

	[Token(Token = "0x4000C23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject multiplayerSelectRespawnPlane;

	[Token(Token = "0x4000C24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Mission instance;

	[Token(Token = "0x4000C25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool primaryCompleted;

	[Token(Token = "0x4000C26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static bool secondaryCompleted;

	[Token(Token = "0x4000C27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool solo;

	[Token(Token = "0x4000C28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int killsCount;

	[Token(Token = "0x4000C29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static Task[] tasks;

	[Token(Token = "0x4000C2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static string[] cachedTaskText;

	[Token(Token = "0x4000C2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool stopObjectives;

	[Token(Token = "0x4000C2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Action goalTextChanged;

	[Token(Token = "0x4000C2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static Action onBegin;

	[Token(Token = "0x4000C2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float objectivesUpdateTime;

	[Token(Token = "0x4000C2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static StringBuilder cacheBuilder;

	[Token(Token = "0x4000C30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private bool updateObjectivesNextFrame;

	[Token(Token = "0x4000C31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	private bool spawnedPlayerPlane;

	[Token(Token = "0x4000C32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7E")]
	private bool updated;

	[Token(Token = "0x4000C33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float startTime;

	[Token(Token = "0x4000C34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private int prevTimeCounterSec;

	[Token(Token = "0x4000C35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float updateChangedPlayersDelayTime;

	[Token(Token = "0x4000C36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private MultiplayerSync.SyncState mSync;

	[Token(Token = "0x4000C37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private MultiplayerSync.SyncState mSyncChallange;

	[Token(Token = "0x4000C38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private int playerPlanesCount;

	[Token(Token = "0x4000C39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static bool gameOver;

	[Token(Token = "0x4000C3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private static bool finished;

	[Token(Token = "0x4000C3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private string reason;

	[Token(Token = "0x4000C3C")]
	public const int maxSpecialTasksInMission = 1;

	[Token(Token = "0x4000C3D")]
	public const float generateSpecialTaskDelayMin = 120f;

	[Token(Token = "0x4000C3E")]
	public const float generateSpecialTaskDelayMax = 240f;

	[Token(Token = "0x4000C3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Dictionary<int, bool> multiPlaneInstantiated;

	[Token(Token = "0x4000C40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Dictionary<int, MultiUIDSync> multiInitPlanesUIDs;

	[Token(Token = "0x4000C41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private MultiplayerSessionConfig multiplayerConfig;

	[Token(Token = "0x4000C42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool calledInitMultiplayer;

	[Token(Token = "0x4000C43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private string multiRoomID;

	[Token(Token = "0x4000C44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private int multiLocalNetPlayerId;

	[Token(Token = "0x4000C45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private int multiplayerIsEndGame;

	[Token(Token = "0x4000C46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool endGameAndObserver;

	[Token(Token = "0x4000C47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
	private bool isExitingGame;

	[Token(Token = "0x4000C48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private int lastMultiLeftTime;

	[Token(Token = "0x4000C49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Dictionary<int, ObscuredInt> multiPlayersKills;

	[Token(Token = "0x4000C4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Dictionary<int, int> multiPlayersKillsCounter;

	[Token(Token = "0x4000C4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Dictionary<int, ObscuredInt> multiPlayersDeaths;

	[Token(Token = "0x4000C4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	protected Dictionary<int, bool> playersLeftGame;

	[Token(Token = "0x4000C4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	protected Dictionary<int, eHitRewardType> hitOnPlayerRegistered;

	[Token(Token = "0x4000C4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	protected ObscuredFloat[] goldRewardPerTypeValue;

	[Token(Token = "0x4000C4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	protected ObscuredFloat[] expRewardPerTypeValue;

	[Token(Token = "0x4000C50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	protected float prevKillTime;

	[Token(Token = "0x4000C51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	protected List<NetPlayer> multiCachePlayers;

	[Token(Token = "0x4000C52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	protected float delaySpawnChallangePlanes;

	[Token(Token = "0x4000C53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	protected int multiChallangeNextOwnershipIdx;

	[Token(Token = "0x4000C54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	protected MultiplayerSync.UID multiChallangeUID;

	[Token(Token = "0x4000C55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	protected eSpecialTask currentSpecialTask;

	[Token(Token = "0x4000C56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	protected eSpecialTask lastSpecialTask;

	[Token(Token = "0x4000C57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	protected int lastSpecialTaskCompleted;

	[Token(Token = "0x4000C58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	protected int generatedSpecialTasksCnt;

	[Token(Token = "0x4000C59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	protected float nextGenerateSpecialTaskTime;

	[Token(Token = "0x4000C5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	protected bool specialTaskNextVIP;

	[Token(Token = "0x4000C5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x155")]
	protected bool specialTaskStartVIP;

	[Token(Token = "0x4000C5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	protected int specialTaskTargetPlayerId;

	[Token(Token = "0x4000C5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	protected int specialTaskDestKillsCount;

	[Token(Token = "0x4000C5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	protected int specialTaskCurrentKillsCount;

	[Token(Token = "0x4000C5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	protected float specialTaskStartTime;

	[Token(Token = "0x4000C60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	protected float specialTaskMaxTime;

	[Token(Token = "0x4000C61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	protected int specialTaskExpReward;

	[Token(Token = "0x4000C62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	protected int specialTaskExpRewardSum;

	[Token(Token = "0x4000C63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	protected int specialTaskDescrLength;

	[Token(Token = "0x4000C64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	protected int specialTaskDescrLastTimeLeft;

	[Token(Token = "0x4000C65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	protected int specialTaskDescrLastKills;

	[Token(Token = "0x4000C66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	public static bool showMultiDisconnectedMsg;

	[Token(Token = "0x4000C67")]
	private const float multiMessageShowMsgTime = 3f;

	[Token(Token = "0x4000C68")]
	private const float multiMessageFadeTime = 0.3f;

	[Token(Token = "0x4000C69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private readonly Color[] multiMessageColors;

	[Token(Token = "0x4000C6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private List<MultiMessageItem> multiMessagesQueue;

	[Token(Token = "0x4000C6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private bool multiSingleMessage;

	[Token(Token = "0x4000C6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	private float multiMessageStartTime;

	[Token(Token = "0x4000C6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private Color multiTimerColorOrg;

	[Token(Token = "0x4000C6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private Color multiTimerColorBlink;

	[Token(Token = "0x17000098")]
	public static bool OnAnyMission
	{
		[Token(Token = "0x60009FD")]
		[Address(RVA = "0x11E67C0", Offset = "0x11E67C0", VA = "0x11E67C0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60009FE")]
	[Address(RVA = "0x11E68AC", Offset = "0x11E68AC", VA = "0x11E68AC")]
	public void Awake()
	{
	}

	[Token(Token = "0x60009FF")]
	[Address(RVA = "0x11E7384", Offset = "0x11E7384", VA = "0x11E7384")]
	public void Start()
	{
	}

	[Token(Token = "0x6000A00")]
	[Address(RVA = "0x11E73B0", Offset = "0x11E73B0", VA = "0x11E73B0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9271CC", Offset = "0x9271CC")]
	public IEnumerator StartYielded()
	{
		return null;
	}

	[Token(Token = "0x6000A01")]
	[Address(RVA = "0x11E741C", Offset = "0x11E741C", VA = "0x11E741C")]
	private bool PlayFirstMissionRadio()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A02")]
	[Address(RVA = "0x11E7548", Offset = "0x11E7548", VA = "0x11E7548")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92722C", Offset = "0x92722C")]
	private IEnumerator FirstMissionRadio()
	{
		return null;
	}

	[Token(Token = "0x6000A03")]
	[Address(RVA = "0x11E75A4", Offset = "0x11E75A4", VA = "0x11E75A4")]
	public float GetStartTime()
	{
		return default(float);
	}

	[Token(Token = "0x6000A04")]
	[Address(RVA = "0x11E75AC", Offset = "0x11E75AC", VA = "0x11E75AC")]
	public bool IsSpawnedPlayerPlaneAndUpdated()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A05")]
	[Address(RVA = "0x11E75CC", Offset = "0x11E75CC", VA = "0x11E75CC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92728C", Offset = "0x92728C")]
	private IEnumerator SpawnPlayerPlanes()
	{
		return null;
	}

	[Token(Token = "0x6000A06")]
	[Address(RVA = "0x11E7638", Offset = "0x11E7638", VA = "0x11E7638")]
	public void OnSpawnLateBomberAssist()
	{
	}

	[Token(Token = "0x6000A07")]
	[Address(RVA = "0x11E7640", Offset = "0x11E7640", VA = "0x11E7640")]
	private PlaneBody SpawnPlayerPlane(PlayerPlane pp, Vector3 pos, float heading, int multiRespawnCount = 0, [Optional] NetPlayer botPlayer, bool respawnTheSamePlane = false)
	{
		return null;
	}

	[Token(Token = "0x6000A08")]
	[Address(RVA = "0x11E8938", Offset = "0x11E8938", VA = "0x11E8938")]
	public void SetBridgeParty()
	{
	}

	[Token(Token = "0x6000A09")]
	[Address(RVA = "0x11E8BA0", Offset = "0x11E8BA0", VA = "0x11E8BA0")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x6000A0A")]
	[Address(RVA = "0x11E8D4C", Offset = "0x11E8D4C", VA = "0x11E8D4C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A0B")]
	[Address(RVA = "0x11EB504", Offset = "0x11EB504", VA = "0x11EB504")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000A0C")]
	[Address(RVA = "0x11EC534", Offset = "0x11EC534", VA = "0x11EC534")]
	public static void WinMission()
	{
	}

	[Token(Token = "0x6000A0D")]
	[Address(RVA = "0x11EC694", Offset = "0x11EC694", VA = "0x11EC694")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9272EC", Offset = "0x9272EC")]
	public IEnumerator Idle()
	{
		return null;
	}

	[Token(Token = "0x6000A0E")]
	[Address(RVA = "0x11EC700", Offset = "0x11EC700", VA = "0x11EC700")]
	public static int GetPrimaryTargetsCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000A0F")]
	[Address(RVA = "0x11EC7E0", Offset = "0x11EC7E0", VA = "0x11EC7E0")]
	public static int GetSecondaryTargetsCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000A10")]
	[Address(RVA = "0x11EC8F4", Offset = "0x11EC8F4", VA = "0x11EC8F4")]
	public static void PrepareGameOver()
	{
	}

	[Token(Token = "0x6000A11")]
	[Address(RVA = "0x11ECA14", Offset = "0x11ECA14", VA = "0x11ECA14")]
	public static void GameOver(bool planeCrashed)
	{
	}

	[Token(Token = "0x6000A12")]
	[Address(RVA = "0x11ED3FC", Offset = "0x11ED3FC", VA = "0x11ED3FC")]
	public static void IncreaseKillCount()
	{
	}

	[Token(Token = "0x6000A13")]
	[Address(RVA = "0x11ED4DC", Offset = "0x11ED4DC", VA = "0x11ED4DC")]
	public static int GetKillsCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000A14")]
	[Address(RVA = "0x11ED5BC", Offset = "0x11ED5BC", VA = "0x11ED5BC")]
	public bool IsExitingGame()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A15")]
	[Address(RVA = "0x11ED5C4", Offset = "0x11ED5C4", VA = "0x11ED5C4")]
	public void SetTasks(Task[] tasks)
	{
	}

	[Token(Token = "0x6000A16")]
	[Address(RVA = "0x11E6E34", Offset = "0x11E6E34", VA = "0x11E6E34")]
	public void HideObjectives()
	{
	}

	[Token(Token = "0x6000A17")]
	[Address(RVA = "0x11ED660", Offset = "0x11ED660", VA = "0x11ED660")]
	public void DisableObjectives()
	{
	}

	[Token(Token = "0x6000A18")]
	[Address(RVA = "0x11ED66C", Offset = "0x11ED66C", VA = "0x11ED66C")]
	public void PrepareObjectives()
	{
	}

	[Token(Token = "0x6000A19")]
	[Address(RVA = "0x11ED840", Offset = "0x11ED840", VA = "0x11ED840")]
	private bool IsTheSameTaskAbove(int index)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A1A")]
	[Address(RVA = "0x11ED960", Offset = "0x11ED960", VA = "0x11ED960")]
	private void CountTheSameTasksBelow(int index, out int addDestroyed, out int addMax)
	{
	}

	[Token(Token = "0x6000A1B")]
	[Address(RVA = "0x11EB708", Offset = "0x11EB708", VA = "0x11EB708")]
	private void ShowObjectives()
	{
	}

	[Token(Token = "0x6000A1C")]
	[Address(RVA = "0x11EDB0C", Offset = "0x11EDB0C", VA = "0x11EDB0C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92734C", Offset = "0x92734C")]
	public IEnumerator ShowSecondaryObjectives()
	{
		return null;
	}

	[Token(Token = "0x6000A1D")]
	[Address(RVA = "0x11EDB78", Offset = "0x11EDB78", VA = "0x11EDB78")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9273AC", Offset = "0x9273AC")]
	public IEnumerator MissionFailed()
	{
		return null;
	}

	[Token(Token = "0x6000A1E")]
	[Address(RVA = "0x11EDBE4", Offset = "0x11EDBE4", VA = "0x11EDBE4")]
	public static bool IsFinished()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A1F")]
	[Address(RVA = "0x11EC628", Offset = "0x11EC628", VA = "0x11EC628")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92740C", Offset = "0x92740C")]
	public IEnumerator PrimaryCompleted()
	{
		return null;
	}

	[Token(Token = "0x6000A20")]
	[Address(RVA = "0x11EDC48", Offset = "0x11EDC48", VA = "0x11EDC48")]
	public void EndMissionRadio()
	{
	}

	[Token(Token = "0x6000A21")]
	[Address(RVA = "0x11EDE6C", Offset = "0x11EDE6C", VA = "0x11EDE6C")]
	private static void LandInBase()
	{
	}

	[Token(Token = "0x6000A22")]
	[Address(RVA = "0x11ECC5C", Offset = "0x11ECC5C", VA = "0x11ECC5C")]
	private static void BackToBase(bool fromMultiplayerEndGame = false, float delay = 0f, bool victory = false, bool defeat = false)
	{
	}

	[Token(Token = "0x6000A23")]
	[Address(RVA = "0x11EE174", Offset = "0x11EE174", VA = "0x11EE174")]
	private static void CallbackBeforeLoadBackToScene()
	{
	}

	[Token(Token = "0x6000A24")]
	[Address(RVA = "0x11EE0E0", Offset = "0x11EE0E0", VA = "0x11EE0E0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92746C", Offset = "0x92746C")]
	private IEnumerator DelayAndLoadScene(float delay, string loadScene, float fadeTime, Action call)
	{
		return null;
	}

	[Token(Token = "0x6000A25")]
	[Address(RVA = "0x11EE304", Offset = "0x11EE304", VA = "0x11EE304")]
	public void OnBackToBase()
	{
	}

	[Token(Token = "0x6000A26")]
	[Address(RVA = "0x11EE36C", Offset = "0x11EE36C", VA = "0x11EE36C")]
	public void ClaimMissionReward()
	{
	}

	[Token(Token = "0x6000A27")]
	[Address(RVA = "0x11EE48C", Offset = "0x11EE48C", VA = "0x11EE48C")]
	private bool IsPrimaryDestroyComplete(eqType eType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A28")]
	[Address(RVA = "0x11EE5E8", Offset = "0x11EE5E8", VA = "0x11EE5E8")]
	public eTaskResult Evaluate()
	{
		return default(eTaskResult);
	}

	[Token(Token = "0x6000A29")]
	[Address(RVA = "0x11EE928", Offset = "0x11EE928", VA = "0x11EE928")]
	private bool HaveSecondaryEnemyTasks()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A2A")]
	[Address(RVA = "0x11EEA6C", Offset = "0x11EEA6C", VA = "0x11EEA6C")]
	private void InitMultiplayer()
	{
	}

	[Token(Token = "0x6000A2B")]
	[Address(RVA = "0x11E7008", Offset = "0x11E7008", VA = "0x11E7008")]
	private void OnAwakeMultiplayer()
	{
	}

	[Token(Token = "0x6000A2C")]
	[Address(RVA = "0x11EED6C", Offset = "0x11EED6C", VA = "0x11EED6C")]
	public void OnMultiPlayerLeavingGame(int playerId)
	{
	}

	[Token(Token = "0x6000A2D")]
	[Address(RVA = "0x11EEE10", Offset = "0x11EEE10", VA = "0x11EEE10")]
	public bool WasPlayerLeftGame(int playerId)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A2E")]
	[Address(RVA = "0x11EEE74", Offset = "0x11EEE74", VA = "0x11EEE74")]
	public void OnNetPlayerLeftRoom(NetPlayer player)
	{
	}

	[Token(Token = "0x6000A2F")]
	[Address(RVA = "0x11EF078", Offset = "0x11EF078", VA = "0x11EF078")]
	public void InitializeInstantiatedMultiplayer(GameObject go, Photon.Realtime.Player punPlayer, object[] instantiationData)
	{
	}

	[Token(Token = "0x6000A30")]
	[Address(RVA = "0x11EF998", Offset = "0x11EF998", VA = "0x11EF998")]
	public void OnMultiplayerStartSelectingRespawnPlane(PlaneBody plane)
	{
	}

	[Token(Token = "0x6000A31")]
	[Address(RVA = "0x11EFAA4", Offset = "0x11EFAA4", VA = "0x11EFAA4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9274CC", Offset = "0x9274CC")]
	private IEnumerator DelayedShowSelectRespawnPlane()
	{
		return null;
	}

	[Token(Token = "0x6000A32")]
	[Address(RVA = "0x11EFB00", Offset = "0x11EFB00", VA = "0x11EFB00")]
	public void OnMultiplayerEndSelectingRespawnPlane(PlaneBody plane)
	{
	}

	[Token(Token = "0x6000A33")]
	[Address(RVA = "0x11EFBE8", Offset = "0x11EFBE8", VA = "0x11EFBE8")]
	public void OnSelectedMultiplayerRespawnPlane(PlayerPlane plane)
	{
	}

	[Token(Token = "0x6000A34")]
	[Address(RVA = "0x11F00C8", Offset = "0x11F00C8", VA = "0x11F00C8")]
	public MultiplayerSessionConfig GetMultiplayerConfig()
	{
		return null;
	}

	[Token(Token = "0x6000A35")]
	[Address(RVA = "0x11F00D0", Offset = "0x11F00D0", VA = "0x11F00D0")]
	private void IncreaseRewards(eHitRewardType hitType, bool targetPlayerPlane, int shooterNetPlayerId, float mul = 1f)
	{
	}

	[Token(Token = "0x6000A36")]
	[Address(RVA = "0x11F0748", Offset = "0x11F0748", VA = "0x11F0748")]
	private int GetGoldRewardSumRounded()
	{
		return default(int);
	}

	[Token(Token = "0x6000A37")]
	[Address(RVA = "0x11F0848", Offset = "0x11F0848", VA = "0x11F0848")]
	private int GetExpRewardSumRounded()
	{
		return default(int);
	}

	[Token(Token = "0x6000A38")]
	[Address(RVA = "0x11F0948", Offset = "0x11F0948", VA = "0x11F0948")]
	public void OnMultiPlaneHitTarget(PlaneBody shooter, Hull target)
	{
	}

	[Token(Token = "0x6000A39")]
	[Address(RVA = "0x11F118C", Offset = "0x11F118C", VA = "0x11F118C")]
	public void OnMultiIncreaseRewards(byte hitType, bool targetPlayerPlane, int shooterPlayerId)
	{
	}

	[Token(Token = "0x6000A3A")]
	[Address(RVA = "0x11F119C", Offset = "0x11F119C", VA = "0x11F119C")]
	private int GetCycledGunnerCrewShooterId(int shooterNetId)
	{
		return default(int);
	}

	[Token(Token = "0x6000A3B")]
	[Address(RVA = "0x11F10F0", Offset = "0x11F10F0", VA = "0x11F10F0")]
	public bool IsFriendlyFire(NetPlayer pPlayer, NetPlayer sPlayer)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A3C")]
	[Address(RVA = "0x11F16F0", Offset = "0x11F16F0", VA = "0x11F16F0")]
	public bool IsFriendlyFire(eParty party, NetPlayer sPlayer)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A3D")]
	[Address(RVA = "0x11F1750", Offset = "0x11F1750", VA = "0x11F1750")]
	public void OnMultiPlayerPlaneKilled(string playerPlanePrefabID, int playerNetId, bool playerExtraChallange, int shooterNetId, MultiplayerGame.PlaneKilledType killedType, bool shooterFromMostDamageCrash)
	{
	}

	[Token(Token = "0x6000A3E")]
	[Address(RVA = "0x11F3030", Offset = "0x11F3030", VA = "0x11F3030")]
	public void ReceivePlayerDeaths(int playerId, int cnt)
	{
	}

	[Token(Token = "0x6000A3F")]
	[Address(RVA = "0x11F31F4", Offset = "0x11F31F4", VA = "0x11F31F4")]
	public void ReceivePlayerKills(int playerId, int cnt)
	{
	}

	[Token(Token = "0x6000A40")]
	[Address(RVA = "0x11F33B8", Offset = "0x11F33B8", VA = "0x11F33B8")]
	public void OnDestroyPlane(PlaneBody pb)
	{
	}

	[Token(Token = "0x6000A41")]
	[Address(RVA = "0x11F3460", Offset = "0x11F3460", VA = "0x11F3460")]
	public void OnMultiPlaneRespawned(PlaneBody plane)
	{
	}

	[Token(Token = "0x6000A42")]
	[Address(RVA = "0x11F3558", Offset = "0x11F3558", VA = "0x11F3558")]
	public void OnMultiHullKilled(Hull hull, PlaneBody shooter, Missile m)
	{
	}

	[Token(Token = "0x6000A43")]
	[Address(RVA = "0x11EA144", Offset = "0x11EA144", VA = "0x11EA144")]
	private void ShowMultiplayerEndGame(bool victory, bool longEnd, bool timeOver = false, bool disconnected = false, string title = "", bool setObserver = false)
	{
	}

	[Token(Token = "0x6000A44")]
	[Address(RVA = "0x11F3EDC", Offset = "0x11F3EDC", VA = "0x11F3EDC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92752C", Offset = "0x92752C")]
	private IEnumerator ShowMultiplayerEndGameCoroutine(bool victory, bool longEnd, bool timeOver, bool disconnected, string title, bool setObserver)
	{
		return null;
	}

	[Token(Token = "0x6000A45")]
	[Address(RVA = "0x11E9E80", Offset = "0x11E9E80", VA = "0x11E9E80")]
	public bool IsMultiplayerEndGame()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A46")]
	[Address(RVA = "0x11F3FA4", Offset = "0x11F3FA4", VA = "0x11F3FA4")]
	public bool IsMultiplayerEndGameFinal()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A47")]
	[Address(RVA = "0x11F3FC4", Offset = "0x11F3FC4", VA = "0x11F3FC4")]
	public void EndGameWhenNoNextObserverPlane()
	{
	}

	[Token(Token = "0x6000A48")]
	[Address(RVA = "0x11F402C", Offset = "0x11F402C", VA = "0x11F402C")]
	public bool IsMultiplayerPlaneInstantiated(NetPlayer player)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A49")]
	[Address(RVA = "0x11F4110", Offset = "0x11F4110", VA = "0x11F4110")]
	public void ReceivePlayerAddScore(int playerId, int goldStarting, int goldForHit, int goldForKills, int goldForVictory, int expStarting, int expForHit, int expForKills, int expForVictory, int expSpecialTask)
	{
	}

	[Token(Token = "0x6000A4A")]
	[Address(RVA = "0x11E9FD0", Offset = "0x11E9FD0", VA = "0x11E9FD0")]
	public void GetMultiplayerScore(int playerId, out int kills, out int deaths)
	{
	}

	[Token(Token = "0x6000A4B")]
	[Address(RVA = "0x11F4624", Offset = "0x11F4624", VA = "0x11F4624")]
	private void CheckMultiplayerEndGame(eTaskResult tasksResult)
	{
	}

	[Token(Token = "0x6000A4C")]
	[Address(RVA = "0x11F4FC8", Offset = "0x11F4FC8", VA = "0x11F4FC8")]
	public void Multi_SwitchToOfflineMode()
	{
	}

	[Token(Token = "0x6000A4D")]
	[Address(RVA = "0x11F4FCC", Offset = "0x11F4FCC", VA = "0x11F4FCC")]
	private void OnMultiplayerDisconnectedFromServer(string msg, PUNWrapper.Error error, string extMessage)
	{
	}

	[Token(Token = "0x6000A4E")]
	[Address(RVA = "0x11E9C40", Offset = "0x11E9C40", VA = "0x11E9C40")]
	private void Multi_StepPlayerExtraChallange()
	{
	}

	[Token(Token = "0x6000A4F")]
	[Address(RVA = "0x11E966C", Offset = "0x11E966C", VA = "0x11E966C")]
	private void Multi_StepSpawnChallangePlanes()
	{
	}

	[Token(Token = "0x6000A50")]
	[Address(RVA = "0x11E9E90", Offset = "0x11E9E90", VA = "0x11E9E90")]
	private void MultiMessage_ShowTimer(string msg, bool blink)
	{
	}

	[Token(Token = "0x6000A51")]
	[Address(RVA = "0x11F3554", Offset = "0x11F3554", VA = "0x11F3554")]
	private void Multi_UpdateCoOpRespawns()
	{
	}

	[Token(Token = "0x6000A52")]
	[Address(RVA = "0x11F519C", Offset = "0x11F519C", VA = "0x11F519C")]
	private void OnPlaneChanged(PlaneBody pb)
	{
	}

	[Token(Token = "0x6000A53")]
	[Address(RVA = "0x11F51A0", Offset = "0x11F51A0", VA = "0x11F51A0")]
	private void Multi_UpdateChallangeDisplay()
	{
	}

	[Token(Token = "0x6000A54")]
	[Address(RVA = "0x11F5338", Offset = "0x11F5338", VA = "0x11F5338")]
	private void Multi_ShowCoOpRespawns(string msg)
	{
	}

	[Token(Token = "0x6000A55")]
	[Address(RVA = "0x11EEFC4", Offset = "0x11EEFC4", VA = "0x11EEFC4")]
	private void MultiMessage_AddMessage(string msg, MultiMessageType type)
	{
	}

	[Token(Token = "0x6000A56")]
	[Address(RVA = "0x11F4EFC", Offset = "0x11F4EFC", VA = "0x11F4EFC")]
	public void MultiMessage_AddSingleMessage(string msg, MultiMessageType type)
	{
	}

	[Token(Token = "0x6000A57")]
	[Address(RVA = "0x11F53DC", Offset = "0x11F53DC", VA = "0x11F53DC")]
	public void MultiMessage_ResetSingleMessage()
	{
	}

	[Token(Token = "0x6000A58")]
	[Address(RVA = "0x11EA450", Offset = "0x11EA450", VA = "0x11EA450")]
	private void MultiMessage_Update()
	{
	}

	[Token(Token = "0x6000A59")]
	[Address(RVA = "0x11EED00", Offset = "0x11EED00", VA = "0x11EED00")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92758C", Offset = "0x92758C")]
	private IEnumerator Multi_InitSpecialTask()
	{
		return null;
	}

	[Token(Token = "0x6000A5A")]
	[Address(RVA = "0x11F54B0", Offset = "0x11F54B0", VA = "0x11F54B0")]
	public void OnInitSpecialTaskTeamVIP(int vipPlayerId, float maxTime)
	{
	}

	[Token(Token = "0x6000A5B")]
	[Address(RVA = "0x11F54C4", Offset = "0x11F54C4", VA = "0x11F54C4")]
	public void OnStartSpecialTaskTeamVIP()
	{
	}

	[Token(Token = "0x6000A5C")]
	[Address(RVA = "0x11F54D0", Offset = "0x11F54D0", VA = "0x11F54D0")]
	private int SelectOneRealPlayer()
	{
		return default(int);
	}

	[Token(Token = "0x6000A5D")]
	[Address(RVA = "0x11F56D8", Offset = "0x11F56D8", VA = "0x11F56D8")]
	private int SelectOneEnemyPlayer()
	{
		return default(int);
	}

	[Token(Token = "0x6000A5E")]
	[Address(RVA = "0x11EA748", Offset = "0x11EA748", VA = "0x11EA748")]
	private void Multi_StepSpecialTasks()
	{
	}

	[Token(Token = "0x6000A5F")]
	[Address(RVA = "0x11F2D28", Offset = "0x11F2D28", VA = "0x11F2D28")]
	private void Multi_SpecialTaskOnKilledPlayer(int playerNetId, int shooterNetId)
	{
	}

	[Token(Token = "0x6000A60")]
	[Address(RVA = "0x11F5C48", Offset = "0x11F5C48", VA = "0x11F5C48")]
	private void Multi_SpecialTaskFinished(int completed)
	{
	}

	[Token(Token = "0x6000A61")]
	[Address(RVA = "0x11F5E48", Offset = "0x11F5E48", VA = "0x11F5E48")]
	public bool IsSpecialTaskDescrVisible()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A62")]
	[Address(RVA = "0x11F5E68", Offset = "0x11F5E68", VA = "0x11F5E68")]
	public int GetSpecialTaskRewardSum()
	{
		return default(int);
	}

	[Token(Token = "0x6000A63")]
	[Address(RVA = "0x11F5E70", Offset = "0x11F5E70", VA = "0x11F5E70")]
	public void Multi_UpdateSpecialTaskDescr(HelpBook help, bool init)
	{
	}

	[Token(Token = "0x6000A64")]
	[Address(RVA = "0x11F6880", Offset = "0x11F6880", VA = "0x11F6880", Slot = "31")]
	public override void OnLeftRoom()
	{
	}

	[Token(Token = "0x6000A65")]
	[Address(RVA = "0x11F6C94", Offset = "0x11F6C94", VA = "0x11F6C94", Slot = "38")]
	public override void OnDisconnected(DisconnectCause cause)
	{
	}

	[Token(Token = "0x6000A66")]
	[Address(RVA = "0x11F702C", Offset = "0x11F702C", VA = "0x11F702C")]
	public Mission()
	{
	}
}
[Token(Token = "0x20001F0")]
public class MissionCode : MonoBehaviour
{
	[Token(Token = "0x6000AAC")]
	[Address(RVA = "0x11F79C4", Offset = "0x11F79C4", VA = "0x11F79C4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000AAD")]
	[Address(RVA = "0x11F7A3C", Offset = "0x11F7A3C", VA = "0x11F7A3C")]
	public MissionCode()
	{
	}
}
[Token(Token = "0x20001F1")]
public class EditorCamera : MonoBehaviour
{
	[Token(Token = "0x4000CAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static float dragPosMul;

	[Token(Token = "0x4000CAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	protected static float dragAngleMul;

	[Token(Token = "0x4000CB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	protected static float kbdAngleMul;

	[Token(Token = "0x4000CB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected static float kbdPosMul;

	[Token(Token = "0x4000CB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	protected static float zoomPosMul;

	[Token(Token = "0x4000CB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	protected static float autoAnimAngleSpeed;

	[Token(Token = "0x4000CB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected static float autoAnimPosSpeed;

	[Token(Token = "0x4000CB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected static float autoAnimStartDelay;

	[Token(Token = "0x4000CB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected static float autoAnimDelayAfterMove;

	[Token(Token = "0x4000CB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected static EditorCamera instance;

	[Token(Token = "0x4000CB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected Vector2 rmbDragPos;

	[Token(Token = "0x4000CB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected Vector2 prevRotatingDir;

	[Token(Token = "0x4000CBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected Vector2 prevLoweringPos;

	[Token(Token = "0x4000CBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected Vector2 prevZoomingDist;

	[Token(Token = "0x4000CBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected bool rotating;

	[Token(Token = "0x4000CBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	protected bool loweringAngle;

	[Token(Token = "0x4000CBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	protected bool zooming;

	[Token(Token = "0x4000CBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	protected float autoAnimDelay;

	[Token(Token = "0x6000AAE")]
	[Address(RVA = "0xD98378", Offset = "0xD98378", VA = "0xD98378")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AAF")]
	[Address(RVA = "0xD983E0", Offset = "0xD983E0", VA = "0xD983E0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000AB0")]
	[Address(RVA = "0xD98444", Offset = "0xD98444", VA = "0xD98444")]
	public static EditorCamera Instance()
	{
		return null;
	}

	[Token(Token = "0x6000AB1")]
	[Address(RVA = "0xD984A8", Offset = "0xD984A8", VA = "0xD984A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AB2")]
	[Address(RVA = "0xD984AC", Offset = "0xD984AC", VA = "0xD984AC")]
	public void ResetCamera()
	{
	}

	[Token(Token = "0x6000AB3")]
	[Address(RVA = "0xD9856C", Offset = "0xD9856C", VA = "0xD9856C")]
	private Vector3 RotateY(float inputx, float inputy)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000AB4")]
	[Address(RVA = "0xD98608", Offset = "0xD98608", VA = "0xD98608")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AB5")]
	[Address(RVA = "0xD99A08", Offset = "0xD99A08", VA = "0xD99A08")]
	public EditorCamera()
	{
	}
}
[Token(Token = "0x20001F2")]
public class EditorCampaignWindow : MonoBehaviour
{
	[Token(Token = "0x20001F3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x917E3C", Offset = "0x917E3C")]
	private sealed class <>c__DisplayClass34_0
	{
		[Token(Token = "0x4000CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public EditorCampaignWindow <>4__this;

		[Token(Token = "0x4000CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int idx;

		[Token(Token = "0x6000AD6")]
		[Address(RVA = "0xBE6DA8", Offset = "0xBE6DA8", VA = "0xBE6DA8")]
		public <>c__DisplayClass34_0()
		{
		}

		[Token(Token = "0x6000AD7")]
		[Address(RVA = "0xBE6DB0", Offset = "0xBE6DB0", VA = "0xBE6DB0")]
		internal void <OnSelectedCampaign>b__0(MissionEditor.MessageBoxResult result)
		{
		}
	}

	[Token(Token = "0x4000CC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] allCampaignObjects;

	[Token(Token = "0x4000CC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] showObjectsWhenNoCampaigns;

	[Token(Token = "0x4000CC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] showObjectsWhenNoCampaignSelected;

	[Token(Token = "0x4000CC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MUI_ComboBox comboCampaigns;

	[Token(Token = "0x4000CC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMesh textCampaignName;

	[Token(Token = "0x4000CC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMesh saveCampaignButtonText;

	[Token(Token = "0x4000CC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject deleteCampaignBlocker;

	[Token(Token = "0x4000CC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public CloudSave_Checkbox activeCheckbox;

	[Token(Token = "0x4000CC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public MUI_ComboBox comboNation;

	[Token(Token = "0x4000CC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public MUI_ComboBox comboDifficulty;

	[Token(Token = "0x4000CCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TextMesh textMaxPlayersCount;

	[Token(Token = "0x4000CCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TextMesh textStatsValueRating;

	[Token(Token = "0x4000CCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public TextMesh textStatsValueDifficulty;

	[Token(Token = "0x4000CCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public TextMesh textStatsValueCompletedCampaignsCnt;

	[Token(Token = "0x4000CCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public TextMesh textStatsValueCompletedMissionsCnt;

	[Token(Token = "0x4000CCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Color newSelectInfoTextColor;

	[Token(Token = "0x4000CD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public bool allowActiveNotValidMissionInEditor;

	[Token(Token = "0x4000CD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private string saveCampaignTextOrg;

	[Token(Token = "0x4000CD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool lastCampaignChanged;

	[Token(Token = "0x4000CD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
	private bool started;

	[Token(Token = "0x4000CD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB2")]
	private bool newCampaignName;

	[Token(Token = "0x4000CD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB3")]
	private bool newNationSelect;

	[Token(Token = "0x4000CD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private bool newDifficultySelect;

	[Token(Token = "0x4000CD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Color textCampaignNameNormalColor;

	[Token(Token = "0x4000CD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Color comboNationNormalColor;

	[Token(Token = "0x4000CD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Color comboDifficultyNormalColor;

	[Token(Token = "0x6000AB7")]
	[Address(RVA = "0xD99B1C", Offset = "0xD99B1C", VA = "0xD99B1C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AB8")]
	[Address(RVA = "0xD99BFC", Offset = "0xD99BFC", VA = "0xD99BFC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AB9")]
	[Address(RVA = "0xD9A4B4", Offset = "0xD9A4B4", VA = "0xD9A4B4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000ABA")]
	[Address(RVA = "0xD9A4C4", Offset = "0xD9A4C4", VA = "0xD9A4C4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000ABB")]
	[Address(RVA = "0xD9A660", Offset = "0xD9A660", VA = "0xD9A660")]
	private void ShowObjects(GameObject[] go, bool show)
	{
	}

	[Token(Token = "0x6000ABC")]
	[Address(RVA = "0xD9A750", Offset = "0xD9A750", VA = "0xD9A750")]
	private void UpdateControlsVisibility()
	{
	}

	[Token(Token = "0x6000ABD")]
	[Address(RVA = "0xD99C08", Offset = "0xD99C08", VA = "0xD99C08")]
	private void FillCampaigns()
	{
	}

	[Token(Token = "0x6000ABE")]
	[Address(RVA = "0xD9A964", Offset = "0xD9A964", VA = "0xD9A964")]
	private void UpdateCurrentCampaign()
	{
	}

	[Token(Token = "0x6000ABF")]
	[Address(RVA = "0xD9BBD0", Offset = "0xD9BBD0", VA = "0xD9BBD0")]
	private void OnSelectedCampaign(int idx)
	{
	}

	[Token(Token = "0x6000AC0")]
	[Address(RVA = "0xD9BE6C", Offset = "0xD9BE6C", VA = "0xD9BE6C")]
	private void OnAddCampaign()
	{
	}

	[Token(Token = "0x6000AC1")]
	[Address(RVA = "0xD9C0D8", Offset = "0xD9C0D8", VA = "0xD9C0D8")]
	private void OnDeleteCampaign()
	{
	}

	[Token(Token = "0x6000AC2")]
	[Address(RVA = "0xD9C24C", Offset = "0xD9C24C", VA = "0xD9C24C")]
	private void OnSaveCampaign()
	{
	}

	[Token(Token = "0x6000AC3")]
	[Address(RVA = "0xD9AA60", Offset = "0xD9AA60", VA = "0xD9AA60")]
	private void UpdateCampaignName()
	{
	}

	[Token(Token = "0x6000AC4")]
	[Address(RVA = "0xD9AC08", Offset = "0xD9AC08", VA = "0xD9AC08")]
	private void UpdateActive()
	{
	}

	[Token(Token = "0x6000AC5")]
	[Address(RVA = "0xD9C310", Offset = "0xD9C310", VA = "0xD9C310")]
	private void OnSetActive(bool on)
	{
	}

	[Token(Token = "0x6000AC6")]
	[Address(RVA = "0xD9C738", Offset = "0xD9C738", VA = "0xD9C738")]
	private void OnEditCampaignName()
	{
	}

	[Token(Token = "0x6000AC7")]
	[Address(RVA = "0xD9ACD4", Offset = "0xD9ACD4", VA = "0xD9ACD4")]
	private void UpdateNation()
	{
	}

	[Token(Token = "0x6000AC8")]
	[Address(RVA = "0xD9C8E0", Offset = "0xD9C8E0", VA = "0xD9C8E0")]
	private int NationVal2Idx(eNation val)
	{
		return default(int);
	}

	[Token(Token = "0x6000AC9")]
	[Address(RVA = "0xD9C9C4", Offset = "0xD9C9C4", VA = "0xD9C9C4")]
	private eNation NationIdx2Val(int idx)
	{
		return default(eNation);
	}

	[Token(Token = "0x6000ACA")]
	[Address(RVA = "0xD9CA54", Offset = "0xD9CA54", VA = "0xD9CA54")]
	private void OnSelectedNation(int idx)
	{
	}

	[Token(Token = "0x6000ACB")]
	[Address(RVA = "0xD9AFC8", Offset = "0xD9AFC8", VA = "0xD9AFC8")]
	private void UpdateDifficulty()
	{
	}

	[Token(Token = "0x6000ACC")]
	[Address(RVA = "0xD9CB28", Offset = "0xD9CB28", VA = "0xD9CB28")]
	private int DifficultyVal2Idx(CustomCampaignData.eDifficulty val)
	{
		return default(int);
	}

	[Token(Token = "0x6000ACD")]
	[Address(RVA = "0xD9CE74", Offset = "0xD9CE74", VA = "0xD9CE74")]
	private CustomCampaignData.eDifficulty DifficultyIdx2Val(int idx)
	{
		return default(CustomCampaignData.eDifficulty);
	}

	[Token(Token = "0x6000ACE")]
	[Address(RVA = "0xD9D1BC", Offset = "0xD9D1BC", VA = "0xD9D1BC")]
	private void OnSelectedDifficulty(int idx)
	{
	}

	[Token(Token = "0x6000ACF")]
	[Address(RVA = "0xD9D290", Offset = "0xD9D290", VA = "0xD9D290")]
	private void OnPlayersPrev()
	{
	}

	[Token(Token = "0x6000AD0")]
	[Address(RVA = "0xD9D3A8", Offset = "0xD9D3A8", VA = "0xD9D3A8")]
	private void OnPlayersNext()
	{
	}

	[Token(Token = "0x6000AD1")]
	[Address(RVA = "0xD9B510", Offset = "0xD9B510", VA = "0xD9B510")]
	private void UpdateMaxPlayersCount()
	{
	}

	[Token(Token = "0x6000AD2")]
	[Address(RVA = "0xD9B5F4", Offset = "0xD9B5F4", VA = "0xD9B5F4")]
	private void UpdateStats()
	{
	}

	[Token(Token = "0x6000AD3")]
	[Address(RVA = "0xD9D4C0", Offset = "0xD9D4C0", VA = "0xD9D4C0")]
	public EditorCampaignWindow()
	{
	}

	[Token(Token = "0x6000AD4")]
	[Address(RVA = "0xD9D514", Offset = "0xD9D514", VA = "0xD9D514")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92795C", Offset = "0x92795C")]
	private void <OnAddCampaign>b__35_0(MissionEditor.MessageBoxResult result)
	{
	}

	[Token(Token = "0x6000AD5")]
	[Address(RVA = "0xD9D614", Offset = "0xD9D614", VA = "0xD9D614")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92796C", Offset = "0x92796C")]
	private void <OnDeleteCampaign>b__36_0(MissionEditor.MessageBoxResult result)
	{
	}
}
[Token(Token = "0x20001F4")]
public class EditorLocationsList : MonoBehaviour
{
	[Token(Token = "0x4000CDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Location[] locations;

	[Token(Token = "0x6000AD8")]
	[Address(RVA = "0xD9D6FC", Offset = "0xD9D6FC", VA = "0xD9D6FC")]
	public EditorLocationsList()
	{
	}
}
[Token(Token = "0x20001F5")]
public class EditorMissionWindow : MonoBehaviour
{
	[Token(Token = "0x20001F6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x917E4C", Offset = "0x917E4C")]
	private sealed class <>c__DisplayClass15_0
	{
		[Token(Token = "0x4000CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int idx;

		[Token(Token = "0x4000CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EditorMissionWindow <>4__this;

		[Token(Token = "0x6000AE6")]
		[Address(RVA = "0xBE6EC8", Offset = "0xBE6EC8", VA = "0xBE6EC8")]
		public <>c__DisplayClass15_0()
		{
		}

		[Token(Token = "0x6000AE7")]
		[Address(RVA = "0xBE6ED0", Offset = "0xBE6ED0", VA = "0xBE6ED0")]
		internal void <OnMissionDelete>b__0(MissionEditor.MessageBoxResult result)
		{
		}
	}

	[Token(Token = "0x4000CDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMesh title;

	[Token(Token = "0x4000CDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject missionLinePrefab;

	[Token(Token = "0x4000CDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject missionLineNext;

	[Token(Token = "0x4000CE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject buttonAddMission;

	[Token(Token = "0x4000CE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<GameObject> createdMissions;

	[Token(Token = "0x4000CE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float buttonAddMissionDy;

	[Token(Token = "0x4000CE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool started;

	[Token(Token = "0x6000AD9")]
	[Address(RVA = "0xD9D704", Offset = "0xD9D704", VA = "0xD9D704")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000ADA")]
	[Address(RVA = "0xD9D80C", Offset = "0xD9D80C", VA = "0xD9D80C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000ADB")]
	[Address(RVA = "0xD9E1B0", Offset = "0xD9E1B0", VA = "0xD9E1B0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000ADC")]
	[Address(RVA = "0xD9E380", Offset = "0xD9E380", VA = "0xD9E380")]
	private void Update()
	{
	}

	[Token(Token = "0x6000ADD")]
	[Address(RVA = "0xD9D864", Offset = "0xD9D864", VA = "0xD9D864")]
	private void FillMissions(bool resetScroll)
	{
	}

	[Token(Token = "0x6000ADE")]
	[Address(RVA = "0xD9E384", Offset = "0xD9E384", VA = "0xD9E384")]
	private void UpdateSelectedMission()
	{
	}

	[Token(Token = "0x6000ADF")]
	[Address(RVA = "0xD9E628", Offset = "0xD9E628", VA = "0xD9E628")]
	private void OnAddMission()
	{
	}

	[Token(Token = "0x6000AE0")]
	[Address(RVA = "0xD9E8E4", Offset = "0xD9E8E4", VA = "0xD9E8E4")]
	private void OnSelectMission(CloudSave_Checkbox checkbox)
	{
	}

	[Token(Token = "0x6000AE1")]
	[Address(RVA = "0xD9EBF4", Offset = "0xD9EBF4", VA = "0xD9EBF4")]
	private void OnMissionDelete(int idx)
	{
	}

	[Token(Token = "0x6000AE2")]
	[Address(RVA = "0xD9EDA0", Offset = "0xD9EDA0", VA = "0xD9EDA0")]
	private void OnMissionUp(int idx)
	{
	}

	[Token(Token = "0x6000AE3")]
	[Address(RVA = "0xD9EE68", Offset = "0xD9EE68", VA = "0xD9EE68")]
	private void OnMissionDown(int idx)
	{
	}

	[Token(Token = "0x6000AE4")]
	[Address(RVA = "0xD9EF30", Offset = "0xD9EF30", VA = "0xD9EF30")]
	private void OnEditMissionName(int idx)
	{
	}

	[Token(Token = "0x6000AE5")]
	[Address(RVA = "0xD9F198", Offset = "0xD9F198", VA = "0xD9F198")]
	public EditorMissionWindow()
	{
	}
}
[Token(Token = "0x20001F7")]
public class EditorPlaneLine : MonoBehaviour
{
	[Token(Token = "0x4000CE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MUI_ComboBox comboPlaneType;

	[Token(Token = "0x4000CE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MUI_ComboBox comboLoadout;

	[Token(Token = "0x4000CE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMesh planeLevel;

	[Token(Token = "0x4000CE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Renderer planeIcon;

	[Token(Token = "0x4000CEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private EditorPlanesWindow parent;

	[Token(Token = "0x4000CEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int planeIdx;

	[Token(Token = "0x6000AE8")]
	[Address(RVA = "0xD9F210", Offset = "0xD9F210", VA = "0xD9F210")]
	public void FillPlane(EditorPlanesWindow window, CustomMissionPlane plane, int idx)
	{
	}

	[Token(Token = "0x6000AE9")]
	[Address(RVA = "0xD9F6D8", Offset = "0xD9F6D8", VA = "0xD9F6D8")]
	public void FillLoadout()
	{
	}

	[Token(Token = "0x6000AEA")]
	[Address(RVA = "0xD9FA6C", Offset = "0xD9FA6C", VA = "0xD9FA6C")]
	public void FillLevel()
	{
	}

	[Token(Token = "0x6000AEB")]
	[Address(RVA = "0xD9FAC0", Offset = "0xD9FAC0", VA = "0xD9FAC0")]
	public void FillIcon()
	{
	}

	[Token(Token = "0x6000AEC")]
	[Address(RVA = "0xD9FC28", Offset = "0xD9FC28", VA = "0xD9FC28")]
	private CustomMissionPlane GetPlane()
	{
		return default(CustomMissionPlane);
	}

	[Token(Token = "0x6000AED")]
	[Address(RVA = "0xD9FD18", Offset = "0xD9FD18", VA = "0xD9FD18")]
	public void OnSetPlaneType(int idx)
	{
	}

	[Token(Token = "0x6000AEE")]
	[Address(RVA = "0xD9FE90", Offset = "0xD9FE90", VA = "0xD9FE90")]
	public void OnSetLoadout(int idx)
	{
	}

	[Token(Token = "0x6000AEF")]
	[Address(RVA = "0xD9FF50", Offset = "0xD9FF50", VA = "0xD9FF50")]
	public void OnLevelIncrease(int val)
	{
	}

	[Token(Token = "0x6000AF0")]
	[Address(RVA = "0xDA002C", Offset = "0xDA002C", VA = "0xDA002C")]
	public EditorPlaneLine()
	{
	}
}
[Token(Token = "0x20001F8")]
public class EditorPlanesWindow : MonoBehaviour
{
	[Token(Token = "0x4000CEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMesh title;

	[Token(Token = "0x4000CED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MUI_ComboBox comboEnemy;

	[Token(Token = "0x4000CEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject planeLinePrefab;

	[Token(Token = "0x4000CEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject planeLineNext;

	[Token(Token = "0x4000CF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject buttonAddPlane;

	[Token(Token = "0x4000CF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<EditorPlaneLine> createdPlanes;

	[Token(Token = "0x4000CF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float buttonAddPlaneDy;

	[Token(Token = "0x4000CF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool started;

	[Token(Token = "0x6000AF1")]
	[Address(RVA = "0xDA06D4", Offset = "0xDA06D4", VA = "0xDA06D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AF2")]
	[Address(RVA = "0xDA07DC", Offset = "0xDA07DC", VA = "0xDA07DC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AF3")]
	[Address(RVA = "0xDA10A8", Offset = "0xDA10A8", VA = "0xDA10A8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000AF4")]
	[Address(RVA = "0xDA083C", Offset = "0xDA083C", VA = "0xDA083C")]
	private void FillPlanes(bool resetScroll)
	{
	}

	[Token(Token = "0x6000AF5")]
	[Address(RVA = "0xDA1280", Offset = "0xDA1280", VA = "0xDA1280")]
	private void OnAddPlane()
	{
	}

	[Token(Token = "0x6000AF6")]
	[Address(RVA = "0xDA1564", Offset = "0xDA1564", VA = "0xDA1564")]
	private void OnPlaneDelete(int idx)
	{
	}

	[Token(Token = "0x6000AF7")]
	[Address(RVA = "0xDA162C", Offset = "0xDA162C", VA = "0xDA162C")]
	private void OnPlaneUp(int idx)
	{
	}

	[Token(Token = "0x6000AF8")]
	[Address(RVA = "0xDA16F4", Offset = "0xDA16F4", VA = "0xDA16F4")]
	private void OnPlaneDown(int idx)
	{
	}

	[Token(Token = "0x6000AF9")]
	[Address(RVA = "0xDA0E3C", Offset = "0xDA0E3C", VA = "0xDA0E3C")]
	private void FillEnemies()
	{
	}

	[Token(Token = "0x6000AFA")]
	[Address(RVA = "0xDA17BC", Offset = "0xDA17BC", VA = "0xDA17BC")]
	private void OnSetEnemy(int idx)
	{
	}

	[Token(Token = "0x6000AFB")]
	[Address(RVA = "0xDA18F4", Offset = "0xDA18F4", VA = "0xDA18F4")]
	public EditorPlanesWindow()
	{
	}
}
[Token(Token = "0x20001F9")]
public class EditorSettingsWindow : MonoBehaviour
{
	[Token(Token = "0x20001FA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x917E5C", Offset = "0x917E5C")]
	private sealed class <Exit>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EditorSettingsWindow <>4__this;

		[Token(Token = "0x170000AF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B05")]
			[Address(RVA = "0xBE7180", Offset = "0xBE7180", VA = "0xBE7180", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B07")]
			[Address(RVA = "0xBE71C8", Offset = "0xBE71C8", VA = "0xBE71C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B02")]
		[Address(RVA = "0xBE6FB8", Offset = "0xBE6FB8", VA = "0xBE6FB8")]
		[DebuggerHidden]
		public <Exit>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000B03")]
		[Address(RVA = "0xBE6FE4", Offset = "0xBE6FE4", VA = "0xBE6FE4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B04")]
		[Address(RVA = "0xBE6FE8", Offset = "0xBE6FE8", VA = "0xBE6FE8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B06")]
		[Address(RVA = "0xBE7188", Offset = "0xBE7188", VA = "0xBE7188", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool loading;

	[Token(Token = "0x4000CF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<PlayerPlane> planesForSelect;

	[Token(Token = "0x6000AFC")]
	[Address(RVA = "0xDA196C", Offset = "0xDA196C", VA = "0xDA196C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AFD")]
	[Address(RVA = "0xDA1970", Offset = "0xDA1970", VA = "0xDA1970")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000AFE")]
	[Address(RVA = "0xDA19CC", Offset = "0xDA19CC", VA = "0xDA19CC")]
	private void OnExit()
	{
	}

	[Token(Token = "0x6000AFF")]
	[Address(RVA = "0xDA1BCC", Offset = "0xDA1BCC", VA = "0xDA1BCC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92797C", Offset = "0x92797C")]
	private IEnumerator Exit()
	{
		return null;
	}

	[Token(Token = "0x6000B00")]
	[Address(RVA = "0xDA1C38", Offset = "0xDA1C38", VA = "0xDA1C38")]
	public EditorSettingsWindow()
	{
	}

	[Token(Token = "0x6000B01")]
	[Address(RVA = "0xDA1CB0", Offset = "0xDA1CB0", VA = "0xDA1CB0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9279DC", Offset = "0x9279DC")]
	private void <OnExit>b__4_0(MissionEditor.MessageBoxResult result)
	{
	}
}
[Token(Token = "0x20001FB")]
public class EditorTaskLine : MonoBehaviour
{
	[Token(Token = "0x4000CF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static eTask[] tasksOrder;

	[Token(Token = "0x4000CFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MUI_ComboBox comboTaskType;

	[Token(Token = "0x4000CFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MUI_ComboBox comboEqType;

	[Token(Token = "0x4000CFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject objectsCount;

	[Token(Token = "0x4000CFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMesh textCount;

	[Token(Token = "0x4000CFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject objectsWaves;

	[Token(Token = "0x4000CFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMesh textWaves;

	[Token(Token = "0x4000D00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private EditorTasksWindow parent;

	[Token(Token = "0x4000D01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int taskIdx;

	[Token(Token = "0x4000D02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<eqType> currAvailableTasks;

	[Token(Token = "0x6000B08")]
	[Address(RVA = "0xDA1E04", Offset = "0xDA1E04", VA = "0xDA1E04")]
	public void FillTask(EditorTasksWindow wnd, CustomMissionTask task, int idx)
	{
	}

	[Token(Token = "0x6000B09")]
	[Address(RVA = "0xDA2C1C", Offset = "0xDA2C1C", VA = "0xDA2C1C")]
	public void UpdateTaskEqType()
	{
	}

	[Token(Token = "0x6000B0A")]
	[Address(RVA = "0xDA2C50", Offset = "0xDA2C50", VA = "0xDA2C50")]
	private CustomMissionTask GetTask()
	{
		return default(CustomMissionTask);
	}

	[Token(Token = "0x6000B0B")]
	[Address(RVA = "0xDA2D40", Offset = "0xDA2D40", VA = "0xDA2D40")]
	private int FindTownTaskIdx()
	{
		return default(int);
	}

	[Token(Token = "0x6000B0C")]
	[Address(RVA = "0xDA2F04", Offset = "0xDA2F04", VA = "0xDA2F04")]
	private int FindBridgeTaskIdx()
	{
		return default(int);
	}

	[Token(Token = "0x6000B0D")]
	[Address(RVA = "0xDA3084", Offset = "0xDA3084", VA = "0xDA3084")]
	private int FindTrainOrConvoyTaskIdx()
	{
		return default(int);
	}

	[Token(Token = "0x6000B0E")]
	[Address(RVA = "0xDA2314", Offset = "0xDA2314", VA = "0xDA2314")]
	private void FillTaskEqType(CustomMissionTask task)
	{
	}

	[Token(Token = "0x6000B0F")]
	[Address(RVA = "0xDA2B08", Offset = "0xDA2B08", VA = "0xDA2B08")]
	private void FillTaskCount(CustomMissionTask task)
	{
	}

	[Token(Token = "0x6000B10")]
	[Address(RVA = "0xDA32F4", Offset = "0xDA32F4", VA = "0xDA32F4")]
	private void OnSetType(int idx)
	{
	}

	[Token(Token = "0x6000B11")]
	[Address(RVA = "0xDA36BC", Offset = "0xDA36BC", VA = "0xDA36BC")]
	private void OnSetEqType(int idx)
	{
	}

	[Token(Token = "0x6000B12")]
	[Address(RVA = "0xDA38A0", Offset = "0xDA38A0", VA = "0xDA38A0")]
	private void OnTaskCountIncrease(int val)
	{
	}

	[Token(Token = "0x6000B13")]
	[Address(RVA = "0xDA3990", Offset = "0xDA3990", VA = "0xDA3990")]
	private void OnTaskWavesIncrease(int val)
	{
	}

	[Token(Token = "0x6000B14")]
	[Address(RVA = "0xDA3A84", Offset = "0xDA3A84", VA = "0xDA3A84")]
	public EditorTaskLine()
	{
	}
}
[Token(Token = "0x20001FC")]
public class EditorTasksWindow : MonoBehaviour
{
	[Token(Token = "0x4000D03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMesh title;

	[Token(Token = "0x4000D04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject taskLinePrefab;

	[Token(Token = "0x4000D05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject taskLineNext;

	[Token(Token = "0x4000D06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject buttonAddTask;

	[Token(Token = "0x4000D07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<EditorTaskLine> createdTasks;

	[Token(Token = "0x4000D08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float buttonAddTaskDy;

	[Token(Token = "0x4000D09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool started;

	[Token(Token = "0x6000B16")]
	[Address(RVA = "0xDA3B94", Offset = "0xDA3B94", VA = "0xDA3B94")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B17")]
	[Address(RVA = "0xDA3C9C", Offset = "0xDA3C9C", VA = "0xDA3C9C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B18")]
	[Address(RVA = "0xDA42F4", Offset = "0xDA42F4", VA = "0xDA42F4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B19")]
	[Address(RVA = "0xDA44C4", Offset = "0xDA44C4", VA = "0xDA44C4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B1A")]
	[Address(RVA = "0xDA3CF4", Offset = "0xDA3CF4", VA = "0xDA3CF4")]
	private void FillTasks(bool resetScroll)
	{
	}

	[Token(Token = "0x6000B1B")]
	[Address(RVA = "0xDA44C8", Offset = "0xDA44C8", VA = "0xDA44C8")]
	private bool IsTheSameTaskAbove(int index)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B1C")]
	[Address(RVA = "0xDA469C", Offset = "0xDA469C", VA = "0xDA469C")]
	private int CountUniqueTasks()
	{
		return default(int);
	}

	[Token(Token = "0x6000B1D")]
	[Address(RVA = "0xDA479C", Offset = "0xDA479C", VA = "0xDA479C")]
	private void OnAddTask()
	{
	}

	[Token(Token = "0x6000B1E")]
	[Address(RVA = "0xDA4A00", Offset = "0xDA4A00", VA = "0xDA4A00")]
	private void OnTaskDelete(int idx)
	{
	}

	[Token(Token = "0x6000B1F")]
	[Address(RVA = "0xDA4AC8", Offset = "0xDA4AC8", VA = "0xDA4AC8")]
	private void OnTaskUp(int idx)
	{
	}

	[Token(Token = "0x6000B20")]
	[Address(RVA = "0xDA4B90", Offset = "0xDA4B90", VA = "0xDA4B90")]
	private void OnTaskDown(int idx)
	{
	}

	[Token(Token = "0x6000B21")]
	[Address(RVA = "0xDA37E8", Offset = "0xDA37E8", VA = "0xDA37E8")]
	public void OnChangedTaskEqType(int idx)
	{
	}

	[Token(Token = "0x6000B22")]
	[Address(RVA = "0xDA4C58", Offset = "0xDA4C58", VA = "0xDA4C58")]
	public EditorTasksWindow()
	{
	}
}
[Token(Token = "0x20001FD")]
public class EditorTerrainWindow : MonoBehaviour
{
	[Token(Token = "0x20001FE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x917E6C", Offset = "0x917E6C")]
	private sealed class <>c__DisplayClass14_0
	{
		[Token(Token = "0x4000D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string locationID;

		[Token(Token = "0x4000D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EditorTerrainWindow <>4__this;

		[Token(Token = "0x6000B36")]
		[Address(RVA = "0xBE71D0", Offset = "0xBE71D0", VA = "0xBE71D0")]
		public <>c__DisplayClass14_0()
		{
		}

		[Token(Token = "0x6000B37")]
		[Address(RVA = "0xBE71D8", Offset = "0xBE71D8", VA = "0xBE71D8")]
		internal void <OnSelectedLocation>b__0(MissionEditor.MessageBoxResult result)
		{
		}
	}

	[Token(Token = "0x4000D0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMesh title;

	[Token(Token = "0x4000D0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MUI_ComboBox comboLocations;

	[Token(Token = "0x4000D0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MUI_ComboBox comboTerrainH;

	[Token(Token = "0x4000D0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MUI_Slider sliderTerrainH_X;

	[Token(Token = "0x4000D0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public MUI_Slider sliderTerrainH_Y;

	[Token(Token = "0x4000D0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public MUI_Slider sliderTerrainH_Z;

	[Token(Token = "0x4000D10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public MUI_ComboBox comboCondition;

	[Token(Token = "0x4000D11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MUI_ComboBox comboWeather;

	[Token(Token = "0x6000B23")]
	[Address(RVA = "0xDA4CD0", Offset = "0xDA4CD0", VA = "0xDA4CD0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B24")]
	[Address(RVA = "0xDA4E00", Offset = "0xDA4E00", VA = "0xDA4E00")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B25")]
	[Address(RVA = "0xDA5190", Offset = "0xDA5190", VA = "0xDA5190")]
	private void FillCombos()
	{
	}

	[Token(Token = "0x6000B26")]
	[Address(RVA = "0xDA65C8", Offset = "0xDA65C8", VA = "0xDA65C8")]
	private void AddLocAttrib(bool attrib, string attribName, ref string txt)
	{
	}

	[Token(Token = "0x6000B27")]
	[Address(RVA = "0xDA66C8", Offset = "0xDA66C8", VA = "0xDA66C8")]
	private string LocationIdx2Val(int idx)
	{
		return null;
	}

	[Token(Token = "0x6000B28")]
	[Address(RVA = "0xDA5C14", Offset = "0xDA5C14", VA = "0xDA5C14")]
	private int LocationVal2Idx(string id)
	{
		return default(int);
	}

	[Token(Token = "0x6000B29")]
	[Address(RVA = "0xDA67D0", Offset = "0xDA67D0", VA = "0xDA67D0")]
	private void OnSelectedLocation(int idx)
	{
	}

	[Token(Token = "0x6000B2A")]
	[Address(RVA = "0xDA6A6C", Offset = "0xDA6A6C", VA = "0xDA6A6C")]
	private eTerrainH TerrainHIdx2Val(int idx)
	{
		return default(eTerrainH);
	}

	[Token(Token = "0x6000B2B")]
	[Address(RVA = "0xDA5D18", Offset = "0xDA5D18", VA = "0xDA5D18")]
	private int TerrainHVal2Idx(eTerrainH val)
	{
		return default(int);
	}

	[Token(Token = "0x6000B2C")]
	[Address(RVA = "0xDA6DB4", Offset = "0xDA6DB4", VA = "0xDA6DB4")]
	private void OnSelectedTerrainH(int idx)
	{
	}

	[Token(Token = "0x6000B2D")]
	[Address(RVA = "0xDA6E84", Offset = "0xDA6E84", VA = "0xDA6E84")]
	private void OnChangedTerrainHCustom(MUI_Slider slider, float val)
	{
	}

	[Token(Token = "0x6000B2E")]
	[Address(RVA = "0xDA631C", Offset = "0xDA631C", VA = "0xDA631C")]
	private void UpdateTerrainHSliders()
	{
	}

	[Token(Token = "0x6000B2F")]
	[Address(RVA = "0xDA6FC8", Offset = "0xDA6FC8", VA = "0xDA6FC8")]
	private eCondition ConditionIdx2Val(int idx)
	{
		return default(eCondition);
	}

	[Token(Token = "0x6000B30")]
	[Address(RVA = "0xDA6064", Offset = "0xDA6064", VA = "0xDA6064")]
	private int ConditionVal2Idx(eCondition val)
	{
		return default(int);
	}

	[Token(Token = "0x6000B31")]
	[Address(RVA = "0xDA7184", Offset = "0xDA7184", VA = "0xDA7184")]
	private void OnSelectedCondition(int idx)
	{
	}

	[Token(Token = "0x6000B32")]
	[Address(RVA = "0xDA7248", Offset = "0xDA7248", VA = "0xDA7248")]
	private eWeather WeatherIdx2Val(int idx)
	{
		return default(eWeather);
	}

	[Token(Token = "0x6000B33")]
	[Address(RVA = "0xDA61C0", Offset = "0xDA61C0", VA = "0xDA61C0")]
	private int WeatherVal2Idx(eWeather val)
	{
		return default(int);
	}

	[Token(Token = "0x6000B34")]
	[Address(RVA = "0xDA7404", Offset = "0xDA7404", VA = "0xDA7404")]
	private void OnSelectedWeather(int idx)
	{
	}

	[Token(Token = "0x6000B35")]
	[Address(RVA = "0xDA74C8", Offset = "0xDA74C8", VA = "0xDA74C8")]
	public EditorTerrainWindow()
	{
	}
}
[Token(Token = "0x20001FF")]
public class EditorTranslatorLine : MonoBehaviour
{
	[Token(Token = "0x4000D14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMesh langName;

	[Token(Token = "0x4000D15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MUI_InputText inputText;

	[Token(Token = "0x6000B38")]
	[Address(RVA = "0xDA74D0", Offset = "0xDA74D0", VA = "0xDA74D0")]
	public EditorTranslatorLine()
	{
	}
}
[Token(Token = "0x2000200")]
public class EditorTranslatorWindow : MonoBehaviour
{
	[Token(Token = "0x2000201")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x917E7C", Offset = "0x917E7C")]
	private sealed class <TranslateTextToAll>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EditorTranslatorWindow <>4__this;

		[Token(Token = "0x4000D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string <fromLan>5__2;

		[Token(Token = "0x4000D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string <fromText>5__3;

		[Token(Token = "0x4000D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool <first>5__4;

		[Token(Token = "0x4000D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Dictionary<string, MUI_InputText>.Enumerator <>7__wrap4;

		[Token(Token = "0x4000D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private KeyValuePair<string, MUI_InputText> <pair>5__6;

		[Token(Token = "0x170000B1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B4B")]
			[Address(RVA = "0xBE84A8", Offset = "0xBE84A8", VA = "0xBE84A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B4D")]
			[Address(RVA = "0xBE84F0", Offset = "0xBE84F0", VA = "0xBE84F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B47")]
		[Address(RVA = "0xBE7E14", Offset = "0xBE7E14", VA = "0xBE7E14")]
		[DebuggerHidden]
		public <TranslateTextToAll>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6000B48")]
		[Address(RVA = "0xBE7E40", Offset = "0xBE7E40", VA = "0xBE7E40", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B49")]
		[Address(RVA = "0xBE7EC0", Offset = "0xBE7EC0", VA = "0xBE7EC0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B4A")]
		[Address(RVA = "0xBE7E6C", Offset = "0xBE7E6C", VA = "0xBE7E6C")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000B4C")]
		[Address(RVA = "0xBE84B0", Offset = "0xBE84B0", VA = "0xBE84B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000202")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x917E8C", Offset = "0x917E8C")]
	private sealed class <TranslateText>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string fromLan;

		[Token(Token = "0x4000D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string toLan;

		[Token(Token = "0x4000D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string fromText;

		[Token(Token = "0x4000D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public EditorTranslatorWindow <>4__this;

		[Token(Token = "0x4000D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public MUI_InputText toInput;

		[Token(Token = "0x4000D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private WWWwrapper <www>5__2;

		[Token(Token = "0x170000B3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B51")]
			[Address(RVA = "0xBE7DC4", Offset = "0xBE7DC4", VA = "0xBE7DC4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B53")]
			[Address(RVA = "0xBE7E0C", Offset = "0xBE7E0C", VA = "0xBE7E0C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B4E")]
		[Address(RVA = "0xBE7348", Offset = "0xBE7348", VA = "0xBE7348")]
		[DebuggerHidden]
		public <TranslateText>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x6000B4F")]
		[Address(RVA = "0xBE7374", Offset = "0xBE7374", VA = "0xBE7374", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B50")]
		[Address(RVA = "0xBE7378", Offset = "0xBE7378", VA = "0xBE7378", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B52")]
		[Address(RVA = "0xBE7DCC", Offset = "0xBE7DCC", VA = "0xBE7DCC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMesh windowTitle;

	[Token(Token = "0x4000D17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMesh infoText;

	[Token(Token = "0x4000D18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MUI_ComboBox comboOrgLanguage;

	[Token(Token = "0x4000D19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MUI_InputText inputOrgText;

	[Token(Token = "0x4000D1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject translateLinePrefab;

	[Token(Token = "0x4000D1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject translateLineNext;

	[Token(Token = "0x4000D1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LocalizationInfo[] localizations;

	[Token(Token = "0x4000D1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MissionEditor.Window fromWindow;

	[Token(Token = "0x4000D1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private CustomMissionTranslatedText trlText;

	[Token(Token = "0x4000D1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<GameObject> translationsLines;

	[Token(Token = "0x4000D20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Dictionary<string, MUI_InputText> lang2Input;

	[Token(Token = "0x4000D21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Dictionary<string, string> lastChangingText;

	[Token(Token = "0x4000D22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Dictionary<string, float> lastChangingTime;

	[Token(Token = "0x4000D23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private string errorTranslate;

	[Token(Token = "0x6000B39")]
	[Address(RVA = "0xDA74D8", Offset = "0xDA74D8", VA = "0xDA74D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B3A")]
	[Address(RVA = "0xDA75A8", Offset = "0xDA75A8", VA = "0xDA75A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B3B")]
	[Address(RVA = "0xDA75EC", Offset = "0xDA75EC", VA = "0xDA75EC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B3C")]
	[Address(RVA = "0xDA7EF8", Offset = "0xDA7EF8", VA = "0xDA7EF8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B3D")]
	[Address(RVA = "0xD9C8D4", Offset = "0xD9C8D4", VA = "0xD9C8D4")]
	public void Init(MissionEditor.Window fromWnd, CustomMissionTranslatedText text)
	{
	}

	[Token(Token = "0x6000B3E")]
	[Address(RVA = "0xDA774C", Offset = "0xDA774C", VA = "0xDA774C")]
	private void FillOrgLanguage()
	{
	}

	[Token(Token = "0x6000B3F")]
	[Address(RVA = "0xDA78F0", Offset = "0xDA78F0", VA = "0xDA78F0")]
	private void FillLanguages(bool resetScroll)
	{
	}

	[Token(Token = "0x6000B40")]
	[Address(RVA = "0xDA85D8", Offset = "0xDA85D8", VA = "0xDA85D8")]
	private void OnClickBack()
	{
	}

	[Token(Token = "0x6000B41")]
	[Address(RVA = "0xDA8814", Offset = "0xDA8814", VA = "0xDA8814")]
	private void OnSelectedOrgLanguage(int idx)
	{
	}

	[Token(Token = "0x6000B42")]
	[Address(RVA = "0xDA8028", Offset = "0xDA8028", VA = "0xDA8028")]
	private bool StepReadChangedText(string lang, MUI_InputText input, bool force)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B43")]
	[Address(RVA = "0xDA89C8", Offset = "0xDA89C8", VA = "0xDA89C8")]
	private void OnGoogleTranslate()
	{
	}

	[Token(Token = "0x6000B44")]
	[Address(RVA = "0xDA89F4", Offset = "0xDA89F4", VA = "0xDA89F4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x927A3C", Offset = "0x927A3C")]
	private IEnumerator TranslateTextToAll()
	{
		return null;
	}

	[Token(Token = "0x6000B45")]
	[Address(RVA = "0xDA8A60", Offset = "0xDA8A60", VA = "0xDA8A60")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x927A9C", Offset = "0x927A9C")]
	public IEnumerator TranslateText(string fromLan, string toLan, string fromText, MUI_InputText toInput)
	{
		return null;
	}

	[Token(Token = "0x6000B46")]
	[Address(RVA = "0xDA8AF4", Offset = "0xDA8AF4", VA = "0xDA8AF4")]
	public EditorTranslatorWindow()
	{
	}
}
[Token(Token = "0x2000203")]
public struct CustomMissionTask
{
	[Token(Token = "0x4000D34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public eTask type;

	[Token(Token = "0x4000D35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public eqType eqType;

	[Token(Token = "0x4000D36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int count;

	[Token(Token = "0x4000D37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int waves;

	[Token(Token = "0x6000B54")]
	[Address(RVA = "0x1027D40", Offset = "0x1027D40", VA = "0x1027D40")]
	public CustomMissionTask(eTask _type, eqType _eqType, int _count, int _waves)
	{
	}
}
[Token(Token = "0x2000204")]
public struct CustomMissionPlane
{
	[Token(Token = "0x4000D38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string prefabID;

	[Token(Token = "0x4000D39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int loadoutID;

	[Token(Token = "0x4000D3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int level;

	[Token(Token = "0x6000B55")]
	[Address(RVA = "0x1027D4C", Offset = "0x1027D4C", VA = "0x1027D4C")]
	public CustomMissionPlane(string _prefabID, int _loadoutID, int _level)
	{
	}
}
[Token(Token = "0x2000205")]
public struct CustomCampaignProgress
{
	[Token(Token = "0x4000D3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public long guid;

	[Token(Token = "0x4000D3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int mission;
}
[Token(Token = "0x2000206")]
public class CustomMissionTranslatedText
{
	[Token(Token = "0x4000D3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string defLang;

	[Token(Token = "0x4000D3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string editorLang;

	[Token(Token = "0x4000D3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Dictionary<string, string> lang2text;

	[Token(Token = "0x6000B56")]
	[Address(RVA = "0x1027D58", Offset = "0x1027D58", VA = "0x1027D58")]
	public CustomMissionTranslatedText()
	{
	}

	[Token(Token = "0x6000B57")]
	[Address(RVA = "0x10275B8", Offset = "0x10275B8", VA = "0x10275B8")]
	public CustomMissionTranslatedText(string text)
	{
	}

	[Token(Token = "0x6000B58")]
	[Address(RVA = "0x1027DEC", Offset = "0x1027DEC", VA = "0x1027DEC")]
	public string GetLocalizedText()
	{
		return null;
	}

	[Token(Token = "0x6000B59")]
	[Address(RVA = "0x1028184", Offset = "0x1028184", VA = "0x1028184")]
	public string GetEditorText()
	{
		return null;
	}

	[Token(Token = "0x6000B5A")]
	[Address(RVA = "0x1027EE0", Offset = "0x1027EE0", VA = "0x1027EE0")]
	public string GetText(string lang, bool retDefault = false)
	{
		return null;
	}

	[Token(Token = "0x6000B5B")]
	[Address(RVA = "0x1028190", Offset = "0x1028190", VA = "0x1028190")]
	public void SetText(string lang, string text)
	{
	}

	[Token(Token = "0x6000B5C")]
	[Address(RVA = "0x1025A28", Offset = "0x1025A28", VA = "0x1025A28")]
	public string StoreToString()
	{
		return null;
	}

	[Token(Token = "0x6000B5D")]
	[Address(RVA = "0x1026664", Offset = "0x1026664", VA = "0x1026664")]
	public void LoadFromString(string save)
	{
	}
}
[Token(Token = "0x2000207")]
public class CustomMissionData
{
	[Token(Token = "0x4000D40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public CustomMissionTranslatedText missionName;

	[Token(Token = "0x4000D41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string locationID;

	[Token(Token = "0x4000D42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public eTerrainH terrainHeightType;

	[Token(Token = "0x4000D43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int terrainHeightRSeed;

	[Token(Token = "0x4000D44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 customTerrainHeight;

	[Token(Token = "0x4000D45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public eCondition terrainCondition;

	[Token(Token = "0x4000D46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public eWeather weatherType;

	[Token(Token = "0x4000D47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<CustomMissionTask> tasks;

	[Token(Token = "0x4000D48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<CustomMissionPlane> planes;

	[Token(Token = "0x4000D49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public eNation enemyNation;

	[Token(Token = "0x6000B5F")]
	[Address(RVA = "0x1025E20", Offset = "0x1025E20", VA = "0x1025E20")]
	public string StoreToString()
	{
		return null;
	}

	[Token(Token = "0x6000B60")]
	[Address(RVA = "0x1026980", Offset = "0x1026980", VA = "0x1026980")]
	public void LoadFromString(string save)
	{
	}

	[Token(Token = "0x6000B61")]
	[Address(RVA = "0x1026828", Offset = "0x1026828", VA = "0x1026828")]
	public CustomMissionData()
	{
	}
}
[Token(Token = "0x2000208")]
public class CustomCampaignData
{
	[Token(Token = "0x2000209")]
	public enum eDifficulty
	{
		[Token(Token = "0x4000D57")]
		All,
		[Token(Token = "0x4000D58")]
		Easy,
		[Token(Token = "0x4000D59")]
		Medium,
		[Token(Token = "0x4000D5A")]
		Hard
	}

	[Token(Token = "0x200020A")]
	public enum eSortBy
	{
		[Token(Token = "0x4000D5C")]
		CompletedMissions,
		[Token(Token = "0x4000D5D")]
		Rating,
		[Token(Token = "0x4000D5E")]
		New,
		[Token(Token = "0x4000D5F")]
		Random,
		[Token(Token = "0x4000D60")]
		CompletedCampaigns
	}

	[Token(Token = "0x4000D4A")]
	public const string saveKeyPrefix = "Custom_";

	[Token(Token = "0x4000D4B")]
	public const int minRating = 1;

	[Token(Token = "0x4000D4C")]
	public const int maxRating = 5;

	[Token(Token = "0x4000D4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int campaignUID;

	[Token(Token = "0x4000D4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public eNation nation;

	[Token(Token = "0x4000D4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CustomMissionTranslatedText campaignName;

	[Token(Token = "0x4000D50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool active;

	[Token(Token = "0x4000D51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public eDifficulty difficulty;

	[Token(Token = "0x4000D52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<CustomMissionData> missions;

	[Token(Token = "0x4000D53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool changed;

	[Token(Token = "0x4000D54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public long guid;

	[Token(Token = "0x4000D55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string author;

	[Token(Token = "0x6000B62")]
	[Address(RVA = "0x102581C", Offset = "0x102581C", VA = "0x102581C")]
	public string StoreToString()
	{
		return null;
	}

	[Token(Token = "0x6000B63")]
	[Address(RVA = "0x10263D0", Offset = "0x10263D0", VA = "0x10263D0")]
	public void LoadFromString(string save)
	{
	}

	[Token(Token = "0x6000B64")]
	[Address(RVA = "0x1026E20", Offset = "0x1026E20", VA = "0x1026E20")]
	public eNation[] GetPossibleEnemies()
	{
		return null;
	}

	[Token(Token = "0x6000B65")]
	[Address(RVA = "0x1026E90", Offset = "0x1026E90", VA = "0x1026E90")]
	public static List<KeyValuePair<string, string>> GetSaveCloudProperties(string save)
	{
		return null;
	}

	[Token(Token = "0x6000B66")]
	[Address(RVA = "0x10272AC", Offset = "0x10272AC", VA = "0x10272AC")]
	public void Save()
	{
	}

	[Token(Token = "0x6000B67")]
	[Address(RVA = "0x1027364", Offset = "0x1027364", VA = "0x1027364")]
	public void Load(int uid)
	{
	}

	[Token(Token = "0x6000B68")]
	[Address(RVA = "0x1027434", Offset = "0x1027434", VA = "0x1027434")]
	public int GetMissionIndex(CustomMissionData mission)
	{
		return default(int);
	}

	[Token(Token = "0x6000B69")]
	[Address(RVA = "0x10274DC", Offset = "0x10274DC", VA = "0x10274DC")]
	public CustomCampaignData()
	{
	}
}
[Token(Token = "0x200020B")]
public class MissionEditor : MonoBehaviour
{
	[Token(Token = "0x200020C")]
	public enum MessageBoxButtons
	{
		[Token(Token = "0x4000D91")]
		Close,
		[Token(Token = "0x4000D92")]
		OkCancel,
		[Token(Token = "0x4000D93")]
		YesNo,
		[Token(Token = "0x4000D94")]
		YesNoCancel
	}

	[Token(Token = "0x200020D")]
	public enum MessageBoxResult
	{
		[Token(Token = "0x4000D96")]
		Ok,
		[Token(Token = "0x4000D97")]
		Yes,
		[Token(Token = "0x4000D98")]
		Cancel,
		[Token(Token = "0x4000D99")]
		No,
		[Token(Token = "0x4000D9A")]
		Close
	}

	[Token(Token = "0x200020E")]
	public enum Window
	{
		[Token(Token = "0x4000D9C")]
		Campaigns,
		[Token(Token = "0x4000D9D")]
		Missions,
		[Token(Token = "0x4000D9E")]
		Terrain,
		[Token(Token = "0x4000D9F")]
		Tasks,
		[Token(Token = "0x4000DA0")]
		TestMission,
		[Token(Token = "0x4000DA1")]
		Settings
	}

	[Token(Token = "0x200020F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x917E9C", Offset = "0x917E9C")]
	private sealed class <CheckNotLoggedToCloudAtStart>d__60 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MissionEditor <>4__this;

		[Token(Token = "0x170000B5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BC3")]
			[Address(RVA = "0xE71534", Offset = "0xE71534", VA = "0xE71534", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BC5")]
			[Address(RVA = "0xE7157C", Offset = "0xE7157C", VA = "0xE7157C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BC0")]
		[Address(RVA = "0xE71260", Offset = "0xE71260", VA = "0xE71260")]
		[DebuggerHidden]
		public <CheckNotLoggedToCloudAtStart>d__60(int <>1__state)
		{
		}

		[Token(Token = "0x6000BC1")]
		[Address(RVA = "0xE7128C", Offset = "0xE7128C", VA = "0xE7128C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BC2")]
		[Address(RVA = "0xE71290", Offset = "0xE71290", VA = "0xE71290", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BC4")]
		[Address(RVA = "0xE7153C", Offset = "0xE7153C", VA = "0xE7153C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000210")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x917EAC", Offset = "0x917EAC")]
	private sealed class <MessageBoxCoroutine>d__71 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MissionEditor <>4__this;

		[Token(Token = "0x4000DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string text;

		[Token(Token = "0x4000DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public MessageBoxButtons buttons;

		[Token(Token = "0x4000DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action<MessageBoxResult> retCallback;

		[Token(Token = "0x170000B7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BC9")]
			[Address(RVA = "0xE7173C", Offset = "0xE7173C", VA = "0xE7173C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BCB")]
			[Address(RVA = "0xE71784", Offset = "0xE71784", VA = "0xE71784", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BC6")]
		[Address(RVA = "0xE71584", Offset = "0xE71584", VA = "0xE71584")]
		[DebuggerHidden]
		public <MessageBoxCoroutine>d__71(int <>1__state)
		{
		}

		[Token(Token = "0x6000BC7")]
		[Address(RVA = "0xE715B0", Offset = "0xE715B0", VA = "0xE715B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BC8")]
		[Address(RVA = "0xE715B4", Offset = "0xE715B4", VA = "0xE715B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BCA")]
		[Address(RVA = "0xE71744", Offset = "0xE71744", VA = "0xE71744", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D61")]
	public const int maxUniqueTasks = 6;

	[Token(Token = "0x4000D62")]
	public const int maxAllTasks = 12;

	[Token(Token = "0x4000D63")]
	public const int maxTaskObjectsCount = 10;

	[Token(Token = "0x4000D64")]
	public const int maxTaskWavesCount = 10;

	[Token(Token = "0x4000D65")]
	public const int maxPlanes = 12;

	[Token(Token = "0x4000D66")]
	public const int maxPlaneLevel = 5;

	[Token(Token = "0x4000D67")]
	public const int maxMissionsInCampaign = 20;

	[Token(Token = "0x4000D68")]
	public const int minTotalActiveEnemiesOnMissionCount = 15;

	[Token(Token = "0x4000D69")]
	public const int minMainTaskActiveEnemiesOnMissionCount = 10;

	[Token(Token = "0x4000D6A")]
	public const int activeEnemiesCountInStructures = 5;

	[Token(Token = "0x4000D6B")]
	public const string allowedCharactersInNames = " !@#$%^&*|_-=<>,.\"'?`~/\\";

	[Token(Token = "0x4000D6C")]
	public const int minNameLength = 3;

	[Token(Token = "0x4000D6D")]
	public const int maxNameLength = 15;

	[Token(Token = "0x4000D6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static eNation[] playableNations;

	[Token(Token = "0x4000D6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Dictionary<eNation, string[]> planesID;

	[Token(Token = "0x4000D70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public eCondition[] conditions;

	[Token(Token = "0x4000D71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public eWeather[] weathers;

	[Token(Token = "0x4000D72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] menuButtons;

	[Token(Token = "0x4000D73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject menuWindow;

	[Token(Token = "0x4000D74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject menuButtonsSelector;

	[Token(Token = "0x4000D75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject messageWindow;

	[Token(Token = "0x4000D76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMesh messageText;

	[Token(Token = "0x4000D77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject messageButtonsOkCancel;

	[Token(Token = "0x4000D78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject messageButtonsYesNo;

	[Token(Token = "0x4000D79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject messageButtonsYesNoCancel;

	[Token(Token = "0x4000D7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject messagageButtonClose;

	[Token(Token = "0x4000D7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TextMesh helpText;

	[Token(Token = "0x4000D7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public EditorTranslatorWindow translatorWindow;

	[Token(Token = "0x4000D7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float cameraDist2D;

	[Token(Token = "0x4000D7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Location[] locations;

	[Token(Token = "0x4000D7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static Dictionary<string, Location> cachedLocations;

	[Token(Token = "0x4000D80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static MissionEditor instance;

	[Token(Token = "0x4000D81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static int campaignBeforeTestUID;

	[Token(Token = "0x4000D82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private static int missionBeforeTestIdx;

	[Token(Token = "0x4000D83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static bool shownNotLoggedToCloudMessage;

	[Token(Token = "0x4000D84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private List<CustomCampaignData> campaigns;

	[Token(Token = "0x4000D85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private CustomCampaignData campaign;

	[Token(Token = "0x4000D86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private CustomMissionData mission;

	[Token(Token = "0x4000D87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float customTerrainHeightChanged;

	[Token(Token = "0x4000D88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private MessageBoxResult messageResult;

	[Token(Token = "0x4000D89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool testMission;

	[Token(Token = "0x4000D8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
	private bool changedCampaigns;

	[Token(Token = "0x4000D8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private int currHelpWindowIdx;

	[Token(Token = "0x4000D8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool initCloudSaveUI;

	[Token(Token = "0x4000D8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
	private bool dontSaveChangedCampaignOnQuit;

	[Token(Token = "0x4000D8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private uint cloud_user_before_CloudSave;

	[Token(Token = "0x4000D8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool imported;

	[Token(Token = "0x6000B6A")]
	[Address(RVA = "0x11F7A44", Offset = "0x11F7A44", VA = "0x11F7A44")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B6B")]
	[Address(RVA = "0x11F7CA4", Offset = "0x11F7CA4", VA = "0x11F7CA4")]
	public static void CacheLocations()
	{
	}

	[Token(Token = "0x6000B6C")]
	[Address(RVA = "0x11F8448", Offset = "0x11F8448", VA = "0x11F8448")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000B6D")]
	[Address(RVA = "0x11F84F8", Offset = "0x11F84F8", VA = "0x11F84F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B6E")]
	[Address(RVA = "0x11F8CB8", Offset = "0x11F8CB8", VA = "0x11F8CB8")]
	public void DontSaveChangedCampaignOnQuit()
	{
	}

	[Token(Token = "0x6000B6F")]
	[Address(RVA = "0x11F8CC4", Offset = "0x11F8CC4", VA = "0x11F8CC4")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000B70")]
	[Address(RVA = "0x11F8E54", Offset = "0x11F8E54", VA = "0x11F8E54")]
	public static MissionEditor Instance()
	{
		return null;
	}

	[Token(Token = "0x6000B71")]
	[Address(RVA = "0x11F8EB8", Offset = "0x11F8EB8", VA = "0x11F8EB8")]
	public List<CustomCampaignData> GetCampaigns()
	{
		return null;
	}

	[Token(Token = "0x6000B72")]
	[Address(RVA = "0x11F8EC0", Offset = "0x11F8EC0", VA = "0x11F8EC0")]
	public CustomCampaignData GetCampaign()
	{
		return null;
	}

	[Token(Token = "0x6000B73")]
	[Address(RVA = "0x11F8EC8", Offset = "0x11F8EC8", VA = "0x11F8EC8")]
	public CustomMissionData GetMission()
	{
		return null;
	}

	[Token(Token = "0x6000B74")]
	[Address(RVA = "0x11F8C4C", Offset = "0x11F8C4C", VA = "0x11F8C4C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x927B9C", Offset = "0x927B9C")]
	private IEnumerator CheckNotLoggedToCloudAtStart()
	{
		return null;
	}

	[Token(Token = "0x6000B75")]
	[Address(RVA = "0x11F8ED0", Offset = "0x11F8ED0", VA = "0x11F8ED0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B76")]
	[Address(RVA = "0x11F8F28", Offset = "0x11F8F28", VA = "0x11F8F28")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000B77")]
	[Address(RVA = "0x11F9188", Offset = "0x11F9188", VA = "0x11F9188")]
	public void OnExit()
	{
	}

	[Token(Token = "0x6000B78")]
	[Address(RVA = "0x11F9204", Offset = "0x11F9204", VA = "0x11F9204")]
	private void OnCloudSave()
	{
	}

	[Token(Token = "0x6000B79")]
	[Address(RVA = "0x11F935C", Offset = "0x11F935C", VA = "0x11F935C")]
	private void OpenCloudSave()
	{
	}

	[Token(Token = "0x6000B7A")]
	[Address(RVA = "0x11F94AC", Offset = "0x11F94AC", VA = "0x11F94AC")]
	public void OnCloudSaveConflict()
	{
	}

	[Token(Token = "0x6000B7B")]
	[Address(RVA = "0x11F94B0", Offset = "0x11F94B0", VA = "0x11F94B0")]
	public void ClearCloudSaveConflict()
	{
	}

	[Token(Token = "0x6000B7C")]
	[Address(RVA = "0x11F94B4", Offset = "0x11F94B4", VA = "0x11F94B4")]
	public void OnUnloadCloudSave()
	{
	}

	[Token(Token = "0x6000B7D")]
	[Address(RVA = "0x11F8738", Offset = "0x11F8738", VA = "0x11F8738")]
	private void ReloadTerrain()
	{
	}

	[Token(Token = "0x6000B7E")]
	[Address(RVA = "0x11F9330", Offset = "0x11F9330", VA = "0x11F9330")]
	public void MessageBox(string text, MessageBoxButtons buttons, Action<MessageBoxResult> retCallback)
	{
	}

	[Token(Token = "0x6000B7F")]
	[Address(RVA = "0x11F96B0", Offset = "0x11F96B0", VA = "0x11F96B0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x927BFC", Offset = "0x927BFC")]
	private IEnumerator MessageBoxCoroutine(string text, MessageBoxButtons buttons, Action<MessageBoxResult> retCallback)
	{
		return null;
	}

	[Token(Token = "0x6000B80")]
	[Address(RVA = "0x11F9740", Offset = "0x11F9740", VA = "0x11F9740")]
	private void OnMessageOk()
	{
	}

	[Token(Token = "0x6000B81")]
	[Address(RVA = "0x11F9768", Offset = "0x11F9768", VA = "0x11F9768")]
	private void OnMessageCancel()
	{
	}

	[Token(Token = "0x6000B82")]
	[Address(RVA = "0x11F9794", Offset = "0x11F9794", VA = "0x11F9794")]
	private void OnMessageYes()
	{
	}

	[Token(Token = "0x6000B83")]
	[Address(RVA = "0x11F97C0", Offset = "0x11F97C0", VA = "0x11F97C0")]
	private void OnMessageNo()
	{
	}

	[Token(Token = "0x6000B84")]
	[Address(RVA = "0x11F97EC", Offset = "0x11F97EC", VA = "0x11F97EC")]
	private void OnMessageClose()
	{
	}

	[Token(Token = "0x6000B85")]
	[Address(RVA = "0x11F9818", Offset = "0x11F9818", VA = "0x11F9818")]
	public void SetChanged()
	{
	}

	[Token(Token = "0x6000B86")]
	[Address(RVA = "0x11F9838", Offset = "0x11F9838", VA = "0x11F9838")]
	public void SetLocationID(string id)
	{
	}

	[Token(Token = "0x6000B87")]
	[Address(RVA = "0x11F9AA4", Offset = "0x11F9AA4", VA = "0x11F9AA4")]
	public void SetTerrainHeightType(eTerrainH terrH)
	{
	}

	[Token(Token = "0x6000B88")]
	[Address(RVA = "0x11F9B04", Offset = "0x11F9B04", VA = "0x11F9B04")]
	public void SetTerrainHeightCustom(Vector3 v)
	{
	}

	[Token(Token = "0x6000B89")]
	[Address(RVA = "0x11F9B50", Offset = "0x11F9B50", VA = "0x11F9B50")]
	public void SetTerrainCondition(eCondition cond)
	{
	}

	[Token(Token = "0x6000B8A")]
	[Address(RVA = "0x11F9B80", Offset = "0x11F9B80", VA = "0x11F9B80")]
	public void SetWeatherType(eWeather weather)
	{
	}

	[Token(Token = "0x6000B8B")]
	[Address(RVA = "0x11F9C5C", Offset = "0x11F9C5C", VA = "0x11F9C5C")]
	public void AddTask(CustomMissionTask task)
	{
	}

	[Token(Token = "0x6000B8C")]
	[Address(RVA = "0x11F9CE4", Offset = "0x11F9CE4", VA = "0x11F9CE4")]
	public void SetTaskType(int idx, eTask type)
	{
	}

	[Token(Token = "0x6000B8D")]
	[Address(RVA = "0x11F9DD4", Offset = "0x11F9DD4", VA = "0x11F9DD4")]
	public void SetTaskEqType(int idx, eqType eqType)
	{
	}

	[Token(Token = "0x6000B8E")]
	[Address(RVA = "0x11F9F3C", Offset = "0x11F9F3C", VA = "0x11F9F3C")]
	public void SetTaskCount(int idx, int newVal)
	{
	}

	[Token(Token = "0x6000B8F")]
	[Address(RVA = "0x11FA040", Offset = "0x11FA040", VA = "0x11FA040")]
	public void SetTaskWavesCount(int idx, int newVal)
	{
	}

	[Token(Token = "0x6000B90")]
	[Address(RVA = "0x11FA144", Offset = "0x11FA144", VA = "0x11FA144")]
	public void DeleteTask(int idx)
	{
	}

	[Token(Token = "0x6000B91")]
	[Address(RVA = "0x11FA294", Offset = "0x11FA294", VA = "0x11FA294")]
	public void MoveTaskUp(int idx)
	{
	}

	[Token(Token = "0x6000B92")]
	[Address(RVA = "0x11FA3A8", Offset = "0x11FA3A8", VA = "0x11FA3A8")]
	public void MoveTaskDown(int idx)
	{
	}

	[Token(Token = "0x6000B93")]
	[Address(RVA = "0x11F988C", Offset = "0x11F988C", VA = "0x11F988C")]
	public int RemoveTasksNotMatchingLocation(string locationID, bool remove)
	{
		return default(int);
	}

	[Token(Token = "0x6000B94")]
	[Address(RVA = "0x11FA4B8", Offset = "0x11FA4B8", VA = "0x11FA4B8")]
	public int RemoveTasksNotMatchingNation()
	{
		return default(int);
	}

	[Token(Token = "0x6000B95")]
	[Address(RVA = "0x11FA6C8", Offset = "0x11FA6C8", VA = "0x11FA6C8")]
	public void SetEnemyNation(eNation nation)
	{
	}

	[Token(Token = "0x6000B96")]
	[Address(RVA = "0x11FA6F8", Offset = "0x11FA6F8", VA = "0x11FA6F8")]
	public void AddPlane(CustomMissionPlane Plane)
	{
	}

	[Token(Token = "0x6000B97")]
	[Address(RVA = "0x11FA780", Offset = "0x11FA780", VA = "0x11FA780")]
	public void SetPlanePrefabID(int idx, string prefabID)
	{
	}

	[Token(Token = "0x6000B98")]
	[Address(RVA = "0x11FA85C", Offset = "0x11FA85C", VA = "0x11FA85C")]
	public void SetPlaneLoadoutID(int idx, int loadoutID)
	{
	}

	[Token(Token = "0x6000B99")]
	[Address(RVA = "0x11FA93C", Offset = "0x11FA93C", VA = "0x11FA93C")]
	public void SetPlaneLevel(int idx, int level)
	{
	}

	[Token(Token = "0x6000B9A")]
	[Address(RVA = "0x11FAA40", Offset = "0x11FAA40", VA = "0x11FAA40")]
	public void DeletePlane(int idx)
	{
	}

	[Token(Token = "0x6000B9B")]
	[Address(RVA = "0x11FAB5C", Offset = "0x11FAB5C", VA = "0x11FAB5C")]
	public void MovePlaneUp(int idx)
	{
	}

	[Token(Token = "0x6000B9C")]
	[Address(RVA = "0x11FAC70", Offset = "0x11FAC70", VA = "0x11FAC70")]
	public void MovePlaneDown(int idx)
	{
	}

	[Token(Token = "0x6000B9D")]
	[Address(RVA = "0x11FA260", Offset = "0x11FA260", VA = "0x11FA260")]
	public bool IsValidMission(bool checkAllMissions)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B9E")]
	[Address(RVA = "0x11FAD80", Offset = "0x11FAD80", VA = "0x11FAD80")]
	public bool IsValidMission(bool checkAllMissions, out string wrongMissionName, out int wrongEnemiesCnt_total, out int wrongEnemiesCnt_main)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B9F")]
	[Address(RVA = "0x11FB498", Offset = "0x11FB498", VA = "0x11FB498")]
	public static MissionTemplate FillMissionTemplate(CustomMissionData customMission)
	{
		return null;
	}

	[Token(Token = "0x6000BA0")]
	[Address(RVA = "0x11FB79C", Offset = "0x11FB79C", VA = "0x11FB79C")]
	public void AddNewMission()
	{
	}

	[Token(Token = "0x6000BA1")]
	[Address(RVA = "0x11FBC0C", Offset = "0x11FBC0C", VA = "0x11FBC0C")]
	public void DeleteMission(int idx)
	{
	}

	[Token(Token = "0x6000BA2")]
	[Address(RVA = "0x11FBD80", Offset = "0x11FBD80", VA = "0x11FBD80")]
	public void MoveMissionUp(int idx)
	{
	}

	[Token(Token = "0x6000BA3")]
	[Address(RVA = "0x11FBE8C", Offset = "0x11FBE8C", VA = "0x11FBE8C")]
	public void MoveMissionDown(int idx)
	{
	}

	[Token(Token = "0x6000BA4")]
	[Address(RVA = "0x11FBF9C", Offset = "0x11FBF9C", VA = "0x11FBF9C")]
	public void SetCurrentMission(int idx)
	{
	}

	[Token(Token = "0x6000BA5")]
	[Address(RVA = "0x11FC044", Offset = "0x11FC044", VA = "0x11FC044")]
	private int FindMissionIdx(CustomMissionData mis)
	{
		return default(int);
	}

	[Token(Token = "0x6000BA6")]
	[Address(RVA = "0x11F7EF0", Offset = "0x11F7EF0", VA = "0x11F7EF0")]
	private void InitCampaigns()
	{
	}

	[Token(Token = "0x6000BA7")]
	[Address(RVA = "0x11FC060", Offset = "0x11FC060", VA = "0x11FC060")]
	public static Dictionary<string, CloudSave_Save> ExportCloudSave()
	{
		return null;
	}

	[Token(Token = "0x6000BA8")]
	[Address(RVA = "0x11FC2C4", Offset = "0x11FC2C4", VA = "0x11FC2C4")]
	public static void ImportCloudSave(Dictionary<string, string> saves)
	{
	}

	[Token(Token = "0x6000BA9")]
	[Address(RVA = "0x11FC52C", Offset = "0x11FC52C", VA = "0x11FC52C")]
	public static void DeleteAllCampaigns()
	{
	}

	[Token(Token = "0x6000BAA")]
	[Address(RVA = "0x11FC668", Offset = "0x11FC668", VA = "0x11FC668")]
	public static bool GetCampaignCloudProperty(int uid, string propName, out string propValue)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BAB")]
	[Address(RVA = "0x11FC810", Offset = "0x11FC810", VA = "0x11FC810")]
	public static bool GetCampaignCloudRateDifficultyAvrg(int uid, out float val)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BAC")]
	[Address(RVA = "0x11FC91C", Offset = "0x11FC91C", VA = "0x11FC91C")]
	public static bool GetCampaignCloudRateDifficultyCount(int uid, out int val)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BAD")]
	[Address(RVA = "0x11FC9E8", Offset = "0x11FC9E8", VA = "0x11FC9E8")]
	public static bool GetCampaignCloudRateRatingAvrg(int uid, out float val)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BAE")]
	[Address(RVA = "0x11FCAF4", Offset = "0x11FCAF4", VA = "0x11FCAF4")]
	public static bool GetCampaignCloudRateRatingCount(int uid, out int val)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BAF")]
	[Address(RVA = "0x11FCBC0", Offset = "0x11FCBC0", VA = "0x11FCBC0")]
	public static bool GetCampaignCloudTotalCampaignsCount(int uid, out int val)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BB0")]
	[Address(RVA = "0x11FCC8C", Offset = "0x11FCC8C", VA = "0x11FCC8C")]
	public static bool GetCampaignCloudTotalMissionsCount(int uid, out int val)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BB1")]
	[Address(RVA = "0x11FCD58", Offset = "0x11FCD58", VA = "0x11FCD58")]
	public void SetCurrentCampaign(int idx, int selMissionIdx = 0)
	{
	}

	[Token(Token = "0x6000BB2")]
	[Address(RVA = "0x11F8D7C", Offset = "0x11F8D7C", VA = "0x11F8D7C")]
	public void SaveCampaign()
	{
	}

	[Token(Token = "0x6000BB3")]
	[Address(RVA = "0x11F8D60", Offset = "0x11F8D60", VA = "0x11F8D60")]
	public bool IsCampaignChanged()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BB4")]
	[Address(RVA = "0x11F818C", Offset = "0x11F818C", VA = "0x11F818C")]
	public void AddNewCampaign(bool reloadTerrain = true, int uid = 0)
	{
	}

	[Token(Token = "0x6000BB5")]
	[Address(RVA = "0x11FD020", Offset = "0x11FD020", VA = "0x11FD020")]
	public void DeleteCampaign()
	{
	}

	[Token(Token = "0x6000BB6")]
	[Address(RVA = "0x11FD194", Offset = "0x11FD194", VA = "0x11FD194")]
	public void SetCampaignNation(eNation _nation)
	{
	}

	[Token(Token = "0x6000BB7")]
	[Address(RVA = "0x11FCFEC", Offset = "0x11FCFEC", VA = "0x11FCFEC")]
	public void SetCampaignActive(bool on)
	{
	}

	[Token(Token = "0x6000BB8")]
	[Address(RVA = "0x11FD388", Offset = "0x11FD388", VA = "0x11FD388")]
	public void SetCampaignDifficulty(CustomCampaignData.eDifficulty diff)
	{
	}

	[Token(Token = "0x6000BB9")]
	[Address(RVA = "0x11FB978", Offset = "0x11FB978", VA = "0x11FB978")]
	public int GetMaxPlayersCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000BBA")]
	[Address(RVA = "0x11FB9FC", Offset = "0x11FB9FC", VA = "0x11FB9FC")]
	public void SetMaxPlayersCount(int cnt)
	{
	}

	[Token(Token = "0x6000BBB")]
	[Address(RVA = "0x11FD3B8", Offset = "0x11FD3B8", VA = "0x11FD3B8")]
	public void OnShowHelp(int wndIdx)
	{
	}

	[Token(Token = "0x6000BBC")]
	[Address(RVA = "0x11FD844", Offset = "0x11FD844", VA = "0x11FD844")]
	public void OnCloseHelp()
	{
	}

	[Token(Token = "0x6000BBD")]
	[Address(RVA = "0x11FD93C", Offset = "0x11FD93C", VA = "0x11FD93C")]
	public MissionEditor()
	{
	}

	[Token(Token = "0x6000BBF")]
	[Address(RVA = "0x11FDB50", Offset = "0x11FDB50", VA = "0x11FDB50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927C5C", Offset = "0x927C5C")]
	private void <OnCloudSave>b__64_0(MessageBoxResult result)
	{
	}
}
[Token(Token = "0x2000211")]
public enum eMissionType
{
	[Token(Token = "0x4000DAC")]
	attack,
	[Token(Token = "0x4000DAD")]
	defense,
	[Token(Token = "0x4000DAE")]
	naval,
	[Token(Token = "0x4000DAF")]
	tutorial,
	[Token(Token = "0x4000DB0")]
	num
}
[Token(Token = "0x2000212")]
public class MissionGenerator : MonoBehaviour
{
	[Token(Token = "0x2000213")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x917EBC", Offset = "0x917EBC")]
	private sealed class <Start>d__54 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MissionGenerator <>4__this;

		[Token(Token = "0x170000B9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C26")]
			[Address(RVA = "0xE71FB4", Offset = "0xE71FB4", VA = "0xE71FB4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C28")]
			[Address(RVA = "0xE71FFC", Offset = "0xE71FFC", VA = "0xE71FFC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C23")]
		[Address(RVA = "0xE7178C", Offset = "0xE7178C", VA = "0xE7178C")]
		[DebuggerHidden]
		public <Start>d__54(int <>1__state)
		{
		}

		[Token(Token = "0x6000C24")]
		[Address(RVA = "0xE717B8", Offset = "0xE717B8", VA = "0xE717B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C25")]
		[Address(RVA = "0xE717BC", Offset = "0xE717BC", VA = "0xE717BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C27")]
		[Address(RVA = "0xE71FBC", Offset = "0xE71FBC", VA = "0xE71FBC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x2000214")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x917ECC", Offset = "0x917ECC")]
	private struct <>c__DisplayClass66_0
	{
		[Token(Token = "0x4000DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MissionTemplate mission;

		[Token(Token = "0x4000DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Country country;
	}

	[Token(Token = "0x4000DB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly string[] campName;

	[Token(Token = "0x4000DB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static MissionGenerator instance;

	[Token(Token = "0x4000DB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Location[] locationsCache;

	[Token(Token = "0x4000DB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static List<int> locationsIdxCache;

	[Token(Token = "0x4000DB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static CampaignTemplate[] campaignsCache;

	[Token(Token = "0x4000DB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public NationCampaign[] regions;

	[Token(Token = "0x4000DB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static int maxLocation;

	[Token(Token = "0x4000DB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public static int maxLocationAll;

	[Token(Token = "0x4000DB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static int locationFirstIdx;

	[Token(Token = "0x4000DBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public eTerrainH forceHType;

	[Token(Token = "0x4000DBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMesh text;

	[Token(Token = "0x4000DBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMesh textReward;

	[Token(Token = "0x4000DBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public static float townAADeleteMul;

	[Token(Token = "0x4000DBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static int reward;

	[Token(Token = "0x4000DBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public static bool isReturnedFromMultiplayer;

	[Token(Token = "0x4000DC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	public static bool isCampaignMode;

	[Token(Token = "0x4000DC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static Vector2 mapLocationOffset;

	[Token(Token = "0x4000DC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static Quaternion planeSpawnRotation;

	[Token(Token = "0x4000DC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static int campaignID;

	[Token(Token = "0x4000DC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public static int campaignType;

	[Token(Token = "0x4000DC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static int[] missionID;

	[Token(Token = "0x4000DC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static int[][] campaignsMissions;

	[Token(Token = "0x4000DC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static int countryID;

	[Token(Token = "0x4000DC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static CustomCampaignData multiCampaign;

	[Token(Token = "0x4000DC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static CustomMissionData multiMission;

	[Token(Token = "0x4000DCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static CustomMissionData startQuickMission;

	[Token(Token = "0x4000DCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static eTerrainH hType;

	[Token(Token = "0x4000DCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public static eCondition areaType;

	[Token(Token = "0x4000DCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public static eNation ourNation;

	[Token(Token = "0x4000DCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public static eNation enemyNation;

	[Token(Token = "0x4000DCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public static bool train;

	[Token(Token = "0x4000DD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public static Country country;

	[Token(Token = "0x4000DD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public static bool countryChanged;

	[Token(Token = "0x4000DD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public static GameObject missionData;

	[Token(Token = "0x4000DD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public static eWeather weather;

	[Token(Token = "0x4000DD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public static bool nightMission;

	[Token(Token = "0x4000DD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public static CampaignTemplate campaignT;

	[Token(Token = "0x4000DD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public static MissionTemplate missionT;

	[Token(Token = "0x4000DD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public static Location location;

	[Token(Token = "0x4000DD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public static GameObject locationPrefab;

	[Token(Token = "0x4000DD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public static GameObject forestPrefab;

	[Token(Token = "0x4000DDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public static GameObject missionMaterials;

	[Token(Token = "0x4000DDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public static CampaignTemplate campaignTemplate;

	[Token(Token = "0x4000DDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public static Task[] tasks;

	[Token(Token = "0x4000DDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private static Squadron[] squadrons;

	[Token(Token = "0x4000DDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private static int sNum;

	[Token(Token = "0x4000DDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private static NationCampaign nationCampaign;

	[Token(Token = "0x4000DE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private static Country testCountry;

	[Token(Token = "0x4000DE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private static MissionTemplate forcedMissionTemplate;

	[Token(Token = "0x4000DE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public static string debugMissionName;

	[Token(Token = "0x4000DE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MultiplayerSync.SyncState mSync;

	[Token(Token = "0x4000DE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public static string[] missionMat;

	[Token(Token = "0x4000DE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public static string[] forestP;

	[Token(Token = "0x4000DE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public static Color[] townHue;

	[Token(Token = "0x4000DE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private static bool missingEquipment;

	[Token(Token = "0x4000DE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private TaskTemplate taskT;

	[Token(Token = "0x6000BCC")]
	[Address(RVA = "0xF6DE8C", Offset = "0xF6DE8C", VA = "0xF6DE8C")]
	public static string GetSave()
	{
		return null;
	}

	[Token(Token = "0x6000BCD")]
	[Address(RVA = "0xF6E134", Offset = "0xF6E134", VA = "0xF6E134")]
	public static void Load(string save)
	{
	}

	[Token(Token = "0x6000BCE")]
	[Address(RVA = "0xF6E3E8", Offset = "0xF6E3E8", VA = "0xF6E3E8")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000BCF")]
	[Address(RVA = "0xF6E7A0", Offset = "0xF6E7A0", VA = "0xF6E7A0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x927D0C", Offset = "0x927D0C")]
	public IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000BD0")]
	[Address(RVA = "0xF6E80C", Offset = "0xF6E80C", VA = "0xF6E80C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000BD1")]
	[Address(RVA = "0xF6E8F0", Offset = "0xF6E8F0", VA = "0xF6E8F0")]
	public static void TerritoryChanged(TerritoryMap.Region region)
	{
	}

	[Token(Token = "0x6000BD2")]
	[Address(RVA = "0xF6EF34", Offset = "0xF6EF34", VA = "0xF6EF34")]
	public static int GetCompletedMissionsInCampaign(int campaignId)
	{
		return default(int);
	}

	[Token(Token = "0x6000BD3")]
	[Address(RVA = "0xF6F0F8", Offset = "0xF6F0F8", VA = "0xF6F0F8")]
	public static bool ShouldConquerTerritory(int campaignId)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BD4")]
	[Address(RVA = "0xF6F254", Offset = "0xF6F254", VA = "0xF6F254")]
	public static bool ShouldProtectTerritory(int campaignId, out int priority)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BD5")]
	[Address(RVA = "0xF6F438", Offset = "0xF6F438", VA = "0xF6F438")]
	public static float GetPlaneSpawnHeight(eqType type)
	{
		return default(float);
	}

	[Token(Token = "0x6000BD6")]
	[Address(RVA = "0xF6F50C", Offset = "0xF6F50C", VA = "0xF6F50C")]
	public static void ClearMissionData()
	{
	}

	[Token(Token = "0x6000BD7")]
	[Address(RVA = "0xF6F6F8", Offset = "0xF6F6F8", VA = "0xF6F6F8")]
	private void InitCurrentMission(bool forceResetCountry = false)
	{
	}

	[Token(Token = "0x6000BD8")]
	[Address(RVA = "0xF728E8", Offset = "0xF728E8", VA = "0xF728E8")]
	public static void MissionFinished()
	{
	}

	[Token(Token = "0x6000BD9")]
	[Address(RVA = "0xF72E5C", Offset = "0xF72E5C", VA = "0xF72E5C")]
	public static MissionPosition GetMissionStrictPosition(eMissionType type, int campId, int missionId, out eqType firstTask, out bool protectMission)
	{
		return null;
	}

	[Token(Token = "0x6000BDA")]
	[Address(RVA = "0xF730F4", Offset = "0xF730F4", VA = "0xF730F4")]
	public static int GetMissionNumInCampaign(eMissionType type, int campId)
	{
		return default(int);
	}

	[Token(Token = "0x6000BDB")]
	[Address(RVA = "0xF73344", Offset = "0xF73344", VA = "0xF73344")]
	public static bool IsValidCountryForCurrentMissionInCampaign(eMissionType missionType, int campId, Country country, out eqType firstTask, out bool protectMission)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BDC")]
	[Address(RVA = "0xF739B0", Offset = "0xF739B0", VA = "0xF739B0")]
	public static void Init()
	{
	}

	[Token(Token = "0x6000BDD")]
	[Address(RVA = "0xF73C08", Offset = "0xF73C08", VA = "0xF73C08")]
	public void InitFirstMission()
	{
	}

	[Token(Token = "0x6000BDE")]
	[Address(RVA = "0xF721D4", Offset = "0xF721D4", VA = "0xF721D4")]
	private void LoadRandomLocationPrefab()
	{
	}

	[Token(Token = "0x6000BDF")]
	[Address(RVA = "0xF6EA5C", Offset = "0xF6EA5C", VA = "0xF6EA5C")]
	private static void PrepareCaches()
	{
	}

	[Token(Token = "0x6000BE0")]
	[Address(RVA = "0xF749AC", Offset = "0xF749AC", VA = "0xF749AC")]
	private static void PrepareDefaultCampaignCache()
	{
	}

	[Token(Token = "0x6000BE1")]
	[Address(RVA = "0xF7471C", Offset = "0xF7471C", VA = "0xF7471C")]
	private static void PrepareZoneCampaignCache()
	{
	}

	[Token(Token = "0x6000BE2")]
	[Address(RVA = "0xF74C38", Offset = "0xF74C38", VA = "0xF74C38")]
	public static CampaignTemplate[] GetCampaignCache()
	{
		return null;
	}

	[Token(Token = "0x6000BE3")]
	[Address(RVA = "0xF74424", Offset = "0xF74424", VA = "0xF74424")]
	public List<int> FillCurrentMissionLocationsIDs()
	{
		return null;
	}

	[Token(Token = "0x6000BE4")]
	[Address(RVA = "0xF70E38", Offset = "0xF70E38", VA = "0xF70E38")]
	public eNation GetRandomEnemyNation(Country c, eNation ourNation)
	{
		return default(eNation);
	}

	[Token(Token = "0x6000BE5")]
	[Address(RVA = "0xF74CA0", Offset = "0xF74CA0", VA = "0xF74CA0")]
	public eCondition GetBaseAreaType()
	{
		return default(eCondition);
	}

	[Token(Token = "0x6000BE6")]
	[Address(RVA = "0xF74D84", Offset = "0xF74D84", VA = "0xF74D84")]
	public static void SetMissionType(int i)
	{
	}

	[Token(Token = "0x6000BE7")]
	[Address(RVA = "0xF74E84", Offset = "0xF74E84", VA = "0xF74E84")]
	public static void InitMultiplayerMissionType(CustomMissionData mission)
	{
	}

	[Token(Token = "0x6000BE8")]
	[Address(RVA = "0xF750E4", Offset = "0xF750E4", VA = "0xF750E4")]
	public static void InitMultiplayerMissionType(CustomCampaignData campaign, CustomMissionData mission)
	{
	}

	[Token(Token = "0x6000BE9")]
	[Address(RVA = "0xF6E650", Offset = "0xF6E650", VA = "0xF6E650")]
	public static void ResetMultiplayerMissionType()
	{
	}

	[Token(Token = "0x6000BEA")]
	[Address(RVA = "0xF75340", Offset = "0xF75340", VA = "0xF75340")]
	public static void InitQuickMissionType(CustomMissionData mission)
	{
	}

	[Token(Token = "0x6000BEB")]
	[Address(RVA = "0xF753A8", Offset = "0xF753A8", VA = "0xF753A8")]
	public static void ResetQuickMissionType()
	{
	}

	[Token(Token = "0x6000BEC")]
	[Address(RVA = "0xF74080", Offset = "0xF74080", VA = "0xF74080")]
	public static void SetForcedMissionTemplate(TerritoryMap.Region r, MissionTemplate t)
	{
	}

	[Token(Token = "0x6000BED")]
	[Address(RVA = "0xF75B64", Offset = "0xF75B64", VA = "0xF75B64")]
	public static bool HaveForcedMission()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BEE")]
	[Address(RVA = "0xF75C04", Offset = "0xF75C04", VA = "0xF75C04")]
	public void SetMissionTypeWithTestCountry(int i, Country _testCountry)
	{
	}

	[Token(Token = "0x6000BEF")]
	[Address(RVA = "0xF70E40", Offset = "0xF70E40", VA = "0xF70E40")]
	private void InitCountry(bool forceResetCountry)
	{
	}

	[Token(Token = "0x6000BF0")]
	[Address(RVA = "0xF72644", Offset = "0xF72644", VA = "0xF72644")]
	public void Print()
	{
	}

	[Token(Token = "0x6000BF1")]
	[Address(RVA = "0xF763A8", Offset = "0xF763A8", VA = "0xF763A8")]
	public void PrintReward()
	{
	}

	[Token(Token = "0x6000BF2")]
	[Address(RVA = "0xF75C7C", Offset = "0xF75C7C", VA = "0xF75C7C")]
	public static string GetBriefing()
	{
		return null;
	}

	[Token(Token = "0x6000BF3")]
	[Address(RVA = "0xF76498", Offset = "0xF76498", VA = "0xF76498")]
	public static string GetTasksText()
	{
		return null;
	}

	[Token(Token = "0x6000BF4")]
	[Address(RVA = "0xF76638", Offset = "0xF76638", VA = "0xF76638")]
	private static bool IsTheSameTaskAbove(int index)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BF5")]
	[Address(RVA = "0xF76758", Offset = "0xF76758", VA = "0xF76758")]
	public void UpdateRewards()
	{
	}

	[Token(Token = "0x6000BF6")]
	[Address(RVA = "0xF725EC", Offset = "0xF725EC", VA = "0xF725EC")]
	public void GenerateReward()
	{
	}

	[Token(Token = "0x6000BF7")]
	[Address(RVA = "0xF767E0", Offset = "0xF767E0", VA = "0xF767E0")]
	public static int GetHardcoreModeGoldReward()
	{
		return default(int);
	}

	[Token(Token = "0x6000BF8")]
	[Address(RVA = "0xF767E8", Offset = "0xF767E8", VA = "0xF767E8")]
	public static int GetSecondaryRewardGold()
	{
		return default(int);
	}

	[Token(Token = "0x6000BF9")]
	[Address(RVA = "0xF767F0", Offset = "0xF767F0", VA = "0xF767F0")]
	public static int GetCampaignTypeExtraReward(int campID)
	{
		return default(int);
	}

	[Token(Token = "0x6000BFA")]
	[Address(RVA = "0xF7677C", Offset = "0xF7677C", VA = "0xF7677C")]
	public static void ReGenerateReward()
	{
	}

	[Token(Token = "0x6000BFB")]
	[Address(RVA = "0xF76858", Offset = "0xF76858", VA = "0xF76858")]
	public static int GetPremiumMissionOrModeGoldReward()
	{
		return default(int);
	}

	[Token(Token = "0x6000BFC")]
	[Address(RVA = "0xF76860", Offset = "0xF76860", VA = "0xF76860")]
	public static void PrintS()
	{
	}

	[Token(Token = "0x6000BFD")]
	[Address(RVA = "0xF76940", Offset = "0xF76940", VA = "0xF76940")]
	public static Color GetBaseTownHue()
	{
		return default(Color);
	}

	[Token(Token = "0x6000BFE")]
	[Address(RVA = "0xF769C8", Offset = "0xF769C8", VA = "0xF769C8")]
	public static Color GetTownHue()
	{
		return default(Color);
	}

	[Token(Token = "0x6000BFF")]
	[Address(RVA = "0xF76A5C", Offset = "0xF76A5C", VA = "0xF76A5C")]
	public static GameObject GetForestPrefab()
	{
		return null;
	}

	[Token(Token = "0x6000C00")]
	[Address(RVA = "0xF76BE4", Offset = "0xF76BE4", VA = "0xF76BE4")]
	public static Material[] GetMissionMaterials()
	{
		return null;
	}

	[Token(Token = "0x6000C01")]
	[Address(RVA = "0xF76E04", Offset = "0xF76E04", VA = "0xF76E04")]
	public static Material GetRoadMaterial()
	{
		return null;
	}

	[Token(Token = "0x6000C02")]
	[Address(RVA = "0xF76EA8", Offset = "0xF76EA8", VA = "0xF76EA8")]
	public static GameObject GetBridgePrefab()
	{
		return null;
	}

	[Token(Token = "0x6000C03")]
	[Address(RVA = "0xF76F70", Offset = "0xF76F70", VA = "0xF76F70")]
	private Squadron AddBaloons(GameObject prefab, eParty party)
	{
		return null;
	}

	[Token(Token = "0x6000C04")]
	[Address(RVA = "0xF77370", Offset = "0xF77370", VA = "0xF77370")]
	private Squadron AddBoats(GameObject prefab, eParty party)
	{
		return null;
	}

	[Token(Token = "0x6000C05")]
	[Address(RVA = "0xF773F4", Offset = "0xF773F4", VA = "0xF773F4")]
	private Squadron AddTrain(GameObject prefab, eParty party)
	{
		return null;
	}

	[Token(Token = "0x6000C06")]
	[Address(RVA = "0xF77480", Offset = "0xF77480", VA = "0xF77480")]
	private Squadron AddConvoy(GameObject prefab, eParty party)
	{
		return null;
	}

	[Token(Token = "0x6000C07")]
	[Address(RVA = "0xF7750C", Offset = "0xF7750C", VA = "0xF7750C")]
	private Squadron AddGroundObjects(GameObject prefab, eParty party)
	{
		return null;
	}

	[Token(Token = "0x6000C08")]
	[Address(RVA = "0xF775F0", Offset = "0xF775F0", VA = "0xF775F0")]
	private Squadron AddPlanes(GameObject prefab, eParty party)
	{
		return null;
	}

	[Token(Token = "0x6000C09")]
	[Address(RVA = "0xF77754", Offset = "0xF77754", VA = "0xF77754")]
	private Squadron AddZeppelins(GameObject prefab, eParty party)
	{
		return null;
	}

	[Token(Token = "0x6000C0A")]
	[Address(RVA = "0xF770AC", Offset = "0xF770AC", VA = "0xF770AC")]
	private Squadron AddSquadron(Vector3 pos, GameObject prefab, eParty party, Vector3 spread, bool random)
	{
		return null;
	}

	[Token(Token = "0x6000C0B")]
	[Address(RVA = "0xF77830", Offset = "0xF77830", VA = "0xF77830")]
	public static Squadron FindSquadronByMultiplayerUID(MultiplayerSync.UID uid)
	{
		return null;
	}

	[Token(Token = "0x6000C0C")]
	[Address(RVA = "0xF7206C", Offset = "0xF7206C", VA = "0xF7206C")]
	public static bool IsOurBaseMission()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C0D")]
	[Address(RVA = "0xF77A64", Offset = "0xF77A64", VA = "0xF77A64")]
	public static void MissingObjectForMission()
	{
	}

	[Token(Token = "0x6000C0E")]
	[Address(RVA = "0xF77ACC", Offset = "0xF77ACC", VA = "0xF77ACC")]
	public static bool IsTownEqType(eqType eType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C0F")]
	[Address(RVA = "0xF77ADC", Offset = "0xF77ADC", VA = "0xF77ADC")]
	public static bool IsTrainEqType(eqType eType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C10")]
	[Address(RVA = "0xF77AEC", Offset = "0xF77AEC", VA = "0xF77AEC")]
	public static bool IsConvoyEqType(eqType eType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C11")]
	[Address(RVA = "0xF77AFC", Offset = "0xF77AFC", VA = "0xF77AFC")]
	public static eqType GetTownType(int skipTask = 0)
	{
		return default(eqType);
	}

	[Token(Token = "0x6000C12")]
	[Address(RVA = "0xF77B78", Offset = "0xF77B78", VA = "0xF77B78")]
	public static eqType GetTownType(out bool objective, out int taskIdx, int skipTask = 0)
	{
		return default(eqType);
	}

	[Token(Token = "0x6000C13")]
	[Address(RVA = "0xF77D04", Offset = "0xF77D04", VA = "0xF77D04")]
	public static bool IsTown()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C14")]
	[Address(RVA = "0xF77E64", Offset = "0xF77E64", VA = "0xF77E64")]
	public static eParty GetTownParty()
	{
		return default(eParty);
	}

	[Token(Token = "0x6000C15")]
	[Address(RVA = "0xF78000", Offset = "0xF78000", VA = "0xF78000")]
	public static eParty GetTownBridgeParty()
	{
		return default(eParty);
	}

	[Token(Token = "0x6000C16")]
	[Address(RVA = "0xF70EC0", Offset = "0xF70EC0", VA = "0xF70EC0")]
	private void GenerateSquadrons()
	{
	}

	[Token(Token = "0x6000C17")]
	[Address(RVA = "0xF78558", Offset = "0xF78558", VA = "0xF78558")]
	public static bool IsTaskUsingWavesCount(eqType type)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C18")]
	[Address(RVA = "0xF7374C", Offset = "0xF7374C", VA = "0xF7374C")]
	public static bool IsMissionValidInLocation(MissionTemplate mT, Location loc)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C19")]
	[Address(RVA = "0xF78570", Offset = "0xF78570", VA = "0xF78570")]
	public static bool IsTaskValidInLocation(eqType type, Location loc)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C1A")]
	[Address(RVA = "0xF78690", Offset = "0xF78690", VA = "0xF78690")]
	public static bool IsTaskValidInNation(eqType eqtype, eTask ttype, eNation nation)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C1B")]
	[Address(RVA = "0xF7872C", Offset = "0xF7872C", VA = "0xF7872C")]
	public static bool IsZeppelinsValidInNation(eTask ttype, eNation nation)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C1C")]
	[Address(RVA = "0xF7875C", Offset = "0xF7875C", VA = "0xF7875C")]
	public static bool IsTaskUsingObjectsCount(eqType type)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C1D")]
	[Address(RVA = "0xF7878C", Offset = "0xF7878C", VA = "0xF7878C")]
	public static void SpawnObjects(MultiplayerSync.SyncState mSync)
	{
	}

	[Token(Token = "0x6000C1E")]
	[Address(RVA = "0xF782AC", Offset = "0xF782AC", VA = "0xF782AC")]
	private void Clear()
	{
	}

	[Token(Token = "0x6000C1F")]
	[Address(RVA = "0xF78980", Offset = "0xF78980", VA = "0xF78980")]
	public static void PreloadMaterials()
	{
	}

	[Token(Token = "0x6000C20")]
	[Address(RVA = "0xF78B44", Offset = "0xF78B44", VA = "0xF78B44")]
	public MissionGenerator()
	{
	}

	[Token(Token = "0x6000C22")]
	[Address(RVA = "0xF73908", Offset = "0xF73908", VA = "0xF73908")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927D6C", Offset = "0x927D6C")]
	internal static bool <IsValidCountryForCurrentMissionInCampaign>g__ValidateLocation|66_0(Location loc, ref <>c__DisplayClass66_0 P_1)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000215")]
public class MissionIntro : MonoBehaviour
{
	[Token(Token = "0x2000216")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x917EDC", Offset = "0x917EDC")]
	private sealed class <StartFirstMission>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MissionIntro <>4__this;

		[Token(Token = "0x4000DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timeLimit>5__2;

		[Token(Token = "0x170000BB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C33")]
			[Address(RVA = "0xE72714", Offset = "0xE72714", VA = "0xE72714", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C35")]
			[Address(RVA = "0xE7275C", Offset = "0xE7275C", VA = "0xE7275C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C30")]
		[Address(RVA = "0xE72180", Offset = "0xE72180", VA = "0xE72180")]
		[DebuggerHidden]
		public <StartFirstMission>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6000C31")]
		[Address(RVA = "0xE721AC", Offset = "0xE721AC", VA = "0xE721AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C32")]
		[Address(RVA = "0xE721B0", Offset = "0xE721B0", VA = "0xE721B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C34")]
		[Address(RVA = "0xE7271C", Offset = "0xE7271C", VA = "0xE7271C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000217")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x917EEC", Offset = "0x917EEC")]
	private sealed class <Rotate>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MissionIntro <>4__this;

		[Token(Token = "0x170000BD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C39")]
			[Address(RVA = "0xE72130", Offset = "0xE72130", VA = "0xE72130", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C3B")]
			[Address(RVA = "0xE72178", Offset = "0xE72178", VA = "0xE72178", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C36")]
		[Address(RVA = "0xE72004", Offset = "0xE72004", VA = "0xE72004")]
		[DebuggerHidden]
		public <Rotate>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6000C37")]
		[Address(RVA = "0xE72030", Offset = "0xE72030", VA = "0xE72030", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C38")]
		[Address(RVA = "0xE72034", Offset = "0xE72034", VA = "0xE72034", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C3A")]
		[Address(RVA = "0xE72138", Offset = "0xE72138", VA = "0xE72138", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000DEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string[] intro;

	[Token(Token = "0x4000DEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMesh text;

	[Token(Token = "0x4000DF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject rotateRoot;

	[Token(Token = "0x4000DF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float startDelay;

	[Token(Token = "0x4000DF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntroAnimation firstAnimation;

	[Token(Token = "0x4000DF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool startInEditor;

	[Token(Token = "0x4000DF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool skip;

	[Token(Token = "0x6000C29")]
	[Address(RVA = "0xF791F4", Offset = "0xF791F4", VA = "0xF791F4")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000C2A")]
	[Address(RVA = "0xF79404", Offset = "0xF79404", VA = "0xF79404")]
	public void Start()
	{
	}

	[Token(Token = "0x6000C2B")]
	[Address(RVA = "0xF79564", Offset = "0xF79564", VA = "0xF79564")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x927DCC", Offset = "0x927DCC")]
	public IEnumerator StartFirstMission()
	{
		return null;
	}

	[Token(Token = "0x6000C2C")]
	[Address(RVA = "0xF794F8", Offset = "0xF794F8", VA = "0xF794F8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x927E2C", Offset = "0x927E2C")]
	private IEnumerator Rotate()
	{
		return null;
	}

	[Token(Token = "0x6000C2D")]
	[Address(RVA = "0xF795D0", Offset = "0xF795D0", VA = "0xF795D0")]
	private void OnClickSkip()
	{
	}

	[Token(Token = "0x6000C2E")]
	[Address(RVA = "0xF795DC", Offset = "0xF795DC", VA = "0xF795DC")]
	public MissionIntro()
	{
	}
}
[Token(Token = "0x2000218")]
public class MissionIntro_pico_china : MonoBehaviour
{
	[Token(Token = "0x2000219")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x917EFC", Offset = "0x917EFC")]
	private sealed class <StartFirstMission>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MissionIntro_pico_china <>4__this;

		[Token(Token = "0x4000E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timeStart>5__2;

		[Token(Token = "0x4000E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <timeLimit>5__3;

		[Token(Token = "0x170000BF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C45")]
			[Address(RVA = "0xD7D9AC", Offset = "0xD7D9AC", VA = "0xD7D9AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C47")]
			[Address(RVA = "0xD7D9F4", Offset = "0xD7D9F4", VA = "0xD7D9F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C42")]
		[Address(RVA = "0xD7D2EC", Offset = "0xD7D2EC", VA = "0xD7D2EC")]
		[DebuggerHidden]
		public <StartFirstMission>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000C43")]
		[Address(RVA = "0xD7D318", Offset = "0xD7D318", VA = "0xD7D318", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C44")]
		[Address(RVA = "0xD7D31C", Offset = "0xD7D31C", VA = "0xD7D31C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C46")]
		[Address(RVA = "0xD7D9B4", Offset = "0xD7D9B4", VA = "0xD7D9B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000DFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string[] intro;

	[Token(Token = "0x4000DFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMesh[] tm;

	[Token(Token = "0x4000DFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool skip;

	[Token(Token = "0x6000C3C")]
	[Address(RVA = "0xF7979C", Offset = "0xF7979C", VA = "0xF7979C")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000C3D")]
	[Address(RVA = "0xF797E8", Offset = "0xF797E8", VA = "0xF797E8")]
	public void Start()
	{
	}

	[Token(Token = "0x6000C3E")]
	[Address(RVA = "0xF79994", Offset = "0xF79994", VA = "0xF79994")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x927F2C", Offset = "0x927F2C")]
	public IEnumerator StartFirstMission()
	{
		return null;
	}

	[Token(Token = "0x6000C3F")]
	[Address(RVA = "0xF79A00", Offset = "0xF79A00", VA = "0xF79A00")]
	private void OnClickSkip()
	{
	}

	[Token(Token = "0x6000C40")]
	[Address(RVA = "0xF79A0C", Offset = "0xF79A0C", VA = "0xF79A0C")]
	public MissionIntro_pico_china()
	{
	}
}
[Token(Token = "0x200021A")]
public class MissionLand : MonoBehaviour
{
	[Token(Token = "0x200021B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x917F0C", Offset = "0x917F0C")]
	private sealed class <StartYielded>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MissionLand <>4__this;

		[Token(Token = "0x170000C1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C56")]
			[Address(RVA = "0xD7E1C8", Offset = "0xD7E1C8", VA = "0xD7E1C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C58")]
			[Address(RVA = "0xD7E210", Offset = "0xD7E210", VA = "0xD7E210", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C53")]
		[Address(RVA = "0xD7DDEC", Offset = "0xD7DDEC", VA = "0xD7DDEC")]
		[DebuggerHidden]
		public <StartYielded>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000C54")]
		[Address(RVA = "0xD7DE18", Offset = "0xD7DE18", VA = "0xD7DE18", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C55")]
		[Address(RVA = "0xD7DE1C", Offset = "0xD7DE1C", VA = "0xD7DE1C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C57")]
		[Address(RVA = "0xD7E1D0", Offset = "0xD7E1D0", VA = "0xD7E1D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200021C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x917F1C", Offset = "0x917F1C")]
	private sealed class <Idle>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170000C3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C5C")]
			[Address(RVA = "0xD7DD9C", Offset = "0xD7DD9C", VA = "0xD7DD9C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C5E")]
			[Address(RVA = "0xD7DDE4", Offset = "0xD7DDE4", VA = "0xD7DDE4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C59")]
		[Address(RVA = "0xD7DB00", Offset = "0xD7DB00", VA = "0xD7DB00")]
		[DebuggerHidden]
		public <Idle>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000C5A")]
		[Address(RVA = "0xD7DB2C", Offset = "0xD7DB2C", VA = "0xD7DB2C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C5B")]
		[Address(RVA = "0xD7DB30", Offset = "0xD7DB30", VA = "0xD7DB30", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C5D")]
		[Address(RVA = "0xD7DDA4", Offset = "0xD7DDA4", VA = "0xD7DDA4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200021D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x917F2C", Offset = "0x917F2C")]
	private sealed class <>c
	{
		[Token(Token = "0x4000E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action <>9__9_0;

		[Token(Token = "0x6000C60")]
		[Address(RVA = "0xD7DA5C", Offset = "0xD7DA5C", VA = "0xD7DA5C")]
		public <>c()
		{
		}

		[Token(Token = "0x6000C61")]
		[Address(RVA = "0xD7DA64", Offset = "0xD7DA64", VA = "0xD7DA64")]
		internal void <BackToBase>b__9_0()
		{
		}
	}

	[Token(Token = "0x4000E04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool on;

	[Token(Token = "0x4000E05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static MissionLand instance;

	[Token(Token = "0x6000C48")]
	[Address(RVA = "0xF79BCC", Offset = "0xF79BCC", VA = "0xF79BCC")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000C49")]
	[Address(RVA = "0xF79D70", Offset = "0xF79D70", VA = "0xF79D70")]
	public void Start()
	{
	}

	[Token(Token = "0x6000C4A")]
	[Address(RVA = "0xF79DB0", Offset = "0xF79DB0", VA = "0xF79DB0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x927FDC", Offset = "0x927FDC")]
	public IEnumerator StartYielded()
	{
		return null;
	}

	[Token(Token = "0x6000C4B")]
	[Address(RVA = "0xF79E78", Offset = "0xF79E78", VA = "0xF79E78")]
	private void SpawnPlayerPlanes()
	{
	}

	[Token(Token = "0x6000C4C")]
	[Address(RVA = "0xF79F64", Offset = "0xF79F64", VA = "0xF79F64")]
	private void SpawnPlayerPlane(PlayerPlane pp)
	{
	}

	[Token(Token = "0x6000C4D")]
	[Address(RVA = "0xF7A400", Offset = "0xF7A400", VA = "0xF7A400")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x6000C4E")]
	[Address(RVA = "0xF79E1C", Offset = "0xF79E1C", VA = "0xF79E1C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92803C", Offset = "0x92803C")]
	private IEnumerator Idle()
	{
		return null;
	}

	[Token(Token = "0x6000C4F")]
	[Address(RVA = "0xF7A464", Offset = "0xF7A464", VA = "0xF7A464")]
	private static void BackToBase()
	{
	}

	[Token(Token = "0x6000C50")]
	[Address(RVA = "0xF7A67C", Offset = "0xF7A67C", VA = "0xF7A67C")]
	public void OnBackToBase()
	{
	}

	[Token(Token = "0x6000C51")]
	[Address(RVA = "0xF7A6D4", Offset = "0xF7A6D4", VA = "0xF7A6D4")]
	public MissionLand()
	{
	}
}
[Token(Token = "0x200021E")]
public class MissionMapTag : MonoBehaviour
{
	[Token(Token = "0x4000E0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public eMissionType type;

	[Token(Token = "0x4000E0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshRenderer iconRenderer;

	[Token(Token = "0x4000E0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MissionPosition mp;

	[Token(Token = "0x4000E10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material defaultIcon;

	[Token(Token = "0x4000E11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int campId;

	[Token(Token = "0x6000C62")]
	[Address(RVA = "0xF7A6E0", Offset = "0xF7A6E0", VA = "0xF7A6E0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C63")]
	[Address(RVA = "0xF7AA78", Offset = "0xF7AA78", VA = "0xF7AA78")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000C64")]
	[Address(RVA = "0xF7A8A0", Offset = "0xF7A8A0", VA = "0xF7A8A0")]
	private void UpdateTag()
	{
	}

	[Token(Token = "0x6000C65")]
	[Address(RVA = "0xF7AB68", Offset = "0xF7AB68", VA = "0xF7AB68")]
	public eMissionType MissionType()
	{
		return default(eMissionType);
	}

	[Token(Token = "0x6000C66")]
	[Address(RVA = "0xF7AB70", Offset = "0xF7AB70", VA = "0xF7AB70")]
	private void TerritoryChanged(TerritoryMap.Region region)
	{
	}

	[Token(Token = "0x6000C67")]
	[Address(RVA = "0xF7AC70", Offset = "0xF7AC70", VA = "0xF7AC70")]
	public void Click()
	{
	}

	[Token(Token = "0x6000C68")]
	[Address(RVA = "0xF7AE58", Offset = "0xF7AE58", VA = "0xF7AE58")]
	public MissionMapTag()
	{
	}
}
[Token(Token = "0x200021F")]
public class MissionMapTagTutorial : MonoBehaviour
{
	[Token(Token = "0x4000E12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshRenderer iconRenderer;

	[Token(Token = "0x4000E13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MissionPositionTutorial mp;

	[Token(Token = "0x6000C69")]
	[Address(RVA = "0xF7AE60", Offset = "0xF7AE60", VA = "0xF7AE60")]
	public void UpdateTag(MissionPositionTutorial missionPosition)
	{
	}

	[Token(Token = "0x6000C6A")]
	[Address(RVA = "0xF7AF28", Offset = "0xF7AF28", VA = "0xF7AF28")]
	public void Click()
	{
	}

	[Token(Token = "0x6000C6B")]
	[Address(RVA = "0xF7AFF0", Offset = "0xF7AFF0", VA = "0xF7AFF0")]
	public MissionMapTagTutorial()
	{
	}
}
[Token(Token = "0x2000220")]
public class MissionMapTagTutorialManager : MonoBehaviour
{
	[Token(Token = "0x4000E14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private MissionMapTagTutorial prefab;

	[Token(Token = "0x4000E15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MissionMapTagTutorial[] tags;

	[Token(Token = "0x6000C6C")]
	[Address(RVA = "0xF7AFF8", Offset = "0xF7AFF8", VA = "0xF7AFF8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C6D")]
	[Address(RVA = "0xF7B10C", Offset = "0xF7B10C", VA = "0xF7B10C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000C6E")]
	[Address(RVA = "0xF7B1FC", Offset = "0xF7B1FC", VA = "0xF7B1FC")]
	private void TerritoryChanged(TerritoryMap.Region region)
	{
	}

	[Token(Token = "0x6000C6F")]
	[Address(RVA = "0xF7B4B0", Offset = "0xF7B4B0", VA = "0xF7B4B0")]
	public MissionMapTagTutorialManager()
	{
	}
}
[Token(Token = "0x2000221")]
public class MissionPosition : MonoBehaviour
{
	[Token(Token = "0x4000E16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<MissionPosition> listCache;

	[Token(Token = "0x4000E17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Country country;

	[Token(Token = "0x4000E18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected Transform campaignParent;

	[Token(Token = "0x4000E19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public eMissionType type;

	[Token(Token = "0x4000E1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public MissionTemplate missionTemplate;

	[Token(Token = "0x4000E1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected eqType firstTaskType;

	[Token(Token = "0x4000E1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	protected bool protectMission;

	[Token(Token = "0x4000E1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static List<MissionPosition> list;

	[Token(Token = "0x4000E1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static List<MissionPosition> legacyList;

	[Token(Token = "0x6000C70")]
	[Address(RVA = "0xF755A4", Offset = "0xF755A4", VA = "0xF755A4")]
	public static MissionPosition Get(eMissionType type, int campId)
	{
		return null;
	}

	[Token(Token = "0x6000C71")]
	[Address(RVA = "0xF7B4B8", Offset = "0xF7B4B8", VA = "0xF7B4B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C72")]
	[Address(RVA = "0xF7B4BC", Offset = "0xF7B4BC", VA = "0xF7B4BC")]
	private void Register()
	{
	}

	[Token(Token = "0x6000C73")]
	[Address(RVA = "0xF7B67C", Offset = "0xF7B67C", VA = "0xF7B67C")]
	public static List<MissionPosition> GetList()
	{
		return null;
	}

	[Token(Token = "0x6000C74")]
	[Address(RVA = "0xF7B6C8", Offset = "0xF7B6C8", VA = "0xF7B6C8")]
	public Vector3 GetMapPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000C75")]
	[Address(RVA = "0xF75550", Offset = "0xF75550", VA = "0xF75550")]
	public Quaternion GetRotation()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000C76")]
	[Address(RVA = "0xF75504", Offset = "0xF75504", VA = "0xF75504")]
	public Vector3 GetTerrainOffset()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000C77")]
	[Address(RVA = "0xF7B788", Offset = "0xF7B788", VA = "0xF7B788")]
	public bool IsProtectMission()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C78")]
	[Address(RVA = "0xF7B790", Offset = "0xF7B790", VA = "0xF7B790")]
	public eqType GetPrimaryTask()
	{
		return default(eqType);
	}

	[Token(Token = "0x6000C79")]
	[Address(RVA = "0xF7B798", Offset = "0xF7B798", VA = "0xF7B798")]
	public MissionTemplate GetMissionTemplate()
	{
		return null;
	}

	[Token(Token = "0x6000C7A")]
	[Address(RVA = "0xF6ED2C", Offset = "0xF6ED2C", VA = "0xF6ED2C")]
	public static void InitializeCampaign(CampaignTemplate campaign)
	{
	}

	[Token(Token = "0x6000C7B")]
	[Address(RVA = "0xF7B7A0", Offset = "0xF7B7A0", VA = "0xF7B7A0", Slot = "4")]
	protected virtual void CampaignLoaded()
	{
	}

	[Token(Token = "0x6000C7C")]
	[Address(RVA = "0xF7B7A4", Offset = "0xF7B7A4", VA = "0xF7B7A4")]
	public MissionPosition()
	{
	}
}
[Token(Token = "0x2000222")]
public class MissionPositionTutorial : MissionPosition
{
	[Token(Token = "0x4000E1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Tutorial.MissionType tutorialType;

	[Token(Token = "0x6000C7D")]
	[Address(RVA = "0xF7B7AC", Offset = "0xF7B7AC", VA = "0xF7B7AC", Slot = "4")]
	protected override void CampaignLoaded()
	{
	}

	[Token(Token = "0x6000C7E")]
	[Address(RVA = "0xF7B864", Offset = "0xF7B864", VA = "0xF7B864")]
	public MissionPositionTutorial()
	{
	}
}
[Token(Token = "0x2000223")]
public class MissionResults : MonoBehaviour
{
	[Token(Token = "0x2000224")]
	public class MultiScore
	{
		[Token(Token = "0x4000E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int playerId;

		[Token(Token = "0x4000E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int ActorNumber;

		[Token(Token = "0x4000E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public NetFriends.Platform platformType;

		[Token(Token = "0x4000E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ulong platformUserId;

		[Token(Token = "0x4000E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool localPlayer;

		[Token(Token = "0x4000E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool bot;

		[Token(Token = "0x4000E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool gunner;

		[Token(Token = "0x4000E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int gunnerAtPlayerId;

		[Token(Token = "0x4000E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string nickname;

		[Token(Token = "0x4000E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public MultiplayerConfig.Team team;

		[Token(Token = "0x4000E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int kills;

		[Token(Token = "0x4000E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int deaths;

		[Token(Token = "0x4000E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool isGoldScore;

		[Token(Token = "0x4000E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int goldStarting;

		[Token(Token = "0x4000E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int goldForHit;

		[Token(Token = "0x4000E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int goldForKills;

		[Token(Token = "0x4000E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int goldForVictory;

		[Token(Token = "0x4000E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int expStarting;

		[Token(Token = "0x4000E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int expForHit;

		[Token(Token = "0x4000E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int expForKills;

		[Token(Token = "0x4000E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public int expForVictory;

		[Token(Token = "0x4000E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int expSpecialTask;

		[Token(Token = "0x6000C92")]
		[Address(RVA = "0xD7E340", Offset = "0xD7E340", VA = "0xD7E340")]
		public MultiScore()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000225")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x917F3C", Offset = "0x917F3C")]
	private sealed class <>c
	{
		[Token(Token = "0x4000E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action <>9__37_0;

		[Token(Token = "0x6000C94")]
		[Address(RVA = "0xD7E278", Offset = "0xD7E278", VA = "0xD7E278")]
		public <>c()
		{
		}

		[Token(Token = "0x6000C95")]
		[Address(RVA = "0xD7E280", Offset = "0xD7E280", VA = "0xD7E280")]
		internal void <ShowMultiScore>b__37_0()
		{
		}
	}

	[Token(Token = "0x4000E20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool openSettingsAfterLoad;

	[Token(Token = "0x4000E21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMesh text;

	[Token(Token = "0x4000E22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMesh textFailed;

	[Token(Token = "0x4000E23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject textTryAgain;

	[Token(Token = "0x4000E24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject nextWindow;

	[Token(Token = "0x4000E25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int primaryReward;

	[Token(Token = "0x4000E26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int secondaryReward;

	[Token(Token = "0x4000E27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static int primaryTargets;

	[Token(Token = "0x4000E28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static int secondaryTargets;

	[Token(Token = "0x4000E29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static int secondaryTargetsLeft;

	[Token(Token = "0x4000E2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static bool finished;

	[Token(Token = "0x4000E2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private static bool failed;

	[Token(Token = "0x4000E2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	private static bool failedResult;

	[Token(Token = "0x4000E2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	private static bool multi_finalScore;

	[Token(Token = "0x4000E2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private static bool multi_victory;

	[Token(Token = "0x4000E2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static string multi_title;

	[Token(Token = "0x4000E30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static MultiplayerSessionConfig.PlayMode multi_mode;

	[Token(Token = "0x4000E31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private static bool multi_disconnected;

	[Token(Token = "0x4000E32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	private static bool multi_increasedExpLevel;

	[Token(Token = "0x4000E33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static List<MultiScore> multi_scores;

	[Token(Token = "0x6000C7F")]
	[Address(RVA = "0xF7B86C", Offset = "0xF7B86C", VA = "0xF7B86C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C80")]
	[Address(RVA = "0xF7C34C", Offset = "0xF7C34C", VA = "0xF7C34C")]
	private void PrintFailed()
	{
	}

	[Token(Token = "0x6000C81")]
	[Address(RVA = "0xF7C210", Offset = "0xF7C210", VA = "0xF7C210")]
	public static void Reset(bool inMission = false)
	{
	}

	[Token(Token = "0x6000C82")]
	[Address(RVA = "0xF7C558", Offset = "0xF7C558", VA = "0xF7C558")]
	public static void SetPrimaryTargetsCount(int i)
	{
	}

	[Token(Token = "0x6000C83")]
	[Address(RVA = "0xF7C704", Offset = "0xF7C704", VA = "0xF7C704")]
	public static void SetSecondaryTargetsCount(int i)
	{
	}

	[Token(Token = "0x6000C84")]
	[Address(RVA = "0xF7C89C", Offset = "0xF7C89C", VA = "0xF7C89C")]
	public static void SetLeftSecondaryTargetsCount(int i)
	{
	}

	[Token(Token = "0x6000C85")]
	[Address(RVA = "0xF7C904", Offset = "0xF7C904", VA = "0xF7C904")]
	public static void EndMission()
	{
	}

	[Token(Token = "0x6000C86")]
	[Address(RVA = "0xF7C96C", Offset = "0xF7C96C", VA = "0xF7C96C")]
	public static void FailMission(bool planeCrashed)
	{
	}

	[Token(Token = "0x6000C87")]
	[Address(RVA = "0xF7CA7C", Offset = "0xF7CA7C", VA = "0xF7CA7C")]
	public static void InitMulti()
	{
	}

	[Token(Token = "0x6000C88")]
	[Address(RVA = "0xF7CE10", Offset = "0xF7CE10", VA = "0xF7CE10")]
	private static int FindMultiScore(int playerId)
	{
		return default(int);
	}

	[Token(Token = "0x6000C89")]
	[Address(RVA = "0xF7CF14", Offset = "0xF7CF14", VA = "0xF7CF14")]
	public static void SetMultiScoreSetup(bool finalScore, bool victory, string title, MultiplayerSessionConfig.PlayMode mode, bool disconnected, bool increasedExpLevel)
	{
	}

	[Token(Token = "0x6000C8A")]
	[Address(RVA = "0xF7CFE0", Offset = "0xF7CFE0", VA = "0xF7CFE0")]
	public static void AddMultiScore(int playerId, int kills, int deaths)
	{
	}

	[Token(Token = "0x6000C8B")]
	[Address(RVA = "0xF7D110", Offset = "0xF7D110", VA = "0xF7D110")]
	public static void AddMultiScore(int playerId, int goldStarting, int goldForHit, int goldForKills, int goldForVictory, int expStarting, int expForHit, int expForKills, int expForVictory, int expSpecialTask)
	{
	}

	[Token(Token = "0x6000C8C")]
	[Address(RVA = "0xF7D478", Offset = "0xF7D478", VA = "0xF7D478")]
	public static void GetLocalPlayerMultiScore(out bool finalScore, out bool victory, out string title, out bool increasedExpLevel, out MultiplayerSessionConfig.PlayMode mode, out int kills, out int deaths, out int goldStarting, out int goldForHit, out int goldForKills, out int goldForVictory, out int expStarting, out int expForHit, out int expForKills, out int expForVictory, out int expSpecialTask)
	{
	}

	[Token(Token = "0x6000C8D")]
	[Address(RVA = "0xF7D96C", Offset = "0xF7D96C", VA = "0xF7D96C")]
	public static List<MultiScore> GetMultiScores()
	{
		return null;
	}

	[Token(Token = "0x6000C8E")]
	[Address(RVA = "0xF7D9D0", Offset = "0xF7D9D0", VA = "0xF7D9D0")]
	public static bool HaveMultiScore()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C8F")]
	[Address(RVA = "0xF7DA48", Offset = "0xF7DA48", VA = "0xF7DA48")]
	public static bool ShowMultiScore()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C90")]
	[Address(RVA = "0xF7DEEC", Offset = "0xF7DEEC", VA = "0xF7DEEC")]
	public MissionResults()
	{
	}
}
[Token(Token = "0x2000226")]
public class MissionTakeOff : MonoBehaviour
{
	[Token(Token = "0x2000227")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x917F4C", Offset = "0x917F4C")]
	private sealed class <StartYielded>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MissionTakeOff <>4__this;

		[Token(Token = "0x170000C5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CA6")]
			[Address(RVA = "0xD7EA90", Offset = "0xD7EA90", VA = "0xD7EA90", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CA8")]
			[Address(RVA = "0xD7EAD8", Offset = "0xD7EAD8", VA = "0xD7EAD8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CA3")]
		[Address(RVA = "0xD7E6D0", Offset = "0xD7E6D0", VA = "0xD7E6D0")]
		[DebuggerHidden]
		public <StartYielded>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000CA4")]
		[Address(RVA = "0xD7E6FC", Offset = "0xD7E6FC", VA = "0xD7E6FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CA5")]
		[Address(RVA = "0xD7E700", Offset = "0xD7E700", VA = "0xD7E700", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CA7")]
		[Address(RVA = "0xD7EA98", Offset = "0xD7EA98", VA = "0xD7EA98", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000228")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x917F5C", Offset = "0x917F5C")]
	private sealed class <Idle>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170000C7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CAC")]
			[Address(RVA = "0xD7E680", Offset = "0xD7E680", VA = "0xD7E680", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CAE")]
			[Address(RVA = "0xD7E6C8", Offset = "0xD7E6C8", VA = "0xD7E6C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CA9")]
		[Address(RVA = "0xD7E44C", Offset = "0xD7E44C", VA = "0xD7E44C")]
		[DebuggerHidden]
		public <Idle>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000CAA")]
		[Address(RVA = "0xD7E478", Offset = "0xD7E478", VA = "0xD7E478", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CAB")]
		[Address(RVA = "0xD7E47C", Offset = "0xD7E47C", VA = "0xD7E47C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CAD")]
		[Address(RVA = "0xD7E688", Offset = "0xD7E688", VA = "0xD7E688", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000229")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x917F6C", Offset = "0x917F6C")]
	private sealed class <>c
	{
		[Token(Token = "0x4000E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action <>9__11_0;

		[Token(Token = "0x6000CB0")]
		[Address(RVA = "0xD7E3A8", Offset = "0xD7E3A8", VA = "0xD7E3A8")]
		public <>c()
		{
		}

		[Token(Token = "0x6000CB1")]
		[Address(RVA = "0xD7E3B0", Offset = "0xD7E3B0", VA = "0xD7E3B0")]
		internal void <BackToBase>b__11_0()
		{
		}
	}

	[Token(Token = "0x4000E4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool on;

	[Token(Token = "0x4000E4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static MissionTakeOff instance;

	[Token(Token = "0x4000E4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool gameOver;

	[Token(Token = "0x6000C96")]
	[Address(RVA = "0xF7E000", Offset = "0xF7E000", VA = "0xF7E000")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000C97")]
	[Address(RVA = "0xF7E1E0", Offset = "0xF7E1E0", VA = "0xF7E1E0")]
	public void Start()
	{
	}

	[Token(Token = "0x6000C98")]
	[Address(RVA = "0xF7E20C", Offset = "0xF7E20C", VA = "0xF7E20C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92813C", Offset = "0x92813C")]
	public IEnumerator StartYielded()
	{
		return null;
	}

	[Token(Token = "0x6000C99")]
	[Address(RVA = "0xF7E278", Offset = "0xF7E278", VA = "0xF7E278")]
	private void SpawnPlayerPlanes()
	{
	}

	[Token(Token = "0x6000C9A")]
	[Address(RVA = "0xF7E354", Offset = "0xF7E354", VA = "0xF7E354")]
	private PlaneBody SpawnPlayerPlane(PlayerPlane pp)
	{
		return null;
	}

	[Token(Token = "0x6000C9B")]
	[Address(RVA = "0xF7E7C8", Offset = "0xF7E7C8", VA = "0xF7E7C8")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x6000C9C")]
	[Address(RVA = "0xF7E82C", Offset = "0xF7E82C", VA = "0xF7E82C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92819C", Offset = "0x92819C")]
	public IEnumerator Idle()
	{
		return null;
	}

	[Token(Token = "0x6000C9D")]
	[Address(RVA = "0xF7E888", Offset = "0xF7E888", VA = "0xF7E888")]
	public static void PrepareGameOver()
	{
	}

	[Token(Token = "0x6000C9E")]
	[Address(RVA = "0xF7E8F0", Offset = "0xF7E8F0", VA = "0xF7E8F0")]
	private static void BackToBase()
	{
	}

	[Token(Token = "0x6000C9F")]
	[Address(RVA = "0xF7EB20", Offset = "0xF7EB20", VA = "0xF7EB20")]
	public static void FlyToMission()
	{
	}

	[Token(Token = "0x6000CA0")]
	[Address(RVA = "0xF7EC18", Offset = "0xF7EC18", VA = "0xF7EC18")]
	public void OnBackToBase()
	{
	}

	[Token(Token = "0x6000CA1")]
	[Address(RVA = "0xF7EC70", Offset = "0xF7EC70", VA = "0xF7EC70")]
	public MissionTakeOff()
	{
	}
}
[Token(Token = "0x200022A")]
public class MissionTemplate : MonoBehaviour
{
	[Token(Token = "0x4000E56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string briefing;

	[Token(Token = "0x4000E57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool bombs;

	[Token(Token = "0x4000E58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool friendTerritoryOnly;

	[Token(Token = "0x4000E59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool alwaysAvailable;

	[Token(Token = "0x4000E5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public eMissionType missionType;

	[Token(Token = "0x4000E5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MissionPosition missionPosition;

	[Token(Token = "0x4000E5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TaskTemplate[] tasks;

	[Token(Token = "0x6000CB2")]
	[Address(RVA = "0xF7673C", Offset = "0xF7673C", VA = "0xF7673C")]
	public int GetTasksNum()
	{
		return default(int);
	}

	[Token(Token = "0x6000CB3")]
	[Address(RVA = "0xF730A8", Offset = "0xF730A8", VA = "0xF730A8")]
	public TaskTemplate GetTaskTemplate(int i)
	{
		return null;
	}

	[Token(Token = "0x6000CB4")]
	[Address(RVA = "0xF7EC7C", Offset = "0xF7EC7C", VA = "0xF7EC7C")]
	public MissionTemplate()
	{
	}
}
[Token(Token = "0x200022B")]
public static class MissionUnits
{
	[Token(Token = "0x200022C")]
	public delegate void HandleRequest();

	[Token(Token = "0x200022D")]
	public class UnitRequest
	{
		[Token(Token = "0x4000E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject gameObject;

		[Token(Token = "0x4000E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool destroy;

		[Token(Token = "0x4000E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool ack;

		[Token(Token = "0x6000CC9")]
		[Address(RVA = "0xD7ED34", Offset = "0xD7ED34", VA = "0xD7ED34")]
		public UnitRequest(GameObject gameObject, bool destroy)
		{
		}
	}

	[Token(Token = "0x4000E5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Dictionary<eqType, int2> cacheUnitCount;

	[Token(Token = "0x4000E5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly Dictionary<eqType, List<UnitRequest>> unitsRequestingCreate;

	[Token(Token = "0x4000E5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static HandleRequest requestsReady;

	[Token(Token = "0x4000E60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static eqType[][] unitFallbackGroup;

	[Token(Token = "0x6000CB5")]
	[Address(RVA = "0xF78224", Offset = "0xF78224", VA = "0xF78224")]
	public static void Clear()
	{
	}

	[Token(Token = "0x6000CB6")]
	[Address(RVA = "0xF7ECD0", Offset = "0xF7ECD0", VA = "0xF7ECD0")]
	public static void Prepare()
	{
	}

	[Token(Token = "0x6000CB7")]
	[Address(RVA = "0xF78408", Offset = "0xF78408", VA = "0xF78408")]
	public static void Add(eqType type, int count)
	{
	}

	[Token(Token = "0x6000CB8")]
	[Address(RVA = "0xF7ED5C", Offset = "0xF7ED5C", VA = "0xF7ED5C")]
	public static UnitRequest RequestUnitCreate(UnitRequest request, eqType type, HandleRequest listener)
	{
		return null;
	}

	[Token(Token = "0x6000CB9")]
	[Address(RVA = "0xF7EF58", Offset = "0xF7EF58", VA = "0xF7EF58")]
	public static void ProcessCreateRequests()
	{
	}

	[Token(Token = "0x6000CBA")]
	[Address(RVA = "0xF7F5B8", Offset = "0xF7F5B8", VA = "0xF7F5B8")]
	public static void CacheTotalUnits()
	{
	}

	[Token(Token = "0x6000CBB")]
	[Address(RVA = "0xF7F4BC", Offset = "0xF7F4BC", VA = "0xF7F4BC")]
	public static bool GetTotalCachedUnits(eqType unit, out int count, bool fallback = true)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CBC")]
	[Address(RVA = "0xF7F8FC", Offset = "0xF7F8FC", VA = "0xF7F8FC")]
	private static bool FallbackGetTotalCachedUnits(eqType unit, out int count)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CBD")]
	[Address(RVA = "0xF7FB1C", Offset = "0xF7FB1C", VA = "0xF7FB1C")]
	public static bool GetCachedUnitsLeft(eqType unit, out int count, bool fallback = true)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CBE")]
	[Address(RVA = "0xF7FC18", Offset = "0xF7FC18", VA = "0xF7FC18")]
	private static bool FallbackGetCachedUnitsLeft(eqType unit, out int count)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CBF")]
	[Address(RVA = "0xF7FD24", Offset = "0xF7FD24", VA = "0xF7FD24")]
	public static bool DecreaseCachedUnitCount(eqType unit, bool fallback = true)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CC0")]
	[Address(RVA = "0xF7FE5C", Offset = "0xF7FE5C", VA = "0xF7FE5C")]
	private static bool FallbackDecreaseCachedUnitCount(eqType unit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CC1")]
	[Address(RVA = "0xF7FF54", Offset = "0xF7FF54", VA = "0xF7FF54")]
	public static bool TryCreateUnit(eqType unit, bool fallback = true)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CC2")]
	[Address(RVA = "0xF80098", Offset = "0xF80098", VA = "0xF80098")]
	private static bool FallbackTryCreateUnity(eqType unit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CC3")]
	[Address(RVA = "0xF7FA08", Offset = "0xF7FA08", VA = "0xF7FA08")]
	private static eqType[] GetUnitFallbackGroup(eqType unit)
	{
		return null;
	}
}
[Token(Token = "0x200022E")]
public class MoveHeereIfNation : MonoBehaviour
{
	[Token(Token = "0x4000E64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public eNation nation;

	[Token(Token = "0x4000E65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform objToMove;

	[Token(Token = "0x6000CCA")]
	[Address(RVA = "0xF83A40", Offset = "0xF83A40", VA = "0xF83A40")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CCB")]
	[Address(RVA = "0xF83B7C", Offset = "0xF83B7C", VA = "0xF83B7C")]
	public MoveHeereIfNation()
	{
	}
}
[Token(Token = "0x200022F")]
public class MoveSKI : MonoBehaviour
{
	[Token(Token = "0x4000E66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform cameraRig;

	[Token(Token = "0x4000E67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform centerEyeAnchor;

	[Token(Token = "0x4000E68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform leftEyeAnchor;

	[Token(Token = "0x4000E69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform rightController;

	[Token(Token = "0x4000E6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform leftController;

	[Token(Token = "0x4000E6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform ski;

	[Token(Token = "0x4000E6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float skiierHeight;

	[Token(Token = "0x4000E6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float speed;

	[Token(Token = "0x4000E6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float rotateSpeedEdge;

	[Token(Token = "0x4000E6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float rotateSpeedTurn;

	[Token(Token = "0x4000E70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float acceleration;

	[Token(Token = "0x4000E71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float airDrag;

	[Token(Token = "0x4000E72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float skiSnowDrag;

	[Token(Token = "0x4000E73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float sideDrag;

	[Token(Token = "0x4000E74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float skiTurnRadius;

	[Token(Token = "0x4000E75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float skiLength;

	[Token(Token = "0x4000E76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float edging;

	[Token(Token = "0x4000E77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float currentSpeed_kmh;

	[Token(Token = "0x4000E78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool turnExecuted;

	[Token(Token = "0x4000E79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public Vector3 slopeNormal;

	[Token(Token = "0x4000E7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 speedV;

	[Token(Token = "0x4000E7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float rotationSpeed;

	[Token(Token = "0x4000E7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Vector2 turnInput;

	[Token(Token = "0x4000E7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool inAir;

	[Token(Token = "0x6000CCC")]
	[Address(RVA = "0xF84120", Offset = "0xF84120", VA = "0xF84120")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CCD")]
	[Address(RVA = "0xF8418C", Offset = "0xF8418C", VA = "0xF8418C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CCE")]
	[Address(RVA = "0xF84208", Offset = "0xF84208", VA = "0xF84208")]
	private float GetHandsTurnAngle()
	{
		return default(float);
	}

	[Token(Token = "0x6000CCF")]
	[Address(RVA = "0xF841D0", Offset = "0xF841D0", VA = "0xF841D0")]
	private float GetHeadSideOffset()
	{
		return default(float);
	}

	[Token(Token = "0x6000CD0")]
	[Address(RVA = "0xF846E4", Offset = "0xF846E4", VA = "0xF846E4")]
	private float GetCrunch()
	{
		return default(float);
	}

	[Token(Token = "0x6000CD1")]
	[Address(RVA = "0xF842D8", Offset = "0xF842D8", VA = "0xF842D8")]
	private void SimulateMove(float edge, float turn)
	{
	}

	[Token(Token = "0x6000CD2")]
	[Address(RVA = "0xF84A30", Offset = "0xF84A30", VA = "0xF84A30")]
	private void Turn(float y)
	{
	}

	[Token(Token = "0x6000CD3")]
	[Address(RVA = "0xF84884", Offset = "0xF84884", VA = "0xF84884")]
	public float GetH()
	{
		return default(float);
	}

	[Token(Token = "0x6000CD4")]
	[Address(RVA = "0xF84ACC", Offset = "0xF84ACC", VA = "0xF84ACC")]
	public MoveSKI()
	{
	}
}
[Token(Token = "0x2000230")]
public class MoveSky : MonoBehaviour
{
	[Token(Token = "0x6000CD5")]
	[Address(RVA = "0xF84B30", Offset = "0xF84B30", VA = "0xF84B30")]
	public void LateUpdate()
	{
	}

	[Token(Token = "0x6000CD6")]
	[Address(RVA = "0xF84DD0", Offset = "0xF84DD0", VA = "0xF84DD0")]
	public MoveSky()
	{
	}
}
[Token(Token = "0x2000231")]
public class MoveToPivotInMultiplayer : MonoBehaviour
{
	[Token(Token = "0x2000232")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x917F7C", Offset = "0x917F7C")]
	private sealed class <StartYielded>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoveToPivotInMultiplayer <>4__this;

		[Token(Token = "0x170000C9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CDD")]
			[Address(RVA = "0xD7EF6C", Offset = "0xD7EF6C", VA = "0xD7EF6C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CDF")]
			[Address(RVA = "0xD7EFB4", Offset = "0xD7EFB4", VA = "0xD7EFB4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CDA")]
		[Address(RVA = "0xD7ED78", Offset = "0xD7ED78", VA = "0xD7ED78")]
		[DebuggerHidden]
		public <StartYielded>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000CDB")]
		[Address(RVA = "0xD7EDA4", Offset = "0xD7EDA4", VA = "0xD7EDA4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CDC")]
		[Address(RVA = "0xD7EDA8", Offset = "0xD7EDA8", VA = "0xD7EDA8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CDE")]
		[Address(RVA = "0xD7EF74", Offset = "0xD7EF74", VA = "0xD7EF74", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject moveObject;

	[Token(Token = "0x4000E7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float delay;

	[Token(Token = "0x4000E80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject toPivot;

	[Token(Token = "0x6000CD7")]
	[Address(RVA = "0xF84DD8", Offset = "0xF84DD8", VA = "0xF84DD8")]
	public void Start()
	{
	}

	[Token(Token = "0x6000CD8")]
	[Address(RVA = "0xF84EDC", Offset = "0xF84EDC", VA = "0xF84EDC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92829C", Offset = "0x92829C")]
	private IEnumerator StartYielded()
	{
		return null;
	}

	[Token(Token = "0x6000CD9")]
	[Address(RVA = "0xF84F48", Offset = "0xF84F48", VA = "0xF84F48")]
	public MoveToPivotInMultiplayer()
	{
	}
}
[Token(Token = "0x2000233")]
public class MultiplayerCompressUtils
{
	[Token(Token = "0x4000E84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LiteFloatCrusher compressXZ;

	[Token(Token = "0x4000E85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static LiteFloatCrusher compressY;

	[Token(Token = "0x4000E86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static LiteFloatCrusher compressPosDelta;

	[Token(Token = "0x4000E87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static LiteFloatCrusher compressPosDelta2;

	[Token(Token = "0x4000E88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static LiteFloatCrusher compressSpeed;

	[Token(Token = "0x4000E89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static LiteFloatCrusher compressAngle;

	[Token(Token = "0x4000E8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static LiteFloatCrusher compressDir;

	[Token(Token = "0x6000CE0")]
	[Address(RVA = "0xF860F4", Offset = "0xF860F4", VA = "0xF860F4")]
	public static void WriteValue(byte val, byte[] buf, ref int bitposition)
	{
	}

	[Token(Token = "0x6000CE1")]
	[Address(RVA = "0xF8610C", Offset = "0xF8610C", VA = "0xF8610C")]
	public static void ReadValue(byte[] buf, ref int bitposition, out byte val)
	{
	}

	[Token(Token = "0x6000CE2")]
	[Address(RVA = "0xF86138", Offset = "0xF86138", VA = "0xF86138")]
	public static void WriteValue(sbyte val, byte[] buf, ref int bitposition)
	{
	}

	[Token(Token = "0x6000CE3")]
	[Address(RVA = "0xF86150", Offset = "0xF86150", VA = "0xF86150")]
	public static void ReadValue(byte[] buf, ref int bitposition, out sbyte val)
	{
	}

	[Token(Token = "0x6000CE4")]
	[Address(RVA = "0xF8617C", Offset = "0xF8617C", VA = "0xF8617C")]
	public static void WriteValue(ushort val, byte[] buf, ref int bitposition)
	{
	}

	[Token(Token = "0x6000CE5")]
	[Address(RVA = "0xF86194", Offset = "0xF86194", VA = "0xF86194")]
	public static void ReadValue(byte[] buf, ref int bitposition, out ushort val)
	{
	}

	[Token(Token = "0x6000CE6")]
	[Address(RVA = "0xF861C0", Offset = "0xF861C0", VA = "0xF861C0")]
	public static void WriteValue(short val, byte[] buf, ref int bitposition)
	{
	}

	[Token(Token = "0x6000CE7")]
	[Address(RVA = "0xF861D8", Offset = "0xF861D8", VA = "0xF861D8")]
	public static void ReadValue(byte[] buf, ref int bitposition, out short val)
	{
	}

	[Token(Token = "0x6000CE8")]
	[Address(RVA = "0xF86204", Offset = "0xF86204", VA = "0xF86204")]
	public static void WriteValue(int val, byte[] buf, ref int bitposition)
	{
	}

	[Token(Token = "0x6000CE9")]
	[Address(RVA = "0xF8621C", Offset = "0xF8621C", VA = "0xF8621C")]
	public static void ReadValue(byte[] buf, ref int bitposition, out int val)
	{
	}

	[Token(Token = "0x6000CEA")]
	[Address(RVA = "0xF86248", Offset = "0xF86248", VA = "0xF86248")]
	public static void WriteValue(uint val, byte[] buf, ref int bitposition)
	{
	}

	[Token(Token = "0x6000CEB")]
	[Address(RVA = "0xF86260", Offset = "0xF86260", VA = "0xF86260")]
	public static void ReadValue(byte[] buf, ref int bitposition, out uint val)
	{
	}

	[Token(Token = "0x6000CEC")]
	[Address(RVA = "0xF8628C", Offset = "0xF8628C", VA = "0xF8628C")]
	public static void WriteValue(MultiplayerSync.UID val, byte[] buf, ref int bitposition)
	{
	}

	[Token(Token = "0x6000CED")]
	[Address(RVA = "0xF862A4", Offset = "0xF862A4", VA = "0xF862A4")]
	public static void ReadValue(byte[] buf, ref int bitposition, out MultiplayerSync.UID val)
	{
	}

	[Token(Token = "0x6000CEE")]
	[Address(RVA = "0xF862D8", Offset = "0xF862D8", VA = "0xF862D8")]
	public static int GetWritePosSize()
	{
		return default(int);
	}

	[Token(Token = "0x6000CEF")]
	[Address(RVA = "0xF862E0", Offset = "0xF862E0", VA = "0xF862E0")]
	public static void WritePos(Vector3 pos, ref byte[] buf)
	{
	}

	[Token(Token = "0x6000CF0")]
	[Address(RVA = "0xF863C8", Offset = "0xF863C8", VA = "0xF863C8")]
	public static void WritePos(Vector3 pos, byte[] buf, ref int bitposition)
	{
	}

	[Token(Token = "0x6000CF1")]
	[Address(RVA = "0xF864C4", Offset = "0xF864C4", VA = "0xF864C4")]
	public static void ReadPos(byte[] buf, out Vector3 pos)
	{
	}

	[Token(Token = "0x6000CF2")]
	[Address(RVA = "0xF86540", Offset = "0xF86540", VA = "0xF86540")]
	public static void ReadPos(byte[] buf, ref int bitposition, out Vector3 pos)
	{
	}

	[Token(Token = "0x6000CF3")]
	[Address(RVA = "0xF86628", Offset = "0xF86628", VA = "0xF86628")]
	public static int GetWritePosDeltaSize()
	{
		return default(int);
	}

	[Token(Token = "0x6000CF4")]
	[Address(RVA = "0xF86630", Offset = "0xF86630", VA = "0xF86630")]
	public static void WritePosDelta(Vector3 pos, ref byte[] buf)
	{
	}

	[Token(Token = "0x6000CF5")]
	[Address(RVA = "0xF86718", Offset = "0xF86718", VA = "0xF86718")]
	public static void WritePosDelta(Vector3 pos, byte[] buf, ref int bitposition)
	{
	}

	[Token(Token = "0x6000CF6")]
	[Address(RVA = "0xF86814", Offset = "0xF86814", VA = "0xF86814")]
	public static void ReadPosDelta(byte[] buf, out Vector3 pos)
	{
	}

	[Token(Token = "0x6000CF7")]
	[Address(RVA = "0xF86890", Offset = "0xF86890", VA = "0xF86890")]
	public static void ReadPosDelta(byte[] buf, ref int bitposition, out Vector3 pos)
	{
	}

	[Token(Token = "0x6000CF8")]
	[Address(RVA = "0xF86978", Offset = "0xF86978", VA = "0xF86978")]
	public static int GetWritePosDelta2Size()
	{
		return default(int);
	}

	[Token(Token = "0x6000CF9")]
	[Address(RVA = "0xF86980", Offset = "0xF86980", VA = "0xF86980")]
	public static void WritePosDelta2(Vector3 pos, ref byte[] buf)
	{
	}

	[Token(Token = "0x6000CFA")]
	[Address(RVA = "0xF86A68", Offset = "0xF86A68", VA = "0xF86A68")]
	public static void WritePosDelta2(Vector3 pos, byte[] buf, ref int bitposition)
	{
	}

	[Token(Token = "0x6000CFB")]
	[Address(RVA = "0xF86B64", Offset = "0xF86B64", VA = "0xF86B64")]
	public static void ReadPosDelta2(byte[] buf, out Vector3 pos)
	{
	}

	[Token(Token = "0x6000CFC")]
	[Address(RVA = "0xF86BE0", Offset = "0xF86BE0", VA = "0xF86BE0")]
	public static void ReadPosDelta2(byte[] buf, ref int bitposition, out Vector3 pos)
	{
	}

	[Token(Token = "0x6000CFD")]
	[Address(RVA = "0xF86CC8", Offset = "0xF86CC8", VA = "0xF86CC8")]
	public static int GetWriteSpeedSize()
	{
		return default(int);
	}

	[Token(Token = "0x6000CFE")]
	[Address(RVA = "0xF86CD0", Offset = "0xF86CD0", VA = "0xF86CD0")]
	public static void WriteSpeed(Vector3 speed, ref byte[] buf)
	{
	}

	[Token(Token = "0x6000CFF")]
	[Address(RVA = "0xF86DB8", Offset = "0xF86DB8", VA = "0xF86DB8")]
	public static void WriteSpeed(Vector3 speed, byte[] buf, ref int bitposition)
	{
	}

	[Token(Token = "0x6000D00")]
	[Address(RVA = "0xF86EB4", Offset = "0xF86EB4", VA = "0xF86EB4")]
	public static void ReadSpeed(byte[] buf, out Vector3 speed)
	{
	}

	[Token(Token = "0x6000D01")]
	[Address(RVA = "0xF86F30", Offset = "0xF86F30", VA = "0xF86F30")]
	public static void ReadSpeed(byte[] buf, ref int bitposition, out Vector3 speed)
	{
	}

	[Token(Token = "0x6000D02")]
	[Address(RVA = "0xF87018", Offset = "0xF87018", VA = "0xF87018")]
	public static int GetWriteAngleSize()
	{
		return default(int);
	}

	[Token(Token = "0x6000D03")]
	[Address(RVA = "0xF87020", Offset = "0xF87020", VA = "0xF87020")]
	public static void WriteAngle(Vector3 angle, ref byte[] buf)
	{
	}

	[Token(Token = "0x6000D04")]
	[Address(RVA = "0xF87108", Offset = "0xF87108", VA = "0xF87108")]
	public static void WriteAngle(Vector3 angle, byte[] buf, ref int bitposition)
	{
	}

	[Token(Token = "0x6000D05")]
	[Address(RVA = "0xF87204", Offset = "0xF87204", VA = "0xF87204")]
	public static void ReadAngle(byte[] buf, out Vector3 angle)
	{
	}

	[Token(Token = "0x6000D06")]
	[Address(RVA = "0xF87280", Offset = "0xF87280", VA = "0xF87280")]
	public static void ReadAngle(byte[] buf, ref int bitposition, out Vector3 angle)
	{
	}

	[Token(Token = "0x6000D07")]
	[Address(RVA = "0xF87368", Offset = "0xF87368", VA = "0xF87368")]
	public static int GetWriteDirSize()
	{
		return default(int);
	}

	[Token(Token = "0x6000D08")]
	[Address(RVA = "0xF87370", Offset = "0xF87370", VA = "0xF87370")]
	public static void WriteDir(Vector3 dir, ref byte[] buf)
	{
	}

	[Token(Token = "0x6000D09")]
	[Address(RVA = "0xF87458", Offset = "0xF87458", VA = "0xF87458")]
	public static void WriteDir(Vector3 dir, byte[] buf, ref int bitposition)
	{
	}

	[Token(Token = "0x6000D0A")]
	[Address(RVA = "0xF87554", Offset = "0xF87554", VA = "0xF87554")]
	public static void ReadDir(byte[] buf, out Vector3 dir)
	{
	}

	[Token(Token = "0x6000D0B")]
	[Address(RVA = "0xF875D0", Offset = "0xF875D0", VA = "0xF875D0")]
	public static void ReadDir(byte[] buf, ref int bitposition, out Vector3 dir)
	{
	}

	[Token(Token = "0x6000D0C")]
	[Address(RVA = "0xF876B8", Offset = "0xF876B8", VA = "0xF876B8")]
	public MultiplayerCompressUtils()
	{
	}
}
[Token(Token = "0x2000234")]
public class MultiplayerConfig
{
	[Token(Token = "0x2000235")]
	public enum Team
	{
		[Token(Token = "0x4000ED2")]
		A,
		[Token(Token = "0x4000ED3")]
		B
	}

	[Token(Token = "0x2000236")]
	public enum LeaderboardScore
	{
		[Token(Token = "0x4000ED5")]
		SpecialTasks = 1,
		[Token(Token = "0x4000ED6")]
		PvP,
		[Token(Token = "0x4000ED7")]
		Community,
		[Token(Token = "0x4000ED8")]
		Challange
	}

	[Token(Token = "0x4000E8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool debugLogging;

	[Token(Token = "0x4000E8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool debugLogPhoton;

	[Token(Token = "0x4000E8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
	public static bool debugSync;

	[Token(Token = "0x4000E8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static MultiplayerSessionConfig.PlayMode[] gameModes;

	[Token(Token = "0x4000E8F")]
	public const MultiplayerSessionConfig.PlayMode modeDef = MultiplayerSessionConfig.PlayMode.CommunityCoOpSingle;

	[Token(Token = "0x4000E90")]
	public const int mapNumRandom = 0;

	[Token(Token = "0x4000E91")]
	public const int mapNumMin = 0;

	[Token(Token = "0x4000E92")]
	public const int mapNumMax = 10;

	[Token(Token = "0x4000E93")]
	public const int mapNumDef = 0;

	[Token(Token = "0x4000E94")]
	public const int maxPlayers = 8;

	[Token(Token = "0x4000E95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static GameMode.DifficultyMode[] diffModes;

	[Token(Token = "0x4000E96")]
	public const GameMode.DifficultyMode diffModeDef = GameMode.DifficultyMode.medium;

	[Token(Token = "0x4000E97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static int[] timedEnduranceTime;

	[Token(Token = "0x4000E98")]
	public const int timedEnduranceDef = 10;

	[Token(Token = "0x4000E99")]
	public const MultiplayerSessionConfig.TeamsMode teamsModeDef = MultiplayerSessionConfig.TeamsMode.Random;

	[Token(Token = "0x4000E9A")]
	public const MultiplayerSessionConfig.ChallangeMode challangeModeDef = MultiplayerSessionConfig.ChallangeMode.Planes;

	[Token(Token = "0x4000E9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static int[] challangePointsLimit;

	[Token(Token = "0x4000E9C")]
	public const int challangePointsLimitDef = 25;

	[Token(Token = "0x4000E9D")]
	public const int challangePlayerKillPoints = 2;

	[Token(Token = "0x4000E9E")]
	public const int challangeExtraKillPoints = 3;

	[Token(Token = "0x4000E9F")]
	public const int remainingLimitPointsExtraChallangePlayer = 5;

	[Token(Token = "0x4000EA0")]
	public const int challangeExtraAIChance = 25;

	[Token(Token = "0x4000EA1")]
	public const bool specialTasksDef = true;

	[Token(Token = "0x4000EA2")]
	public const bool friendlyFireDef = false;

	[Token(Token = "0x4000EA3")]
	public const MultiplayerSessionConfig.AllowedPlanesMode allowedPlanesModeDef = MultiplayerSessionConfig.AllowedPlanesMode.All;

	[Token(Token = "0x4000EA4")]
	public const int loungeIdMinLength = 4;

	[Token(Token = "0x4000EA5")]
	public const int loungeIdMaxLength = 32;

	[Token(Token = "0x4000EA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static int selectedPlanesMaxCnt;

	[Token(Token = "0x4000EA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public static float planeTeleportTreshold;

	[Token(Token = "0x4000EA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static float immortalAfterRespawnTime;

	[Token(Token = "0x4000EA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public static float respawnSelectPlanetimeMax;

	[Token(Token = "0x4000EAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static int rewardStartingAndVictoryMinGameTimeSec;

	[Token(Token = "0x4000EAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public static int pvpGoldRewardStarting;

	[Token(Token = "0x4000EAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static int pvpGoldRewardVictory;

	[Token(Token = "0x4000EAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static float[] pvpHitGoldRewards;

	[Token(Token = "0x4000EAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static int pvpExpRewardStarting;

	[Token(Token = "0x4000EAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public static int pvpExpRewardVictory;

	[Token(Token = "0x4000EB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static float[] pvpHitExpRewards;

	[Token(Token = "0x4000EB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static int coopGoldRewardStarting;

	[Token(Token = "0x4000EB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public static int coopGoldRewardVictory;

	[Token(Token = "0x4000EB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static float[] coopHitGoldRewards;

	[Token(Token = "0x4000EB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static int coopExpRewardStarting;

	[Token(Token = "0x4000EB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public static int coopExpRewardVictory;

	[Token(Token = "0x4000EB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static float[] coopHitExpRewards;

	[Token(Token = "0x4000EB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static int specialTaskRewardPerEnemy;

	[Token(Token = "0x4000EB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public static int specialTaskRewardPerEnemy_LimitedTime;

	[Token(Token = "0x4000EB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static int specialTaskRewardVIP;

	[Token(Token = "0x4000EBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public static float coopRewardPlaneMul;

	[Token(Token = "0x4000EBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static float coop2xRewardHP;

	[Token(Token = "0x4000EBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public static float coop3xRewardHP;

	[Token(Token = "0x4000EBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public static float coop4xRewardHP;

	[Token(Token = "0x4000EBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public static int coopMaxGoldRewardFromKills;

	[Token(Token = "0x4000EBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public static int coopMaxExpRewardFromKills;

	[Token(Token = "0x4000EC0")]
	public const float worldMinPos = -8000f;

	[Token(Token = "0x4000EC1")]
	public const float worldMaxPos = 8000f;

	[Token(Token = "0x4000EC2")]
	public const float worldMinHeight = -100f;

	[Token(Token = "0x4000EC3")]
	public const float worldMaxHeight = 2000f;

	[Token(Token = "0x4000EC4")]
	public const bool noGoldRewardsInDemo = true;

	[Token(Token = "0x4000EC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public static int specialTask_VIP_time_min;

	[Token(Token = "0x4000EC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public static int specialTask_VIP_time_max;

	[Token(Token = "0x4000EC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public static int specialTask_shootOnePlayer_killCnt_min;

	[Token(Token = "0x4000EC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public static int specialTask_shootOnePlayer_killCnt_max;

	[Token(Token = "0x4000EC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public static int specialTask_shootOnePlayerInTime_killCnt_min;

	[Token(Token = "0x4000ECA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public static int specialTask_shootOnePlayerInTime_killCnt_max;

	[Token(Token = "0x4000ECB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public static int specialTask_shootAnyPlayerInTime_killCnt_min;

	[Token(Token = "0x4000ECC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public static int specialTask_shootAnyPlayerInTime_killCnt_max;

	[Token(Token = "0x4000ECD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public static int specialTask_shootOnePlayerInTime_time_start;

	[Token(Token = "0x4000ECE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public static int specialTask_shootOnePlayerInTime_time_perKill;

	[Token(Token = "0x4000ECF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public static int specialTask_shootAnyPlayerInTime_time_start;

	[Token(Token = "0x4000ED0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public static int specialTask_shootAnyPlayerInTime_time_perKill;

	[Token(Token = "0x6000D0E")]
	[Address(RVA = "0x11FEB8C", Offset = "0x11FEB8C", VA = "0x11FEB8C")]
	public static void Log(string msg)
	{
	}

	[Token(Token = "0x6000D0F")]
	[Address(RVA = "0x11FEC94", Offset = "0x11FEC94", VA = "0x11FEC94")]
	public static string CensorPlayerName(string name, string userId)
	{
		return null;
	}

	[Token(Token = "0x6000D10")]
	[Address(RVA = "0x11FED20", Offset = "0x11FED20", VA = "0x11FED20")]
	public static string CensorPlayerName(string name, uint account_id = 0u)
	{
		return null;
	}

	[Token(Token = "0x6000D11")]
	[Address(RVA = "0x11FF00C", Offset = "0x11FF00C", VA = "0x11FF00C")]
	public MultiplayerConfig()
	{
	}
}
[Token(Token = "0x2000237")]
public class MultiplayerGame : MonoBehaviourPunCallbacks, IOnEventCallback
{
	[Token(Token = "0x2000238")]
	protected struct HitHull
	{
		[Token(Token = "0x4000F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MultiplayerSync.UID uid;

		[Token(Token = "0x4000F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public short damageSum;

		[Token(Token = "0x4000F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int shooterViewID;

		[Token(Token = "0x4000F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public eFX expl;

		[Token(Token = "0x4000F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3 explPos;

		[Token(Token = "0x4000F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 explAngle;
	}

	[Token(Token = "0x2000239")]
	public enum PlaneKilledType
	{
		[Token(Token = "0x4000F33")]
		Crashed,
		[Token(Token = "0x4000F34")]
		ShotDown,
		[Token(Token = "0x4000F35")]
		ShotByFlare
	}

	[Serializable]
	[Token(Token = "0x200023A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x917F8C", Offset = "0x917F8C")]
	private sealed class <>c
	{
		[Token(Token = "0x4000F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<NetPlayer> <>9__114_0;

		[Token(Token = "0x4000F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Comparison<NetPlayer> <>9__116_0;

		[Token(Token = "0x6000DAE")]
		[Address(RVA = "0xD7F408", Offset = "0xD7F408", VA = "0xD7F408")]
		public <>c()
		{
		}

		[Token(Token = "0x6000DAF")]
		[Address(RVA = "0xD7F410", Offset = "0xD7F410", VA = "0xD7F410")]
		internal int <GetSortedPlayers>b__114_0(NetPlayer a, NetPlayer b)
		{
			return default(int);
		}

		[Token(Token = "0x6000DB0")]
		[Address(RVA = "0xD7F438", Offset = "0xD7F438", VA = "0xD7F438")]
		internal int <GetSortedAllPlayersAtStart>b__116_0(NetPlayer a, NetPlayer b)
		{
			return default(int);
		}
	}

	[Token(Token = "0x200023B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x917F9C", Offset = "0x917F9C")]
	private sealed class <StartGameYielded>d__171 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MultiplayerGame <>4__this;

		[Token(Token = "0x170000CC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DB4")]
			[Address(RVA = "0xD7FD68", Offset = "0xD7FD68", VA = "0xD7FD68", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DB6")]
			[Address(RVA = "0xD7FDB0", Offset = "0xD7FDB0", VA = "0xD7FDB0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DB1")]
		[Address(RVA = "0xD7F9BC", Offset = "0xD7F9BC", VA = "0xD7F9BC")]
		[DebuggerHidden]
		public <StartGameYielded>d__171(int <>1__state)
		{
		}

		[Token(Token = "0x6000DB2")]
		[Address(RVA = "0xD7F9E8", Offset = "0xD7F9E8", VA = "0xD7F9E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DB3")]
		[Address(RVA = "0xD7F9EC", Offset = "0xD7F9EC", VA = "0xD7F9EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DB5")]
		[Address(RVA = "0xD7FD70", Offset = "0xD7FD70", VA = "0xD7FD70", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200023C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x917FAC", Offset = "0x917FAC")]
	private sealed class <StartMissionYielded>d__180 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MultiplayerGame <>4__this;

		[Token(Token = "0x170000CE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DBA")]
			[Address(RVA = "0xD8037C", Offset = "0xD8037C", VA = "0xD8037C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DBC")]
			[Address(RVA = "0xD803C4", Offset = "0xD803C4", VA = "0xD803C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DB7")]
		[Address(RVA = "0xD7FDB8", Offset = "0xD7FDB8", VA = "0xD7FDB8")]
		[DebuggerHidden]
		public <StartMissionYielded>d__180(int <>1__state)
		{
		}

		[Token(Token = "0x6000DB8")]
		[Address(RVA = "0xD7FDE4", Offset = "0xD7FDE4", VA = "0xD7FDE4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DB9")]
		[Address(RVA = "0xD7FDE8", Offset = "0xD7FDE8", VA = "0xD7FDE8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DBB")]
		[Address(RVA = "0xD80384", Offset = "0xD80384", VA = "0xD80384", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200023D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x917FBC", Offset = "0x917FBC")]
	private sealed class <ContinueGameYielded>d__181 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MultiplayerGame <>4__this;

		[Token(Token = "0x170000D0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DC0")]
			[Address(RVA = "0xD7F96C", Offset = "0xD7F96C", VA = "0xD7F96C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DC2")]
			[Address(RVA = "0xD7F9B4", Offset = "0xD7F9B4", VA = "0xD7F9B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DBD")]
		[Address(RVA = "0xD7F460", Offset = "0xD7F460", VA = "0xD7F460")]
		[DebuggerHidden]
		public <ContinueGameYielded>d__181(int <>1__state)
		{
		}

		[Token(Token = "0x6000DBE")]
		[Address(RVA = "0xD7F48C", Offset = "0xD7F48C", VA = "0xD7F48C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DBF")]
		[Address(RVA = "0xD7F490", Offset = "0xD7F490", VA = "0xD7F490", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DC1")]
		[Address(RVA = "0xD7F974", Offset = "0xD7F974", VA = "0xD7F974", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000ED9")]
	public const byte interestGroupDefault = 0;

	[Token(Token = "0x4000EDA")]
	public const byte interestGroupSession = 1;

	[Token(Token = "0x4000EDB")]
	public const byte eventPing = 1;

	[Token(Token = "0x4000EDC")]
	public const byte eventPlaneHit = 2;

	[Token(Token = "0x4000EDD")]
	public const byte eventHullHit = 3;

	[Token(Token = "0x4000EDE")]
	public const byte eventHullHitExpl = 4;

	[Token(Token = "0x4000EDF")]
	public const byte eventExpl = 5;

	[Token(Token = "0x4000EE0")]
	public const byte eventRemoteCannonShoot = 6;

	[Token(Token = "0x4000EE1")]
	public const byte eventGunnerAngles = 7;

	[Token(Token = "0x4000EE2")]
	public const byte eventPlayerPilotPose = 8;

	[Token(Token = "0x4000EE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool manualBots;

	[Token(Token = "0x4000EE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool demoCantCreateSession;

	[Token(Token = "0x4000EE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
	public static bool useGlobalLounges;

	[Token(Token = "0x4000EE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	protected static MultiplayerGame instance;

	[Token(Token = "0x4000EE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected new PhotonView photonView;

	[Token(Token = "0x4000EE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected MultiplayerSendHelper sendHelper;

	[Token(Token = "0x4000EE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected MultiplayerSessionConfig config;

	[Token(Token = "0x4000EEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected bool showNetPhotonStats;

	[Token(Token = "0x4000EEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	protected bool showNetPlayersStats;

	[Token(Token = "0x4000EEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	protected bool showNetLagSim;

	[Token(Token = "0x4000EED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float nextStepBotsTime;

	[Token(Token = "0x4000EEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float createBotsTimer;

	[Token(Token = "0x4000EEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int createdBotsCount;

	[Token(Token = "0x4000EF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float lastNetConnectionCheckTime;

	[Token(Token = "0x4000EF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string currentRoomId;

	[Token(Token = "0x4000EF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<NetPlayer> players;

	[Token(Token = "0x4000EF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<NetPlayer> allPlayersAtStart;

	[Token(Token = "0x4000EF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private MultiplayerConfig.Team localPlayerTeam;

	[Token(Token = "0x4000EF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int localPlayerCommunityPlaneIdx;

	[Token(Token = "0x4000EF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool updatePlayersCountInRoom;

	[Token(Token = "0x4000EF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	private bool updatePlayersRemovedFromRoom;

	[Token(Token = "0x4000EF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
	private bool startGameCalled;

	[Token(Token = "0x4000EF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x73")]
	private bool startedAsMaster;

	[Token(Token = "0x4000EFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private bool startingGame;

	[Token(Token = "0x4000EFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
	private bool loadingContinueMission;

	[Token(Token = "0x4000EFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x76")]
	private bool continuingMission;

	[Token(Token = "0x4000EFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x77")]
	protected bool sendReadyToOtherPlayers;

	[Token(Token = "0x4000EFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected float lastSendReadyToOtherPlayersTime;

	[Token(Token = "0x4000EFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	protected bool updateAfterMissionLoad;

	[Token(Token = "0x4000F00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected Dictionary<int, bool> receivedPlayerReady;

	[Token(Token = "0x4000F01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool allPlayersStartedGame;

	[Token(Token = "0x4000F02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private int sendStartedGameCnt;

	[Token(Token = "0x4000F03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float lastSendStartedGameTime;

	[Token(Token = "0x4000F04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private bool receivedStartedGame;

	[Token(Token = "0x4000F05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
	private bool calledAllPlayersJoined;

	[Token(Token = "0x4000F06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected Dictionary<int, bool> receivedContinueNextMission;

	[Token(Token = "0x4000F07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected Dictionary<int, bool> receivedPlayerScore;

	[Token(Token = "0x4000F08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected bool sendContinueNextMission;

	[Token(Token = "0x4000F09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private double prevGameTime;

	[Token(Token = "0x4000F0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private double gameTimeSum;

	[Token(Token = "0x4000F0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool readyToPlayOffline;

	[Token(Token = "0x4000F0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
	private bool offlineMode;

	[Token(Token = "0x4000F0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float disconnectAloneFromServerStartTime;

	[Token(Token = "0x4000F0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool disconnectAloneFromServerExecuted;

	[Token(Token = "0x4000F0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private int destroyMultiplayerOnExitMissionCnt;

	[Token(Token = "0x4000F10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float destroyMultiplayerOnExitMissionTime;

	[Token(Token = "0x4000F11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private bool destroyMultiplayerFromEndGame;

	[Token(Token = "0x4000F12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5")]
	private bool exitingGame;

	[Token(Token = "0x4000F13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	protected Dictionary<MultiplayerSync.UID, HitHull> hitHulls;

	[Token(Token = "0x4000F14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	protected HitHull[] resetHitHullBuff;

	[Token(Token = "0x4000F15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private byte[] buffCompressSerializeHE1;

	[Token(Token = "0x4000F16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private byte[] buffCompressSerializeHE2;

	[Token(Token = "0x4000F17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private byte[] buffCompressSerializeHE3;

	[Token(Token = "0x4000F18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private byte[] buffCompressSerializeH1;

	[Token(Token = "0x4000F19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private byte[] buffCompressSerializeH2;

	[Token(Token = "0x4000F1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private byte[] buffCompressSerializeH3;

	[Token(Token = "0x4000F1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private byte[] buffCompressSerializeE1;

	[Token(Token = "0x4000F1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private byte[] buffCompressSerializeE2;

	[Token(Token = "0x4000F1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private byte[] buffCompressSerializeE3;

	[Token(Token = "0x4000F1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	protected float firstBotTime;

	[Token(Token = "0x4000F1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	protected float secondBotTime;

	[Token(Token = "0x4000F20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	protected float thirdBotTime;

	[Token(Token = "0x4000F21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	protected float first2BotTime;

	[Token(Token = "0x4000F22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	protected float second2BotTime;

	[Token(Token = "0x4000F23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	protected float first3BotTime;

	[Token(Token = "0x4000F24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private bool sendDbgStack;

	[Token(Token = "0x4000F25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private RaiseEventOptions raiseEventOptionsOthers;

	[Token(Token = "0x4000F26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private SendOptions sendOptionsNotReliable;

	[Token(Token = "0x4000F27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private object[] sendContent1;

	[Token(Token = "0x4000F28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private float createSendHelperDelay;

	[Token(Token = "0x4000F29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Color[] respawnWhite;

	[Token(Token = "0x4000F2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static int respawnScreenNum;

	[Token(Token = "0x4000F2B")]
	private const float respawnScreenRange = 2500f;

	[Token(Token = "0x170000CB")]
	public static MultiplayerGame Instance
	{
		[Token(Token = "0x6000D13")]
		[Address(RVA = "0x1206628", Offset = "0x1206628", VA = "0x1206628")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000D14")]
	[Address(RVA = "0x120668C", Offset = "0x120668C", VA = "0x120668C", Slot = "28")]
	public override void OnEnable()
	{
	}

	[Token(Token = "0x6000D15")]
	[Address(RVA = "0x1206694", Offset = "0x1206694", VA = "0x1206694", Slot = "29")]
	public override void OnDisable()
	{
	}

	[Token(Token = "0x6000D16")]
	[Address(RVA = "0x120669C", Offset = "0x120669C", VA = "0x120669C")]
	public static void InitSettings()
	{
	}

	[Token(Token = "0x6000D17")]
	[Address(RVA = "0x12067B8", Offset = "0x12067B8", VA = "0x12067B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D18")]
	[Address(RVA = "0x1207C50", Offset = "0x1207C50", VA = "0x1207C50")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D19")]
	[Address(RVA = "0x1208730", Offset = "0x1208730", VA = "0x1208730")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000D1A")]
	[Address(RVA = "0x12088A0", Offset = "0x12088A0", VA = "0x12088A0")]
	private void OnLevelLoaded(Scene scene, LoadSceneMode mode)
	{
	}

	[Token(Token = "0x6000D1B")]
	[Address(RVA = "0x1208978", Offset = "0x1208978", VA = "0x1208978")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D1C")]
	[Address(RVA = "0x120B8CC", Offset = "0x120B8CC", VA = "0x120B8CC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000D1D")]
	[Address(RVA = "0x1207030", Offset = "0x1207030", VA = "0x1207030")]
	public bool IsLocalPlayerMaster()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D1E")]
	[Address(RVA = "0x120819C", Offset = "0x120819C", VA = "0x120819C")]
	public bool IsLocalPlayerGameMaster()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D1F")]
	[Address(RVA = "0x120CBBC", Offset = "0x120CBBC", VA = "0x120CBBC")]
	public int GetViewID()
	{
		return default(int);
	}

	[Token(Token = "0x6000D20")]
	[Address(RVA = "0x120CC48", Offset = "0x120CC48", VA = "0x120CC48")]
	public MultiplayerSendHelper GetSendHelper()
	{
		return null;
	}

	[Token(Token = "0x6000D21")]
	[Address(RVA = "0x120CC50", Offset = "0x120CC50", VA = "0x120CC50")]
	public int GetSendHelperID()
	{
		return default(int);
	}

	[Token(Token = "0x6000D22")]
	[Address(RVA = "0x120CCE4", Offset = "0x120CCE4", VA = "0x120CCE4")]
	public bool HaveFakeBotMaster()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D23")]
	[Address(RVA = "0x120CDC0", Offset = "0x120CDC0", VA = "0x120CDC0")]
	public Photon.Realtime.Player GetPUNPlayerByActorNumber(int actorNumber)
	{
		return null;
	}

	[Token(Token = "0x6000D24")]
	[Address(RVA = "0x120CF24", Offset = "0x120CF24", VA = "0x120CF24")]
	public NetPlayer GetNetPlayerByActorNumber(int actorNumber)
	{
		return null;
	}

	[Token(Token = "0x6000D25")]
	[Address(RVA = "0x120D080", Offset = "0x120D080", VA = "0x120D080")]
	public NetPlayer FindPUNPlayer(Photon.Realtime.Player punPlayer)
	{
		return null;
	}

	[Token(Token = "0x6000D26")]
	[Address(RVA = "0x120D1A0", Offset = "0x120D1A0", VA = "0x120D1A0")]
	private int FindPUNPlayerIdx(Photon.Realtime.Player punPlayer)
	{
		return default(int);
	}

	[Token(Token = "0x6000D27")]
	[Address(RVA = "0x120D290", Offset = "0x120D290", VA = "0x120D290")]
	public NetPlayer FindNetPlayer(int netPlayerId)
	{
		return null;
	}

	[Token(Token = "0x6000D28")]
	[Address(RVA = "0x120D370", Offset = "0x120D370", VA = "0x120D370")]
	public NetPlayer FindNetPlayerInAllPlayersAtStart(int netPlayerId)
	{
		return null;
	}

	[Token(Token = "0x6000D29")]
	[Address(RVA = "0x120D470", Offset = "0x120D470", VA = "0x120D470")]
	private int FindNetPlayerIdx(NetPlayer player)
	{
		return default(int);
	}

	[Token(Token = "0x6000D2A")]
	[Address(RVA = "0x120D518", Offset = "0x120D518", VA = "0x120D518")]
	public NetPlayer FindNetPlayerWithNickName(string nickName)
	{
		return null;
	}

	[Token(Token = "0x6000D2B")]
	[Address(RVA = "0x120D604", Offset = "0x120D604", VA = "0x120D604")]
	public NetPlayer FindGunnerSittingAt(int atPlayerId, int atIdx)
	{
		return null;
	}

	[Token(Token = "0x6000D2C")]
	[Address(RVA = "0x120D730", Offset = "0x120D730", VA = "0x120D730")]
	public bool IsGunnerSittingAt(int atPlayerId, int exceptPlayerId = -1)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D2D")]
	[Address(RVA = "0x120D82C", Offset = "0x120D82C", VA = "0x120D82C")]
	public int CountGunnersSittingAt(int atPlayerId, int exceptPlayerId = -1)
	{
		return default(int);
	}

	[Token(Token = "0x6000D2E")]
	[Address(RVA = "0x120A0EC", Offset = "0x120A0EC", VA = "0x120A0EC")]
	public PlaneBody GetPlaneByNetPlayerId(int id, bool retGunnerAtPlane = false)
	{
		return null;
	}

	[Token(Token = "0x6000D2F")]
	[Address(RVA = "0x120D930", Offset = "0x120D930", VA = "0x120D930")]
	public PlaneBody GetPlaneByViewId(int id)
	{
		return null;
	}

	[Token(Token = "0x6000D30")]
	[Address(RVA = "0x120DA8C", Offset = "0x120DA8C", VA = "0x120DA8C")]
	public int GetPlayersCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000D31")]
	[Address(RVA = "0x120DAD8", Offset = "0x120DAD8", VA = "0x120DAD8")]
	public List<NetPlayer> GetPlayers()
	{
		return null;
	}

	[Token(Token = "0x6000D32")]
	[Address(RVA = "0x120DAE0", Offset = "0x120DAE0", VA = "0x120DAE0")]
	public List<NetPlayer> GetSortedPlayers()
	{
		return null;
	}

	[Token(Token = "0x6000D33")]
	[Address(RVA = "0x120DC4C", Offset = "0x120DC4C", VA = "0x120DC4C")]
	public List<NetPlayer> GetAllPlayersAtStart()
	{
		return null;
	}

	[Token(Token = "0x6000D34")]
	[Address(RVA = "0x120DC54", Offset = "0x120DC54", VA = "0x120DC54")]
	public List<NetPlayer> GetSortedAllPlayersAtStart()
	{
		return null;
	}

	[Token(Token = "0x6000D35")]
	[Address(RVA = "0x120DDC0", Offset = "0x120DDC0", VA = "0x120DDC0")]
	public List<NetPlayer> GetSortedNotGunnerPlayers()
	{
		return null;
	}

	[Token(Token = "0x6000D36")]
	[Address(RVA = "0x120DE9C", Offset = "0x120DE9C", VA = "0x120DE9C")]
	public int GetNotGunnerPlayersCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000D37")]
	[Address(RVA = "0x120DF50", Offset = "0x120DF50", VA = "0x120DF50")]
	public List<Photon.Realtime.Player> GetRealPUNPlayers()
	{
		return null;
	}

	[Token(Token = "0x6000D38")]
	[Address(RVA = "0x120E0BC", Offset = "0x120E0BC", VA = "0x120E0BC")]
	public List<NetPlayer> GetRealPUNNetPlayers()
	{
		return null;
	}

	[Token(Token = "0x6000D39")]
	[Address(RVA = "0x120E220", Offset = "0x120E220", VA = "0x120E220")]
	public List<NetPlayer> GetBotPlayers()
	{
		return null;
	}

	[Token(Token = "0x6000D3A")]
	[Address(RVA = "0x120E350", Offset = "0x120E350", VA = "0x120E350")]
	public int GetRealPUNPlayersCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000D3B")]
	[Address(RVA = "0x120AF84", Offset = "0x120AF84", VA = "0x120AF84")]
	public int GetBotPlayersCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000D3C")]
	[Address(RVA = "0x120E438", Offset = "0x120E438", VA = "0x120E438")]
	public bool IsStartedGameAsMaster()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D3D")]
	[Address(RVA = "0x120E440", Offset = "0x120E440", VA = "0x120E440")]
	public bool IsReadyToPlayOffline()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D3E")]
	[Address(RVA = "0x120E4B4", Offset = "0x120E4B4", VA = "0x120E4B4")]
	public bool IsSelfSwitchingToOfflineMode()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D3F")]
	[Address(RVA = "0x120E4BC", Offset = "0x120E4BC", VA = "0x120E4BC")]
	public bool IsOfflineMode()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D40")]
	[Address(RVA = "0x120ABBC", Offset = "0x120ABBC", VA = "0x120ABBC")]
	public bool IsReceivedPlayerReady(int id)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D41")]
	[Address(RVA = "0x120ADC8", Offset = "0x120ADC8", VA = "0x120ADC8")]
	public bool IsReceivedPlayerContinueNextMission(int id)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D42")]
	[Address(RVA = "0x120E4C4", Offset = "0x120E4C4", VA = "0x120E4C4")]
	public bool IsReceivedPlayerScore(int id)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D43")]
	[Address(RVA = "0x120E554", Offset = "0x120E554", VA = "0x120E554")]
	public bool IsReceivedAllPlayersScores()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D44")]
	[Address(RVA = "0x12082AC", Offset = "0x12082AC", VA = "0x12082AC")]
	public NetPlayer GetLocalNetPlayer()
	{
		return null;
	}

	[Token(Token = "0x6000D45")]
	[Address(RVA = "0x120AD00", Offset = "0x120AD00", VA = "0x120AD00")]
	public int GetLocalNetPlayerId()
	{
		return default(int);
	}

	[Token(Token = "0x6000D46")]
	[Address(RVA = "0x120E6E0", Offset = "0x120E6E0", VA = "0x120E6E0")]
	public string GetLocalPlayerNickName()
	{
		return null;
	}

	[Token(Token = "0x6000D47")]
	[Address(RVA = "0x120E744", Offset = "0x120E744", VA = "0x120E744")]
	public string GetCurrentRoomId()
	{
		return null;
	}

	[Token(Token = "0x6000D48")]
	[Address(RVA = "0x120E74C", Offset = "0x120E74C", VA = "0x120E74C")]
	public int GetLocalPlayerCommunityPlaneIdx()
	{
		return default(int);
	}

	[Token(Token = "0x6000D49")]
	[Address(RVA = "0x120E7FC", Offset = "0x120E7FC", VA = "0x120E7FC")]
	public MultiplayerConfig.Team GetLocalPlayerTeam()
	{
		return default(MultiplayerConfig.Team);
	}

	[Token(Token = "0x6000D4A")]
	[Address(RVA = "0x120ACE0", Offset = "0x120ACE0", VA = "0x120ACE0")]
	public bool AreAllPlayersStartedGame()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D4B")]
	[Address(RVA = "0x120E8AC", Offset = "0x120E8AC", VA = "0x120E8AC")]
	public bool IsLoadingContinueMission()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D4C")]
	[Address(RVA = "0x120E8B4", Offset = "0x120E8B4", VA = "0x120E8B4")]
	public bool IsContinuingMission()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D4D")]
	[Address(RVA = "0x120E8BC", Offset = "0x120E8BC", VA = "0x120E8BC")]
	public int GetRemainingGameTimeSec()
	{
		return default(int);
	}

	[Token(Token = "0x6000D4E")]
	[Address(RVA = "0x120E940", Offset = "0x120E940", VA = "0x120E940")]
	public MultiplayerSessionConfig GetConfig()
	{
		return null;
	}

	[Token(Token = "0x6000D4F")]
	[Address(RVA = "0x120E948", Offset = "0x120E948", VA = "0x120E948")]
	public void GetPlayerSpawnPos(NetPlayer player, bool respawn, Vector3 posBeforeRespawn, out Vector3 pos, out float heading)
	{
	}

	[Token(Token = "0x6000D50")]
	[Address(RVA = "0x120F6D0", Offset = "0x120F6D0", VA = "0x120F6D0")]
	private void DrawRespawnPoint(Texture2D tex, Vector3 pos, Color col, int size)
	{
	}

	[Token(Token = "0x6000D51")]
	[Address(RVA = "0x120F464", Offset = "0x120F464", VA = "0x120F464")]
	private bool IsEnemyInRange(NetPlayer player, Vector3 pos, float realPlayerRange, float botRange)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D52")]
	[Address(RVA = "0x120F874", Offset = "0x120F874", VA = "0x120F874")]
	public void SendBlinkNotReadyInSession(NetPlayer player)
	{
	}

	[Token(Token = "0x6000D53")]
	[Address(RVA = "0x120FA20", Offset = "0x120FA20", VA = "0x120FA20")]
	public bool Is2TeamsMode()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D54")]
	[Address(RVA = "0x1208258", Offset = "0x1208258", VA = "0x1208258")]
	public bool Is2TeamsSelectableMode()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D55")]
	[Address(RVA = "0x120FA34", Offset = "0x120FA34", VA = "0x120FA34")]
	public int CountPlayersInTeam(MultiplayerConfig.Team team)
	{
		return default(int);
	}

	[Token(Token = "0x6000D56")]
	[Address(RVA = "0x120FAF0", Offset = "0x120FAF0", VA = "0x120FAF0")]
	public int CountNotGunnerPlayersInTeam(MultiplayerConfig.Team team)
	{
		return default(int);
	}

	[Token(Token = "0x6000D57")]
	[Address(RVA = "0x120FBE8", Offset = "0x120FBE8", VA = "0x120FBE8")]
	public void SwitchPlayerTeam(NetPlayer player)
	{
	}

	[Token(Token = "0x6000D58")]
	[Address(RVA = "0x120FC78", Offset = "0x120FC78", VA = "0x120FC78")]
	public void SetPlayerTeam(NetPlayer player, MultiplayerConfig.Team team)
	{
	}

	[Token(Token = "0x6000D59")]
	[Address(RVA = "0x12085B0", Offset = "0x12085B0", VA = "0x12085B0")]
	private void SetPlayerTeam(NetPlayer player, MultiplayerConfig.Team team, bool balanceTeams)
	{
	}

	[Token(Token = "0x6000D5A")]
	[Address(RVA = "0x12083C8", Offset = "0x12083C8", VA = "0x12083C8")]
	private bool BalanceTeamsCount(NetPlayer exceptPlayer)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D5B")]
	[Address(RVA = "0x120FC80", Offset = "0x120FC80", VA = "0x120FC80")]
	private void UpdateNewPlayerTeam(NetPlayer player)
	{
	}

	[Token(Token = "0x6000D5C")]
	[Address(RVA = "0x120FD44", Offset = "0x120FD44", VA = "0x120FD44")]
	private int[] GetInitTeams()
	{
		return null;
	}

	[Token(Token = "0x6000D5D")]
	[Address(RVA = "0x1210110", Offset = "0x1210110", VA = "0x1210110")]
	public void SetAsGunnerAt(NetPlayer atPlayer, int atIdx)
	{
	}

	[Token(Token = "0x6000D5E")]
	[Address(RVA = "0x12105F0", Offset = "0x12105F0", VA = "0x12105F0")]
	public void ResetGunner(NetPlayer player)
	{
	}

	[Token(Token = "0x6000D5F")]
	[Address(RVA = "0x12107B0", Offset = "0x12107B0", VA = "0x12107B0")]
	private void ResetGunner(int playerId)
	{
	}

	[Token(Token = "0x6000D60")]
	[Address(RVA = "0x1210398", Offset = "0x1210398", VA = "0x1210398")]
	private void SetAsGunner(int playerId, int atPlayerId, int atIdx)
	{
	}

	[Token(Token = "0x6000D61")]
	[Address(RVA = "0x1210820", Offset = "0x1210820", VA = "0x1210820")]
	public void SetGunnerSlotLocked(int idx, bool locked)
	{
	}

	[Token(Token = "0x6000D62")]
	[Address(RVA = "0x1210AB8", Offset = "0x1210AB8", VA = "0x1210AB8")]
	public void SetGunnerSlotLocked(int playerId, int idx, bool locked)
	{
	}

	[Token(Token = "0x6000D63")]
	[Address(RVA = "0x1210B7C", Offset = "0x1210B7C", VA = "0x1210B7C")]
	public void SetLocalPlayerObserver()
	{
	}

	[Token(Token = "0x6000D64")]
	[Address(RVA = "0x1210BDC", Offset = "0x1210BDC", VA = "0x1210BDC")]
	public void SetLocalPlayerObserverAtPlayerId(int atPlayerId)
	{
	}

	[Token(Token = "0x6000D65")]
	[Address(RVA = "0x1210C0C", Offset = "0x1210C0C", VA = "0x1210C0C")]
	public bool CanStartGame()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D66")]
	[Address(RVA = "0x1210C34", Offset = "0x1210C34", VA = "0x1210C34")]
	public bool CanStartGame(out bool notReady)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D67")]
	[Address(RVA = "0x1210D9C", Offset = "0x1210D9C", VA = "0x1210D9C")]
	public void StartGame()
	{
	}

	[Token(Token = "0x6000D68")]
	[Address(RVA = "0x1210E64", Offset = "0x1210E64", VA = "0x1210E64")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92834C", Offset = "0x92834C")]
	private IEnumerator StartGameYielded()
	{
		return null;
	}

	[Token(Token = "0x6000D69")]
	[Address(RVA = "0x1210ED0", Offset = "0x1210ED0", VA = "0x1210ED0")]
	public bool IsStartGameCalled()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D6A")]
	[Address(RVA = "0x1206D88", Offset = "0x1206D88", VA = "0x1206D88")]
	private void UpdateConfigFromRoom(bool updateBots = true, bool roomPropertiesChanged = false)
	{
	}

	[Token(Token = "0x6000D6B")]
	[Address(RVA = "0x12073B4", Offset = "0x12073B4", VA = "0x12073B4")]
	private void FillPlayersFromRoom()
	{
	}

	[Token(Token = "0x6000D6C")]
	[Address(RVA = "0x1210ED8", Offset = "0x1210ED8", VA = "0x1210ED8")]
	public bool HaveFreeSlotForPlayer()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D6D")]
	[Address(RVA = "0x120B914", Offset = "0x120B914", VA = "0x120B914")]
	private void UpdatePlayersCountInRoom()
	{
	}

	[Token(Token = "0x6000D6E")]
	[Address(RVA = "0x120BBEC", Offset = "0x120BBEC", VA = "0x120BBEC")]
	private void UpdatePlayersRemovedFromRoom()
	{
	}

	[Token(Token = "0x6000D6F")]
	[Address(RVA = "0x1210F38", Offset = "0x1210F38", VA = "0x1210F38")]
	public bool HandlePlayerEnterRoom(Photon.Realtime.Player newPlayer, bool fromManualLoungeJoin)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D70")]
	[Address(RVA = "0x12113B8", Offset = "0x12113B8", VA = "0x12113B8")]
	public void OnNewPlayerManualJoined(Photon.Realtime.Player newPlayer)
	{
	}

	[Token(Token = "0x6000D71")]
	[Address(RVA = "0x12115B0", Offset = "0x12115B0", VA = "0x12115B0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9283AC", Offset = "0x9283AC")]
	private IEnumerator StartMissionYielded()
	{
		return null;
	}

	[Token(Token = "0x6000D72")]
	[Address(RVA = "0x121161C", Offset = "0x121161C", VA = "0x121161C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92840C", Offset = "0x92840C")]
	private IEnumerator ContinueGameYielded()
	{
		return null;
	}

	[Token(Token = "0x6000D73")]
	[Address(RVA = "0x1211688", Offset = "0x1211688", VA = "0x1211688")]
	public void PrepareContinueLoadingMission()
	{
	}

	[Token(Token = "0x6000D74")]
	[Address(RVA = "0x121188C", Offset = "0x121188C", VA = "0x121188C")]
	public void FinishContinueLoadingMission()
	{
	}

	[Token(Token = "0x6000D75")]
	[Address(RVA = "0x1211980", Offset = "0x1211980", VA = "0x1211980")]
	public void SendReadyContinueNextMission()
	{
	}

	[Token(Token = "0x6000D76")]
	[Address(RVA = "0x1211BF8", Offset = "0x1211BF8", VA = "0x1211BF8")]
	public void SendPlayerAddScore(int playerId, int goldStarting, int goldForHit, int goldForKills, int goldForVictory, int expStarting, int expForHit, int expForKills, int expForVictory, int expSpecialTask)
	{
	}

	[Token(Token = "0x6000D77")]
	[Address(RVA = "0x1211FEC", Offset = "0x1211FEC", VA = "0x1211FEC")]
	public void SendPlayerDeaths(int playerId, int cnt)
	{
	}

	[Token(Token = "0x6000D78")]
	[Address(RVA = "0x12121C8", Offset = "0x12121C8", VA = "0x12121C8")]
	public void SendPlayerKills(int playerId, int cnt)
	{
	}

	[Token(Token = "0x6000D79")]
	[Address(RVA = "0x12123A4", Offset = "0x12123A4", VA = "0x12123A4")]
	public void DestroyGameOnExitMission(bool fromMultiplayerEndGame)
	{
	}

	[Token(Token = "0x6000D7A")]
	[Address(RVA = "0x120B02C", Offset = "0x120B02C", VA = "0x120B02C")]
	private void UpdateDestroyGame()
	{
	}

	[Token(Token = "0x6000D7B")]
	[Address(RVA = "0x12125A8", Offset = "0x12125A8", VA = "0x12125A8")]
	public void OnExitFromSessionInLounge()
	{
	}

	[Token(Token = "0x6000D7C")]
	[Address(RVA = "0x1212674", Offset = "0x1212674", VA = "0x1212674")]
	public void OnRemovedFromFullSession()
	{
	}

	[Token(Token = "0x6000D7D")]
	[Address(RVA = "0x120A250", Offset = "0x120A250", VA = "0x120A250")]
	public void DestroyPlane(PlaneBody pb)
	{
	}

	[Token(Token = "0x6000D7E")]
	[Address(RVA = "0x1212740", Offset = "0x1212740", VA = "0x1212740")]
	public bool HandleDestroyGameObjectFromPrefabPool(GameObject go)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D7F")]
	[Address(RVA = "0x1212CCC", Offset = "0x1212CCC", VA = "0x1212CCC")]
	private void Multi_SwitchToOfflineMode()
	{
	}

	[Token(Token = "0x6000D80")]
	[Address(RVA = "0x1212EAC", Offset = "0x1212EAC", VA = "0x1212EAC")]
	public void OnPlayerPlaneKilled(PlaneBody plane, PlaneBody shooter, PlaneKilledType killedType, bool shooterFromMostDamageCrash)
	{
	}

	[Token(Token = "0x6000D81")]
	[Address(RVA = "0x12136AC", Offset = "0x12136AC", VA = "0x12136AC")]
	public void SendHullHit(Hull hull, PlaneBody shooter, int damage)
	{
	}

	[Token(Token = "0x6000D82")]
	[Address(RVA = "0x1213938", Offset = "0x1213938", VA = "0x1213938")]
	public void SendHullExpl(Hull hull, eFX expl, Vector3 posDelta, Vector3 misAngle)
	{
	}

	[Token(Token = "0x6000D83")]
	[Address(RVA = "0x1213B18", Offset = "0x1213B18", VA = "0x1213B18")]
	public void SendExpl(eFX expl, Vector3 pos)
	{
	}

	[Token(Token = "0x6000D84")]
	[Address(RVA = "0x1213CB0", Offset = "0x1213CB0", VA = "0x1213CB0")]
	public void SendHullBum(Hull hull, int shooterViewId)
	{
	}

	[Token(Token = "0x6000D85")]
	[Address(RVA = "0x1213EF8", Offset = "0x1213EF8", VA = "0x1213EF8")]
	public void SendSetSquadronWave(MultiplayerSync.UID suid, int waves, int deployingCnt, int nextOwnershipIdx, bool playRadioMsg)
	{
	}

	[Token(Token = "0x6000D86")]
	[Address(RVA = "0x1214180", Offset = "0x1214180", VA = "0x1214180")]
	public void SendIncreaseRewards(NetPlayer toPlayer, byte hitType, bool targetPlayerPlane, int shooterPlayerId)
	{
	}

	[Token(Token = "0x6000D87")]
	[Address(RVA = "0x121439C", Offset = "0x121439C", VA = "0x121439C")]
	public void SendInitSpecialTaskTeamVIP(int playerId, float maxTime)
	{
	}

	[Token(Token = "0x6000D88")]
	[Address(RVA = "0x1214678", Offset = "0x1214678", VA = "0x1214678")]
	public void SendStartSpecialTaskTeamVIP()
	{
	}

	[Token(Token = "0x6000D89")]
	[Address(RVA = "0x120BDDC", Offset = "0x120BDDC", VA = "0x120BDDC")]
	private void SendHitHulls()
	{
	}

	[Token(Token = "0x6000D8A")]
	[Address(RVA = "0x120709C", Offset = "0x120709C", VA = "0x120709C")]
	public void AddBot(string fakeMasterName = "")
	{
	}

	[Token(Token = "0x6000D8B")]
	[Address(RVA = "0x120A3E8", Offset = "0x120A3E8", VA = "0x120A3E8")]
	public void RemoveBot(NetPlayer removePlayer)
	{
	}

	[Token(Token = "0x6000D8C")]
	[Address(RVA = "0x12075B4", Offset = "0x12075B4", VA = "0x12075B4")]
	private void UpdateBotsFromRoom(bool initTeam = true)
	{
	}

	[Token(Token = "0x6000D8D")]
	[Address(RVA = "0x1207A68", Offset = "0x1207A68", VA = "0x1207A68")]
	public static float ReadRandomRangeFromConfig(string key)
	{
		return default(float);
	}

	[Token(Token = "0x6000D8E")]
	[Address(RVA = "0x120A730", Offset = "0x120A730", VA = "0x120A730")]
	private void StepBots()
	{
	}

	[Token(Token = "0x6000D8F")]
	[Address(RVA = "0x12148C8", Offset = "0x12148C8", VA = "0x12148C8")]
	[PunRPC]
	private void RPC_StartGame()
	{
	}

	[Token(Token = "0x6000D90")]
	[Address(RVA = "0x120AE58", Offset = "0x120AE58", VA = "0x120AE58")]
	[PunRPC]
	private void RPC_StartContinueNextMission(int from)
	{
	}

	[Token(Token = "0x6000D91")]
	[Address(RVA = "0x1214F38", Offset = "0x1214F38", VA = "0x1214F38")]
	[PunRPC]
	private void RPC_BlinkNotReadyInSession()
	{
	}

	[Token(Token = "0x6000D92")]
	[Address(RVA = "0x1215118", Offset = "0x1215118", VA = "0x1215118")]
	[PunRPC]
	private void RPC_SetAsGunner(int playerId, int atPlayerId, int atIdx)
	{
	}

	[Token(Token = "0x6000D93")]
	[Address(RVA = "0x121511C", Offset = "0x121511C", VA = "0x121511C")]
	[PunRPC]
	private void RPC_ResetGunner(int playerId)
	{
	}

	[Token(Token = "0x6000D94")]
	[Address(RVA = "0x1215120", Offset = "0x1215120", VA = "0x1215120")]
	[PunRPC]
	private void RPC_SetGunnerSlotLocked(int playerId, int idx, bool locked)
	{
	}

	[Token(Token = "0x6000D95")]
	[Address(RVA = "0x120AD24", Offset = "0x120AD24", VA = "0x120AD24")]
	[PunRPC]
	private void RPC_SetPlayerReady(int netPlayerId)
	{
	}

	[Token(Token = "0x6000D96")]
	[Address(RVA = "0x12124B0", Offset = "0x12124B0", VA = "0x12124B0")]
	[PunRPC]
	private void RPC_SetPlayerLeavingGame(int netPlayerId)
	{
	}

	[Token(Token = "0x6000D97")]
	[Address(RVA = "0x120AC4C", Offset = "0x120AC4C", VA = "0x120AC4C")]
	[PunRPC]
	private void RPC_SetStartedGame()
	{
	}

	[Token(Token = "0x6000D98")]
	[Address(RVA = "0x1211B54", Offset = "0x1211B54", VA = "0x1211B54")]
	[PunRPC]
	private void RPC_ReadyContinueNextMission(int netPlayerId)
	{
	}

	[Token(Token = "0x6000D99")]
	[Address(RVA = "0x1215128", Offset = "0x1215128", VA = "0x1215128")]
	[PunRPC]
	private void RPC_SendPlayerAddScore(int playerId, int goldStarting, int goldForHit, int goldForKills, int goldForVictory, int expStarting, int expForHit, int expForKills, int expForVictory, int expSpecialTask)
	{
	}

	[Token(Token = "0x6000D9A")]
	[Address(RVA = "0x12152EC", Offset = "0x12152EC", VA = "0x12152EC")]
	[PunRPC]
	private void RPC_SendPlayerDeaths(int playerId, int cnt)
	{
	}

	[Token(Token = "0x6000D9B")]
	[Address(RVA = "0x12153EC", Offset = "0x12153EC", VA = "0x12153EC")]
	[PunRPC]
	private void RPC_SendPlayerKills(int playerId, int cnt)
	{
	}

	[Token(Token = "0x6000D9C")]
	[Address(RVA = "0x1213574", Offset = "0x1213574", VA = "0x1213574")]
	[PunRPC]
	private void RPC_OnPlayerPlaneKilled(string playerPlanePrefabID, int playerNetId, bool playerExtraChallange, int shooterNetId, int killedType, bool shooterFromMostDamageCrash)
	{
	}

	[Token(Token = "0x6000D9D")]
	[Address(RVA = "0x12154EC", Offset = "0x12154EC", VA = "0x12154EC")]
	[PunRPC]
	private void RPC_HullBum(long hullUID, int shooterViewId)
	{
	}

	[Token(Token = "0x6000D9E")]
	[Address(RVA = "0x12156C4", Offset = "0x12156C4", VA = "0x12156C4")]
	[PunRPC]
	private void RPC_CheckDbgStack(string dbgCalls, int fromActorNumber)
	{
	}

	[Token(Token = "0x6000D9F")]
	[Address(RVA = "0x12157C0", Offset = "0x12157C0", VA = "0x12157C0")]
	[PunRPC]
	private void RPC_SetSquadronWave(long suid, int waves, int deployingCnt, int nextOwnershipIdx, bool playRadioMsg)
	{
	}

	[Token(Token = "0x6000DA0")]
	[Address(RVA = "0x12158D8", Offset = "0x12158D8", VA = "0x12158D8")]
	[PunRPC]
	private void RPC_IncreaseRewards(byte hitType, bool targetPlayerPlane, int shooterPlayerId)
	{
	}

	[Token(Token = "0x6000DA1")]
	[Address(RVA = "0x121456C", Offset = "0x121456C", VA = "0x121456C")]
	[PunRPC]
	private void RPC_InitSpecialTaskTeamVIP(int playerId, float maxTime)
	{
	}

	[Token(Token = "0x6000DA2")]
	[Address(RVA = "0x12147E4", Offset = "0x12147E4", VA = "0x12147E4")]
	[PunRPC]
	private void RPC_StartSpecialTaskTeamVIP()
	{
	}

	[Token(Token = "0x6000DA3")]
	[Address(RVA = "0x12159EC", Offset = "0x12159EC", VA = "0x12159EC", Slot = "42")]
	public override void OnPlayerEnteredRoom(Photon.Realtime.Player newPlayer)
	{
	}

	[Token(Token = "0x6000DA4")]
	[Address(RVA = "0x12159F4", Offset = "0x12159F4", VA = "0x12159F4", Slot = "43")]
	public override void OnPlayerLeftRoom(Photon.Realtime.Player otherPlayer)
	{
	}

	[Token(Token = "0x6000DA5")]
	[Address(RVA = "0x1215F80", Offset = "0x1215F80", VA = "0x1215F80", Slot = "46")]
	public override void OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
	{
	}

	[Token(Token = "0x6000DA6")]
	[Address(RVA = "0x1216004", Offset = "0x1216004", VA = "0x1216004", Slot = "47")]
	public override void OnPlayerPropertiesUpdate(Photon.Realtime.Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
	{
	}

	[Token(Token = "0x6000DA7")]
	[Address(RVA = "0x12161C0", Offset = "0x12161C0", VA = "0x12161C0", Slot = "32")]
	public override void OnMasterClientSwitched(Photon.Realtime.Player newMasterClient)
	{
	}

	[Token(Token = "0x6000DA8")]
	[Address(RVA = "0x12163D8", Offset = "0x12163D8", VA = "0x12163D8", Slot = "31")]
	public override void OnLeftRoom()
	{
	}

	[Token(Token = "0x6000DA9")]
	[Address(RVA = "0x1216494", Offset = "0x1216494", VA = "0x1216494", Slot = "38")]
	public override void OnDisconnected(DisconnectCause cause)
	{
	}

	[Token(Token = "0x6000DAA")]
	[Address(RVA = "0x1216694", Offset = "0x1216694", VA = "0x1216694", Slot = "54")]
	public void OnEvent(EventData photonEvent)
	{
	}

	[Token(Token = "0x6000DAB")]
	[Address(RVA = "0x1216D04", Offset = "0x1216D04", VA = "0x1216D04")]
	public MultiplayerGame()
	{
	}
}
[Token(Token = "0x200023E")]
public class MultiplayerRoom : MonoBehaviourPunCallbacks, IOnEventCallback
{
	[Token(Token = "0x200023F")]
	protected class Ping
	{
		[Token(Token = "0x4000F6A")]
		private const int maxVals = 10;

		[Token(Token = "0x4000F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected List<float> recentVals;

		[Token(Token = "0x6000E01")]
		[Address(RVA = "0xD82038", Offset = "0xD82038", VA = "0xD82038")]
		public void Add(float val)
		{
		}

		[Token(Token = "0x6000E02")]
		[Address(RVA = "0xD820EC", Offset = "0xD820EC", VA = "0xD820EC")]
		public int Get()
		{
			return default(int);
		}

		[Token(Token = "0x6000E03")]
		[Address(RVA = "0xD821E8", Offset = "0xD821E8", VA = "0xD821E8")]
		public Ping()
		{
		}
	}

	[Token(Token = "0x2000240")]
	public struct ChatLine
	{
		[Token(Token = "0x4000F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string chat;

		[Token(Token = "0x4000F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool teamOnly;

		[Token(Token = "0x6000E04")]
		[Address(RVA = "0xD82028", Offset = "0xD82028", VA = "0xD82028")]
		public ChatLine(string _chat, bool _teamOnly)
		{
		}
	}

	[Token(Token = "0x2000241")]
	public delegate void VoiceChanged();

	[Token(Token = "0x2000242")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x917FCC", Offset = "0x917FCC")]
	private sealed class <DestroyPrevAndCreateMultiplayerVoice>d__65 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MultiplayerRoom <>4__this;

		[Token(Token = "0x170000D3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E0C")]
			[Address(RVA = "0xD81FD8", Offset = "0xD81FD8", VA = "0xD81FD8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E0E")]
			[Address(RVA = "0xD82020", Offset = "0xD82020", VA = "0xD82020", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E09")]
		[Address(RVA = "0xD81ED4", Offset = "0xD81ED4", VA = "0xD81ED4")]
		[DebuggerHidden]
		public <DestroyPrevAndCreateMultiplayerVoice>d__65(int <>1__state)
		{
		}

		[Token(Token = "0x6000E0A")]
		[Address(RVA = "0xD81F00", Offset = "0xD81F00", VA = "0xD81F00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E0B")]
		[Address(RVA = "0xD81F04", Offset = "0xD81F04", VA = "0xD81F04", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E0D")]
		[Address(RVA = "0xD81FE0", Offset = "0xD81FE0", VA = "0xD81FE0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000243")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x917FDC", Offset = "0x917FDC")]
	private sealed class <>c
	{
		[Token(Token = "0x4000F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<Photon.Realtime.Player> <>9__75_0;

		[Token(Token = "0x6000E10")]
		[Address(RVA = "0xD81EA4", Offset = "0xD81EA4", VA = "0xD81EA4")]
		public <>c()
		{
		}

		[Token(Token = "0x6000E11")]
		[Address(RVA = "0xD81EAC", Offset = "0xD81EAC", VA = "0xD81EAC")]
		internal int <UpdateStartLoungeSession>b__75_0(Photon.Realtime.Player a, Photon.Realtime.Player b)
		{
			return default(int);
		}
	}

	[Token(Token = "0x4000F42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static MultiplayerRoom instance;

	[Token(Token = "0x4000F43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static VoiceChanged voiceChanged;

	[Token(Token = "0x4000F44")]
	protected const byte voiceGroup_All = 1;

	[Token(Token = "0x4000F45")]
	protected const byte voiceGroup_TeamA = 2;

	[Token(Token = "0x4000F46")]
	protected const byte voiceGroup_TeamB = 3;

	[Token(Token = "0x4000F47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected new PhotonView photonView;

	[Token(Token = "0x4000F48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<ChatLine> chatLines;

	[Token(Token = "0x4000F49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected Dictionary<int, Ping> playersPingTimes;

	[Token(Token = "0x4000F4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected float lastSendPing;

	[Token(Token = "0x4000F4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float instantiateDelay;

	[Token(Token = "0x4000F4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private RaiseEventOptions raiseEventOptionsOthers;

	[Token(Token = "0x4000F4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private SendOptions sendOptionsNotReliable;

	[Token(Token = "0x4000F4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private object[] sendContent1;

	[Token(Token = "0x4000F4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool voiceWasCreated;

	[Token(Token = "0x4000F50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private static bool voiceAllMuted;

	[Token(Token = "0x4000F51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	private static bool voiceMicrophoneMuted;

	[Token(Token = "0x4000F52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
	private static bool voiceTargetAll;

	[Token(Token = "0x4000F53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private PhotonVoiceNetwork voice;

	[Token(Token = "0x4000F54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GameObject voicePlayer;

	[Token(Token = "0x4000F55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int initVoiceParamsDelay;

	[Token(Token = "0x4000F56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int updateVoiceDelay;

	[Token(Token = "0x4000F57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool voiceSwitchedToMission;

	[Token(Token = "0x4000F58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int microphoneEnabled;

	[Token(Token = "0x4000F59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<string> removedPlayersIds;

	[Token(Token = "0x4000F5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int checkStartLoungeSessionDelay;

	[Token(Token = "0x4000F5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool startLoungeSession;

	[Token(Token = "0x4000F5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
	private bool startedLoungeSession;

	[Token(Token = "0x4000F5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x86")]
	private bool startPlayAgainSession;

	[Token(Token = "0x4000F5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x87")]
	private bool startedPlayAgainSession;

	[Token(Token = "0x4000F5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private List<Photon.Realtime.Player> cachePlayers;

	[Token(Token = "0x4000F60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float loungeInstantiateMultiplayerGameDelay;

	[Token(Token = "0x4000F61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float playAgainInstantiateMultiplayerGameDelay;

	[Token(Token = "0x4000F62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float sendGameInfoDelay;

	[Token(Token = "0x4000F63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private bool gameInfo_started;

	[Token(Token = "0x4000F64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9D")]
	private bool gameInfo_haveFreeSlotForPlayer;

	[Token(Token = "0x4000F65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private MultiplayerSessionConfig.PlayMode gameInfo_mode;

	[Token(Token = "0x4000F66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private int gameInfo_currPlayers;

	[Token(Token = "0x4000F67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int gameInfo_maxPlayers;

	[Token(Token = "0x4000F68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private bool hmdUnmounted;

	[Token(Token = "0x4000F69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAD")]
	private bool vrFocusLost;

	[Token(Token = "0x170000D2")]
	public static MultiplayerRoom Instance
	{
		[Token(Token = "0x6000DC3")]
		[Address(RVA = "0xE0E5AC", Offset = "0xE0E5AC", VA = "0xE0E5AC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000DC4")]
	[Address(RVA = "0xE0E610", Offset = "0xE0E610", VA = "0xE0E610")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DC5")]
	[Address(RVA = "0xE0EF14", Offset = "0xE0EF14", VA = "0xE0EF14")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000DC6")]
	[Address(RVA = "0xE0F2C4", Offset = "0xE0F2C4", VA = "0xE0F2C4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DC7")]
	[Address(RVA = "0xE10C34", Offset = "0xE10C34", VA = "0xE10C34")]
	private void HandleHMDMounted()
	{
	}

	[Token(Token = "0x6000DC8")]
	[Address(RVA = "0xE113DC", Offset = "0xE113DC", VA = "0xE113DC")]
	private void HandleHMDUnmounted()
	{
	}

	[Token(Token = "0x6000DC9")]
	[Address(RVA = "0xE11468", Offset = "0xE11468", VA = "0xE11468")]
	private void HandleVrFocusAcquired()
	{
	}

	[Token(Token = "0x6000DCA")]
	[Address(RVA = "0xE114F0", Offset = "0xE114F0", VA = "0xE114F0")]
	private void HandleVrFocusLost()
	{
	}

	[Token(Token = "0x6000DCB")]
	[Address(RVA = "0xE0FA5C", Offset = "0xE0FA5C", VA = "0xE0FA5C")]
	private void UpdatePing()
	{
	}

	[Token(Token = "0x6000DCC")]
	[Address(RVA = "0xE0C8C4", Offset = "0xE0C8C4", VA = "0xE0C8C4")]
	public float GetPing(Photon.Realtime.Player player)
	{
		return default(float);
	}

	[Token(Token = "0x6000DCD")]
	[Address(RVA = "0xDF6458", Offset = "0xDF6458", VA = "0xDF6458")]
	public void SendChat(string text, bool teamOnly)
	{
	}

	[Token(Token = "0x6000DCE")]
	[Address(RVA = "0xE1157C", Offset = "0xE1157C", VA = "0xE1157C")]
	public List<ChatLine> GetChatLines()
	{
		return null;
	}

	[Token(Token = "0x6000DCF")]
	[Address(RVA = "0xE11584", Offset = "0xE11584", VA = "0xE11584")]
	public static bool IsVoiceAvailable()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DD0")]
	[Address(RVA = "0xE115E8", Offset = "0xE115E8", VA = "0xE115E8")]
	public static void VoiceMuteAll(bool mute)
	{
	}

	[Token(Token = "0x6000DD1")]
	[Address(RVA = "0xE11710", Offset = "0xE11710", VA = "0xE11710")]
	public static bool IsVoiceMutedAll()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DD2")]
	[Address(RVA = "0xE11774", Offset = "0xE11774", VA = "0xE11774")]
	public static void VoiceMuteMicrophone(bool mute)
	{
	}

	[Token(Token = "0x6000DD3")]
	[Address(RVA = "0xE1189C", Offset = "0xE1189C", VA = "0xE1189C")]
	public static bool IsVoiceMutedMicrophone()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DD4")]
	[Address(RVA = "0xE11900", Offset = "0xE11900", VA = "0xE11900")]
	public static void VoiceSetSendToAll(bool all)
	{
	}

	[Token(Token = "0x6000DD5")]
	[Address(RVA = "0xE11A28", Offset = "0xE11A28", VA = "0xE11A28")]
	public static bool IsVoiceSendingToAll()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DD6")]
	[Address(RVA = "0xE10CBC", Offset = "0xE10CBC", VA = "0xE10CBC")]
	private void UpdateVoiceState(bool delayed = false)
	{
	}

	[Token(Token = "0x6000DD7")]
	[Address(RVA = "0xE11A8C", Offset = "0xE11A8C", VA = "0xE11A8C")]
	public void UpdateOnChangedVoiceSetting()
	{
	}

	[Token(Token = "0x6000DD8")]
	[Address(RVA = "0xE11CC4", Offset = "0xE11CC4", VA = "0xE11CC4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92869C", Offset = "0x92869C")]
	private IEnumerator DestroyPrevAndCreateMultiplayerVoice()
	{
		return null;
	}

	[Token(Token = "0x6000DD9")]
	[Address(RVA = "0xE0EBB4", Offset = "0xE0EBB4", VA = "0xE0EBB4")]
	private void CreateMultiplayerVoice()
	{
	}

	[Token(Token = "0x6000DDA")]
	[Address(RVA = "0xE0F4BC", Offset = "0xE0F4BC", VA = "0xE0F4BC")]
	private void UpdateVoice()
	{
	}

	[Token(Token = "0x6000DDB")]
	[Address(RVA = "0xE11D30", Offset = "0xE11D30", VA = "0xE11D30")]
	public void RemovePlayerFromRoom(NetPlayer player)
	{
	}

	[Token(Token = "0x6000DDC")]
	[Address(RVA = "0xDFE850", Offset = "0xDFE850", VA = "0xDFE850")]
	public void RemovePlayerFromRoom(Photon.Realtime.Player player)
	{
	}

	[Token(Token = "0x6000DDD")]
	[Address(RVA = "0xE11DD0", Offset = "0xE11DD0", VA = "0xE11DD0")]
	public bool WasPlayerRemovedFromRoom(Photon.Realtime.Player player)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DDE")]
	[Address(RVA = "0xE11E4C", Offset = "0xE11E4C", VA = "0xE11E4C")]
	public void SetLocalPlayerPlayAgain(int pa)
	{
	}

	[Token(Token = "0x6000DDF")]
	[Address(RVA = "0xE11EE8", Offset = "0xE11EE8", VA = "0xE11EE8")]
	public void OnCreatedMultiplayerGame()
	{
	}

	[Token(Token = "0x6000DE0")]
	[Address(RVA = "0xE11EF8", Offset = "0xE11EF8", VA = "0xE11EF8")]
	public void OnStartCreateSession()
	{
	}

	[Token(Token = "0x6000DE1")]
	[Address(RVA = "0xE11EF0", Offset = "0xE11EF0", VA = "0xE11EF0")]
	private void ResetStartSession()
	{
	}

	[Token(Token = "0x6000DE2")]
	[Address(RVA = "0xE0FB74", Offset = "0xE0FB74", VA = "0xE0FB74")]
	private void UpdateStartLoungeSession()
	{
	}

	[Token(Token = "0x6000DE3")]
	[Address(RVA = "0xE1030C", Offset = "0xE1030C", VA = "0xE1030C")]
	private void UpdateStartPlayAgainSession()
	{
	}

	[Token(Token = "0x6000DE4")]
	[Address(RVA = "0xE11F00", Offset = "0xE11F00", VA = "0xE11F00")]
	public bool GameHaveFreeSlotForPlayer()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DE5")]
	[Address(RVA = "0xDFE734", Offset = "0xDFE734", VA = "0xDFE734")]
	public bool GetGameInfo(out bool started, out bool haveFreeSlotForPlayer, out MultiplayerSessionConfig.PlayMode mode, out int currPlayers, out int maxPlayers)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DE6")]
	[Address(RVA = "0xE10674", Offset = "0xE10674", VA = "0xE10674")]
	private void UpdateGameHaveFreeSlotForPlayer()
	{
	}

	[Token(Token = "0x6000DE7")]
	[Address(RVA = "0xE11F08", Offset = "0xE11F08", VA = "0xE11F08")]
	public void OnNewPlayerInGame(Photon.Realtime.Player player, bool fromManualLoungeJoin)
	{
	}

	[Token(Token = "0x6000DE8")]
	[Address(RVA = "0xE127BC", Offset = "0xE127BC", VA = "0xE127BC")]
	public void OnDestroyingGameScene()
	{
	}

	[Token(Token = "0x6000DE9")]
	[Address(RVA = "0xE12C8C", Offset = "0xE12C8C", VA = "0xE12C8C")]
	public void OnExitFromSessionInLounge()
	{
	}

	[Token(Token = "0x6000DEA")]
	[Address(RVA = "0xDFEAFC", Offset = "0xDFEAFC", VA = "0xDFEAFC")]
	public void SendManualJoinToLoungeSessionRequest()
	{
	}

	[Token(Token = "0x6000DEB")]
	[Address(RVA = "0xE12F64", Offset = "0xE12F64", VA = "0xE12F64")]
	public GameObject InstatiateNotMasterRoomPlane(string prefabID, Vector3 pos, float heading, object[] instantiateData, int ownerActorNumber)
	{
		return null;
	}

	[Token(Token = "0x6000DEC")]
	[Address(RVA = "0xE13504", Offset = "0xE13504", VA = "0xE13504")]
	public void SendInSessionProperty(bool set)
	{
	}

	[Token(Token = "0x6000DED")]
	[Address(RVA = "0xE1364C", Offset = "0xE1364C", VA = "0xE1364C")]
	public void SendPlayAgain(bool set)
	{
	}

	[Token(Token = "0x6000DEE")]
	[Address(RVA = "0xE13794", Offset = "0xE13794", VA = "0xE13794")]
	[PunRPC]
	private void RPC_Chat(string text, bool teamOnly)
	{
	}

	[Token(Token = "0x6000DEF")]
	[Address(RVA = "0xE13ADC", Offset = "0xE13ADC", VA = "0xE13ADC")]
	[PunRPC]
	private void RPC_StartLoungeSession()
	{
	}

	[Token(Token = "0x6000DF0")]
	[Address(RVA = "0xE13BEC", Offset = "0xE13BEC", VA = "0xE13BEC")]
	[PunRPC]
	private void RPC_StartPlayAgainSession()
	{
	}

	[Token(Token = "0x6000DF1")]
	[Address(RVA = "0xE13CFC", Offset = "0xE13CFC", VA = "0xE13CFC")]
	[PunRPC]
	private void RPC_InstantiateMultiplayerGame(int multiplayerGameID, int multiplayerSendHelperID)
	{
	}

	[Token(Token = "0x6000DF2")]
	[Address(RVA = "0xE14164", Offset = "0xE14164", VA = "0xE14164")]
	[PunRPC]
	private void RPC_InstatiateNotMasterRoomPlane(int senderActorNumber, int viewID, string prefabID, Vector3 pos, float heading, object[] instantiateData)
	{
	}

	[Token(Token = "0x6000DF3")]
	[Address(RVA = "0xE144F0", Offset = "0xE144F0", VA = "0xE144F0")]
	[PunRPC]
	private void RPC_UpdateGameInfo(bool started, bool haveFreeSlotForPlayer, int mode, int currPlayers, int maxPlayersCnt)
	{
	}

	[Token(Token = "0x6000DF4")]
	[Address(RVA = "0xE1450C", Offset = "0xE1450C", VA = "0xE1450C")]
	[PunRPC]
	private void RPC_RequestManualJoinToLoungeSession(int requestActorNumber)
	{
	}

	[Token(Token = "0x6000DF5")]
	[Address(RVA = "0xE147B8", Offset = "0xE147B8", VA = "0xE147B8")]
	[PunRPC]
	private void RPC_OnNewPlayerManualJoined(int newActorNumber)
	{
	}

	[Token(Token = "0x6000DF6")]
	[Address(RVA = "0xE14970", Offset = "0xE14970", VA = "0xE14970")]
	[PunRPC]
	private void RPC_SendInSessionProperty(bool set)
	{
	}

	[Token(Token = "0x6000DF7")]
	[Address(RVA = "0xE149E8", Offset = "0xE149E8", VA = "0xE149E8")]
	[PunRPC]
	private void RPC_SendPlayAgain(bool set)
	{
	}

	[Token(Token = "0x6000DF8")]
	[Address(RVA = "0xE14A60", Offset = "0xE14A60", VA = "0xE14A60", Slot = "54")]
	public void OnEvent(EventData photonEvent)
	{
	}

	[Token(Token = "0x6000DF9")]
	[Address(RVA = "0xE14CC8", Offset = "0xE14CC8", VA = "0xE14CC8", Slot = "38")]
	public override void OnDisconnected(DisconnectCause cause)
	{
	}

	[Token(Token = "0x6000DFA")]
	[Address(RVA = "0xE14E2C", Offset = "0xE14E2C", VA = "0xE14E2C", Slot = "35")]
	public override void OnCreatedRoom()
	{
	}

	[Token(Token = "0x6000DFB")]
	[Address(RVA = "0xE14F38", Offset = "0xE14F38", VA = "0xE14F38", Slot = "41")]
	public override void OnJoinedRoom()
	{
	}

	[Token(Token = "0x6000DFC")]
	[Address(RVA = "0xE15044", Offset = "0xE15044", VA = "0xE15044", Slot = "42")]
	public override void OnPlayerEnteredRoom(Photon.Realtime.Player newPlayer)
	{
	}

	[Token(Token = "0x6000DFD")]
	[Address(RVA = "0xE15138", Offset = "0xE15138", VA = "0xE15138", Slot = "47")]
	public override void OnPlayerPropertiesUpdate(Photon.Realtime.Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
	{
	}

	[Token(Token = "0x6000DFE")]
	[Address(RVA = "0xE1580C", Offset = "0xE1580C", VA = "0xE1580C", Slot = "46")]
	public override void OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
	{
	}

	[Token(Token = "0x6000DFF")]
	[Address(RVA = "0xE15B70", Offset = "0xE15B70", VA = "0xE15B70")]
	public MultiplayerRoom()
	{
	}
}
[Token(Token = "0x2000244")]
public class MultiplayerSendHelper : MonoBehaviour, IPunObservable
{
	[Token(Token = "0x4000F73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private byte[] buffSend;

	[Token(Token = "0x4000F74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private PhotonView photonView;

	[Token(Token = "0x6000E12")]
	[Address(RVA = "0x150CC00", Offset = "0x150CC00", VA = "0x150CC00")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E13")]
	[Address(RVA = "0x150CC54", Offset = "0x150CC54", VA = "0x150CC54")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E14")]
	[Address(RVA = "0x150CDB8", Offset = "0x150CDB8", VA = "0x150CDB8")]
	public int GetViewID()
	{
		return default(int);
	}

	[Token(Token = "0x6000E15")]
	[Address(RVA = "0x150CE44", Offset = "0x150CE44", VA = "0x150CE44", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000E16")]
	[Address(RVA = "0x150CFDC", Offset = "0x150CFDC", VA = "0x150CFDC")]
	public MultiplayerSendHelper()
	{
	}
}
[Token(Token = "0x2000245")]
public class MultiplayerSessionConfig
{
	[Token(Token = "0x2000246")]
	public enum PlayMode
	{
		[Token(Token = "0x4000FA6")]
		TeamDeathmatch,
		[Token(Token = "0x4000FA7")]
		BattleRoyale,
		[Token(Token = "0x4000FA8")]
		TimedEndurance,
		[Token(Token = "0x4000FA9")]
		CommunityCoOpSingle,
		[Token(Token = "0x4000FAA")]
		CommunityCoOpMulti,
		[Token(Token = "0x4000FAB")]
		FlareDeathmatch,
		[Token(Token = "0x4000FAC")]
		Challange
	}

	[Token(Token = "0x2000247")]
	public enum TeamsMode
	{
		[Token(Token = "0x4000FAE")]
		Random,
		[Token(Token = "0x4000FAF")]
		Selectable
	}

	[Token(Token = "0x2000248")]
	public enum ChallangeMode
	{
		[Token(Token = "0x4000FB1")]
		Planes,
		[Token(Token = "0x4000FB2")]
		PlanesAndGround
	}

	[Token(Token = "0x2000249")]
	public enum AllowedPlanesMode
	{
		[Token(Token = "0x4000FB4")]
		All,
		[Token(Token = "0x4000FB5")]
		Selected
	}

	[Token(Token = "0x4000F75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string hostPlayerName;

	[Token(Token = "0x4000F76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlayMode mode;

	[Token(Token = "0x4000F77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int mapNum;

	[Token(Token = "0x4000F78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int currentPlayersCnt;

	[Token(Token = "0x4000F79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public GameMode.DifficultyMode diffMode;

	[Token(Token = "0x4000F7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int time;

	[Token(Token = "0x4000F7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public TeamsMode teamsMode;

	[Token(Token = "0x4000F7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ChallangeMode challangeMode;

	[Token(Token = "0x4000F7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int challangePointsLimit;

	[Token(Token = "0x4000F7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool specialTasksOn;

	[Token(Token = "0x4000F7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool friendlyFire;

	[Token(Token = "0x4000F80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public AllowedPlanesMode allowedPlanesMode;

	[Token(Token = "0x4000F81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int randomSeed;

	[Token(Token = "0x4000F82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public CustomCampaignData communityMissionData;

	[Token(Token = "0x4000F83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int communityMissionProgress;

	[Token(Token = "0x4000F84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<string> disallowedPlanes;

	[Token(Token = "0x4000F85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string initBotFakeMaster;

	[Token(Token = "0x4000F86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float createTime;

	[Token(Token = "0x4000F87")]
	public const string key_loungeId = "LI";

	[Token(Token = "0x4000F88")]
	public const string key_inSession = "IS";

	[Token(Token = "0x4000F89")]
	public const string key_playAgain = "PA";

	[Token(Token = "0x4000F8A")]
	public const string key_properties1 = "P1";

	[Token(Token = "0x4000F8B")]
	public const string key_properties2 = "P2";

	[Token(Token = "0x4000F8C")]
	public const string key_hostPlayerName = "H";

	[Token(Token = "0x4000F8D")]
	public const string key_mode = "D";

	[Token(Token = "0x4000F8E")]
	public const string key_map = "M";

	[Token(Token = "0x4000F8F")]
	public const string key_maxPlayersCnt = "P";

	[Token(Token = "0x4000F90")]
	public const string key_currentPlayersCnt = "U";

	[Token(Token = "0x4000F91")]
	public const string key_diffMode = "A";

	[Token(Token = "0x4000F92")]
	public const string key_time = "T";

	[Token(Token = "0x4000F93")]
	public const string key_teamsMode = "O";

	[Token(Token = "0x4000F94")]
	public const string key_challangeMode = "C";

	[Token(Token = "0x4000F95")]
	public const string key_challangePointsLimit = "L";

	[Token(Token = "0x4000F96")]
	public const string key_specialTasksOn = "S";

	[Token(Token = "0x4000F97")]
	public const string key_friendlyFire = "F";

	[Token(Token = "0x4000F98")]
	public const string key_allowedPlanesMode = "E";

	[Token(Token = "0x4000F99")]
	public const string key_randomSeed = "N";

	[Token(Token = "0x4000F9A")]
	public const string key_communityMissionData = "CD";

	[Token(Token = "0x4000F9B")]
	public const string key_communityMissionGuid = "CG";

	[Token(Token = "0x4000F9C")]
	public const string key_communityMissionAuthor = "AU";

	[Token(Token = "0x4000F9D")]
	public const string key_communityMissionsCount = "CC";

	[Token(Token = "0x4000F9E")]
	public const string key_communityMissionProgress = "CP";

	[Token(Token = "0x4000F9F")]
	public const string key_communityCampaignName = "CN";

	[Token(Token = "0x4000FA0")]
	public const string key_communityMissionName = "CM";

	[Token(Token = "0x4000FA1")]
	public const string key_communityMissionNation = "CT";

	[Token(Token = "0x4000FA2")]
	public const string key_disallowedPlanes = "DP";

	[Token(Token = "0x4000FA3")]
	public const string key_botPlayerPrefix = "Bot_";

	[Token(Token = "0x4000FA4")]
	public const string key_initBotFakeMaster = "I";

	[Token(Token = "0x6000E17")]
	[Address(RVA = "0x150D038", Offset = "0x150D038", VA = "0x150D038")]
	public static bool IsCoOpMode(PlayMode mode)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E18")]
	[Address(RVA = "0x150D054", Offset = "0x150D054", VA = "0x150D054")]
	public bool IsCoOpMode()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E19")]
	[Address(RVA = "0x150D068", Offset = "0x150D068", VA = "0x150D068")]
	public static bool IsPvPMode(PlayMode mode)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E1A")]
	[Address(RVA = "0x150D078", Offset = "0x150D078", VA = "0x150D078")]
	public bool IsPvPMode()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E1B")]
	[Address(RVA = "0x150D08C", Offset = "0x150D08C", VA = "0x150D08C")]
	public static bool Is2TeamsMode(PlayMode mode)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E1C")]
	[Address(RVA = "0x150D098", Offset = "0x150D098", VA = "0x150D098")]
	public bool Is2TeamsMode()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E1D")]
	[Address(RVA = "0x150D0A8", Offset = "0x150D0A8", VA = "0x150D0A8")]
	public static bool IsSpecialTasksMode(PlayMode mode)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E1E")]
	[Address(RVA = "0x150D0B8", Offset = "0x150D0B8", VA = "0x150D0B8")]
	public bool IsSpecialTasksMode()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E1F")]
	[Address(RVA = "0x150D0CC", Offset = "0x150D0CC", VA = "0x150D0CC")]
	public static bool IsFriendlyFirePossibleMode(PlayMode mode)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E20")]
	[Address(RVA = "0x150D0EC", Offset = "0x150D0EC", VA = "0x150D0EC")]
	public bool IsFriendlyFirePossibleMode()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E21")]
	[Address(RVA = "0x150D10C", Offset = "0x150D10C", VA = "0x150D10C")]
	public static bool IsTimedMode(PlayMode mode)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E22")]
	[Address(RVA = "0x150D128", Offset = "0x150D128", VA = "0x150D128")]
	public bool IsTimedMode()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E23")]
	[Address(RVA = "0x150D13C", Offset = "0x150D13C", VA = "0x150D13C")]
	public bool IsFlareDeathmatchMode()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E24")]
	[Address(RVA = "0x150D14C", Offset = "0x150D14C", VA = "0x150D14C")]
	public bool IsChallangeMode()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E25")]
	[Address(RVA = "0x150D15C", Offset = "0x150D15C", VA = "0x150D15C")]
	public bool IsChallangeModeWithPlaneAndGround()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E26")]
	[Address(RVA = "0x150D184", Offset = "0x150D184", VA = "0x150D184")]
	public static bool IsAllPlayersEnemyMode(PlayMode mode)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E27")]
	[Address(RVA = "0x150D1B4", Offset = "0x150D1B4", VA = "0x150D1B4")]
	public bool IsAllPlayersEnemyMode()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E28")]
	[Address(RVA = "0x150D1DC", Offset = "0x150D1DC", VA = "0x150D1DC")]
	public static bool IsAllPlayersFriendlyMode(PlayMode mode)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E29")]
	[Address(RVA = "0x150D1EC", Offset = "0x150D1EC", VA = "0x150D1EC")]
	public bool IsAllPlayersFriendlyMode()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E2A")]
	[Address(RVA = "0x150D200", Offset = "0x150D200", VA = "0x150D200")]
	public static bool IsAllowedPlanesPossibleMode(PlayMode mode)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E2B")]
	[Address(RVA = "0x150D210", Offset = "0x150D210", VA = "0x150D210")]
	public bool IsAllowedPlanesPossibleMode()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E2C")]
	[Address(RVA = "0x150D224", Offset = "0x150D224", VA = "0x150D224")]
	public bool IsAllowedPlane(string prefabId)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E2D")]
	[Address(RVA = "0x150D290", Offset = "0x150D290", VA = "0x150D290")]
	public void SwitchAllowedPlane(string prefabId)
	{
	}

	[Token(Token = "0x6000E2E")]
	[Address(RVA = "0x150D540", Offset = "0x150D540", VA = "0x150D540")]
	public void InitDefault()
	{
	}

	[Token(Token = "0x6000E2F")]
	[Address(RVA = "0x1506934", Offset = "0x1506934", VA = "0x1506934")]
	public void Copy(MultiplayerSessionConfig config)
	{
	}

	[Token(Token = "0x6000E30")]
	[Address(RVA = "0x150D664", Offset = "0x150D664", VA = "0x150D664")]
	public void InitFromPrefs(out long guidCoOpSingle, out long guidCoOpMulti)
	{
	}

	[Token(Token = "0x6000E31")]
	[Address(RVA = "0x150D918", Offset = "0x150D918", VA = "0x150D918")]
	public void SaveToPrefs(long guidCoOpSingle, long guidCoOpMulti)
	{
	}

	[Token(Token = "0x6000E32")]
	[Address(RVA = "0x150DAE4", Offset = "0x150DAE4", VA = "0x150DAE4")]
	public void SaveToProperties(ExitGames.Client.Photon.Hashtable customProperties, out string[] customRoomPropertiesForLobby)
	{
	}

	[Token(Token = "0x6000E33")]
	[Address(RVA = "0x150D440", Offset = "0x150D440", VA = "0x150D440")]
	private string GetDisallowedPlanesProperty()
	{
		return null;
	}

	[Token(Token = "0x6000E34")]
	[Address(RVA = "0x1507634", Offset = "0x1507634", VA = "0x1507634")]
	public void ReadFromProperties(ExitGames.Client.Photon.Hashtable customProperties)
	{
	}

	[Token(Token = "0x6000E35")]
	[Address(RVA = "0x150E7FC", Offset = "0x150E7FC", VA = "0x150E7FC")]
	public void Log()
	{
	}

	[Token(Token = "0x6000E36")]
	[Address(RVA = "0x1506874", Offset = "0x1506874", VA = "0x1506874")]
	public MultiplayerSessionConfig()
	{
	}
}
[Token(Token = "0x200024A")]
public static class MultiplayerSync
{
	[Token(Token = "0x200024B")]
	public struct UID
	{
		[Token(Token = "0x4000FBA")]
		public const long MaxValue = long.MaxValue;

		[Token(Token = "0x4000FBB")]
		public const int sizeBytes = 8;

		[Token(Token = "0x4000FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91B2BC", Offset = "0x91B2BC")]
		private long <Value>k__BackingField;

		[Token(Token = "0x170000D5")]
		public long Value
		{
			[Token(Token = "0x6000E49")]
			[Address(RVA = "0xD82F78", Offset = "0xD82F78", VA = "0xD82F78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9287EC", Offset = "0x9287EC")]
			readonly get
			{
				return default(long);
			}
			[Token(Token = "0x6000E4A")]
			[Address(RVA = "0xD82F80", Offset = "0xD82F80", VA = "0xD82F80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x928824", Offset = "0x928824")]
			set
			{
			}
		}

		[Token(Token = "0x6000E4B")]
		[Address(RVA = "0xD82F88", Offset = "0xD82F88", VA = "0xD82F88")]
		public static implicit operator UID(long val)
		{
			return default(UID);
		}

		[Token(Token = "0x6000E4C")]
		[Address(RVA = "0xD82F8C", Offset = "0xD82F8C", VA = "0xD82F8C")]
		public static implicit operator long(UID val)
		{
			return default(long);
		}

		[Token(Token = "0x6000E4D")]
		[Address(RVA = "0xD82F90", Offset = "0xD82F90", VA = "0xD82F90", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000E4E")]
		[Address(RVA = "0xD82FBC", Offset = "0xD82FBC", VA = "0xD82FBC", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E4F")]
		[Address(RVA = "0xD83040", Offset = "0xD83040", VA = "0xD83040")]
		public bool Equals(UID v)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E50")]
		[Address(RVA = "0xD83050", Offset = "0xD83050", VA = "0xD83050", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}

	[Token(Token = "0x200024C")]
	public class SyncState
	{
		[Token(Token = "0x4000FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int depth;

		[Token(Token = "0x4000FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public UnityEngine.Random.State state;

		[Token(Token = "0x4000FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UID nextUID;

		[Token(Token = "0x4000FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UID maxUID;

		[Token(Token = "0x4000FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string name;

		[Token(Token = "0x4000FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public SyncState dbgParent;

		[Token(Token = "0x4000FC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public StringBuilder dbgStack;

		[Token(Token = "0x4000FC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<SyncState> dbgChilds;

		[Token(Token = "0x6000E51")]
		[Address(RVA = "0xD82C60", Offset = "0xD82C60", VA = "0xD82C60")]
		public SyncState(string _name)
		{
		}

		[Token(Token = "0x6000E52")]
		[Address(RVA = "0xD82D28", Offset = "0xD82D28", VA = "0xD82D28")]
		public SyncState()
		{
		}

		[Token(Token = "0x6000E53")]
		[Address(RVA = "0xD82DE0", Offset = "0xD82DE0", VA = "0xD82DE0")]
		public string Serialize()
		{
			return null;
		}

		[Token(Token = "0x6000E54")]
		[Address(RVA = "0xD82E8C", Offset = "0xD82E8C", VA = "0xD82E8C")]
		public void Deserialize(string val)
		{
		}
	}

	[Token(Token = "0x4000FB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool started;

	[Token(Token = "0x4000FB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static SyncState rootSync;

	[Token(Token = "0x4000FB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static SyncState currParent;

	[Token(Token = "0x4000FB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static bool useDbgStack;

	[Token(Token = "0x6000E37")]
	[Address(RVA = "0x1516884", Offset = "0x1516884", VA = "0x1516884")]
	public static void InitializeSingleplayer()
	{
	}

	[Token(Token = "0x6000E38")]
	[Address(RVA = "0x15168E8", Offset = "0x15168E8", VA = "0x15168E8")]
	private static void InitializeRoot(SyncState root)
	{
	}

	[Token(Token = "0x6000E39")]
	[Address(RVA = "0x15169A8", Offset = "0x15169A8", VA = "0x15169A8")]
	public static void Initialize(int randSeed, bool _useDbgStack)
	{
	}

	[Token(Token = "0x6000E3A")]
	[Address(RVA = "0x1516A68", Offset = "0x1516A68", VA = "0x1516A68")]
	public static void Uninitialize()
	{
	}

	[Token(Token = "0x6000E3B")]
	[Address(RVA = "0x1516B0C", Offset = "0x1516B0C", VA = "0x1516B0C")]
	public static string GetDbgStack(bool forSend)
	{
		return null;
	}

	[Token(Token = "0x6000E3C")]
	[Address(RVA = "0x1516D90", Offset = "0x1516D90", VA = "0x1516D90")]
	private static void GetDbgStack(SyncState sync, StringBuilder stack)
	{
	}

	[Token(Token = "0x6000E3D")]
	[Address(RVA = "0x1516EA8", Offset = "0x1516EA8", VA = "0x1516EA8")]
	public static void AddCurrDbgStack(string dbg)
	{
	}

	[Token(Token = "0x6000E3E")]
	[Address(RVA = "0x1516F7C", Offset = "0x1516F7C", VA = "0x1516F7C")]
	public static void CheckDbgStack(string remoteDbgStack, int fromActorNumber)
	{
	}

	[Token(Token = "0x6000E3F")]
	[Address(RVA = "0x1517A38", Offset = "0x1517A38", VA = "0x1517A38")]
	public static void StartRootParent()
	{
	}

	[Token(Token = "0x6000E40")]
	[Address(RVA = "0x1517B30", Offset = "0x1517B30", VA = "0x1517B30")]
	public static void StopRootParent()
	{
	}

	[Token(Token = "0x6000E41")]
	[Address(RVA = "0x1517C28", Offset = "0x1517C28", VA = "0x1517C28")]
	public static void StartParent(SyncState sync)
	{
	}

	[Token(Token = "0x6000E42")]
	[Address(RVA = "0x15182CC", Offset = "0x15182CC", VA = "0x15182CC")]
	public static void StopParent(SyncState sync)
	{
	}

	[Token(Token = "0x6000E43")]
	[Address(RVA = "0x1518540", Offset = "0x1518540", VA = "0x1518540")]
	public static void InitSync(SyncState sync)
	{
	}

	[Token(Token = "0x6000E44")]
	[Address(RVA = "0x1517E98", Offset = "0x1517E98", VA = "0x1517E98")]
	public static int RandRange(SyncState sync, int min, int max, bool dbgLog = true)
	{
		return default(int);
	}

	[Token(Token = "0x6000E45")]
	[Address(RVA = "0x1518B6C", Offset = "0x1518B6C", VA = "0x1518B6C")]
	public static float RandRange(SyncState sync, float min, float max, bool dbgLog = true)
	{
		return default(float);
	}

	[Token(Token = "0x6000E46")]
	[Address(RVA = "0x1518FFC", Offset = "0x1518FFC", VA = "0x1518FFC")]
	public static UID GetNextUID(SyncState sync, [Optional] GameObject go)
	{
		return default(UID);
	}

	[Token(Token = "0x6000E47")]
	[Address(RVA = "0x1519160", Offset = "0x1519160", VA = "0x1519160")]
	public static UID GetNextUID([Optional] GameObject go)
	{
		return default(UID);
	}
}
[Token(Token = "0x200024D")]
public class MultiplayerVoicePlayer : MonoBehaviour, IPunInstantiateMagicCallback
{
	[Token(Token = "0x4000FC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int actorNumber;

	[Token(Token = "0x4000FC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool isLocal;

	[Token(Token = "0x4000FC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AudioSource audioSrc;

	[Token(Token = "0x4000FC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Speaker speaker;

	[Token(Token = "0x4000FC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool muted;

	[Token(Token = "0x4000FCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float requestOutputVolumeTime;

	[Token(Token = "0x4000FCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float currOutputVolume;

	[Token(Token = "0x4000FCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private FFTWindow window;

	[Token(Token = "0x4000FCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float[] samples;

	[Token(Token = "0x4000FCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float lastCalcOutputTime;

	[Token(Token = "0x4000FCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<MultiplayerVoicePlayer> voicePlayers;

	[Token(Token = "0x6000E55")]
	[Address(RVA = "0x15112B4", Offset = "0x15112B4", VA = "0x15112B4")]
	public static MultiplayerVoicePlayer GetVoicePlayer(int actorNum)
	{
		return null;
	}

	[Token(Token = "0x6000E56")]
	[Address(RVA = "0x151938C", Offset = "0x151938C", VA = "0x151938C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E57")]
	[Address(RVA = "0x1519418", Offset = "0x1519418", VA = "0x1519418")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000E58")]
	[Address(RVA = "0x15195A4", Offset = "0x15195A4", VA = "0x15195A4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E59")]
	[Address(RVA = "0x15197B0", Offset = "0x15197B0", VA = "0x15197B0", Slot = "4")]
	public void OnPhotonInstantiate(PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000E5A")]
	[Address(RVA = "0x15198D4", Offset = "0x15198D4", VA = "0x15198D4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000E5B")]
	[Address(RVA = "0x151A064", Offset = "0x151A064", VA = "0x151A064")]
	public bool IsMuted()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E5C")]
	[Address(RVA = "0x151156C", Offset = "0x151156C", VA = "0x151156C")]
	public void Mute()
	{
	}

	[Token(Token = "0x6000E5D")]
	[Address(RVA = "0x1511488", Offset = "0x1511488", VA = "0x1511488")]
	public void Unmute()
	{
	}

	[Token(Token = "0x6000E5E")]
	[Address(RVA = "0x1511A78", Offset = "0x1511A78", VA = "0x1511A78")]
	public float GetOutputVolume()
	{
		return default(float);
	}

	[Token(Token = "0x6000E5F")]
	[Address(RVA = "0x1519E18", Offset = "0x1519E18", VA = "0x1519E18")]
	private void CalcOutputVolume()
	{
	}

	[Token(Token = "0x6000E60")]
	[Address(RVA = "0x151A06C", Offset = "0x151A06C", VA = "0x151A06C")]
	public MultiplayerVoicePlayer()
	{
	}
}
[Token(Token = "0x200024E")]
public class MultiplayerVoiceRecorderSettings : MonoBehaviour
{
	[Token(Token = "0x4000FD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static MultiplayerVoiceRecorderSettings instance;

	[Token(Token = "0x6000E62")]
	[Address(RVA = "0x151A158", Offset = "0x151A158", VA = "0x151A158")]
	public static void GetRecorderSettings(out Recorder.MicType micType, out int unityMicIndex, out int photonMicIndex)
	{
	}

	[Token(Token = "0x6000E63")]
	[Address(RVA = "0x151A34C", Offset = "0x151A34C", VA = "0x151A34C")]
	public static void SetRecorderSettings(Recorder.MicType micType, int unityMicIndex, int photonMicIndex)
	{
	}

	[Token(Token = "0x6000E64")]
	[Address(RVA = "0x151A280", Offset = "0x151A280", VA = "0x151A280")]
	public static int GetPhotonMicIDIndex(int ID)
	{
		return default(int);
	}

	[Token(Token = "0x6000E65")]
	[Address(RVA = "0x151A7AC", Offset = "0x151A7AC", VA = "0x151A7AC")]
	public static string[] GetUnityMicrophoneDevices()
	{
		return null;
	}

	[Token(Token = "0x6000E66")]
	[Address(RVA = "0x151A7B4", Offset = "0x151A7B4", VA = "0x151A7B4")]
	public static string[] GetPhotonMicrophoneDevices()
	{
		return null;
	}

	[Token(Token = "0x6000E67")]
	[Address(RVA = "0x151A8F8", Offset = "0x151A8F8", VA = "0x151A8F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E68")]
	[Address(RVA = "0x151A94C", Offset = "0x151A94C", VA = "0x151A94C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000E69")]
	[Address(RVA = "0x151A56C", Offset = "0x151A56C", VA = "0x151A56C")]
	private void UpdateRecorderSettings()
	{
	}

	[Token(Token = "0x6000E6A")]
	[Address(RVA = "0x151A998", Offset = "0x151A998", VA = "0x151A998")]
	public MultiplayerVoiceRecorderSettings()
	{
	}
}
[Token(Token = "0x200024F")]
public class MultiplayerVoiceInputVolumeReaderFloat : IProcessor<float>, IDisposable
{
	[Token(Token = "0x4000FD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float currOutputVolume;

	[Token(Token = "0x4000FD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int request;

	[Token(Token = "0x6000E6B")]
	[Address(RVA = "0x1519238", Offset = "0x1519238", VA = "0x1519238", Slot = "4")]
	public float[] Process(float[] buf)
	{
		return null;
	}

	[Token(Token = "0x6000E6C")]
	[Address(RVA = "0x15192B8", Offset = "0x15192B8", VA = "0x15192B8")]
	public float GetOutputVolume()
	{
		return default(float);
	}

	[Token(Token = "0x6000E6D")]
	[Address(RVA = "0x15192C8", Offset = "0x15192C8", VA = "0x15192C8", Slot = "5")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6000E6E")]
	[Address(RVA = "0x15192CC", Offset = "0x15192CC", VA = "0x15192CC")]
	public MultiplayerVoiceInputVolumeReaderFloat()
	{
	}
}
[Token(Token = "0x2000250")]
public class MultiplayerVoiceInputVolumeReaderShort : IProcessor<short>, IDisposable
{
	[Token(Token = "0x4000FD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float currOutputVolume;

	[Token(Token = "0x4000FD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int request;

	[Token(Token = "0x6000E6F")]
	[Address(RVA = "0x15192D4", Offset = "0x15192D4", VA = "0x15192D4", Slot = "4")]
	public short[] Process(short[] buf)
	{
		return null;
	}

	[Token(Token = "0x6000E70")]
	[Address(RVA = "0x1519370", Offset = "0x1519370", VA = "0x1519370")]
	public float GetOutputVolume()
	{
		return default(float);
	}

	[Token(Token = "0x6000E71")]
	[Address(RVA = "0x1519380", Offset = "0x1519380", VA = "0x1519380", Slot = "5")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6000E72")]
	[Address(RVA = "0x1519384", Offset = "0x1519384", VA = "0x1519384")]
	public MultiplayerVoiceInputVolumeReaderShort()
	{
	}
}
[Token(Token = "0x2000251")]
public class MultiplayerVoiceVolumeControl : MonoBehaviour
{
	[Token(Token = "0x4000FD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioMixer voiceMixer;

	[Token(Token = "0x4000FD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MultiplayerVoiceVolumeControl instance;

	[Token(Token = "0x4000FD7")]
	private const float volumeScale_PC_min = -10f;

	[Token(Token = "0x4000FD8")]
	private const float volumeScale_PC_max = 10f;

	[Token(Token = "0x4000FD9")]
	private const float volumeScale_Quest_min = -5f;

	[Token(Token = "0x4000FDA")]
	private const float volumeScale_Quest_max = 20f;

	[Token(Token = "0x4000FDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float lastVolume;

	[Token(Token = "0x4000FDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MultiplayerVoiceInputVolumeReaderFloat floatProcessor;

	[Token(Token = "0x4000FDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MultiplayerVoiceInputVolumeReaderShort shortProcessor;

	[Token(Token = "0x4000FDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float lastCheckMicState;

	[Token(Token = "0x4000FDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int microphoneAvailable;

	[Token(Token = "0x6000E73")]
	[Address(RVA = "0xCAC390", Offset = "0xCAC390", VA = "0xCAC390")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E74")]
	[Address(RVA = "0xCAC3E0", Offset = "0xCAC3E0", VA = "0xCAC3E0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000E75")]
	[Address(RVA = "0xCAC484", Offset = "0xCAC484", VA = "0xCAC484")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E76")]
	[Address(RVA = "0xCAC5E8", Offset = "0xCAC5E8", VA = "0xCAC5E8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E77")]
	[Address(RVA = "0xCAC89C", Offset = "0xCAC89C", VA = "0xCAC89C")]
	private void PhotonVoiceCreated(PhotonVoiceCreatedParams p)
	{
	}

	[Token(Token = "0x6000E78")]
	[Address(RVA = "0xCACC18", Offset = "0xCACC18", VA = "0xCACC18")]
	public float GetOutputVolume()
	{
		return default(float);
	}

	[Token(Token = "0x6000E79")]
	[Address(RVA = "0xCACC44", Offset = "0xCACC44", VA = "0xCACC44")]
	public MultiplayerVoiceVolumeControl()
	{
	}

	[Token(Token = "0x6000E7A")]
	[Address(RVA = "0xCACC5C", Offset = "0xCACC5C", VA = "0xCACC5C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x928834", Offset = "0x928834")]
	private void <Update>b__14_0(Message<MicrophoneAvailabilityState> state)
	{
	}
}
[Token(Token = "0x2000252")]
public static class NetFriends
{
	[Token(Token = "0x2000253")]
	public enum Platform
	{
		[Token(Token = "0x4000FE5")]
		Unknown,
		[Token(Token = "0x4000FE6")]
		Oculus,
		[Token(Token = "0x4000FE7")]
		Steam
	}

	[Token(Token = "0x2000254")]
	public delegate void FriendRequest(bool result);

	[Token(Token = "0x2000255")]
	private abstract class FriendWrapper
	{
		[Token(Token = "0x6000E83")]
		[Address(RVA = "0xD83394", Offset = "0xD83394", VA = "0xD83394", Slot = "4")]
		public virtual void SendFriendRequest(ulong userId, FriendRequest callback)
		{
		}

		[Token(Token = "0x6000E84")]
		public abstract void FetchFriends();

		[Token(Token = "0x6000E85")]
		[Address(RVA = "0xD830B8", Offset = "0xD830B8", VA = "0xD830B8")]
		protected FriendWrapper()
		{
		}
	}

	[Token(Token = "0x2000256")]
	private class OculusFriends : FriendWrapper
	{
		[Token(Token = "0x2000257")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x917FEC", Offset = "0x917FEC")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4000FE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ulong userId;

			[Token(Token = "0x4000FEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public FriendRequest callback;

			[Token(Token = "0x6000E8A")]
			[Address(RVA = "0x269D074", Offset = "0x269D074", VA = "0x269D074")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6000E8B")]
			[Address(RVA = "0x269D07C", Offset = "0x269D07C", VA = "0x269D07C")]
			internal void <SendFriendRequest>b__0(Message<LaunchFriendRequestFlowResult> msg)
			{
			}
		}

		[Token(Token = "0x4000FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool retryFriends;

		[Token(Token = "0x6000E86")]
		[Address(RVA = "0xD83408", Offset = "0xD83408", VA = "0xD83408", Slot = "5")]
		public override void FetchFriends()
		{
		}

		[Token(Token = "0x6000E87")]
		[Address(RVA = "0xD83528", Offset = "0xD83528", VA = "0xD83528", Slot = "4")]
		public override void SendFriendRequest(ulong userId, FriendRequest callback)
		{
		}

		[Token(Token = "0x6000E88")]
		[Address(RVA = "0xD83628", Offset = "0xD83628", VA = "0xD83628")]
		public OculusFriends()
		{
		}

		[Token(Token = "0x6000E89")]
		[Address(RVA = "0xD83638", Offset = "0xD83638", VA = "0xD83638")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x928844", Offset = "0x928844")]
		private void <FetchFriends>g__LoadList|1_0(Message<UserList> msg)
		{
		}
	}

	[Token(Token = "0x2000258")]
	private class SteamFriends : FallbackFriends
	{
		[Token(Token = "0x6000E8C")]
		[Address(RVA = "0xD838AC", Offset = "0xD838AC", VA = "0xD838AC")]
		public SteamFriends()
		{
		}
	}

	[Token(Token = "0x2000259")]
	private class FallbackFriends : FriendWrapper
	{
		[Token(Token = "0x6000E8D")]
		[Address(RVA = "0xD830A8", Offset = "0xD830A8", VA = "0xD830A8", Slot = "5")]
		public override void FetchFriends()
		{
		}

		[Token(Token = "0x6000E8E")]
		[Address(RVA = "0xD830AC", Offset = "0xD830AC", VA = "0xD830AC", Slot = "4")]
		public override void SendFriendRequest(ulong userId, FriendRequest callback)
		{
		}

		[Token(Token = "0x6000E8F")]
		[Address(RVA = "0xD830B0", Offset = "0xD830B0", VA = "0xD830B0")]
		public FallbackFriends()
		{
		}
	}

	[Token(Token = "0x4000FE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ulong selfUserId;

	[Token(Token = "0x4000FE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly Platform platformType;

	[Token(Token = "0x4000FE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly FriendWrapper wrapper;

	[Token(Token = "0x4000FE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static HashSet<ulong> userFriends;

	[Token(Token = "0x6000E7B")]
	[Address(RVA = "0xCB12D4", Offset = "0xCB12D4", VA = "0xCB12D4")]
	static NetFriends()
	{
	}

	[Token(Token = "0x6000E7C")]
	[Address(RVA = "0xCB14A0", Offset = "0xCB14A0", VA = "0xCB14A0")]
	public static void SendFriendRequest(ulong userId, FriendRequest callback)
	{
	}

	[Token(Token = "0x6000E7D")]
	[Address(RVA = "0xCB152C", Offset = "0xCB152C", VA = "0xCB152C")]
	public static void Init(ulong userId)
	{
	}

	[Token(Token = "0x6000E7E")]
	[Address(RVA = "0xCB15B0", Offset = "0xCB15B0", VA = "0xCB15B0")]
	public static bool AreFriends(ulong userId)
	{
		return default(bool);
	}
}
[Token(Token = "0x200025A")]
public class NetPlayer
{
	[Token(Token = "0x200025B")]
	public enum RemoveReason
	{
		[Token(Token = "0x4001013")]
		RemovedByHost,
		[Token(Token = "0x4001014")]
		MaxPlayersReached,
		[Token(Token = "0x4001015")]
		SessionStarted
	}

	[Token(Token = "0x4000FEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private string nickName;

	[Token(Token = "0x4000FEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool ready;

	[Token(Token = "0x4000FED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private MultiplayerConfig.Team team;

	[Token(Token = "0x4000FEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string plane;

	[Token(Token = "0x4000FEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int expLevel;

	[Token(Token = "0x4000FF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int communityPlaneIdx;

	[Token(Token = "0x4000FF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool removeFromRoom;

	[Token(Token = "0x4000FF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int gunnerAtPlayerId;

	[Token(Token = "0x4000FF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int gunnerIdx;

	[Token(Token = "0x4000FF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int gunnerSlotLockedMask;

	[Token(Token = "0x4000FF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool observerMode;

	[Token(Token = "0x4000FF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int observerAtPlayerId;

	[Token(Token = "0x4000FF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool microphoneAvailable;

	[Token(Token = "0x4000FF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int[] botPlaneUpgrades;

	[Token(Token = "0x4000FF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool bot;

	[Token(Token = "0x4000FFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool fakeMasterBot;

	[Token(Token = "0x4000FFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Photon.Realtime.Player punPlayer;

	[Token(Token = "0x4000FFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool isLocalPlayer;

	[Token(Token = "0x4000FFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int playerId;

	[Token(Token = "0x4000FFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool removed;

	[Token(Token = "0x4000FFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int botRoomPropertyNum;

	[Token(Token = "0x4001000")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool botChanged;

	[Token(Token = "0x4001001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float createTime;

	[Token(Token = "0x4001002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float botReadyDelay;

	[Token(Token = "0x4001003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float botRemoveDelay;

	[Token(Token = "0x4001004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float botStartGameDelay;

	[Token(Token = "0x4001005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool botStartGameCalled;

	[Token(Token = "0x4001006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int setTeamFrame;

	[Token(Token = "0x4001007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private int setGunnerFrame;

	[Token(Token = "0x4001008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int setGunnerIdxFrame;

	[Token(Token = "0x4001009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private int lastObserverAtPlayerId;

	[Token(Token = "0x400100A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly string[] botNames_global;

	[Token(Token = "0x400100B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int[] botNames_global_expLvl;

	[Token(Token = "0x400100C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly string[] botNames_eu;

	[Token(Token = "0x400100D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static int[] botNames_eu_expLvl;

	[Token(Token = "0x400100E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly string[] botNames_ru;

	[Token(Token = "0x400100F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static int[] botNames_ru_expLvl;

	[Token(Token = "0x4001010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static readonly string[] botNames_asia;

	[Token(Token = "0x4001011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static int[] botNames_asia_expLvl;

	[Token(Token = "0x6000E90")]
	[Address(RVA = "0xCB638C", Offset = "0xCB638C", VA = "0xCB638C")]
	public ulong GetPlatformUserId()
	{
		return default(ulong);
	}

	[Token(Token = "0x6000E91")]
	[Address(RVA = "0xCB63A0", Offset = "0xCB63A0", VA = "0xCB63A0")]
	public NetFriends.Platform GetPlatformType()
	{
		return default(NetFriends.Platform);
	}

	[Token(Token = "0x6000E92")]
	[Address(RVA = "0xCB63B4", Offset = "0xCB63B4", VA = "0xCB63B4")]
	public bool IsBot()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E93")]
	[Address(RVA = "0xCB63BC", Offset = "0xCB63BC", VA = "0xCB63BC")]
	public bool IsFakeMasterBot()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E94")]
	[Address(RVA = "0xCB63C4", Offset = "0xCB63C4", VA = "0xCB63C4")]
	public bool IsReal()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E95")]
	[Address(RVA = "0xCB63D4", Offset = "0xCB63D4", VA = "0xCB63D4")]
	public Photon.Realtime.Player GetPUNPlayer()
	{
		return null;
	}

	[Token(Token = "0x6000E96")]
	[Address(RVA = "0xCB63DC", Offset = "0xCB63DC", VA = "0xCB63DC")]
	public int GetPlayerId()
	{
		return default(int);
	}

	[Token(Token = "0x6000E97")]
	[Address(RVA = "0xCB63E4", Offset = "0xCB63E4", VA = "0xCB63E4")]
	public bool IsLocalPlayer()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E98")]
	[Address(RVA = "0xCB63EC", Offset = "0xCB63EC", VA = "0xCB63EC")]
	public string GetNickName()
	{
		return null;
	}

	[Token(Token = "0x6000E99")]
	[Address(RVA = "0xCB64A4", Offset = "0xCB64A4", VA = "0xCB64A4")]
	public bool IsReady()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E9A")]
	[Address(RVA = "0xCB64C8", Offset = "0xCB64C8", VA = "0xCB64C8")]
	public void SetReady(bool _ready)
	{
	}

	[Token(Token = "0x6000E9B")]
	[Address(RVA = "0xCB64F8", Offset = "0xCB64F8", VA = "0xCB64F8")]
	public MultiplayerConfig.Team GetTeam()
	{
		return default(MultiplayerConfig.Team);
	}

	[Token(Token = "0x6000E9C")]
	[Address(RVA = "0xCB654C", Offset = "0xCB654C", VA = "0xCB654C")]
	public void SetTeam(MultiplayerConfig.Team _team)
	{
	}

	[Token(Token = "0x6000E9D")]
	[Address(RVA = "0xCB65A8", Offset = "0xCB65A8", VA = "0xCB65A8")]
	public string GetPlane()
	{
		return null;
	}

	[Token(Token = "0x6000E9E")]
	[Address(RVA = "0xCB65CC", Offset = "0xCB65CC", VA = "0xCB65CC")]
	public void SetPlane(string _plane)
	{
	}

	[Token(Token = "0x6000E9F")]
	[Address(RVA = "0xCB65F4", Offset = "0xCB65F4", VA = "0xCB65F4")]
	public int GetExpLevel()
	{
		return default(int);
	}

	[Token(Token = "0x6000EA0")]
	[Address(RVA = "0xCB661C", Offset = "0xCB661C", VA = "0xCB661C")]
	public void SetExpLevel(int _expLevel)
	{
	}

	[Token(Token = "0x6000EA1")]
	[Address(RVA = "0xCB6644", Offset = "0xCB6644", VA = "0xCB6644")]
	public int GetCommunityPlaneIdx()
	{
		return default(int);
	}

	[Token(Token = "0x6000EA2")]
	[Address(RVA = "0xCB6668", Offset = "0xCB6668", VA = "0xCB6668")]
	public void SetCommunityPlaneIdx(int _communityPlaneIdx)
	{
	}

	[Token(Token = "0x6000EA3")]
	[Address(RVA = "0xCB6690", Offset = "0xCB6690", VA = "0xCB6690")]
	public bool GetRemoveFromRoom()
	{
		return default(bool);
	}

	[Token(Token = "0x6000EA4")]
	[Address(RVA = "0xCB66B4", Offset = "0xCB66B4", VA = "0xCB66B4")]
	public void SetRemoveFromRoom(RemoveReason reason = RemoveReason.RemovedByHost)
	{
	}

	[Token(Token = "0x6000EA5")]
	[Address(RVA = "0xCB66DC", Offset = "0xCB66DC", VA = "0xCB66DC")]
	public void ResetRemovedFromRoom()
	{
	}

	[Token(Token = "0x6000EA6")]
	[Address(RVA = "0xCB6704", Offset = "0xCB6704", VA = "0xCB6704")]
	public int GetGunnerAtPlayerId()
	{
		return default(int);
	}

	[Token(Token = "0x6000EA7")]
	[Address(RVA = "0xCB6758", Offset = "0xCB6758", VA = "0xCB6758")]
	public bool IsGunner()
	{
		return default(bool);
	}

	[Token(Token = "0x6000EA8")]
	[Address(RVA = "0xCB6774", Offset = "0xCB6774", VA = "0xCB6774")]
	public void SetGunnerAtPlayerId(int atPlayerId)
	{
	}

	[Token(Token = "0x6000EA9")]
	[Address(RVA = "0xCB67D0", Offset = "0xCB67D0", VA = "0xCB67D0")]
	public int GetGunnerIdx()
	{
		return default(int);
	}

	[Token(Token = "0x6000EAA")]
	[Address(RVA = "0xCB6824", Offset = "0xCB6824", VA = "0xCB6824")]
	public void SetGunnerIdx(int idx)
	{
	}

	[Token(Token = "0x6000EAB")]
	[Address(RVA = "0xCB6880", Offset = "0xCB6880", VA = "0xCB6880")]
	public bool IsGunnerSlotLocked(int idx)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EAC")]
	[Address(RVA = "0xCB68B4", Offset = "0xCB68B4", VA = "0xCB68B4")]
	public void SetGunnerSlotLocked(int idx, bool locked)
	{
	}

	[Token(Token = "0x6000EAD")]
	[Address(RVA = "0xCB68F8", Offset = "0xCB68F8", VA = "0xCB68F8")]
	public void ResetGunnerSlotLocked()
	{
	}

	[Token(Token = "0x6000EAE")]
	[Address(RVA = "0xCB6920", Offset = "0xCB6920", VA = "0xCB6920")]
	public bool IsObserverMode()
	{
		return default(bool);
	}

	[Token(Token = "0x6000EAF")]
	[Address(RVA = "0xCB6944", Offset = "0xCB6944", VA = "0xCB6944")]
	public void SetObserverMode(bool o)
	{
	}

	[Token(Token = "0x6000EB0")]
	[Address(RVA = "0xCB6974", Offset = "0xCB6974", VA = "0xCB6974")]
	public int GetObserverAtPlayerId()
	{
		return default(int);
	}

	[Token(Token = "0x6000EB1")]
	[Address(RVA = "0xCB6998", Offset = "0xCB6998", VA = "0xCB6998")]
	public int GetLastObserverAtPlayerId()
	{
		return default(int);
	}

	[Token(Token = "0x6000EB2")]
	[Address(RVA = "0xCB69A0", Offset = "0xCB69A0", VA = "0xCB69A0")]
	public void SetObserverAtPlayerId(int atPlayerId)
	{
	}

	[Token(Token = "0x6000EB3")]
	[Address(RVA = "0xCB69D0", Offset = "0xCB69D0", VA = "0xCB69D0")]
	public bool IsMicrophoneAvailable()
	{
		return default(bool);
	}

	[Token(Token = "0x6000EB4")]
	[Address(RVA = "0xCB69F4", Offset = "0xCB69F4", VA = "0xCB69F4")]
	public void SetMicrophoneAvailable(bool a)
	{
	}

	[Token(Token = "0x6000EB5")]
	[Address(RVA = "0xCB6A24", Offset = "0xCB6A24", VA = "0xCB6A24")]
	public int[] GetBotPlaneUpgrades()
	{
		return null;
	}

	[Token(Token = "0x6000EB6")]
	[Address(RVA = "0xCB6A2C", Offset = "0xCB6A2C", VA = "0xCB6A2C")]
	public static int GetBotRandomSeed(string name)
	{
		return default(int);
	}

	[Token(Token = "0x6000EB7")]
	[Address(RVA = "0xCB6A9C", Offset = "0xCB6A9C", VA = "0xCB6A9C")]
	private string SelectPlanePrefabID()
	{
		return null;
	}

	[Token(Token = "0x6000EB8")]
	[Address(RVA = "0xCB6CA8", Offset = "0xCB6CA8", VA = "0xCB6CA8")]
	public void UpdateSelectedPlane()
	{
	}

	[Token(Token = "0x6000EB9")]
	[Address(RVA = "0xCB6E68", Offset = "0xCB6E68", VA = "0xCB6E68")]
	private static void InitBotNameExpLvl(string[] botName, out int[] botName_expLvl, int maxLvl)
	{
	}

	[Token(Token = "0x6000EBA")]
	[Address(RVA = "0xCB703C", Offset = "0xCB703C", VA = "0xCB703C")]
	private static void InitBotNameExpLvl()
	{
	}

	[Token(Token = "0x6000EBB")]
	[Address(RVA = "0xCB7124", Offset = "0xCB7124", VA = "0xCB7124")]
	private static bool FindBotExpLvl(string name, string[] botName, int[] botName_expLvl, out int lvl)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EBC")]
	[Address(RVA = "0xCB71E0", Offset = "0xCB71E0", VA = "0xCB71E0")]
	private static int FindBotExpLvl(string name)
	{
		return default(int);
	}

	[Token(Token = "0x6000EBD")]
	[Address(RVA = "0xCB7314", Offset = "0xCB7314", VA = "0xCB7314")]
	public static string GetRandomMasterBotName()
	{
		return null;
	}

	[Token(Token = "0x6000EBE")]
	[Address(RVA = "0xCB7378", Offset = "0xCB7378", VA = "0xCB7378")]
	public static string GetRandomMasterBotName(out int expLvl)
	{
		return null;
	}

	[Token(Token = "0x6000EBF")]
	[Address(RVA = "0xCB7698", Offset = "0xCB7698", VA = "0xCB7698")]
	public void InitBot(int roomPropertyNum, string fakeMasterName)
	{
	}

	[Token(Token = "0x6000EC0")]
	[Address(RVA = "0xCB7E38", Offset = "0xCB7E38", VA = "0xCB7E38")]
	public void InitReal(Photon.Realtime.Player _punPlayer)
	{
	}

	[Token(Token = "0x6000EC1")]
	[Address(RVA = "0xCB7EF0", Offset = "0xCB7EF0", VA = "0xCB7EF0")]
	public int GetBotRoomPropertyNum()
	{
		return default(int);
	}

	[Token(Token = "0x6000EC2")]
	[Address(RVA = "0xCB7EF8", Offset = "0xCB7EF8", VA = "0xCB7EF8")]
	public void SetRemoved(bool r)
	{
	}

	[Token(Token = "0x6000EC3")]
	[Address(RVA = "0xCB7F04", Offset = "0xCB7F04", VA = "0xCB7F04")]
	public void OnDisconnectedRealPlayer()
	{
	}

	[Token(Token = "0x6000EC4")]
	[Address(RVA = "0xCB7F14", Offset = "0xCB7F14", VA = "0xCB7F14")]
	public void OnDisconnectedLocalPlayer()
	{
	}

	[Token(Token = "0x6000EC5")]
	[Address(RVA = "0xCB7F1C", Offset = "0xCB7F1C", VA = "0xCB7F1C")]
	public bool IsRemoved()
	{
		return default(bool);
	}

	[Token(Token = "0x6000EC6")]
	[Address(RVA = "0xCB7F24", Offset = "0xCB7F24", VA = "0xCB7F24")]
	public string SerializeBot()
	{
		return null;
	}

	[Token(Token = "0x6000EC7")]
	[Address(RVA = "0xCB8178", Offset = "0xCB8178", VA = "0xCB8178")]
	public void DeserializeBot(int roomPropertyNum, string _save)
	{
	}

	[Token(Token = "0x6000EC8")]
	[Address(RVA = "0xCB8468", Offset = "0xCB8468", VA = "0xCB8468")]
	public void UpdateChanged(NetPlayer changes)
	{
	}

	[Token(Token = "0x6000EC9")]
	[Address(RVA = "0xCB8520", Offset = "0xCB8520", VA = "0xCB8520")]
	public bool StepSessionBot()
	{
		return default(bool);
	}

	[Token(Token = "0x6000ECA")]
	[Address(RVA = "0xCB87C0", Offset = "0xCB87C0", VA = "0xCB87C0")]
	public NetPlayer()
	{
	}
}
[Token(Token = "0x200025C")]
public class PUNGamePrefabsPool : IPunPrefabPool
{
	[Token(Token = "0x6000ECC")]
	[Address(RVA = "0xF49784", Offset = "0xF49784", VA = "0xF49784", Slot = "4")]
	public GameObject Instantiate(string prefabId, Vector3 position, Quaternion rotation)
	{
		return null;
	}

	[Token(Token = "0x6000ECD")]
	[Address(RVA = "0xF49A8C", Offset = "0xF49A8C", VA = "0xF49A8C", Slot = "5")]
	public void Destroy(GameObject gameObject)
	{
	}

	[Token(Token = "0x6000ECE")]
	[Address(RVA = "0xF49D54", Offset = "0xF49D54", VA = "0xF49D54")]
	public PUNGamePrefabsPool()
	{
	}
}
[Token(Token = "0x200025D")]
public class PUNWrapper : MonoBehaviourPunCallbacks
{
	[Token(Token = "0x200025E")]
	public enum Error
	{
		[Token(Token = "0x400102C")]
		None,
		[Token(Token = "0x400102D")]
		Other,
		[Token(Token = "0x400102E")]
		Disconnected,
		[Token(Token = "0x400102F")]
		MaxCcuReached,
		[Token(Token = "0x4001030")]
		FailedCreateRoom,
		[Token(Token = "0x4001031")]
		FailedCreateRoomNameAlreadyExist,
		[Token(Token = "0x4001032")]
		FailedJoinRoom,
		[Token(Token = "0x4001033")]
		FailedJoinRoomNotExist,
		[Token(Token = "0x4001034")]
		FailedJoinRoomFull,
		[Token(Token = "0x4001035")]
		FailedJoinSearchLobby
	}

	[Token(Token = "0x200025F")]
	public enum RequestPermissionResult
	{
		[Token(Token = "0x4001037")]
		Granted,
		[Token(Token = "0x4001038")]
		Denied,
		[Token(Token = "0x4001039")]
		DeniedDontAskAgain
	}

	[Token(Token = "0x2000260")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x917FFC", Offset = "0x917FFC")]
	private sealed class <>c__DisplayClass67_0
	{
		[Token(Token = "0x400103A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<RequestPermissionResult> callbackReturn;

		[Token(Token = "0x6000F15")]
		[Address(RVA = "0xD8531C", Offset = "0xD8531C", VA = "0xD8531C")]
		public <>c__DisplayClass67_0()
		{
		}

		[Token(Token = "0x6000F16")]
		[Address(RVA = "0xD85324", Offset = "0xD85324", VA = "0xD85324")]
		internal void <RequestMicrophonePermission>b__0(string grantedPermission)
		{
		}

		[Token(Token = "0x6000F17")]
		[Address(RVA = "0xD85384", Offset = "0xD85384", VA = "0xD85384")]
		internal void <RequestMicrophonePermission>b__1(string deniedPermission)
		{
		}

		[Token(Token = "0x6000F18")]
		[Address(RVA = "0xD853E4", Offset = "0xD853E4", VA = "0xD853E4")]
		internal void <RequestMicrophonePermission>b__2(string deniedPermissionAndDontAskAgain)
		{
		}
	}

	[Token(Token = "0x2000261")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91800C", Offset = "0x91800C")]
	private sealed class <>c__DisplayClass75_0
	{
		[Token(Token = "0x400103B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool completed;

		[Token(Token = "0x400103C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string server;

		[Token(Token = "0x400103D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int key;

		[Token(Token = "0x400103E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public DateTime add_date;

		[Token(Token = "0x6000F19")]
		[Address(RVA = "0xD85444", Offset = "0xD85444", VA = "0xD85444")]
		public <>c__DisplayClass75_0()
		{
		}

		[Token(Token = "0x6000F1A")]
		[Address(RVA = "0xD8544C", Offset = "0xD8544C", VA = "0xD8544C")]
		internal void <CreateRoomYielded>b__0(string _server, int _key, string _add_date)
		{
		}

		[Token(Token = "0x6000F1B")]
		[Address(RVA = "0xD854E4", Offset = "0xD854E4", VA = "0xD854E4")]
		internal void <CreateRoomYielded>b__1(ServerWWWErrorCode ServerWWWErrorCode)
		{
		}
	}

	[Token(Token = "0x2000262")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91801C", Offset = "0x91801C")]
	private sealed class <CreateRoomYielded>d__75 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400103F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PUNWrapper <>4__this;

		[Token(Token = "0x4001042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action<bool> _callbackOnCreateRoom;

		[Token(Token = "0x4001043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action<bool, Error, string> _callbackOnFailedCreateRoom;

		[Token(Token = "0x4001044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string loungeId;

		[Token(Token = "0x4001045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private <>c__DisplayClass75_0 <>8__1;

		[Token(Token = "0x4001046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public MultiplayerSessionConfig config;

		[Token(Token = "0x4001047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float <maxTime>5__2;

		[Token(Token = "0x4001048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool <timeout>5__3;

		[Token(Token = "0x4001049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ServerWWW <request>5__4;

		[Token(Token = "0x170000D7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F1F")]
			[Address(RVA = "0xD85F30", Offset = "0xD85F30", VA = "0xD85F30", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F21")]
			[Address(RVA = "0xD85F78", Offset = "0xD85F78", VA = "0xD85F78", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F1C")]
		[Address(RVA = "0xD8558C", Offset = "0xD8558C", VA = "0xD8558C")]
		[DebuggerHidden]
		public <CreateRoomYielded>d__75(int <>1__state)
		{
		}

		[Token(Token = "0x6000F1D")]
		[Address(RVA = "0xD855B8", Offset = "0xD855B8", VA = "0xD855B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F1E")]
		[Address(RVA = "0xD855BC", Offset = "0xD855BC", VA = "0xD855BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F20")]
		[Address(RVA = "0xD85F38", Offset = "0xD85F38", VA = "0xD85F38", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000263")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91802C", Offset = "0x91802C")]
	private sealed class <JoinRandomRoomYielded>d__76 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400104A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400104B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400104C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PUNWrapper <>4__this;

		[Token(Token = "0x400104D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action<bool> _callbackOnJoinRoom;

		[Token(Token = "0x400104E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action<bool, Error, string> _callbackOnFailedJoinRoom;

		[Token(Token = "0x400104F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool secondaryServer;

		[Token(Token = "0x170000D9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F25")]
			[Address(RVA = "0xD862C0", Offset = "0xD862C0", VA = "0xD862C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F27")]
			[Address(RVA = "0xD86308", Offset = "0xD86308", VA = "0xD86308", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F22")]
		[Address(RVA = "0xD85F80", Offset = "0xD85F80", VA = "0xD85F80")]
		[DebuggerHidden]
		public <JoinRandomRoomYielded>d__76(int <>1__state)
		{
		}

		[Token(Token = "0x6000F23")]
		[Address(RVA = "0xD85FAC", Offset = "0xD85FAC", VA = "0xD85FAC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F24")]
		[Address(RVA = "0xD85FB0", Offset = "0xD85FB0", VA = "0xD85FB0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F26")]
		[Address(RVA = "0xD862C8", Offset = "0xD862C8", VA = "0xD862C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000264")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91803C", Offset = "0x91803C")]
	private sealed class <>c__DisplayClass78_0
	{
		[Token(Token = "0x4001050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string server;

		[Token(Token = "0x4001051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool completed;

		[Token(Token = "0x4001052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DateTime add_date;

		[Token(Token = "0x6000F28")]
		[Address(RVA = "0xD854F0", Offset = "0xD854F0", VA = "0xD854F0")]
		public <>c__DisplayClass78_0()
		{
		}

		[Token(Token = "0x6000F29")]
		[Address(RVA = "0xD854F8", Offset = "0xD854F8", VA = "0xD854F8")]
		internal void <JoinRoomYielded>b__0(string _server, int key, string _add_date)
		{
		}

		[Token(Token = "0x6000F2A")]
		[Address(RVA = "0xD85580", Offset = "0xD85580", VA = "0xD85580")]
		internal void <JoinRoomYielded>b__1(ServerWWWErrorCode ServerWWWErrorCode)
		{
		}
	}

	[Token(Token = "0x2000265")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91804C", Offset = "0x91804C")]
	private sealed class <JoinRoomYielded>d__78 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string server;

		[Token(Token = "0x4001056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PUNWrapper <>4__this;

		[Token(Token = "0x4001057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action<bool> _callbackOnJoinRoom;

		[Token(Token = "0x4001058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action<bool, Error, string> _callbackOnFailedJoinRoom;

		[Token(Token = "0x4001059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool lounge;

		[Token(Token = "0x400105A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool secondaryServer;

		[Token(Token = "0x400105B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private <>c__DisplayClass78_0 <>8__1;

		[Token(Token = "0x400105C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string name;

		[Token(Token = "0x400105D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float <maxTime>5__2;

		[Token(Token = "0x400105E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private ServerWWW <request>5__3;

		[Token(Token = "0x170000DB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F2E")]
			[Address(RVA = "0xD86B24", Offset = "0xD86B24", VA = "0xD86B24", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F30")]
			[Address(RVA = "0xD86B6C", Offset = "0xD86B6C", VA = "0xD86B6C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F2B")]
		[Address(RVA = "0xD86310", Offset = "0xD86310", VA = "0xD86310")]
		[DebuggerHidden]
		public <JoinRoomYielded>d__78(int <>1__state)
		{
		}

		[Token(Token = "0x6000F2C")]
		[Address(RVA = "0xD8633C", Offset = "0xD8633C", VA = "0xD8633C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F2D")]
		[Address(RVA = "0xD86340", Offset = "0xD86340", VA = "0xD86340", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F2F")]
		[Address(RVA = "0xD86B2C", Offset = "0xD86B2C", VA = "0xD86B2C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000266")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91805C", Offset = "0x91805C")]
	private sealed class <JoinToSearchLobbyYielded>d__79 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400105F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PUNWrapper <>4__this;

		[Token(Token = "0x4001062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action<bool> _callbackOnJoinSearchLobby;

		[Token(Token = "0x4001063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action<bool, Error, string> _callbackOnFailedJoinSearchLobby;

		[Token(Token = "0x4001064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool secondaryServer;

		[Token(Token = "0x170000DD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F34")]
			[Address(RVA = "0xD86E90", Offset = "0xD86E90", VA = "0xD86E90", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F36")]
			[Address(RVA = "0xD86ED8", Offset = "0xD86ED8", VA = "0xD86ED8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F31")]
		[Address(RVA = "0xD86B74", Offset = "0xD86B74", VA = "0xD86B74")]
		[DebuggerHidden]
		public <JoinToSearchLobbyYielded>d__79(int <>1__state)
		{
		}

		[Token(Token = "0x6000F32")]
		[Address(RVA = "0xD86BA0", Offset = "0xD86BA0", VA = "0xD86BA0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F33")]
		[Address(RVA = "0xD86BA4", Offset = "0xD86BA4", VA = "0xD86BA4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F35")]
		[Address(RVA = "0xD86E98", Offset = "0xD86E98", VA = "0xD86E98", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000267")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91806C", Offset = "0x91806C")]
	private sealed class <LeaveRoomAndDisconnectYielded>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PUNWrapper <>4__this;

		[Token(Token = "0x4001068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool <disconnectSet>5__2;

		[Token(Token = "0x170000DF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F3A")]
			[Address(RVA = "0xD871F8", Offset = "0xD871F8", VA = "0xD871F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F3C")]
			[Address(RVA = "0xD87240", Offset = "0xD87240", VA = "0xD87240", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F37")]
		[Address(RVA = "0xD86EE0", Offset = "0xD86EE0", VA = "0xD86EE0")]
		[DebuggerHidden]
		public <LeaveRoomAndDisconnectYielded>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x6000F38")]
		[Address(RVA = "0xD86F0C", Offset = "0xD86F0C", VA = "0xD86F0C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F39")]
		[Address(RVA = "0xD86F10", Offset = "0xD86F10", VA = "0xD86F10", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F3B")]
		[Address(RVA = "0xD87200", Offset = "0xD87200", VA = "0xD87200", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static PUNWrapper instance;

	[Token(Token = "0x4001017")]
	protected const string typedLobbyName = "Lobby";

	[Token(Token = "0x4001018")]
	protected const string androidMicrophonePermission = "android.permission.RECORD_AUDIO";

	[Token(Token = "0x4001019")]
	protected const float sendLobbyIDtoServerTime = 120f;

	[Token(Token = "0x400101A")]
	public const string selfHostedID = "#SELF-HOSTED#";

	[Token(Token = "0x400101B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected bool connecting;

	[Token(Token = "0x400101C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	protected bool disconnecting;

	[Token(Token = "0x400101D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	protected bool connectingSecondaryServer;

	[Token(Token = "0x400101E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected Action<bool> callbackOnConnect;

	[Token(Token = "0x400101F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected Action<bool, Error, string> callbackOnFailedConnect;

	[Token(Token = "0x4001020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected Action<bool> callbackOnCreateRoom;

	[Token(Token = "0x4001021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected Action<bool, Error, string> callbackOnFailedCreateRoom;

	[Token(Token = "0x4001022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected Action<bool> callbackOnJoinRoom;

	[Token(Token = "0x4001023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected Action<bool, Error, string> callbackOnFailedJoinRoom;

	[Token(Token = "0x4001024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected Action<bool> callbackOnJoinSearchLobby;

	[Token(Token = "0x4001025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected Action<bool, Error, string> callbackOnFailedJoinSearchLobby;

	[Token(Token = "0x4001026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected float sendLobbyIDtoServerDelay;

	[Token(Token = "0x4001027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	protected int loungeKey;

	[Token(Token = "0x4001028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected string currentLoungeId;

	[Token(Token = "0x4001029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	protected static int fixedRegionOrSelfHostedServer;

	[Token(Token = "0x400102A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	protected static string fixedRegionFromConfig;

	[Token(Token = "0x170000D6")]
	public static PUNWrapper Instance
	{
		[Token(Token = "0x6000ECF")]
		[Address(RVA = "0xF4A868", Offset = "0xF4A868", VA = "0xF4A868")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000ED0")]
	[Address(RVA = "0xF4AB04", Offset = "0xF4AB04", VA = "0xF4AB04")]
	public static void Destroy()
	{
	}

	[Token(Token = "0x6000ED1")]
	[Address(RVA = "0xF4AC20", Offset = "0xF4AC20", VA = "0xF4AC20")]
	public static string GetCurrentBestServer()
	{
		return null;
	}

	[Token(Token = "0x6000ED2")]
	[Address(RVA = "0xF4AD64", Offset = "0xF4AD64", VA = "0xF4AD64")]
	public static string GetFixedServer()
	{
		return null;
	}

	[Token(Token = "0x6000ED3")]
	[Address(RVA = "0xF4AFE4", Offset = "0xF4AFE4", VA = "0xF4AFE4")]
	public static bool IsFixedRegionOrSelfHostedServer()
	{
		return default(bool);
	}

	[Token(Token = "0x6000ED4")]
	[Address(RVA = "0xF4B264", Offset = "0xF4B264", VA = "0xF4B264")]
	public static bool IsSelfHostedServer()
	{
		return default(bool);
	}

	[Token(Token = "0x6000ED5")]
	[Address(RVA = "0xF4B2D4", Offset = "0xF4B2D4", VA = "0xF4B2D4")]
	public static string GetPrimaryServer()
	{
		return null;
	}

	[Token(Token = "0x6000ED6")]
	[Address(RVA = "0xF4B364", Offset = "0xF4B364", VA = "0xF4B364")]
	public static string GetSecondaryServer()
	{
		return null;
	}

	[Token(Token = "0x6000ED7")]
	[Address(RVA = "0xF4B5AC", Offset = "0xF4B5AC", VA = "0xF4B5AC")]
	private void ConnectToServer(bool secondaryServer, [Optional] string toServer, [Optional] Action<bool> _callbackOnConnect, [Optional] Action<bool, Error, string> _callbackOnFailedConnect)
	{
	}

	[Token(Token = "0x6000ED8")]
	[Address(RVA = "0xF4C39C", Offset = "0xF4C39C", VA = "0xF4C39C")]
	public bool IsConnectingSecondaryServer()
	{
		return default(bool);
	}

	[Token(Token = "0x6000ED9")]
	[Address(RVA = "0xF4C3A4", Offset = "0xF4C3A4", VA = "0xF4C3A4")]
	public bool IsDisconnecting()
	{
		return default(bool);
	}

	[Token(Token = "0x6000EDA")]
	[Address(RVA = "0xF4BF60", Offset = "0xF4BF60", VA = "0xF4BF60")]
	public void UpdateServerSettingsForSession(bool coOp)
	{
	}

	[Token(Token = "0x6000EDB")]
	[Address(RVA = "0xF4BFCC", Offset = "0xF4BFCC", VA = "0xF4BFCC")]
	public void ResetLocalPlayerProperties(bool resetInSession = true, bool resetTeam = true)
	{
	}

	[Token(Token = "0x6000EDC")]
	[Address(RVA = "0xF4C67C", Offset = "0xF4C67C", VA = "0xF4C67C")]
	public bool IsLocalPlayerMaster()
	{
		return default(bool);
	}

	[Token(Token = "0x6000EDD")]
	[Address(RVA = "0xF4C768", Offset = "0xF4C768", VA = "0xF4C768")]
	public Photon.Realtime.Player GetGameMasterPUNPlayer()
	{
		return null;
	}

	[Token(Token = "0x6000EDE")]
	[Address(RVA = "0xF4CA20", Offset = "0xF4CA20", VA = "0xF4CA20")]
	public bool IsCurrentConnectionLounge()
	{
		return default(bool);
	}

	[Token(Token = "0x6000EDF")]
	[Address(RVA = "0xF4CA44", Offset = "0xF4CA44", VA = "0xF4CA44")]
	public string GetCurrentLoungeId()
	{
		return null;
	}

	[Token(Token = "0x6000EE0")]
	[Address(RVA = "0xF4CA4C", Offset = "0xF4CA4C", VA = "0xF4CA4C")]
	public void ResetCurrentLounge()
	{
	}

	[Token(Token = "0x6000EE1")]
	[Address(RVA = "0xF4CA98", Offset = "0xF4CA98", VA = "0xF4CA98")]
	public bool CanBackFromGameToLounge()
	{
		return default(bool);
	}

	[Token(Token = "0x6000EE2")]
	[Address(RVA = "0xF4CB48", Offset = "0xF4CB48", VA = "0xF4CB48")]
	public string GetCurrentRoomLoungeId()
	{
		return null;
	}

	[Token(Token = "0x6000EE3")]
	[Address(RVA = "0xF4CCBC", Offset = "0xF4CCBC", VA = "0xF4CCBC")]
	public bool IsCurrentRoomInSession()
	{
		return default(bool);
	}

	[Token(Token = "0x6000EE4")]
	[Address(RVA = "0xF4CE38", Offset = "0xF4CE38", VA = "0xF4CE38")]
	public void SetCurrentRoomInSession(bool set, bool fromRPC = false)
	{
	}

	[Token(Token = "0x6000EE5")]
	[Address(RVA = "0xF4D100", Offset = "0xF4D100", VA = "0xF4D100")]
	public void ResetBotsInSession(ExitGames.Client.Photon.Hashtable vals)
	{
	}

	[Token(Token = "0x6000EE6")]
	[Address(RVA = "0xF4D260", Offset = "0xF4D260", VA = "0xF4D260")]
	public bool IsCurrentRoomPlayAgain()
	{
		return default(bool);
	}

	[Token(Token = "0x6000EE7")]
	[Address(RVA = "0xF4D3DC", Offset = "0xF4D3DC", VA = "0xF4D3DC")]
	public void SetCurrentRoomPlayAgain(bool set, bool fromRPC = false)
	{
	}

	[Token(Token = "0x6000EE8")]
	[Address(RVA = "0xF4D6A4", Offset = "0xF4D6A4", VA = "0xF4D6A4")]
	public void OnChangedPlayerName()
	{
	}

	[Token(Token = "0x6000EE9")]
	[Address(RVA = "0xF4D808", Offset = "0xF4D808", VA = "0xF4D808")]
	public void CreateLoungeSession(MultiplayerSessionConfig config2)
	{
	}

	[Token(Token = "0x6000EEA")]
	[Address(RVA = "0xF4DA30", Offset = "0xF4DA30", VA = "0xF4DA30")]
	public void CreatePlayAgainSession()
	{
	}

	[Token(Token = "0x6000EEB")]
	[Address(RVA = "0xF4DBDC", Offset = "0xF4DBDC", VA = "0xF4DBDC")]
	public void SetupPlayAgainSession(MultiplayerSessionConfig config2)
	{
	}

	[Token(Token = "0x6000EEC")]
	[Address(RVA = "0xF4DCB4", Offset = "0xF4DCB4", VA = "0xF4DCB4")]
	public bool IsConnectedOrConnecting()
	{
		return default(bool);
	}

	[Token(Token = "0x6000EED")]
	[Address(RVA = "0xF4DD2C", Offset = "0xF4DD2C", VA = "0xF4DD2C")]
	public void DisconnectFromServer()
	{
	}

	[Token(Token = "0x6000EEE")]
	[Address(RVA = "0xF4E0A0", Offset = "0xF4E0A0", VA = "0xF4E0A0")]
	public void DestroyPhotonVoiceNetworkInstances()
	{
	}

	[Token(Token = "0x6000EEF")]
	[Address(RVA = "0xF4E27C", Offset = "0xF4E27C", VA = "0xF4E27C")]
	public void CreateRoom(MultiplayerSessionConfig config, Action<bool> _callbackOnCreateRoom, Action<bool, Error, string> _callbackOnFailedCreateRoom)
	{
	}

	[Token(Token = "0x6000EF0")]
	[Address(RVA = "0xF4E348", Offset = "0xF4E348", VA = "0xF4E348")]
	public void CreateLounge(string loungeId, Action<bool> _callbackOnCreateRoom, Action<bool, Error, string> _callbackOnFailedCreateRoom)
	{
	}

	[Token(Token = "0x6000EF1")]
	[Address(RVA = "0xF4E384", Offset = "0xF4E384", VA = "0xF4E384")]
	public void JoinRandomRoom(bool secondaryServer, Action<bool> _callbackOnJoinRoom, Action<bool, Error, string> _callbackOnFailedJoinRoom)
	{
	}

	[Token(Token = "0x6000EF2")]
	[Address(RVA = "0xF4E448", Offset = "0xF4E448", VA = "0xF4E448")]
	public void JoinRoom(bool secondaryServer, string name, Action<bool> _callbackOnJoinRoom, Action<bool, Error, string> _callbackOnFailedJoinRoom)
	{
	}

	[Token(Token = "0x6000EF3")]
	[Address(RVA = "0xF4E58C", Offset = "0xF4E58C", VA = "0xF4E58C")]
	public void JoinRoom(string server, string name, Action<bool> _callbackOnJoinRoom, Action<bool, Error, string> _callbackOnFailedJoinRoom)
	{
	}

	[Token(Token = "0x6000EF4")]
	[Address(RVA = "0xF4E5D0", Offset = "0xF4E5D0", VA = "0xF4E5D0")]
	public void JoinLounge(bool secondaryServer, string loungeId, Action<bool> _callbackOnJoinRoom, Action<bool, Error, string> _callbackOnFailedJoinRoom)
	{
	}

	[Token(Token = "0x6000EF5")]
	[Address(RVA = "0xF4E660", Offset = "0xF4E660", VA = "0xF4E660")]
	public void JoinToSearchLobby(bool secondaryServer, [Optional] Action<bool> _callbackOnJoinSearchLobby, [Optional] Action<bool, Error, string> _callbackOnFailedJoinSearchLobby)
	{
	}

	[Token(Token = "0x6000EF6")]
	[Address(RVA = "0xF4E724", Offset = "0xF4E724", VA = "0xF4E724")]
	public void LeaveSearchLobby()
	{
	}

	[Token(Token = "0x6000EF7")]
	[Address(RVA = "0xF4E7CC", Offset = "0xF4E7CC", VA = "0xF4E7CC")]
	public void LeaveRoomAndDisconnect()
	{
	}

	[Token(Token = "0x6000EF8")]
	[Address(RVA = "0xF4C3AC", Offset = "0xF4C3AC", VA = "0xF4C3AC")]
	public void UpdateLocalPlayerProperties(bool resetInSession = true)
	{
	}

	[Token(Token = "0x6000EF9")]
	[Address(RVA = "0xF4E8C8", Offset = "0xF4E8C8", VA = "0xF4E8C8")]
	public static bool HaveGrantedMicrophonePermission()
	{
		return default(bool);
	}

	[Token(Token = "0x6000EFA")]
	[Address(RVA = "0xF4E97C", Offset = "0xF4E97C", VA = "0xF4E97C")]
	public static void RequestMicrophonePermission(Action<RequestPermissionResult> callbackReturn)
	{
	}

	[Token(Token = "0x6000EFB")]
	[Address(RVA = "0xF4EBE4", Offset = "0xF4EBE4", VA = "0xF4EBE4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000EFC")]
	[Address(RVA = "0xF4EC14", Offset = "0xF4EC14", VA = "0xF4EC14", Slot = "28")]
	public override void OnEnable()
	{
	}

	[Token(Token = "0x6000EFD")]
	[Address(RVA = "0xF4EC1C", Offset = "0xF4EC1C", VA = "0xF4EC1C", Slot = "29")]
	public override void OnDisable()
	{
	}

	[Token(Token = "0x6000EFE")]
	[Address(RVA = "0xF4EC24", Offset = "0xF4EC24", VA = "0xF4EC24")]
	protected void OnDestroy()
	{
	}

	[Token(Token = "0x6000EFF")]
	[Address(RVA = "0xF4EC28", Offset = "0xF4EC28", VA = "0xF4EC28")]
	protected void Update()
	{
	}

	[Token(Token = "0x6000F00")]
	[Address(RVA = "0xF4A950", Offset = "0xF4A950", VA = "0xF4A950")]
	protected static void CreateInstance()
	{
	}

	[Token(Token = "0x6000F01")]
	[Address(RVA = "0xF4C08C", Offset = "0xF4C08C", VA = "0xF4C08C")]
	private bool ConnectUsingSettings(string server)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F02")]
	[Address(RVA = "0xF4E2B4", Offset = "0xF4E2B4", VA = "0xF4E2B4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x928854", Offset = "0x928854")]
	protected IEnumerator CreateRoomYielded(MultiplayerSessionConfig config, string loungeId, Action<bool> _callbackOnCreateRoom, Action<bool, Error, string> _callbackOnFailedCreateRoom)
	{
		return null;
	}

	[Token(Token = "0x6000F03")]
	[Address(RVA = "0xF4E3B4", Offset = "0xF4E3B4", VA = "0xF4E3B4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9288B4", Offset = "0x9288B4")]
	protected IEnumerator JoinRandomRoomYielded(bool secondaryServer, Action<bool> _callbackOnJoinRoom, Action<bool, Error, string> _callbackOnFailedJoinRoom)
	{
		return null;
	}

	[Token(Token = "0x6000F04")]
	[Address(RVA = "0xF4EF6C", Offset = "0xF4EF6C", VA = "0xF4EF6C")]
	protected string GetJoinSqlFilter()
	{
		return null;
	}

	[Token(Token = "0x6000F05")]
	[Address(RVA = "0xF4E4D8", Offset = "0xF4E4D8", VA = "0xF4E4D8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x928914", Offset = "0x928914")]
	protected IEnumerator JoinRoomYielded(bool secondaryServer, string server, string name, bool lounge, Action<bool> _callbackOnJoinRoom, Action<bool, Error, string> _callbackOnFailedJoinRoom)
	{
		return null;
	}

	[Token(Token = "0x6000F06")]
	[Address(RVA = "0xF4E690", Offset = "0xF4E690", VA = "0xF4E690")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x928974", Offset = "0x928974")]
	protected IEnumerator JoinToSearchLobbyYielded(bool secondaryServer, Action<bool> _callbackOnJoinSearchLobby, Action<bool, Error, string> _callbackOnFailedJoinSearchLobby)
	{
		return null;
	}

	[Token(Token = "0x6000F07")]
	[Address(RVA = "0xF4E85C", Offset = "0xF4E85C", VA = "0xF4E85C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9289D4", Offset = "0x9289D4")]
	protected IEnumerator LeaveRoomAndDisconnectYielded()
	{
		return null;
	}

	[Token(Token = "0x6000F08")]
	[Address(RVA = "0xF4EFB0", Offset = "0xF4EFB0", VA = "0xF4EFB0", Slot = "45")]
	public override void OnConnectedToMaster()
	{
	}

	[Token(Token = "0x6000F09")]
	[Address(RVA = "0xF4F160", Offset = "0xF4F160", VA = "0xF4F160", Slot = "49")]
	public override void OnCustomAuthenticationResponse(Dictionary<string, object> data)
	{
	}

	[Token(Token = "0x6000F0A")]
	[Address(RVA = "0xF4F240", Offset = "0xF4F240", VA = "0xF4F240", Slot = "50")]
	public override void OnCustomAuthenticationFailed(string debugMessage)
	{
	}

	[Token(Token = "0x6000F0B")]
	[Address(RVA = "0xF4F2D0", Offset = "0xF4F2D0", VA = "0xF4F2D0", Slot = "38")]
	public override void OnDisconnected(DisconnectCause cause)
	{
	}

	[Token(Token = "0x6000F0C")]
	[Address(RVA = "0xF4F66C", Offset = "0xF4F66C", VA = "0xF4F66C", Slot = "35")]
	public override void OnCreatedRoom()
	{
	}

	[Token(Token = "0x6000F0D")]
	[Address(RVA = "0xF4F834", Offset = "0xF4F834", VA = "0xF4F834", Slot = "33")]
	public override void OnCreateRoomFailed(short returnCode, string message)
	{
	}

	[Token(Token = "0x6000F0E")]
	[Address(RVA = "0xF4FA14", Offset = "0xF4FA14", VA = "0xF4FA14", Slot = "41")]
	public override void OnJoinedRoom()
	{
	}

	[Token(Token = "0x6000F0F")]
	[Address(RVA = "0xF4FBAC", Offset = "0xF4FBAC", VA = "0xF4FBAC", Slot = "44")]
	public override void OnJoinRandomFailed(short returnCode, string message)
	{
	}

	[Token(Token = "0x6000F10")]
	[Address(RVA = "0xF4FD10", Offset = "0xF4FD10", VA = "0xF4FD10", Slot = "34")]
	public override void OnJoinRoomFailed(short returnCode, string message)
	{
	}

	[Token(Token = "0x6000F11")]
	[Address(RVA = "0xF4FFB8", Offset = "0xF4FFB8", VA = "0xF4FFB8", Slot = "36")]
	public override void OnJoinedLobby()
	{
	}

	[Token(Token = "0x6000F12")]
	[Address(RVA = "0xF50064", Offset = "0xF50064", VA = "0xF50064", Slot = "37")]
	public override void OnLeftLobby()
	{
	}

	[Token(Token = "0x6000F13")]
	[Address(RVA = "0xF50128", Offset = "0xF50128", VA = "0xF50128")]
	public PUNWrapper()
	{
	}
}
[Token(Token = "0x2000268")]
public class MultiplayerChatScreenKeyboard : MUI_ScreenKeyboard
{
	[Token(Token = "0x4001069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool showInputOnlyKeyboard;

	[Token(Token = "0x400106A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public TextMesh line;

	[Token(Token = "0x400106B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public TextMesh lineNext;

	[Token(Token = "0x400106C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool inputLineOnly;

	[Token(Token = "0x400106D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject switchToKeyboardHideObject;

	[Token(Token = "0x400106E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public MultiplayerChatScreenKeyboard switchToKeyboard;

	[Token(Token = "0x400106F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public bool switchToKeyboardShowParentObject;

	[Token(Token = "0x4001070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public Color textColorTeam;

	[Token(Token = "0x4001071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	protected bool textColorNormalInitialized;

	[Token(Token = "0x4001072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected Color textColorNormal;

	[Token(Token = "0x4001073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	protected int lastLineFilled;

	[Token(Token = "0x4001074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private List<MultiplayerRoom.ChatLine> wrappedLinesCache;

	[Token(Token = "0x4001075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private List<GameObject> createdLines;

	[Token(Token = "0x4001076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	protected float scrollToBottomDelay;

	[Token(Token = "0x6000F3D")]
	[Address(RVA = "0xF84F50", Offset = "0xF84F50", VA = "0xF84F50", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000F3E")]
	[Address(RVA = "0xF84FC4", Offset = "0xF84FC4", VA = "0xF84FC4", Slot = "7")]
	public override void CloseKeyboard()
	{
	}

	[Token(Token = "0x6000F3F")]
	[Address(RVA = "0xF85110", Offset = "0xF85110", VA = "0xF85110", Slot = "8")]
	public override void OnEnable()
	{
	}

	[Token(Token = "0x6000F40")]
	[Address(RVA = "0xF85898", Offset = "0xF85898", VA = "0xF85898")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F41")]
	[Address(RVA = "0xF8598C", Offset = "0xF8598C", VA = "0xF8598C")]
	public void Show()
	{
	}

	[Token(Token = "0x6000F42")]
	[Address(RVA = "0xF85A5C", Offset = "0xF85A5C", VA = "0xF85A5C")]
	public void OnSwitchInputOnlyChat()
	{
	}

	[Token(Token = "0x6000F43")]
	[Address(RVA = "0xF85B80", Offset = "0xF85B80", VA = "0xF85B80")]
	public static void PrepareWrappedChatLines(TextMesh textLB, List<MultiplayerRoom.ChatLine> chatLines, int lastLine, List<MultiplayerRoom.ChatLine> wrappedLines)
	{
	}

	[Token(Token = "0x6000F44")]
	[Address(RVA = "0xF85244", Offset = "0xF85244", VA = "0xF85244")]
	public void FillChatLines()
	{
	}

	[Token(Token = "0x6000F45")]
	[Address(RVA = "0xF85DF8", Offset = "0xF85DF8", VA = "0xF85DF8", Slot = "11")]
	public virtual void ResetChat()
	{
	}

	[Token(Token = "0x6000F46")]
	[Address(RVA = "0xF85F60", Offset = "0xF85F60", VA = "0xF85F60")]
	public void OnReceivedChat()
	{
	}

	[Token(Token = "0x6000F47")]
	[Address(RVA = "0xF85FAC", Offset = "0xF85FAC", VA = "0xF85FAC", Slot = "12")]
	public virtual void SendChat(string chatText)
	{
	}

	[Token(Token = "0x6000F48")]
	[Address(RVA = "0xF85FB0", Offset = "0xF85FB0", VA = "0xF85FB0", Slot = "13")]
	public virtual List<MultiplayerRoom.ChatLine> GetChatLines()
	{
		return null;
	}

	[Token(Token = "0x6000F49")]
	[Address(RVA = "0xF85FB8", Offset = "0xF85FB8", VA = "0xF85FB8")]
	public MultiplayerChatScreenKeyboard()
	{
	}
}
[Token(Token = "0x2000269")]
public class MultiplayerCreateSessionWindow : MonoBehaviour
{
	[Token(Token = "0x4001077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMesh textMode;

	[Token(Token = "0x4001078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMesh textModeDescription;

	[Token(Token = "0x4001079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject groupCommunityMission;

	[Token(Token = "0x400107A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject buttonSelectCommunityMission;

	[Token(Token = "0x400107B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject buttonClearCommunityProgress;

	[Token(Token = "0x400107C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMesh textCommunityMission;

	[Token(Token = "0x400107D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject groupDiffMode;

	[Token(Token = "0x400107E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMesh textDiffMode;

	[Token(Token = "0x400107F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject groupTime;

	[Token(Token = "0x4001080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TextMesh textTime;

	[Token(Token = "0x4001081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject groupTeamsMode;

	[Token(Token = "0x4001082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TextMesh textTeamsMode;

	[Token(Token = "0x4001083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject groupChallangeMode;

	[Token(Token = "0x4001084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public TextMesh textChallangeMode;

	[Token(Token = "0x4001085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject groupChallangePoints;

	[Token(Token = "0x4001086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public TextMesh textChallangePoints;

	[Token(Token = "0x4001087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject groupSpecialTasks;

	[Token(Token = "0x4001088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public TextMesh textSpecialTasks;

	[Token(Token = "0x4001089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject groupFriendlyFire;

	[Token(Token = "0x400108A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public TextMesh textFriendlyFire;

	[Token(Token = "0x400108B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject groupAllowedPlanes;

	[Token(Token = "0x400108C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public TextMesh textAllowedPlanes;

	[Token(Token = "0x400108D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject buttonStartSessionEnabled;

	[Token(Token = "0x400108E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject buttonStartSessionDisabled;

	[Token(Token = "0x400108F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject difficultyInfoButton;

	[Token(Token = "0x4001090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject difficultyInfoWindow;

	[Token(Token = "0x4001091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public TextMesh difficultyInfoText;

	[Token(Token = "0x4001092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public TextMesh textCreateSession;

	[Token(Token = "0x4001093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private bool forPlayAgain;

	[Token(Token = "0x4001094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private MultiplayerSessionConfig config;

	[Token(Token = "0x4001095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private bool selectingCommunityMission;

	[Token(Token = "0x4001096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	protected ServerWWW requestCommunitySave;

	[Token(Token = "0x4001097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	protected int blinkSelectCommunityMission;

	[Token(Token = "0x4001098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	protected float blinkSelectCommunityMissionTime;

	[Token(Token = "0x4001099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	protected long guidCoOpSingle;

	[Token(Token = "0x400109A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	protected long guidCoOpMulti;

	[Token(Token = "0x400109B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	protected CustomCampaignData campaignDataCoOpSingle;

	[Token(Token = "0x400109C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	protected CustomCampaignData campaignDataCoOpMulti;

	[Token(Token = "0x400109D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	protected Vector3 modeDescriptionDefPos;

	[Token(Token = "0x400109E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	protected Vector3 groupSpecialTasksPosOrg;

	[Token(Token = "0x400109F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	protected Vector3 groupFriendlyFireDefPos;

	[Token(Token = "0x40010A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	protected Vector3 groupAllowedPlanesDefPos;

	[Token(Token = "0x40010A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	protected MUI_ClippedScroll scroll;

	[Token(Token = "0x40010A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static eWeather[] challange_Weathers;

	[Token(Token = "0x40010A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static eqType[] challange_convoyTask;

	[Token(Token = "0x40010A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static eqType[] challange_trainTask;

	[Token(Token = "0x40010A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static eqType[] challange_Town;

	[Token(Token = "0x6000F4B")]
	[Address(RVA = "0x11FF3DC", Offset = "0x11FF3DC", VA = "0x11FF3DC")]
	public void Show()
	{
	}

	[Token(Token = "0x6000F4C")]
	[Address(RVA = "0x11FF4B0", Offset = "0x11FF4B0", VA = "0x11FF4B0")]
	public void ShowPlayAgain()
	{
	}

	[Token(Token = "0x6000F4D")]
	[Address(RVA = "0x11FF588", Offset = "0x11FF588", VA = "0x11FF588")]
	public void OnSelectedCommunityMission(CustomCampaignData campaignData)
	{
	}

	[Token(Token = "0x6000F4E")]
	[Address(RVA = "0x11FF730", Offset = "0x11FF730", VA = "0x11FF730")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F4F")]
	[Address(RVA = "0x11FF828", Offset = "0x11FF828", VA = "0x11FF828")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F50")]
	[Address(RVA = "0x12009BC", Offset = "0x12009BC", VA = "0x12009BC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000F51")]
	[Address(RVA = "0x1200A74", Offset = "0x1200A74", VA = "0x1200A74")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F52")]
	[Address(RVA = "0x11FFB84", Offset = "0x11FFB84", VA = "0x11FFB84")]
	private void FillConfig()
	{
	}

	[Token(Token = "0x6000F53")]
	[Address(RVA = "0x1200B1C", Offset = "0x1200B1C", VA = "0x1200B1C")]
	private int ModeIdx(MultiplayerSessionConfig.PlayMode mode)
	{
		return default(int);
	}

	[Token(Token = "0x6000F54")]
	[Address(RVA = "0x1200C00", Offset = "0x1200C00", VA = "0x1200C00")]
	private void OnClickModePrev()
	{
	}

	[Token(Token = "0x6000F55")]
	[Address(RVA = "0x1200F88", Offset = "0x1200F88", VA = "0x1200F88")]
	private void OnClickModeNext()
	{
	}

	[Token(Token = "0x6000F56")]
	[Address(RVA = "0x1200CE8", Offset = "0x1200CE8", VA = "0x1200CE8")]
	private void SetMode(MultiplayerSessionConfig.PlayMode mode)
	{
	}

	[Token(Token = "0x6000F57")]
	[Address(RVA = "0x1201074", Offset = "0x1201074", VA = "0x1201074")]
	private void OnClickSelectCommunityMission()
	{
	}

	[Token(Token = "0x6000F58")]
	[Address(RVA = "0x120114C", Offset = "0x120114C", VA = "0x120114C")]
	private void OnClickClearCommunityProgress()
	{
	}

	[Token(Token = "0x6000F59")]
	[Address(RVA = "0x12011D0", Offset = "0x12011D0", VA = "0x12011D0")]
	private int FlyModeIdx(GameMode.DifficultyMode mode)
	{
		return default(int);
	}

	[Token(Token = "0x6000F5A")]
	[Address(RVA = "0x12012B4", Offset = "0x12012B4", VA = "0x12012B4")]
	private void OnClickFlyModePrev()
	{
	}

	[Token(Token = "0x6000F5B")]
	[Address(RVA = "0x12013A8", Offset = "0x12013A8", VA = "0x12013A8")]
	private void OnClickFlyModeNext()
	{
	}

	[Token(Token = "0x6000F5C")]
	[Address(RVA = "0x12014A0", Offset = "0x12014A0", VA = "0x12014A0")]
	private int TimeIdx(int time)
	{
		return default(int);
	}

	[Token(Token = "0x6000F5D")]
	[Address(RVA = "0x1201584", Offset = "0x1201584", VA = "0x1201584")]
	private void OnClickTimePrev()
	{
	}

	[Token(Token = "0x6000F5E")]
	[Address(RVA = "0x1201678", Offset = "0x1201678", VA = "0x1201678")]
	private void OnClickTimeNext()
	{
	}

	[Token(Token = "0x6000F5F")]
	[Address(RVA = "0x1201770", Offset = "0x1201770", VA = "0x1201770")]
	private void OnClickTeamsModePrev()
	{
	}

	[Token(Token = "0x6000F60")]
	[Address(RVA = "0x1201798", Offset = "0x1201798", VA = "0x1201798")]
	private void OnClickTeamsModeNext()
	{
	}

	[Token(Token = "0x6000F61")]
	[Address(RVA = "0x120179C", Offset = "0x120179C", VA = "0x120179C")]
	private void OnClickChallangeModePrev()
	{
	}

	[Token(Token = "0x6000F62")]
	[Address(RVA = "0x12017C4", Offset = "0x12017C4", VA = "0x12017C4")]
	private void OnClickChallangeModeNext()
	{
	}

	[Token(Token = "0x6000F63")]
	[Address(RVA = "0x12017C8", Offset = "0x12017C8", VA = "0x12017C8")]
	private int ChallangePointsLimitIdx(int pointsLimit)
	{
		return default(int);
	}

	[Token(Token = "0x6000F64")]
	[Address(RVA = "0x12018AC", Offset = "0x12018AC", VA = "0x12018AC")]
	private void OnClickChallangePointsPrev()
	{
	}

	[Token(Token = "0x6000F65")]
	[Address(RVA = "0x12019A0", Offset = "0x12019A0", VA = "0x12019A0")]
	private void OnClickChallangePointsNext()
	{
	}

	[Token(Token = "0x6000F66")]
	[Address(RVA = "0x1201A98", Offset = "0x1201A98", VA = "0x1201A98")]
	private void OnClickSpecialTasksPrev()
	{
	}

	[Token(Token = "0x6000F67")]
	[Address(RVA = "0x1201ABC", Offset = "0x1201ABC", VA = "0x1201ABC")]
	private void OnClickSpecialTasksNext()
	{
	}

	[Token(Token = "0x6000F68")]
	[Address(RVA = "0x1201AC0", Offset = "0x1201AC0", VA = "0x1201AC0")]
	private void OnClickFriendlyFirePrev()
	{
	}

	[Token(Token = "0x6000F69")]
	[Address(RVA = "0x1201AE4", Offset = "0x1201AE4", VA = "0x1201AE4")]
	private void OnClickFriendlyFireNext()
	{
	}

	[Token(Token = "0x6000F6A")]
	[Address(RVA = "0x1201AE8", Offset = "0x1201AE8", VA = "0x1201AE8")]
	private void OnClickAllowedPlanesPrev()
	{
	}

	[Token(Token = "0x6000F6B")]
	[Address(RVA = "0x1201B10", Offset = "0x1201B10", VA = "0x1201B10")]
	private void OnClickAllowedPlanesNext()
	{
	}

	[Token(Token = "0x6000F6C")]
	[Address(RVA = "0x1201B14", Offset = "0x1201B14", VA = "0x1201B14")]
	private void CallbackGetLevelSaveResult(object obj)
	{
	}

	[Token(Token = "0x6000F6D")]
	[Address(RVA = "0x1201EE0", Offset = "0x1201EE0", VA = "0x1201EE0")]
	private void CallbackGetLevelSaveError(ServerWWWErrorCode e)
	{
	}

	[Token(Token = "0x6000F6E")]
	[Address(RVA = "0x1202118", Offset = "0x1202118", VA = "0x1202118")]
	private void OnClickBack()
	{
	}

	[Token(Token = "0x6000F6F")]
	[Address(RVA = "0x120231C", Offset = "0x120231C", VA = "0x120231C")]
	private void OnClickShowDifficultyModeInfo()
	{
	}

	[Token(Token = "0x6000F70")]
	[Address(RVA = "0x1202474", Offset = "0x1202474", VA = "0x1202474")]
	private void OnClickStartSession()
	{
	}

	[Token(Token = "0x6000F71")]
	[Address(RVA = "0x12031F4", Offset = "0x12031F4", VA = "0x12031F4")]
	private void CallbackOnCreateRoom(bool secondaryServer)
	{
	}

	[Token(Token = "0x6000F72")]
	[Address(RVA = "0x12032A4", Offset = "0x12032A4", VA = "0x12032A4")]
	private void CallbackOnFailedCreateRoom(bool secondaryServer, PUNWrapper.Error error, string extMessage)
	{
	}

	[Token(Token = "0x6000F73")]
	[Address(RVA = "0x1202980", Offset = "0x1202980", VA = "0x1202980")]
	private CustomCampaignData GenerateChallangeGroundCampaign()
	{
		return null;
	}

	[Token(Token = "0x6000F74")]
	[Address(RVA = "0x12033EC", Offset = "0x12033EC", VA = "0x12033EC")]
	public MultiplayerCreateSessionWindow()
	{
	}
}
[Token(Token = "0x200026A")]
public class MultiplayerFinishScoreLine : MonoBehaviour
{
	[Token(Token = "0x40010A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject buttonMore;

	[Token(Token = "0x40010A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CloudSave_Checkbox playAgain;

	[Token(Token = "0x40010A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Renderer team;

	[Token(Token = "0x40010A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMesh player;

	[Token(Token = "0x40010AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMesh playerTeam;

	[Token(Token = "0x40010AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMesh kills;

	[Token(Token = "0x40010AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMesh deaths;

	[Token(Token = "0x40010AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMesh reward_total;

	[Token(Token = "0x40010AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Color colorOurPlayer;

	[Token(Token = "0x40010AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Color colorPlayerLeft;

	[Token(Token = "0x40010B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Material playAgainLeaveMaterial;

	[NonSerialized]
	[Token(Token = "0x40010B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int ActorNumber;

	[NonSerialized]
	[Token(Token = "0x40010B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public bool bot;

	[NonSerialized]
	[Token(Token = "0x40010B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
	public bool localPlayer;

	[NonSerialized]
	[Token(Token = "0x40010B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public int pa;

	[Token(Token = "0x6000F76")]
	[Address(RVA = "0x12035B0", Offset = "0x12035B0", VA = "0x12035B0")]
	public MultiplayerFinishScoreLine()
	{
	}
}
[Token(Token = "0x200026B")]
public class MultiplayerFinishScoreWindow : MonoBehaviourPunCallbacks
{
	[Token(Token = "0x200026C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91807C", Offset = "0x91807C")]
	private sealed class <>c__DisplayClass32_0
	{
		[Token(Token = "0x40010D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MultiplayerFinishScoreWindow <>4__this;

		[Token(Token = "0x40010D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MultiplayerConfig.Team teamVictory;

		[Token(Token = "0x6000F8E")]
		[Address(RVA = "0xD7EFBC", Offset = "0xD7EFBC", VA = "0xD7EFBC")]
		public <>c__DisplayClass32_0()
		{
		}

		[Token(Token = "0x6000F8F")]
		[Address(RVA = "0xD7EFC4", Offset = "0xD7EFC4", VA = "0xD7EFC4")]
		internal int <Start>b__0(MissionResults.MultiScore a, MissionResults.MultiScore b)
		{
			return default(int);
		}

		[Token(Token = "0x6000F90")]
		[Address(RVA = "0xD7F094", Offset = "0xD7F094", VA = "0xD7F094")]
		internal void <Start>b__1(object s)
		{
		}

		[Token(Token = "0x6000F91")]
		[Address(RVA = "0xD7F0B0", Offset = "0xD7F0B0", VA = "0xD7F0B0")]
		internal void <Start>b__2(object s)
		{
		}
	}

	[Token(Token = "0x200026D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91808C", Offset = "0x91808C")]
	private sealed class <ShowExpPopupWindow>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40010D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40010D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40010D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MultiplayerFinishScoreWindow <>4__this;

		[Token(Token = "0x170000E1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F95")]
			[Address(RVA = "0xD7F204", Offset = "0xD7F204", VA = "0xD7F204", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F97")]
			[Address(RVA = "0xD7F24C", Offset = "0xD7F24C", VA = "0xD7F24C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F92")]
		[Address(RVA = "0xD7F0CC", Offset = "0xD7F0CC", VA = "0xD7F0CC")]
		[DebuggerHidden]
		public <ShowExpPopupWindow>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x6000F93")]
		[Address(RVA = "0xD7F0F8", Offset = "0xD7F0F8", VA = "0xD7F0F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F94")]
		[Address(RVA = "0xD7F0FC", Offset = "0xD7F0FC", VA = "0xD7F0FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F96")]
		[Address(RVA = "0xD7F20C", Offset = "0xD7F20C", VA = "0xD7F20C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200026E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91809C", Offset = "0x91809C")]
	private sealed class <StartPlayAgain>d__42 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40010DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40010DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170000E3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F9B")]
			[Address(RVA = "0xD7F358", Offset = "0xD7F358", VA = "0xD7F358", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F9D")]
			[Address(RVA = "0xD7F3A0", Offset = "0xD7F3A0", VA = "0xD7F3A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F98")]
		[Address(RVA = "0xD7F254", Offset = "0xD7F254", VA = "0xD7F254")]
		[DebuggerHidden]
		public <StartPlayAgain>d__42(int <>1__state)
		{
		}

		[Token(Token = "0x6000F99")]
		[Address(RVA = "0xD7F280", Offset = "0xD7F280", VA = "0xD7F280", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F9A")]
		[Address(RVA = "0xD7F284", Offset = "0xD7F284", VA = "0xD7F284", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F9C")]
		[Address(RVA = "0xD7F360", Offset = "0xD7F360", VA = "0xD7F360", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40010B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject buttonClose;

	[Token(Token = "0x40010B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMesh title;

	[Token(Token = "0x40010B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject showWhenVictory;

	[Token(Token = "0x40010B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject showWhenDefeat;

	[Token(Token = "0x40010B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Renderer scoreIcon;

	[Token(Token = "0x40010BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material[] scoreMaterials;

	[Token(Token = "0x40010BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject prefabPlayerLine;

	[Token(Token = "0x40010BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject prefabPlayerLineNext;

	[Token(Token = "0x40010BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int fontSizeLocalPlayer;

	[Token(Token = "0x40010BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public PopupMenu popupMenu;

	[Token(Token = "0x40010BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject popupMenuBlocker;

	[Token(Token = "0x40010C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject buttonPlayAgain;

	[Token(Token = "0x40010C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject buttonPlayAgain_disabled;

	[Token(Token = "0x40010C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject buttonLeave;

	[Token(Token = "0x40010C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Material materialTeamA;

	[Token(Token = "0x40010C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Material materialTeamB;

	[Token(Token = "0x40010C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject teamsScores;

	[Token(Token = "0x40010C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public TextMesh teamAscore;

	[Token(Token = "0x40010C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public TextMesh teamBscore;

	[Token(Token = "0x40010C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public UnlockedPopupWindow expPopupWindow;

	[Token(Token = "0x40010C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool finalScore;

	[Token(Token = "0x40010CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
	private bool playAgainActive;

	[Token(Token = "0x40010CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Renderer[] rClose;

	[Token(Token = "0x40010CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool backToCreatedMultiplayerGame;

	[Token(Token = "0x40010CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private float blinkCloseTime;

	[Token(Token = "0x40010CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private bool openingOtherWindow;

	[Token(Token = "0x40010CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private MultiplayerSessionConfig.PlayMode mode;

	[Token(Token = "0x40010D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private List<MissionResults.MultiScore> multi_scores;

	[Token(Token = "0x40010D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private List<MultiplayerFinishScoreLine> lines;

	[Token(Token = "0x40010D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private int currentPopupIdx;

	[Token(Token = "0x40010D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private bool updatePlayers;

	[Token(Token = "0x40010D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF5")]
	private bool checkPlayAgain;

	[Token(Token = "0x6000F77")]
	[Address(RVA = "0x12035B8", Offset = "0x12035B8", VA = "0x12035B8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F78")]
	[Address(RVA = "0x1204748", Offset = "0x1204748", VA = "0x1204748")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x928BC4", Offset = "0x928BC4")]
	private IEnumerator ShowExpPopupWindow()
	{
		return null;
	}

	[Token(Token = "0x6000F79")]
	[Address(RVA = "0x12047B4", Offset = "0x12047B4", VA = "0x12047B4", Slot = "29")]
	public override void OnDisable()
	{
	}

	[Token(Token = "0x6000F7A")]
	[Address(RVA = "0x1204844", Offset = "0x1204844", VA = "0x1204844")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F7B")]
	[Address(RVA = "0x1205108", Offset = "0x1205108", VA = "0x1205108")]
	public void OnCreatedMultiplayerGame()
	{
	}

	[Token(Token = "0x6000F7C")]
	[Address(RVA = "0x120511C", Offset = "0x120511C", VA = "0x120511C")]
	private void OnClickClose()
	{
	}

	[Token(Token = "0x6000F7D")]
	[Address(RVA = "0x12054B0", Offset = "0x12054B0", VA = "0x12054B0")]
	private void OnClickPlayAgain()
	{
	}

	[Token(Token = "0x6000F7E")]
	[Address(RVA = "0x1205610", Offset = "0x1205610", VA = "0x1205610")]
	private void OnClickMore(int idx)
	{
	}

	[Token(Token = "0x6000F7F")]
	[Address(RVA = "0x12049EC", Offset = "0x12049EC", VA = "0x12049EC")]
	private void UpdatePlayAgain()
	{
	}

	[Token(Token = "0x6000F80")]
	[Address(RVA = "0x1204F84", Offset = "0x1204F84", VA = "0x1204F84")]
	private void UpdatePlayerLeft()
	{
	}

	[Token(Token = "0x6000F81")]
	[Address(RVA = "0x1205D84", Offset = "0x1205D84", VA = "0x1205D84")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x928C24", Offset = "0x928C24")]
	private IEnumerator StartPlayAgain()
	{
		return null;
	}

	[Token(Token = "0x6000F82")]
	[Address(RVA = "0x1205DE0", Offset = "0x1205DE0", VA = "0x1205DE0")]
	public void OnCreatedPlayAgainMultiplayerGame()
	{
	}

	[Token(Token = "0x6000F83")]
	[Address(RVA = "0x1205BD0", Offset = "0x1205BD0", VA = "0x1205BD0")]
	private Photon.Realtime.Player FindPUNPlayer(int ActorNumber)
	{
		return null;
	}

	[Token(Token = "0x6000F84")]
	[Address(RVA = "0x1205A0C", Offset = "0x1205A0C", VA = "0x1205A0C")]
	private void PreparePopup(MissionResults.MultiScore player)
	{
	}

	[Token(Token = "0x6000F85")]
	[Address(RVA = "0x1205FD8", Offset = "0x1205FD8", VA = "0x1205FD8")]
	private void OnClickCloseMenuPopup()
	{
	}

	[Token(Token = "0x6000F86")]
	[Address(RVA = "0x1205FF4", Offset = "0x1205FF4", VA = "0x1205FF4")]
	private void OnClickMute()
	{
	}

	[Token(Token = "0x6000F87")]
	[Address(RVA = "0x120612C", Offset = "0x120612C", VA = "0x120612C")]
	private void OnClickFriendRequest()
	{
	}

	[Token(Token = "0x6000F88")]
	[Address(RVA = "0x12061D8", Offset = "0x12061D8", VA = "0x12061D8", Slot = "42")]
	public override void OnPlayerEnteredRoom(Photon.Realtime.Player newPlayer)
	{
	}

	[Token(Token = "0x6000F89")]
	[Address(RVA = "0x120629C", Offset = "0x120629C", VA = "0x120629C", Slot = "43")]
	public override void OnPlayerLeftRoom(Photon.Realtime.Player otherPlayer)
	{
	}

	[Token(Token = "0x6000F8A")]
	[Address(RVA = "0x1206360", Offset = "0x1206360", VA = "0x1206360", Slot = "46")]
	public override void OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
	{
	}

	[Token(Token = "0x6000F8B")]
	[Address(RVA = "0x12063E0", Offset = "0x12063E0", VA = "0x12063E0", Slot = "47")]
	public override void OnPlayerPropertiesUpdate(Photon.Realtime.Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
	{
	}

	[Token(Token = "0x6000F8C")]
	[Address(RVA = "0x12064A4", Offset = "0x12064A4", VA = "0x12064A4", Slot = "32")]
	public override void OnMasterClientSwitched(Photon.Realtime.Player newMasterClient)
	{
	}

	[Token(Token = "0x6000F8D")]
	[Address(RVA = "0x1206568", Offset = "0x1206568", VA = "0x1206568")]
	public MultiplayerFinishScoreWindow()
	{
	}
}
[Token(Token = "0x200026F")]
public class MultiplayerGameChatScreenKeyboard : MultiplayerChatScreenKeyboard
{
	[Token(Token = "0x2000270")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9180AC", Offset = "0x9180AC")]
	private sealed class <OnChatTargetAll>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40010E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40010E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40010E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MultiplayerGameChatScreenKeyboard <>4__this;

		[Token(Token = "0x170000E5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FAC")]
			[Address(RVA = "0xD804CC", Offset = "0xD804CC", VA = "0xD804CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FAE")]
			[Address(RVA = "0xD80514", Offset = "0xD80514", VA = "0xD80514", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FA9")]
		[Address(RVA = "0xD803CC", Offset = "0xD803CC", VA = "0xD803CC")]
		[DebuggerHidden]
		public <OnChatTargetAll>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6000FAA")]
		[Address(RVA = "0xD803F8", Offset = "0xD803F8", VA = "0xD803F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FAB")]
		[Address(RVA = "0xD803FC", Offset = "0xD803FC", VA = "0xD803FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FAD")]
		[Address(RVA = "0xD804D4", Offset = "0xD804D4", VA = "0xD804D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000271")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9180BC", Offset = "0x9180BC")]
	private sealed class <OnChatTargetTeam>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40010E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40010E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40010E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MultiplayerGameChatScreenKeyboard <>4__this;

		[Token(Token = "0x170000E7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FB2")]
			[Address(RVA = "0xD80610", Offset = "0xD80610", VA = "0xD80610", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FB4")]
			[Address(RVA = "0xD80658", Offset = "0xD80658", VA = "0xD80658", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FAF")]
		[Address(RVA = "0xD8051C", Offset = "0xD8051C", VA = "0xD8051C")]
		[DebuggerHidden]
		public <OnChatTargetTeam>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6000FB0")]
		[Address(RVA = "0xD80548", Offset = "0xD80548", VA = "0xD80548", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FB1")]
		[Address(RVA = "0xD8054C", Offset = "0xD8054C", VA = "0xD8054C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FB3")]
		[Address(RVA = "0xD80618", Offset = "0xD80618", VA = "0xD80618", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40010DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject[] buttonSwitchSelectTarget;

	[Token(Token = "0x40010DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject selectTargetWindow;

	[Token(Token = "0x40010DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public CloudSave_Checkbox switchAll;

	[Token(Token = "0x40010DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public CloudSave_Checkbox switchTeam;

	[Token(Token = "0x40010E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public GameObject switchKeyboardType;

	[Token(Token = "0x40010E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private bool sendToAll;

	[Token(Token = "0x40010E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x111")]
	private bool teamsVisibleInSession;

	[Token(Token = "0x6000F9E")]
	[Address(RVA = "0xDF5C20", Offset = "0xDF5C20", VA = "0xDF5C20", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000F9F")]
	[Address(RVA = "0xDF5CA8", Offset = "0xDF5CA8", VA = "0xDF5CA8", Slot = "8")]
	public override void OnEnable()
	{
	}

	[Token(Token = "0x6000FA0")]
	[Address(RVA = "0xDF62B0", Offset = "0xDF62B0", VA = "0xDF62B0", Slot = "11")]
	public override void ResetChat()
	{
	}

	[Token(Token = "0x6000FA1")]
	[Address(RVA = "0xDF62DC", Offset = "0xDF62DC", VA = "0xDF62DC", Slot = "12")]
	public override void SendChat(string chatText)
	{
	}

	[Token(Token = "0x6000FA2")]
	[Address(RVA = "0xDF692C", Offset = "0xDF692C", VA = "0xDF692C", Slot = "13")]
	public override List<MultiplayerRoom.ChatLine> GetChatLines()
	{
		return null;
	}

	[Token(Token = "0x6000FA3")]
	[Address(RVA = "0xDF6A80", Offset = "0xDF6A80", VA = "0xDF6A80")]
	public void OnClickClose()
	{
	}

	[Token(Token = "0x6000FA4")]
	[Address(RVA = "0xDF5E94", Offset = "0xDF5E94", VA = "0xDF5E94")]
	private void UpdateSwitchSelectTarget()
	{
	}

	[Token(Token = "0x6000FA5")]
	[Address(RVA = "0xDF6DC8", Offset = "0xDF6DC8", VA = "0xDF6DC8")]
	public void ShowSelectTarget()
	{
	}

	[Token(Token = "0x6000FA6")]
	[Address(RVA = "0xDF6E08", Offset = "0xDF6E08", VA = "0xDF6E08")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x928D24", Offset = "0x928D24")]
	public IEnumerator OnChatTargetAll()
	{
		return null;
	}

	[Token(Token = "0x6000FA7")]
	[Address(RVA = "0xDF6E74", Offset = "0xDF6E74", VA = "0xDF6E74")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x928D84", Offset = "0x928D84")]
	public IEnumerator OnChatTargetTeam()
	{
		return null;
	}

	[Token(Token = "0x6000FA8")]
	[Address(RVA = "0xDF6EE0", Offset = "0xDF6EE0", VA = "0xDF6EE0")]
	public MultiplayerGameChatScreenKeyboard()
	{
	}
}
[Token(Token = "0x2000272")]
public class MultiplayerLeaderboardLine : MonoBehaviour
{
	[Token(Token = "0x40010E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMesh pos;

	[Token(Token = "0x40010EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMesh player;

	[Token(Token = "0x40010EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Renderer iconExpLevel;

	[Token(Token = "0x40010EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMesh points;

	[Token(Token = "0x40010ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMesh games;

	[Token(Token = "0x6000FB5")]
	[Address(RVA = "0xDF6F4C", Offset = "0xDF6F4C", VA = "0xDF6F4C")]
	public MultiplayerLeaderboardLine()
	{
	}
}
[Token(Token = "0x2000273")]
public class MultiplayerLeaderboardWindow : MonoBehaviour
{
	[Token(Token = "0x40010EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMesh title;

	[Token(Token = "0x40010EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject labels;

	[Token(Token = "0x40010F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject labelGames;

	[Token(Token = "0x40010F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject linePrefab;

	[Token(Token = "0x40010F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject nextLinePrefab;

	[Token(Token = "0x40010F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color ourScoreColor;

	[Token(Token = "0x40010F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMesh playerInfo;

	[Token(Token = "0x40010F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TextMesh requestInfo;

	[Token(Token = "0x40010F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject buttonPrevMonth;

	[Token(Token = "0x40010F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject buttonNextMonth;

	[Token(Token = "0x40010F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ServerWWW request;

	[Token(Token = "0x40010F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<GameObject> lines;

	[Token(Token = "0x40010FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private MultiplayerConfig.LeaderboardScore currType;

	[Token(Token = "0x40010FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private int currPastPeriod;

	[Token(Token = "0x40010FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int currPastPeriodMin;

	[Token(Token = "0x40010FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private int currPastPeriodMax;

	[Token(Token = "0x6000FB6")]
	[Address(RVA = "0xDF6F54", Offset = "0xDF6F54", VA = "0xDF6F54")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FB7")]
	[Address(RVA = "0xDF7008", Offset = "0xDF7008", VA = "0xDF7008")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FB8")]
	[Address(RVA = "0xDF704C", Offset = "0xDF704C", VA = "0xDF704C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000FB9")]
	[Address(RVA = "0xDF79E0", Offset = "0xDF79E0", VA = "0xDF79E0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000FBA")]
	[Address(RVA = "0xDF7050", Offset = "0xDF7050", VA = "0xDF7050")]
	private void RequestLeaderboard()
	{
	}

	[Token(Token = "0x6000FBB")]
	[Address(RVA = "0xDF7A68", Offset = "0xDF7A68", VA = "0xDF7A68")]
	private void CallbackGetLeaderboardResult(object ret, int pastPeriodMin, int pastPeriodMax)
	{
	}

	[Token(Token = "0x6000FBC")]
	[Address(RVA = "0xDF88F8", Offset = "0xDF88F8", VA = "0xDF88F8")]
	private void CallbackGetLeaderboardError(ServerWWWErrorCode error)
	{
	}

	[Token(Token = "0x6000FBD")]
	[Address(RVA = "0xDF8A3C", Offset = "0xDF8A3C", VA = "0xDF8A3C")]
	private void OnPrevMonth()
	{
	}

	[Token(Token = "0x6000FBE")]
	[Address(RVA = "0xDF8B20", Offset = "0xDF8B20", VA = "0xDF8B20")]
	private void OnNextMonth()
	{
	}

	[Token(Token = "0x6000FBF")]
	[Address(RVA = "0xDF8C08", Offset = "0xDF8C08", VA = "0xDF8C08")]
	private void OnNextLeaderboard()
	{
	}

	[Token(Token = "0x6000FC0")]
	[Address(RVA = "0xDF8C34", Offset = "0xDF8C34", VA = "0xDF8C34")]
	public MultiplayerLeaderboardWindow()
	{
	}
}
[Token(Token = "0x2000274")]
public class MultiplayerLoungeMenu : MonoBehaviour
{
	[Token(Token = "0x40010FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MUI_InputText inputLobbyId;

	[Token(Token = "0x40010FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMesh statusText;

	[Token(Token = "0x4001100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject codesListGroup;

	[Token(Token = "0x4001101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMesh[] codesList;

	[Token(Token = "0x4001102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject hideWhenCodesList;

	[Token(Token = "0x4001103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<string> codesHistory;

	[Token(Token = "0x6000FC1")]
	[Address(RVA = "0xDF8CAC", Offset = "0xDF8CAC", VA = "0xDF8CAC")]
	public void Show()
	{
	}

	[Token(Token = "0x6000FC2")]
	[Address(RVA = "0xDF8EB4", Offset = "0xDF8EB4", VA = "0xDF8EB4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000FC3")]
	[Address(RVA = "0xDF912C", Offset = "0xDF912C", VA = "0xDF912C")]
	private void OnClickBack()
	{
	}

	[Token(Token = "0x6000FC4")]
	[Address(RVA = "0xDF91D0", Offset = "0xDF91D0", VA = "0xDF91D0")]
	private void OnClickShowCodeList()
	{
	}

	[Token(Token = "0x6000FC5")]
	[Address(RVA = "0xDF8F74", Offset = "0xDF8F74", VA = "0xDF8F74")]
	private void OnClickCloseCodeList()
	{
	}

	[Token(Token = "0x6000FC6")]
	[Address(RVA = "0xDF93B4", Offset = "0xDF93B4", VA = "0xDF93B4")]
	private void OnClickCodeFromList(int idx)
	{
	}

	[Token(Token = "0x6000FC7")]
	[Address(RVA = "0xDF8FD8", Offset = "0xDF8FD8", VA = "0xDF8FD8")]
	private void LoadCodes()
	{
	}

	[Token(Token = "0x6000FC8")]
	[Address(RVA = "0xDF9454", Offset = "0xDF9454", VA = "0xDF9454")]
	private string GetInputLobbyId()
	{
		return null;
	}

	[Token(Token = "0x6000FC9")]
	[Address(RVA = "0xDF9484", Offset = "0xDF9484", VA = "0xDF9484")]
	private void SaveCode()
	{
	}

	[Token(Token = "0x6000FCA")]
	[Address(RVA = "0xDF96E4", Offset = "0xDF96E4", VA = "0xDF96E4")]
	private bool CheckValidLoungeId()
	{
		return default(bool);
	}

	[Token(Token = "0x6000FCB")]
	[Address(RVA = "0xDF9898", Offset = "0xDF9898", VA = "0xDF9898")]
	private void OnClickCreateLounge()
	{
	}

	[Token(Token = "0x6000FCC")]
	[Address(RVA = "0xDF9BB8", Offset = "0xDF9BB8", VA = "0xDF9BB8")]
	private void OnClickJoinLounge()
	{
	}

	[Token(Token = "0x6000FCD")]
	[Address(RVA = "0xDF9EDC", Offset = "0xDF9EDC", VA = "0xDF9EDC")]
	private void CallbackOnCreatedLounge(bool secondaryServer)
	{
	}

	[Token(Token = "0x6000FCE")]
	[Address(RVA = "0xDFA148", Offset = "0xDFA148", VA = "0xDFA148")]
	public void CallbackOnFailedCreateLounge(bool secondaryServer, PUNWrapper.Error error, string extMessage)
	{
	}

	[Token(Token = "0x6000FCF")]
	[Address(RVA = "0xDFA8B8", Offset = "0xDFA8B8", VA = "0xDFA8B8")]
	private void CallbackOnJoinAlreadyExistResult(bool yes)
	{
	}

	[Token(Token = "0x6000FD0")]
	[Address(RVA = "0xDFAA00", Offset = "0xDFAA00", VA = "0xDFAA00")]
	private void CallbackOnJoinLounge(bool secondaryServer)
	{
	}

	[Token(Token = "0x6000FD1")]
	[Address(RVA = "0xDFABA0", Offset = "0xDFABA0", VA = "0xDFABA0")]
	private void CallbackOnFailedJoinLounge(bool secondaryServer, PUNWrapper.Error error, string extMessage)
	{
	}

	[Token(Token = "0x6000FD2")]
	[Address(RVA = "0xDFB1F4", Offset = "0xDFB1F4", VA = "0xDFB1F4")]
	private void CallbackOnCreateNotExistResult(bool yes)
	{
	}

	[Token(Token = "0x6000FD3")]
	[Address(RVA = "0xDFB2C0", Offset = "0xDFB2C0", VA = "0xDFB2C0")]
	public MultiplayerLoungeMenu()
	{
	}

	[Token(Token = "0x6000FD4")]
	[Address(RVA = "0xDFB338", Offset = "0xDFB338", VA = "0xDFB338")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x928E84", Offset = "0x928E84")]
	private void <CallbackOnFailedJoinLounge>b__22_0()
	{
	}
}
[Token(Token = "0x2000275")]
public class MultiplayerLoungePlayerLine : MonoBehaviour
{
	[Token(Token = "0x4001104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMesh text;

	[Token(Token = "0x4001105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer iconPlayerExpLevel;

	[Token(Token = "0x4001106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject moreButton;

	[Token(Token = "0x4001107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Renderer iconSpeech;

	[Token(Token = "0x4001108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Photon.Realtime.Player player;

	[Token(Token = "0x4001109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MultiplayerLoungeWindow parent;

	[Token(Token = "0x6000FD5")]
	[Address(RVA = "0xDFB538", Offset = "0xDFB538", VA = "0xDFB538")]
	public void Init(Photon.Realtime.Player _player, int idx, MultiplayerLoungeWindow _parent, bool sessionStarted)
	{
	}

	[Token(Token = "0x6000FD6")]
	[Address(RVA = "0xDFB868", Offset = "0xDFB868", VA = "0xDFB868")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FD7")]
	[Address(RVA = "0xDFB940", Offset = "0xDFB940", VA = "0xDFB940")]
	private void OnClickMore()
	{
	}

	[Token(Token = "0x6000FD8")]
	[Address(RVA = "0xDFBDA0", Offset = "0xDFBDA0", VA = "0xDFBDA0")]
	public void OnClickRemove()
	{
	}

	[Token(Token = "0x6000FD9")]
	[Address(RVA = "0xDFBF20", Offset = "0xDFBF20", VA = "0xDFBF20")]
	public void OnClickMute()
	{
	}

	[Token(Token = "0x6000FDA")]
	[Address(RVA = "0xDFC014", Offset = "0xDFC014", VA = "0xDFC014")]
	public void OnClickFriendRequest()
	{
	}

	[Token(Token = "0x6000FDB")]
	[Address(RVA = "0xDFC090", Offset = "0xDFC090", VA = "0xDFC090")]
	private bool KickIsActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000FDC")]
	[Address(RVA = "0xDFBBFC", Offset = "0xDFBBFC", VA = "0xDFBBFC")]
	private void PreparePopup()
	{
	}

	[Token(Token = "0x6000FDD")]
	[Address(RVA = "0xDFB86C", Offset = "0xDFB86C", VA = "0xDFB86C")]
	private void StepSpeechIcon()
	{
	}

	[Token(Token = "0x6000FDE")]
	[Address(RVA = "0xDFC124", Offset = "0xDFC124", VA = "0xDFC124")]
	public MultiplayerLoungePlayerLine()
	{
	}
}
[Token(Token = "0x2000276")]
public class MultiplayerLoungeWindow : MonoBehaviourPunCallbacks
{
	[Serializable]
	[Token(Token = "0x2000277")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9180CC", Offset = "0x9180CC")]
	private sealed class <>c
	{
		[Token(Token = "0x400111E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400111F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static PopupMenu.ItemCallback <>9__21_0;

		[Token(Token = "0x4001120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static PopupMenu.ItemCallback <>9__21_1;

		[Token(Token = "0x4001121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static PopupMenu.ItemCallback <>9__21_2;

		[Token(Token = "0x4001122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Comparison<Photon.Realtime.Player> <>9__34_0;

		[Token(Token = "0x6000FFD")]
		[Address(RVA = "0xD806C0", Offset = "0xD806C0", VA = "0xD806C0")]
		public <>c()
		{
		}

		[Token(Token = "0x6000FFE")]
		[Address(RVA = "0xD806C8", Offset = "0xD806C8", VA = "0xD806C8")]
		internal void <Awake>b__21_0(object s)
		{
		}

		[Token(Token = "0x6000FFF")]
		[Address(RVA = "0xD80750", Offset = "0xD80750", VA = "0xD80750")]
		internal void <Awake>b__21_1(object s)
		{
		}

		[Token(Token = "0x6001000")]
		[Address(RVA = "0xD807D8", Offset = "0xD807D8", VA = "0xD807D8")]
		internal void <Awake>b__21_2(object s)
		{
		}

		[Token(Token = "0x6001001")]
		[Address(RVA = "0xD80860", Offset = "0xD80860", VA = "0xD80860")]
		internal int <UpdatePlayersList>b__34_0(Photon.Realtime.Player a, Photon.Realtime.Player b)
		{
			return default(int);
		}
	}

	[Token(Token = "0x400110A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject controls_Board2;

	[Token(Token = "0x400110B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MultiplayerVoiceWindow voiceWnd;

	[Token(Token = "0x400110C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject title;

	[Token(Token = "0x400110D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject playerLinePrefab;

	[Token(Token = "0x400110E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject playerLinePrefabNext;

	[Token(Token = "0x400110F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMesh loungeInfo;

	[Token(Token = "0x4001110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMesh loungeInfo2;

	[Token(Token = "0x4001111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject buttonInvite;

	[Token(Token = "0x4001112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject buttonCreateSession;

	[Token(Token = "0x4001113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject buttonJoinSession;

	[Token(Token = "0x4001114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public PopupMenu popupMenu;

	[Token(Token = "0x4001115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject popupMenuBlocker;

	[Token(Token = "0x4001116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject leaveMessage;

	[Token(Token = "0x4001117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private List<Photon.Realtime.Player> cachePlayers;

	[Token(Token = "0x4001118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private List<MultiplayerLoungePlayerLine> currPlayersLines;

	[Token(Token = "0x4001119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int updateAfterCallback;

	[Token(Token = "0x400111A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private bool openingOtherWindow;

	[Token(Token = "0x400111B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private int sessionInfoCRC;

	[Token(Token = "0x400111C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private bool sessionInfo_started;

	[Token(Token = "0x400111D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[HideInInspector]
	public MUI_ClippedScroll clippedScroll;

	[Token(Token = "0x6000FDF")]
	[Address(RVA = "0xDFA07C", Offset = "0xDFA07C", VA = "0xDFA07C")]
	public void Show()
	{
	}

	[Token(Token = "0x6000FE0")]
	[Address(RVA = "0xDFC12C", Offset = "0xDFC12C", VA = "0xDFC12C")]
	protected void Awake()
	{
	}

	[Token(Token = "0x6000FE1")]
	[Address(RVA = "0xDFC58C", Offset = "0xDFC58C", VA = "0xDFC58C", Slot = "28")]
	public override void OnEnable()
	{
	}

	[Token(Token = "0x6000FE2")]
	[Address(RVA = "0xDFDE44", Offset = "0xDFDE44", VA = "0xDFDE44", Slot = "29")]
	public override void OnDisable()
	{
	}

	[Token(Token = "0x6000FE3")]
	[Address(RVA = "0xDFDF5C", Offset = "0xDFDF5C", VA = "0xDFDF5C")]
	public bool IsOpeningOtherWindow()
	{
		return default(bool);
	}

	[Token(Token = "0x6000FE4")]
	[Address(RVA = "0xDFDF64", Offset = "0xDFDF64", VA = "0xDFDF64")]
	public void ShowFailedConnectToSession(string msg)
	{
	}

	[Token(Token = "0x6000FE5")]
	[Address(RVA = "0xDFE140", Offset = "0xDFE140", VA = "0xDFE140")]
	public void OnCreatedMultiplayerGame()
	{
	}

	[Token(Token = "0x6000FE6")]
	[Address(RVA = "0xDFE3C0", Offset = "0xDFE3C0", VA = "0xDFE3C0")]
	public void OnManualJoinedMultiplayerGame()
	{
	}

	[Token(Token = "0x6000FE7")]
	[Address(RVA = "0xDFE554", Offset = "0xDFE554", VA = "0xDFE554")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FE8")]
	[Address(RVA = "0xDFDE38", Offset = "0xDFDE38", VA = "0xDFDE38")]
	private void SetUpdateAfterCallback()
	{
	}

	[Token(Token = "0x6000FE9")]
	[Address(RVA = "0xDFE674", Offset = "0xDFE674", VA = "0xDFE674")]
	private void OnClickCloseMenuPopup()
	{
	}

	[Token(Token = "0x6000FEA")]
	[Address(RVA = "0xDFE690", Offset = "0xDFE690", VA = "0xDFE690")]
	private void OnClickBack()
	{
	}

	[Token(Token = "0x6000FEB")]
	[Address(RVA = "0xDFC81C", Offset = "0xDFC81C", VA = "0xDFC81C")]
	private void UpdateLoungeInfo(bool checkChanged = false)
	{
	}

	[Token(Token = "0x6000FEC")]
	[Address(RVA = "0xDFDBFC", Offset = "0xDFDBFC", VA = "0xDFDBFC")]
	private void UpdateButtons()
	{
	}

	[Token(Token = "0x6000FED")]
	[Address(RVA = "0xDFD59C", Offset = "0xDFD59C", VA = "0xDFD59C")]
	private void UpdatePlayersList()
	{
	}

	[Token(Token = "0x6000FEE")]
	[Address(RVA = "0xDFBDBC", Offset = "0xDFBDBC", VA = "0xDFBDBC")]
	public void SetRemovePlayerFromRoom(Photon.Realtime.Player player)
	{
	}

	[Token(Token = "0x6000FEF")]
	[Address(RVA = "0xDFE8D8", Offset = "0xDFE8D8", VA = "0xDFE8D8")]
	public void OnClickCreateSession()
	{
	}

	[Token(Token = "0x6000FF0")]
	[Address(RVA = "0xDFE9A4", Offset = "0xDFE9A4", VA = "0xDFE9A4")]
	public void OnClickJoinSession()
	{
	}

	[Token(Token = "0x6000FF1")]
	[Address(RVA = "0xDFECF0", Offset = "0xDFECF0", VA = "0xDFECF0")]
	public void OnClickInvitePlayer()
	{
	}

	[Token(Token = "0x6000FF2")]
	[Address(RVA = "0xDFED4C", Offset = "0xDFED4C", VA = "0xDFED4C")]
	private void OnClickShowPlanes()
	{
	}

	[Token(Token = "0x6000FF3")]
	[Address(RVA = "0xDFEE54", Offset = "0xDFEE54", VA = "0xDFEE54")]
	private void OnClickShowSettings()
	{
	}

	[Token(Token = "0x6000FF4")]
	[Address(RVA = "0xDFEF5C", Offset = "0xDFEF5C", VA = "0xDFEF5C", Slot = "42")]
	public override void OnPlayerEnteredRoom(Photon.Realtime.Player newPlayer)
	{
	}

	[Token(Token = "0x6000FF5")]
	[Address(RVA = "0xDFF024", Offset = "0xDFF024", VA = "0xDFF024", Slot = "43")]
	public override void OnPlayerLeftRoom(Photon.Realtime.Player otherPlayer)
	{
	}

	[Token(Token = "0x6000FF6")]
	[Address(RVA = "0xDFF0EC", Offset = "0xDFF0EC", VA = "0xDFF0EC", Slot = "46")]
	public override void OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
	{
	}

	[Token(Token = "0x6000FF7")]
	[Address(RVA = "0xDFF170", Offset = "0xDFF170", VA = "0xDFF170", Slot = "47")]
	public override void OnPlayerPropertiesUpdate(Photon.Realtime.Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
	{
	}

	[Token(Token = "0x6000FF8")]
	[Address(RVA = "0xDFF238", Offset = "0xDFF238", VA = "0xDFF238", Slot = "32")]
	public override void OnMasterClientSwitched(Photon.Realtime.Player newMasterClient)
	{
	}

	[Token(Token = "0x6000FF9")]
	[Address(RVA = "0xDFF300", Offset = "0xDFF300", VA = "0xDFF300", Slot = "31")]
	public override void OnLeftRoom()
	{
	}

	[Token(Token = "0x6000FFA")]
	[Address(RVA = "0xDFF548", Offset = "0xDFF548", VA = "0xDFF548", Slot = "38")]
	public override void OnDisconnected(DisconnectCause cause)
	{
	}

	[Token(Token = "0x6000FFB")]
	[Address(RVA = "0xDFF7F4", Offset = "0xDFF7F4", VA = "0xDFF7F4")]
	public MultiplayerLoungeWindow()
	{
	}
}
[Token(Token = "0x2000278")]
public class MultiplayerMainMenu : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000279")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9180DC", Offset = "0x9180DC")]
	private sealed class <>c
	{
		[Token(Token = "0x4001125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action <>9__11_0;

		[Token(Token = "0x4001127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action <>9__22_0;

		[Token(Token = "0x600101E")]
		[Address(RVA = "0xD808E8", Offset = "0xD808E8", VA = "0xD808E8")]
		public <>c()
		{
		}

		[Token(Token = "0x600101F")]
		[Address(RVA = "0xD808F0", Offset = "0xD808F0", VA = "0xD808F0")]
		internal void <OnClickCreateSession>b__11_0()
		{
		}

		[Token(Token = "0x6001020")]
		[Address(RVA = "0xD80BB0", Offset = "0xD80BB0", VA = "0xD80BB0")]
		internal void <OnClickLounge>b__22_0()
		{
		}
	}

	[Token(Token = "0x200027A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9180EC", Offset = "0x9180EC")]
	private sealed class <>c__DisplayClass15_0
	{
		[Token(Token = "0x4001128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MultiplayerMainMenu <>4__this;

		[Token(Token = "0x4001129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool secondaryServer;

		[Token(Token = "0x6001021")]
		[Address(RVA = "0xD80E7C", Offset = "0xD80E7C", VA = "0xD80E7C")]
		public <>c__DisplayClass15_0()
		{
		}

		[Token(Token = "0x6001022")]
		[Address(RVA = "0xD80E84", Offset = "0xD80E84", VA = "0xD80E84")]
		internal void <CancelSearchSessionAndSearchOnDifferentServer>b__0()
		{
		}
	}

	[Token(Token = "0x4001123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMesh serverInfo;

	[Token(Token = "0x4001124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool firstEnable;

	[Token(Token = "0x6001002")]
	[Address(RVA = "0xDFF8AC", Offset = "0xDFF8AC", VA = "0xDFF8AC")]
	public void Show()
	{
	}

	[Token(Token = "0x6001003")]
	[Address(RVA = "0xDFF978", Offset = "0xDFF978", VA = "0xDFF978")]
	private void Start()
	{
	}

	[Token(Token = "0x6001004")]
	[Address(RVA = "0xDFF97C", Offset = "0xDFF97C", VA = "0xDFF97C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001005")]
	[Address(RVA = "0xDFFF5C", Offset = "0xDFFF5C", VA = "0xDFFF5C")]
	private void OnClickQuickPlay()
	{
	}

	[Token(Token = "0x6001006")]
	[Address(RVA = "0xE007F4", Offset = "0xE007F4", VA = "0xE007F4")]
	private void StartQuickPlay(bool secondaryServer)
	{
	}

	[Token(Token = "0x6001007")]
	[Address(RVA = "0xE00AF0", Offset = "0xE00AF0", VA = "0xE00AF0")]
	private void CallbackOnJoinRandomRoom(bool secondaryServer)
	{
	}

	[Token(Token = "0x6001008")]
	[Address(RVA = "0xE00BA0", Offset = "0xE00BA0", VA = "0xE00BA0")]
	private void CallbackOnFailedJoinRandomRoom(bool secondaryServer, PUNWrapper.Error error, string extMessage)
	{
	}

	[Token(Token = "0x6001009")]
	[Address(RVA = "0xE011B4", Offset = "0xE011B4", VA = "0xE011B4")]
	private void CallbackOnCreateRoom(bool secondaryServer)
	{
	}

	[Token(Token = "0x600100A")]
	[Address(RVA = "0xE01264", Offset = "0xE01264", VA = "0xE01264")]
	private void CallbackOnFailedCreateRoom(bool secondaryServer, PUNWrapper.Error error, string extMessage)
	{
	}

	[Token(Token = "0x600100B")]
	[Address(RVA = "0xE01354", Offset = "0xE01354", VA = "0xE01354")]
	public void OnClickCreateSession()
	{
	}

	[Token(Token = "0x600100C")]
	[Address(RVA = "0xE014D8", Offset = "0xE014D8", VA = "0xE014D8")]
	public void OnClickSearchSession()
	{
	}

	[Token(Token = "0x600100D")]
	[Address(RVA = "0xE00078", Offset = "0xE00078", VA = "0xE00078")]
	private bool CheckBanned()
	{
		return default(bool);
	}

	[Token(Token = "0x600100E")]
	[Address(RVA = "0xE002D8", Offset = "0xE002D8", VA = "0xE002D8")]
	private bool CheckInternetConnection()
	{
		return default(bool);
	}

	[Token(Token = "0x600100F")]
	[Address(RVA = "0xE01628", Offset = "0xE01628", VA = "0xE01628")]
	public void CancelSearchSessionAndSearchOnDifferentServer()
	{
	}

	[Token(Token = "0x6001010")]
	[Address(RVA = "0xE01A5C", Offset = "0xE01A5C", VA = "0xE01A5C")]
	private void StartSearchSession(bool secondaryServer, bool showStatus = true)
	{
	}

	[Token(Token = "0x6001011")]
	[Address(RVA = "0xE01D60", Offset = "0xE01D60", VA = "0xE01D60")]
	private void CallbackOnJoinToSearchLobby(bool secondaryServer)
	{
	}

	[Token(Token = "0x6001012")]
	[Address(RVA = "0xE01E10", Offset = "0xE01E10", VA = "0xE01E10")]
	private void CallbackOnFailedJoinToSearchLobby(bool secondaryServer, PUNWrapper.Error error, string extMessage)
	{
	}

	[Token(Token = "0x6001013")]
	[Address(RVA = "0xE01F54", Offset = "0xE01F54", VA = "0xE01F54")]
	private void OnClickSettings()
	{
	}

	[Token(Token = "0x6001014")]
	[Address(RVA = "0xE02050", Offset = "0xE02050", VA = "0xE02050")]
	private void OnClickLeaderboard()
	{
	}

	[Token(Token = "0x6001015")]
	[Address(RVA = "0xE02160", Offset = "0xE02160", VA = "0xE02160")]
	private void OnClickPlayerProfile()
	{
	}

	[Token(Token = "0x6001016")]
	[Address(RVA = "0xE0225C", Offset = "0xE0225C", VA = "0xE0225C")]
	private void OnClickLounge()
	{
	}

	[Token(Token = "0x6001017")]
	[Address(RVA = "0xDFFEB8", Offset = "0xDFFEB8", VA = "0xDFFEB8")]
	private void OnClickPlanesList()
	{
	}

	[Token(Token = "0x6001018")]
	[Address(RVA = "0xE02418", Offset = "0xE02418", VA = "0xE02418")]
	public MultiplayerMainMenu()
	{
	}

	[Token(Token = "0x6001019")]
	[Address(RVA = "0xE02428", Offset = "0xE02428", VA = "0xE02428")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x928E94", Offset = "0x928E94")]
	private void <OnClickQuickPlay>b__5_0()
	{
	}

	[Token(Token = "0x600101A")]
	[Address(RVA = "0xE02430", Offset = "0xE02430", VA = "0xE02430")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x928EA4", Offset = "0x928EA4")]
	private void <CallbackOnFailedJoinRandomRoom>b__8_0()
	{
	}

	[Token(Token = "0x600101B")]
	[Address(RVA = "0xE02518", Offset = "0xE02518", VA = "0xE02518")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x928EB4", Offset = "0x928EB4")]
	private void <CallbackOnFailedJoinRandomRoom>b__8_1()
	{
	}

	[Token(Token = "0x600101C")]
	[Address(RVA = "0xE02604", Offset = "0xE02604", VA = "0xE02604")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x928EC4", Offset = "0x928EC4")]
	private void <OnClickSearchSession>b__12_0()
	{
	}
}
[Token(Token = "0x200027B")]
public class MultiplayerMenuUI : MonoBehaviour
{
	[Token(Token = "0x200027C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9180FC", Offset = "0x9180FC")]
	private sealed class <YieldFirstEnterPlayerName>d__63 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400114D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400114E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400114F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MultiplayerMenuUI <>4__this;

		[Token(Token = "0x4001150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action callbackAfterComplete;

		[Token(Token = "0x170000EA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001061")]
			[Address(RVA = "0xD81D54", Offset = "0xD81D54", VA = "0xD81D54", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001063")]
			[Address(RVA = "0xD81D9C", Offset = "0xD81D9C", VA = "0xD81D9C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600105E")]
		[Address(RVA = "0xD81BEC", Offset = "0xD81BEC", VA = "0xD81BEC")]
		[DebuggerHidden]
		public <YieldFirstEnterPlayerName>d__63(int <>1__state)
		{
		}

		[Token(Token = "0x600105F")]
		[Address(RVA = "0xD81C18", Offset = "0xD81C18", VA = "0xD81C18", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001060")]
		[Address(RVA = "0xD81C1C", Offset = "0xD81C1C", VA = "0xD81C1C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001062")]
		[Address(RVA = "0xD81D5C", Offset = "0xD81D5C", VA = "0xD81D5C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200027D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91810C", Offset = "0x91810C")]
	private sealed class <YieldExecuteDelayedActionAfterDisconnected>d__65 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x4001154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action callback;

		[Token(Token = "0x170000EC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001067")]
			[Address(RVA = "0xD81B9C", Offset = "0xD81B9C", VA = "0xD81B9C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000ED")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001069")]
			[Address(RVA = "0xD81BE4", Offset = "0xD81BE4", VA = "0xD81BE4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001064")]
		[Address(RVA = "0xD81A24", Offset = "0xD81A24", VA = "0xD81A24")]
		[DebuggerHidden]
		public <YieldExecuteDelayedActionAfterDisconnected>d__65(int <>1__state)
		{
		}

		[Token(Token = "0x6001065")]
		[Address(RVA = "0xD81A50", Offset = "0xD81A50", VA = "0xD81A50", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001066")]
		[Address(RVA = "0xD81A54", Offset = "0xD81A54", VA = "0xD81A54", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001068")]
		[Address(RVA = "0xD81BA4", Offset = "0xD81BA4", VA = "0xD81BA4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200027E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91811C", Offset = "0x91811C")]
	private sealed class <>c__DisplayClass66_0
	{
		[Token(Token = "0x4001155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MultiplayerMenuUI <>4__this;

		[Token(Token = "0x4001156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action callbackAfterComplete;

		[Token(Token = "0x600106A")]
		[Address(RVA = "0xD81060", Offset = "0xD81060", VA = "0xD81060")]
		public <>c__DisplayClass66_0()
		{
		}

		[Token(Token = "0x600106B")]
		[Address(RVA = "0xD81068", Offset = "0xD81068", VA = "0xD81068")]
		internal void <StartMultiplayer>b__0()
		{
		}

		[Token(Token = "0x600106C")]
		[Address(RVA = "0xD81090", Offset = "0xD81090", VA = "0xD81090")]
		internal void <StartMultiplayer>b__1(bool ret)
		{
		}
	}

	[Token(Token = "0x200027F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91812C", Offset = "0x91812C")]
	private sealed class <OpenMultiplayerStep1Yielded>d__69 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MultiplayerMenuUI <>4__this;

		[Token(Token = "0x400115A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action callbackAfterComplete;

		[Token(Token = "0x170000EE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001070")]
			[Address(RVA = "0xD819D4", Offset = "0xD819D4", VA = "0xD819D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001072")]
			[Address(RVA = "0xD81A1C", Offset = "0xD81A1C", VA = "0xD81A1C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600106D")]
		[Address(RVA = "0xD816A0", Offset = "0xD816A0", VA = "0xD816A0")]
		[DebuggerHidden]
		public <OpenMultiplayerStep1Yielded>d__69(int <>1__state)
		{
		}

		[Token(Token = "0x600106E")]
		[Address(RVA = "0xD816CC", Offset = "0xD816CC", VA = "0xD816CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600106F")]
		[Address(RVA = "0xD816D0", Offset = "0xD816D0", VA = "0xD816D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001071")]
		[Address(RVA = "0xD819DC", Offset = "0xD819DC", VA = "0xD819DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000280")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91813C", Offset = "0x91813C")]
	private sealed class <>c__DisplayClass70_0
	{
		[Token(Token = "0x400115B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MultiplayerMenuUI <>4__this;

		[Token(Token = "0x400115C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action callbackAfterComplete;

		[Token(Token = "0x6001073")]
		[Address(RVA = "0xD810B8", Offset = "0xD810B8", VA = "0xD810B8")]
		public <>c__DisplayClass70_0()
		{
		}

		[Token(Token = "0x6001074")]
		[Address(RVA = "0xD810C0", Offset = "0xD810C0", VA = "0xD810C0")]
		internal void <OpenMultiplayerStep2>b__0(bool ret)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000281")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91814C", Offset = "0x91814C")]
	private sealed class <>c
	{
		[Token(Token = "0x400115D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400115E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<PUNWrapper.RequestPermissionResult> <>9__72_0;

		[Token(Token = "0x6001076")]
		[Address(RVA = "0xD80FD8", Offset = "0xD80FD8", VA = "0xD80FD8")]
		public <>c()
		{
		}

		[Token(Token = "0x6001077")]
		[Address(RVA = "0xD80FE0", Offset = "0xD80FE0", VA = "0xD80FE0")]
		internal void <OnSelectMicrophonePermission>b__72_0(PUNWrapper.RequestPermissionResult result)
		{
		}
	}

	[Token(Token = "0x2000282")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91815C", Offset = "0x91815C")]
	private sealed class <>c__DisplayClass88_0
	{
		[Token(Token = "0x400115F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MultiplayerMenuUI <>4__this;

		[Token(Token = "0x4001160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool recursive;

		[Token(Token = "0x4001161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UserInvitationData data;

		[Token(Token = "0x4001162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action<bool> <>9__2;

		[Token(Token = "0x4001163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Action<bool, PUNWrapper.Error, string> <>9__3;

		[Token(Token = "0x6001078")]
		[Address(RVA = "0xD810E8", Offset = "0xD810E8", VA = "0xD810E8")]
		public <>c__DisplayClass88_0()
		{
		}

		[Token(Token = "0x6001079")]
		[Address(RVA = "0xD810F0", Offset = "0xD810F0", VA = "0xD810F0")]
		internal void <JoinPlatformLounge>b__0(bool _)
		{
		}

		[Token(Token = "0x600107A")]
		[Address(RVA = "0xD81184", Offset = "0xD81184", VA = "0xD81184")]
		internal void <JoinPlatformLounge>b__1(bool _, PUNWrapper.Error error, string msg)
		{
		}

		[Token(Token = "0x600107B")]
		[Address(RVA = "0xD814D0", Offset = "0xD814D0", VA = "0xD814D0")]
		internal void <JoinPlatformLounge>b__2(bool _)
		{
		}

		[Token(Token = "0x600107C")]
		[Address(RVA = "0xD814F8", Offset = "0xD814F8", VA = "0xD814F8")]
		internal void <JoinPlatformLounge>b__3(bool secondaryServer, PUNWrapper.Error error, string extMessage)
		{
		}
	}

	[Token(Token = "0x400112A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MultiplayerMainMenu wndMainMenu;

	[Token(Token = "0x400112B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MultiplayerStatusWindow wndStatus;

	[Token(Token = "0x400112C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MultiplayerCreateSessionWindow wndCreateSession;

	[Token(Token = "0x400112D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MultiplayerSelectCoOpWindow wndSelectCommunityMission;

	[Token(Token = "0x400112E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public MultiplayerSearchSessionWindow wndSearchSession;

	[Token(Token = "0x400112F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public MultiplayerSessionWindow wndSession;

	[Token(Token = "0x4001130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public MultiplayerGameChatScreenKeyboard wndSessionChatKeyboard;

	[Token(Token = "0x4001131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MultiplayerGameChatScreenKeyboard wndSessionChatInput_Session;

	[Token(Token = "0x4001132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public MultiplayerGameChatScreenKeyboard wndSessionChatInput_Lounge;

	[Token(Token = "0x4001133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public PlanesListBase wndSessionSelectPlane;

	[Token(Token = "0x4001134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject wndSettingsEnterPlayerName;

	[Token(Token = "0x4001135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject wndSettingsEnterPlayerNameKeyboard;

	[Token(Token = "0x4001136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject wndSettings;

	[Token(Token = "0x4001137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject wndLeaderboard;

	[Token(Token = "0x4001138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject wndPlayerInfo;

	[Token(Token = "0x4001139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject wndMainMessageBox;

	[Token(Token = "0x400113A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject wndPaintPlane;

	[Token(Token = "0x400113B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject wndFavoritePlanesInfo;

	[Token(Token = "0x400113C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public MultiplayerFinishScoreWindow wndFinishScore;

	[Token(Token = "0x400113D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public MultiplayerLoungeMenu wndLoungeMenu;

	[Token(Token = "0x400113E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public MultiplayerLoungeWindow wndLoungeWindow;

	[Token(Token = "0x400113F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject[] allWindows_Board2;

	[Token(Token = "0x4001140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject[] rootWindows_Board2;

	[Token(Token = "0x4001141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public OnlyOneActive[] resetOnlyOneActive;

	[Token(Token = "0x4001142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static MultiplayerMenuUI instance;

	[Token(Token = "0x4001143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	protected CustomCampaignData randomCoOpCampaignDataSingle;

	[Token(Token = "0x4001144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	protected CustomCampaignData randomCoOpCampaignDataMulti;

	[Token(Token = "0x4001145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	protected MultiplayerSessionConfig lastCreatedFakeSessionConfig;

	[Token(Token = "0x4001146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	protected bool lastCreatedFakeSessionConfigForQuickPlay;

	[Token(Token = "0x4001147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
	protected bool firstEnterPlayerName;

	[Token(Token = "0x4001148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	protected static string lastCloudSavePlayerName;

	[Token(Token = "0x4001149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	protected static string notLoggedPlayerName;

	[Token(Token = "0x400114A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected static string defNetNickName;

	[Token(Token = "0x400114B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static bool initKbd;

	[Token(Token = "0x400114C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private static bool partyCallbackRegistered;

	[Token(Token = "0x170000E9")]
	public static MultiplayerMenuUI Instance
	{
		[Token(Token = "0x6001023")]
		[Address(RVA = "0xE02610", Offset = "0xE02610", VA = "0xE02610")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001024")]
	[Address(RVA = "0xE02674", Offset = "0xE02674", VA = "0xE02674")]
	protected void Awake()
	{
	}

	[Token(Token = "0x6001025")]
	[Address(RVA = "0xE02E4C", Offset = "0xE02E4C", VA = "0xE02E4C")]
	protected void OnDestroy()
	{
	}

	[Token(Token = "0x6001026")]
	[Address(RVA = "0xE02EB0", Offset = "0xE02EB0", VA = "0xE02EB0")]
	private void Update()
	{
	}

	[Token(Token = "0x6001027")]
	[Address(RVA = "0xE02EB4", Offset = "0xE02EB4", VA = "0xE02EB4")]
	private void Start()
	{
	}

	[Token(Token = "0x6001028")]
	[Address(RVA = "0xDF8624", Offset = "0xDF8624", VA = "0xDF8624")]
	public static string GetPlayerName(bool forNetNickName = false)
	{
		return null;
	}

	[Token(Token = "0x6001029")]
	[Address(RVA = "0xE03B60", Offset = "0xE03B60", VA = "0xE03B60")]
	public static string GetNotLoggedPlayerName()
	{
		return null;
	}

	[Token(Token = "0x600102A")]
	[Address(RVA = "0xE03BD4", Offset = "0xE03BD4", VA = "0xE03BD4")]
	public static bool HaveStoredCloudSavePlayerName()
	{
		return default(bool);
	}

	[Token(Token = "0x600102B")]
	[Address(RVA = "0xE03C8C", Offset = "0xE03C8C", VA = "0xE03C8C")]
	public static void UpdateChangedPlayerName(string newName)
	{
	}

	[Token(Token = "0x600102C")]
	[Address(RVA = "0xDFFD74", Offset = "0xDFFD74", VA = "0xDFFD74")]
	public void ResetChatWindows()
	{
	}

	[Token(Token = "0x600102D")]
	[Address(RVA = "0xDF8D78", Offset = "0xDF8D78", VA = "0xDF8D78")]
	public void HideAllWnd_Board1()
	{
	}

	[Token(Token = "0x600102E")]
	[Address(RVA = "0xE03EB4", Offset = "0xE03EB4", VA = "0xE03EB4")]
	public bool IsOpenAnyWindow_Board1()
	{
		return default(bool);
	}

	[Token(Token = "0x600102F")]
	[Address(RVA = "0xDFC73C", Offset = "0xDFC73C", VA = "0xDFC73C")]
	public void HideAllWnd_Board2()
	{
	}

	[Token(Token = "0x6001030")]
	[Address(RVA = "0xDFFDCC", Offset = "0xDFFDCC", VA = "0xDFFDCC")]
	public bool IsOpenAnyRootWindow_Board2()
	{
		return default(bool);
	}

	[Token(Token = "0x6001031")]
	[Address(RVA = "0xE03FFC", Offset = "0xE03FFC", VA = "0xE03FFC")]
	public void OnCloseLeaderboard()
	{
	}

	[Token(Token = "0x6001032")]
	[Address(RVA = "0xE04000", Offset = "0xE04000", VA = "0xE04000")]
	public void OnClosePlayerProfile()
	{
	}

	[Token(Token = "0x6001033")]
	[Address(RVA = "0xE04004", Offset = "0xE04004", VA = "0xE04004")]
	public void OnCloseSettings()
	{
	}

	[Token(Token = "0x6001034")]
	[Address(RVA = "0xE040B0", Offset = "0xE040B0", VA = "0xE040B0")]
	public void OnShowPaintWindow()
	{
	}

	[Token(Token = "0x6001035")]
	[Address(RVA = "0xE0411C", Offset = "0xE0411C", VA = "0xE0411C")]
	public void OnClosePaintWindow()
	{
	}

	[Token(Token = "0x6001036")]
	[Address(RVA = "0xE04120", Offset = "0xE04120", VA = "0xE04120")]
	public void OnClosePlaneMenu()
	{
	}

	[Token(Token = "0x6001037")]
	[Address(RVA = "0xE04164", Offset = "0xE04164", VA = "0xE04164")]
	public void OnCloseEnterPlayerName()
	{
	}

	[Token(Token = "0x6001038")]
	[Address(RVA = "0xE023D8", Offset = "0xE023D8", VA = "0xE023D8")]
	public void ShowSelectPlaneWindow()
	{
	}

	[Token(Token = "0x6001039")]
	[Address(RVA = "0xE041B4", Offset = "0xE041B4", VA = "0xE041B4")]
	public void FailedConnectMessage(string msg, PUNWrapper.Error error, string extMessage)
	{
	}

	[Token(Token = "0x600103A")]
	[Address(RVA = "0xDFA5FC", Offset = "0xDFA5FC", VA = "0xDFA5FC")]
	public void FailedConnectMessage(string title, string msg, PUNWrapper.Error error, string extMessage, [Optional] Action _callbackOnCancel)
	{
	}

	[Token(Token = "0x600103B")]
	[Address(RVA = "0xE015F4", Offset = "0xE015F4", VA = "0xE015F4")]
	public void ShowMessage(string title, string text, bool showSpinningProgress, bool showWarningIcon, Action _callbackOnCancel, bool showOKbutton = false, bool showYesNoButton = false, [Optional] Action<bool> _callbackOnYesNo)
	{
	}

	[Token(Token = "0x600103C")]
	[Address(RVA = "0xDF6D4C", Offset = "0xDF6D4C", VA = "0xDF6D4C")]
	public void DisconnectAndBackToMenu()
	{
	}

	[Token(Token = "0x600103D")]
	[Address(RVA = "0xDFA984", Offset = "0xDFA984", VA = "0xDFA984")]
	public void DisconnectAndBackToLoungeMenu()
	{
	}

	[Token(Token = "0x600103E")]
	[Address(RVA = "0xE04264", Offset = "0xE04264", VA = "0xE04264")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x928ED4", Offset = "0x928ED4")]
	private IEnumerator YieldFirstEnterPlayerName(Action callbackAfterComplete)
	{
		return null;
	}

	[Token(Token = "0x600103F")]
	[Address(RVA = "0xDFB1C8", Offset = "0xDFB1C8", VA = "0xDFB1C8")]
	public void ExecuteDelayedActionAfterDisconnected(float delay, Action callback)
	{
	}

	[Token(Token = "0x6001040")]
	[Address(RVA = "0xE042DC", Offset = "0xE042DC", VA = "0xE042DC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x928F34", Offset = "0x928F34")]
	private IEnumerator YieldExecuteDelayedActionAfterDisconnected(float delay, Action callback)
	{
		return null;
	}

	[Token(Token = "0x6001041")]
	[Address(RVA = "0xE004D8", Offset = "0xE004D8", VA = "0xE004D8")]
	public void StartMultiplayer(Action callbackAfterComplete)
	{
	}

	[Token(Token = "0x6001042")]
	[Address(RVA = "0xE04534", Offset = "0xE04534", VA = "0xE04534")]
	private void CallbackOnSelectLoginToCloudSave(bool ret, Action callbackAfterComplete)
	{
	}

	[Token(Token = "0x6001043")]
	[Address(RVA = "0xE04358", Offset = "0xE04358", VA = "0xE04358")]
	private void OpenMultiplayerStep1(Action callbackAfterComplete)
	{
	}

	[Token(Token = "0x6001044")]
	[Address(RVA = "0xE048C8", Offset = "0xE048C8", VA = "0xE048C8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x928F94", Offset = "0x928F94")]
	private IEnumerator OpenMultiplayerStep1Yielded(Action callbackAfterComplete)
	{
		return null;
	}

	[Token(Token = "0x6001045")]
	[Address(RVA = "0xE0461C", Offset = "0xE0461C", VA = "0xE0461C")]
	private bool OpenMultiplayerStep2(Action callbackAfterComplete)
	{
		return default(bool);
	}

	[Token(Token = "0x6001046")]
	[Address(RVA = "0xE04940", Offset = "0xE04940", VA = "0xE04940")]
	private bool OpenMultiplayerStep3(Action callbackAfterComplete)
	{
		return default(bool);
	}

	[Token(Token = "0x6001047")]
	[Address(RVA = "0xE049F8", Offset = "0xE049F8", VA = "0xE049F8")]
	private void OnSelectMicrophonePermission(bool ret, Action callbackAfterComplete)
	{
	}

	[Token(Token = "0x6001048")]
	[Address(RVA = "0xE04BB0", Offset = "0xE04BB0", VA = "0xE04BB0")]
	public void UpdateMultiplayerOnOpenSettings()
	{
	}

	[Token(Token = "0x6001049")]
	[Address(RVA = "0xE04C1C", Offset = "0xE04C1C", VA = "0xE04C1C")]
	public void UpdateMultiplayerOnOpenPremiumShop()
	{
	}

	[Token(Token = "0x600104A")]
	[Address(RVA = "0xE04C88", Offset = "0xE04C88", VA = "0xE04C88")]
	private void CallbackGetRandomLevelSaveResult(object obj)
	{
	}

	[Token(Token = "0x600104B")]
	[Address(RVA = "0xE04F04", Offset = "0xE04F04", VA = "0xE04F04")]
	private void CallbackGetRandomLevelSaveError(ServerWWWErrorCode e)
	{
	}

	[Token(Token = "0x600104C")]
	[Address(RVA = "0xE04FEC", Offset = "0xE04FEC", VA = "0xE04FEC")]
	public bool HaveRandomCoOpCampaignData(MultiplayerSessionConfig.PlayMode mode)
	{
		return default(bool);
	}

	[Token(Token = "0x600104D")]
	[Address(RVA = "0xE0500C", Offset = "0xE0500C", VA = "0xE0500C")]
	public CustomCampaignData GetAndResetRandomCoOpCampaignData(MultiplayerSessionConfig.PlayMode mode)
	{
		return null;
	}

	[Token(Token = "0x600104E")]
	[Address(RVA = "0xE011A4", Offset = "0xE011A4", VA = "0xE011A4")]
	public MultiplayerSessionConfig GetFakeBotConfigForQuickPlay()
	{
		return null;
	}

	[Token(Token = "0x600104F")]
	[Address(RVA = "0xE054BC", Offset = "0xE054BC", VA = "0xE054BC")]
	public MultiplayerSessionConfig GetFakeBotConfigForSessionsList(bool preExisting, [Optional] MultiplayerSessionConfig notLikeConfig)
	{
		return null;
	}

	[Token(Token = "0x6001050")]
	[Address(RVA = "0xE051E4", Offset = "0xE051E4", VA = "0xE051E4")]
	private MultiplayerSessionConfig GetFakeBotConfig(bool forQuickPlay, bool forListPreExisting, MultiplayerSessionConfig notLikeConfig)
	{
		return null;
	}

	[Token(Token = "0x6001051")]
	[Address(RVA = "0xE054CC", Offset = "0xE054CC", VA = "0xE054CC")]
	private static void OnPartyJoined()
	{
	}

	[Token(Token = "0x6001052")]
	[Address(RVA = "0xE05540", Offset = "0xE05540", VA = "0xE05540")]
	private static void OnPartyLeft()
	{
	}

	[Token(Token = "0x6001053")]
	[Address(RVA = "0xE03754", Offset = "0xE03754", VA = "0xE03754")]
	public static bool PrepareGameInviteJoin()
	{
		return default(bool);
	}

	[Token(Token = "0x6001054")]
	[Address(RVA = "0xE0587C", Offset = "0xE0587C", VA = "0xE0587C")]
	private void ProcessInvitation()
	{
	}

	[Token(Token = "0x6001055")]
	[Address(RVA = "0xE035A4", Offset = "0xE035A4", VA = "0xE035A4")]
	private bool IsInCurrentPartyLounge()
	{
		return default(bool);
	}

	[Token(Token = "0x6001056")]
	[Address(RVA = "0xE058FC", Offset = "0xE058FC", VA = "0xE058FC")]
	private void JoinAnyPlatformRoom()
	{
	}

	[Token(Token = "0x6001057")]
	[Address(RVA = "0xE05C8C", Offset = "0xE05C8C", VA = "0xE05C8C")]
	private void JoinPlatformLounge(UserInvitationData data, bool recursive = false)
	{
	}

	[Token(Token = "0x6001058")]
	[Address(RVA = "0xE06018", Offset = "0xE06018", VA = "0xE06018")]
	private void JoinPlatformLobby(UserInvitationData data)
	{
	}

	[Token(Token = "0x6001059")]
	[Address(RVA = "0xE06338", Offset = "0xE06338", VA = "0xE06338")]
	public MultiplayerMenuUI()
	{
	}

	[Token(Token = "0x600105B")]
	[Address(RVA = "0xE059EC", Offset = "0xE059EC", VA = "0xE059EC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x928FF4", Offset = "0x928FF4")]
	private void <JoinAnyPlatformRoom>g__Join|87_0(string invite)
	{
	}

	[Token(Token = "0x600105C")]
	[Address(RVA = "0xE063C8", Offset = "0xE063C8", VA = "0xE063C8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x929004", Offset = "0x929004")]
	private void <JoinPlatformLobby>b__89_0(bool _)
	{
	}

	[Token(Token = "0x600105D")]
	[Address(RVA = "0xE06454", Offset = "0xE06454", VA = "0xE06454")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x929014", Offset = "0x929014")]
	private void <JoinPlatformLobby>b__89_1(bool _, PUNWrapper.Error error, string msg)
	{
	}
}
[Token(Token = "0x2000283")]
public class MultiplayerMessage : MonoBehaviour
{
	[Token(Token = "0x2000284")]
	private class Line
	{
		[Token(Token = "0x400117E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string msg;

		[Token(Token = "0x400117F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MessageType type;

		[Token(Token = "0x4001180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMesh text;

		[Token(Token = "0x4001181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject go;

		[Token(Token = "0x4001182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool blinking;

		[Token(Token = "0x4001183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float leftTime;

		[Token(Token = "0x4001184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool updated;

		[Token(Token = "0x4001185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float blinkNextTime;

		[Token(Token = "0x6001086")]
		[Address(RVA = "0xD81DA4", Offset = "0xD81DA4", VA = "0xD81DA4")]
		public Line()
		{
		}
	}

	[Token(Token = "0x2000285")]
	public enum MessageType
	{
		[Token(Token = "0x4001187")]
		neutral,
		[Token(Token = "0x4001188")]
		positive,
		[Token(Token = "0x4001189")]
		negative
	}

	[Token(Token = "0x4001164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject groupMessage;

	[Token(Token = "0x4001165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject groupMessagePosBelowReturnToArea;

	[Token(Token = "0x4001166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject messageBkg;

	[Token(Token = "0x4001167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject linePrefab;

	[Token(Token = "0x4001168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject lineNext;

	[Token(Token = "0x4001169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMesh lineBreakCalc;

	[Token(Token = "0x400116A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int linesCnt;

	[Token(Token = "0x400116B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Color[] colorMessage;

	[Token(Token = "0x400116C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject groupTimer;

	[Token(Token = "0x400116D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TextMesh textTimer;

	[Token(Token = "0x400116E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TextMesh textTimerSh;

	[Token(Token = "0x400116F")]
	private const float showMsgTime = 3f;

	[Token(Token = "0x4001170")]
	private const float fadeSpeed = 2f;

	[Token(Token = "0x4001171")]
	private const float scrollSpeed = 1.5f;

	[Token(Token = "0x4001172")]
	public const float blinkingOnTime = 0.8f;

	[Token(Token = "0x4001173")]
	public const float blinkingOffTime = 0.5f;

	[Token(Token = "0x4001174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static MultiplayerMessage instance;

	[Token(Token = "0x4001175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<Line> lines;

	[Token(Token = "0x4001176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<Line> linesQueue;

	[Token(Token = "0x4001177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool fading;

	[Token(Token = "0x4001178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	private bool scrolling;

	[Token(Token = "0x4001179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float scrollSum;

	[Token(Token = "0x400117A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float currHeightOffset;

	[Token(Token = "0x400117B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Vector3 bkgScaleBase;

	[Token(Token = "0x400117C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Vector3 bkgPosBase;

	[Token(Token = "0x400117D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private bool finalMessage;

	[Token(Token = "0x170000F0")]
	public static MultiplayerMessage Instance
	{
		[Token(Token = "0x600107D")]
		[Address(RVA = "0xE06690", Offset = "0xE06690", VA = "0xE06690")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600107E")]
	[Address(RVA = "0xE066DC", Offset = "0xE066DC", VA = "0xE066DC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600107F")]
	[Address(RVA = "0xE068FC", Offset = "0xE068FC", VA = "0xE068FC")]
	public void ShowTimer(string msg)
	{
	}

	[Token(Token = "0x6001080")]
	[Address(RVA = "0xE06958", Offset = "0xE06958", VA = "0xE06958")]
	public void AddMessage(string msg, MessageType type, bool blinking = false, float showTime = 3f)
	{
	}

	[Token(Token = "0x6001081")]
	[Address(RVA = "0xE071D0", Offset = "0xE071D0", VA = "0xE071D0")]
	public void AddFinalMessage(string msg, MessageType type)
	{
	}

	[Token(Token = "0x6001082")]
	[Address(RVA = "0xE06FBC", Offset = "0xE06FBC", VA = "0xE06FBC")]
	private void ResetAll()
	{
	}

	[Token(Token = "0x6001083")]
	[Address(RVA = "0xE073A0", Offset = "0xE073A0", VA = "0xE073A0")]
	private void Update()
	{
	}

	[Token(Token = "0x6001084")]
	[Address(RVA = "0xE07F20", Offset = "0xE07F20", VA = "0xE07F20")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001085")]
	[Address(RVA = "0xE07FA4", Offset = "0xE07FA4", VA = "0xE07FA4")]
	public MultiplayerMessage()
	{
	}
}
[Token(Token = "0x2000286")]
public class MultiplayerMissionPlayersList : MonoBehaviour
{
	[Token(Token = "0x2000287")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91816C", Offset = "0x91816C")]
	private sealed class <>c__DisplayClass28_0
	{
		[Token(Token = "0x400119E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MultiplayerConfig.Team localTeam;

		[Token(Token = "0x6001095")]
		[Address(RVA = "0xD81DAC", Offset = "0xD81DAC", VA = "0xD81DAC")]
		public <>c__DisplayClass28_0()
		{
		}

		[Token(Token = "0x6001096")]
		[Address(RVA = "0xD81DB4", Offset = "0xD81DB4", VA = "0xD81DB4")]
		internal int <GetSortedPlayers>b__0(NetPlayer a, NetPlayer b)
		{
			return default(int);
		}
	}

	[Token(Token = "0x400118A")]
	private const int maxVisibleLines = 8;

	[Token(Token = "0x400118B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform wndRoot;

	[Token(Token = "0x400118C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject fullLinePrefab;

	[Token(Token = "0x400118D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject fullLinePrefabNext;

	[Token(Token = "0x400118E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Color colorPlayerLeft;

	[Token(Token = "0x400118F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color colorPlayerLeftDefeated;

	[Token(Token = "0x4001190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Color colorPlayerDefeat;

	[Token(Token = "0x4001191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Material materialTeamA;

	[Token(Token = "0x4001192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Material materialTeamA_night;

	[Token(Token = "0x4001193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Material materialTeamB;

	[Token(Token = "0x4001194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Material materialTeamB_night;

	[Token(Token = "0x4001195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public TextMesh totalTeamA_score;

	[Token(Token = "0x4001196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Renderer totalTeamA_flag;

	[Token(Token = "0x4001197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public TextMesh totalTeamB_score;

	[Token(Token = "0x4001198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Renderer totalTeamB_flag;

	[Token(Token = "0x4001199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private int localPlayerId;

	[Token(Token = "0x400119A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected List<MultiplayerMissionPlayersListLine> lines;

	[Token(Token = "0x400119B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected int teamAScore;

	[Token(Token = "0x400119C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	protected int teamBScore;

	[Token(Token = "0x400119D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MultiplayerMissionPlayersList instance;

	[Token(Token = "0x6001087")]
	[Address(RVA = "0xE08044", Offset = "0xE08044", VA = "0xE08044")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001088")]
	[Address(RVA = "0xE08320", Offset = "0xE08320", VA = "0xE08320")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001089")]
	[Address(RVA = "0xE0836C", Offset = "0xE0836C", VA = "0xE0836C")]
	private void Start()
	{
	}

	[Token(Token = "0x600108A")]
	[Address(RVA = "0xE081B8", Offset = "0xE081B8", VA = "0xE081B8")]
	private bool IsVisible()
	{
		return default(bool);
	}

	[Token(Token = "0x600108B")]
	[Address(RVA = "0xE09190", Offset = "0xE09190", VA = "0xE09190")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600108C")]
	[Address(RVA = "0xE09494", Offset = "0xE09494", VA = "0xE09494")]
	public void Eject()
	{
	}

	[Token(Token = "0x600108D")]
	[Address(RVA = "0xE094E4", Offset = "0xE094E4", VA = "0xE094E4")]
	public void OnChangedPlayers()
	{
	}

	[Token(Token = "0x600108E")]
	[Address(RVA = "0xE094E8", Offset = "0xE094E8", VA = "0xE094E8")]
	public void OnChangedPlayer(int netPlayerId)
	{
	}

	[Token(Token = "0x600108F")]
	[Address(RVA = "0xE09E3C", Offset = "0xE09E3C", VA = "0xE09E3C")]
	public static List<NetPlayer> GetSortedPlayers()
	{
		return null;
	}

	[Token(Token = "0x6001090")]
	[Address(RVA = "0xE088B0", Offset = "0xE088B0", VA = "0xE088B0")]
	private void FillPlayersList()
	{
	}

	[Token(Token = "0x6001091")]
	[Address(RVA = "0xE08FD4", Offset = "0xE08FD4", VA = "0xE08FD4")]
	private void UpdatePlayers()
	{
	}

	[Token(Token = "0x6001092")]
	[Address(RVA = "0xE0960C", Offset = "0xE0960C", VA = "0xE0960C")]
	private int FindNetPlayerIdx(int netPlayerId)
	{
		return default(int);
	}

	[Token(Token = "0x6001093")]
	[Address(RVA = "0xE096BC", Offset = "0xE096BC", VA = "0xE096BC")]
	private void UpdatePlayerIdx(int i)
	{
	}

	[Token(Token = "0x6001094")]
	[Address(RVA = "0xE0A60C", Offset = "0xE0A60C", VA = "0xE0A60C")]
	public MultiplayerMissionPlayersList()
	{
	}
}
[Token(Token = "0x2000288")]
public class MultiplayerMissionPlayersListLine : MonoBehaviour
{
	[Token(Token = "0x400119F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject teamFlag;

	[Token(Token = "0x40011A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMesh player;

	[Token(Token = "0x40011A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMesh player_noflag;

	[Token(Token = "0x40011A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMesh kills;

	[Token(Token = "0x40011A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMesh deaths;

	[NonSerialized]
	[Token(Token = "0x40011A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int playerId;

	[NonSerialized]
	[Token(Token = "0x40011A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public MultiplayerConfig.Team playerTeam;

	[NonSerialized]
	[Token(Token = "0x40011A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string playerNickname;

	[NonSerialized]
	[Token(Token = "0x40011A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool playerIsGunner;

	[NonSerialized]
	[Token(Token = "0x40011A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	public bool defeated;

	[Token(Token = "0x6001097")]
	[Address(RVA = "0xE0A684", Offset = "0xE0A684", VA = "0xE0A684")]
	public MultiplayerMissionPlayersListLine()
	{
	}
}
[Token(Token = "0x2000289")]
public class MultiplayerPlayerInfoWindow : MonoBehaviour
{
	[Token(Token = "0x40011A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMesh playerName;

	[Token(Token = "0x40011AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject playerNameEmpty;

	[Token(Token = "0x40011AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMesh expRank;

	[Token(Token = "0x40011AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMesh expLevel;

	[Token(Token = "0x40011AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Renderer expLevelIcon;

	[Token(Token = "0x40011AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMesh expPoints;

	[Token(Token = "0x40011AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Renderer expProgress;

	[Token(Token = "0x40011B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMesh killDeathRatio;

	[Token(Token = "0x40011B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TextMesh timePlayed;

	[Token(Token = "0x40011B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TextMesh leaderboardLabel;

	[Token(Token = "0x40011B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TextMesh scorePosition;

	[Token(Token = "0x40011B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TextMesh scorePoints;

	[Token(Token = "0x40011B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public TextMesh scoreGames;

	[Token(Token = "0x40011B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject scoreGamesLabel;

	[Token(Token = "0x40011B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject showWhenCloudLogged;

	[Token(Token = "0x40011B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject showWhenCloudNotLogged;

	[Token(Token = "0x40011B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private ServerWWW scoreRequest;

	[Token(Token = "0x40011BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private PlayerScore[] playerScores;

	[Token(Token = "0x40011BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool fillCurrentScores;

	[Token(Token = "0x40011BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private int currentScoreTypeIdx;

	[Token(Token = "0x40011BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly MultiplayerConfig.LeaderboardScore[] scoreLeaderboardTypes;

	[Token(Token = "0x40011BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly string[] scoreTypes;

	[Token(Token = "0x40011BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly string[] scoreLabels;

	[Token(Token = "0x6001098")]
	[Address(RVA = "0xE0A6D8", Offset = "0xE0A6D8", VA = "0xE0A6D8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001099")]
	[Address(RVA = "0xE0B610", Offset = "0xE0B610", VA = "0xE0B610")]
	private void Update()
	{
	}

	[Token(Token = "0x600109A")]
	[Address(RVA = "0xE0B0E0", Offset = "0xE0B0E0", VA = "0xE0B0E0")]
	private void RequestScores()
	{
	}

	[Token(Token = "0x600109B")]
	[Address(RVA = "0xE0B624", Offset = "0xE0B624", VA = "0xE0B624")]
	private void CallbackGetScoreResult(object ret)
	{
	}

	[Token(Token = "0x600109C")]
	[Address(RVA = "0xE0B6A8", Offset = "0xE0B6A8", VA = "0xE0B6A8")]
	private void CallbackGetScoreError(ServerWWWErrorCode error)
	{
	}

	[Token(Token = "0x600109D")]
	[Address(RVA = "0xE0B240", Offset = "0xE0B240", VA = "0xE0B240")]
	private void FillCurrentScores()
	{
	}

	[Token(Token = "0x600109E")]
	[Address(RVA = "0xE0B6B0", Offset = "0xE0B6B0", VA = "0xE0B6B0")]
	private void OnPrevScores()
	{
	}

	[Token(Token = "0x600109F")]
	[Address(RVA = "0xE0B73C", Offset = "0xE0B73C", VA = "0xE0B73C")]
	private void OnNextScores()
	{
	}

	[Token(Token = "0x60010A0")]
	[Address(RVA = "0xE0B7D0", Offset = "0xE0B7D0", VA = "0xE0B7D0")]
	private void OnClickChangePlayerName()
	{
	}

	[Token(Token = "0x60010A1")]
	[Address(RVA = "0xE0B8A4", Offset = "0xE0B8A4", VA = "0xE0B8A4")]
	public MultiplayerPlayerInfoWindow()
	{
	}
}
[Token(Token = "0x200028A")]
public class MultiplayerPlayersStatsGui : MonoBehaviour
{
	[Token(Token = "0x40011C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rect statsRect;

	[Token(Token = "0x40011C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int WindowId;

	[Token(Token = "0x40011C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool visible;

	[Token(Token = "0x60010A3")]
	[Address(RVA = "0xE0BDF8", Offset = "0xE0BDF8", VA = "0xE0BDF8")]
	private void Start()
	{
	}

	[Token(Token = "0x60010A4")]
	[Address(RVA = "0xE0BDFC", Offset = "0xE0BDFC", VA = "0xE0BDFC")]
	public void OnGUI()
	{
	}

	[Token(Token = "0x60010A5")]
	[Address(RVA = "0xE0BF7C", Offset = "0xE0BF7C", VA = "0xE0BF7C")]
	public void PlayersStatsWindow(int windowID)
	{
	}

	[Token(Token = "0x60010A6")]
	[Address(RVA = "0xE0C97C", Offset = "0xE0C97C", VA = "0xE0C97C")]
	public MultiplayerPlayersStatsGui()
	{
	}
}
[Token(Token = "0x200028B")]
public class MultiplayerRespawnPlanesItem : MonoBehaviour
{
	[Token(Token = "0x40011C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMesh textName;

	[Token(Token = "0x40011C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer icon;

	[Token(Token = "0x40011C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMesh[] textAmmoInfoLabels;

	[Token(Token = "0x40011C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMesh[] textAmmoInfoValues;

	[Token(Token = "0x40011C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject[] textAmmoInfoLine;

	[Token(Token = "0x40011C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Renderer planeStateFavorite;

	[Token(Token = "0x40011C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material planeState_MultiFavorite;

	[Token(Token = "0x40011CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Material planeState_MultiFavoriteDefault;

	[Token(Token = "0x40011CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private PlayerPlane plane;

	[Token(Token = "0x60010A7")]
	[Address(RVA = "0xE0C9EC", Offset = "0xE0C9EC", VA = "0xE0C9EC")]
	public void Fill(PlayerPlane _plane)
	{
	}

	[Token(Token = "0x60010A8")]
	[Address(RVA = "0xE0D53C", Offset = "0xE0D53C", VA = "0xE0D53C")]
	public PlayerPlane GetPlane()
	{
		return null;
	}

	[Token(Token = "0x60010A9")]
	[Address(RVA = "0xE0D544", Offset = "0xE0D544", VA = "0xE0D544")]
	public void Click()
	{
	}

	[Token(Token = "0x60010AA")]
	[Address(RVA = "0xE0D718", Offset = "0xE0D718", VA = "0xE0D718")]
	public MultiplayerRespawnPlanesItem()
	{
	}
}
[Token(Token = "0x200028C")]
public class MultiplayerRespawnPlanesWindow : MonoBehaviour
{
	[Token(Token = "0x40011CC")]
	private const int columnsCnt = 2;

	[Token(Token = "0x40011CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject planePrefab;

	[Token(Token = "0x40011CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject planePrefabNext;

	[Token(Token = "0x40011CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMesh textTimer;

	[Token(Token = "0x40011D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject selector;

	[Token(Token = "0x40011D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMesh title;

	[Token(Token = "0x40011D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject planePrefabFavorites;

	[Token(Token = "0x40011D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject planePrefabFavoritesNext;

	[Token(Token = "0x40011D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected bool started;

	[Token(Token = "0x40011D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected List<MultiplayerRespawnPlanesItem> items;

	[Token(Token = "0x40011D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected float timerShow;

	[Token(Token = "0x40011D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	protected int selectedIndex;

	[Token(Token = "0x40011D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected bool planeSelected;

	[Token(Token = "0x60010AB")]
	[Address(RVA = "0xE0D720", Offset = "0xE0D720", VA = "0xE0D720")]
	private void Start()
	{
	}

	[Token(Token = "0x60010AC")]
	[Address(RVA = "0xE0DE5C", Offset = "0xE0DE5C", VA = "0xE0DE5C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60010AD")]
	[Address(RVA = "0xE0E1A0", Offset = "0xE0E1A0", VA = "0xE0E1A0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60010AE")]
	[Address(RVA = "0xE0DD60", Offset = "0xE0DD60", VA = "0xE0DD60")]
	private void FillTitle()
	{
	}

	[Token(Token = "0x60010AF")]
	[Address(RVA = "0xE0D74C", Offset = "0xE0D74C", VA = "0xE0D74C")]
	private void FillItems()
	{
	}

	[Token(Token = "0x60010B0")]
	[Address(RVA = "0xE0DF04", Offset = "0xE0DF04", VA = "0xE0DF04")]
	private void UpdateSelected()
	{
	}

	[Token(Token = "0x60010B1")]
	[Address(RVA = "0xE0E328", Offset = "0xE0E328", VA = "0xE0E328")]
	private void Update()
	{
	}

	[Token(Token = "0x60010B2")]
	[Address(RVA = "0xE0E52C", Offset = "0xE0E52C", VA = "0xE0E52C")]
	private void OnClickClose()
	{
	}

	[Token(Token = "0x60010B3")]
	[Address(RVA = "0xE0D5F4", Offset = "0xE0D5F4", VA = "0xE0D5F4")]
	public void OnSelectPlane(PlayerPlane plane)
	{
	}

	[Token(Token = "0x60010B4")]
	[Address(RVA = "0xE0E534", Offset = "0xE0E534", VA = "0xE0E534")]
	public MultiplayerRespawnPlanesWindow()
	{
	}
}
[Token(Token = "0x200028D")]
public class MultiplayerSearchSessionWindow : MonoBehaviourPunCallbacks
{
	[Token(Token = "0x200028E")]
	protected class RoomItem
	{
		[Token(Token = "0x40011FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int nextUID;

		[Token(Token = "0x40011FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int uid;

		[Token(Token = "0x40011FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float createTime;

		[Token(Token = "0x40011FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool exist;

		[Token(Token = "0x4001200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string name;

		[Token(Token = "0x4001201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string fakeBotMaster;

		[Token(Token = "0x4001202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float fakeRemoveDelay;

		[Token(Token = "0x4001203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public MultiplayerSessionConfig config;

		[Token(Token = "0x4001204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public MultiplayerSessionInfo line;

		[Token(Token = "0x60010CE")]
		[Address(RVA = "0xD827EC", Offset = "0xD827EC", VA = "0xD827EC")]
		public RoomItem(RoomInfo room)
		{
		}

		[Token(Token = "0x60010CF")]
		[Address(RVA = "0xD82900", Offset = "0xD82900", VA = "0xD82900")]
		public RoomItem(MultiplayerSessionConfig _config)
		{
		}
	}

	[Token(Token = "0x200028F")]
	private enum ProgressState
	{
		[Token(Token = "0x4001206")]
		SearchRotate,
		[Token(Token = "0x4001207")]
		SearchIdle,
		[Token(Token = "0x4001208")]
		Join
	}

	[Token(Token = "0x2000290")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91817C", Offset = "0x91817C")]
	private sealed class <>c__DisplayClass42_0
	{
		[Token(Token = "0x4001209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MultiplayerSearchSessionWindow <>4__this;

		[Token(Token = "0x400120A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool secondaryServer;

		[Token(Token = "0x60010D1")]
		[Address(RVA = "0xD824B4", Offset = "0xD824B4", VA = "0xD824B4")]
		public <>c__DisplayClass42_0()
		{
		}

		[Token(Token = "0x60010D2")]
		[Address(RVA = "0xD824BC", Offset = "0xD824BC", VA = "0xD824BC")]
		internal void <Update>b__0()
		{
		}
	}

	[Token(Token = "0x2000291")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91818C", Offset = "0x91818C")]
	private sealed class <>c__DisplayClass49_0
	{
		[Token(Token = "0x400120B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MultiplayerSearchSessionWindow <>4__this;

		[Token(Token = "0x400120C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MultiplayerSessionConfig config;

		[Token(Token = "0x60010D3")]
		[Address(RVA = "0xD82654", Offset = "0xD82654", VA = "0xD82654")]
		public <>c__DisplayClass49_0()
		{
		}

		[Token(Token = "0x60010D4")]
		[Address(RVA = "0xD8265C", Offset = "0xD8265C", VA = "0xD8265C")]
		internal void <OnClickLine>b__0()
		{
		}
	}

	[Token(Token = "0x40011D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject linePrefab;

	[Token(Token = "0x40011DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject linePrefabNext;

	[Token(Token = "0x40011DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int maxLinesCnt;

	[Token(Token = "0x40011DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject searchingInfo;

	[Token(Token = "0x40011DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject connectingInfo;

	[Token(Token = "0x40011DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject notFoundSessionInfo;

	[Token(Token = "0x40011DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject progress;

	[Token(Token = "0x40011E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject buttonSelectPlane;

	[Token(Token = "0x40011E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TextMesh serverInfo;

	[Token(Token = "0x40011E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float searchProgressSpeedZ;

	[Token(Token = "0x40011E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float searchProgressRotateTime;

	[Token(Token = "0x40011E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float searchProgressIdleTime;

	[Token(Token = "0x40011E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float joinProgressSpeedZ;

	[Token(Token = "0x40011E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float showNotFoundInfoDelayTime;

	[Token(Token = "0x40011E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float hideNotFoundInfoDelayTime;

	[Token(Token = "0x40011E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject failedConnectMessage;

	[Token(Token = "0x40011E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float showFailedConnectMessageTime;

	[Token(Token = "0x40011EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float startTime;

	[Token(Token = "0x40011EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float progressStartTime;

	[Token(Token = "0x40011EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private ProgressState progressState;

	[Token(Token = "0x40011ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float showNotFoundInfoStartTime;

	[Token(Token = "0x40011EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private bool joiningRoom;

	[Token(Token = "0x40011EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9D")]
	private bool joiningAnotherServer;

	[Token(Token = "0x40011F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9E")]
	private bool creatingFakeSession;

	[Token(Token = "0x40011F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float switchServerDelayTime;

	[Token(Token = "0x40011F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float showFailedConnectMessageStartTime;

	[Token(Token = "0x40011F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float preExistingFakeSessionTime;

	[Token(Token = "0x40011F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float firstFakeSessionTime;

	[Token(Token = "0x40011F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float secondFakeSessionTime;

	[Token(Token = "0x40011F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float thirdFakeSessionTime;

	[Token(Token = "0x40011F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float createFakeSessionTimer;

	[Token(Token = "0x40011F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float addSessionDemoTime;

	[Token(Token = "0x40011F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool checkPreExisting;

	[Token(Token = "0x40011FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float updateServerInfoTime;

	[Token(Token = "0x40011FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	protected List<RoomItem> rooms;

	[Token(Token = "0x60010B5")]
	[Address(RVA = "0x1502EC4", Offset = "0x1502EC4", VA = "0x1502EC4")]
	public void Show()
	{
	}

	[Token(Token = "0x60010B6")]
	[Address(RVA = "0x1502F94", Offset = "0x1502F94", VA = "0x1502F94")]
	private void Awake()
	{
	}

	[Token(Token = "0x60010B7")]
	[Address(RVA = "0x15030D0", Offset = "0x15030D0", VA = "0x15030D0", Slot = "28")]
	public override void OnEnable()
	{
	}

	[Token(Token = "0x60010B8")]
	[Address(RVA = "0x1503FAC", Offset = "0x1503FAC", VA = "0x1503FAC", Slot = "29")]
	public override void OnDisable()
	{
	}

	[Token(Token = "0x60010B9")]
	[Address(RVA = "0x1503FB4", Offset = "0x1503FB4", VA = "0x1503FB4")]
	public void OnOpenMainMultiplayerMenu()
	{
	}

	[Token(Token = "0x60010BA")]
	[Address(RVA = "0x1503FC0", Offset = "0x1503FC0", VA = "0x1503FC0")]
	private void Update()
	{
	}

	[Token(Token = "0x60010BB")]
	[Address(RVA = "0x150330C", Offset = "0x150330C", VA = "0x150330C")]
	private void InvalidateExistingRooms()
	{
	}

	[Token(Token = "0x60010BC")]
	[Address(RVA = "0x1504A00", Offset = "0x1504A00", VA = "0x1504A00")]
	private RoomItem CreateFakeBotSession(MultiplayerSessionConfig preExistingConfig)
	{
		return null;
	}

	[Token(Token = "0x60010BD")]
	[Address(RVA = "0x15034F4", Offset = "0x15034F4", VA = "0x15034F4")]
	private void UpdateSessions()
	{
	}

	[Token(Token = "0x60010BE")]
	[Address(RVA = "0x1503C80", Offset = "0x1503C80", VA = "0x1503C80")]
	private void UpdateServerInfo()
	{
	}

	[Token(Token = "0x60010BF")]
	[Address(RVA = "0x15061CC", Offset = "0x15061CC", VA = "0x15061CC")]
	private int FindRoom(string name)
	{
		return default(int);
	}

	[Token(Token = "0x60010C0")]
	[Address(RVA = "0x1506284", Offset = "0x1506284", VA = "0x1506284")]
	private int FindRoom(int uid)
	{
		return default(int);
	}

	[Token(Token = "0x60010C1")]
	[Address(RVA = "0x1506334", Offset = "0x1506334", VA = "0x1506334")]
	public void OnClickLine(int uid)
	{
	}

	[Token(Token = "0x60010C2")]
	[Address(RVA = "0x1506A44", Offset = "0x1506A44", VA = "0x1506A44")]
	public void CallbackOnJoinToSearchLobby(bool secondaryServer)
	{
	}

	[Token(Token = "0x60010C3")]
	[Address(RVA = "0x1506B10", Offset = "0x1506B10", VA = "0x1506B10")]
	public void CallbackOnFailedJoinToSearchLobby(bool secondaryServer, PUNWrapper.Error error, string extMessage)
	{
	}

	[Token(Token = "0x60010C4")]
	[Address(RVA = "0x1506D10", Offset = "0x1506D10", VA = "0x1506D10")]
	public void CallbackOnJoinToRoom(bool secondaryServer)
	{
	}

	[Token(Token = "0x60010C5")]
	[Address(RVA = "0x1506FE4", Offset = "0x1506FE4", VA = "0x1506FE4")]
	private void CallbackOnFailedJoinToRoom(bool secondaryServer, PUNWrapper.Error error, string extMessage)
	{
	}

	[Token(Token = "0x60010C6")]
	[Address(RVA = "0x15070E8", Offset = "0x15070E8", VA = "0x15070E8")]
	private void CallbackOnCreateRoom(bool secondaryServer)
	{
	}

	[Token(Token = "0x60010C7")]
	[Address(RVA = "0x15070F0", Offset = "0x15070F0", VA = "0x15070F0")]
	private void CallbackOnFailedCreateRoom(bool secondaryServer, PUNWrapper.Error error, string extMessage)
	{
	}

	[Token(Token = "0x60010C8")]
	[Address(RVA = "0x15070F8", Offset = "0x15070F8", VA = "0x15070F8")]
	private void OnClickCreateSession()
	{
	}

	[Token(Token = "0x60010C9")]
	[Address(RVA = "0x1507240", Offset = "0x1507240", VA = "0x1507240")]
	private void OnClickBack()
	{
	}

	[Token(Token = "0x60010CA")]
	[Address(RVA = "0x15072E8", Offset = "0x15072E8", VA = "0x15072E8", Slot = "40")]
	public override void OnRoomListUpdate(List<RoomInfo> roomList)
	{
	}

	[Token(Token = "0x60010CB")]
	[Address(RVA = "0x1507EE8", Offset = "0x1507EE8", VA = "0x1507EE8", Slot = "37")]
	public override void OnLeftLobby()
	{
	}

	[Token(Token = "0x60010CC")]
	[Address(RVA = "0x1508134", Offset = "0x1508134", VA = "0x1508134", Slot = "38")]
	public override void OnDisconnected(DisconnectCause cause)
	{
	}

	[Token(Token = "0x60010CD")]
	[Address(RVA = "0x1508570", Offset = "0x1508570", VA = "0x1508570")]
	public MultiplayerSearchSessionWindow()
	{
	}
}
[Token(Token = "0x2000292")]
public class MultiplayerSelectCoOpItemLine : MonoBehaviour
{
	[Token(Token = "0x400120D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMesh infoLine1;

	[Token(Token = "0x400120E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMesh infoLine1r;

	[Token(Token = "0x400120F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMesh infoLine2;

	[Token(Token = "0x4001210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Renderer favoriteIcon;

	[Token(Token = "0x4001211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject tasksInfoButton;

	[Token(Token = "0x60010D5")]
	[Address(RVA = "0x15085FC", Offset = "0x15085FC", VA = "0x15085FC")]
	public MultiplayerSelectCoOpItemLine()
	{
	}
}
[Token(Token = "0x2000293")]
public class MultiplayerSelectCoOpWindow : MonoBehaviour
{
	[Token(Token = "0x4001212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMesh textSortBy;

	[Token(Token = "0x4001213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CloudSave_Checkbox checkboxOnlyFavorites;

	[Token(Token = "0x4001214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MUI_InputText inputAuthorName;

	[Token(Token = "0x4001215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject itemPrefab;

	[Token(Token = "0x4001216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject itemPrefabNext;

	[Token(Token = "0x4001217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject itemPrefabLastProgress;

	[Token(Token = "0x4001218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int itemsRows;

	[Token(Token = "0x4001219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Material favoriteIconOn;

	[Token(Token = "0x400121A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Material favoriteIconOff;

	[Token(Token = "0x400121B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Color finishedCampaignTextColor;

	[Token(Token = "0x400121C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TextMesh requestStatus;

	[Token(Token = "0x400121D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject listGroup;

	[Token(Token = "0x400121E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject goalsGroup;

	[Token(Token = "0x400121F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public TextMesh goalMissionInfo;

	[Token(Token = "0x4001220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject goalMissionPrev;

	[Token(Token = "0x4001221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject goalMissionNext;

	[Token(Token = "0x4001222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public TextMesh[] goalText;

	[Token(Token = "0x4001223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Renderer[] goalSymbol;

	[Token(Token = "0x4001224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected int selectSortByIdx;

	[Token(Token = "0x4001225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	protected bool showOnlyFavorites;

	[Token(Token = "0x4001226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB5")]
	protected bool started;

	[Token(Token = "0x4001227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB6")]
	protected bool singleMissions;

	[Token(Token = "0x4001228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected float newRequestDelay;

	[Token(Token = "0x4001229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	protected bool newRequestWithReset;

	[Token(Token = "0x400122A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBD")]
	protected bool requestCampaignsAfterEnable;

	[Token(Token = "0x400122B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	protected ServerWWW requestCampaigns;

	[Token(Token = "0x400122C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	protected ServerWWW requestLevelSave;

	[Token(Token = "0x400122D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	protected bool haveMoreCampaigns;

	[Token(Token = "0x400122E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	protected List<ServerCustomCampaignItem> campaigns;

	[Token(Token = "0x400122F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	protected List<GameObject> currItems;

	[Token(Token = "0x4001230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	protected GameObject itemLastProgress;

	[Token(Token = "0x4001231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	protected int campaignsTotalCount;

	[Token(Token = "0x4001232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	protected string lastAuthorName;

	[Token(Token = "0x4001233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	protected float lastChangeAuthorNameTime;

	[Token(Token = "0x4001234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	protected float lastStatusProgressTime;

	[Token(Token = "0x4001235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	protected bool lastCheckTranslateTexts;

	[Token(Token = "0x4001236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	protected ServerCustomCampaignItem startCampaign;

	[Token(Token = "0x4001237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	protected Dictionary<long, ServerCustomCampaignItem> loadedLevelsCache;

	[Token(Token = "0x4001238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private CustomCampaignData communityCampaignData;

	[Token(Token = "0x4001239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private int communityCampaignInfoMissionIndex;

	[Token(Token = "0x400123A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private int communityCampaignInfoMissionProgress;

	[Token(Token = "0x400123B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private TextMesh requestStatusProgress;

	[Token(Token = "0x400123C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private MUI_ClippedScroll scroll;

	[Token(Token = "0x400123D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static CustomCampaignData.eSortBy[] sortByOptions;

	[Token(Token = "0x60010D6")]
	[Address(RVA = "0x1508604", Offset = "0x1508604", VA = "0x1508604")]
	private void Awake()
	{
	}

	[Token(Token = "0x60010D7")]
	[Address(RVA = "0x1508828", Offset = "0x1508828", VA = "0x1508828")]
	public void Show(bool _singleMissions)
	{
	}

	[Token(Token = "0x60010D8")]
	[Address(RVA = "0x1508928", Offset = "0x1508928", VA = "0x1508928")]
	private void Start()
	{
	}

	[Token(Token = "0x60010D9")]
	[Address(RVA = "0x15091A4", Offset = "0x15091A4", VA = "0x15091A4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60010DA")]
	[Address(RVA = "0x1509380", Offset = "0x1509380", VA = "0x1509380")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60010DB")]
	[Address(RVA = "0x1509510", Offset = "0x1509510", VA = "0x1509510")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60010DC")]
	[Address(RVA = "0x1509614", Offset = "0x1509614", VA = "0x1509614")]
	private void Update()
	{
	}

	[Token(Token = "0x60010DD")]
	[Address(RVA = "0x150A66C", Offset = "0x150A66C", VA = "0x150A66C")]
	private void OnClickBack()
	{
	}

	[Token(Token = "0x60010DE")]
	[Address(RVA = "0x15089DC", Offset = "0x15089DC", VA = "0x15089DC")]
	private void FillSortBy()
	{
	}

	[Token(Token = "0x60010DF")]
	[Address(RVA = "0x150A7B0", Offset = "0x150A7B0", VA = "0x150A7B0")]
	private void OnSortByPrev()
	{
	}

	[Token(Token = "0x60010E0")]
	[Address(RVA = "0x150A868", Offset = "0x150A868", VA = "0x150A868")]
	private void OnSortByNext()
	{
	}

	[Token(Token = "0x60010E1")]
	[Address(RVA = "0x150A938", Offset = "0x150A938", VA = "0x150A938")]
	private void OnSwitchShowOnlyFavorites(bool on)
	{
	}

	[Token(Token = "0x60010E2")]
	[Address(RVA = "0x1509A84", Offset = "0x1509A84", VA = "0x1509A84")]
	private void StepChangedAuthorName()
	{
	}

	[Token(Token = "0x60010E3")]
	[Address(RVA = "0x150A988", Offset = "0x150A988", VA = "0x150A988")]
	private void OnClearAuthorName()
	{
	}

	[Token(Token = "0x60010E4")]
	[Address(RVA = "0x15093F0", Offset = "0x15093F0", VA = "0x15093F0")]
	private void CancelRequestCampaigns()
	{
	}

	[Token(Token = "0x60010E5")]
	[Address(RVA = "0x1508B88", Offset = "0x1508B88", VA = "0x1508B88")]
	private void RequestCampaigns(bool reset, float delay = 0f)
	{
	}

	[Token(Token = "0x60010E6")]
	[Address(RVA = "0x150AA30", Offset = "0x150AA30", VA = "0x150AA30")]
	private void CallbackGetLevelsListResult(object obj, int totalCount)
	{
	}

	[Token(Token = "0x60010E7")]
	[Address(RVA = "0x150AC14", Offset = "0x150AC14", VA = "0x150AC14")]
	private void CallbackGetLevelsListError(ServerWWWErrorCode e)
	{
	}

	[Token(Token = "0x60010E8")]
	[Address(RVA = "0x1509850", Offset = "0x1509850", VA = "0x1509850")]
	private void UpdateStatusProgress()
	{
	}

	[Token(Token = "0x60010E9")]
	[Address(RVA = "0x1509244", Offset = "0x1509244", VA = "0x1509244")]
	private void ShowRequestStatus(string status)
	{
	}

	[Token(Token = "0x60010EA")]
	[Address(RVA = "0x1509BCC", Offset = "0x1509BCC", VA = "0x1509BCC")]
	private void FillItems()
	{
	}

	[Token(Token = "0x60010EB")]
	[Address(RVA = "0x1509484", Offset = "0x1509484", VA = "0x1509484")]
	private void CancelRequestLevelSave()
	{
	}

	[Token(Token = "0x60010EC")]
	[Address(RVA = "0x150AE48", Offset = "0x150AE48", VA = "0x150AE48")]
	private bool IsFavoriteCampaign(long guid)
	{
		return default(bool);
	}

	[Token(Token = "0x60010ED")]
	[Address(RVA = "0x150AEAC", Offset = "0x150AEAC", VA = "0x150AEAC")]
	private void AddFavoriteCampaign(long guid)
	{
	}

	[Token(Token = "0x60010EE")]
	[Address(RVA = "0x150AF28", Offset = "0x150AF28", VA = "0x150AF28")]
	private void RemoveFavoriteCampaign(long guid)
	{
	}

	[Token(Token = "0x60010EF")]
	[Address(RVA = "0x150AF8C", Offset = "0x150AF8C", VA = "0x150AF8C")]
	private void OnSetCampaignFavorite(int idx)
	{
	}

	[Token(Token = "0x60010F0")]
	[Address(RVA = "0x150B168", Offset = "0x150B168", VA = "0x150B168")]
	private void OnSelectedCampaign(int idx)
	{
	}

	[Token(Token = "0x60010F1")]
	[Address(RVA = "0x150B3E0", Offset = "0x150B3E0", VA = "0x150B3E0")]
	private void CallbackGetLevelSaveResult(object obj)
	{
	}

	[Token(Token = "0x60010F2")]
	[Address(RVA = "0x150B65C", Offset = "0x150B65C", VA = "0x150B65C")]
	private void CallbackGetLevelSaveError(ServerWWWErrorCode e)
	{
	}

	[Token(Token = "0x60010F3")]
	[Address(RVA = "0x150B74C", Offset = "0x150B74C", VA = "0x150B74C")]
	public static void OnStartCustomMission()
	{
	}

	[Token(Token = "0x60010F4")]
	[Address(RVA = "0x150BA34", Offset = "0x150BA34", VA = "0x150BA34")]
	private void OnShowTasksInfo(int idx)
	{
	}

	[Token(Token = "0x60010F5")]
	[Address(RVA = "0x150A748", Offset = "0x150A748", VA = "0x150A748")]
	private void OnHideTasksInfo()
	{
	}

	[Token(Token = "0x60010F6")]
	[Address(RVA = "0x150BCAC", Offset = "0x150BCAC", VA = "0x150BCAC")]
	private void CallbackGetTaskInfoLevelSaveResult(object obj)
	{
	}

	[Token(Token = "0x60010F7")]
	[Address(RVA = "0x150BF70", Offset = "0x150BF70", VA = "0x150BF70")]
	private void FillCommunityGoalsInfo()
	{
	}

	[Token(Token = "0x60010F8")]
	[Address(RVA = "0x150C97C", Offset = "0x150C97C", VA = "0x150C97C")]
	private void OnClickCommunityCampaignMissionPrev()
	{
	}

	[Token(Token = "0x60010F9")]
	[Address(RVA = "0x150C9A4", Offset = "0x150C9A4", VA = "0x150C9A4")]
	private void OnClickCommunityCampaignMissionNext()
	{
	}

	[Token(Token = "0x60010FA")]
	[Address(RVA = "0x150CA20", Offset = "0x150CA20", VA = "0x150CA20")]
	public MultiplayerSelectCoOpWindow()
	{
	}
}
[Token(Token = "0x2000294")]
public class MultiplayerSelectPlaneWindow : MonoBehaviour
{
	[Token(Token = "0x60010FC")]
	[Address(RVA = "0x150CBF0", Offset = "0x150CBF0", VA = "0x150CBF0")]
	private void Start()
	{
	}

	[Token(Token = "0x60010FD")]
	[Address(RVA = "0x150CBF4", Offset = "0x150CBF4", VA = "0x150CBF4")]
	private void Update()
	{
	}

	[Token(Token = "0x60010FE")]
	[Address(RVA = "0x150CBF8", Offset = "0x150CBF8", VA = "0x150CBF8")]
	public MultiplayerSelectPlaneWindow()
	{
	}
}
[Token(Token = "0x2000295")]
public class MultiplayerSessionInfo : MonoBehaviour
{
	[Token(Token = "0x400123E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMesh line1;

	[Token(Token = "0x400123F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMesh line2;

	[Token(Token = "0x4001240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MultiplayerSearchSessionWindow parentSearch;

	[Token(Token = "0x4001241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MultiplayerSessionConfig config;

	[Token(Token = "0x4001242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject line1right;

	[Token(Token = "0x4001243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int roomUID;

	[Token(Token = "0x60010FF")]
	[Address(RVA = "0x1504C50", Offset = "0x1504C50", VA = "0x1504C50")]
	public void Init(MultiplayerSearchSessionWindow _parentSearch, int _roomUID, MultiplayerSessionConfig config)
	{
	}

	[Token(Token = "0x6001100")]
	[Address(RVA = "0x1504C60", Offset = "0x1504C60", VA = "0x1504C60")]
	public void Fill(MultiplayerSessionConfig config)
	{
	}

	[Token(Token = "0x6001101")]
	[Address(RVA = "0x150F0BC", Offset = "0x150F0BC", VA = "0x150F0BC")]
	private void Click()
	{
	}

	[Token(Token = "0x6001102")]
	[Address(RVA = "0x150F14C", Offset = "0x150F14C", VA = "0x150F14C")]
	public MultiplayerSessionInfo()
	{
	}
}
[Token(Token = "0x2000296")]
public class MultiplayerSessionPlayerLine : MonoBehaviour
{
	[Token(Token = "0x4001244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMesh textPlayer;

	[Token(Token = "0x4001245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer iconPlayerExpLevel;

	[Token(Token = "0x4001246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMesh textPlayer_short;

	[Token(Token = "0x4001247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public CloudSave_Checkbox readyCheckbox;

	[Token(Token = "0x4001248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject teamButton;

	[Token(Token = "0x4001249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject moreButton;

	[Token(Token = "0x400124A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Renderer iconSpeech;

	[Token(Token = "0x400124B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Material materialTeamA;

	[Token(Token = "0x400124C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Material materialTeamB;

	[Token(Token = "0x400124D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TextMesh[] gunnerTexts;

	[Token(Token = "0x400124E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject[] gunnerButtons;

	[Token(Token = "0x400124F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public CloudSave_Checkbox[] gunnerReadyCheckbox;

	[Token(Token = "0x4001250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Renderer[] gunnerIconSpeech;

	[Token(Token = "0x4001251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Color colorPlayerLeft;

	[Token(Token = "0x4001252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int gunnersCount;

	[Token(Token = "0x4001253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private NetPlayer player;

	[Token(Token = "0x4001254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private MultiplayerSessionWindow parent;

	[Token(Token = "0x6001103")]
	[Address(RVA = "0x150F154", Offset = "0x150F154", VA = "0x150F154")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001104")]
	[Address(RVA = "0x150F158", Offset = "0x150F158", VA = "0x150F158")]
	private void Update()
	{
	}

	[Token(Token = "0x6001105")]
	[Address(RVA = "0x150F388", Offset = "0x150F388", VA = "0x150F388")]
	public void Init(NetPlayer _player, int idx, MultiplayerSessionWindow _parent)
	{
	}

	[Token(Token = "0x6001106")]
	[Address(RVA = "0x1510354", Offset = "0x1510354", VA = "0x1510354")]
	public NetPlayer GetPlayer()
	{
		return null;
	}

	[Token(Token = "0x6001107")]
	[Address(RVA = "0x151035C", Offset = "0x151035C", VA = "0x151035C")]
	private void OnClickTeam()
	{
	}

	[Token(Token = "0x6001108")]
	[Address(RVA = "0x151063C", Offset = "0x151063C", VA = "0x151063C")]
	public void OnClickRemove()
	{
	}

	[Token(Token = "0x6001109")]
	[Address(RVA = "0x15107C0", Offset = "0x15107C0", VA = "0x15107C0")]
	public void OnChangedReady()
	{
	}

	[Token(Token = "0x600110A")]
	[Address(RVA = "0x1510810", Offset = "0x1510810", VA = "0x1510810")]
	private void OnClickGunner(int idx)
	{
	}

	[Token(Token = "0x600110B")]
	[Address(RVA = "0x1510B14", Offset = "0x1510B14", VA = "0x1510B14")]
	private void OnClickMore()
	{
	}

	[Token(Token = "0x600110C")]
	[Address(RVA = "0x15111C4", Offset = "0x15111C4", VA = "0x15111C4")]
	public void OnClickMute()
	{
	}

	[Token(Token = "0x600110D")]
	[Address(RVA = "0x1511654", Offset = "0x1511654", VA = "0x1511654")]
	public void OnClickFriendRequest()
	{
	}

	[Token(Token = "0x600110E")]
	[Address(RVA = "0x15101A8", Offset = "0x15101A8", VA = "0x15101A8")]
	private bool KickIsActive()
	{
		return default(bool);
	}

	[Token(Token = "0x600110F")]
	[Address(RVA = "0x1510DD0", Offset = "0x1510DD0", VA = "0x1510DD0")]
	private void PreparePopup()
	{
	}

	[Token(Token = "0x6001110")]
	[Address(RVA = "0x150F15C", Offset = "0x150F15C", VA = "0x150F15C")]
	private void StepSpeechIcon()
	{
	}

	[Token(Token = "0x6001111")]
	[Address(RVA = "0x15116D8", Offset = "0x15116D8", VA = "0x15116D8")]
	public static void UpdateIconSpeech(Renderer icon, Photon.Realtime.Player punPlayer, MultiplayerVoicePlayer voicePlayer)
	{
	}

	[Token(Token = "0x6001112")]
	[Address(RVA = "0x1511AA8", Offset = "0x1511AA8", VA = "0x1511AA8")]
	public MultiplayerSessionPlayerLine()
	{
	}
}
[Token(Token = "0x2000297")]
public class MultiplayerSessionWindow : MonoBehaviourPunCallbacks
{
	[Serializable]
	[Token(Token = "0x2000298")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91819C", Offset = "0x91819C")]
	private sealed class <>c
	{
		[Token(Token = "0x4001277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static PopupMenu.ItemCallback <>9__39_0;

		[Token(Token = "0x4001279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static PopupMenu.ItemCallback <>9__39_1;

		[Token(Token = "0x400127A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static PopupMenu.ItemCallback <>9__39_2;

		[Token(Token = "0x6001144")]
		[Address(RVA = "0xD82AC0", Offset = "0xD82AC0", VA = "0xD82AC0")]
		public <>c()
		{
		}

		[Token(Token = "0x6001145")]
		[Address(RVA = "0xD82AC8", Offset = "0xD82AC8", VA = "0xD82AC8")]
		internal void <Awake>b__39_0(object s)
		{
		}

		[Token(Token = "0x6001146")]
		[Address(RVA = "0xD82B50", Offset = "0xD82B50", VA = "0xD82B50")]
		internal void <Awake>b__39_1(object s)
		{
		}

		[Token(Token = "0x6001147")]
		[Address(RVA = "0xD82BD8", Offset = "0xD82BD8", VA = "0xD82BD8")]
		internal void <Awake>b__39_2(object s)
		{
		}
	}

	[Token(Token = "0x4001255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject controls_Board2;

	[Token(Token = "0x4001256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MultiplayerVoiceWindow voiceWnd;

	[Token(Token = "0x4001257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMesh title;

	[Token(Token = "0x4001258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public MultiplayerSessionInfo sessionInfo;

	[Token(Token = "0x4001259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject playerLinePrefab;

	[Token(Token = "0x400125A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject playerLinePrefabNext;

	[Token(Token = "0x400125B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject buttonAddBot;

	[Token(Token = "0x400125C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject buttonAddBot_disabled;

	[Token(Token = "0x400125D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject buttonInvite;

	[Token(Token = "0x400125E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public CloudSave_Checkbox readyCheckbox;

	[Token(Token = "0x400125F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject buttonStartGame;

	[Token(Token = "0x4001260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject buttonShowGoals;

	[Token(Token = "0x4001261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject goalsGroup;

	[Token(Token = "0x4001262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject playersGroup;

	[Token(Token = "0x4001263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public TextMesh communityMissionInfo;

	[Token(Token = "0x4001264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject buttonCommunityCampaignMissionPrev;

	[Token(Token = "0x4001265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject buttonCommunityCampaignMissionNext;

	[Token(Token = "0x4001266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public TextMesh[] goalText;

	[Token(Token = "0x4001267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Renderer[] goalSymbol;

	[Token(Token = "0x4001268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x91B2DC", Offset = "0x91B2DC")]
	public PopupMenu popupMenu;

	[Token(Token = "0x4001269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject popupMenuBlocker;

	[Token(Token = "0x400126A")]
	private const float notReadyBlinkTime = 3f;

	[Token(Token = "0x400126B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private List<MultiplayerSessionPlayerLine> currPlayersLines;

	[Token(Token = "0x400126C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private MultiplayerSessionConfig config;

	[Token(Token = "0x400126D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private int updateAfterCallback;

	[Token(Token = "0x400126E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private int roomPropertiesCallback;

	[Token(Token = "0x400126F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool tasksFilled;

	[Token(Token = "0x4001270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
	private bool started;

	[Token(Token = "0x4001271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE2")]
	private bool updatePlayers;

	[Token(Token = "0x4001272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private int communityCampaignInfoMissionIndex;

	[Token(Token = "0x4001273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private bool openingOtherWindow;

	[Token(Token = "0x4001274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private string prevLocalPlayerPlanes;

	[Token(Token = "0x4001275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private uint gameConfigCRC;

	[Token(Token = "0x4001276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[HideInInspector]
	public MUI_ClippedScroll clippedScroll;

	[Token(Token = "0x6001113")]
	[Address(RVA = "0x1506E2C", Offset = "0x1506E2C", VA = "0x1506E2C")]
	public void Show()
	{
	}

	[Token(Token = "0x6001114")]
	[Address(RVA = "0x1511AB0", Offset = "0x1511AB0", VA = "0x1511AB0")]
	public bool IsLocalPlayerMaster()
	{
		return default(bool);
	}

	[Token(Token = "0x6001115")]
	[Address(RVA = "0x1510048", Offset = "0x1510048", VA = "0x1510048")]
	public bool IsLocalPlayerGameMaster()
	{
		return default(bool);
	}

	[Token(Token = "0x6001116")]
	[Address(RVA = "0x1511C10", Offset = "0x1511C10", VA = "0x1511C10")]
	public MultiplayerSessionConfig GetConfig()
	{
		return null;
	}

	[Token(Token = "0x6001117")]
	[Address(RVA = "0x1510658", Offset = "0x1510658", VA = "0x1510658")]
	public void SetRemovePlayerFromRoom(NetPlayer player)
	{
	}

	[Token(Token = "0x6001118")]
	[Address(RVA = "0x1511C18", Offset = "0x1511C18", VA = "0x1511C18")]
	protected void Awake()
	{
	}

	[Token(Token = "0x6001119")]
	[Address(RVA = "0x15120BC", Offset = "0x15120BC", VA = "0x15120BC", Slot = "28")]
	public override void OnEnable()
	{
	}

	[Token(Token = "0x600111A")]
	[Address(RVA = "0x151330C", Offset = "0x151330C", VA = "0x151330C", Slot = "29")]
	public override void OnDisable()
	{
	}

	[Token(Token = "0x600111B")]
	[Address(RVA = "0x15135B4", Offset = "0x15135B4", VA = "0x15135B4")]
	public bool IsOpeningOtherWindow()
	{
		return default(bool);
	}

	[Token(Token = "0x600111C")]
	[Address(RVA = "0x15135BC", Offset = "0x15135BC", VA = "0x15135BC")]
	private void Update()
	{
	}

	[Token(Token = "0x600111D")]
	[Address(RVA = "0x15132F8", Offset = "0x15132F8", VA = "0x15132F8")]
	private void SetUpdateAfterCallback(bool roomProperties = false)
	{
	}

	[Token(Token = "0x600111E")]
	[Address(RVA = "0x15138B8", Offset = "0x15138B8", VA = "0x15138B8")]
	private void OnClickBack()
	{
	}

	[Token(Token = "0x600111F")]
	[Address(RVA = "0x1513C50", Offset = "0x1513C50", VA = "0x1513C50")]
	private void OnClickCloseMenuPopup()
	{
	}

	[Token(Token = "0x6001120")]
	[Address(RVA = "0x1513C6C", Offset = "0x1513C6C", VA = "0x1513C6C")]
	private void OnClickReady()
	{
	}

	[Token(Token = "0x6001121")]
	[Address(RVA = "0x15140AC", Offset = "0x15140AC", VA = "0x15140AC")]
	private bool CanStartGame(bool blinkReady = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6001122")]
	[Address(RVA = "0x1514778", Offset = "0x1514778", VA = "0x1514778")]
	private void OnClickStartSession()
	{
	}

	[Token(Token = "0x6001123")]
	[Address(RVA = "0x1514850", Offset = "0x1514850", VA = "0x1514850")]
	public void SetBlinkNotReadyInSession()
	{
	}

	[Token(Token = "0x6001124")]
	[Address(RVA = "0x1512F0C", Offset = "0x1512F0C", VA = "0x1512F0C")]
	private void UpdateReady()
	{
	}

	[Token(Token = "0x6001125")]
	[Address(RVA = "0x1512B84", Offset = "0x1512B84", VA = "0x1512B84")]
	private void UpdateSessionInfo()
	{
	}

	[Token(Token = "0x6001126")]
	[Address(RVA = "0x1513EA4", Offset = "0x1513EA4", VA = "0x1513EA4")]
	private void UpdateButtons()
	{
	}

	[Token(Token = "0x6001127")]
	[Address(RVA = "0x15148F4", Offset = "0x15148F4", VA = "0x15148F4")]
	private bool CanAddBot()
	{
		return default(bool);
	}

	[Token(Token = "0x6001128")]
	[Address(RVA = "0x1512DFC", Offset = "0x1512DFC", VA = "0x1512DFC")]
	private void UpdateAddBot()
	{
	}

	[Token(Token = "0x6001129")]
	[Address(RVA = "0x1514B00", Offset = "0x1514B00", VA = "0x1514B00")]
	private void OnClickAddBot()
	{
	}

	[Token(Token = "0x600112A")]
	[Address(RVA = "0x1514BF0", Offset = "0x1514BF0", VA = "0x1514BF0")]
	private void OnClickShowPlanes()
	{
	}

	[Token(Token = "0x600112B")]
	[Address(RVA = "0x1514D38", Offset = "0x1514D38", VA = "0x1514D38")]
	private void OnClickShowSettings()
	{
	}

	[Token(Token = "0x600112C")]
	[Address(RVA = "0x1514E44", Offset = "0x1514E44", VA = "0x1514E44")]
	public void OnChangedDefaultPlane()
	{
	}

	[Token(Token = "0x600112D")]
	[Address(RVA = "0x151370C", Offset = "0x151370C", VA = "0x151370C")]
	private uint GetGameConfigCRC()
	{
		return default(uint);
	}

	[Token(Token = "0x600112E")]
	[Address(RVA = "0x15124E8", Offset = "0x15124E8", VA = "0x15124E8")]
	private void UpdatePlayersList()
	{
	}

	[Token(Token = "0x600112F")]
	[Address(RVA = "0x1510380", Offset = "0x1510380", VA = "0x1510380")]
	public void SwitchPlayerTeam(NetPlayer player)
	{
	}

	[Token(Token = "0x6001130")]
	[Address(RVA = "0x15154A4", Offset = "0x15154A4", VA = "0x15154A4")]
	public void SetPlayerCommunityPlaneIdx(NetPlayer player, int idx)
	{
	}

	[Token(Token = "0x6001131")]
	[Address(RVA = "0x1515710", Offset = "0x1515710", VA = "0x1515710")]
	public void OnClickLockedSelectPlane(NetPlayer player)
	{
	}

	[Token(Token = "0x6001132")]
	[Address(RVA = "0x1510830", Offset = "0x1510830", VA = "0x1510830")]
	public void OnClickGunner(NetPlayer player, int idx)
	{
	}

	[Token(Token = "0x6001133")]
	[Address(RVA = "0x1513B84", Offset = "0x1513B84", VA = "0x1513B84")]
	private void OnClickShowTasks()
	{
	}

	[Token(Token = "0x6001134")]
	[Address(RVA = "0x151314C", Offset = "0x151314C", VA = "0x151314C")]
	private void UpdateShowGoals()
	{
	}

	[Token(Token = "0x6001135")]
	[Address(RVA = "0x15157F8", Offset = "0x15157F8", VA = "0x15157F8")]
	private void OnClickCommunityCampaignMissionPrev()
	{
	}

	[Token(Token = "0x6001136")]
	[Address(RVA = "0x1515828", Offset = "0x1515828", VA = "0x1515828")]
	private void OnClickCommunityCampaignMissionNext()
	{
	}

	[Token(Token = "0x6001137")]
	[Address(RVA = "0x15157B4", Offset = "0x15157B4", VA = "0x15157B4")]
	private void FillCommunityGoalsInfo()
	{
	}

	[Token(Token = "0x6001138")]
	[Address(RVA = "0x15158A0", Offset = "0x15158A0", VA = "0x15158A0")]
	private static bool IsTheSameTaskAbove(List<CustomMissionTask> tasks, int index)
	{
		return default(bool);
	}

	[Token(Token = "0x6001139")]
	[Address(RVA = "0x150BFA8", Offset = "0x150BFA8", VA = "0x150BFA8")]
	public static void FillCommunityTasks(CustomCampaignData campaignData, int missionIndex, int missionProgress, TextMesh[] goalText, Renderer[] goalSymbol, TextMesh missionInfo, GameObject buttonPrev, GameObject buttonNext)
	{
	}

	[Token(Token = "0x600113A")]
	[Address(RVA = "0x1515980", Offset = "0x1515980", VA = "0x1515980")]
	public void OnClickInvitePlayer()
	{
	}

	[Token(Token = "0x600113B")]
	[Address(RVA = "0x15159DC", Offset = "0x15159DC", VA = "0x15159DC", Slot = "42")]
	public override void OnPlayerEnteredRoom(Photon.Realtime.Player newPlayer)
	{
	}

	[Token(Token = "0x600113C")]
	[Address(RVA = "0x1515AA4", Offset = "0x1515AA4", VA = "0x1515AA4", Slot = "43")]
	public override void OnPlayerLeftRoom(Photon.Realtime.Player otherPlayer)
	{
	}

	[Token(Token = "0x600113D")]
	[Address(RVA = "0x1515B6C", Offset = "0x1515B6C", VA = "0x1515B6C", Slot = "46")]
	public override void OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
	{
	}

	[Token(Token = "0x600113E")]
	[Address(RVA = "0x1515BF0", Offset = "0x1515BF0", VA = "0x1515BF0", Slot = "47")]
	public override void OnPlayerPropertiesUpdate(Photon.Realtime.Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
	{
	}

	[Token(Token = "0x600113F")]
	[Address(RVA = "0x1515CB8", Offset = "0x1515CB8", VA = "0x1515CB8", Slot = "32")]
	public override void OnMasterClientSwitched(Photon.Realtime.Player newMasterClient)
	{
	}

	[Token(Token = "0x6001140")]
	[Address(RVA = "0x1515D80", Offset = "0x1515D80", VA = "0x1515D80", Slot = "31")]
	public override void OnLeftRoom()
	{
	}

	[Token(Token = "0x6001141")]
	[Address(RVA = "0x1516030", Offset = "0x1516030", VA = "0x1516030", Slot = "38")]
	public override void OnDisconnected(DisconnectCause cause)
	{
	}

	[Token(Token = "0x6001142")]
	[Address(RVA = "0x1516344", Offset = "0x1516344", VA = "0x1516344")]
	public MultiplayerSessionWindow()
	{
	}
}
[Token(Token = "0x2000299")]
public class MultiplayerStatusWindow : MonoBehaviour
{
	[Token(Token = "0x400127B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMesh titleText;

	[Token(Token = "0x400127C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMesh statusText;

	[Token(Token = "0x400127D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject spinningProgress;

	[Token(Token = "0x400127E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject warningIcon;

	[Token(Token = "0x400127F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject buttonOK;

	[Token(Token = "0x4001280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject buttonYes;

	[Token(Token = "0x4001281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject buttonNo;

	[Token(Token = "0x4001282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Action callbackOnCancel;

	[Token(Token = "0x4001283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Action<bool> callbackOnYesNo;

	[Token(Token = "0x4001284")]
	private const float animateDotTime = 0.75f;

	[Token(Token = "0x6001148")]
	[Address(RVA = "0x1516400", Offset = "0x1516400", VA = "0x1516400")]
	public void Show(string text, bool showSpinningProgress, bool showWarningIcon, Action _callbackOnCancel, bool showOKbutton = false, bool showYesNoButton = false, [Optional] Action<bool> _callbackOnYesNo)
	{
	}

	[Token(Token = "0x6001149")]
	[Address(RVA = "0x15164E8", Offset = "0x15164E8", VA = "0x15164E8")]
	public void Show(string title, string text, bool showSpinningProgress, bool showWarningIcon, Action _callbackOnCancel, bool showOKbutton = false, bool showYesNoButton = false, [Optional] Action<bool> _callbackOnYesNo)
	{
	}

	[Token(Token = "0x600114A")]
	[Address(RVA = "0x1516740", Offset = "0x1516740", VA = "0x1516740")]
	protected void OnClickBack()
	{
	}

	[Token(Token = "0x600114B")]
	[Address(RVA = "0x15167B8", Offset = "0x15167B8", VA = "0x15167B8")]
	protected void OnClickYes()
	{
	}

	[Token(Token = "0x600114C")]
	[Address(RVA = "0x1516818", Offset = "0x1516818", VA = "0x1516818")]
	protected void OnClickNo()
	{
	}

	[Token(Token = "0x600114D")]
	[Address(RVA = "0x1516878", Offset = "0x1516878", VA = "0x1516878")]
	protected void Update()
	{
	}

	[Token(Token = "0x600114E")]
	[Address(RVA = "0x151687C", Offset = "0x151687C", VA = "0x151687C")]
	public MultiplayerStatusWindow()
	{
	}
}
[Token(Token = "0x200029A")]
public class MultiplayerVoiceWindow : MonoBehaviour
{
	[Token(Token = "0x4001285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MultiplayerVoiceWindow secondVoiceWindow;

	[Token(Token = "0x4001286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CloudSave_Checkbox voiceMicrophoneCheckbox;

	[Token(Token = "0x4001287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject voiceMicrophoneDisabled;

	[Token(Token = "0x4001288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public CloudSave_Checkbox voiceVolumeCheckbox;

	[Token(Token = "0x4001289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject voiceVolumeDisabled;

	[Token(Token = "0x400128A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public MUI_Slider voiceVolumeSlider;

	[Token(Token = "0x400128B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject sliderDisabledBlocker;

	[Token(Token = "0x400128C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject microphoneDisabledInfo;

	[Token(Token = "0x400128D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float prevVoiceVolume;

	[Token(Token = "0x400128E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float lastSliderVolume;

	[Token(Token = "0x400128F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float hideMicrophoneDisabledInfoTime;

	[Token(Token = "0x600114F")]
	[Address(RVA = "0xCACDC8", Offset = "0xCACDC8", VA = "0xCACDC8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001150")]
	[Address(RVA = "0xCACDCC", Offset = "0xCACDCC", VA = "0xCACDCC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001151")]
	[Address(RVA = "0xCACDF8", Offset = "0xCACDF8", VA = "0xCACDF8")]
	public void OnEnableParent()
	{
	}

	[Token(Token = "0x6001152")]
	[Address(RVA = "0xCACF58", Offset = "0xCACF58", VA = "0xCACF58")]
	public void OnDisableParent()
	{
	}

	[Token(Token = "0x6001153")]
	[Address(RVA = "0xCACFE8", Offset = "0xCACFE8", VA = "0xCACFE8")]
	public float GetPrevVoiceVolume()
	{
		return default(float);
	}

	[Token(Token = "0x6001154")]
	[Address(RVA = "0xCACE38", Offset = "0xCACE38", VA = "0xCACE38")]
	private bool IsOpeningOtherWindow()
	{
		return default(bool);
	}

	[Token(Token = "0x6001155")]
	[Address(RVA = "0xCACFF0", Offset = "0xCACFF0", VA = "0xCACFF0")]
	private void Update()
	{
	}

	[Token(Token = "0x6001156")]
	[Address(RVA = "0xCACFF4", Offset = "0xCACFF4", VA = "0xCACFF4")]
	private void StepVoice()
	{
	}

	[Token(Token = "0x6001157")]
	[Address(RVA = "0xCAD40C", Offset = "0xCAD40C", VA = "0xCAD40C")]
	private void OnClickMicrophone()
	{
	}

	[Token(Token = "0x6001158")]
	[Address(RVA = "0xCAD520", Offset = "0xCAD520", VA = "0xCAD520")]
	private void OnClickVolume()
	{
	}

	[Token(Token = "0x6001159")]
	[Address(RVA = "0xCAD6C4", Offset = "0xCAD6C4", VA = "0xCAD6C4")]
	private void OnClickSliderBlocker()
	{
	}

	[Token(Token = "0x600115A")]
	[Address(RVA = "0xCAD7B0", Offset = "0xCAD7B0", VA = "0xCAD7B0")]
	private void OnClickMicrophoneDisabledInfo()
	{
	}

	[Token(Token = "0x600115B")]
	[Address(RVA = "0xCAD7D8", Offset = "0xCAD7D8", VA = "0xCAD7D8")]
	public MultiplayerVoiceWindow()
	{
	}
}
[Token(Token = "0x200029B")]
public class NationCampaign : MonoBehaviour
{
	[Token(Token = "0x4001290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Location tutorial;

	[Token(Token = "0x4001291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Country country;

	[Token(Token = "0x4001292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] attackRegions;

	[Token(Token = "0x4001293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] defendRegions;

	[Token(Token = "0x600115C")]
	[Address(RVA = "0xCB0F4C", Offset = "0xCB0F4C", VA = "0xCB0F4C")]
	public Country GetAttackCountry()
	{
		return null;
	}

	[Token(Token = "0x600115D")]
	[Address(RVA = "0xCB0FD4", Offset = "0xCB0FD4", VA = "0xCB0FD4")]
	public Country GetProtectCountry()
	{
		return null;
	}

	[Token(Token = "0x600115E")]
	[Address(RVA = "0xCB105C", Offset = "0xCB105C", VA = "0xCB105C")]
	public Country GetCountryByID(int id)
	{
		return null;
	}

	[Token(Token = "0x600115F")]
	[Address(RVA = "0xCB119C", Offset = "0xCB119C", VA = "0xCB119C")]
	public NationCampaign()
	{
	}
}
[Token(Token = "0x200029C")]
public class NationFlag : MonoBehaviour
{
	[Token(Token = "0x4001294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Hull hull;

	[Token(Token = "0x4001295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject[] flags;

	[Token(Token = "0x4001296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject[] decals;

	[Token(Token = "0x6001160")]
	[Address(RVA = "0xCB11A4", Offset = "0xCB11A4", VA = "0xCB11A4")]
	private void Start()
	{
	}

	[Token(Token = "0x6001161")]
	[Address(RVA = "0xCB12CC", Offset = "0xCB12CC", VA = "0xCB12CC")]
	public NationFlag()
	{
	}
}
[Token(Token = "0x200029D")]
public class NightCockpitLight : MonoBehaviour
{
	[Token(Token = "0x6001162")]
	[Address(RVA = "0xCC023C", Offset = "0xCC023C", VA = "0xCC023C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001163")]
	[Address(RVA = "0xCC0338", Offset = "0xCC0338", VA = "0xCC0338")]
	public NightCockpitLight()
	{
	}
}
[Token(Token = "0x200029E")]
public class NightMissionOff : MonoBehaviour
{
	[Token(Token = "0x6001164")]
	[Address(RVA = "0xCC0340", Offset = "0xCC0340", VA = "0xCC0340")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001165")]
	[Address(RVA = "0xCC03A4", Offset = "0xCC03A4", VA = "0xCC03A4")]
	public NightMissionOff()
	{
	}
}
[Token(Token = "0x200029F")]
public class NoForestZone : MonoBehaviour
{
	[Token(Token = "0x4001297")]
	private const int kMaxZones = 128;

	[Token(Token = "0x4001298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static NoForestZone[] zones;

	[Token(Token = "0x4001299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static TerrainZoneData[] zoneData;

	[Token(Token = "0x400129A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static int zoneHead;

	[Token(Token = "0x6001166")]
	[Address(RVA = "0xCC03AC", Offset = "0xCC03AC", VA = "0xCC03AC")]
	public static bool IsPointWithinAnyZone(Vector3 point)
	{
		return default(bool);
	}

	[Token(Token = "0x6001167")]
	[Address(RVA = "0xCC0458", Offset = "0xCC0458", VA = "0xCC0458")]
	private void Start()
	{
	}

	[Token(Token = "0x6001168")]
	[Address(RVA = "0xCC062C", Offset = "0xCC062C", VA = "0xCC062C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001169")]
	[Address(RVA = "0xCC0888", Offset = "0xCC0888", VA = "0xCC0888")]
	public NoForestZone()
	{
	}
}
[Token(Token = "0x20002A0")]
public class NoMergeMesh : MonoBehaviour
{
	[Token(Token = "0x600116B")]
	[Address(RVA = "0xCC0930", Offset = "0xCC0930", VA = "0xCC0930")]
	public void Awake()
	{
	}

	[Token(Token = "0x600116C")]
	[Address(RVA = "0xCC0990", Offset = "0xCC0990", VA = "0xCC0990")]
	public NoMergeMesh()
	{
	}
}
[Token(Token = "0x20002A1")]
public class NonTaskSecondaryTarget : MonoBehaviour
{
	[Token(Token = "0x20002A2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9181AC", Offset = "0x9181AC")]
	private sealed class <Start>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400129D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400129E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170000F1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001174")]
			[Address(RVA = "0xD83E8C", Offset = "0xD83E8C", VA = "0xD83E8C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001176")]
			[Address(RVA = "0xD83ED4", Offset = "0xD83ED4", VA = "0xD83ED4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001171")]
		[Address(RVA = "0xD83D28", Offset = "0xD83D28", VA = "0xD83D28")]
		[DebuggerHidden]
		public <Start>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6001172")]
		[Address(RVA = "0xD83D54", Offset = "0xD83D54", VA = "0xD83D54", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001173")]
		[Address(RVA = "0xD83D58", Offset = "0xD83D58", VA = "0xD83D58", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001175")]
		[Address(RVA = "0xD83E94", Offset = "0xD83E94", VA = "0xD83E94", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400129B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int count;

	[Token(Token = "0x400129C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int max;

	[Token(Token = "0x600116D")]
	[Address(RVA = "0xCC0998", Offset = "0xCC0998", VA = "0xCC0998")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x929114", Offset = "0x929114")]
	public IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600116E")]
	[Address(RVA = "0xCC09F4", Offset = "0xCC09F4", VA = "0xCC09F4")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x600116F")]
	[Address(RVA = "0xCC0A60", Offset = "0xCC0A60", VA = "0xCC0A60")]
	public NonTaskSecondaryTarget()
	{
	}
}
[Token(Token = "0x20002A3")]
public class OnEnableDisableHandler : MonoBehaviour
{
	[Token(Token = "0x6001177")]
	[Address(RVA = "0xCC1564", Offset = "0xCC1564", VA = "0xCC1564")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001178")]
	[Address(RVA = "0xCC15D8", Offset = "0xCC15D8", VA = "0xCC15D8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001179")]
	[Address(RVA = "0xCC164C", Offset = "0xCC164C", VA = "0xCC164C")]
	public OnEnableDisableHandler()
	{
	}
}
[Token(Token = "0x20002A4")]
public class OnEnableMoveAnim : MonoBehaviour
{
	[Token(Token = "0x400129F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject startPosition;

	[Token(Token = "0x40012A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float startDelay;

	[Token(Token = "0x40012A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float moveTime;

	[Token(Token = "0x40012A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float speedPow;

	[Token(Token = "0x40012A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	protected bool init;

	[Token(Token = "0x40012A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected Vector3 startPos;

	[Token(Token = "0x40012A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	protected Vector3 endPos;

	[Token(Token = "0x40012A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected float startTime;

	[Token(Token = "0x40012A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	protected bool moving;

	[Token(Token = "0x600117A")]
	[Address(RVA = "0xCC1654", Offset = "0xCC1654", VA = "0xCC1654")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600117B")]
	[Address(RVA = "0xCC17D8", Offset = "0xCC17D8", VA = "0xCC17D8")]
	private void Update()
	{
	}

	[Token(Token = "0x600117C")]
	[Address(RVA = "0xCC190C", Offset = "0xCC190C", VA = "0xCC190C")]
	public OnEnableMoveAnim()
	{
	}
}
[Token(Token = "0x20002A5")]
public class OnlyOneActive : MonoBehaviour
{
	[Token(Token = "0x40012A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<GameObject> list;

	[Token(Token = "0x600117D")]
	[Address(RVA = "0xCC191C", Offset = "0xCC191C", VA = "0xCC191C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600117E")]
	[Address(RVA = "0xCC1B4C", Offset = "0xCC1B4C", VA = "0xCC1B4C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600117F")]
	[Address(RVA = "0xCC1D30", Offset = "0xCC1D30", VA = "0xCC1D30")]
	public OnlyOneActive()
	{
	}
}
[Token(Token = "0x20002A6")]
public static class OutlineObject
{
	[Token(Token = "0x20002A7")]
	private class MaterialPair
	{
		[Token(Token = "0x40012AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Material original;

		[Token(Token = "0x40012AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material created;

		[Token(Token = "0x6001188")]
		[Address(RVA = "0xD83EE8", Offset = "0xD83EE8", VA = "0xD83EE8")]
		public MaterialPair()
		{
		}
	}

	[Token(Token = "0x40012A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<Renderer, MaterialPair> originalMaterials;

	[Token(Token = "0x6001180")]
	[Address(RVA = "0xCC2194", Offset = "0xCC2194", VA = "0xCC2194")]
	public static void Clear()
	{
	}

	[Token(Token = "0x6001181")]
	[Address(RVA = "0xCC23E4", Offset = "0xCC23E4", VA = "0xCC23E4")]
	public static void Add(VRCockpitInstruments.Instrument instrument)
	{
	}

	[Token(Token = "0x6001182")]
	[Address(RVA = "0xCC2794", Offset = "0xCC2794", VA = "0xCC2794")]
	public static void Add(GameObject go)
	{
	}

	[Token(Token = "0x6001183")]
	[Address(RVA = "0xCC24A0", Offset = "0xCC24A0", VA = "0xCC24A0")]
	public static void Add(Renderer rend)
	{
	}

	[Token(Token = "0x6001184")]
	[Address(RVA = "0xCC28E8", Offset = "0xCC28E8", VA = "0xCC28E8")]
	public static void Remove(VRCockpitInstruments.Instrument instrument)
	{
	}

	[Token(Token = "0x6001185")]
	[Address(RVA = "0xCC2AF0", Offset = "0xCC2AF0", VA = "0xCC2AF0")]
	public static void Remove(GameObject go)
	{
	}

	[Token(Token = "0x6001186")]
	[Address(RVA = "0xCC29A4", Offset = "0xCC29A4", VA = "0xCC29A4")]
	public static void Remove(Renderer rend)
	{
	}
}
[Token(Token = "0x20002A8")]
public enum eColorSetup
{
	[Token(Token = "0x40012AD")]
	colorA1,
	[Token(Token = "0x40012AE")]
	colorA2,
	[Token(Token = "0x40012AF")]
	colorA3_unused,
	[Token(Token = "0x40012B0")]
	colorB1,
	[Token(Token = "0x40012B1")]
	colorB2,
	[Token(Token = "0x40012B2")]
	colorsB3,
	[Token(Token = "0x40012B3")]
	shapeA,
	[Token(Token = "0x40012B4")]
	shapeB,
	[Token(Token = "0x40012B5")]
	decal1,
	[Token(Token = "0x40012B6")]
	decal2_tail,
	[Token(Token = "0x40012B7")]
	decal3_hull,
	[Token(Token = "0x40012B8")]
	decal4_front,
	[Token(Token = "0x40012B9")]
	decal5_left,
	[Token(Token = "0x40012BA")]
	decal6_right
}
[Token(Token = "0x20002A9")]
public class PaintDecalList : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20002AA")]
	public class DecalsExtra
	{
		[Token(Token = "0x40012D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public string name;

		[Token(Token = "0x40012D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int requiredMultiExpLevel;

		[Token(Token = "0x40012D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string[] decals;

		[Token(Token = "0x600119B")]
		[Address(RVA = "0xD87248", Offset = "0xD87248", VA = "0xD87248")]
		public void Validate()
		{
		}

		[Token(Token = "0x600119C")]
		[Address(RVA = "0xD872B0", Offset = "0xD872B0", VA = "0xD872B0")]
		public DecalsExtra()
		{
		}
	}

	[Token(Token = "0x40012BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform scaleTransform;

	[Token(Token = "0x40012BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject helpText;

	[Token(Token = "0x40012BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject prefab;

	[Token(Token = "0x40012BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float distY;

	[Token(Token = "0x40012BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int colorID;

	[Token(Token = "0x40012C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int decalID;

	[Token(Token = "0x40012C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string[] decals;

	[Token(Token = "0x40012C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public DecalsExtra[] decals_extra;

	[Token(Token = "0x40012C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int maxButtonsCountNotScrolled;

	[Token(Token = "0x40012C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int maxButtonsCountScrolled;

	[Token(Token = "0x40012C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject buttonPrev;

	[Token(Token = "0x40012C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject buttonPrev2;

	[Token(Token = "0x40012C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject buttonPrev_Disabled;

	[Token(Token = "0x40012C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject buttonNext;

	[Token(Token = "0x40012C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject buttonNext2;

	[Token(Token = "0x40012CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject buttonNext_Disabled;

	[Token(Token = "0x40012CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject infoMultiLvlRequired;

	[Token(Token = "0x40012CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public TextMesh infoMultiLvlRequiredText;

	[Token(Token = "0x40012CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Color[] colors;

	[Token(Token = "0x40012CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private GameObject[] buttons;

	[Token(Token = "0x40012CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PaintDecalList instance;

	[Token(Token = "0x40012D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int currentId;

	[Token(Token = "0x40012D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private int firstVisibleButtonIndex;

	[Token(Token = "0x40012D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int maxButtonsCount;

	[Token(Token = "0x40012D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public List<int>[] currentDecals;

	[Token(Token = "0x40012D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public List<int>[] decalRequiredExpLevel;

	[Token(Token = "0x6001189")]
	[Address(RVA = "0xF50200", Offset = "0xF50200", VA = "0xF50200")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x600118A")]
	[Address(RVA = "0xF50834", Offset = "0xF50834", VA = "0xF50834")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x600118B")]
	[Address(RVA = "0xF50968", Offset = "0xF50968", VA = "0xF50968")]
	public void Start()
	{
	}

	[Token(Token = "0x600118C")]
	[Address(RVA = "0xF509CC", Offset = "0xF509CC", VA = "0xF509CC")]
	public void Reset()
	{
	}

	[Token(Token = "0x600118D")]
	[Address(RVA = "0xF50A08", Offset = "0xF50A08", VA = "0xF50A08")]
	public static void SetID(int id)
	{
	}

	[Token(Token = "0x600118E")]
	[Address(RVA = "0xF51460", Offset = "0xF51460", VA = "0xF51460")]
	public static void Refresh()
	{
	}

	[Token(Token = "0x600118F")]
	[Address(RVA = "0xF5150C", Offset = "0xF5150C", VA = "0xF5150C")]
	public static int GetCurrentID()
	{
		return default(int);
	}

	[Token(Token = "0x6001190")]
	[Address(RVA = "0xF503AC", Offset = "0xF503AC", VA = "0xF503AC")]
	private void FillCurrentDecals()
	{
	}

	[Token(Token = "0x6001191")]
	[Address(RVA = "0xF50A8C", Offset = "0xF50A8C", VA = "0xF50A8C")]
	public void Setup(int id)
	{
	}

	[Token(Token = "0x6001192")]
	[Address(RVA = "0xF5085C", Offset = "0xF5085C", VA = "0xF5085C")]
	private void ClearButtons()
	{
	}

	[Token(Token = "0x6001193")]
	[Address(RVA = "0xF50248", Offset = "0xF50248", VA = "0xF50248")]
	private void UpdatePrevNextButtons()
	{
	}

	[Token(Token = "0x6001194")]
	[Address(RVA = "0xF515B8", Offset = "0xF515B8", VA = "0xF515B8")]
	private void UpdateVisibleButtons()
	{
	}

	[Token(Token = "0x6001195")]
	[Address(RVA = "0xF51808", Offset = "0xF51808", VA = "0xF51808")]
	private void OnClickButtonsPrev()
	{
	}

	[Token(Token = "0x6001196")]
	[Address(RVA = "0xF51838", Offset = "0xF51838", VA = "0xF51838")]
	private void OnClickButtonsNext()
	{
	}

	[Token(Token = "0x6001197")]
	[Address(RVA = "0xF51868", Offset = "0xF51868", VA = "0xF51868")]
	public void PaintColor(Color c)
	{
	}

	[Token(Token = "0x6001198")]
	[Address(RVA = "0xF51B0C", Offset = "0xF51B0C", VA = "0xF51B0C")]
	public void SetDecal(int d)
	{
	}

	[Token(Token = "0x6001199")]
	[Address(RVA = "0xF5197C", Offset = "0xF5197C", VA = "0xF5197C")]
	public void InitializePlaneColorSetup()
	{
	}

	[Token(Token = "0x600119A")]
	[Address(RVA = "0xF51C3C", Offset = "0xF51C3C", VA = "0xF51C3C")]
	public PaintDecalList()
	{
	}
}
[Token(Token = "0x20002AB")]
public class ParticleMover : MonoBehaviour
{
	[Token(Token = "0x40012D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem[] particle;

	[Token(Token = "0x40012D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 lastPos;

	[Token(Token = "0x40012DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ParticleSystem.Particle[] m_Particles;

	[Token(Token = "0x600119D")]
	[Address(RVA = "0x1739124", Offset = "0x1739124", VA = "0x1739124")]
	public void Awake()
	{
	}

	[Token(Token = "0x600119E")]
	[Address(RVA = "0x1739160", Offset = "0x1739160", VA = "0x1739160")]
	public void LateUpdate()
	{
	}

	[Token(Token = "0x600119F")]
	[Address(RVA = "0x173925C", Offset = "0x173925C", VA = "0x173925C")]
	public void MoveParticles(ParticleSystem m_System, Vector3 offset)
	{
	}

	[Token(Token = "0x60011A0")]
	[Address(RVA = "0x17393E8", Offset = "0x17393E8", VA = "0x17393E8")]
	public ParticleMover()
	{
	}
}
[Token(Token = "0x20002AC")]
public enum eParty
{
	[Token(Token = "0x40012DC")]
	none,
	[Token(Token = "0x40012DD")]
	friend,
	[Token(Token = "0x40012DE")]
	enemy,
	[Token(Token = "0x40012DF")]
	all
}
[Token(Token = "0x20002AD")]
public class Party : MonoBehaviour
{
	[Token(Token = "0x60011A1")]
	[Address(RVA = "0x17393F0", Offset = "0x17393F0", VA = "0x17393F0")]
	public void Start()
	{
	}

	[Token(Token = "0x60011A2")]
	[Address(RVA = "0x17393F4", Offset = "0x17393F4", VA = "0x17393F4")]
	public void Update()
	{
	}

	[Token(Token = "0x60011A3")]
	[Address(RVA = "0x17393F8", Offset = "0x17393F8", VA = "0x17393F8")]
	public Party()
	{
	}
}
[Token(Token = "0x20002AE")]
public class PauseManager : MonoBehaviour
{
	[Token(Token = "0x40012E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float myTimeScale;

	[Token(Token = "0x40012E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool hmdUnmounted;

	[Token(Token = "0x40012E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool vrFocusLost;

	[Token(Token = "0x40012E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	private bool vrTrackingLost;

	[Token(Token = "0x40012E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	private bool pausedFromHMDFocus;

	[Token(Token = "0x40012E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float timeScaleAfterUnmounted;

	[Token(Token = "0x40012E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static PauseManager instance;

	[Token(Token = "0x60011A4")]
	[Address(RVA = "0x1739FBC", Offset = "0x1739FBC", VA = "0x1739FBC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60011A5")]
	[Address(RVA = "0x173A1D0", Offset = "0x173A1D0", VA = "0x173A1D0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60011A6")]
	[Address(RVA = "0x173A3E4", Offset = "0x173A3E4", VA = "0x173A3E4")]
	private void HandleHMDMounted()
	{
	}

	[Token(Token = "0x60011A7")]
	[Address(RVA = "0x173A460", Offset = "0x173A460", VA = "0x173A460")]
	private void HandleHMDUnmounted()
	{
	}

	[Token(Token = "0x60011A8")]
	[Address(RVA = "0x173A4E0", Offset = "0x173A4E0", VA = "0x173A4E0")]
	private void HandleVrFocusAcquired()
	{
	}

	[Token(Token = "0x60011A9")]
	[Address(RVA = "0x173A55C", Offset = "0x173A55C", VA = "0x173A55C")]
	private void HandleVrFocusLost()
	{
	}

	[Token(Token = "0x60011AA")]
	[Address(RVA = "0x173A5DC", Offset = "0x173A5DC", VA = "0x173A5DC")]
	private void HandleVrTrackingAcquired()
	{
	}

	[Token(Token = "0x60011AB")]
	[Address(RVA = "0x173A658", Offset = "0x173A658", VA = "0x173A658")]
	private void HandleVrTrackingLost()
	{
	}

	[Token(Token = "0x60011AC")]
	[Address(RVA = "0x173A6D8", Offset = "0x173A6D8", VA = "0x173A6D8")]
	public static void SetTimeScale(float scale)
	{
	}

	[Token(Token = "0x60011AD")]
	[Address(RVA = "0x173AAE0", Offset = "0x173AAE0", VA = "0x173AAE0")]
	private void Pause()
	{
	}

	[Token(Token = "0x60011AE")]
	[Address(RVA = "0x173AB3C", Offset = "0x173AB3C", VA = "0x173AB3C")]
	private void UnPause()
	{
	}

	[Token(Token = "0x60011AF")]
	[Address(RVA = "0x173AB98", Offset = "0x173AB98", VA = "0x173AB98")]
	private void Update()
	{
	}

	[Token(Token = "0x60011B0")]
	[Address(RVA = "0x173B064", Offset = "0x173B064", VA = "0x173B064")]
	public PauseManager()
	{
	}
}
[Token(Token = "0x20002AF")]
public class PauseWhenActive : MonoBehaviour
{
	[Token(Token = "0x60011B2")]
	[Address(RVA = "0x173B0C8", Offset = "0x173B0C8", VA = "0x173B0C8")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x60011B3")]
	[Address(RVA = "0x173B124", Offset = "0x173B124", VA = "0x173B124")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x60011B4")]
	[Address(RVA = "0x173B180", Offset = "0x173B180", VA = "0x173B180")]
	public PauseWhenActive()
	{
	}
}
[Token(Token = "0x20002B0")]
public class PlaneBody : MonoBehaviour, IPunInstantiateMagicCallback, IPunObservable, IPunOwnershipCallbacks, IOnEventCallback
{
	[Token(Token = "0x20002B1")]
	private struct PlaneParts
	{
		[Token(Token = "0x40013CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Transform transform;

		[Token(Token = "0x40013D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Quaternion rotation;

		[Token(Token = "0x40013D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool valid;

		[Token(Token = "0x6001257")]
		[Address(RVA = "0xD88794", Offset = "0xD88794", VA = "0xD88794")]
		public PlaneParts(Transform t)
		{
		}
	}

	[Token(Token = "0x20002B2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9181BC", Offset = "0x9181BC")]
	private sealed class <TurnDeadRotor>d__90 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlaneBody <>4__this;

		[Token(Token = "0x40013D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <stopedEngineRotorSpeed>5__2;

		[Token(Token = "0x170000F5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600125B")]
			[Address(RVA = "0xD88744", Offset = "0xD88744", VA = "0xD88744", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600125D")]
			[Address(RVA = "0xD8878C", Offset = "0xD8878C", VA = "0xD8878C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001258")]
		[Address(RVA = "0xD88584", Offset = "0xD88584", VA = "0xD88584")]
		[DebuggerHidden]
		public <TurnDeadRotor>d__90(int <>1__state)
		{
		}

		[Token(Token = "0x6001259")]
		[Address(RVA = "0xD885B0", Offset = "0xD885B0", VA = "0xD885B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600125A")]
		[Address(RVA = "0xD885B4", Offset = "0xD885B4", VA = "0xD885B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600125C")]
		[Address(RVA = "0xD8874C", Offset = "0xD8874C", VA = "0xD8874C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002B3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9181CC", Offset = "0x9181CC")]
	private sealed class <Start>d__126 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlaneBody <>4__this;

		[Token(Token = "0x170000F7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001261")]
			[Address(RVA = "0xD88534", Offset = "0xD88534", VA = "0xD88534", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001263")]
			[Address(RVA = "0xD8857C", Offset = "0xD8857C", VA = "0xD8857C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600125E")]
		[Address(RVA = "0xD87EAC", Offset = "0xD87EAC", VA = "0xD87EAC")]
		[DebuggerHidden]
		public <Start>d__126(int <>1__state)
		{
		}

		[Token(Token = "0x600125F")]
		[Address(RVA = "0xD87ED8", Offset = "0xD87ED8", VA = "0xD87ED8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001260")]
		[Address(RVA = "0xD87EDC", Offset = "0xD87EDC", VA = "0xD87EDC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001262")]
		[Address(RVA = "0xD8853C", Offset = "0xD8853C", VA = "0xD8853C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002B4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9181DC", Offset = "0x9181DC")]
	private sealed class <AudioIdle>d__158 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlaneBody <>4__this;

		[Token(Token = "0x40013DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <settingsVol>5__2;

		[Token(Token = "0x40013DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <volumeMul>5__3;

		[Token(Token = "0x170000F9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001267")]
			[Address(RVA = "0xD87760", Offset = "0xD87760", VA = "0xD87760", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001269")]
			[Address(RVA = "0xD877A8", Offset = "0xD877A8", VA = "0xD877A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001264")]
		[Address(RVA = "0xD872B8", Offset = "0xD872B8", VA = "0xD872B8")]
		[DebuggerHidden]
		public <AudioIdle>d__158(int <>1__state)
		{
		}

		[Token(Token = "0x6001265")]
		[Address(RVA = "0xD872E4", Offset = "0xD872E4", VA = "0xD872E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001266")]
		[Address(RVA = "0xD872E8", Offset = "0xD872E8", VA = "0xD872E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001268")]
		[Address(RVA = "0xD87768", Offset = "0xD87768", VA = "0xD87768", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002B5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9181EC", Offset = "0x9181EC")]
	private sealed class <Dead>d__190 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool respawn;

		[Token(Token = "0x40013E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PlaneBody <>4__this;

		[Token(Token = "0x40013E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 pos;

		[Token(Token = "0x40013E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Quaternion rot;

		[Token(Token = "0x170000FB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600126D")]
			[Address(RVA = "0xD87E5C", Offset = "0xD87E5C", VA = "0xD87E5C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600126F")]
			[Address(RVA = "0xD87EA4", Offset = "0xD87EA4", VA = "0xD87EA4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600126A")]
		[Address(RVA = "0xD877B0", Offset = "0xD877B0", VA = "0xD877B0")]
		[DebuggerHidden]
		public <Dead>d__190(int <>1__state)
		{
		}

		[Token(Token = "0x600126B")]
		[Address(RVA = "0xD877DC", Offset = "0xD877DC", VA = "0xD877DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600126C")]
		[Address(RVA = "0xD877E0", Offset = "0xD877E0", VA = "0xD877E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600126E")]
		[Address(RVA = "0xD87E64", Offset = "0xD87E64", VA = "0xD87E64", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40012E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x91B364", Offset = "0x91B364")]
	public float emptyMassInKg;

	[Token(Token = "0x40012E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fuelInGal;

	[Token(Token = "0x40012E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float engineHorsePower;

	[Token(Token = "0x40012EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int maxSpeed_kmh;

	[Token(Token = "0x40012EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float climbing_ms;

	[Token(Token = "0x40012EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float relativeAgility;

	[Token(Token = "0x40012ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x91B39C", Offset = "0x91B39C")]
	public int priority;

	[Token(Token = "0x40012EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string myName;

	[Token(Token = "0x40012EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int price;

	[Token(Token = "0x40012F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float upgradePriceMul;

	[Token(Token = "0x40012F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool premiumOnly;

	[Token(Token = "0x40012F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Texture2D shadow;

	[Token(Token = "0x40012F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int turnSpeed;

	[Token(Token = "0x40012F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[HideInInspector]
	public float turnSpeedF;

	[Token(Token = "0x40012F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float rollSpeed;

	[Token(Token = "0x40012F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[HideInInspector]
	public float climbAngle;

	[Token(Token = "0x40012F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float climbAngleAI;

	[Token(Token = "0x40012F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int overdrive;

	[Token(Token = "0x40012F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float zoom;

	[Token(Token = "0x40012FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform mainBone;

	[Token(Token = "0x40012FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool blockFrontDecal;

	[Token(Token = "0x40012FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	public bool blockSideDecal;

	[Token(Token = "0x40012FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public ePilotSkill[] pilotType;

	[Token(Token = "0x40012FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Cannon cannon;

	[Token(Token = "0x40012FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Cannon[] backCannons;

	[Token(Token = "0x4001300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject[] wheels;

	[Token(Token = "0x4001301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject[] stoppedEngines;

	[Token(Token = "0x4001302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject[] flyWare;

	[Token(Token = "0x4001303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private PlaneParts[] steer;

	[Token(Token = "0x4001304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private PlaneParts[] steerV;

	[Token(Token = "0x4001305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private PlaneParts steerR;

	[Token(Token = "0x4001306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private PlaneParts steerL;

	[Token(Token = "0x4001307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private PlaneParts flapL;

	[Token(Token = "0x4001308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private PlaneParts flapR;

	[Token(Token = "0x4001309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private PlaneParts flapM;

	[Token(Token = "0x400130A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private Transform[] rotor;

	[Token(Token = "0x400130B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private Vector2 joystick;

	[Token(Token = "0x400130C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public Transform[] rotorFast;

	[Token(Token = "0x400130D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public eFX explHit;

	[Token(Token = "0x400130E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	public eFX explGround;

	[Token(Token = "0x400130F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public PlaneSmoke smoke;

	[Token(Token = "0x4001310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	[HideInInspector]
	public float rudder;

	[Token(Token = "0x4001311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	public float speed;

	[Token(Token = "0x4001312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public float roll;

	[Token(Token = "0x4001313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	public float pitch;

	[Token(Token = "0x4001314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public float heading;

	[Token(Token = "0x4001315")]
	public const float maxThrottle = 2.5f;

	[Token(Token = "0x4001316")]
	private const float coolSpeed = 0.7f;

	[Token(Token = "0x4001317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	private float trottleInput;

	[Token(Token = "0x4001318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private bool aiTrottleOverheated;

	[Token(Token = "0x4001319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
	private float trottle;

	[Token(Token = "0x400131A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private float engineTemperature;

	[Token(Token = "0x400131B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	[HideInInspector]
	public float flaps;

	[Token(Token = "0x400131C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private float targetSpeedBreak;

	[Token(Token = "0x400131D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
	private float currentSpeedBreak;

	[Token(Token = "0x400131E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	[HideInInspector]
	public float speedFactor;

	[Token(Token = "0x400131F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float maxH;

	[Token(Token = "0x4001320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private L_O_D lod;

	[Token(Token = "0x4001321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public AudioSource audios;

	[Token(Token = "0x4001322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private bool dead;

	[Token(Token = "0x4001323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D9")]
	private bool dopplerOff;

	[Token(Token = "0x4001324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
	private float dopplerDef;

	[Token(Token = "0x4001325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	[HideInInspector]
	public Squadron partOfSquadron;

	[Token(Token = "0x4001326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private PlayerPlane playerPlane;

	[Token(Token = "0x4001327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91B434", Offset = "0x91B434")]
	private bool <IsCurrentPlayerPlane>k__BackingField;

	[Token(Token = "0x4001328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public Hull hull;

	[Token(Token = "0x4001329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	protected int cannonShootsThisStep;

	[Token(Token = "0x400132A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public AIPilot aiPilot;

	[Token(Token = "0x400132B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	[HideInInspector]
	public BombBay bombBay;

	[Token(Token = "0x400132C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private TorpedoBay torpedoBay;

	[Token(Token = "0x400132D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	private RocketBay rocketBay;

	[Token(Token = "0x400132E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	private Cannon20mm cannon20mm;

	[Token(Token = "0x400132F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	private RaycastHit[] hitGroundResult;

	[Token(Token = "0x4001330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	private PlaneStand planeStand;

	[Token(Token = "0x4001331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	private CannonAI[] aiCannons;

	[Token(Token = "0x4001332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	private Cannon overwriteActiveCannon;

	[Token(Token = "0x4001333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	private List<GameObject> destroyedPartsWithDecal;

	[Token(Token = "0x4001334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	private bool flyHomeStopped;

	[Token(Token = "0x4001335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static GameObject rotatorsGroup;

	[Token(Token = "0x4001336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Vector3 cachedPlayerPos;

	[Token(Token = "0x4001337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x259")]
	private bool stopedEngine;

	[Token(Token = "0x4001338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
	private float handlingUpgradeMul;

	[Token(Token = "0x4001339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	private float climbingUpgradeMul;

	[Token(Token = "0x400133A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	protected Transform rotMain;

	[Token(Token = "0x400133B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	protected Transform rotRoll;

	[Token(Token = "0x400133C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	public bool isLandingGearDown;

	[Token(Token = "0x400133D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
	private float lastGetHTime;

	[Token(Token = "0x400133E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	private float lastGetH;

	[Token(Token = "0x400133F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
	private float lastGetH_Y;

	[Token(Token = "0x4001340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	[HideInInspector]
	public float forceGroundContactTime;

	[Token(Token = "0x4001341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	private RaycastHit[] preciseRaycastBuffer;

	[Token(Token = "0x4001342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	private float svAngle;

	[Token(Token = "0x4001343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
	private float shAngle;

	[Token(Token = "0x4001344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	private bool audioIdleStarted;

	[Token(Token = "0x4001345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A4")]
	private float engineSoundMul;

	[Token(Token = "0x4001346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private static readonly float engineSoundMulPlayer;

	[Token(Token = "0x4001347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	private bool audioPlaying;

	[Token(Token = "0x4001348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A9")]
	[HideInInspector]
	public bool dontCheckColisions;

	[Token(Token = "0x4001349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2AC")]
	private float timeTree;

	[Token(Token = "0x400134A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	private Quaternion cacheRotorQuat;

	[Token(Token = "0x400134B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x91B474", Offset = "0x91B474")]
	public float acceleration;

	[Token(Token = "0x400134C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C4")]
	public float inverseMassCo;

	[Token(Token = "0x400134D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	public float maxSpeed;

	[Token(Token = "0x400134E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2CC")]
	private float currentRollSpeed;

	[Token(Token = "0x400134F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static GameObject fallSound;

	[Token(Token = "0x4001350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	private bool doLoopRoll;

	[Token(Token = "0x4001351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D4")]
	private float angleSpeed;

	[Token(Token = "0x4001352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	private int phase;

	[Token(Token = "0x4001353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2DC")]
	private float phaseDuration;

	[Token(Token = "0x4001354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	private float rollMul;

	[Token(Token = "0x4001355")]
	private const uint netSerializeFlag_setHP = 1u;

	[Token(Token = "0x4001356")]
	private const uint netSerializeFlag_setHP_neg = 4294967294u;

	[Token(Token = "0x4001357")]
	private const uint netSerializeFlag_shootCannons = 2u;

	[Token(Token = "0x4001358")]
	private const uint netSerializeFlag_shootCannons_neg = 4294967293u;

	[Token(Token = "0x4001359")]
	private const uint netSerializeFlag_shootAICannon = 4u;

	[Token(Token = "0x400135A")]
	private const uint netSerializeFlag_shootAICannon_neg = 4294967291u;

	[Token(Token = "0x400135B")]
	private const uint netSerializeFlag_shootAICannonHaveTargetIsDir = 8u;

	[Token(Token = "0x400135C")]
	private const uint netSerializeFlag_shootAICannonHaveTargetIsDir_neg = 4294967287u;

	[Token(Token = "0x400135D")]
	private const uint netSerializeFlag_shootCannonsTargetIsDir = 16u;

	[Token(Token = "0x400135E")]
	private const uint netSerializeFlag_shootCannonsTargetIsDir_neg = 4294967279u;

	[Token(Token = "0x400135F")]
	private const uint netSerializeFlag_ghostPlane = 32u;

	[Token(Token = "0x4001360")]
	private const uint netSerializeFlag_ghostPlane_neg = 4294967263u;

	[Token(Token = "0x4001361")]
	private const uint netSerializeFlag_shootCannon20mm = 64u;

	[Token(Token = "0x4001362")]
	private const uint netSerializeFlag_shootCannon20mm_neg = 4294967231u;

	[Token(Token = "0x4001363")]
	private const uint netSerializeFlag_shootCannon20mmTargetIsDir = 128u;

	[Token(Token = "0x4001364")]
	private const uint netSerializeFlag_shootCannon20mmTargetIsDir_neg = 4294967167u;

	[Token(Token = "0x4001365")]
	private const uint netSerializeFlag_speed = 256u;

	[Token(Token = "0x4001366")]
	private const uint netSerializeFlag_speed_neg = 4294967039u;

	[Token(Token = "0x4001367")]
	private const uint netSerializeFlag_accTime = 512u;

	[Token(Token = "0x4001368")]
	private const uint netSerializeFlag_accTime_neg = 4294966783u;

	[Token(Token = "0x4001369")]
	private const uint netSerializeFlag_velDelta = 1024u;

	[Token(Token = "0x400136A")]
	private const uint netSerializeFlag_velDelta_neg = 4294966271u;

	[Token(Token = "0x400136B")]
	private const uint netSerializeFlag_pitchroll = 2048u;

	[Token(Token = "0x400136C")]
	private const uint netSerializeFlag_pitchroll_neg = 4294965247u;

	[Token(Token = "0x400136D")]
	private const uint netSerializeFlag_stall = 4096u;

	[Token(Token = "0x400136E")]
	private const uint netSerializeFlag_stall_neg = 4294963199u;

	[Token(Token = "0x400136F")]
	private const uint netSerializeFlag_yoke = 8192u;

	[Token(Token = "0x4001370")]
	private const uint netSerializeFlag_yoke_neg = 4294959103u;

	[Token(Token = "0x4001371")]
	private const uint netSerializeFlag_inthrottle = 16384u;

	[Token(Token = "0x4001372")]
	private const uint netSerializeFlag_inthrottle_neg = 4294950911u;

	[Token(Token = "0x4001373")]
	private const uint netSerializeFlag_flaps = 32768u;

	[Token(Token = "0x4001374")]
	private const uint netSerializeFlag_flaps_neg = 4294934527u;

	[Token(Token = "0x4001375")]
	private const uint netSerializeFlag_landGear = 65536u;

	[Token(Token = "0x4001376")]
	private const uint netSerializeFlag_landGear_neg = 4294901759u;

	[Token(Token = "0x4001377")]
	private const uint netSerializeFlag_bombRelease = 131072u;

	[Token(Token = "0x4001378")]
	private const uint netSerializeFlag_bombRelease_neg = 4294836223u;

	[Token(Token = "0x4001379")]
	private const uint netSerializeFlag_turnBack = 262144u;

	[Token(Token = "0x400137A")]
	private const uint netSerializeFlag_turnBack_neg = 4294705151u;

	[Token(Token = "0x400137B")]
	private const byte netFlag_thisViewID_byte = 1;

	[Token(Token = "0x400137C")]
	private const byte netFlag_thisViewID_short = 2;

	[Token(Token = "0x400137D")]
	private const byte netHitFlag_shooterViewID_byte = 4;

	[Token(Token = "0x400137E")]
	private const byte netHitFlag_shooterViewID_short = 8;

	[Token(Token = "0x400137F")]
	private const byte netHitFlag_damage_byte = 16;

	[Token(Token = "0x4001380")]
	private const byte netHitFlag_expl = 32;

	[Token(Token = "0x4001381")]
	private const byte netRemoteCannonFlag_haveShootFlags = 4;

	[Token(Token = "0x4001382")]
	private const byte netRemoteCannonFlag_haveTargetFlags = 8;

	[Token(Token = "0x4001383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	private PhotonView photonView;

	[Token(Token = "0x4001384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	private Photon.Realtime.Player netPlayer;

	[Token(Token = "0x4001385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
	private int netPlayerId;

	[Token(Token = "0x4001386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2FC")]
	private bool isBot;

	[Token(Token = "0x4001387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2FD")]
	private bool offlineMode;

	[Token(Token = "0x4001388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2FE")]
	private byte multiRespawnCount;

	[Token(Token = "0x4001389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
	private float multiRespawnTime;

	[Token(Token = "0x400138A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
	private GhostPlane multiGhostPlane;

	[Token(Token = "0x400138B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	private int netRepeatSendCnt;

	[Token(Token = "0x400138C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x314")]
	private uint netFlags;

	[Token(Token = "0x400138D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
	private byte netShootAICannonFlags;

	[Token(Token = "0x400138E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x319")]
	private byte netShootAICannonTargetFlags;

	[Token(Token = "0x400138F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31C")]
	private int netLastSendHP;

	[Token(Token = "0x4001390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
	private int netLastSendSpeed;

	[Token(Token = "0x4001391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x324")]
	private int netLastSendTemp;

	[Token(Token = "0x4001392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
	private int netLastSendThrottle;

	[Token(Token = "0x4001393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32C")]
	private int netLastSendVelDelta;

	[Token(Token = "0x4001394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
	private int netLastSendPitch;

	[Token(Token = "0x4001395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x334")]
	private int netLastSendRoll;

	[Token(Token = "0x4001396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
	private int netLastSendYokeX;

	[Token(Token = "0x4001397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33C")]
	private int netLastSendYokeY;

	[Token(Token = "0x4001398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
	private int netLastSendInThrottle;

	[Token(Token = "0x4001399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x344")]
	private int netLastSendFlaps;

	[Token(Token = "0x400139A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
	private int netLastSendBombRelease;

	[Token(Token = "0x400139B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34C")]
	private float netTargetSpeed;

	[Token(Token = "0x400139C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
	private float netTargetAccTime;

	[Token(Token = "0x400139D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x354")]
	private float netTargetTrottle;

	[Token(Token = "0x400139E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
	private float netAccTime;

	[Token(Token = "0x400139F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35C")]
	private float netTargetVelDelta;

	[Token(Token = "0x40013A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
	private float netVelDelta;

	[Token(Token = "0x40013A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x364")]
	private bool netStall;

	[Token(Token = "0x40013A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
	private Vector2 netYoke;

	[Token(Token = "0x40013A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
	private float netInThrottle;

	[Token(Token = "0x40013A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x374")]
	private float netFlaps;

	[Token(Token = "0x40013A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
	private float netBombRelease;

	[Token(Token = "0x40013A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x37C")]
	private Vector3 netShootCannonsTargetPos;

	[Token(Token = "0x40013A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
	private Vector3[] netShootAICannonTargetPos;

	[Token(Token = "0x40013A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
	private Vector3 netShootCannon20mmTargetPos;

	[Token(Token = "0x40013A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39C")]
	private byte netRemoteCannonShootFlags;

	[Token(Token = "0x40013AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39D")]
	private byte netRemoteCannonShootTargetFlags;

	[Token(Token = "0x40013AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
	private Vector3[] netRemoteCannonShootTargetPos;

	[Token(Token = "0x40013AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
	private ulong netRemoteCannonLastAnglesCRC;

	[Token(Token = "0x40013AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
	private float netDamageSum;

	[Token(Token = "0x40013AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B4")]
	private int netDamageShooterViewID;

	[Token(Token = "0x40013AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
	private eFX netExpl;

	[Token(Token = "0x40013B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3BC")]
	private Vector3 netExplMisAngle;

	[Token(Token = "0x40013B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C8")]
	private float netLastOwnershipRequestTime;

	[Token(Token = "0x40013B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3CC")]
	private bool netStartedWithGunnerSittingAtPlane;

	[Token(Token = "0x40013B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D0")]
	private int netSendTurnBackToMissionArea;

	[Token(Token = "0x40013B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D8")]
	private byte[] buffCompressPos;

	[Token(Token = "0x40013B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E0")]
	private byte[] buffCompressHit1;

	[Token(Token = "0x40013B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E8")]
	private byte[] buffCompressHit2;

	[Token(Token = "0x40013B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F0")]
	private byte[] buffCompressHit3;

	[Token(Token = "0x40013B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F8")]
	private byte[] buffCompressSerialize1;

	[Token(Token = "0x40013B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x400")]
	private byte[] buffCompressSerialize2;

	[Token(Token = "0x40013BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x408")]
	private byte[] buffCompressSerialize3;

	[Token(Token = "0x40013BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x410")]
	private byte[] buffCompressRemoteShoot1;

	[Token(Token = "0x40013BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x418")]
	private byte[] buffCompressRemoteShoot2;

	[Token(Token = "0x40013BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x420")]
	private byte[] buffCompressRemoteShoot3;

	[Token(Token = "0x40013BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x428")]
	private Vector3[] buffRemoteCannonShootTargetPos;

	[Token(Token = "0x40013BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x430")]
	private byte[] buffCompressGunnerAngles;

	[Token(Token = "0x40013C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x438")]
	private byte[] buffCompressPilotPose1;

	[Token(Token = "0x40013C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x440")]
	private byte[] buffCompressPilotPose2;

	[Token(Token = "0x40013C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x448")]
	private byte[] buffCompressPilotPose3;

	[Token(Token = "0x40013C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x450")]
	private NetPlaneData buffPlaneData;

	[Token(Token = "0x40013C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x458")]
	private RaiseEventOptions raiseEventOptionsOwnerPlayer;

	[Token(Token = "0x40013C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x460")]
	private RaiseEventOptions raiseEventOptionsOthers;

	[Token(Token = "0x40013C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x468")]
	private RaiseEventOptions raiseEventOptionTheSamePlane;

	[Token(Token = "0x40013C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x470")]
	private SendOptions sendOptionsNotReliable;

	[Token(Token = "0x40013C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x478")]
	private object[] sendContentPH;

	[Token(Token = "0x40013C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x480")]
	private object[] sendContentCS;

	[Token(Token = "0x40013CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x488")]
	private object[] sendContentGA;

	[Token(Token = "0x40013CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x490")]
	private object[] sendContentPP;

	[Token(Token = "0x40013CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x498")]
	private List<int> buffPlayersInTheSamePlane;

	[Token(Token = "0x40013CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A0")]
	private uint lastSendPlayerPoseCRC;

	[Token(Token = "0x40013CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A4")]
	private bool multiUpdatePlayerPilotsAIMode;

	[Token(Token = "0x170000F3")]
	public bool IsCurrentPlayerPlane
	{
		[Token(Token = "0x60011B5")]
		[Address(RVA = "0x173B398", Offset = "0x173B398", VA = "0x173B398")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9291C4", Offset = "0x9291C4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60011B6")]
		[Address(RVA = "0x173B3A0", Offset = "0x173B3A0", VA = "0x173B3A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9291D4", Offset = "0x9291D4")]
		private set
		{
		}
	}

	[Token(Token = "0x170000F4")]
	public eMissile CurrentLoadoutType
	{
		[Token(Token = "0x60011B7")]
		[Address(RVA = "0x173B3AC", Offset = "0x173B3AC", VA = "0x173B3AC")]
		get
		{
			return default(eMissile);
		}
	}

	[Token(Token = "0x60011B8")]
	[Address(RVA = "0x173B3E0", Offset = "0x173B3E0", VA = "0x173B3E0")]
	public bool IsEngineWorking()
	{
		return default(bool);
	}

	[Token(Token = "0x60011B9")]
	[Address(RVA = "0x173B3F0", Offset = "0x173B3F0", VA = "0x173B3F0")]
	public Vector3 GetSpeedVector()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60011BA")]
	[Address(RVA = "0x173B434", Offset = "0x173B434", VA = "0x173B434")]
	public void StopEngine()
	{
	}

	[Token(Token = "0x60011BB")]
	[Address(RVA = "0x173B708", Offset = "0x173B708", VA = "0x173B708")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9291E4", Offset = "0x9291E4")]
	private IEnumerator TurnDeadRotor()
	{
		return null;
	}

	[Token(Token = "0x60011BC")]
	[Address(RVA = "0x173B774", Offset = "0x173B774", VA = "0x173B774")]
	public static PlaneBody Get(Transform t)
	{
		return null;
	}

	[Token(Token = "0x60011BD")]
	[Address(RVA = "0x173B860", Offset = "0x173B860", VA = "0x173B860")]
	public int GetPrice()
	{
		return default(int);
	}

	[Token(Token = "0x60011BE")]
	[Address(RVA = "0x173B8F0", Offset = "0x173B8F0", VA = "0x173B8F0")]
	public void ApplyPainting(int texSize = 0)
	{
	}

	[Token(Token = "0x60011BF")]
	[Address(RVA = "0x173BA28", Offset = "0x173BA28", VA = "0x173BA28")]
	public void SetPlayerPlane(PlayerPlane p)
	{
	}

	[Token(Token = "0x60011C0")]
	[Address(RVA = "0x173BD4C", Offset = "0x173BD4C", VA = "0x173BD4C")]
	public PlayerPlane GetPlayerPlane()
	{
		return null;
	}

	[Token(Token = "0x60011C1")]
	[Address(RVA = "0x173BD54", Offset = "0x173BD54", VA = "0x173BD54")]
	public AIPilot GetAIPilot()
	{
		return null;
	}

	[Token(Token = "0x60011C2")]
	[Address(RVA = "0x173BD5C", Offset = "0x173BD5C", VA = "0x173BD5C")]
	public bool IsPlayerPlane()
	{
		return default(bool);
	}

	[Token(Token = "0x60011C3")]
	[Address(RVA = "0x173BD6C", Offset = "0x173BD6C", VA = "0x173BD6C")]
	public void StoreTransitionState(PlayerPlaneTransitionState state)
	{
	}

	[Token(Token = "0x60011C4")]
	[Address(RVA = "0x173BF60", Offset = "0x173BF60", VA = "0x173BF60")]
	public void RestoreTransitionState(PlayerPlaneTransitionState state)
	{
	}

	[Token(Token = "0x60011C5")]
	[Address(RVA = "0x173C0C8", Offset = "0x173C0C8", VA = "0x173C0C8")]
	public float GetHandlingUpgradeMul()
	{
		return default(float);
	}

	[Token(Token = "0x60011C6")]
	[Address(RVA = "0x173C0D0", Offset = "0x173C0D0", VA = "0x173C0D0")]
	public float GetClimbingUpgradeMul()
	{
		return default(float);
	}

	[Token(Token = "0x60011C7")]
	[Address(RVA = "0x173BA38", Offset = "0x173BA38", VA = "0x173BA38")]
	public void ApplyUpgrades()
	{
	}

	[Token(Token = "0x60011C8")]
	[Address(RVA = "0x173C0D8", Offset = "0x173C0D8", VA = "0x173C0D8")]
	public string GetSpeedHeightText()
	{
		return null;
	}

	[Token(Token = "0x60011C9")]
	[Address(RVA = "0x173C56C", Offset = "0x173C56C", VA = "0x173C56C")]
	public float GetZoome()
	{
		return default(float);
	}

	[Token(Token = "0x60011CA")]
	[Address(RVA = "0x173C5A4", Offset = "0x173C5A4", VA = "0x173C5A4")]
	public static string GetPlaneName(string myName)
	{
		return null;
	}

	[Token(Token = "0x60011CB")]
	[Address(RVA = "0x173C608", Offset = "0x173C608", VA = "0x173C608")]
	public string GetPlaneName()
	{
		return null;
	}

	[Token(Token = "0x60011CC")]
	[Address(RVA = "0x173C66C", Offset = "0x173C66C", VA = "0x173C66C")]
	public static string GetPlaneNameShort(string myName)
	{
		return null;
	}

	[Token(Token = "0x60011CD")]
	[Address(RVA = "0x173C75C", Offset = "0x173C75C", VA = "0x173C75C")]
	public string GetPlaneNameShort()
	{
		return null;
	}

	[Token(Token = "0x60011CE")]
	[Address(RVA = "0x173C7C0", Offset = "0x173C7C0", VA = "0x173C7C0")]
	public static string GetPlaneDescription(string myName)
	{
		return null;
	}

	[Token(Token = "0x60011CF")]
	[Address(RVA = "0x173C8C0", Offset = "0x173C8C0", VA = "0x173C8C0")]
	public string GetPlaneDescription()
	{
		return null;
	}

	[Token(Token = "0x60011D0")]
	[Address(RVA = "0x173C924", Offset = "0x173C924", VA = "0x173C924")]
	public void Awake()
	{
	}

	[Token(Token = "0x60011D1")]
	[Address(RVA = "0x173DE88", Offset = "0x173DE88", VA = "0x173DE88")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x60011D2")]
	[Address(RVA = "0x173DF80", Offset = "0x173DF80", VA = "0x173DF80")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x60011D3")]
	[Address(RVA = "0x173E078", Offset = "0x173E078", VA = "0x173E078")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60011D4")]
	[Address(RVA = "0x173E50C", Offset = "0x173E50C", VA = "0x173E50C")]
	public void ControlDestroyedWithDecal(List<GameObject> gos)
	{
	}

	[Token(Token = "0x60011D5")]
	[Address(RVA = "0x173E2F4", Offset = "0x173E2F4", VA = "0x173E2F4")]
	private void CleanupDestroyedPartsWithDecal()
	{
	}

	[Token(Token = "0x60011D6")]
	[Address(RVA = "0x173E588", Offset = "0x173E588", VA = "0x173E588")]
	public void SetHeading(float h)
	{
	}

	[Token(Token = "0x60011D7")]
	[Address(RVA = "0x173DCF4", Offset = "0x173DCF4", VA = "0x173DCF4")]
	private void FillAICannons()
	{
	}

	[Token(Token = "0x60011D8")]
	[Address(RVA = "0x173E590", Offset = "0x173E590", VA = "0x173E590")]
	public CannonAI[] GetAICannons()
	{
		return null;
	}

	[Token(Token = "0x60011D9")]
	[Address(RVA = "0x173E5B4", Offset = "0x173E5B4", VA = "0x173E5B4")]
	public int GetAICannonIndex(CannonAI cannon)
	{
		return default(int);
	}

	[Token(Token = "0x60011DA")]
	[Address(RVA = "0x173E68C", Offset = "0x173E68C", VA = "0x173E68C")]
	public CannonAI GetAICannonFromGunnerIdx(int gidx)
	{
		return null;
	}

	[Token(Token = "0x60011DB")]
	[Address(RVA = "0x173E708", Offset = "0x173E708", VA = "0x173E708")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x929244", Offset = "0x929244")]
	public IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60011DC")]
	[Address(RVA = "0x173E774", Offset = "0x173E774", VA = "0x173E774")]
	public void SetupCutscene(bool wheelsOn, bool rotorRotating)
	{
	}

	[Token(Token = "0x60011DD")]
	[Address(RVA = "0x173E8A0", Offset = "0x173E8A0", VA = "0x173E8A0")]
	public void StepRotors(float mul)
	{
	}

	[Token(Token = "0x60011DE")]
	[Address(RVA = "0x173EAD4", Offset = "0x173EAD4", VA = "0x173EAD4")]
	public bool CanSwitchLandingGear()
	{
		return default(bool);
	}

	[Token(Token = "0x60011DF")]
	[Address(RVA = "0x173EBA4", Offset = "0x173EBA4", VA = "0x173EBA4")]
	public void ToggleLandingWheels(bool toggle)
	{
	}

	[Token(Token = "0x60011E0")]
	[Address(RVA = "0x173EC28", Offset = "0x173EC28", VA = "0x173EC28")]
	public Transform GetRotMainNode()
	{
		return null;
	}

	[Token(Token = "0x60011E1")]
	[Address(RVA = "0x173EC30", Offset = "0x173EC30", VA = "0x173EC30")]
	public Transform GetRotRoll()
	{
		return null;
	}

	[Token(Token = "0x60011E2")]
	[Address(RVA = "0x173EC38", Offset = "0x173EC38", VA = "0x173EC38")]
	public float GetRoll()
	{
		return default(float);
	}

	[Token(Token = "0x60011E3")]
	[Address(RVA = "0x173EC40", Offset = "0x173EC40", VA = "0x173EC40")]
	public void ResetGetH()
	{
	}

	[Token(Token = "0x60011E4")]
	[Address(RVA = "0x173C1C4", Offset = "0x173C1C4", VA = "0x173C1C4")]
	public float GetH(bool immediate = false, bool precise = false)
	{
		return default(float);
	}

	[Token(Token = "0x60011E5")]
	[Address(RVA = "0x173EC48", Offset = "0x173EC48", VA = "0x173EC48")]
	public void TurnBackToMissionArea()
	{
	}

	[Token(Token = "0x60011E6")]
	[Address(RVA = "0x173EDA8", Offset = "0x173EDA8", VA = "0x173EDA8")]
	public float GetPitch()
	{
		return default(float);
	}

	[Token(Token = "0x60011E7")]
	[Address(RVA = "0x173EDB0", Offset = "0x173EDB0", VA = "0x173EDB0")]
	public void SetPitch(float p)
	{
	}

	[Token(Token = "0x60011E8")]
	[Address(RVA = "0x173EDB8", Offset = "0x173EDB8", VA = "0x173EDB8")]
	public void ThrottleInput(float t)
	{
	}

	[Token(Token = "0x60011E9")]
	[Address(RVA = "0x173EDC0", Offset = "0x173EDC0", VA = "0x173EDC0")]
	public void SetThrottle(float t)
	{
	}

	[Token(Token = "0x60011EA")]
	[Address(RVA = "0x173EDE0", Offset = "0x173EDE0", VA = "0x173EDE0")]
	private void StepThrottle()
	{
	}

	[Token(Token = "0x60011EB")]
	[Address(RVA = "0x173F260", Offset = "0x173F260", VA = "0x173F260")]
	public float GetEngineTemperature()
	{
		return default(float);
	}

	[Token(Token = "0x60011EC")]
	[Address(RVA = "0x173F268", Offset = "0x173F268", VA = "0x173F268")]
	public void SetSpeedBreak(float n)
	{
	}

	[Token(Token = "0x60011ED")]
	[Address(RVA = "0x173F270", Offset = "0x173F270", VA = "0x173F270")]
	public float GetTrottle()
	{
		return default(float);
	}

	[Token(Token = "0x60011EE")]
	[Address(RVA = "0x173F278", Offset = "0x173F278", VA = "0x173F278")]
	public void Crash()
	{
	}

	[Token(Token = "0x60011EF")]
	[Address(RVA = "0x173F3A4", Offset = "0x173F3A4", VA = "0x173F3A4")]
	public void MoveFlaps()
	{
	}

	[Token(Token = "0x60011F0")]
	[Address(RVA = "0x173F978", Offset = "0x173F978", VA = "0x173F978")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9292A4", Offset = "0x9292A4")]
	public IEnumerator AudioIdle()
	{
		return null;
	}

	[Token(Token = "0x60011F1")]
	[Address(RVA = "0x173F9E4", Offset = "0x173F9E4", VA = "0x173F9E4")]
	public void MuteDoppler(bool mute)
	{
	}

	[Token(Token = "0x60011F2")]
	[Address(RVA = "0x173FAB0", Offset = "0x173FAB0", VA = "0x173FAB0")]
	public void ResetAudio()
	{
	}

	[Token(Token = "0x60011F3")]
	[Address(RVA = "0x173FAD8", Offset = "0x173FAD8", VA = "0x173FAD8")]
	public void AudioPitch(float volumeMul, float vol)
	{
	}

	[Token(Token = "0x60011F4")]
	[Address(RVA = "0x173FD40", Offset = "0x173FD40", VA = "0x173FD40")]
	public void CheckPlayerGroundTreeColission()
	{
	}

	[Token(Token = "0x60011F5")]
	[Address(RVA = "0x173DD8C", Offset = "0x173DD8C", VA = "0x173DD8C")]
	private void CacheRotorSpeed()
	{
	}

	[Token(Token = "0x60011F6")]
	[Address(RVA = "0x17402D0", Offset = "0x17402D0", VA = "0x17402D0")]
	public bool UpdateSelf(bool currentPlayerPlane, float settingsVol)
	{
		return default(bool);
	}

	[Token(Token = "0x60011F7")]
	[Address(RVA = "0x173DE60", Offset = "0x173DE60", VA = "0x173DE60")]
	public static float WrapAngle(float angle)
	{
		return default(float);
	}

	[Token(Token = "0x60011F8")]
	[Address(RVA = "0x174103C", Offset = "0x174103C", VA = "0x174103C")]
	public void SelfLateUpdate()
	{
	}

	[Token(Token = "0x60011F9")]
	[Address(RVA = "0x1741720", Offset = "0x1741720", VA = "0x1741720")]
	public void UpdatePosOnCarrier()
	{
	}

	[Token(Token = "0x60011FA")]
	[Address(RVA = "0x1741790", Offset = "0x1741790", VA = "0x1741790")]
	public NPCFlightData GatherNPCFlightData()
	{
		return default(NPCFlightData);
	}

	[Token(Token = "0x60011FB")]
	[Address(RVA = "0x17418A8", Offset = "0x17418A8", VA = "0x17418A8")]
	public void SyncNPCFlightJob(NPCFlightSync sync)
	{
	}

	[Token(Token = "0x60011FC")]
	[Address(RVA = "0x173DC18", Offset = "0x173DC18", VA = "0x173DC18")]
	private void CalculateFlightParams()
	{
	}

	[Token(Token = "0x60011FD")]
	[Address(RVA = "0x1740858", Offset = "0x1740858", VA = "0x1740858")]
	public bool FallDown()
	{
		return default(bool);
	}

	[Token(Token = "0x60011FE")]
	[Address(RVA = "0x17419A0", Offset = "0x17419A0", VA = "0x17419A0")]
	public void Bum(Collider hit, bool remote = false)
	{
	}

	[Token(Token = "0x60011FF")]
	[Address(RVA = "0x1742D14", Offset = "0x1742D14", VA = "0x1742D14")]
	public void ExplodeOnMultiRespawn(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x6001200")]
	[Address(RVA = "0x1742E10", Offset = "0x1742E10", VA = "0x1742E10")]
	public void SetJoystick(Vector2 j)
	{
	}

	[Token(Token = "0x6001201")]
	[Address(RVA = "0x1742EE4", Offset = "0x1742EE4", VA = "0x1742EE4")]
	public void SetJoystickPlayer(Vector2 j)
	{
	}

	[Token(Token = "0x6001202")]
	[Address(RVA = "0x1742EF0", Offset = "0x1742EF0", VA = "0x1742EF0")]
	public void OverwriteActiveCannon(Cannon cannon)
	{
	}

	[Token(Token = "0x6001203")]
	[Address(RVA = "0x1743008", Offset = "0x1743008", VA = "0x1743008")]
	public Cannon GetOverwriteActiveCannon()
	{
		return null;
	}

	[Token(Token = "0x6001204")]
	[Address(RVA = "0x1743010", Offset = "0x1743010", VA = "0x1743010")]
	public bool Shoot(Vector3 pos, bool remote = false, bool remoteTargetIsDir = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6001205")]
	[Address(RVA = "0x17430F0", Offset = "0x17430F0", VA = "0x17430F0")]
	public void Smoke()
	{
	}

	[Token(Token = "0x6001206")]
	[Address(RVA = "0x1743180", Offset = "0x1743180", VA = "0x1743180")]
	public bool IsAlive()
	{
		return default(bool);
	}

	[Token(Token = "0x6001207")]
	[Address(RVA = "0x1742C48", Offset = "0x1742C48", VA = "0x1742C48")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x929304", Offset = "0x929304")]
	public IEnumerator Dead(bool respawn, Vector3 pos, Quaternion rot)
	{
		return null;
	}

	[Token(Token = "0x6001208")]
	[Address(RVA = "0x1743190", Offset = "0x1743190", VA = "0x1743190")]
	public bool CanPlayCannonShoot()
	{
		return default(bool);
	}

	[Token(Token = "0x6001209")]
	[Address(RVA = "0x17431A0", Offset = "0x17431A0", VA = "0x17431A0")]
	public void OnPlayCannonShoot()
	{
	}

	[Token(Token = "0x600120A")]
	[Address(RVA = "0x17431B0", Offset = "0x17431B0", VA = "0x17431B0")]
	public void SetAsPlayer(bool set)
	{
	}

	[Token(Token = "0x600120B")]
	[Address(RVA = "0x17431BC", Offset = "0x17431BC", VA = "0x17431BC")]
	public void DoLoopRollNow()
	{
	}

	[Token(Token = "0x600120C")]
	[Address(RVA = "0x17431D4", Offset = "0x17431D4", VA = "0x17431D4")]
	private void StartFullRoll_or_Level()
	{
	}

	[Token(Token = "0x600120D")]
	[Address(RVA = "0x1743288", Offset = "0x1743288", VA = "0x1743288")]
	private void StartHalfLoopUp()
	{
	}

	[Token(Token = "0x600120E")]
	[Address(RVA = "0x17432B8", Offset = "0x17432B8", VA = "0x17432B8")]
	private void StartHafRoll_or_HalfLoop()
	{
	}

	[Token(Token = "0x600120F")]
	[Address(RVA = "0x174337C", Offset = "0x174337C", VA = "0x174337C")]
	private void LastPhase(Transform t)
	{
	}

	[Token(Token = "0x6001210")]
	[Address(RVA = "0x174352C", Offset = "0x174352C", VA = "0x174352C")]
	public bool DoingLoop()
	{
		return default(bool);
	}

	[Token(Token = "0x6001211")]
	[Address(RVA = "0x1740B60", Offset = "0x1740B60", VA = "0x1740B60")]
	private void DoLoop(Transform t)
	{
	}

	[Token(Token = "0x6001212")]
	[Address(RVA = "0x1743534", Offset = "0x1743534", VA = "0x1743534")]
	private Photon.Realtime.Player GetNetPlayer()
	{
		return null;
	}

	[Token(Token = "0x6001213")]
	[Address(RVA = "0x174353C", Offset = "0x174353C", VA = "0x174353C")]
	public int GetNetActorNumber()
	{
		return default(int);
	}

	[Token(Token = "0x6001214")]
	[Address(RVA = "0x17435D8", Offset = "0x17435D8", VA = "0x17435D8")]
	public int GetNetPlayerId()
	{
		return default(int);
	}

	[Token(Token = "0x6001215")]
	[Address(RVA = "0x17435E0", Offset = "0x17435E0", VA = "0x17435E0")]
	public void SetIsBot(int botExpLevel)
	{
	}

	[Token(Token = "0x6001216")]
	[Address(RVA = "0x17435EC", Offset = "0x17435EC", VA = "0x17435EC")]
	public bool IsBot()
	{
		return default(bool);
	}

	[Token(Token = "0x6001217")]
	[Address(RVA = "0x17435F4", Offset = "0x17435F4", VA = "0x17435F4")]
	public int GetNetViewID()
	{
		return default(int);
	}

	[Token(Token = "0x6001218")]
	[Address(RVA = "0x173E410", Offset = "0x173E410", VA = "0x173E410")]
	public bool IsNetLocalCtrl()
	{
		return default(bool);
	}

	[Token(Token = "0x6001219")]
	[Address(RVA = "0x17401CC", Offset = "0x17401CC", VA = "0x17401CC")]
	public bool IsNetRemoteCtrl()
	{
		return default(bool);
	}

	[Token(Token = "0x600121A")]
	[Address(RVA = "0x17436D4", Offset = "0x17436D4", VA = "0x17436D4")]
	public float GetNetAccTime()
	{
		return default(float);
	}

	[Token(Token = "0x600121B")]
	[Address(RVA = "0x17436DC", Offset = "0x17436DC", VA = "0x17436DC")]
	public float GetNetVelDelta()
	{
		return default(float);
	}

	[Token(Token = "0x600121C")]
	[Address(RVA = "0x17436E4", Offset = "0x17436E4", VA = "0x17436E4")]
	public bool GetNetStall()
	{
		return default(bool);
	}

	[Token(Token = "0x600121D")]
	[Address(RVA = "0x17436EC", Offset = "0x17436EC", VA = "0x17436EC")]
	public Vector2 GetNetYoke()
	{
		return default(Vector2);
	}

	[Token(Token = "0x600121E")]
	[Address(RVA = "0x17436F8", Offset = "0x17436F8", VA = "0x17436F8")]
	public float GetNetInThrottle()
	{
		return default(float);
	}

	[Token(Token = "0x600121F")]
	[Address(RVA = "0x1743700", Offset = "0x1743700", VA = "0x1743700")]
	public float GetNetFlaps()
	{
		return default(float);
	}

	[Token(Token = "0x6001220")]
	[Address(RVA = "0x1743708", Offset = "0x1743708", VA = "0x1743708")]
	public float GetNetBombRelease()
	{
		return default(float);
	}

	[Token(Token = "0x6001221")]
	[Address(RVA = "0x1743710", Offset = "0x1743710", VA = "0x1743710", Slot = "4")]
	public void OnPhotonInstantiate(PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6001222")]
	[Address(RVA = "0x17439D8", Offset = "0x17439D8", VA = "0x17439D8")]
	public void InitPhotonInstantiate(Photon.Realtime.Player Sender, object[] InstantiationData)
	{
	}

	[Token(Token = "0x6001223")]
	[Address(RVA = "0x1743CB8", Offset = "0x1743CB8", VA = "0x1743CB8")]
	public void Multi_InitNetworkComponents()
	{
	}

	[Token(Token = "0x6001224")]
	[Address(RVA = "0x1743DD8", Offset = "0x1743DD8", VA = "0x1743DD8")]
	private void Multi_Start()
	{
	}

	[Token(Token = "0x6001225")]
	[Address(RVA = "0x1743FBC", Offset = "0x1743FBC", VA = "0x1743FBC")]
	public void Multi_SpawnInOfflineMode(int _netPlayerId)
	{
	}

	[Token(Token = "0x6001226")]
	[Address(RVA = "0x1743FC4", Offset = "0x1743FC4", VA = "0x1743FC4")]
	public void Multi_SwitchToOfflineMode()
	{
	}

	[Token(Token = "0x6001227")]
	[Address(RVA = "0x174412C", Offset = "0x174412C", VA = "0x174412C")]
	public void Multi_SendShootCannons(Vector3 targetPos, bool targetIsDir)
	{
	}

	[Token(Token = "0x6001228")]
	[Address(RVA = "0x174415C", Offset = "0x174415C", VA = "0x174415C")]
	public void Multi_SendShootAICannon(int aiCannonIdx, Vector3 targetPos, bool targetIsDir)
	{
	}

	[Token(Token = "0x6001229")]
	[Address(RVA = "0x17442E4", Offset = "0x17442E4", VA = "0x17442E4")]
	public void Multi_SendShootCannon20mm(Vector3 targetPos, bool targetIsDir)
	{
	}

	[Token(Token = "0x600122A")]
	[Address(RVA = "0x1744310", Offset = "0x1744310", VA = "0x1744310")]
	public void Multi_SendDropBomb(bool diveMode)
	{
	}

	[Token(Token = "0x600122B")]
	[Address(RVA = "0x1744458", Offset = "0x1744458", VA = "0x1744458")]
	public void Multi_SendLaunchRocket(Vector3 targetPos)
	{
	}

	[Token(Token = "0x600122C")]
	[Address(RVA = "0x17445EC", Offset = "0x17445EC", VA = "0x17445EC")]
	public void Multi_SendDropTorpedo(bool wasCorrect)
	{
	}

	[Token(Token = "0x600122D")]
	[Address(RVA = "0x1744734", Offset = "0x1744734", VA = "0x1744734")]
	public void Multi_SendFireFlare(Vector3 position, Vector3 forward, Vector3 velocity, float speed)
	{
	}

	[Token(Token = "0x600122E")]
	[Address(RVA = "0x174498C", Offset = "0x174498C", VA = "0x174498C")]
	public void Multi_SendThrowVRBomb(Vector3 position, Vector3 forward, Vector3 velocity, bool haveTarget, Vector3 targetPos)
	{
	}

	[Token(Token = "0x600122F")]
	[Address(RVA = "0x1744C38", Offset = "0x1744C38", VA = "0x1744C38")]
	public bool MultiRemote_SendHit(PlaneBody shooter, float dam)
	{
		return default(bool);
	}

	[Token(Token = "0x6001230")]
	[Address(RVA = "0x1744D48", Offset = "0x1744D48", VA = "0x1744D48")]
	public void MultiRemote_SendExpl(eFX expl, Vector3 misAngle)
	{
	}

	[Token(Token = "0x6001231")]
	[Address(RVA = "0x1744D5C", Offset = "0x1744D5C", VA = "0x1744D5C")]
	public void Multi_SendBum(int shooterViewId)
	{
	}

	[Token(Token = "0x6001232")]
	[Address(RVA = "0x1742A14", Offset = "0x1742A14", VA = "0x1742A14")]
	public void Multi_SendBumColl()
	{
	}

	[Token(Token = "0x6001233")]
	[Address(RVA = "0x174224C", Offset = "0x174224C", VA = "0x174224C")]
	public bool Multi_TryRespawn(bool hitKill)
	{
		return default(bool);
	}

	[Token(Token = "0x6001234")]
	[Address(RVA = "0x1745CA4", Offset = "0x1745CA4", VA = "0x1745CA4")]
	public int GetMultiRespawnCnt()
	{
		return default(int);
	}

	[Token(Token = "0x6001235")]
	[Address(RVA = "0x1745CAC", Offset = "0x1745CAC", VA = "0x1745CAC")]
	public void MultiInitRespawnCount(int cnt)
	{
	}

	[Token(Token = "0x6001236")]
	[Address(RVA = "0x1745D64", Offset = "0x1745D64", VA = "0x1745D64")]
	public void MultiSelectedAsRespawn()
	{
	}

	[Token(Token = "0x6001237")]
	[Address(RVA = "0x1744FD0", Offset = "0x1744FD0", VA = "0x1744FD0")]
	private void Multi_Respawn(Vector3 prevPos, Quaternion prevRot, Vector3 respawnPos, float respawnHeading, bool hitKill, bool selectingNextRespawnPlane, bool remote = false)
	{
	}

	[Token(Token = "0x6001238")]
	[Address(RVA = "0x1745F90", Offset = "0x1745F90", VA = "0x1745F90")]
	public static float SignedAngle(float a)
	{
		return default(float);
	}

	[Token(Token = "0x6001239")]
	[Address(RVA = "0x1745FB0", Offset = "0x1745FB0", VA = "0x1745FB0")]
	public void Multi_UpdateExtraChallange(bool b)
	{
	}

	[Token(Token = "0x600123A")]
	[Address(RVA = "0x174610C", Offset = "0x174610C", VA = "0x174610C")]
	private void SendEventPlaneHit()
	{
	}

	[Token(Token = "0x600123B")]
	[Address(RVA = "0x17465F4", Offset = "0x17465F4", VA = "0x17465F4")]
	private void ReceiveEventPlaneHit(byte[] buffCompress)
	{
	}

	[Token(Token = "0x600123C")]
	[Address(RVA = "0x1746E88", Offset = "0x1746E88", VA = "0x1746E88")]
	private void SendEventRemoteCannonShoot()
	{
	}

	[Token(Token = "0x600123D")]
	[Address(RVA = "0x17472F8", Offset = "0x17472F8", VA = "0x17472F8")]
	private void ReceiveEventRemoteCannonShoot(byte[] buffCompress)
	{
	}

	[Token(Token = "0x600123E")]
	[Address(RVA = "0x1747744", Offset = "0x1747744", VA = "0x1747744")]
	private void UpdateTheSamePlanePlayersTarget()
	{
	}

	[Token(Token = "0x600123F")]
	[Address(RVA = "0x17482CC", Offset = "0x17482CC", VA = "0x17482CC")]
	private void SendEventGunnerAngles()
	{
	}

	[Token(Token = "0x6001240")]
	[Address(RVA = "0x17485C8", Offset = "0x17485C8", VA = "0x17485C8")]
	private void ReceiveEventGunnerAngles(byte[] buffCompress)
	{
	}

	[Token(Token = "0x6001241")]
	[Address(RVA = "0x1748948", Offset = "0x1748948", VA = "0x1748948")]
	private void SendEventPlayerPilotPose()
	{
	}

	[Token(Token = "0x6001242")]
	[Address(RVA = "0x1749364", Offset = "0x1749364", VA = "0x1749364")]
	private void ReceiveEventPlayerPilotPose(byte[] buffCompress, int fromActorNum)
	{
	}

	[Token(Token = "0x6001243")]
	[Address(RVA = "0x1749B30", Offset = "0x1749B30", VA = "0x1749B30")]
	public void UpdatePlayerPilotsAIMode(bool fromUpdate = false)
	{
	}

	[Token(Token = "0x6001244")]
	[Address(RVA = "0x1741158", Offset = "0x1741158", VA = "0x1741158")]
	private void Multi_LateUpdate()
	{
	}

	[Token(Token = "0x6001245")]
	[Address(RVA = "0x174A030", Offset = "0x174A030", VA = "0x174A030")]
	public void Multi_SendEvents()
	{
	}

	[Token(Token = "0x6001246")]
	[Address(RVA = "0x174A084", Offset = "0x174A084", VA = "0x174A084")]
	public int CalcBits(uint val)
	{
		return default(int);
	}

	[Token(Token = "0x6001247")]
	[Address(RVA = "0x174A09C", Offset = "0x174A09C", VA = "0x174A09C", Slot = "5")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6001248")]
	[Address(RVA = "0x174BB2C", Offset = "0x174BB2C", VA = "0x174BB2C", Slot = "6")]
	public void OnOwnershipRequest(PhotonView targetView, Photon.Realtime.Player requestingPlayer)
	{
	}

	[Token(Token = "0x6001249")]
	[Address(RVA = "0x174BC5C", Offset = "0x174BC5C", VA = "0x174BC5C", Slot = "7")]
	public void OnOwnershipTransfered(PhotonView targetView, Photon.Realtime.Player previousOwner)
	{
	}

	[Token(Token = "0x600124A")]
	[Address(RVA = "0x174BFC0", Offset = "0x174BFC0", VA = "0x174BFC0", Slot = "8")]
	public void OnEvent(EventData photonEvent)
	{
	}

	[Token(Token = "0x600124B")]
	[Address(RVA = "0x174C260", Offset = "0x174C260", VA = "0x174C260")]
	[PunRPC]
	private void RPC_Bum(int shooterViewId, float prevSpeed, float prevRollSpeed, int prevTurnSpeed)
	{
	}

	[Token(Token = "0x600124C")]
	[Address(RVA = "0x174C44C", Offset = "0x174C44C", VA = "0x174C44C")]
	[PunRPC]
	private void RPC_BumColl(float prevSpeed, float prevRollSpeed, int prevTurnSpeed)
	{
	}

	[Token(Token = "0x600124D")]
	[Address(RVA = "0x174C4FC", Offset = "0x174C4FC", VA = "0x174C4FC")]
	[PunRPC]
	private void RPC_DropBomb(bool diveMode)
	{
	}

	[Token(Token = "0x600124E")]
	[Address(RVA = "0x174C5B0", Offset = "0x174C5B0", VA = "0x174C5B0")]
	[PunRPC]
	private void RPC_LaunchRocket(byte[] buffTargetPos)
	{
	}

	[Token(Token = "0x600124F")]
	[Address(RVA = "0x174C69C", Offset = "0x174C69C", VA = "0x174C69C")]
	[PunRPC]
	private void RPC_DropTorpedo(bool wasCorrect)
	{
	}

	[Token(Token = "0x6001250")]
	[Address(RVA = "0x174C744", Offset = "0x174C744", VA = "0x174C744")]
	[PunRPC]
	private void RPC_FireFlare(Vector3 position, Vector3 forward, Vector3 velocity, float speed)
	{
	}

	[Token(Token = "0x6001251")]
	[Address(RVA = "0x174C764", Offset = "0x174C764", VA = "0x174C764")]
	[PunRPC]
	private void RPC_ThrowVRBomb(Vector3 position, Vector3 forward, Vector3 velocity, bool haveTarget, Vector3 targetPos)
	{
	}

	[Token(Token = "0x6001252")]
	[Address(RVA = "0x174C790", Offset = "0x174C790", VA = "0x174C790")]
	[PunRPC]
	private void RPC_Respawn(Vector3 prevPos, Quaternion prevRot, float prevSpeed, float prevRollSpeed, int prevTurnSpeed, Vector3 respawnPos, float respawnHeading, bool hitKill, bool selectingNextRespawnPlane)
	{
	}

	[Token(Token = "0x6001253")]
	[Address(RVA = "0x174C7C8", Offset = "0x174C7C8", VA = "0x174C7C8")]
	[PunRPC]
	private void RPC_SelectedAsRespawn()
	{
	}

	[Token(Token = "0x6001254")]
	[Address(RVA = "0x174C8FC", Offset = "0x174C8FC", VA = "0x174C8FC")]
	[PunRPC]
	private void RPC_UpdateExtraChallange(bool b)
	{
	}

	[Token(Token = "0x6001255")]
	[Address(RVA = "0x174C91C", Offset = "0x174C91C", VA = "0x174C91C")]
	public PlaneBody()
	{
	}
}
[Token(Token = "0x20002B6")]
public struct NPCFlightData
{
	[Token(Token = "0x40013E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 position;

	[Token(Token = "0x40013E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Quaternion rotation;

	[Token(Token = "0x40013E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float turnSpeed;

	[Token(Token = "0x40013E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float rollSpeed;

	[Token(Token = "0x40013E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float throttle;

	[Token(Token = "0x40013E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float acceleration;

	[Token(Token = "0x40013EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float speed;

	[Token(Token = "0x40013EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maxSpeed;

	[Token(Token = "0x40013EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float pitch;

	[Token(Token = "0x40013ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float heading;

	[Token(Token = "0x40013EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float roll;

	[Token(Token = "0x40013EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector2 joystick;
}
[Token(Token = "0x20002B7")]
public struct NPCFlightSync
{
	[Token(Token = "0x40013F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 position;

	[Token(Token = "0x40013F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Quaternion headingQuat;

	[Token(Token = "0x40013F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Quaternion rollQuat;

	[Token(Token = "0x40013F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float speed;

	[Token(Token = "0x40013F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float currentRollSpeed;

	[Token(Token = "0x40013F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float pitch;

	[Token(Token = "0x40013F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float heading;

	[Token(Token = "0x40013F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float roll;
}
[Token(Token = "0x20002B8")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x9181FC", Offset = "0x9181FC")]
public class PlaneBodyManager : MonoBehaviour
{
	[Token(Token = "0x40013F8")]
	private const int kBufferSize = 128;

	[Token(Token = "0x40013F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PlaneBodyManager instance;

	[Token(Token = "0x40013FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly List<PlaneBody> planes;

	[Token(Token = "0x40013FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private JobHandle handleNPCFlight;

	[Token(Token = "0x40013FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private PlaneBody[] cacheJobPlanes;

	[Token(Token = "0x40013FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private NativeArray<NPCFlightData> flightData;

	[Token(Token = "0x40013FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NativeArray<NPCFlightSync> syncResult;

	[Token(Token = "0x40013FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int dataFrameIndex;

	[Token(Token = "0x6001270")]
	[Address(RVA = "0x11C824C", Offset = "0x11C824C", VA = "0x11C824C")]
	private static void Init()
	{
	}

	[Token(Token = "0x6001271")]
	[Address(RVA = "0x11C8300", Offset = "0x11C8300", VA = "0x11C8300")]
	public static void Register(PlaneBody plane)
	{
	}

	[Token(Token = "0x6001272")]
	[Address(RVA = "0x11C83D4", Offset = "0x11C83D4", VA = "0x11C83D4")]
	public static void Unregister(PlaneBody plane)
	{
	}

	[Token(Token = "0x6001273")]
	[Address(RVA = "0x11C8450", Offset = "0x11C8450", VA = "0x11C8450")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001274")]
	[Address(RVA = "0x11C8518", Offset = "0x11C8518", VA = "0x11C8518")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001275")]
	[Address(RVA = "0x11C85E0", Offset = "0x11C85E0", VA = "0x11C85E0")]
	private void Update()
	{
	}

	[Token(Token = "0x6001276")]
	[Address(RVA = "0x11C8B08", Offset = "0x11C8B08", VA = "0x11C8B08")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001277")]
	[Address(RVA = "0x11C8C48", Offset = "0x11C8C48", VA = "0x11C8C48")]
	private void SyncPlanes()
	{
	}

	[Token(Token = "0x6001278")]
	[Address(RVA = "0x11C8D0C", Offset = "0x11C8D0C", VA = "0x11C8D0C")]
	public PlaneBodyManager()
	{
	}
}
[Token(Token = "0x20002B9")]
[BurstCompile]
public struct NPCFlightJob : IJobParallelFor
{
	[Token(Token = "0x4001400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[NativeDisableContainerSafetyRestriction]
	[NativeDisableParallelForRestriction]
	[ReadOnly]
	public NativeArray<NPCFlightData> data;

	[Token(Token = "0x4001401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[NativeDisableParallelForRestriction]
	[NativeDisableContainerSafetyRestriction]
	[WriteOnly]
	public NativeArray<NPCFlightSync> result;

	[Token(Token = "0x4001402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float deltaTime;

	[Token(Token = "0x4001403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private NPCFlightData current;

	[Token(Token = "0x4001404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private NPCFlightSync sync;

	[Token(Token = "0x4001405")]
	private const float maxH = 1000f;

	[Token(Token = "0x4001406")]
	private const float minSpeed = 44f;

	[Token(Token = "0x4001407")]
	private const float arcadeTurnSpeed = 0.020000001f;

	[Token(Token = "0x6001279")]
	[Address(RVA = "0xCAFD48", Offset = "0xCAFD48", VA = "0xCAFD48", Slot = "4")]
	public void Execute(int index)
	{
	}

	[Token(Token = "0x600127A")]
	[Address(RVA = "0xCAFEE4", Offset = "0xCAFEE4", VA = "0xCAFEE4")]
	private void RotateNPC(float speedPercent)
	{
	}

	[MethodImpl(256)]
	[Token(Token = "0x600127B")]
	[Address(RVA = "0xCAFFC4", Offset = "0xCAFFC4", VA = "0xCAFFC4")]
	public static void UpdateRotFromPitchHeadingRoll(float pitch, float heading, float roll, out Quaternion headingQuat, out Quaternion rollQuat)
	{
	}
}
[Token(Token = "0x20002BA")]
public class PlaneCamera : MonoBehaviour
{
	[Token(Token = "0x4001408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4001409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float rotateSpeed;

	[Token(Token = "0x400140A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float dump;

	[Token(Token = "0x400140B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float zoom;

	[Token(Token = "0x400140C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float vOffset;

	[Token(Token = "0x400140D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Transform t;

	[Token(Token = "0x400140E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static PlaneCamera instance;

	[Token(Token = "0x400140F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static float currentFOV;

	[Token(Token = "0x4001410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float fov;

	[Token(Token = "0x4001411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 offset;

	[Token(Token = "0x4001412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 newOffset;

	[Token(Token = "0x4001413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static int shake;

	[Token(Token = "0x4001414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static Vector3 lastHeadOffset;

	[Token(Token = "0x4001415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float speedMul;

	[Token(Token = "0x4001416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float zoomoutBumKamikazeTime;

	[Token(Token = "0x4001417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform pivotC;

	[Token(Token = "0x4001418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 lastPos;

	[Token(Token = "0x4001419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 lastOffset;

	[Token(Token = "0x400141A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int[] shakeT;

	[Token(Token = "0x600127C")]
	[Address(RVA = "0x11C8DAC", Offset = "0x11C8DAC", VA = "0x11C8DAC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600127D")]
	[Address(RVA = "0x11C8E14", Offset = "0x11C8E14", VA = "0x11C8E14")]
	public void Start()
	{
	}

	[Token(Token = "0x600127E")]
	[Address(RVA = "0x11C92E0", Offset = "0x11C92E0", VA = "0x11C92E0")]
	public static void Shake(int i)
	{
	}

	[Token(Token = "0x600127F")]
	[Address(RVA = "0x11C9378", Offset = "0x11C9378", VA = "0x11C9378")]
	public static void Eject(PlaneBody p, bool moveOut, bool selectingNextRespawnPlane = false)
	{
	}

	[Token(Token = "0x6001280")]
	[Address(RVA = "0x11C9A4C", Offset = "0x11C9A4C", VA = "0x11C9A4C")]
	public static void SetTarget(PlaneBody p)
	{
	}

	[Token(Token = "0x6001281")]
	[Address(RVA = "0x11C9DB8", Offset = "0x11C9DB8", VA = "0x11C9DB8")]
	public static void SetTarget(VRCockpit cockpit)
	{
	}

	[Token(Token = "0x6001282")]
	[Address(RVA = "0x11C9C60", Offset = "0x11C9C60", VA = "0x11C9C60")]
	public static void SetTarget(Transform target, float zoom)
	{
	}

	[Token(Token = "0x6001283")]
	[Address(RVA = "0x11CA2C4", Offset = "0x11CA2C4", VA = "0x11CA2C4")]
	private void InitPivotEditor()
	{
	}

	[Token(Token = "0x6001284")]
	[Address(RVA = "0x11CA1CC", Offset = "0x11CA1CC", VA = "0x11CA1CC")]
	private static void SetTargetEditor(Transform target, float zoom)
	{
	}

	[Token(Token = "0x6001285")]
	[Address(RVA = "0x11CA630", Offset = "0x11CA630", VA = "0x11CA630")]
	public static bool IsPlayer(Transform target)
	{
		return default(bool);
	}

	[Token(Token = "0x6001286")]
	[Address(RVA = "0x11CA74C", Offset = "0x11CA74C", VA = "0x11CA74C")]
	public static void LookForward()
	{
	}

	[Token(Token = "0x6001287")]
	[Address(RVA = "0x11C8F7C", Offset = "0x11C8F7C", VA = "0x11C8F7C")]
	public void InitPivot()
	{
	}

	[Token(Token = "0x6001288")]
	[Address(RVA = "0x11CA7B8", Offset = "0x11CA7B8", VA = "0x11CA7B8")]
	public static void SetBomb(bool b)
	{
	}

	[Token(Token = "0x6001289")]
	[Address(RVA = "0x11CA838", Offset = "0x11CA838", VA = "0x11CA838")]
	public void LateUpdate()
	{
	}

	[Token(Token = "0x600128A")]
	[Address(RVA = "0x11CAF40", Offset = "0x11CAF40", VA = "0x11CAF40")]
	public float ClampAngle(float a)
	{
		return default(float);
	}

	[Token(Token = "0x600128B")]
	[Address(RVA = "0x11CAF60", Offset = "0x11CAF60", VA = "0x11CAF60")]
	public PlaneCamera()
	{
	}
}
[Serializable]
[Token(Token = "0x20002BB")]
public class Decal
{
	[Token(Token = "0x400141B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x600128D")]
	[Address(RVA = "0x102D700", Offset = "0x102D700", VA = "0x102D700")]
	public void CopyFrom(Decal d)
	{
	}

	[Token(Token = "0x600128E")]
	[Address(RVA = "0x102D71C", Offset = "0x102D71C", VA = "0x102D71C")]
	public Decal()
	{
	}
}
[Serializable]
[Token(Token = "0x20002BC")]
public class PlaneColorSetup
{
	[Token(Token = "0x400141C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int texSize;

	[Token(Token = "0x400141D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int texAid;

	[Token(Token = "0x400141E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int texBid;

	[Token(Token = "0x400141F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Decal[] decals;

	[Token(Token = "0x4001420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color[] colors;

	[Token(Token = "0x600128F")]
	[Address(RVA = "0x11CB074", Offset = "0x11CB074", VA = "0x11CB074")]
	public void CopyFrom(PlaneColorSetup s)
	{
	}

	[Token(Token = "0x6001290")]
	[Address(RVA = "0x11CB35C", Offset = "0x11CB35C", VA = "0x11CB35C")]
	public string GetSaveString()
	{
		return null;
	}

	[Token(Token = "0x6001291")]
	[Address(RVA = "0x11CBBE0", Offset = "0x11CBBE0", VA = "0x11CBBE0")]
	public void LoadFromString(string s)
	{
	}

	[Token(Token = "0x6001292")]
	[Address(RVA = "0x11CC038", Offset = "0x11CC038", VA = "0x11CC038")]
	public string GetHex(int decim)
	{
		return null;
	}

	[Token(Token = "0x6001293")]
	[Address(RVA = "0x11CC0D0", Offset = "0x11CC0D0", VA = "0x11CC0D0")]
	public int HexToInt(char hexChar)
	{
		return default(int);
	}

	[Token(Token = "0x6001294")]
	[Address(RVA = "0x11CB570", Offset = "0x11CB570", VA = "0x11CB570")]
	private string RGBA2Hex(Color color)
	{
		return null;
	}

	[Token(Token = "0x6001295")]
	[Address(RVA = "0x11CBEC4", Offset = "0x11CBEC4", VA = "0x11CBEC4")]
	private Color Hex2RGBA(string color)
	{
		return default(Color);
	}

	[Token(Token = "0x6001296")]
	[Address(RVA = "0x11CC560", Offset = "0x11CC560", VA = "0x11CC560")]
	public PlaneColorSetup()
	{
	}
}
[Token(Token = "0x20002BD")]
public class PlaneColorSetupGO : MonoBehaviour
{
	[Token(Token = "0x4001421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlaneColorSetup cSetup;

	[Token(Token = "0x6001297")]
	[Address(RVA = "0x11CC568", Offset = "0x11CC568", VA = "0x11CC568")]
	public PlaneColorSetupGO()
	{
	}
}
[Token(Token = "0x20002BE")]
public class PlaneDestroyed : MonoBehaviour
{
	[Token(Token = "0x20002BF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x918220", Offset = "0x918220")]
	private sealed class <DelayedExplosion>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400142C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400142D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400142E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int count;

		[Token(Token = "0x400142F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PlaneDestroyed <>4__this;

		[Token(Token = "0x170000FD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012A4")]
			[Address(RVA = "0xD88A44", Offset = "0xD88A44", VA = "0xD88A44", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012A6")]
			[Address(RVA = "0xD88A8C", Offset = "0xD88A8C", VA = "0xD88A8C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012A1")]
		[Address(RVA = "0xD88834", Offset = "0xD88834", VA = "0xD88834")]
		[DebuggerHidden]
		public <DelayedExplosion>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x60012A2")]
		[Address(RVA = "0xD88860", Offset = "0xD88860", VA = "0xD88860", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012A3")]
		[Address(RVA = "0xD88864", Offset = "0xD88864", VA = "0xD88864", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012A5")]
		[Address(RVA = "0xD88A4C", Offset = "0xD88A4C", VA = "0xD88A4C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform excludeChild;

	[Token(Token = "0x4001423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public eFX explGround;

	[Token(Token = "0x4001424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float speed;

	[Token(Token = "0x4001425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float pitch;

	[Token(Token = "0x4001426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float heading;

	[Token(Token = "0x4001427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float roll;

	[Token(Token = "0x4001428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private PlaneSmoke smoke;

	[Token(Token = "0x4001429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<Transform> childs;

	[Token(Token = "0x400142A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float currentRollSpeed;

	[Token(Token = "0x400142B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float turnSpeed;

	[Token(Token = "0x6001298")]
	[Address(RVA = "0x11CC570", Offset = "0x11CC570", VA = "0x11CC570")]
	public static void SetupWreck(PlaneBody plane, PlaneSmoke smoke, bool respawn, Vector3 pos, Quaternion rot, float rollSp, float turnSp)
	{
	}

	[Token(Token = "0x6001299")]
	[Address(RVA = "0x11CCD40", Offset = "0x11CCD40", VA = "0x11CCD40")]
	private void Setup(PlaneBody plane, PlaneSmoke _smoke, bool respawn, Vector3 pos, Quaternion rot, float rollSp, float turnSp, bool respawnedClone = false)
	{
	}

	[Token(Token = "0x600129A")]
	[Address(RVA = "0x11CDB08", Offset = "0x11CDB08", VA = "0x11CDB08")]
	private void DetachPart()
	{
	}

	[Token(Token = "0x600129B")]
	[Address(RVA = "0x11CD9C8", Offset = "0x11CD9C8", VA = "0x11CD9C8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x929544", Offset = "0x929544")]
	public IEnumerator DelayedExplosion(int count)
	{
		return null;
	}

	[Token(Token = "0x600129C")]
	[Address(RVA = "0x11CDA44", Offset = "0x11CDA44", VA = "0x11CDA44")]
	private void Explosion()
	{
	}

	[Token(Token = "0x600129D")]
	[Address(RVA = "0x11CE064", Offset = "0x11CE064", VA = "0x11CE064")]
	public void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600129E")]
	[Address(RVA = "0x11CE0DC", Offset = "0x11CE0DC", VA = "0x11CE0DC")]
	public void Bum()
	{
	}

	[Token(Token = "0x600129F")]
	[Address(RVA = "0x11CE28C", Offset = "0x11CE28C", VA = "0x11CE28C")]
	public void Update()
	{
	}

	[Token(Token = "0x60012A0")]
	[Address(RVA = "0x11CE47C", Offset = "0x11CE47C", VA = "0x11CE47C")]
	public PlaneDestroyed()
	{
	}
}
[Token(Token = "0x20002C0")]
public class PlaneManager : MonoBehaviour
{
	[Token(Token = "0x4001430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PlaneBody[] planes;

	[Token(Token = "0x60012A7")]
	[Address(RVA = "0x11CE494", Offset = "0x11CE494", VA = "0x11CE494")]
	public static void Add(PlaneBody newP)
	{
	}

	[Token(Token = "0x60012A8")]
	[Address(RVA = "0x11CE600", Offset = "0x11CE600", VA = "0x11CE600")]
	public static PlaneBody GetPlaneInFront(PlaneBody myPlane, float range)
	{
		return null;
	}

	[Token(Token = "0x60012A9")]
	[Address(RVA = "0x11CE874", Offset = "0x11CE874", VA = "0x11CE874")]
	public static void MuteDoppler(bool mute)
	{
	}

	[Token(Token = "0x60012AA")]
	[Address(RVA = "0x11CE974", Offset = "0x11CE974", VA = "0x11CE974")]
	public PlaneManager()
	{
	}
}
[Token(Token = "0x20002C1")]
public class PlaneMass : MonoBehaviour
{
	[Token(Token = "0x4001431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly float pilotMass;

	[Token(Token = "0x4001432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly float kgPerGalon;

	[Token(Token = "0x4001433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly float pound2kg;

	[Token(Token = "0x60012AB")]
	[Address(RVA = "0x11CE97C", Offset = "0x11CE97C", VA = "0x11CE97C")]
	public static float MassKg(PlaneBody pb, float fuelPercent = 1f)
	{
		return default(float);
	}

	[Token(Token = "0x60012AC")]
	[Address(RVA = "0x11CEA2C", Offset = "0x11CEA2C", VA = "0x11CEA2C")]
	private static float AmmoMass(PlaneBody pb)
	{
		return default(float);
	}

	[Token(Token = "0x60012AD")]
	[Address(RVA = "0x11CEC1C", Offset = "0x11CEC1C", VA = "0x11CEC1C")]
	private static float MissileMass(eMissile m)
	{
		return default(float);
	}

	[Token(Token = "0x60012AE")]
	[Address(RVA = "0x11CECEC", Offset = "0x11CECEC", VA = "0x11CECEC")]
	public PlaneMass()
	{
	}
}
[Token(Token = "0x20002C2")]
public class PlaneMenuLoadout : MonoBehaviour
{
	[Token(Token = "0x4001434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Renderer icon;

	[Token(Token = "0x4001435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Material materialRocket;

	[Token(Token = "0x4001436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Material materialBombSmall;

	[Token(Token = "0x4001437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Material materialBombBig;

	[Token(Token = "0x4001438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Material materialTorpedo;

	[Token(Token = "0x4001439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private TextMesh tmMass;

	[Token(Token = "0x400143A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameObject plane;

	[Token(Token = "0x400143B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private BombBay bb;

	[Token(Token = "0x60012B0")]
	[Address(RVA = "0x11CED6C", Offset = "0x11CED6C", VA = "0x11CED6C")]
	private void Start()
	{
	}

	[Token(Token = "0x60012B1")]
	[Address(RVA = "0x11CED70", Offset = "0x11CED70", VA = "0x11CED70")]
	private void Update()
	{
	}

	[Token(Token = "0x60012B2")]
	[Address(RVA = "0x11CF124", Offset = "0x11CF124", VA = "0x11CF124")]
	private void Click()
	{
	}

	[Token(Token = "0x60012B3")]
	[Address(RVA = "0x11CF298", Offset = "0x11CF298", VA = "0x11CF298")]
	public static void Refresh()
	{
	}

	[Token(Token = "0x60012B4")]
	[Address(RVA = "0x11CEEC8", Offset = "0x11CEEC8", VA = "0x11CEEC8")]
	private void UpdateIcon()
	{
	}

	[Token(Token = "0x60012B5")]
	[Address(RVA = "0x11CF2E4", Offset = "0x11CF2E4", VA = "0x11CF2E4")]
	public PlaneMenuLoadout()
	{
	}
}
[Token(Token = "0x20002C3")]
public class PlaneName : MonoBehaviour
{
	[Token(Token = "0x400143C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject plane;

	[Token(Token = "0x60012B6")]
	[Address(RVA = "0x11CF2EC", Offset = "0x11CF2EC", VA = "0x11CF2EC")]
	private void Update()
	{
	}

	[Token(Token = "0x60012B7")]
	[Address(RVA = "0x11CF448", Offset = "0x11CF448", VA = "0x11CF448")]
	public PlaneName()
	{
	}
}
[Token(Token = "0x20002C4")]
public class PlaneParams : MonoBehaviour
{
	[Token(Token = "0x400143D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshRenderer icon;

	[Token(Token = "0x400143E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] currentSelection;

	[Token(Token = "0x400143F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameObject plane;

	[Token(Token = "0x60012B8")]
	[Address(RVA = "0x11CF450", Offset = "0x11CF450", VA = "0x11CF450")]
	private void Update()
	{
	}

	[Token(Token = "0x60012B9")]
	[Address(RVA = "0x11CF24C", Offset = "0x11CF24C", VA = "0x11CF24C")]
	public static void Refresh()
	{
	}

	[Token(Token = "0x60012BA")]
	[Address(RVA = "0x11CF9A4", Offset = "0x11CF9A4", VA = "0x11CF9A4")]
	public PlaneParams()
	{
	}
}
[Token(Token = "0x20002C5")]
public class PlanePart : MonoBehaviour
{
	[Token(Token = "0x4001440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public eFX explGround;

	[Token(Token = "0x4001441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 speedV;

	[Token(Token = "0x4001442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 rotateV;

	[Token(Token = "0x4001443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float rotateMul;

	[Token(Token = "0x60012BB")]
	[Address(RVA = "0x11CDEC4", Offset = "0x11CDEC4", VA = "0x11CDEC4")]
	public void Setup(Vector3 sV)
	{
	}

	[Token(Token = "0x60012BC")]
	[Address(RVA = "0x11CF9AC", Offset = "0x11CF9AC", VA = "0x11CF9AC")]
	public void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60012BD")]
	[Address(RVA = "0x11CFA24", Offset = "0x11CFA24", VA = "0x11CFA24")]
	public void Bum()
	{
	}

	[Token(Token = "0x60012BE")]
	[Address(RVA = "0x11CFB14", Offset = "0x11CFB14", VA = "0x11CFB14")]
	public void Update()
	{
	}

	[Token(Token = "0x60012BF")]
	[Address(RVA = "0x11CFCC8", Offset = "0x11CFCC8", VA = "0x11CFCC8")]
	public PlanePart()
	{
	}
}
[Token(Token = "0x20002C6")]
public class PlanePilot : MonoBehaviour
{
	[Token(Token = "0x60012C0")]
	[Address(RVA = "0x11D1580", Offset = "0x11D1580", VA = "0x11D1580")]
	public PlanePilot()
	{
	}
}
[Token(Token = "0x20002C7")]
public class PlaneShadow : MonoBehaviour
{
	[Token(Token = "0x4001444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float scaleX;

	[Token(Token = "0x4001445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Renderer r;

	[Token(Token = "0x4001446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PlaneBody lastPlane;

	[Token(Token = "0x60012C1")]
	[Address(RVA = "0x11D1588", Offset = "0x11D1588", VA = "0x11D1588")]
	public void Awake()
	{
	}

	[Token(Token = "0x60012C2")]
	[Address(RVA = "0x11D15DC", Offset = "0x11D15DC", VA = "0x11D15DC")]
	public void Start()
	{
	}

	[Token(Token = "0x60012C3")]
	[Address(RVA = "0x11D1664", Offset = "0x11D1664", VA = "0x11D1664")]
	public void LateUpdate()
	{
	}

	[Token(Token = "0x60012C4")]
	[Address(RVA = "0x11D1AF0", Offset = "0x11D1AF0", VA = "0x11D1AF0")]
	public PlaneShadow()
	{
	}
}
[Token(Token = "0x20002C8")]
public class PlaneShadowHangar : MonoBehaviour
{
	[Token(Token = "0x4001447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject plane;

	[Token(Token = "0x4001448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Renderer r;

	[Token(Token = "0x4001449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float posY;

	[Token(Token = "0x60012C5")]
	[Address(RVA = "0x11D1B00", Offset = "0x11D1B00", VA = "0x11D1B00")]
	public void Awake()
	{
	}

	[Token(Token = "0x60012C6")]
	[Address(RVA = "0x11D1B74", Offset = "0x11D1B74", VA = "0x11D1B74")]
	public void Update()
	{
	}

	[Token(Token = "0x60012C7")]
	[Address(RVA = "0x11D1DC4", Offset = "0x11D1DC4", VA = "0x11D1DC4")]
	public PlaneShadowHangar()
	{
	}
}
[Token(Token = "0x20002C9")]
public class PlaneSmoke : MonoBehaviour
{
	[Token(Token = "0x20002CA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x918230", Offset = "0x918230")]
	private sealed class <Detatch>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlaneSmoke <>4__this;

		[Token(Token = "0x170000FF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012D3")]
			[Address(RVA = "0xD893FC", Offset = "0xD893FC", VA = "0xD893FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000100")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012D5")]
			[Address(RVA = "0xD89444", Offset = "0xD89444", VA = "0xD89444", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012D0")]
		[Address(RVA = "0xD89180", Offset = "0xD89180", VA = "0xD89180")]
		[DebuggerHidden]
		public <Detatch>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x60012D1")]
		[Address(RVA = "0xD891AC", Offset = "0xD891AC", VA = "0xD891AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012D2")]
		[Address(RVA = "0xD891B0", Offset = "0xD891B0", VA = "0xD891B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012D4")]
		[Address(RVA = "0xD89404", Offset = "0xD89404", VA = "0xD89404", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400144A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool bomber;

	[Token(Token = "0x400144B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool ready;

	[Token(Token = "0x400144C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private PlaneBody plane;

	[Token(Token = "0x400144D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private FX_Effect fx1;

	[Token(Token = "0x400144E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private FX_Effect fx2;

	[Token(Token = "0x400144F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool dontAttachToPlane;

	[Token(Token = "0x60012C8")]
	[Address(RVA = "0x11D2040", Offset = "0x11D2040", VA = "0x11D2040")]
	public void Awake()
	{
	}

	[Token(Token = "0x60012C9")]
	[Address(RVA = "0x11D21A4", Offset = "0x11D21A4", VA = "0x11D21A4")]
	public void SetDontAttachToPlane()
	{
	}

	[Token(Token = "0x60012CA")]
	[Address(RVA = "0x11D21B0", Offset = "0x11D21B0", VA = "0x11D21B0")]
	public void Smoke1()
	{
	}

	[Token(Token = "0x60012CB")]
	[Address(RVA = "0x11D238C", Offset = "0x11D238C", VA = "0x11D238C")]
	public void Smoke2()
	{
	}

	[Token(Token = "0x60012CC")]
	[Address(RVA = "0x11CD8AC", Offset = "0x11CD8AC", VA = "0x11CD8AC")]
	public void Attach(Transform t)
	{
	}

	[Token(Token = "0x60012CD")]
	[Address(RVA = "0x11CE220", Offset = "0x11CE220", VA = "0x11CE220")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9295F4", Offset = "0x9295F4")]
	public IEnumerator Detatch()
	{
		return null;
	}

	[Token(Token = "0x60012CE")]
	[Address(RVA = "0x11D2560", Offset = "0x11D2560", VA = "0x11D2560")]
	public void Clear()
	{
	}

	[Token(Token = "0x60012CF")]
	[Address(RVA = "0x11D26E4", Offset = "0x11D26E4", VA = "0x11D26E4")]
	public PlaneSmoke()
	{
	}
}
[Token(Token = "0x20002CB")]
public class PlaneStand : MonoBehaviour
{
	[Token(Token = "0x4001453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float y;

	[Token(Token = "0x4001454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float angle;

	[Token(Token = "0x60012D6")]
	[Address(RVA = "0x11D26EC", Offset = "0x11D26EC", VA = "0x11D26EC")]
	public void Start()
	{
	}

	[Token(Token = "0x60012D7")]
	[Address(RVA = "0x11D29D0", Offset = "0x11D29D0", VA = "0x11D29D0")]
	public void UpdateData()
	{
	}

	[Token(Token = "0x60012D8")]
	[Address(RVA = "0x11D2A2C", Offset = "0x11D2A2C", VA = "0x11D2A2C")]
	public void RestorePosition()
	{
	}

	[Token(Token = "0x60012D9")]
	[Address(RVA = "0x11D2AE8", Offset = "0x11D2AE8", VA = "0x11D2AE8")]
	public void RestorePositionOnMission()
	{
	}

	[Token(Token = "0x60012DA")]
	[Address(RVA = "0x11D2BA8", Offset = "0x11D2BA8", VA = "0x11D2BA8")]
	public PlaneStand()
	{
	}
}
[Token(Token = "0x20002CC")]
public class PlaneSteering : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20002CD")]
	public class GameObjectArray
	{
		[Token(Token = "0x4001490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject[] arr;

		[Token(Token = "0x600132B")]
		[Address(RVA = "0xD8AC04", Offset = "0xD8AC04", VA = "0xD8AC04")]
		public GameObjectArray()
		{
		}
	}

	[Token(Token = "0x20002CE")]
	public enum eUI
	{
		[Token(Token = "0x4001492")]
		mobile,
		[Token(Token = "0x4001493")]
		PC
	}

	[Token(Token = "0x20002CF")]
	public delegate void PlaneChanged(PlaneBody pb);

	[Token(Token = "0x20002D0")]
	public enum DropTorpedoState
	{
		[Token(Token = "0x4001495")]
		None,
		[Token(Token = "0x4001496")]
		Height_OK,
		[Token(Token = "0x4001497")]
		Speed_OK,
		[Token(Token = "0x4001498")]
		Valid
	}

	[Token(Token = "0x20002D1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x918240", Offset = "0x918240")]
	private sealed class <Start>d__44 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400149A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400149B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlaneSteering <>4__this;

		[Token(Token = "0x17000102")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001333")]
			[Address(RVA = "0xD8ABB4", Offset = "0xD8ABB4", VA = "0xD8ABB4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000103")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001335")]
			[Address(RVA = "0xD8ABFC", Offset = "0xD8ABFC", VA = "0xD8ABFC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001330")]
		[Address(RVA = "0xD8A7F4", Offset = "0xD8A7F4", VA = "0xD8A7F4")]
		[DebuggerHidden]
		public <Start>d__44(int <>1__state)
		{
		}

		[Token(Token = "0x6001331")]
		[Address(RVA = "0xD8A820", Offset = "0xD8A820", VA = "0xD8A820", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001332")]
		[Address(RVA = "0xD8A824", Offset = "0xD8A824", VA = "0xD8A824", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001334")]
		[Address(RVA = "0xD8ABBC", Offset = "0xD8ABBC", VA = "0xD8ABBC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002D2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x918250", Offset = "0x918250")]
	private sealed class <CheckDeadPlane>d__89 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400149C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400149D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400149E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlaneSteering <>4__this;

		[Token(Token = "0x17000104")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001339")]
			[Address(RVA = "0xD8A7A4", Offset = "0xD8A7A4", VA = "0xD8A7A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000105")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600133B")]
			[Address(RVA = "0xD8A7EC", Offset = "0xD8A7EC", VA = "0xD8A7EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001336")]
		[Address(RVA = "0xD8A1C0", Offset = "0xD8A1C0", VA = "0xD8A1C0")]
		[DebuggerHidden]
		public <CheckDeadPlane>d__89(int <>1__state)
		{
		}

		[Token(Token = "0x6001337")]
		[Address(RVA = "0xD8A1EC", Offset = "0xD8A1EC", VA = "0xD8A1EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001338")]
		[Address(RVA = "0xD8A1F0", Offset = "0xD8A1F0", VA = "0xD8A1F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600133A")]
		[Address(RVA = "0xD8A7AC", Offset = "0xD8A7AC", VA = "0xD8A7AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002D3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x918260", Offset = "0x918260")]
	private sealed class <ChangePlaneAfterFade>d__122 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400149F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40014A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40014A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlaneBody p;

		[Token(Token = "0x40014A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool switchToObserver;

		[Token(Token = "0x40014A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool multi;

		[Token(Token = "0x40014A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PlaneSteering <>4__this;

		[Token(Token = "0x40014A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool <holdingY>5__2;

		[Token(Token = "0x40014A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private HandType <handY>5__3;

		[Token(Token = "0x40014A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool <holdingT>5__4;

		[Token(Token = "0x40014A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private HandType <handT>5__5;

		[Token(Token = "0x17000106")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600133F")]
			[Address(RVA = "0xD8A170", Offset = "0xD8A170", VA = "0xD8A170", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000107")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001341")]
			[Address(RVA = "0xD8A1B8", Offset = "0xD8A1B8", VA = "0xD8A1B8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600133C")]
		[Address(RVA = "0xD8944C", Offset = "0xD8944C", VA = "0xD8944C")]
		[DebuggerHidden]
		public <ChangePlaneAfterFade>d__122(int <>1__state)
		{
		}

		[Token(Token = "0x600133D")]
		[Address(RVA = "0xD89478", Offset = "0xD89478", VA = "0xD89478", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600133E")]
		[Address(RVA = "0xD8947C", Offset = "0xD8947C", VA = "0xD8947C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001340")]
		[Address(RVA = "0xD8A178", Offset = "0xD8A178", VA = "0xD8A178", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public WindowSettings settingsWnd;

	[Token(Token = "0x4001456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private PlaneBody plane;

	[Token(Token = "0x4001457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private CannonAI currentBackCannon;

	[Token(Token = "0x4001458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int multiplayerGunnerAtPlayerId;

	[Token(Token = "0x4001459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int multiplayerGunnerIdx;

	[Token(Token = "0x400145A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool multiplayerGunnerWaitingNewPlane;

	[Token(Token = "0x400145B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float freezeFadeLimit;

	[Token(Token = "0x400145C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool observerMode;

	[Token(Token = "0x400145D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool multiplayerObserverWaitingNewPlane;

	[Token(Token = "0x400145E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float selectingRespawnPlaneDelay;

	[Token(Token = "0x400145F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected eUI uiMode;

	[Token(Token = "0x4001460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Hull hull;

	[Token(Token = "0x4001461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Cannon20mm cannon20mm;

	[Token(Token = "0x4001462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static BombBay bombBay;

	[Token(Token = "0x4001463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static TorpedoBay torpedoBay;

	[Token(Token = "0x4001464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static RocketBay rocketBay;

	[Token(Token = "0x4001465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static bool lightArmament;

	[Token(Token = "0x4001466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private static bool armamentChangeLock;

	[Token(Token = "0x4001467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float armamentSwitchTime;

	[Token(Token = "0x4001468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float startTime;

	[Token(Token = "0x4001469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float startTimeUnscaled;

	[Token(Token = "0x400146A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float lastSetPlaneTime;

	[Token(Token = "0x400146B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float lastDamageTimeByLandingGear;

	[Token(Token = "0x400146C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 lastDamagePosByLandingGear;

	[Token(Token = "0x400146D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static PlaneSteering instance;

	[Token(Token = "0x400146E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Transform cameraRig;

	[Token(Token = "0x400146F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool uiWindowIsOpen;

	[Token(Token = "0x4001470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	protected bool showingMultiWaitingForPlayersMsg;

	[Token(Token = "0x4001471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private ISteer activeSteer;

	[Token(Token = "0x4001472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float lastTimeScale;

	[Token(Token = "0x4001473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float testThrottlePos;

	[Token(Token = "0x4001474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int unmuteDopplerCnt;

	[Token(Token = "0x4001475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private bool stall;

	[Token(Token = "0x4001476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static PlaneChanged planeChanged;

	[Token(Token = "0x4001477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static PlaneChanged beforePlaneChanged;

	[Token(Token = "0x4001478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static PlaneChanged planeSpawned;

	[Token(Token = "0x4001479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private int aimMode;

	[Token(Token = "0x400147A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private int canFindAim;

	[Token(Token = "0x400147B")]
	public const float aimPosYnull = -100f;

	[Token(Token = "0x400147C")]
	public const float aimPosYmin = -10f;

	[Token(Token = "0x400147D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static Vector3 aimPos;

	[Token(Token = "0x400147E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private static Vector3 aimTargetPos;

	[Token(Token = "0x400147F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static Hull aimTarget;

	[Token(Token = "0x4001480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static Vector3 lastAimTargetPos;

	[Token(Token = "0x4001481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private PlaneBody aimTargetPlane;

	[Token(Token = "0x4001482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float aimMul;

	[Token(Token = "0x4001483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Hull lastAimTarget;

	[Token(Token = "0x4001484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float aimTargetOffsetY;

	[Token(Token = "0x4001485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float aimRudder;

	[Token(Token = "0x4001486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Vector2 aimJoystick;

	[Token(Token = "0x4001487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Vector2 joystick;

	[Token(Token = "0x4001488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public static bool hideRadar;

	[Token(Token = "0x4001489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public float gunTime;

	[Token(Token = "0x400148A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private int jMul;

	[Token(Token = "0x400148B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static DropTorpedoState torpedoState;

	[Token(Token = "0x400148C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static Action torpedoStateChanged;

	[Token(Token = "0x400148D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool cursorVisible;

	[Token(Token = "0x400148E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static PlaneBody[] planes;

	[Token(Token = "0x400148F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static bool waitPlaneSwitch;

	[Token(Token = "0x17000101")]
	public static ISteer Steer
	{
		[Token(Token = "0x60012DB")]
		[Address(RVA = "0x11D2BBC", Offset = "0x11D2BBC", VA = "0x11D2BBC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60012DC")]
	[Address(RVA = "0x11D2C9C", Offset = "0x11D2C9C", VA = "0x11D2C9C")]
	public void Awake()
	{
	}

	[Token(Token = "0x60012DD")]
	[Address(RVA = "0x11D2DE8", Offset = "0x11D2DE8", VA = "0x11D2DE8")]
	private void PlaneSpawned(PlayerPlane pp, PlaneBody pb)
	{
	}

	[Token(Token = "0x60012DE")]
	[Address(RVA = "0x11D3A44", Offset = "0x11D3A44", VA = "0x11D3A44")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60012DF")]
	[Address(RVA = "0x11D3BE8", Offset = "0x11D3BE8", VA = "0x11D3BE8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9296A4", Offset = "0x9296A4")]
	public IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60012E0")]
	[Address(RVA = "0x11D3C54", Offset = "0x11D3C54", VA = "0x11D3C54")]
	public static void OnAllMultiPlayersJoined()
	{
	}

	[Token(Token = "0x60012E1")]
	[Address(RVA = "0x11D3DA4", Offset = "0x11D3DA4", VA = "0x11D3DA4")]
	public void OnTestModePause()
	{
	}

	[Token(Token = "0x60012E2")]
	[Address(RVA = "0x11D3E24", Offset = "0x11D3E24", VA = "0x11D3E24")]
	public static void SetSteeringSource(ISteer steer)
	{
	}

	[Token(Token = "0x60012E3")]
	[Address(RVA = "0x11C8A28", Offset = "0x11C8A28", VA = "0x11C8A28")]
	public static PlaneBody GetPlane()
	{
		return null;
	}

	[Token(Token = "0x60012E4")]
	[Address(RVA = "0x11C9964", Offset = "0x11C9964", VA = "0x11C9964")]
	public static bool IsObserverMode()
	{
		return default(bool);
	}

	[Token(Token = "0x60012E5")]
	[Address(RVA = "0x11D3E98", Offset = "0x11D3E98", VA = "0x11D3E98")]
	public static Hull GetHull()
	{
		return null;
	}

	[Token(Token = "0x60012E6")]
	[Address(RVA = "0x11D3F78", Offset = "0x11D3F78", VA = "0x11D3F78")]
	public static Vector3 Pos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60012E7")]
	[Address(RVA = "0x11D4060", Offset = "0x11D4060", VA = "0x11D4060")]
	public static void SetPlaneWithFade(PlaneBody p)
	{
	}

	[Token(Token = "0x60012E8")]
	[Address(RVA = "0x11D418C", Offset = "0x11D418C", VA = "0x11D418C")]
	public static void SetRespawnedPlane(PlaneBody p)
	{
	}

	[Token(Token = "0x60012E9")]
	[Address(RVA = "0x11D4318", Offset = "0x11D4318", VA = "0x11D4318")]
	public static PlaneBody FindNextObserverPlane(bool onlyOurTeam, out bool haveSelectingRespawnPlane)
	{
		return null;
	}

	[Token(Token = "0x60012EA")]
	[Address(RVA = "0x11D4C64", Offset = "0x11D4C64", VA = "0x11D4C64")]
	public void StartAsObserver()
	{
	}

	[Token(Token = "0x60012EB")]
	[Address(RVA = "0x11D4E74", Offset = "0x11D4E74", VA = "0x11D4E74")]
	public static bool SetNextObserverPlane()
	{
		return default(bool);
	}

	[Token(Token = "0x60012EC")]
	[Address(RVA = "0x11D533C", Offset = "0x11D533C", VA = "0x11D533C")]
	private void UpdateObserverPlane()
	{
	}

	[Token(Token = "0x60012ED")]
	[Address(RVA = "0x11D3348", Offset = "0x11D3348", VA = "0x11D3348")]
	public static void SetPlane(PlaneBody p)
	{
	}

	[Token(Token = "0x60012EE")]
	[Address(RVA = "0x11D5C6C", Offset = "0x11D5C6C", VA = "0x11D5C6C")]
	public static void MuteDopper()
	{
	}

	[Token(Token = "0x60012EF")]
	[Address(RVA = "0x11D5DB8", Offset = "0x11D5DB8", VA = "0x11D5DB8")]
	public static void OnPlaneRespawning(PlaneBody p)
	{
	}

	[Token(Token = "0x60012F0")]
	[Address(RVA = "0x11D6168", Offset = "0x11D6168", VA = "0x11D6168")]
	public static void OnPlaneRespawned(PlaneBody p)
	{
	}

	[Token(Token = "0x60012F1")]
	[Address(RVA = "0x11D62A0", Offset = "0x11D62A0", VA = "0x11D62A0")]
	private void UnPause()
	{
	}

	[Token(Token = "0x60012F2")]
	[Address(RVA = "0x11D62A4", Offset = "0x11D62A4", VA = "0x11D62A4")]
	public static Vector3 GetAimTargetPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60012F3")]
	[Address(RVA = "0x11D630C", Offset = "0x11D630C", VA = "0x11D630C")]
	public static bool IsAiming()
	{
		return default(bool);
	}

	[Token(Token = "0x60012F4")]
	[Address(RVA = "0x11D63EC", Offset = "0x11D63EC", VA = "0x11D63EC")]
	protected Hull CalcAimTarget()
	{
		return null;
	}

	[Token(Token = "0x60012F5")]
	[Address(RVA = "0x11D64D0", Offset = "0x11D64D0", VA = "0x11D64D0")]
	private void FindAimTarget()
	{
	}

	[Token(Token = "0x60012F6")]
	[Address(RVA = "0x11D68F4", Offset = "0x11D68F4", VA = "0x11D68F4")]
	private void LoseAimTarget()
	{
	}

	[Token(Token = "0x60012F7")]
	[Address(RVA = "0x11D6978", Offset = "0x11D6978", VA = "0x11D6978")]
	public void Aim()
	{
	}

	[Token(Token = "0x60012F8")]
	[Address(RVA = "0x11D74A4", Offset = "0x11D74A4", VA = "0x11D74A4")]
	public static bool HasEnemyInAimAngle()
	{
		return default(bool);
	}

	[Token(Token = "0x60012F9")]
	[Address(RVA = "0x11D7510", Offset = "0x11D7510", VA = "0x11D7510")]
	public GameObject GetAimTarget()
	{
		return null;
	}

	[Token(Token = "0x60012FA")]
	[Address(RVA = "0x11D6164", Offset = "0x11D6164", VA = "0x11D6164")]
	public void ClearAimTarget()
	{
	}

	[Token(Token = "0x60012FB")]
	[Address(RVA = "0x11D75F8", Offset = "0x11D75F8", VA = "0x11D75F8")]
	public bool GetStall()
	{
		return default(bool);
	}

	[Token(Token = "0x60012FC")]
	[Address(RVA = "0x11D7600", Offset = "0x11D7600", VA = "0x11D7600")]
	private bool DetermineStall()
	{
		return default(bool);
	}

	[Token(Token = "0x60012FD")]
	[Address(RVA = "0x11D7784", Offset = "0x11D7784", VA = "0x11D7784")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x929704", Offset = "0x929704")]
	public IEnumerator CheckDeadPlane()
	{
		return null;
	}

	[Token(Token = "0x60012FE")]
	[Address(RVA = "0x11D77F0", Offset = "0x11D77F0", VA = "0x11D77F0")]
	public CannonAI GetCurrentBackCannon()
	{
		return null;
	}

	[Token(Token = "0x60012FF")]
	[Address(RVA = "0x11D77F8", Offset = "0x11D77F8", VA = "0x11D77F8")]
	public static bool IsAICannonControlledByPlayer(CannonAI cannon)
	{
		return default(bool);
	}

	[Token(Token = "0x6001300")]
	[Address(RVA = "0x11D7870", Offset = "0x11D7870", VA = "0x11D7870")]
	public static bool IsAICannonControlledByPlayer(CannonAI cannon, out bool byOtherGunner)
	{
		return default(bool);
	}

	[Token(Token = "0x6001301")]
	[Address(RVA = "0x11D7BC4", Offset = "0x11D7BC4", VA = "0x11D7BC4")]
	public static Cannon GetShootGunCannon()
	{
		return null;
	}

	[Token(Token = "0x6001302")]
	[Address(RVA = "0x11D7E78", Offset = "0x11D7E78", VA = "0x11D7E78")]
	public void ShootGun()
	{
	}

	[Token(Token = "0x6001303")]
	[Address(RVA = "0x11D83F8", Offset = "0x11D83F8", VA = "0x11D83F8")]
	private bool CanShootMG()
	{
		return default(bool);
	}

	[Token(Token = "0x6001304")]
	[Address(RVA = "0x11D85E4", Offset = "0x11D85E4", VA = "0x11D85E4")]
	public void Shoot20mm()
	{
	}

	[Token(Token = "0x6001305")]
	[Address(RVA = "0x11D88F0", Offset = "0x11D88F0", VA = "0x11D88F0")]
	public void DropTorpedo()
	{
	}

	[Token(Token = "0x6001306")]
	[Address(RVA = "0x11D8B6C", Offset = "0x11D8B6C", VA = "0x11D8B6C")]
	private void UpdateTorpedoes()
	{
	}

	[Token(Token = "0x6001307")]
	[Address(RVA = "0x11D8C28", Offset = "0x11D8C28", VA = "0x11D8C28")]
	public static DropTorpedoState GetTorpedoesState()
	{
		return default(DropTorpedoState);
	}

	[Token(Token = "0x6001308")]
	[Address(RVA = "0x11D8D50", Offset = "0x11D8D50", VA = "0x11D8D50")]
	public void LaunchRocket()
	{
	}

	[Token(Token = "0x6001309")]
	[Address(RVA = "0x11D8FD4", Offset = "0x11D8FD4", VA = "0x11D8FD4")]
	public void UpdateLockedMouse()
	{
	}

	[Token(Token = "0x600130A")]
	[Address(RVA = "0x11D9210", Offset = "0x11D9210", VA = "0x11D9210")]
	public void UpdateCursorVisible()
	{
	}

	[Token(Token = "0x600130B")]
	[Address(RVA = "0x11D944C", Offset = "0x11D944C", VA = "0x11D944C")]
	public static void LockArmamentSwitch(bool toggleLock)
	{
	}

	[Token(Token = "0x600130C")]
	[Address(RVA = "0x11D94B8", Offset = "0x11D94B8", VA = "0x11D94B8")]
	public static void DropBombOrTorpedo()
	{
	}

	[Token(Token = "0x600130D")]
	[Address(RVA = "0x11D9790", Offset = "0x11D9790", VA = "0x11D9790")]
	public void LateUpdate()
	{
	}

	[Token(Token = "0x600130E")]
	[Address(RVA = "0x11DB84C", Offset = "0x11DB84C", VA = "0x11DB84C")]
	public static bool Cannon20mmActive()
	{
		return default(bool);
	}

	[Token(Token = "0x600130F")]
	[Address(RVA = "0x11DAFD4", Offset = "0x11DAFD4", VA = "0x11DAFD4")]
	private void StepFlySteering()
	{
	}

	[Token(Token = "0x6001310")]
	[Address(RVA = "0x11DB8B8", Offset = "0x11DB8B8", VA = "0x11DB8B8")]
	public static PlaneBody[] GetPlanes()
	{
		return null;
	}

	[Token(Token = "0x6001311")]
	[Address(RVA = "0x11DB91C", Offset = "0x11DB91C", VA = "0x11DB91C")]
	public static void AddPlane(PlaneBody p)
	{
	}

	[Token(Token = "0x6001312")]
	[Address(RVA = "0x11DBC60", Offset = "0x11DBC60", VA = "0x11DBC60")]
	public static bool IsPlayer(Hull h)
	{
		return default(bool);
	}

	[Token(Token = "0x6001313")]
	[Address(RVA = "0x11D2FDC", Offset = "0x11D2FDC", VA = "0x11D2FDC")]
	private PlaneBody GetDefaultPlane()
	{
		return null;
	}

	[Token(Token = "0x6001314")]
	[Address(RVA = "0x11DBDF8", Offset = "0x11DBDF8", VA = "0x11DBDF8")]
	public static bool CanSwitchPlane()
	{
		return default(bool);
	}

	[Token(Token = "0x6001315")]
	[Address(RVA = "0x11D40F0", Offset = "0x11D40F0", VA = "0x11D40F0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x929764", Offset = "0x929764")]
	private IEnumerator ChangePlaneAfterFade(PlaneBody p, bool multi = false, bool switchToObserver = false)
	{
		return null;
	}

	[Token(Token = "0x6001316")]
	[Address(RVA = "0x11DAB20", Offset = "0x11DAB20", VA = "0x11DAB20")]
	public void NextPlane(bool checkDist)
	{
	}

	[Token(Token = "0x6001317")]
	[Address(RVA = "0x11DACB4", Offset = "0x11DACB4", VA = "0x11DACB4")]
	public void PrevPlane(bool checkDist)
	{
	}

	[Token(Token = "0x6001318")]
	[Address(RVA = "0x11DC480", Offset = "0x11DC480", VA = "0x11DC480")]
	private PlaneBody GetNextPlane()
	{
		return null;
	}

	[Token(Token = "0x6001319")]
	[Address(RVA = "0x11DBE64", Offset = "0x11DBE64", VA = "0x11DBE64")]
	private PlaneBody GetNextPlane(bool checkDist)
	{
		return null;
	}

	[Token(Token = "0x600131A")]
	[Address(RVA = "0x11DC488", Offset = "0x11DC488", VA = "0x11DC488")]
	private bool IsPlaneOK(PlaneBody pb, bool checkDist)
	{
		return default(bool);
	}

	[Token(Token = "0x600131B")]
	[Address(RVA = "0x11DC188", Offset = "0x11DC188", VA = "0x11DC188")]
	private PlaneBody GetPrevPlane(bool checkDist)
	{
		return null;
	}

	[Token(Token = "0x600131C")]
	[Address(RVA = "0x11DC540", Offset = "0x11DC540", VA = "0x11DC540")]
	public void SetMultiplayerGunnerAt(int gunnerAtPlayerId, int gunnerIdx)
	{
	}

	[Token(Token = "0x600131D")]
	[Address(RVA = "0x11D7494", Offset = "0x11D7494", VA = "0x11D7494")]
	public bool IsMultiplayerGunner()
	{
		return default(bool);
	}

	[Token(Token = "0x600131E")]
	[Address(RVA = "0x11DC644", Offset = "0x11DC644", VA = "0x11DC644")]
	public int GetMultiplayerGunnerAtPlayerId()
	{
		return default(int);
	}

	[Token(Token = "0x600131F")]
	[Address(RVA = "0x11DA7C8", Offset = "0x11DA7C8", VA = "0x11DA7C8")]
	private void UpdateMultiplayerGunnerPlane()
	{
	}

	[Token(Token = "0x6001320")]
	[Address(RVA = "0x11DC64C", Offset = "0x11DC64C", VA = "0x11DC64C")]
	public void MultiOnChangedPlayerProperties(bool removed = false)
	{
	}

	[Token(Token = "0x6001321")]
	[Address(RVA = "0x11DC7CC", Offset = "0x11DC7CC", VA = "0x11DC7CC")]
	public bool CanChangeSeats()
	{
		return default(bool);
	}

	[Token(Token = "0x6001322")]
	[Address(RVA = "0x11DAE7C", Offset = "0x11DAE7C", VA = "0x11DAE7C")]
	public void OnOpenSettings()
	{
	}

	[Token(Token = "0x6001323")]
	[Address(RVA = "0x11DAE74", Offset = "0x11DAE74", VA = "0x11DAE74")]
	public void OnCloseSettings()
	{
	}

	[Token(Token = "0x6001324")]
	[Address(RVA = "0x11D5F08", Offset = "0x11D5F08", VA = "0x11D5F08")]
	public void CloseSettings(bool full = false)
	{
	}

	[Token(Token = "0x6001325")]
	[Address(RVA = "0x11DC90C", Offset = "0x11DC90C", VA = "0x11DC90C")]
	public void OnOpenUIWindow()
	{
	}

	[Token(Token = "0x6001326")]
	[Address(RVA = "0x11DC9B4", Offset = "0x11DC9B4", VA = "0x11DC9B4")]
	public void OnCloseUIWindow()
	{
	}

	[Token(Token = "0x6001327")]
	[Address(RVA = "0x11DCA20", Offset = "0x11DCA20", VA = "0x11DCA20")]
	public bool IsUIWindowOpen()
	{
		return default(bool);
	}

	[Token(Token = "0x6001328")]
	[Address(RVA = "0x11D5A18", Offset = "0x11D5A18", VA = "0x11D5A18")]
	private static void FixPositionIfSomethingAhead(PlaneBody pb)
	{
	}

	[Token(Token = "0x6001329")]
	[Address(RVA = "0x11DCA28", Offset = "0x11DCA28", VA = "0x11DCA28")]
	public PlaneSteering()
	{
	}
}
[Token(Token = "0x20002D4")]
public class PlaneTag : MonoBehaviour
{
	[Token(Token = "0x40014A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMesh planeName;

	[Token(Token = "0x40014AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMesh bombs;

	[Token(Token = "0x40014AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMesh ammo;

	[Token(Token = "0x40014AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMesh flyAway;

	[Token(Token = "0x40014AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Renderer portrait;

	[Token(Token = "0x40014AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Renderer bombIcon;

	[Token(Token = "0x40014AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Renderer cannonIcon;

	[Token(Token = "0x40014B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Material[] mat;

	[Token(Token = "0x40014B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private PlaneBody planeBody;

	[Token(Token = "0x40014B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private AIPilot aiPilot;

	[Token(Token = "0x40014B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool isPlayer;

	[Token(Token = "0x40014B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private BombBay bombBay;

	[Token(Token = "0x40014B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private RocketBay rocketBay;

	[Token(Token = "0x40014B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private TorpedoBay torpedoBay;

	[Token(Token = "0x40014B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Cannon20mm cannon20mm;

	[Token(Token = "0x40014B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int refresh;

	[Token(Token = "0x6001342")]
	[Address(RVA = "0x11D5D50", Offset = "0x11D5D50", VA = "0x11D5D50")]
	public static void Refresh()
	{
	}

	[Token(Token = "0x6001343")]
	[Address(RVA = "0x11DCAE4", Offset = "0x11DCAE4", VA = "0x11DCAE4")]
	private void Update()
	{
	}

	[Token(Token = "0x6001344")]
	[Address(RVA = "0x11DCE80", Offset = "0x11DCE80", VA = "0x11DCE80")]
	public void SetPlane(PlaneBody pb)
	{
	}

	[Token(Token = "0x6001345")]
	[Address(RVA = "0x11DCB8C", Offset = "0x11DCB8C", VA = "0x11DCB8C")]
	public void Print()
	{
	}

	[Token(Token = "0x6001346")]
	[Address(RVA = "0x11DD188", Offset = "0x11DD188", VA = "0x11DD188")]
	private Material GetMaterialByMissile(eMissile m)
	{
		return null;
	}

	[Token(Token = "0x6001347")]
	[Address(RVA = "0x11DD290", Offset = "0x11DD290", VA = "0x11DD290")]
	public void Click()
	{
	}

	[Token(Token = "0x6001348")]
	[Address(RVA = "0x11DD384", Offset = "0x11DD384", VA = "0x11DD384")]
	public PlaneTag()
	{
	}
}
[Token(Token = "0x20002D5")]
public class PlaneTagBase : MonoBehaviour
{
	[Token(Token = "0x40014B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly Color colorIconPlayerPlane;

	[Token(Token = "0x40014BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly Color colorIconShopPlane;

	[Token(Token = "0x40014BB")]
	public const float scaleStateIconDefault = 1.4f;

	[Token(Token = "0x40014BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMesh tn;

	[Token(Token = "0x40014BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMesh tp;

	[Token(Token = "0x40014BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMesh ts;

	[Token(Token = "0x40014BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMesh td;

	[Token(Token = "0x40014C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Renderer portrait;

	[Token(Token = "0x40014C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Renderer planeState;

	[Token(Token = "0x40014C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material planeState_Commander;

	[Token(Token = "0x40014C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Material planeState_Support;

	[Token(Token = "0x40014C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Material planeState_Stay;

	[Token(Token = "0x40014C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Material planeState_MultiFavorite;

	[Token(Token = "0x40014C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Material planeState_MultiFavoriteDefault;

	[Token(Token = "0x40014C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public CloudSave_Checkbox checkboxAllowedPlane;

	[Token(Token = "0x40014C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Material portraitMaterialNotAllowed;

	[Token(Token = "0x40014C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject planeMenu;

	[Token(Token = "0x40014CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject shopMenu;

	[Token(Token = "0x40014CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private GameObject prefab;

	[Token(Token = "0x40014CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private PlayerPlane playerPlane;

	[Token(Token = "0x40014CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private PlaneBody pb;

	[Token(Token = "0x40014CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Texture planeTex;

	[Token(Token = "0x40014CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Material portraitMaterialOrg;

	[Token(Token = "0x40014D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Material portraitMaterialReplaced;

	[Token(Token = "0x600134A")]
	[Address(RVA = "0x11DD390", Offset = "0x11DD390", VA = "0x11DD390")]
	public void SetPlane(PlayerPlane pp, GameObject pref, bool isShop = false)
	{
	}

	[Token(Token = "0x600134B")]
	[Address(RVA = "0x11DD798", Offset = "0x11DD798", VA = "0x11DD798")]
	public void UpdatePlaneState()
	{
	}

	[Token(Token = "0x600134C")]
	[Address(RVA = "0x11DE2E8", Offset = "0x11DE2E8", VA = "0x11DE2E8")]
	public PlayerPlane GetPlane()
	{
		return null;
	}

	[Token(Token = "0x600134D")]
	[Address(RVA = "0x11DE2F0", Offset = "0x11DE2F0", VA = "0x11DE2F0")]
	public void Click()
	{
	}

	[Token(Token = "0x600134E")]
	[Address(RVA = "0x11DE7D0", Offset = "0x11DE7D0", VA = "0x11DE7D0")]
	private void ClickPlaneStateIcon()
	{
	}

	[Token(Token = "0x600134F")]
	[Address(RVA = "0x11DD77C", Offset = "0x11DD77C", VA = "0x11DD77C")]
	private int Price(PlaneBody pb)
	{
		return default(int);
	}

	[Token(Token = "0x6001350")]
	[Address(RVA = "0x11DEB2C", Offset = "0x11DEB2C", VA = "0x11DEB2C")]
	private void OnClickSelectedPlane()
	{
	}

	[Token(Token = "0x6001351")]
	[Address(RVA = "0x11DF0FC", Offset = "0x11DF0FC", VA = "0x11DF0FC")]
	public PlaneTagBase()
	{
	}
}
[Token(Token = "0x20002D6")]
public class PlaneTexturesDisposer : MonoBehaviour
{
	[Token(Token = "0x6001353")]
	[Address(RVA = "0x11DF19C", Offset = "0x11DF19C", VA = "0x11DF19C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001354")]
	[Address(RVA = "0x11DF22C", Offset = "0x11DF22C", VA = "0x11DF22C")]
	public PlaneTexturesDisposer()
	{
	}
}
[Token(Token = "0x20002D7")]
public class PlanesList : MonoBehaviour
{
	[Token(Token = "0x40014D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject planeTag;

	[Token(Token = "0x40014D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int stepsToBeReady;

	[Token(Token = "0x40014D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject[] buttons;

	[Token(Token = "0x6001355")]
	[Address(RVA = "0x11DF234", Offset = "0x11DF234", VA = "0x11DF234")]
	public void Start()
	{
	}

	[Token(Token = "0x6001356")]
	[Address(RVA = "0x11DF308", Offset = "0x11DF308", VA = "0x11DF308")]
	private void Update()
	{
	}

	[Token(Token = "0x6001357")]
	[Address(RVA = "0x11DF798", Offset = "0x11DF798", VA = "0x11DF798")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6001358")]
	[Address(RVA = "0x11DF324", Offset = "0x11DF324", VA = "0x11DF324")]
	public void BuildButtons()
	{
	}

	[Token(Token = "0x6001359")]
	[Address(RVA = "0x11DF7A4", Offset = "0x11DF7A4", VA = "0x11DF7A4")]
	private Vector3 Position(int posI)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600135A")]
	[Address(RVA = "0x11DF930", Offset = "0x11DF930", VA = "0x11DF930")]
	public PlanesList()
	{
	}
}
[Token(Token = "0x20002D8")]
public class PlanesListBase : MonoBehaviour
{
	[Token(Token = "0x20002D9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x918270", Offset = "0x918270")]
	private sealed class <BuildButtonsDelayed>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40014DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40014E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40014E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlanesListBase <>4__this;

		[Token(Token = "0x17000108")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600136D")]
			[Address(RVA = "0xD8ACD8", Offset = "0xD8ACD8", VA = "0xD8ACD8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000109")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600136F")]
			[Address(RVA = "0xD8AD20", Offset = "0xD8AD20", VA = "0xD8AD20", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600136A")]
		[Address(RVA = "0xD8AC4C", Offset = "0xD8AC4C", VA = "0xD8AC4C")]
		[DebuggerHidden]
		public <BuildButtonsDelayed>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x600136B")]
		[Address(RVA = "0xD8AC78", Offset = "0xD8AC78", VA = "0xD8AC78", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600136C")]
		[Address(RVA = "0xD8AC7C", Offset = "0xD8AC7C", VA = "0xD8AC7C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600136E")]
		[Address(RVA = "0xD8ACE0", Offset = "0xD8ACE0", VA = "0xD8ACE0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002DA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x918280", Offset = "0x918280")]
	private sealed class <ScrollToBottomDelayed>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40014E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40014E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40014E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlanesListBase <>4__this;

		[Token(Token = "0x1700010A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001373")]
			[Address(RVA = "0xD8AE34", Offset = "0xD8AE34", VA = "0xD8AE34", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001375")]
			[Address(RVA = "0xD8AE7C", Offset = "0xD8AE7C", VA = "0xD8AE7C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001370")]
		[Address(RVA = "0xD8AD28", Offset = "0xD8AD28", VA = "0xD8AD28")]
		[DebuggerHidden]
		public <ScrollToBottomDelayed>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6001371")]
		[Address(RVA = "0xD8AD54", Offset = "0xD8AD54", VA = "0xD8AD54", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001372")]
		[Address(RVA = "0xD8AD58", Offset = "0xD8AD58", VA = "0xD8AD58", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001374")]
		[Address(RVA = "0xD8AE3C", Offset = "0xD8AE3C", VA = "0xD8AE3C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40014D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool shop;

	[Token(Token = "0x40014D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject buttonClose;

	[Token(Token = "0x40014D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject planeTag;

	[Token(Token = "0x40014D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject buyNewPlaneButton;

	[Token(Token = "0x40014D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool ready;

	[Token(Token = "0x40014D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int stepsToBeReady;

	[Token(Token = "0x40014DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject[] buttons;

	[Token(Token = "0x40014DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int prevGold;

	[Token(Token = "0x40014DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject buyNewPlaneButtonInstance;

	[Token(Token = "0x40014DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool inMultiplayerGame;

	[Token(Token = "0x40014DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PlanesListBase instance;

	[Token(Token = "0x600135B")]
	[Address(RVA = "0x11DF940", Offset = "0x11DF940", VA = "0x11DF940")]
	public static void Refresh(bool scrollToBottom = false)
	{
	}

	[Token(Token = "0x600135C")]
	[Address(RVA = "0x11E0488", Offset = "0x11E0488", VA = "0x11E0488")]
	public static void SelectPlane(PlayerPlane plane)
	{
	}

	[Token(Token = "0x600135D")]
	[Address(RVA = "0x11DEA6C", Offset = "0x11DEA6C", VA = "0x11DEA6C")]
	public static void UpdatePlaneState(PlayerPlane plane)
	{
	}

	[Token(Token = "0x600135E")]
	[Address(RVA = "0x11E06C8", Offset = "0x11E06C8", VA = "0x11E06C8")]
	public void Awake()
	{
	}

	[Token(Token = "0x600135F")]
	[Address(RVA = "0x11E0770", Offset = "0x11E0770", VA = "0x11E0770")]
	public void Start()
	{
	}

	[Token(Token = "0x6001360")]
	[Address(RVA = "0x11E0780", Offset = "0x11E0780", VA = "0x11E0780")]
	private void Update()
	{
	}

	[Token(Token = "0x6001361")]
	[Address(RVA = "0x11E0CB8", Offset = "0x11E0CB8", VA = "0x11E0CB8")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6001362")]
	[Address(RVA = "0x11E0FCC", Offset = "0x11E0FCC", VA = "0x11E0FCC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9298B4", Offset = "0x9298B4")]
	public IEnumerator BuildButtonsDelayed()
	{
		return null;
	}

	[Token(Token = "0x6001363")]
	[Address(RVA = "0x11DFA00", Offset = "0x11DFA00", VA = "0x11DFA00")]
	public void BuildButtons(bool scrollToBottom = false)
	{
	}

	[Token(Token = "0x6001364")]
	[Address(RVA = "0x11E0B00", Offset = "0x11E0B00", VA = "0x11E0B00")]
	private bool ShouldShowBuyNewPlane()
	{
		return default(bool);
	}

	[Token(Token = "0x6001365")]
	[Address(RVA = "0x11E0608", Offset = "0x11E0608", VA = "0x11E0608")]
	private void UpdatePlaneState2(PlayerPlane plane)
	{
	}

	[Token(Token = "0x6001366")]
	[Address(RVA = "0x11E1038", Offset = "0x11E1038", VA = "0x11E1038")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x929914", Offset = "0x929914")]
	private IEnumerator ScrollToBottomDelayed()
	{
		return null;
	}

	[Token(Token = "0x6001367")]
	[Address(RVA = "0x11E0548", Offset = "0x11E0548", VA = "0x11E0548")]
	private void ClickPlane(PlayerPlane plane)
	{
	}

	[Token(Token = "0x6001368")]
	[Address(RVA = "0x11E10A4", Offset = "0x11E10A4", VA = "0x11E10A4")]
	public void OnClickCloseMulti()
	{
	}

	[Token(Token = "0x6001369")]
	[Address(RVA = "0x11E1364", Offset = "0x11E1364", VA = "0x11E1364")]
	public PlanesListBase()
	{
	}
}
[Token(Token = "0x20002DB")]
public class PlatformTextureReplace : MonoBehaviour
{
	[Token(Token = "0x40014E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D texPico;

	[Token(Token = "0x40014E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture2D texPicoPhoenix;

	[Token(Token = "0x6001376")]
	[Address(RVA = "0x10B9D24", Offset = "0x10B9D24", VA = "0x10B9D24")]
	private void Start()
	{
	}

	[Token(Token = "0x6001377")]
	[Address(RVA = "0x10B9F50", Offset = "0x10B9F50", VA = "0x10B9F50")]
	public PlatformTextureReplace()
	{
	}
}
[Token(Token = "0x20002DC")]
public enum eBuilding
{
	[Token(Token = "0x40014E8")]
	hangar,
	[Token(Token = "0x40014E9")]
	workshop,
	[Token(Token = "0x40014EA")]
	barracks,
	[Token(Token = "0x40014EB")]
	fuelTank,
	[Token(Token = "0x40014EC")]
	baloon,
	[Token(Token = "0x40014ED")]
	aa,
	[Token(Token = "0x40014EE")]
	num
}
[Token(Token = "0x20002DD")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x918290", Offset = "0x918290")]
public class Player : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20002DE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9182A4", Offset = "0x9182A4")]
	private sealed class <>c
	{
		[Token(Token = "0x4001523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<PlayerPlane> <>9__102_0;

		[Token(Token = "0x60013F9")]
		[Address(RVA = "0xD8AEE4", Offset = "0xD8AEE4", VA = "0xD8AEE4")]
		public <>c()
		{
		}

		[Token(Token = "0x60013FA")]
		[Address(RVA = "0xD8AEEC", Offset = "0xD8AEEC", VA = "0xD8AEEC")]
		internal int <GetMultiplayerReadyToFlyDefaultPlanes>b__102_0(PlayerPlane a, PlayerPlane b)
		{
			return default(int);
		}
	}

	[Token(Token = "0x40014EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly int[] multiExpLevels;

	[Token(Token = "0x40014F0")]
	public const int maxMultiExpLevel = 10;

	[Token(Token = "0x40014F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int saveVer;

	[Token(Token = "0x40014F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static bool multiplayerMode;

	[Token(Token = "0x40014F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
	private static bool quickPlayMode;

	[Token(Token = "0x40014F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static eNation nation;

	[Token(Token = "0x40014F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static bool initialized;

	[Token(Token = "0x40014F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static List<PlayerPlane> planes;

	[Token(Token = "0x40014F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static List<PlayerPlane> planesMulti;

	[Token(Token = "0x40014F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static int gold;

	[Token(Token = "0x40014F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static int[] structures;

	[Token(Token = "0x40014FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static int finishedMissions;

	[Token(Token = "0x40014FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private static int multiExp;

	[Token(Token = "0x40014FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static bool commonDataInitialized;

	[Token(Token = "0x40014FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private static uint saveUID;

	[Token(Token = "0x40014FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static uint startGameCloudSaveUserID;

	[Token(Token = "0x40014FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static string startGameAppVersion;

	[Token(Token = "0x4001500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static string startGameDate;

	[Token(Token = "0x4001501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static int changesCounter;

	[Token(Token = "0x4001502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private static int nextCustomCampaignUID;

	[Token(Token = "0x4001503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static Dictionary<long, int> customCampaignRatedDifficulty;

	[Token(Token = "0x4001504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static Dictionary<long, int> customCampaignRatedRating;

	[Token(Token = "0x4001505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static List<long> customCampaignFavorites;

	[Token(Token = "0x4001506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static List<CustomCampaignProgress> customCampaignProgress;

	[Token(Token = "0x4001507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static List<long> customCampaignFinished;

	[Token(Token = "0x4001508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static ObscuredInt pvpKillsCount;

	[Token(Token = "0x4001509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static ObscuredInt pvpDeathsCount;

	[Token(Token = "0x400150A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private static ObscuredInt playedTimeSeconds;

	[Token(Token = "0x400150B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private static ObscuredInt notLoggedPoints_CoOp;

	[Token(Token = "0x400150C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private static ObscuredInt notLoggedGames_CoOp;

	[Token(Token = "0x400150D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private static ObscuredInt notLoggedPoints_PvP;

	[Token(Token = "0x400150E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private static ObscuredInt notLoggedGames_PvP;

	[Token(Token = "0x400150F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private static ObscuredInt notLoggedPoints_Challange;

	[Token(Token = "0x4001510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private static ObscuredInt notLoggedGames_Challange;

	[Token(Token = "0x4001511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private static ObscuredInt notLoggedPoints_SpecialTasks;

	[Token(Token = "0x4001512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private static ObscuredInt notLoggedGames_SpecialTasks;

	[Token(Token = "0x4001513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private static ulong giftGiverUID;

	[Token(Token = "0x4001514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private static List<int> giftCodes;

	[Token(Token = "0x4001515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private static List<PlayerPlane> cachedSelPlanes;

	[Token(Token = "0x4001516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	protected static Material[] expLevelMaterials;

	[Token(Token = "0x4001517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	protected static Material[] expLevelMaterialsSmall;

	[Token(Token = "0x4001518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	protected static Material[] expLevelMaterialsSmall_d;

	[Token(Token = "0x4001519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	protected static int quickPlayMissionsCount;

	[Token(Token = "0x400151A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public static Player instance;

	[Token(Token = "0x400151B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private static eTask[] reduceTaskOrder;

	[Token(Token = "0x400151C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private static eTask[] reduceTaskEnemy;

	[Token(Token = "0x400151D")]
	private const int reduceMaxFighterTasks = 3;

	[Token(Token = "0x400151E")]
	private const int reduceMaxBomberTasks = 1;

	[Token(Token = "0x400151F")]
	private const int reduceMaxOtherTasks = 1;

	[Token(Token = "0x4001520")]
	private const int reduceMaxFighters = 50;

	[Token(Token = "0x4001521")]
	private const int reduceMaxBombers = 20;

	[Token(Token = "0x4001522")]
	private const int reduceMaxPlanesInWave = 12;

	[Token(Token = "0x6001378")]
	[Address(RVA = "0x10B9F58", Offset = "0x10B9F58", VA = "0x10B9F58")]
	public void Awake()
	{
	}

	[Token(Token = "0x6001379")]
	[Address(RVA = "0x10BA028", Offset = "0x10BA028", VA = "0x10BA028")]
	public void Start()
	{
	}

	[Token(Token = "0x600137A")]
	[Address(RVA = "0x10BA13C", Offset = "0x10BA13C", VA = "0x10BA13C")]
	public static int GetGold()
	{
		return default(int);
	}

	[Token(Token = "0x600137B")]
	[Address(RVA = "0x10BA1A0", Offset = "0x10BA1A0", VA = "0x10BA1A0")]
	public static int GetBuildingsCount(int t)
	{
		return default(int);
	}

	[Token(Token = "0x600137C")]
	[Address(RVA = "0x10BA230", Offset = "0x10BA230", VA = "0x10BA230")]
	public static void UpgradeStructure(eBuilding type)
	{
	}

	[Token(Token = "0x600137D")]
	[Address(RVA = "0x10BA2C8", Offset = "0x10BA2C8", VA = "0x10BA2C8")]
	public static bool IsInBase()
	{
		return default(bool);
	}

	[Token(Token = "0x600137E")]
	[Address(RVA = "0x10BA34C", Offset = "0x10BA34C", VA = "0x10BA34C")]
	public static int GetTotalFinishedMissions()
	{
		return default(int);
	}

	[Token(Token = "0x600137F")]
	[Address(RVA = "0x10BA3B0", Offset = "0x10BA3B0", VA = "0x10BA3B0")]
	public static int GetMultiExpPoints()
	{
		return default(int);
	}

	[Token(Token = "0x6001380")]
	[Address(RVA = "0x10BA414", Offset = "0x10BA414", VA = "0x10BA414")]
	public static void AddMultiExp(int val)
	{
	}

	[Token(Token = "0x6001381")]
	[Address(RVA = "0x10BA484", Offset = "0x10BA484", VA = "0x10BA484")]
	public static int GetMultiExpLevel()
	{
		return default(int);
	}

	[Token(Token = "0x6001382")]
	[Address(RVA = "0x10BA520", Offset = "0x10BA520", VA = "0x10BA520")]
	public static int GetMultiExpLevel(int exp)
	{
		return default(int);
	}

	[Token(Token = "0x6001383")]
	[Address(RVA = "0x10BA608", Offset = "0x10BA608", VA = "0x10BA608")]
	public static int GetMultiExpLevelPoints(int level)
	{
		return default(int);
	}

	[Token(Token = "0x6001384")]
	[Address(RVA = "0x10BA6B0", Offset = "0x10BA6B0", VA = "0x10BA6B0")]
	public static Material GetExpLevelMaterial(int lvl, bool small, bool onDecals = false)
	{
		return null;
	}

	[Token(Token = "0x6001385")]
	[Address(RVA = "0x10BABC0", Offset = "0x10BABC0", VA = "0x10BABC0")]
	public static float GetMultiExpProgress()
	{
		return default(float);
	}

	[Token(Token = "0x6001386")]
	[Address(RVA = "0x10BACC0", Offset = "0x10BACC0", VA = "0x10BACC0")]
	public static int GetNation()
	{
		return default(int);
	}

	[Token(Token = "0x6001387")]
	[Address(RVA = "0x10BAD24", Offset = "0x10BAD24", VA = "0x10BAD24")]
	public static string GetNationID()
	{
		return null;
	}

	[Token(Token = "0x6001388")]
	[Address(RVA = "0x10BAE20", Offset = "0x10BAE20", VA = "0x10BAE20")]
	public static void SetNation(int n)
	{
	}

	[Token(Token = "0x6001389")]
	[Address(RVA = "0x10BAEBC", Offset = "0x10BAEBC", VA = "0x10BAEBC")]
	public static void SetNationForChooseNation(int n)
	{
	}

	[Token(Token = "0x600138A")]
	[Address(RVA = "0x10BB518", Offset = "0x10BB518", VA = "0x10BB518")]
	public static void InitInEditor()
	{
	}

	[Token(Token = "0x600138B")]
	[Address(RVA = "0x10BB5A0", Offset = "0x10BB5A0", VA = "0x10BB5A0")]
	public static void SaveChangesInEditor(bool sendToCloud)
	{
	}

	[Token(Token = "0x600138C")]
	[Address(RVA = "0x10BB79C", Offset = "0x10BB79C", VA = "0x10BB79C")]
	public static void SetMultiplayerMode(bool on)
	{
	}

	[Token(Token = "0x600138D")]
	[Address(RVA = "0x10BB8C4", Offset = "0x10BB8C4", VA = "0x10BB8C4")]
	public static bool IsMultiplayerMode()
	{
		return default(bool);
	}

	[Token(Token = "0x600138E")]
	[Address(RVA = "0x10BB928", Offset = "0x10BB928", VA = "0x10BB928")]
	public static void EndMission()
	{
	}

	[Token(Token = "0x600138F")]
	[Address(RVA = "0x10BBA04", Offset = "0x10BBA04", VA = "0x10BBA04")]
	public static void StartQuickPlay()
	{
	}

	[Token(Token = "0x6001390")]
	[Address(RVA = "0x10BBE78", Offset = "0x10BBE78", VA = "0x10BBE78")]
	public static void ReduceQuickPlayTasks(List<CustomMissionTask> tasks)
	{
	}

	[Token(Token = "0x6001391")]
	[Address(RVA = "0x10BC464", Offset = "0x10BC464", VA = "0x10BC464")]
	public static int CountTasks(List<CustomMissionTask> tasks, eqType task, bool enemy)
	{
		return default(int);
	}

	[Token(Token = "0x6001392")]
	[Address(RVA = "0x10BC590", Offset = "0x10BC590", VA = "0x10BC590")]
	public static int CountSpawns(List<CustomMissionTask> tasks, eqType task, bool enemy, bool allWaves)
	{
		return default(int);
	}

	[Token(Token = "0x6001393")]
	[Address(RVA = "0x10BC720", Offset = "0x10BC720", VA = "0x10BC720")]
	public static int CountSpawns(List<CustomMissionTask> tasks, eqType task, eTask ttype)
	{
		return default(int);
	}

	[Token(Token = "0x6001394")]
	[Address(RVA = "0x10BC860", Offset = "0x10BC860", VA = "0x10BC860")]
	public static void EndQuickPlay()
	{
	}

	[Token(Token = "0x6001395")]
	[Address(RVA = "0x10BC96C", Offset = "0x10BC96C", VA = "0x10BC96C")]
	public static bool IsQuickPlayMode()
	{
		return default(bool);
	}

	[Token(Token = "0x6001396")]
	[Address(RVA = "0x10BC9D0", Offset = "0x10BC9D0", VA = "0x10BC9D0")]
	private static PlaneBody GetRandomPlane(bool bombs)
	{
		return null;
	}

	[Token(Token = "0x6001397")]
	[Address(RVA = "0x10BCC9C", Offset = "0x10BCC9C", VA = "0x10BCC9C")]
	private static void AddQuickPlayPlane(PlaneBody pb)
	{
	}

	[Token(Token = "0x6001398")]
	[Address(RVA = "0x10BD130", Offset = "0x10BD130", VA = "0x10BD130")]
	public static void AddQuickPlayPlanes(CustomMissionData mission)
	{
	}

	[Token(Token = "0x6001399")]
	[Address(RVA = "0x10BD398", Offset = "0x10BD398", VA = "0x10BD398")]
	public static List<PlayerPlane> GetPlanes()
	{
		return null;
	}

	[Token(Token = "0x600139A")]
	[Address(RVA = "0x10BCE90", Offset = "0x10BCE90", VA = "0x10BCE90")]
	public static void AddPlayerPlane(PlayerPlane pp)
	{
	}

	[Token(Token = "0x600139B")]
	[Address(RVA = "0x10BD488", Offset = "0x10BD488", VA = "0x10BD488")]
	private static void SortPlanes()
	{
	}

	[Token(Token = "0x600139C")]
	[Address(RVA = "0x10BD59C", Offset = "0x10BD59C", VA = "0x10BD59C")]
	private static bool ShouldSwap(int i, int j)
	{
		return default(bool);
	}

	[Token(Token = "0x600139D")]
	[Address(RVA = "0x10BD6C4", Offset = "0x10BD6C4", VA = "0x10BD6C4")]
	private static void Swap(int i, int j)
	{
	}

	[Token(Token = "0x600139E")]
	[Address(RVA = "0x10BD8B4", Offset = "0x10BD8B4", VA = "0x10BD8B4")]
	public static void RemovePlayerPlane(PlayerPlane pp)
	{
	}

	[Token(Token = "0x600139F")]
	[Address(RVA = "0x10BDAD8", Offset = "0x10BDAD8", VA = "0x10BDAD8")]
	public static PlayerPlane GetPlayerPlane(int i)
	{
		return null;
	}

	[Token(Token = "0x60013A0")]
	[Address(RVA = "0x10BDBB0", Offset = "0x10BDBB0", VA = "0x10BDBB0")]
	public static int GetPlaneIndex(PlayerPlane pp)
	{
		return default(int);
	}

	[Token(Token = "0x60013A1")]
	[Address(RVA = "0x10BDCCC", Offset = "0x10BDCCC", VA = "0x10BDCCC")]
	public static PlayerPlane GetPlayerPlane(string prefabID)
	{
		return null;
	}

	[Token(Token = "0x60013A2")]
	[Address(RVA = "0x10BDE5C", Offset = "0x10BDE5C", VA = "0x10BDE5C")]
	public static PlayerPlane[] GetPlanesArray()
	{
		return null;
	}

	[Token(Token = "0x60013A3")]
	[Address(RVA = "0x10BDED8", Offset = "0x10BDED8", VA = "0x10BDED8")]
	public static int GetPlanesCount()
	{
		return default(int);
	}

	[Token(Token = "0x60013A4")]
	[Address(RVA = "0x10BDF6C", Offset = "0x10BDF6C", VA = "0x10BDF6C")]
	public static int GetFlyPlanesCount()
	{
		return default(int);
	}

	[Token(Token = "0x60013A5")]
	[Address(RVA = "0x10BE0D4", Offset = "0x10BE0D4", VA = "0x10BE0D4")]
	public static PlayerPlane GetPlaneAtIndex(int i)
	{
		return null;
	}

	[Token(Token = "0x60013A6")]
	[Address(RVA = "0x10BE16C", Offset = "0x10BE16C", VA = "0x10BE16C")]
	public static void AddGold(int i)
	{
	}

	[Token(Token = "0x60013A7")]
	[Address(RVA = "0x10BE1F0", Offset = "0x10BE1F0", VA = "0x10BE1F0")]
	public void TmpAddGold()
	{
	}

	[Token(Token = "0x60013A8")]
	[Address(RVA = "0x10BE24C", Offset = "0x10BE24C", VA = "0x10BE24C")]
	public static bool IsInitialized()
	{
		return default(bool);
	}

	[Token(Token = "0x60013A9")]
	[Address(RVA = "0x10BE2B0", Offset = "0x10BE2B0", VA = "0x10BE2B0")]
	public static PlayerPlane GetMultiplayerReadyToFlyDefaultPlane(bool retNullIfNoDefault = false, bool checkAllowed = true)
	{
		return null;
	}

	[Token(Token = "0x60013AA")]
	[Address(RVA = "0x10BE80C", Offset = "0x10BE80C", VA = "0x10BE80C")]
	public static List<PlayerPlane> GetMultiplayerReadyToFlyDefaultPlanes()
	{
		return null;
	}

	[Token(Token = "0x60013AB")]
	[Address(RVA = "0x10BECA8", Offset = "0x10BECA8", VA = "0x10BECA8")]
	public static List<PlayerPlane> GetMultiplayerReadyToFlyPlanes(bool defaultOnBegin)
	{
		return null;
	}

	[Token(Token = "0x60013AC")]
	[Address(RVA = "0x10BF0A4", Offset = "0x10BF0A4", VA = "0x10BF0A4")]
	public static string GetMultiplayerReadyToFlyPlanesMultiSave()
	{
		return null;
	}

	[Token(Token = "0x60013AD")]
	[Address(RVA = "0x10BF194", Offset = "0x10BF194", VA = "0x10BF194")]
	public static void ResetPlanesTransitionState()
	{
	}

	[Token(Token = "0x60013AE")]
	[Address(RVA = "0x10BF2E4", Offset = "0x10BF2E4", VA = "0x10BF2E4")]
	public static void StorePlanesTransitionState()
	{
	}

	[Token(Token = "0x60013AF")]
	[Address(RVA = "0x10BF580", Offset = "0x10BF580", VA = "0x10BF580")]
	public static void RestorePlanesTransitionState()
	{
	}

	[Token(Token = "0x60013B0")]
	[Address(RVA = "0x10BF7F0", Offset = "0x10BF7F0", VA = "0x10BF7F0")]
	public static eNation GetNationOfPlane(string prefabID)
	{
		return default(eNation);
	}

	[Token(Token = "0x60013B1")]
	[Address(RVA = "0x10BF858", Offset = "0x10BF858", VA = "0x10BF858")]
	public static void AddPlayedTimeSeconds(int add)
	{
	}

	[Token(Token = "0x60013B2")]
	[Address(RVA = "0x10BF920", Offset = "0x10BF920", VA = "0x10BF920")]
	public static int GetPlayedTimeSeconds()
	{
		return default(int);
	}

	[Token(Token = "0x60013B3")]
	[Address(RVA = "0x10BF9C0", Offset = "0x10BF9C0", VA = "0x10BF9C0")]
	public static void AddKillsCount(int add)
	{
	}

	[Token(Token = "0x60013B4")]
	[Address(RVA = "0x10BFA88", Offset = "0x10BFA88", VA = "0x10BFA88")]
	public static int GetKillsCount()
	{
		return default(int);
	}

	[Token(Token = "0x60013B5")]
	[Address(RVA = "0x10BFB28", Offset = "0x10BFB28", VA = "0x10BFB28")]
	public static void AddDeathsCount(int add)
	{
	}

	[Token(Token = "0x60013B6")]
	[Address(RVA = "0x10BFBF0", Offset = "0x10BFBF0", VA = "0x10BFBF0")]
	public static int GetDeathsCount()
	{
		return default(int);
	}

	[Token(Token = "0x60013B7")]
	[Address(RVA = "0x10BA0B0", Offset = "0x10BA0B0", VA = "0x10BA0B0")]
	private static void Init()
	{
	}

	[Token(Token = "0x60013B8")]
	[Address(RVA = "0x10BB17C", Offset = "0x10BB17C", VA = "0x10BB17C")]
	private static void ResetValues(bool singleplayer, bool multiplayer)
	{
	}

	[Token(Token = "0x60013B9")]
	[Address(RVA = "0x10BFD28", Offset = "0x10BFD28", VA = "0x10BFD28")]
	private static void InitSingleplayerPlanes()
	{
	}

	[Token(Token = "0x60013BA")]
	[Address(RVA = "0x10BFFB8", Offset = "0x10BFFB8", VA = "0x10BFFB8")]
	public static PlayerPlane CreateDefaultPlane()
	{
		return null;
	}

	[Token(Token = "0x60013BB")]
	[Address(RVA = "0x10BFDAC", Offset = "0x10BFDAC", VA = "0x10BFDAC")]
	private static void FillMultiplayerPlanes()
	{
	}

	[Token(Token = "0x60013BC")]
	[Address(RVA = "0x10C025C", Offset = "0x10C025C", VA = "0x10C025C")]
	private static void ResetCommonValues()
	{
	}

	[Token(Token = "0x60013BD")]
	[Address(RVA = "0x10C0520", Offset = "0x10C0520", VA = "0x10C0520")]
	private static string GetSaveKey()
	{
		return null;
	}

	[Token(Token = "0x60013BE")]
	[Address(RVA = "0x10C0584", Offset = "0x10C0584", VA = "0x10C0584")]
	private static string GetSaveKey(eNation n)
	{
		return null;
	}

	[Token(Token = "0x60013BF")]
	[Address(RVA = "0x10C05F4", Offset = "0x10C05F4", VA = "0x10C05F4")]
	public static void DeleteSaveFile()
	{
	}

	[Token(Token = "0x60013C0")]
	[Address(RVA = "0x10C06F4", Offset = "0x10C06F4", VA = "0x10C06F4")]
	public static void GetSaveInfo(string save, out int missions, out int planesCnt, out int gold)
	{
	}

	[Token(Token = "0x60013C1")]
	[Address(RVA = "0x10C08A0", Offset = "0x10C08A0", VA = "0x10C08A0")]
	public static string GetSaveString()
	{
		return null;
	}

	[Token(Token = "0x60013C2")]
	[Address(RVA = "0x10C138C", Offset = "0x10C138C", VA = "0x10C138C")]
	public static void Save()
	{
	}

	[Token(Token = "0x60013C3")]
	[Address(RVA = "0x10BFC90", Offset = "0x10BFC90", VA = "0x10BFC90")]
	private static bool Load()
	{
		return default(bool);
	}

	[Token(Token = "0x60013C4")]
	[Address(RVA = "0x10C15A4", Offset = "0x10C15A4", VA = "0x10C15A4")]
	private static bool LoadNationSave()
	{
		return default(bool);
	}

	[Token(Token = "0x60013C5")]
	[Address(RVA = "0x10C1F84", Offset = "0x10C1F84", VA = "0x10C1F84")]
	public static void SaveImmediatelyAfterImportantChange()
	{
	}

	[Token(Token = "0x60013C6")]
	[Address(RVA = "0x10C2028", Offset = "0x10C2028", VA = "0x10C2028")]
	private static string GetCommonSaveKey()
	{
		return null;
	}

	[Token(Token = "0x60013C7")]
	[Address(RVA = "0x10C206C", Offset = "0x10C206C", VA = "0x10C206C")]
	private static string GetCommonSaveString(bool emptySaveUID)
	{
		return null;
	}

	[Token(Token = "0x60013C8")]
	[Address(RVA = "0x10C3118", Offset = "0x10C3118", VA = "0x10C3118")]
	public static void DeleteSaveProgressSingleplayer()
	{
	}

	[Token(Token = "0x60013C9")]
	[Address(RVA = "0x10C3184", Offset = "0x10C3184", VA = "0x10C3184")]
	public static void DeleteSaveProgressMultiplayer()
	{
	}

	[Token(Token = "0x60013CA")]
	[Address(RVA = "0x10C31F0", Offset = "0x10C31F0", VA = "0x10C31F0")]
	public static bool HasCommonSave()
	{
		return default(bool);
	}

	[Token(Token = "0x60013CB")]
	[Address(RVA = "0x10BB6C8", Offset = "0x10BB6C8", VA = "0x10BB6C8")]
	private static void SaveCommon()
	{
	}

	[Token(Token = "0x60013CC")]
	[Address(RVA = "0x10C32A8", Offset = "0x10C32A8", VA = "0x10C32A8")]
	private static void InitGiftGiverData()
	{
	}

	[Token(Token = "0x60013CD")]
	[Address(RVA = "0x10BAF68", Offset = "0x10BAF68", VA = "0x10BAF68")]
	private static bool LoadCommon()
	{
		return default(bool);
	}

	[Token(Token = "0x60013CE")]
	[Address(RVA = "0x10C41A0", Offset = "0x10C41A0", VA = "0x10C41A0")]
	private static void LoadCommon(string commonSave, out uint _saveUID, out uint _startGameCloudSaveUserID, out int _changesCounter)
	{
	}

	[Token(Token = "0x60013CF")]
	[Address(RVA = "0x10C34A8", Offset = "0x10C34A8", VA = "0x10C34A8")]
	private static void LoadCommon(string commonSave, out uint _saveUID, out uint _startGameCloudSaveUserID, out string _startGameAppVersion, out string _startGameDate, out string _saveAppVersion, out int _changesCounter, out int _nextCustomCampaignUID, out Dictionary<long, int> _customCampaignRatedDifficulty, out Dictionary<long, int> _customCampaignRatedRating, out List<long> _customCampaignFavorites, out List<CustomCampaignProgress> _customCampaignProgress, out List<long> _customCampaignFinished, out ObscuredInt _pvpKillsCount, out ObscuredInt _pvpDeathsCount, out ObscuredInt _playedTimeSeconds, out ObscuredInt _notLoggedPoints_CoOp, out ObscuredInt _notLoggedGames_CoOp, out ObscuredInt _notLoggedPoints_PvP, out ObscuredInt _notLoggedGames_PvP, out ObscuredInt _notLoggedPoints_Challange, out ObscuredInt _notLoggedGames_Challange, out ObscuredInt _notLoggedPoints_SpecialTasks, out ObscuredInt _notLoggedGames_SpecialTasks, out ulong _giftGiverUID, out List<int> _giftCodes)
	{
	}

	[Token(Token = "0x60013D0")]
	[Address(RVA = "0x10C42FC", Offset = "0x10C42FC", VA = "0x10C42FC")]
	public static void DeleteAllSaves(bool deleteOnCloud)
	{
	}

	[Token(Token = "0x60013D1")]
	[Address(RVA = "0x10BB65C", Offset = "0x10BB65C", VA = "0x10BB65C")]
	public static void RaiseChangesCounter()
	{
	}

	[Token(Token = "0x60013D2")]
	[Address(RVA = "0x10C45DC", Offset = "0x10C45DC", VA = "0x10C45DC")]
	public static int GetNextCustomCampaignUIDValue()
	{
		return default(int);
	}

	[Token(Token = "0x60013D3")]
	[Address(RVA = "0x10C4640", Offset = "0x10C4640", VA = "0x10C4640")]
	public static int GetIncreaseNextCustomCampaignUID()
	{
		return default(int);
	}

	[Token(Token = "0x60013D4")]
	[Address(RVA = "0x10C46B8", Offset = "0x10C46B8", VA = "0x10C46B8")]
	public static void SetNextCustomCampaignUIDValue(int val)
	{
	}

	[Token(Token = "0x60013D5")]
	[Address(RVA = "0x10C4724", Offset = "0x10C4724", VA = "0x10C4724")]
	public static void SetCustomCampaignRatedDifficulty(long guid, int diff)
	{
	}

	[Token(Token = "0x60013D6")]
	[Address(RVA = "0x10C487C", Offset = "0x10C487C", VA = "0x10C487C")]
	public static int GetCustomCampaignRatedDifficulty(long guid)
	{
		return default(int);
	}

	[Token(Token = "0x60013D7")]
	[Address(RVA = "0x10C4964", Offset = "0x10C4964", VA = "0x10C4964")]
	public static void SetCustomCampaignRatedRating(long guid, int rating)
	{
	}

	[Token(Token = "0x60013D8")]
	[Address(RVA = "0x10C4ABC", Offset = "0x10C4ABC", VA = "0x10C4ABC")]
	public static int GetCustomCampaignRatedRating(long guid)
	{
		return default(int);
	}

	[Token(Token = "0x60013D9")]
	[Address(RVA = "0x10C4BA4", Offset = "0x10C4BA4", VA = "0x10C4BA4")]
	public static void AddCustomCampaignFavorite(long guid)
	{
	}

	[Token(Token = "0x60013DA")]
	[Address(RVA = "0x10C4C38", Offset = "0x10C4C38", VA = "0x10C4C38")]
	public static bool HaveCustomCampaignFavorite(long guid)
	{
		return default(bool);
	}

	[Token(Token = "0x60013DB")]
	[Address(RVA = "0x10C4D34", Offset = "0x10C4D34", VA = "0x10C4D34")]
	public static List<long> GetCustomCampaignFavorites()
	{
		return null;
	}

	[Token(Token = "0x60013DC")]
	[Address(RVA = "0x10C4D98", Offset = "0x10C4D98", VA = "0x10C4D98")]
	public static void RemoveCustomCampaignFavorite(long guid)
	{
	}

	[Token(Token = "0x60013DD")]
	[Address(RVA = "0x10C4EE8", Offset = "0x10C4EE8", VA = "0x10C4EE8")]
	public static void SetCustomCampaignProgress(long guid, int mission)
	{
	}

	[Token(Token = "0x60013DE")]
	[Address(RVA = "0x10C50DC", Offset = "0x10C50DC", VA = "0x10C50DC")]
	public static bool HaveCustomCampaignProgress(long guid)
	{
		return default(bool);
	}

	[Token(Token = "0x60013DF")]
	[Address(RVA = "0x10C51D8", Offset = "0x10C51D8", VA = "0x10C51D8")]
	public static bool GetCustomCampaignProgress(long guid, out int mission)
	{
		return default(bool);
	}

	[Token(Token = "0x60013E0")]
	[Address(RVA = "0x10C5338", Offset = "0x10C5338", VA = "0x10C5338")]
	public static List<CustomCampaignProgress> GetCustomCampaignProgress()
	{
		return null;
	}

	[Token(Token = "0x60013E1")]
	[Address(RVA = "0x10C539C", Offset = "0x10C539C", VA = "0x10C539C")]
	public static long[] GetCustomCampaignProgressGuids()
	{
		return null;
	}

	[Token(Token = "0x60013E2")]
	[Address(RVA = "0x10C5504", Offset = "0x10C5504", VA = "0x10C5504")]
	public static void RemoveCustomCampaignProgress(long guid)
	{
	}

	[Token(Token = "0x60013E3")]
	[Address(RVA = "0x10C5654", Offset = "0x10C5654", VA = "0x10C5654")]
	public static void AddFinishedCustomCampaign(long guid)
	{
	}

	[Token(Token = "0x60013E4")]
	[Address(RVA = "0x10C5718", Offset = "0x10C5718", VA = "0x10C5718")]
	public static bool IsFinishedCustomCampaign(long guid)
	{
		return default(bool);
	}

	[Token(Token = "0x60013E5")]
	[Address(RVA = "0x10C5814", Offset = "0x10C5814", VA = "0x10C5814")]
	public static void AddNotLoggedInMultiplayerScore(int points, int type)
	{
	}

	[Token(Token = "0x60013E6")]
	[Address(RVA = "0x10C5B94", Offset = "0x10C5B94", VA = "0x10C5B94")]
	public static ulong GetGiftGiverUID()
	{
		return default(ulong);
	}

	[Token(Token = "0x60013E7")]
	[Address(RVA = "0x10C5BF8", Offset = "0x10C5BF8", VA = "0x10C5BF8")]
	public static List<int> GetGiftCodes()
	{
		return null;
	}

	[Token(Token = "0x60013E8")]
	[Address(RVA = "0x10C5C5C", Offset = "0x10C5C5C", VA = "0x10C5C5C")]
	public static void UpdateValidGiftCodes(Dictionary<int, string> code2save)
	{
	}

	[Token(Token = "0x60013E9")]
	[Address(RVA = "0x10C60FC", Offset = "0x10C60FC", VA = "0x10C60FC")]
	public static void AddGiftCode(int code)
	{
	}

	[Token(Token = "0x60013EA")]
	[Address(RVA = "0x10C618C", Offset = "0x10C618C", VA = "0x10C618C")]
	public static uint GetSaveCloudUserId()
	{
		return default(uint);
	}

	[Token(Token = "0x60013EB")]
	[Address(RVA = "0x10C62D0", Offset = "0x10C62D0", VA = "0x10C62D0")]
	public static uint GetSaveCloudUserId(string commonSave)
	{
		return default(uint);
	}

	[Token(Token = "0x60013EC")]
	[Address(RVA = "0x10C6354", Offset = "0x10C6354", VA = "0x10C6354")]
	public static CloudSave_Saves ExportCloudSave()
	{
		return null;
	}

	[Token(Token = "0x60013ED")]
	[Address(RVA = "0x10C6638", Offset = "0x10C6638", VA = "0x10C6638")]
	public static string ExportGameplayCloudSave()
	{
		return null;
	}

	[Token(Token = "0x60013EE")]
	[Address(RVA = "0x10C69C4", Offset = "0x10C69C4", VA = "0x10C69C4")]
	public static void ImportCloudSave(CloudSave_Saves saves)
	{
	}

	[Token(Token = "0x60013EF")]
	[Address(RVA = "0x10C6BC8", Offset = "0x10C6BC8", VA = "0x10C6BC8")]
	public static void ImportGameplayCloudSave(string cloudSave)
	{
	}

	[Token(Token = "0x60013F0")]
	[Address(RVA = "0x10C6F7C", Offset = "0x10C6F7C", VA = "0x10C6F7C")]
	public static void DeleteSaveOnRegisterNewCloudAccount()
	{
	}

	[Token(Token = "0x60013F1")]
	[Address(RVA = "0x10C6FD8", Offset = "0x10C6FD8", VA = "0x10C6FD8")]
	public static string GetSavePreviewLabels()
	{
		return null;
	}

	[Token(Token = "0x60013F2")]
	[Address(RVA = "0x10C71D4", Offset = "0x10C71D4", VA = "0x10C71D4")]
	public static string GetSavePreview(CloudSave_Saves saves)
	{
		return null;
	}

	[Token(Token = "0x60013F3")]
	[Address(RVA = "0x10C76A0", Offset = "0x10C76A0", VA = "0x10C76A0")]
	public static CloudSave_GameInterface.CompareSaveResult CompareSave(CloudSave_Saves saves1, CloudSave_Saves saves2)
	{
		return default(CloudSave_GameInterface.CompareSaveResult);
	}

	[Token(Token = "0x60013F4")]
	[Address(RVA = "0x10C7928", Offset = "0x10C7928", VA = "0x10C7928")]
	public static void TestCloudSave(string save)
	{
	}

	[Token(Token = "0x60013F5")]
	[Address(RVA = "0x10C7A2C", Offset = "0x10C7A2C", VA = "0x10C7A2C")]
	public static void SetDefaultPlane(PlayerPlane pp)
	{
	}

	[Token(Token = "0x60013F6")]
	[Address(RVA = "0x10C7B44", Offset = "0x10C7B44", VA = "0x10C7B44")]
	public Player()
	{
	}
}
[Token(Token = "0x20002DF")]
public enum ePlaneState
{
	[Token(Token = "0x4001526")]
	stayInBase,
	[Token(Token = "0x4001527")]
	fly
}
[Token(Token = "0x20002E0")]
public enum ePilotSkill
{
	[Token(Token = "0x4001529")]
	fighterPilot,
	[Token(Token = "0x400152A")]
	bomberPilot,
	[Token(Token = "0x400152B")]
	gunner,
	[Token(Token = "0x400152C")]
	bombardier,
	[Token(Token = "0x400152D")]
	num
}
[Token(Token = "0x20002E1")]
public enum eUpgrade
{
	[Token(Token = "0x400152F")]
	enginePower,
	[Token(Token = "0x4001530")]
	engineCooling,
	[Token(Token = "0x4001531")]
	handling,
	[Token(Token = "0x4001532")]
	armor,
	[Token(Token = "0x4001533")]
	cannonCooling,
	[Token(Token = "0x4001534")]
	crew,
	[Token(Token = "0x4001535")]
	ammo,
	[Token(Token = "0x4001536")]
	num
}
[Token(Token = "0x20002E2")]
public class PlayerPlaneTransitionState
{
	[Token(Token = "0x4001537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int HP;

	[Token(Token = "0x4001538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int ammo20mm;

	[Token(Token = "0x4001539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int rockets;

	[Token(Token = "0x400153A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int bombs;

	[Token(Token = "0x400153B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int torpedoes;

	[Token(Token = "0x400153C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool current;

	[Token(Token = "0x60013FB")]
	[Address(RVA = "0x10BF578", Offset = "0x10BF578", VA = "0x10BF578")]
	public PlayerPlaneTransitionState()
	{
	}
}
[Serializable]
[Token(Token = "0x20002E3")]
public class PlayerPlane
{
	[Token(Token = "0x20002E4")]
	public delegate void PlaneEvent(PlayerPlane pp, PlaneBody pb);

	[Token(Token = "0x400153D")]
	public const int maxUpgrade = 5;

	[Token(Token = "0x400153E")]
	public const int maxBotUpgrade = 5;

	[Token(Token = "0x400153F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string prefabID;

	[Token(Token = "0x4001540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject prefab;

	[Token(Token = "0x4001541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string name;

	[Token(Token = "0x4001542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string nameShort;

	[Token(Token = "0x4001543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int[] upgrades;

	[NonSerialized]
	[Token(Token = "0x4001544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material decalMaterial;

	[Token(Token = "0x4001545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public PlayerPlaneTransitionState transitionState;

	[Token(Token = "0x4001546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int loadoutID;

	[Token(Token = "0x4001547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int colorID;

	[Token(Token = "0x4001548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public PlaneColorSetup colorSetup;

	[Token(Token = "0x4001549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int state;

	[Token(Token = "0x400154A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool isDefaultPlane;

	[Token(Token = "0x400154B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int flyQueueNum;

	[Token(Token = "0x400154C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PlaneEvent planeSpawned;

	[Token(Token = "0x400154D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string cachedPrefabID;

	[Token(Token = "0x400154E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static GameObject cachedPrefab;

	[Token(Token = "0x60013FC")]
	[Address(RVA = "0x10CDAA8", Offset = "0x10CDAA8", VA = "0x10CDAA8")]
	public static void FirePlaneSpawned(PlayerPlane pp, PlaneBody pb)
	{
	}

	[Token(Token = "0x60013FD")]
	[Address(RVA = "0x10BCD98", Offset = "0x10BCD98", VA = "0x10BCD98")]
	public PlayerPlane()
	{
	}

	[Token(Token = "0x60013FE")]
	[Address(RVA = "0x10CDB3C", Offset = "0x10CDB3C", VA = "0x10CDB3C")]
	public PlayerPlane Clone()
	{
		return null;
	}

	[Token(Token = "0x60013FF")]
	[Address(RVA = "0x10BD9F8", Offset = "0x10BD9F8", VA = "0x10BD9F8")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6001400")]
	[Address(RVA = "0x10CDBC0", Offset = "0x10CDBC0", VA = "0x10CDBC0")]
	public void SetDecalMaterial(Material m)
	{
	}

	[Token(Token = "0x6001401")]
	[Address(RVA = "0x10CDBC8", Offset = "0x10CDBC8", VA = "0x10CDBC8")]
	public Material GetDecalMaterial()
	{
		return null;
	}

	[Token(Token = "0x6001402")]
	[Address(RVA = "0x10CDBD0", Offset = "0x10CDBD0", VA = "0x10CDBD0")]
	private static GameObject GetCachedPrefab(string prefabID)
	{
		return null;
	}

	[Token(Token = "0x6001403")]
	[Address(RVA = "0x10CDD0C", Offset = "0x10CDD0C", VA = "0x10CDD0C")]
	public static string GetName(string prefabID)
	{
		return null;
	}

	[Token(Token = "0x6001404")]
	[Address(RVA = "0x10CDD9C", Offset = "0x10CDD9C", VA = "0x10CDD9C")]
	public static string GetNameShort(string prefabID)
	{
		return null;
	}

	[Token(Token = "0x6001405")]
	[Address(RVA = "0x10CDE2C", Offset = "0x10CDE2C", VA = "0x10CDE2C")]
	public static int GetPilotsCount(string prefabID)
	{
		return default(int);
	}

	[Token(Token = "0x6001406")]
	[Address(RVA = "0x10CDEC4", Offset = "0x10CDEC4", VA = "0x10CDEC4")]
	public static BombBay GetBombBay(string prefabID)
	{
		return null;
	}

	[Token(Token = "0x6001407")]
	[Address(RVA = "0x10CDF48", Offset = "0x10CDF48", VA = "0x10CDF48")]
	public static PlaneBody GetPrefabPlaneBody(string prefabID)
	{
		return null;
	}

	[Token(Token = "0x6001408")]
	[Address(RVA = "0x10CDFCC", Offset = "0x10CDFCC", VA = "0x10CDFCC")]
	public static int GetGunnersCount(string prefabID)
	{
		return default(int);
	}

	[Token(Token = "0x6001409")]
	[Address(RVA = "0x10BD7E0", Offset = "0x10BD7E0", VA = "0x10BD7E0")]
	public GameObject GetPrefab()
	{
		return null;
	}

	[Token(Token = "0x600140A")]
	[Address(RVA = "0x10CE06C", Offset = "0x10CE06C", VA = "0x10CE06C")]
	public string GetName()
	{
		return null;
	}

	[Token(Token = "0x600140B")]
	[Address(RVA = "0x10CE108", Offset = "0x10CE108", VA = "0x10CE108")]
	public string GetNameShort()
	{
		return null;
	}

	[Token(Token = "0x600140C")]
	[Address(RVA = "0x10CE1A4", Offset = "0x10CE1A4", VA = "0x10CE1A4")]
	public ePilotSkill[] GetPilotTypes()
	{
		return null;
	}

	[Token(Token = "0x600140D")]
	[Address(RVA = "0x10BCDFC", Offset = "0x10BCDFC", VA = "0x10BCDFC")]
	public void InitUpgrades()
	{
	}

	[Token(Token = "0x600140E")]
	[Address(RVA = "0x10C01F4", Offset = "0x10C01F4", VA = "0x10C01F4")]
	public void InitMaxUpgrades()
	{
	}

	[Token(Token = "0x600140F")]
	[Address(RVA = "0x10CE208", Offset = "0x10CE208", VA = "0x10CE208")]
	public void InitCustomMissionUpgrades(int lvl)
	{
	}

	[Token(Token = "0x6001410")]
	[Address(RVA = "0x10CE270", Offset = "0x10CE270", VA = "0x10CE270")]
	public void InitBotUpgrades(int[] _upgrades)
	{
	}

	[Token(Token = "0x6001411")]
	[Address(RVA = "0x10CE34C", Offset = "0x10CE34C", VA = "0x10CE34C")]
	public int GetUpgrade(int i)
	{
		return default(int);
	}

	[Token(Token = "0x6001412")]
	[Address(RVA = "0x10CE388", Offset = "0x10CE388", VA = "0x10CE388")]
	public bool HasAnyUpgrade()
	{
		return default(bool);
	}

	[Token(Token = "0x6001413")]
	[Address(RVA = "0x10CE3DC", Offset = "0x10CE3DC", VA = "0x10CE3DC")]
	public void AddUpgrade(int i)
	{
	}

	[Token(Token = "0x6001414")]
	[Address(RVA = "0x10CE4F0", Offset = "0x10CE4F0", VA = "0x10CE4F0")]
	public void SetUpgrade(int i, int v)
	{
	}

	[Token(Token = "0x6001415")]
	[Address(RVA = "0x10CE450", Offset = "0x10CE450", VA = "0x10CE450")]
	public bool CanUpgrade(int i)
	{
		return default(bool);
	}

	[Token(Token = "0x6001416")]
	[Address(RVA = "0x10CE554", Offset = "0x10CE554", VA = "0x10CE554")]
	public string GetPlaneName()
	{
		return null;
	}

	[Token(Token = "0x6001417")]
	[Address(RVA = "0x10C116C", Offset = "0x10C116C", VA = "0x10C116C")]
	public string GetSaveString()
	{
		return null;
	}

	[Token(Token = "0x6001418")]
	[Address(RVA = "0x10C1CC8", Offset = "0x10C1CC8", VA = "0x10C1CC8")]
	public void LoadFromString(string s)
	{
	}
}
[Token(Token = "0x20002E5")]
public class PlayerPlanes : MonoBehaviour
{
	[Token(Token = "0x400154F")]
	public const int maxMultiNewFavoritesCnt = 3;

	[Token(Token = "0x4001550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int newPlaneColorID;

	[Token(Token = "0x4001551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform hangarPos;

	[Token(Token = "0x4001552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameObject[] plane;

	[Token(Token = "0x4001553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Renderer[] planeStateIcon;

	[Token(Token = "0x4001554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMesh[] planeStateText;

	[Token(Token = "0x4001555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material planeState_Commander;

	[Token(Token = "0x4001556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material planeState_Support;

	[Token(Token = "0x4001557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material planeState_Stay;

	[Token(Token = "0x4001558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Material planeState_MultiFavorite;

	[Token(Token = "0x4001559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Material planeState_MultiFavoriteDefault;

	[Token(Token = "0x400155A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Material planeState_MultiNotFavorite;

	[Token(Token = "0x400155B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Renderer buttonChangeStatusIcon;

	[Token(Token = "0x400155C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TextMesh buttonChangeStatusText;

	[Token(Token = "0x400155D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Material buttonChangeStatusIcon_MultiFavorite;

	[Token(Token = "0x400155E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Material buttonChangeStatusIcon_MultiFavoriteDefault;

	[Token(Token = "0x400155F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Material buttonChangeStatusIcon_MultiNotFavorite;

	[Token(Token = "0x4001560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject buttonRepaintMulti;

	[Token(Token = "0x4001561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject buttonRepaintMulti_disabled;

	[Token(Token = "0x4001562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject buttonPlanesList;

	[Token(Token = "0x4001563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject windowShopInfo;

	[Token(Token = "0x4001564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public TextMesh tmP;

	[Token(Token = "0x4001565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject buttonBuyPlaneEnabled;

	[Token(Token = "0x4001566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject buttonBuyPlaneDisabled;

	[Token(Token = "0x4001567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static GameObject currentPlane;

	[Token(Token = "0x4001568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static GameObject currentPlanePrefab;

	[Token(Token = "0x4001569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static bool currentPlaneShop;

	[Token(Token = "0x400156A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private int sIndex;

	[Token(Token = "0x400156B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static PlayerPlane playerPlane;

	[Token(Token = "0x400156C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static PlaneBody planeBody;

	[Token(Token = "0x400156D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static PlayerPlanes instance;

	[Token(Token = "0x400156E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static int tutorialFreePlaneMaxPrice_basicMode;

	[Token(Token = "0x400156F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private MultiplayerSync.SyncState mSync;

	[Token(Token = "0x4001570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static string[] bombName;

	[Token(Token = "0x600141E")]
	[Address(RVA = "0x10CE624", Offset = "0x10CE624", VA = "0x10CE624")]
	private void Awake()
	{
	}

	[Token(Token = "0x600141F")]
	[Address(RVA = "0x10CE6D0", Offset = "0x10CE6D0", VA = "0x10CE6D0")]
	public void Start()
	{
	}

	[Token(Token = "0x6001420")]
	[Address(RVA = "0x10CEB58", Offset = "0x10CEB58", VA = "0x10CEB58")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001421")]
	[Address(RVA = "0x10BCC2C", Offset = "0x10BCC2C", VA = "0x10BCC2C")]
	public static int GetShopPlanesCount()
	{
		return default(int);
	}

	[Token(Token = "0x6001422")]
	[Address(RVA = "0x10BCB9C", Offset = "0x10BCB9C", VA = "0x10BCB9C")]
	public static GameObject GetShopPlane(int i)
	{
		return null;
	}

	[Token(Token = "0x6001423")]
	[Address(RVA = "0x10CEC20", Offset = "0x10CEC20", VA = "0x10CEC20")]
	public static void LoadPlane(PlayerPlane pp)
	{
	}

	[Token(Token = "0x6001424")]
	[Address(RVA = "0x10CE914", Offset = "0x10CE914", VA = "0x10CE914")]
	private void LoadFirstPlayerPlane()
	{
	}

	[Token(Token = "0x6001425")]
	[Address(RVA = "0x10CEC94", Offset = "0x10CEC94", VA = "0x10CEC94")]
	private void LoadPlayerPlane(PlayerPlane pp)
	{
	}

	[Token(Token = "0x6001426")]
	[Address(RVA = "0x10CF318", Offset = "0x10CF318", VA = "0x10CF318")]
	public void StartRandSync()
	{
	}

	[Token(Token = "0x6001427")]
	[Address(RVA = "0x10CF3D8", Offset = "0x10CF3D8", VA = "0x10CF3D8")]
	public void StopRandSync()
	{
	}

	[Token(Token = "0x6001428")]
	[Address(RVA = "0x10CFE1C", Offset = "0x10CFE1C", VA = "0x10CFE1C")]
	public static PlaneBody PreviewPlane(PlayerPlane pp, int decalResolution = 0)
	{
		return null;
	}

	[Token(Token = "0x6001429")]
	[Address(RVA = "0x10CFE8C", Offset = "0x10CFE8C", VA = "0x10CFE8C")]
	private static PlaneBody _PreviewPlane(PlayerPlane pp, int decalResolution = 0)
	{
		return null;
	}

	[Token(Token = "0x600142A")]
	[Address(RVA = "0x10CF0E8", Offset = "0x10CF0E8", VA = "0x10CF0E8")]
	private void SetFirstPlaneAsDefault([Optional] PlayerPlane except)
	{
	}

	[Token(Token = "0x600142B")]
	[Address(RVA = "0x10D0208", Offset = "0x10D0208", VA = "0x10D0208")]
	public void ChangePlaneState()
	{
	}

	[Token(Token = "0x600142C")]
	[Address(RVA = "0x10D08C8", Offset = "0x10D08C8", VA = "0x10D08C8")]
	public void TrySetFly(PlayerPlane pp)
	{
	}

	[Token(Token = "0x600142D")]
	[Address(RVA = "0x10D0B8C", Offset = "0x10D0B8C", VA = "0x10D0B8C")]
	public void SaveGameNow()
	{
	}

	[Token(Token = "0x600142E")]
	[Address(RVA = "0x10D0BE4", Offset = "0x10D0BE4", VA = "0x10D0BE4")]
	public static void PrintState()
	{
	}

	[Token(Token = "0x600142F")]
	[Address(RVA = "0x10D0C50", Offset = "0x10D0C50", VA = "0x10D0C50")]
	public void ChangePlaneStatus()
	{
	}

	[Token(Token = "0x6001430")]
	[Address(RVA = "0x10CF440", Offset = "0x10CF440", VA = "0x10CF440")]
	private void UpdateCheckboxes()
	{
	}

	[Token(Token = "0x6001431")]
	[Address(RVA = "0x10D0C6C", Offset = "0x10D0C6C", VA = "0x10D0C6C")]
	public void LoadShopPlane(GameObject p)
	{
	}

	[Token(Token = "0x6001432")]
	[Address(RVA = "0x10D1344", Offset = "0x10D1344", VA = "0x10D1344")]
	public static int GetTutorialFreePlanePurchaseMaxPrice()
	{
		return default(int);
	}

	[Token(Token = "0x6001433")]
	[Address(RVA = "0x10D13A8", Offset = "0x10D13A8", VA = "0x10D13A8")]
	public void TryPurchasePlane()
	{
	}

	[Token(Token = "0x6001434")]
	[Address(RVA = "0x10D191C", Offset = "0x10D191C", VA = "0x10D191C")]
	public static void SellPlane()
	{
	}

	[Token(Token = "0x6001435")]
	[Address(RVA = "0x10D1AC8", Offset = "0x10D1AC8", VA = "0x10D1AC8")]
	public static int GetSellPrice()
	{
		return default(int);
	}

	[Token(Token = "0x6001436")]
	[Address(RVA = "0x10D1BB4", Offset = "0x10D1BB4", VA = "0x10D1BB4")]
	public static void BasicMode_Build(eBuilding type)
	{
	}

	[Token(Token = "0x6001437")]
	[Address(RVA = "0x10D179C", Offset = "0x10D179C", VA = "0x10D179C")]
	public static void BasicMode_UpdateBuildingsForNewPlane(string prefabID)
	{
	}

	[Token(Token = "0x6001438")]
	[Address(RVA = "0x10D0DB4", Offset = "0x10D0DB4", VA = "0x10D0DB4")]
	private void LoadShopPlane()
	{
	}

	[Token(Token = "0x6001439")]
	[Address(RVA = "0x10D172C", Offset = "0x10D172C", VA = "0x10D172C")]
	public int Price()
	{
		return default(int);
	}

	[Token(Token = "0x600143A")]
	[Address(RVA = "0x10D1C20", Offset = "0x10D1C20", VA = "0x10D1C20")]
	public void Loadout(int id)
	{
	}

	[Token(Token = "0x600143B")]
	[Address(RVA = "0x10D1D84", Offset = "0x10D1D84", VA = "0x10D1D84")]
	private static string GetBombName(eMissile m)
	{
		return null;
	}

	[Token(Token = "0x600143C")]
	[Address(RVA = "0x10D1E2C", Offset = "0x10D1E2C", VA = "0x10D1E2C")]
	private static string GetRocketName(eMissile m)
	{
		return null;
	}

	[Token(Token = "0x600143D")]
	[Address(RVA = "0x10D1E5C", Offset = "0x10D1E5C", VA = "0x10D1E5C")]
	public static string GetBombName(eNation nation, eMissile m)
	{
		return null;
	}

	[Token(Token = "0x600143E")]
	[Address(RVA = "0x10D1F30", Offset = "0x10D1F30", VA = "0x10D1F30")]
	public static string GetPlaneParamText(PlaneBody pb, PlayerPlane pp, out int currentSelectionIdx)
	{
		return null;
	}

	[Token(Token = "0x600143F")]
	[Address(RVA = "0x10D2E5C", Offset = "0x10D2E5C", VA = "0x10D2E5C")]
	public static string GetPlaneParamCannon(PlaneBody pb, PlayerPlane pp)
	{
		return null;
	}

	[Token(Token = "0x6001440")]
	[Address(RVA = "0x10D3090", Offset = "0x10D3090", VA = "0x10D3090")]
	public PlayerPlanes()
	{
	}
}
[Token(Token = "0x20002E6")]
public class PlayerPlanesList : MonoBehaviour
{
	[Token(Token = "0x4001571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] prefabs;

	[Token(Token = "0x4001572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int colorID;

	[Token(Token = "0x4001573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected GameObject[] prefabsNoBombersGunners;

	[Token(Token = "0x4001574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PlayerPlanesList[] nationPlanes;

	[Token(Token = "0x6001442")]
	[Address(RVA = "0x10D35F4", Offset = "0x10D35F4", VA = "0x10D35F4")]
	private static void Init()
	{
	}

	[Token(Token = "0x6001443")]
	[Address(RVA = "0x10CE90C", Offset = "0x10CE90C", VA = "0x10CE90C")]
	public static GameObject[] GetPlanes(int n)
	{
		return null;
	}

	[Token(Token = "0x6001444")]
	[Address(RVA = "0x10C0170", Offset = "0x10C0170", VA = "0x10C0170")]
	public static GameObject[] GetPlanes(eNation n)
	{
		return null;
	}

	[Token(Token = "0x6001445")]
	[Address(RVA = "0x10D3A1C", Offset = "0x10D3A1C", VA = "0x10D3A1C")]
	public static GameObject[] GetPlanesNoBombersGunners(int n)
	{
		return null;
	}

	[Token(Token = "0x6001446")]
	[Address(RVA = "0x10D3A20", Offset = "0x10D3A20", VA = "0x10D3A20")]
	public static GameObject[] GetPlanesNoBombersGunners(eNation n)
	{
		return null;
	}

	[Token(Token = "0x6001447")]
	[Address(RVA = "0x10CE910", Offset = "0x10CE910", VA = "0x10CE910")]
	public static int GetColorID(int n)
	{
		return default(int);
	}

	[Token(Token = "0x6001448")]
	[Address(RVA = "0x10D3AA4", Offset = "0x10D3AA4", VA = "0x10D3AA4")]
	public static int GetColorID(eNation n)
	{
		return default(int);
	}

	[Token(Token = "0x6001449")]
	[Address(RVA = "0x10D3B28", Offset = "0x10D3B28", VA = "0x10D3B28")]
	public PlayerPlanesList()
	{
	}
}
[Token(Token = "0x20002E7")]
public class PopupMenu : MonoBehaviour
{
	[Token(Token = "0x20002E8")]
	public delegate void ItemCallback(object sender);

	[Token(Token = "0x20002E9")]
	public class BuiltData
	{
		[Token(Token = "0x400157C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string text;

		[Token(Token = "0x400157D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material icon;

		[Token(Token = "0x400157E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ItemCallback onClick;

		[Token(Token = "0x6001458")]
		[Address(RVA = "0xD8BB30", Offset = "0xD8BB30", VA = "0xD8BB30")]
		public BuiltData(string text, [Optional] Material icon, [Optional] ItemCallback onClick)
		{
		}
	}

	[Token(Token = "0x4001575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private PopupMenuItem listitem;

	[Token(Token = "0x4001576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Vector2 bounds;

	[Token(Token = "0x4001577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector2 itemSize;

	[Token(Token = "0x4001578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector2 popupSize;

	[Token(Token = "0x4001579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private PopupMenuItem[] items;

	[Token(Token = "0x400157A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91B5BC", Offset = "0x91B5BC")]
	private object <Context>k__BackingField;

	[Token(Token = "0x400157B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91B5CC", Offset = "0x91B5CC")]
	private static PopupMenu <Active>k__BackingField;

	[Token(Token = "0x1700010C")]
	public object Context
	{
		[Token(Token = "0x600144A")]
		[Address(RVA = "0x117CA04", Offset = "0x117CA04", VA = "0x117CA04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x929A14", Offset = "0x929A14")]
		get
		{
			return null;
		}
		[Token(Token = "0x600144B")]
		[Address(RVA = "0x117CA0C", Offset = "0x117CA0C", VA = "0x117CA0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x929A24", Offset = "0x929A24")]
		set
		{
		}
	}

	[Token(Token = "0x1700010D")]
	public static PopupMenu Active
	{
		[Token(Token = "0x600144C")]
		[Address(RVA = "0x117CA14", Offset = "0x117CA14", VA = "0x117CA14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x929A34", Offset = "0x929A34")]
		get
		{
			return null;
		}
		[Token(Token = "0x600144D")]
		[Address(RVA = "0x117CA60", Offset = "0x117CA60", VA = "0x117CA60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x929A44", Offset = "0x929A44")]
		private set
		{
		}
	}

	[Token(Token = "0x600144E")]
	[Address(RVA = "0x117CAB0", Offset = "0x117CAB0", VA = "0x117CAB0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600144F")]
	[Address(RVA = "0x117CAE0", Offset = "0x117CAE0", VA = "0x117CAE0")]
	public void Build(BuiltData[] labels)
	{
	}

	[Token(Token = "0x6001450")]
	[Address(RVA = "0x117D004", Offset = "0x117D004", VA = "0x117D004")]
	public void Show(Vector3 position, Quaternion rotation)
	{
	}

	[Token(Token = "0x6001451")]
	[Address(RVA = "0x117D138", Offset = "0x117D138", VA = "0x117D138")]
	public void Hide()
	{
	}

	[Token(Token = "0x6001452")]
	[Address(RVA = "0x117D1A4", Offset = "0x117D1A4", VA = "0x117D1A4")]
	public PopupMenuItem GetItem(int idx)
	{
		return null;
	}

	[Token(Token = "0x6001453")]
	[Address(RVA = "0x117D1E0", Offset = "0x117D1E0", VA = "0x117D1E0")]
	public PopupMenu()
	{
	}
}
[Token(Token = "0x20002EA")]
internal static class PopupMenuItemHelper
{
	[Token(Token = "0x6001459")]
	[Address(RVA = "0x117D618", Offset = "0x117D618", VA = "0x117D618")]
	public static void PrepareMuteState(this PopupMenuItem item, bool muted, bool micAvailable, bool litMaterial = true)
	{
	}

	[Token(Token = "0x600145A")]
	[Address(RVA = "0x117D70C", Offset = "0x117D70C", VA = "0x117D70C")]
	public static void PrepareAddFriend(this PopupMenuItem item, Photon.Realtime.Player punPlayer, bool litMaterial = true)
	{
	}

	[Token(Token = "0x600145B")]
	[Address(RVA = "0x117D94C", Offset = "0x117D94C", VA = "0x117D94C")]
	public static void PrepareAddFriend(this PopupMenuItem item, NetPlayer player, bool litMaterial = true)
	{
	}

	[Token(Token = "0x600145C")]
	[Address(RVA = "0x117D764", Offset = "0x117D764", VA = "0x117D764")]
	public static void PrepareAddFriend(this PopupMenuItem item, NetFriends.Platform playerPlatform, ulong userId, bool litMaterial = true)
	{
	}
}
[Token(Token = "0x20002EB")]
public class PopupMenuItem : MonoBehaviour, IMUIHoverable
{
	[Token(Token = "0x400157F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshRenderer bkg;

	[Token(Token = "0x4001580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TextMesh textMesh;

	[Token(Token = "0x4001581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private MeshRenderer icon;

	[Token(Token = "0x4001582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private MUI_setup_TextArea area;

	[Token(Token = "0x4001583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private BoxCollider collider;

	[Token(Token = "0x4001584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Material hoverMaterial;

	[Token(Token = "0x4001585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material defaultMaterial;

	[Token(Token = "0x4001586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Color textColor;

	[Token(Token = "0x4001587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private PopupMenu.ItemCallback onClick;

	[Token(Token = "0x4001588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private PopupMenu parent;

	[Token(Token = "0x4001589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool activeSelf;

	[Token(Token = "0x600145D")]
	[Address(RVA = "0x117CE84", Offset = "0x117CE84", VA = "0x117CE84")]
	public void Setup(PopupMenu parent, PopupMenu.BuiltData data)
	{
	}

	[Token(Token = "0x600145E")]
	[Address(RVA = "0x117D1E8", Offset = "0x117D1E8", VA = "0x117D1E8")]
	public void SetActive(bool active)
	{
	}

	[Token(Token = "0x600145F")]
	[Address(RVA = "0x117CE58", Offset = "0x117CE58", VA = "0x117CE58")]
	public Vector2 GetSize()
	{
		return default(Vector2);
	}

	[Token(Token = "0x6001460")]
	[Address(RVA = "0x117D234", Offset = "0x117D234", VA = "0x117D234")]
	public void SetText(string text)
	{
	}

	[Token(Token = "0x6001461")]
	[Address(RVA = "0x117D2D0", Offset = "0x117D2D0", VA = "0x117D2D0")]
	public void SetIcon(Material icon)
	{
	}

	[Token(Token = "0x6001462")]
	[Address(RVA = "0x117D3A0", Offset = "0x117D3A0", VA = "0x117D3A0")]
	private void Click()
	{
	}

	[Token(Token = "0x6001463")]
	[Address(RVA = "0x117D428", Offset = "0x117D428", VA = "0x117D428", Slot = "4")]
	public void OnHover(Vector3 point)
	{
	}

	[Token(Token = "0x6001464")]
	[Address(RVA = "0x117D5A0", Offset = "0x117D5A0", VA = "0x117D5A0", Slot = "5")]
	public void OnMove(Vector3 point)
	{
	}

	[Token(Token = "0x6001465")]
	[Address(RVA = "0x117D5A4", Offset = "0x117D5A4", VA = "0x117D5A4", Slot = "6")]
	public void OnLeave()
	{
	}

	[Token(Token = "0x6001466")]
	[Address(RVA = "0x117D48C", Offset = "0x117D48C", VA = "0x117D48C")]
	private void CloneClipProperties(Material prevMat, Material current)
	{
	}

	[Token(Token = "0x6001467")]
	[Address(RVA = "0x117D608", Offset = "0x117D608", VA = "0x117D608")]
	public PopupMenuItem()
	{
	}
}
[Serializable]
[Token(Token = "0x20002EC")]
internal class ProfilerDisplayItem
{
	[Token(Token = "0x400158A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string name;

	[Token(Token = "0x400158B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string statName;

	[Token(Token = "0x400158C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color color;

	[Token(Token = "0x400158D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maxHeight;

	[Token(Token = "0x6001468")]
	[Address(RVA = "0x117F7B8", Offset = "0x117F7B8", VA = "0x117F7B8")]
	public ProfilerDisplayItem()
	{
	}
}
[Token(Token = "0x20002ED")]
internal class ProfilerRecorderItem
{
	[Token(Token = "0x400158E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string name;

	[Token(Token = "0x400158F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float maxHeight;

	[Token(Token = "0x4001590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool frameTime;

	[Token(Token = "0x4001591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ProfilerRecorder recorder;

	[Token(Token = "0x4001592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<float> values;

	[Token(Token = "0x6001469")]
	[Address(RVA = "0x117F5DC", Offset = "0x117F5DC", VA = "0x117F5DC")]
	public ProfilerRecorderItem()
	{
	}
}
[Token(Token = "0x20002EE")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x9182C4", Offset = "0x9182C4")]
public class ProfilerDisplay : MonoBehaviour
{
	[Token(Token = "0x4001593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ProfilerDisplayItem[] stats;

	[Token(Token = "0x4001594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject prefab_label;

	[Token(Token = "0x4001595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject prefab_label_next;

	[Token(Token = "0x4001596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject prefab_value;

	[Token(Token = "0x4001597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject prefab_value_next;

	[Token(Token = "0x4001598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject prefab_label_line;

	[Token(Token = "0x4001599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject prefab_label_line_next;

	[Token(Token = "0x400159A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject prefab_line;

	[Token(Token = "0x400159B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private BoxCollider renderArea;

	[Token(Token = "0x400159C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private float timeSpan;

	[Token(Token = "0x400159D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SerializeField]
	private float lineWidth;

	[Token(Token = "0x400159E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private float maxFPS;

	[Token(Token = "0x400159F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<ProfilerRecorderItem> recorders;

	[Token(Token = "0x40015A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static List<float> frameTimes;

	[Token(Token = "0x40015A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<LineRenderer> lines;

	[Token(Token = "0x40015A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<TextMesh> values;

	[Token(Token = "0x40015A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 minPos;

	[Token(Token = "0x40015A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Vector3 maxPos;

	[Token(Token = "0x40015A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Vector3[] posBuff;

	[Token(Token = "0x600146A")]
	[Address(RVA = "0x117DBB8", Offset = "0x117DBB8", VA = "0x117DBB8")]
	private void Start()
	{
	}

	[Token(Token = "0x600146B")]
	[Address(RVA = "0x117EA18", Offset = "0x117EA18", VA = "0x117EA18")]
	private void Update()
	{
	}

	[Token(Token = "0x600146C")]
	[Address(RVA = "0x117DFC4", Offset = "0x117DFC4", VA = "0x117DFC4")]
	private void CreateLabels()
	{
	}

	[Token(Token = "0x600146D")]
	[Address(RVA = "0x117E7AC", Offset = "0x117E7AC", VA = "0x117E7AC")]
	private void Initialize()
	{
	}

	[Token(Token = "0x600146E")]
	[Address(RVA = "0x117EA3C", Offset = "0x117EA3C", VA = "0x117EA3C")]
	private void UpdateRecorders()
	{
	}

	[Token(Token = "0x600146F")]
	[Address(RVA = "0x117EE58", Offset = "0x117EE58", VA = "0x117EE58")]
	private void UpdateLines()
	{
	}

	[Token(Token = "0x6001470")]
	[Address(RVA = "0x117F654", Offset = "0x117F654", VA = "0x117F654")]
	public ProfilerDisplay()
	{
	}
}
[Token(Token = "0x20002EF")]
public enum eRadarType
{
	[Token(Token = "0x40015A7")]
	none,
	[Token(Token = "0x40015A8")]
	triangle,
	[Token(Token = "0x40015A9")]
	diamond,
	[Token(Token = "0x40015AA")]
	round,
	[Token(Token = "0x40015AB")]
	II
}
[Token(Token = "0x20002F0")]
public class Radar : MonoBehaviour
{
	[Token(Token = "0x40015AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GameObject prefab;

	[Token(Token = "0x40015AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Color[] c;

	[Token(Token = "0x40015AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool on;

	[Token(Token = "0x40015AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool radarOff;

	[Token(Token = "0x6001472")]
	[Address(RVA = "0x1181CB0", Offset = "0x1181CB0", VA = "0x1181CB0")]
	public void Awake()
	{
	}

	[Token(Token = "0x6001473")]
	[Address(RVA = "0x1181D20", Offset = "0x1181D20", VA = "0x1181D20")]
	private static RadarSymbol Add(Transform t, eParty party, eRadarType type, bool isObjective, bool isExtraChallange)
	{
		return null;
	}

	[Token(Token = "0x6001474")]
	[Address(RVA = "0x1182528", Offset = "0x1182528", VA = "0x1182528")]
	public static RadarSymbol Add(Hull hull, Transform t, eParty party, eRadarType type, bool isObjective, bool isExtraChallange)
	{
		return null;
	}

	[Token(Token = "0x6001475")]
	[Address(RVA = "0x1182E9C", Offset = "0x1182E9C", VA = "0x1182E9C")]
	public static void ExchangeSymbol(Hull from, Hull to)
	{
	}

	[Token(Token = "0x6001476")]
	[Address(RVA = "0x1183130", Offset = "0x1183130", VA = "0x1183130")]
	public Radar()
	{
	}
}
[Token(Token = "0x20002F1")]
public class RadarArrows : MonoBehaviour
{
	[Token(Token = "0x40015B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static RadarSymbol nearest;

	[Token(Token = "0x40015B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int direction;

	[Token(Token = "0x40015B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static bool show;

	[Token(Token = "0x40015B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject arrow;

	[Token(Token = "0x6001478")]
	[Address(RVA = "0x1183380", Offset = "0x1183380", VA = "0x1183380")]
	public static void AddNearest(RadarSymbol n)
	{
	}

	[Token(Token = "0x6001479")]
	[Address(RVA = "0x11835FC", Offset = "0x11835FC", VA = "0x11835FC")]
	public void Update()
	{
	}

	[Token(Token = "0x600147A")]
	[Address(RVA = "0x1183690", Offset = "0x1183690", VA = "0x1183690")]
	public void LateUpdate()
	{
	}

	[Token(Token = "0x600147B")]
	[Address(RVA = "0x1183B20", Offset = "0x1183B20", VA = "0x1183B20")]
	public static void Hide()
	{
	}

	[Token(Token = "0x600147C")]
	[Address(RVA = "0x11837C0", Offset = "0x11837C0", VA = "0x11837C0")]
	public void Show()
	{
	}

	[Token(Token = "0x600147D")]
	[Address(RVA = "0x1183B84", Offset = "0x1183B84", VA = "0x1183B84")]
	public RadarArrows()
	{
	}
}
[Token(Token = "0x20002F2")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x9182D8", Offset = "0x9182D8")]
public class RadarMesh : MonoBehaviour
{
	[StructLayout(2)]
	[Token(Token = "0x20002F3")]
	private struct MeshData
	{
		[Token(Token = "0x40015C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector4 pos;

		[Token(Token = "0x40015C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint color;

		[Token(Token = "0x40015C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector2 uv;
	}

	[Token(Token = "0x40015B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly VertexAttributeDescriptor[] layout;

	[Token(Token = "0x40015B5")]
	private const MeshUpdateFlags updateFlags = MeshUpdateFlags.DontValidateIndices | MeshUpdateFlags.DontResetBoneBounds | MeshUpdateFlags.DontNotifyMeshUsers | MeshUpdateFlags.DontRecalculateBounds;

	[Token(Token = "0x40015B6")]
	private const int TOTAL = 256;

	[Token(Token = "0x40015B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private NativeArray<MeshData> vertexData;

	[Token(Token = "0x40015B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly ushort[] indexData;

	[Token(Token = "0x40015B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RadarSymbol[] tracked;

	[Token(Token = "0x40015BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static RadarMesh instance;

	[Token(Token = "0x40015BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MeshRenderer r;

	[Token(Token = "0x40015BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private MeshFilter mf;

	[Token(Token = "0x40015BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Mesh mesh;

	[Token(Token = "0x40015BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int count;

	[Token(Token = "0x40015BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int lastCount;

	[Token(Token = "0x40015C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool disposed;

	[Token(Token = "0x40015C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
	public static bool onlyExtraChallange;

	[Token(Token = "0x40015C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
	public static bool isShowNames;

	[Token(Token = "0x40015C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB")]
	public static bool friendsOnRadar;

	[Token(Token = "0x600147F")]
	[Address(RVA = "0x1183BE4", Offset = "0x1183BE4", VA = "0x1183BE4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001480")]
	[Address(RVA = "0x1184170", Offset = "0x1184170", VA = "0x1184170")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001481")]
	[Address(RVA = "0x1184214", Offset = "0x1184214", VA = "0x1184214")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001482")]
	[Address(RVA = "0x118474C", Offset = "0x118474C", VA = "0x118474C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6001483")]
	[Address(RVA = "0x1184058", Offset = "0x1184058", VA = "0x1184058")]
	private void ProduceIndexData(int idx)
	{
	}

	[Token(Token = "0x6001484")]
	[Address(RVA = "0x11847F0", Offset = "0x11847F0", VA = "0x11847F0")]
	private void UpdateBuffer()
	{
	}

	[Token(Token = "0x6001485")]
	[Address(RVA = "0x1182358", Offset = "0x1182358", VA = "0x1182358")]
	public static void Add(RadarSymbol t)
	{
	}

	[Token(Token = "0x6001486")]
	[Address(RVA = "0x1184B04", Offset = "0x1184B04", VA = "0x1184B04")]
	public static void Remove(RadarSymbol t)
	{
	}

	[Token(Token = "0x6001487")]
	[Address(RVA = "0x1184630", Offset = "0x1184630", VA = "0x1184630")]
	private void UpdatePositions()
	{
	}

	[Token(Token = "0x6001488")]
	[Address(RVA = "0x11845B8", Offset = "0x11845B8", VA = "0x11845B8")]
	private void UpdateEnabled(bool e)
	{
	}

	[Token(Token = "0x6001489")]
	[Address(RVA = "0x11848D8", Offset = "0x11848D8", VA = "0x11848D8")]
	private unsafe void UpdateData(int idx, float scale, MeshData* ptrData)
	{
	}

	[Token(Token = "0x600148A")]
	[Address(RVA = "0x11854B8", Offset = "0x11854B8", VA = "0x11854B8")]
	public RadarMesh()
	{
	}
}
[Token(Token = "0x20002F4")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x9182EC", Offset = "0x9182EC")]
public class RadarSymbol : MonoBehaviour
{
	[Token(Token = "0x40015C7")]
	private const float playerNameScaleMulMin = 0.25f;

	[Token(Token = "0x40015C8")]
	private const float playerNameScaleMulMax = 1.25f;

	[Token(Token = "0x40015C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMesh playerName;

	[Token(Token = "0x40015CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color playerColorFriend;

	[Token(Token = "0x40015CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Color playerColorEnemy;

	[Token(Token = "0x40015CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color playerColorCoOp;

	[Token(Token = "0x40015CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Color playerColorTeamA;

	[Token(Token = "0x40015CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Color playerColorTeamB;

	[Token(Token = "0x40015CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private PlaneBody plane;

	[Token(Token = "0x40015D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool hpOn;

	[Token(Token = "0x40015D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Hull hull;

	[Token(Token = "0x40015D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool hasHull;

	[Token(Token = "0x40015D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private eParty selfParty;

	[Token(Token = "0x40015D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool selfObjective;

	[Token(Token = "0x40015D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	private bool isExtraChallange;

	[Token(Token = "0x40015D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Vector2 limit;

	[Token(Token = "0x40015D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float iconScale;

	[Token(Token = "0x40015D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private int type;

	[Token(Token = "0x40015D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private bool far;

	[Token(Token = "0x40015DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Renderer pnr;

	[Token(Token = "0x40015DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 playerNameScaleOrg;

	[Token(Token = "0x40015DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	[HideInInspector]
	public Color color;

	[Token(Token = "0x40015DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[HideInInspector]
	public int iconType;

	[Token(Token = "0x40015DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[HideInInspector]
	public float scaleFactor;

	[Token(Token = "0x40015DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private bool usePlayerName;

	[Token(Token = "0x40015E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5")]
	private bool playerPlane;

	[Token(Token = "0x40015E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD6")]
	private bool usePlane;

	[Token(Token = "0x40015E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Vector3 cachedCamPos;

	[Token(Token = "0x40015E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static Vector3 cachedCamForward;

	[Token(Token = "0x40015E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static Hull cachedSteeringHull;

	[Token(Token = "0x600148B")]
	[Address(RVA = "0x1182C8C", Offset = "0x1182C8C", VA = "0x1182C8C")]
	public void SetHull(Hull h)
	{
	}

	[Token(Token = "0x600148C")]
	[Address(RVA = "0x11820B8", Offset = "0x11820B8", VA = "0x11820B8")]
	public void SetColor(Color c)
	{
	}

	[Token(Token = "0x600148D")]
	[Address(RVA = "0x11820C8", Offset = "0x11820C8", VA = "0x11820C8")]
	public void SetType(eRadarType typei)
	{
	}

	[Token(Token = "0x600148E")]
	[Address(RVA = "0x1185618", Offset = "0x1185618", VA = "0x1185618")]
	public void SetObjective(bool b)
	{
	}

	[Token(Token = "0x600148F")]
	[Address(RVA = "0x11820E8", Offset = "0x11820E8", VA = "0x11820E8")]
	public void SetExtraChallange(bool b)
	{
	}

	[Token(Token = "0x6001490")]
	[Address(RVA = "0x1185624", Offset = "0x1185624", VA = "0x1185624")]
	public void SetParty(eParty p)
	{
	}

	[Token(Token = "0x6001491")]
	[Address(RVA = "0x118562C", Offset = "0x118562C", VA = "0x118562C")]
	public void Awake()
	{
	}

	[Token(Token = "0x6001492")]
	[Address(RVA = "0x1185748", Offset = "0x1185748", VA = "0x1185748")]
	public void Start()
	{
	}

	[Token(Token = "0x6001493")]
	[Address(RVA = "0x1185CB8", Offset = "0x1185CB8", VA = "0x1185CB8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001494")]
	[Address(RVA = "0x1184D0C", Offset = "0x1184D0C", VA = "0x1184D0C")]
	public void UpdateEnabled(bool e)
	{
	}

	[Token(Token = "0x6001495")]
	[Address(RVA = "0x1185CBC", Offset = "0x1185CBC", VA = "0x1185CBC")]
	public float GetPlaneNameSize()
	{
		return default(float);
	}

	[Token(Token = "0x6001496")]
	[Address(RVA = "0x1184D38", Offset = "0x1184D38", VA = "0x1184D38")]
	public bool Process(out Vector3 pos)
	{
		return default(bool);
	}

	[Token(Token = "0x6001497")]
	[Address(RVA = "0x11844B8", Offset = "0x11844B8", VA = "0x11844B8")]
	public static void UpdateCache()
	{
	}

	[Token(Token = "0x6001498")]
	[Address(RVA = "0x1185D20", Offset = "0x1185D20", VA = "0x1185D20")]
	public RadarSymbol()
	{
	}
}
[Token(Token = "0x20002F5")]
public enum eRadio
{
	[Token(Token = "0x40015E6")]
	none = 0,
	[Token(Token = "0x40015E7")]
	____PLANE_COMMANDS____ = 1,
	[Token(Token = "0x40015E8")]
	_unused_startBombingRun = 2,
	[Token(Token = "0x40015E9")]
	_unused_bombsAway = 3,
	[Token(Token = "0x40015EA")]
	_unused_bomberMoveAway = 4,
	[Token(Token = "0x40015EB")]
	autoFlyingHome = 5,
	[Token(Token = "0x40015EC")]
	_unused_flyingHome = 6,
	[Token(Token = "0x40015ED")]
	enemyPlaneAcquired = 7,
	[Token(Token = "0x40015EE")]
	targetAcquired = 8,
	[Token(Token = "0x40015EF")]
	_unused_flyingReload = 9,
	[Token(Token = "0x40015F0")]
	missionFailedDestroyed = 89,
	[Token(Token = "0x40015F1")]
	_unused_readyForOrders = 90,
	[Token(Token = "0x40015F2")]
	_unused_letsDoIt = 91,
	[Token(Token = "0x40015F3")]
	_unused_roger = 92,
	[Token(Token = "0x40015F4")]
	____ENEMY_APPROACHING_____ = 100,
	[Token(Token = "0x40015F5")]
	enemyFightersApproaching = 101,
	[Token(Token = "0x40015F6")]
	enemyBombersApproaching = 102,
	[Token(Token = "0x40015F7")]
	____PLANE_____ = 110,
	[Token(Token = "0x40015F8")]
	damagedElevator = 111,
	[Token(Token = "0x40015F9")]
	damagedEngine = 112,
	[Token(Token = "0x40015FA")]
	damagedLeftWing = 113,
	[Token(Token = "0x40015FB")]
	damagedRightWing = 114,
	[Token(Token = "0x40015FC")]
	damagedRudder = 115,
	[Token(Token = "0x40015FD")]
	_unused_fuelLeak = 116,
	[Token(Token = "0x40015FE")]
	planeStart = 117,
	[Token(Token = "0x40015FF")]
	planeStall = 118,
	[Token(Token = "0x4001600")]
	planeLanding = 119,
	[Token(Token = "0x4001601")]
	leavingMissionArea = 120,
	[Token(Token = "0x4001602")]
	gearDown = 121,
	[Token(Token = "0x4001603")]
	gearUp = 122,
	[Token(Token = "0x4001604")]
	flapsDown = 123,
	[Token(Token = "0x4001605")]
	flapsUp = 124,
	[Token(Token = "0x4001606")]
	noBombs = 125,
	[Token(Token = "0x4001607")]
	noCannonAmmo = 126,
	[Token(Token = "0x4001608")]
	noRockets = 127,
	[Token(Token = "0x4001609")]
	noTorpedoes = 128,
	[Token(Token = "0x400160A")]
	switchToCannon = 129,
	[Token(Token = "0x400160B")]
	switchToMarchinegun = 130,
	[Token(Token = "0x400160C")]
	engineOverheating = 131,
	[Token(Token = "0x400160D")]
	machinegunOverheated = 132,
	[Token(Token = "0x400160E")]
	landingGearUnfoldedPilotOnMission = 133,
	[Token(Token = "0x400160F")]
	____DESTRUCTION_____ = 200,
	[Token(Token = "0x4001610")]
	bridgeDestroyed = 201,
	[Token(Token = "0x4001611")]
	buildingDestroyed = 202,
	[Token(Token = "0x4001612")]
	fuelTankDestroyed = 203,
	[Token(Token = "0x4001613")]
	storageBuildingDestroyed = 204,
	[Token(Token = "0x4001614")]
	HQDestroyed = 205,
	[Token(Token = "0x4001615")]
	hangarDestroyed = 230,
	[Token(Token = "0x4001616")]
	towerDestroyed = 231,
	[Token(Token = "0x4001617")]
	mineShaftDestroyed = 232,
	[Token(Token = "0x4001618")]
	tentDestroyed = 233,
	[Token(Token = "0x4001619")]
	targetDestroyed = 234,
	[Token(Token = "0x400161A")]
	bunkerDestroyed = 235,
	[Token(Token = "0x400161B")]
	____VECHICLES_____ = 300,
	[Token(Token = "0x400161C")]
	wagonDestroyed = 301,
	[Token(Token = "0x400161D")]
	locomotiveDestroyed = 302,
	[Token(Token = "0x400161E")]
	cisternDestroyed = 303,
	[Token(Token = "0x400161F")]
	truckDestroyed = 304,
	[Token(Token = "0x4001620")]
	escortDestroyed = 305,
	[Token(Token = "0x4001621")]
	tankDestroyed = 306,
	[Token(Token = "0x4001622")]
	flakDestroyed = 307,
	[Token(Token = "0x4001623")]
	fighterDestroyed = 350,
	[Token(Token = "0x4001624")]
	bomberDestroyed = 351,
	[Token(Token = "0x4001625")]
	baloonDestroyed = 352,
	[Token(Token = "0x4001626")]
	boatDestroyed = 370,
	[Token(Token = "0x4001627")]
	cutterDestroyed = 371,
	[Token(Token = "0x4001628")]
	destroyerDestroyed = 372,
	[Token(Token = "0x4001629")]
	cruiserDestroyed = 373,
	[Token(Token = "0x400162A")]
	carrierDestroyed = 374,
	[Token(Token = "0x400162B")]
	shipDestroyed = 375,
	[Token(Token = "0x400162C")]
	planeDestroyed = 376,
	[Token(Token = "0x400162D")]
	tanksConvoyDestroyed = 377,
	[Token(Token = "0x400162E")]
	____MISSIN_START_____ = 700,
	[Token(Token = "0x400162F")]
	orders_intro = 701,
	[Token(Token = "0x4001630")]
	orders_intro_solo = 702,
	[Token(Token = "0x4001631")]
	orders_outro = 703,
	[Token(Token = "0x4001632")]
	pilotCopy = 704,
	[Token(Token = "0x4001633")]
	pilotCopySolo = 705,
	[Token(Token = "0x4001634")]
	countdown_1m = 706,
	[Token(Token = "0x4001635")]
	countdown_30s = 707,
	[Token(Token = "0x4001636")]
	countdown_321 = 708,
	[Token(Token = "0x4001637")]
	challenge_number = 709,
	[Token(Token = "0x4001638")]
	_unused_challenge_time = 710,
	[Token(Token = "0x4001639")]
	botVeteran = 711,
	[Token(Token = "0x400163A")]
	playerCloseToVictory = 712,
	[Token(Token = "0x400163B")]
	orders_outro_solo = 713,
	[Token(Token = "0x400163C")]
	specialTask_start = 714,
	[Token(Token = "0x400163D")]
	specialTask_completed = 715,
	[Token(Token = "0x400163E")]
	specialTask_failed = 716,
	[Token(Token = "0x400163F")]
	specialTask_cancelled = 717,
	[Token(Token = "0x4001640")]
	____FLIGHT_CONTROL___ = 750,
	[Token(Token = "0x4001641")]
	flightControlTutorialStart = 751,
	[Token(Token = "0x4001642")]
	flightControlTakeoff = 752,
	[Token(Token = "0x4001643")]
	flightControlTutorialRetractGear = 753,
	[Token(Token = "0x4001644")]
	flightControlStartGearDown = 754,
	[Token(Token = "0x4001645")]
	flightControlWelcome = 755,
	[Token(Token = "0x4001646")]
	flightControlNoGearWarningFirst = 756,
	[Token(Token = "0x4001647")]
	flightControlNoGearWarning = 757,
	[Token(Token = "0x4001648")]
	flightControlSpeedWarning = 758,
	[Token(Token = "0x4001649")]
	flightControlUseFlaps = 759,
	[Token(Token = "0x400164A")]
	flightControlToSteep = 760,
	[Token(Token = "0x400164B")]
	useFlapsGroundTarget = 761,
	[Token(Token = "0x400164C")]
	useFlapsBaloon = 762,
	[Token(Token = "0x400164D")]
	useFlapsBomb = 763,
	[Token(Token = "0x400164E")]
	putFlapsUp = 764,
	[Token(Token = "0x400164F")]
	_used_in_tutorial_useRudder = 765,
	[Token(Token = "0x4001650")]
	pullUp = 766,
	[Token(Token = "0x4001651")]
	____OBJECTIVES_____ = 800,
	[Token(Token = "0x4001652")]
	objectiveFulfilled = 801,
	[Token(Token = "0x4001653")]
	missionCompleteProtect = 830,
	[Token(Token = "0x4001654")]
	missionCompleteAttack = 831,
	[Token(Token = "0x4001655")]
	missionFailedProtect = 832,
	[Token(Token = "0x4001656")]
	missionFailedBaseDestroyed = 833,
	[Token(Token = "0x4001657")]
	friendlyPlaneAttacked = 850,
	[Token(Token = "0x4001658")]
	playerAttacked = 851,
	[Token(Token = "0x4001659")]
	protectTargetAttacked = 852,
	[Token(Token = "0x400165A")]
	protectTargetNearFail = 853,
	[Token(Token = "0x400165B")]
	torpedoDropped = 854,
	[Token(Token = "0x400165C")]
	bombDropped = 855,
	[Token(Token = "0x400165D")]
	rocketDropped = 856,
	[Token(Token = "0x400165E")]
	_____BASE_______ = 900,
	[Token(Token = "0x400165F")]
	planePurchased = 901,
	[Token(Token = "0x4001660")]
	planeUpgraded = 902,
	[Token(Token = "0x4001661")]
	bombsLoaded = 903,
	[Token(Token = "0x4001662")]
	num = 904
}
[Token(Token = "0x20002F6")]
public class Radio : MonoBehaviour
{
	[Token(Token = "0x20002F7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x918300", Offset = "0x918300")]
	private sealed class <LoadNewClip>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400166E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400166F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Radio <>4__this;

		[Token(Token = "0x4001671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string r;

		[Token(Token = "0x4001672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string <tv>5__2;

		[Token(Token = "0x4001673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string <voDir>5__3;

		[Token(Token = "0x4001674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string <path>5__4;

		[Token(Token = "0x4001675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ResourceRequest <cr>5__5;

		[Token(Token = "0x1700010E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60014B7")]
			[Address(RVA = "0xD8CDF8", Offset = "0xD8CDF8", VA = "0xD8CDF8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60014B9")]
			[Address(RVA = "0xD8CE40", Offset = "0xD8CE40", VA = "0xD8CE40", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014B4")]
		[Address(RVA = "0xD8C780", Offset = "0xD8C780", VA = "0xD8C780")]
		[DebuggerHidden]
		public <LoadNewClip>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x60014B5")]
		[Address(RVA = "0xD8C7AC", Offset = "0xD8C7AC", VA = "0xD8C7AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60014B6")]
		[Address(RVA = "0xD8C7B0", Offset = "0xD8C7B0", VA = "0xD8C7B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60014B8")]
		[Address(RVA = "0xD8CE00", Offset = "0xD8CE00", VA = "0xD8CE00", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002F8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x918310", Offset = "0x918310")]
	private sealed class <CalculateMaxVersion>d__34 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string r;

		[Token(Token = "0x4001679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <count>5__2;

		[Token(Token = "0x400167A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ResourceRequest <clipRequest>5__3;

		[Token(Token = "0x17000110")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60014BD")]
			[Address(RVA = "0xD8C730", Offset = "0xD8C730", VA = "0xD8C730", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000111")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60014BF")]
			[Address(RVA = "0xD8C778", Offset = "0xD8C778", VA = "0xD8C778", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014BA")]
		[Address(RVA = "0xD8BF24", Offset = "0xD8BF24", VA = "0xD8BF24")]
		[DebuggerHidden]
		public <CalculateMaxVersion>d__34(int <>1__state)
		{
		}

		[Token(Token = "0x60014BB")]
		[Address(RVA = "0xD8BF50", Offset = "0xD8BF50", VA = "0xD8BF50", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60014BC")]
		[Address(RVA = "0xD8BF54", Offset = "0xD8BF54", VA = "0xD8BF54", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60014BE")]
		[Address(RVA = "0xD8C738", Offset = "0xD8C738", VA = "0xD8C738", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string[] localizedVO;

	[Token(Token = "0x4001664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string[] localizedLAN;

	[Token(Token = "0x4001665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Dictionary<eRadio, float> playDelays;

	[Token(Token = "0x4001666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static string radioDir;

	[Token(Token = "0x4001667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static Radio instance;

	[Token(Token = "0x4001668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static System.Collections.Hashtable data;

	[Token(Token = "0x4001669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource audios;

	[Token(Token = "0x400166A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RadioList radioList;

	[Token(Token = "0x400166B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<eRadio, float> lastPlayTimes;

	[Token(Token = "0x400166C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool loadingClip;

	[Token(Token = "0x400166D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool completeAllBeforeDestroy;

	[Token(Token = "0x6001499")]
	[Address(RVA = "0x1185D48", Offset = "0x1185D48", VA = "0x1185D48")]
	public void Awake()
	{
	}

	[Token(Token = "0x600149A")]
	[Address(RVA = "0x1185F28", Offset = "0x1185F28", VA = "0x1185F28")]
	public static void Stop()
	{
	}

	[Token(Token = "0x600149B")]
	[Address(RVA = "0x1186008", Offset = "0x1186008", VA = "0x1186008")]
	public static void CompleteAllBeforeDestroy()
	{
	}

	[Token(Token = "0x600149C")]
	[Address(RVA = "0x1186138", Offset = "0x1186138", VA = "0x1186138")]
	public static string GetRadioDir()
	{
		return null;
	}

	[Token(Token = "0x600149D")]
	[Address(RVA = "0x1186360", Offset = "0x1186360", VA = "0x1186360")]
	public static void SetRadioDir(string vo)
	{
	}

	[Token(Token = "0x600149E")]
	[Address(RVA = "0x11863F4", Offset = "0x11863F4", VA = "0x11863F4")]
	public static void MessagePM(eRadio t)
	{
	}

	[Token(Token = "0x600149F")]
	[Address(RVA = "0x11866F0", Offset = "0x11866F0", VA = "0x11866F0")]
	public static void MessagePMIfFree(eRadio t)
	{
	}

	[Token(Token = "0x60014A0")]
	[Address(RVA = "0x1182D18", Offset = "0x1182D18", VA = "0x1182D18")]
	public static void MessageAM(eRadio t)
	{
	}

	[Token(Token = "0x60014A1")]
	[Address(RVA = "0x1186910", Offset = "0x1186910", VA = "0x1186910")]
	public static void MessageFC(eRadio t)
	{
	}

	[Token(Token = "0x60014A2")]
	[Address(RVA = "0x11869F8", Offset = "0x11869F8", VA = "0x11869F8")]
	public static void MessageO(eRadio t)
	{
	}

	[Token(Token = "0x60014A3")]
	[Address(RVA = "0x1186AE0", Offset = "0x1186AE0", VA = "0x1186AE0")]
	public static void MessageO(string t)
	{
	}

	[Token(Token = "0x60014A4")]
	[Address(RVA = "0x1186B70", Offset = "0x1186B70", VA = "0x1186B70")]
	public static void MessageD(eRadio t)
	{
	}

	[Token(Token = "0x60014A5")]
	[Address(RVA = "0x1186C58", Offset = "0x1186C58", VA = "0x1186C58")]
	public static void MessageT(string t)
	{
	}

	[Token(Token = "0x60014A6")]
	[Address(RVA = "0x1186CE8", Offset = "0x1186CE8", VA = "0x1186CE8")]
	public static void MessageI(string t)
	{
	}

	[Token(Token = "0x60014A7")]
	[Address(RVA = "0x1186D78", Offset = "0x1186D78", VA = "0x1186D78")]
	public static void MessageB(eRadio t)
	{
	}

	[Token(Token = "0x60014A8")]
	[Address(RVA = "0x1186D7C", Offset = "0x1186D7C", VA = "0x1186D7C")]
	public static bool IsPlaying()
	{
		return default(bool);
	}

	[Token(Token = "0x60014A9")]
	[Address(RVA = "0x1186578", Offset = "0x1186578", VA = "0x1186578")]
	private static void PlayFile(string t, eRadio delayType = eRadio.none)
	{
	}

	[Token(Token = "0x60014AA")]
	[Address(RVA = "0x1186ED0", Offset = "0x1186ED0", VA = "0x1186ED0")]
	private void PlayFileI(string t, eRadio delayType)
	{
	}

	[Token(Token = "0x60014AB")]
	[Address(RVA = "0x1186878", Offset = "0x1186878", VA = "0x1186878")]
	public static void Init()
	{
	}

	[Token(Token = "0x60014AC")]
	[Address(RVA = "0x1185ED8", Offset = "0x1185ED8", VA = "0x1185ED8")]
	private void StopNow()
	{
	}

	[Token(Token = "0x60014AD")]
	[Address(RVA = "0x118715C", Offset = "0x118715C", VA = "0x118715C")]
	public void Update()
	{
	}

	[Token(Token = "0x60014AE")]
	[Address(RVA = "0x1187320", Offset = "0x1187320", VA = "0x1187320")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x929A94", Offset = "0x929A94")]
	private IEnumerator LoadNewClip(string r)
	{
		return null;
	}

	[Token(Token = "0x60014AF")]
	[Address(RVA = "0x1187398", Offset = "0x1187398", VA = "0x1187398")]
	private int GetRandomVersion(string r)
	{
		return default(int);
	}

	[Token(Token = "0x60014B0")]
	[Address(RVA = "0x11874E8", Offset = "0x11874E8", VA = "0x11874E8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x929AF4", Offset = "0x929AF4")]
	private IEnumerator CalculateMaxVersion(string r)
	{
		return null;
	}

	[Token(Token = "0x60014B1")]
	[Address(RVA = "0x11873B8", Offset = "0x11873B8", VA = "0x11873B8")]
	private int GetMaxVersion(string r)
	{
		return default(int);
	}

	[Token(Token = "0x60014B2")]
	[Address(RVA = "0x1187554", Offset = "0x1187554", VA = "0x1187554")]
	public Radio()
	{
	}
}
[Token(Token = "0x20002F9")]
public class RadioLand : MonoBehaviour
{
	[Token(Token = "0x20002FA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x918320", Offset = "0x918320")]
	private sealed class <DoRadio>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400167D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400167E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400167F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RadioLand <>4__this;

		[Token(Token = "0x17000112")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60014C9")]
			[Address(RVA = "0xD8D1C4", Offset = "0xD8D1C4", VA = "0xD8D1C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000113")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60014CB")]
			[Address(RVA = "0xD8D20C", Offset = "0xD8D20C", VA = "0xD8D20C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014C6")]
		[Address(RVA = "0xD8CE48", Offset = "0xD8CE48", VA = "0xD8CE48")]
		[DebuggerHidden]
		public <DoRadio>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x60014C7")]
		[Address(RVA = "0xD8CE74", Offset = "0xD8CE74", VA = "0xD8CE74", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60014C8")]
		[Address(RVA = "0xD8CE78", Offset = "0xD8CE78", VA = "0xD8CE78", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60014CA")]
		[Address(RVA = "0xD8D1CC", Offset = "0xD8D1CC", VA = "0xD8D1CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400167B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PlaneBody planeBody;

	[Token(Token = "0x400167C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool gearFirst;

	[Token(Token = "0x60014C0")]
	[Address(RVA = "0x1188854", Offset = "0x1188854", VA = "0x1188854")]
	private void Start()
	{
	}

	[Token(Token = "0x60014C1")]
	[Address(RVA = "0x1188880", Offset = "0x1188880", VA = "0x1188880")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x929BF4", Offset = "0x929BF4")]
	private IEnumerator DoRadio()
	{
		return null;
	}

	[Token(Token = "0x60014C2")]
	[Address(RVA = "0x11888EC", Offset = "0x11888EC", VA = "0x11888EC")]
	private bool CheckGear()
	{
		return default(bool);
	}

	[Token(Token = "0x60014C3")]
	[Address(RVA = "0x1188994", Offset = "0x1188994", VA = "0x1188994")]
	private bool CheckSpeed()
	{
		return default(bool);
	}

	[Token(Token = "0x60014C4")]
	[Address(RVA = "0x1188A5C", Offset = "0x1188A5C", VA = "0x1188A5C")]
	private bool CheckAngle()
	{
		return default(bool);
	}

	[Token(Token = "0x60014C5")]
	[Address(RVA = "0x1188B7C", Offset = "0x1188B7C", VA = "0x1188B7C")]
	public RadioLand()
	{
	}
}
[Serializable]
[Token(Token = "0x20002FB")]
public class RadioListElement
{
	[Token(Token = "0x4001680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public RadioListElement pointer;

	[Token(Token = "0x4001681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string data;

	[Token(Token = "0x60014CC")]
	[Address(RVA = "0x1188C18", Offset = "0x1188C18", VA = "0x1188C18")]
	public RadioListElement()
	{
	}
}
[Serializable]
[Token(Token = "0x20002FC")]
public class RadioList
{
	[Token(Token = "0x4001682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public RadioListElement head;

	[Token(Token = "0x4001683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RadioListElement tail;

	[Token(Token = "0x60014CD")]
	[Address(RVA = "0x1188B8C", Offset = "0x1188B8C", VA = "0x1188B8C")]
	public void Add(string d)
	{
	}

	[Token(Token = "0x60014CE")]
	[Address(RVA = "0x1188C20", Offset = "0x1188C20", VA = "0x1188C20")]
	public bool Has(string d)
	{
		return default(bool);
	}

	[Token(Token = "0x60014CF")]
	[Address(RVA = "0x11870F0", Offset = "0x11870F0", VA = "0x11870F0")]
	public void AddDifferent(string d)
	{
	}

	[Token(Token = "0x60014D0")]
	[Address(RVA = "0x11872B8", Offset = "0x11872B8", VA = "0x11872B8")]
	public string Get()
	{
		return null;
	}

	[Token(Token = "0x60014D1")]
	[Address(RVA = "0x1186900", Offset = "0x1186900", VA = "0x1186900")]
	public bool Empty()
	{
		return default(bool);
	}

	[Token(Token = "0x60014D2")]
	[Address(RVA = "0x1187154", Offset = "0x1187154", VA = "0x1187154")]
	public void Clear()
	{
	}

	[Token(Token = "0x60014D3")]
	[Address(RVA = "0x11875F8", Offset = "0x11875F8", VA = "0x11875F8")]
	public RadioList()
	{
	}
}
[Token(Token = "0x20002FD")]
public class RadioPlaneSystems : MonoBehaviour
{
	[Token(Token = "0x20002FE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x918330", Offset = "0x918330")]
	private sealed class <DoRadio>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RadioPlaneSystems <>4__this;

		[Token(Token = "0x17000114")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60014EE")]
			[Address(RVA = "0xD8D520", Offset = "0xD8D520", VA = "0xD8D520", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000115")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60014F0")]
			[Address(RVA = "0xD8D568", Offset = "0xD8D568", VA = "0xD8D568", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014EB")]
		[Address(RVA = "0xD8D214", Offset = "0xD8D214", VA = "0xD8D214")]
		[DebuggerHidden]
		public <DoRadio>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x60014EC")]
		[Address(RVA = "0xD8D240", Offset = "0xD8D240", VA = "0xD8D240", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60014ED")]
		[Address(RVA = "0xD8D244", Offset = "0xD8D244", VA = "0xD8D244", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60014EF")]
		[Address(RVA = "0xD8D528", Offset = "0xD8D528", VA = "0xD8D528", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002FF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x918340", Offset = "0x918340")]
	private sealed class <MessagePMYielded>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x4001699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public eRadio r;

		[Token(Token = "0x17000116")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60014F4")]
			[Address(RVA = "0xD8D678", Offset = "0xD8D678", VA = "0xD8D678", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000117")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60014F6")]
			[Address(RVA = "0xD8D6C0", Offset = "0xD8D6C0", VA = "0xD8D6C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014F1")]
		[Address(RVA = "0xD8D570", Offset = "0xD8D570", VA = "0xD8D570")]
		[DebuggerHidden]
		public <MessagePMYielded>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x60014F2")]
		[Address(RVA = "0xD8D59C", Offset = "0xD8D59C", VA = "0xD8D59C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60014F3")]
		[Address(RVA = "0xD8D5A0", Offset = "0xD8D5A0", VA = "0xD8D5A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60014F5")]
		[Address(RVA = "0xD8D680", Offset = "0xD8D680", VA = "0xD8D680", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PlaneBody planeBody;

	[Token(Token = "0x4001685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool landingGearDown;

	[Token(Token = "0x4001686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float landingGearInformDownStartTime;

	[Token(Token = "0x4001687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool landingGearInformDownPlayed;

	[Token(Token = "0x4001688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float flapsTime;

	[Token(Token = "0x4001689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int flaps;

	[Token(Token = "0x400168A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool cannon20mmActive;

	[Token(Token = "0x400168B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float cannonSwitchedTime;

	[Token(Token = "0x400168C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool mgOverheat;

	[Token(Token = "0x400168D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float mgOverheatTime;

	[Token(Token = "0x400168E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool engineOverheat;

	[Token(Token = "0x400168F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float engineOverheatTime;

	[Token(Token = "0x4001690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int cannon20mmAmmo;

	[Token(Token = "0x4001691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float cannon20mmAmmoTime;

	[Token(Token = "0x4001692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float useFlapsTime;

	[Token(Token = "0x60014D4")]
	[Address(RVA = "0x1188C6C", Offset = "0x1188C6C", VA = "0x1188C6C")]
	private void Start()
	{
	}

	[Token(Token = "0x60014D5")]
	[Address(RVA = "0x1188CE8", Offset = "0x1188CE8", VA = "0x1188CE8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x929CA4", Offset = "0x929CA4")]
	private IEnumerator DoRadio()
	{
		return null;
	}

	[Token(Token = "0x60014D6")]
	[Address(RVA = "0x1188D54", Offset = "0x1188D54", VA = "0x1188D54")]
	private void InitPlane()
	{
	}

	[Token(Token = "0x60014D7")]
	[Address(RVA = "0x1189158", Offset = "0x1189158", VA = "0x1189158")]
	private void MessagePM(eRadio r, float delay = 0.5f)
	{
	}

	[Token(Token = "0x60014D8")]
	[Address(RVA = "0x1189184", Offset = "0x1189184", VA = "0x1189184")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x929D04", Offset = "0x929D04")]
	private IEnumerator MessagePMYielded(eRadio r, float delay = 0.5f)
	{
		return null;
	}

	[Token(Token = "0x60014D9")]
	[Address(RVA = "0x1188E98", Offset = "0x1188E98", VA = "0x1188E98")]
	private void InitGear()
	{
	}

	[Token(Token = "0x60014DA")]
	[Address(RVA = "0x1189200", Offset = "0x1189200", VA = "0x1189200")]
	private bool CheckGear()
	{
		return default(bool);
	}

	[Token(Token = "0x60014DB")]
	[Address(RVA = "0x1188EB8", Offset = "0x1188EB8", VA = "0x1188EB8")]
	private void InitInformGearDown()
	{
	}

	[Token(Token = "0x60014DC")]
	[Address(RVA = "0x1189280", Offset = "0x1189280", VA = "0x1189280")]
	private bool CheckInformGearDown()
	{
		return default(bool);
	}

	[Token(Token = "0x60014DD")]
	[Address(RVA = "0x1188EC4", Offset = "0x1188EC4", VA = "0x1188EC4")]
	private void InitFlaps()
	{
	}

	[Token(Token = "0x60014DE")]
	[Address(RVA = "0x11893B8", Offset = "0x11893B8", VA = "0x11893B8")]
	private bool CheckFlaps()
	{
		return default(bool);
	}

	[Token(Token = "0x60014DF")]
	[Address(RVA = "0x1188F18", Offset = "0x1188F18", VA = "0x1188F18")]
	private void InitCannon20mmActive()
	{
	}

	[Token(Token = "0x60014E0")]
	[Address(RVA = "0x11894B8", Offset = "0x11894B8", VA = "0x11894B8")]
	private bool CheckCannonSwitched()
	{
		return default(bool);
	}

	[Token(Token = "0x60014E1")]
	[Address(RVA = "0x1188F84", Offset = "0x1188F84", VA = "0x1188F84")]
	private void InitMGOverheat()
	{
	}

	[Token(Token = "0x60014E2")]
	[Address(RVA = "0x1189598", Offset = "0x1189598", VA = "0x1189598")]
	private bool CheckMachineGunOverheat()
	{
		return default(bool);
	}

	[Token(Token = "0x60014E3")]
	[Address(RVA = "0x1189030", Offset = "0x1189030", VA = "0x1189030")]
	private void InitEngineOverheat()
	{
	}

	[Token(Token = "0x60014E4")]
	[Address(RVA = "0x11896C0", Offset = "0x11896C0", VA = "0x11896C0")]
	private bool CheckEngineOverheat()
	{
		return default(bool);
	}

	[Token(Token = "0x60014E5")]
	[Address(RVA = "0x1189060", Offset = "0x1189060", VA = "0x1189060")]
	private void InitCannon20mmAmmo()
	{
	}

	[Token(Token = "0x60014E6")]
	[Address(RVA = "0x1189770", Offset = "0x1189770", VA = "0x1189770")]
	private bool CheckAmmo20mm()
	{
		return default(bool);
	}

	[Token(Token = "0x60014E7")]
	[Address(RVA = "0x11898C4", Offset = "0x11898C4", VA = "0x11898C4")]
	public static void UseFlaps(bool isBaloon)
	{
	}

	[Token(Token = "0x60014E8")]
	[Address(RVA = "0x11899CC", Offset = "0x11899CC", VA = "0x11899CC")]
	public static void UseFlapsBomb()
	{
	}

	[Token(Token = "0x60014E9")]
	[Address(RVA = "0x1189B58", Offset = "0x1189B58", VA = "0x1189B58")]
	public RadioPlaneSystems()
	{
	}
}
[Token(Token = "0x2000300")]
public class RadioStall : MonoBehaviour
{
	[Token(Token = "0x400169A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float timeRadio;

	[Token(Token = "0x400169B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AudioSource audio;

	[Token(Token = "0x400169C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float audioVolume;

	[Token(Token = "0x60014F7")]
	[Address(RVA = "0x1189B64", Offset = "0x1189B64", VA = "0x1189B64")]
	private void Awake()
	{
	}

	[Token(Token = "0x60014F8")]
	[Address(RVA = "0x1189B98", Offset = "0x1189B98", VA = "0x1189B98")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60014F9")]
	[Address(RVA = "0x1189C38", Offset = "0x1189C38", VA = "0x1189C38")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60014FA")]
	[Address(RVA = "0x118A018", Offset = "0x118A018", VA = "0x118A018")]
	private void Update()
	{
	}

	[Token(Token = "0x60014FB")]
	[Address(RVA = "0x118A0D8", Offset = "0x118A0D8", VA = "0x118A0D8")]
	public RadioStall()
	{
	}
}
[Token(Token = "0x2000301")]
public class RadioTakeOff : MonoBehaviour
{
	[Token(Token = "0x2000302")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x918350", Offset = "0x918350")]
	private sealed class <DoRadio>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400169D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400169E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400169F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public eRadio start;

		[Token(Token = "0x40016A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public eRadio gearFirst;

		[Token(Token = "0x40016A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public eRadio gear;

		[Token(Token = "0x40016A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool <first>5__2;

		[Token(Token = "0x17000118")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001502")]
			[Address(RVA = "0xD8DA18", Offset = "0xD8DA18", VA = "0xD8DA18", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000119")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001504")]
			[Address(RVA = "0xD8DA60", Offset = "0xD8DA60", VA = "0xD8DA60", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014FF")]
		[Address(RVA = "0xD8D6C8", Offset = "0xD8D6C8", VA = "0xD8D6C8")]
		[DebuggerHidden]
		public <DoRadio>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6001500")]
		[Address(RVA = "0xD8D6F4", Offset = "0xD8D6F4", VA = "0xD8D6F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001501")]
		[Address(RVA = "0xD8D6F8", Offset = "0xD8D6F8", VA = "0xD8D6F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001503")]
		[Address(RVA = "0xD8DA20", Offset = "0xD8DA20", VA = "0xD8DA20", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x60014FC")]
	[Address(RVA = "0x118A0E0", Offset = "0x118A0E0", VA = "0x118A0E0")]
	private void Start()
	{
	}

	[Token(Token = "0x60014FD")]
	[Address(RVA = "0x118A178", Offset = "0x118A178", VA = "0x118A178")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x929E04", Offset = "0x929E04")]
	private IEnumerator DoRadio(eRadio start, eRadio gearFirst, eRadio gear)
	{
		return null;
	}

	[Token(Token = "0x60014FE")]
	[Address(RVA = "0x118A1F8", Offset = "0x118A1F8", VA = "0x118A1F8")]
	public RadioTakeOff()
	{
	}
}
[Token(Token = "0x2000303")]
public class RandomDelete : MonoBehaviour
{
	[Token(Token = "0x40016A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int deleteChancePercent;

	[Token(Token = "0x6001505")]
	[Address(RVA = "0x118A200", Offset = "0x118A200", VA = "0x118A200")]
	public void Awake()
	{
	}

	[Token(Token = "0x6001506")]
	[Address(RVA = "0x118A384", Offset = "0x118A384", VA = "0x118A384")]
	public RandomDelete()
	{
	}
}
[Token(Token = "0x2000304")]
public class RansomSound : MonoBehaviour
{
	[Token(Token = "0x40016A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float minTime;

	[Token(Token = "0x40016A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maxTime;

	[Token(Token = "0x40016A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AudioSource source;

	[Token(Token = "0x40016A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip[] clips;

	[Token(Token = "0x40016A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float time;

	[Token(Token = "0x6001507")]
	[Address(RVA = "0x118A394", Offset = "0x118A394", VA = "0x118A394")]
	private void Start()
	{
	}

	[Token(Token = "0x6001508")]
	[Address(RVA = "0x118A428", Offset = "0x118A428", VA = "0x118A428")]
	private void ResetTime()
	{
	}

	[Token(Token = "0x6001509")]
	[Address(RVA = "0x118A470", Offset = "0x118A470", VA = "0x118A470")]
	private void Update()
	{
	}

	[Token(Token = "0x600150A")]
	[Address(RVA = "0x118A5A8", Offset = "0x118A5A8", VA = "0x118A5A8")]
	public RansomSound()
	{
	}
}
[Token(Token = "0x2000305")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x918360", Offset = "0x918360")]
public class RealisticDamage : MonoBehaviour
{
	[Token(Token = "0x2000306")]
	private enum Damage
	{
		[Token(Token = "0x40016B8")]
		none,
		[Token(Token = "0x40016B9")]
		wingR,
		[Token(Token = "0x40016BA")]
		wingL,
		[Token(Token = "0x40016BB")]
		rudder,
		[Token(Token = "0x40016BC")]
		elevator,
		[Token(Token = "0x40016BD")]
		engine,
		[Token(Token = "0x40016BE")]
		num
	}

	[Token(Token = "0x40016A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool changed;

	[Token(Token = "0x40016AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Damage damage1;

	[Token(Token = "0x40016AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Damage damage2;

	[Token(Token = "0x40016AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Hull hull;

	[Token(Token = "0x40016AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float rollAdd;

	[Token(Token = "0x40016AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float rudderAdd;

	[Token(Token = "0x40016AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float elevatorAdd;

	[Token(Token = "0x40016B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float rudderMul;

	[Token(Token = "0x40016B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float elevatorMul;

	[Token(Token = "0x40016B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float engineMul;

	[Token(Token = "0x40016B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static Damage saveDamage1;

	[Token(Token = "0x40016B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Damage saveDamage2;

	[Token(Token = "0x40016B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static float saveHullDamage;

	[Token(Token = "0x40016B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool restoreSave;

	[Token(Token = "0x600150B")]
	[Address(RVA = "0x118AD90", Offset = "0x118AD90", VA = "0x118AD90")]
	public bool HasDamage()
	{
		return default(bool);
	}

	[Token(Token = "0x600150C")]
	[Address(RVA = "0x118ADA0", Offset = "0x118ADA0", VA = "0x118ADA0")]
	public static RealisticDamage Init(Transform t)
	{
		return null;
	}

	[Token(Token = "0x600150D")]
	[Address(RVA = "0x118AF28", Offset = "0x118AF28", VA = "0x118AF28")]
	private void Awake()
	{
	}

	[Token(Token = "0x600150E")]
	[Address(RVA = "0x118B0C4", Offset = "0x118B0C4", VA = "0x118B0C4")]
	public void OnHit()
	{
	}

	[Token(Token = "0x600150F")]
	[Address(RVA = "0x118B6B0", Offset = "0x118B6B0", VA = "0x118B6B0")]
	public void UpdateText(TextMesh tm)
	{
	}

	[Token(Token = "0x6001510")]
	[Address(RVA = "0x118B828", Offset = "0x118B828", VA = "0x118B828")]
	private static void Add(TextMesh tm, Damage damage)
	{
	}

	[Token(Token = "0x6001511")]
	[Address(RVA = "0x118B414", Offset = "0x118B414", VA = "0x118B414")]
	private void PlayRadio(Damage damage)
	{
	}

	[Token(Token = "0x6001512")]
	[Address(RVA = "0x118B30C", Offset = "0x118B30C", VA = "0x118B30C")]
	private void ApplyDamageParam(Damage damage)
	{
	}

	[Token(Token = "0x6001513")]
	[Address(RVA = "0x118B91C", Offset = "0x118B91C", VA = "0x118B91C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001514")]
	[Address(RVA = "0x118BB34", Offset = "0x118BB34", VA = "0x118BB34")]
	public void Save()
	{
	}

	[Token(Token = "0x6001515")]
	[Address(RVA = "0x118BC4C", Offset = "0x118BC4C", VA = "0x118BC4C")]
	public static void Discard()
	{
	}

	[Token(Token = "0x6001516")]
	[Address(RVA = "0x118B998", Offset = "0x118B998", VA = "0x118B998")]
	private void Restore()
	{
	}

	[Token(Token = "0x6001517")]
	[Address(RVA = "0x118BCCC", Offset = "0x118BCCC", VA = "0x118BCCC")]
	public RealisticDamage()
	{
	}
}
[Token(Token = "0x2000307")]
public class RealisticDamageDisplay : MonoBehaviour
{
	[Token(Token = "0x40016BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TextMesh tm;

	[Token(Token = "0x6001519")]
	[Address(RVA = "0x118BCE8", Offset = "0x118BCE8", VA = "0x118BCE8")]
	private void Start()
	{
	}

	[Token(Token = "0x600151A")]
	[Address(RVA = "0x118BDEC", Offset = "0x118BDEC", VA = "0x118BDEC")]
	private void Update()
	{
	}

	[Token(Token = "0x600151B")]
	[Address(RVA = "0x118BF70", Offset = "0x118BF70", VA = "0x118BF70")]
	public RealisticDamageDisplay()
	{
	}
}
[Token(Token = "0x2000308")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x918374", Offset = "0x918374")]
public class RealisticFlying : MonoBehaviour
{
	[Token(Token = "0x2000309")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x918388", Offset = "0x918388")]
	private sealed class <PlayRadioPM>d__73 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40016EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40016F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40016F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x40016F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public eRadio msg;

		[Token(Token = "0x1700011A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001541")]
			[Address(RVA = "0xD8DB70", Offset = "0xD8DB70", VA = "0xD8DB70", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001543")]
			[Address(RVA = "0xD8DBB8", Offset = "0xD8DBB8", VA = "0xD8DBB8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600153E")]
		[Address(RVA = "0xD8DA68", Offset = "0xD8DA68", VA = "0xD8DA68")]
		[DebuggerHidden]
		public <PlayRadioPM>d__73(int <>1__state)
		{
		}

		[Token(Token = "0x600153F")]
		[Address(RVA = "0xD8DA94", Offset = "0xD8DA94", VA = "0xD8DA94", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001540")]
		[Address(RVA = "0xD8DA98", Offset = "0xD8DA98", VA = "0xD8DA98", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001542")]
		[Address(RVA = "0xD8DB78", Offset = "0xD8DB78", VA = "0xD8DB78", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40016C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool reset;

	[Token(Token = "0x40016C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RealisticFlyingStateMachine stateMachine;

	[Token(Token = "0x40016C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static RealisticFlying instance;

	[Token(Token = "0x40016C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PlaneBody planeBody;

	[Token(Token = "0x40016C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Vector3 velocityVector;

	[Token(Token = "0x40016C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static RealisticDamage damage;

	[Token(Token = "0x40016C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 lift;

	[Token(Token = "0x40016C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 totalForce;

	[Token(Token = "0x40016C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 engineForce;

	[Token(Token = "0x40016C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 dragForce;

	[Token(Token = "0x40016CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float throttle;

	[Token(Token = "0x40016CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector2 joystick;

	[Token(Token = "0x40016CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float rudder;

	[Token(Token = "0x40016CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float flaps;

	[Token(Token = "0x40016CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float stallingSpeed;

	[Token(Token = "0x40016CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float takeOffSpeed;

	[Token(Token = "0x40016D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float speedLineMul;

	[Token(Token = "0x40016D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float gizmosMul;

	[Token(Token = "0x40016D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float deltaTime;

	[Token(Token = "0x40016D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x91B71C", Offset = "0x91B71C")]
	public float enginePowerMulLinear;

	[Token(Token = "0x40016D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public Vector3 dragFromRotationCo;

	[Token(Token = "0x40016D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Vector3 controlsRotationLinear;

	[Token(Token = "0x40016D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float stabilizeRoll;

	[Token(Token = "0x40016D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float stabilizePitch;

	[Token(Token = "0x40016D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public float pitchFromThrottleLinear;

	[Token(Token = "0x40016D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float yawFromRollLinear;

	[Token(Token = "0x40016DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public float rollFromRudderLinear;

	[Token(Token = "0x40016DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float flapsDragMul;

	[Token(Token = "0x40016DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float wheelsDragMul;

	[Token(Token = "0x40016DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public AnimationCurve yawFromRollCurve;

	[Token(Token = "0x40016DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public float linearDump;

	[Token(Token = "0x40016DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float maxSpeedMS;

	[Token(Token = "0x40016E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float standAngle;

	[Token(Token = "0x40016E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private float standOffset;

	[Token(Token = "0x40016E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Transform planeRotationsTransform;

	[Token(Token = "0x40016E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x91B754", Offset = "0x91B754")]
	public float takeOffAcceleration;

	[Token(Token = "0x40016E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x91B78C", Offset = "0x91B78C")]
	public Vector3 rotateSpeed;

	[Token(Token = "0x40016E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public float dragCoLinear;

	[Token(Token = "0x40016E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public float airplaneMass;

	[Token(Token = "0x40016E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public float airplaneInvertMass;

	[Token(Token = "0x40016E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public float airplaneIvertMassCoForRotation;

	[Token(Token = "0x40016E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public bool groundContact;

	[Token(Token = "0x40016EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public AudioSource wheelsSound;

	[Token(Token = "0x40016EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private float wheelsAudioVolume;

	[Token(Token = "0x40016EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private Vector3 gravityForce;

	[Token(Token = "0x40016ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static readonly float defaultMass;

	[Token(Token = "0x40016EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private float controlsResponse;

	[Token(Token = "0x600151C")]
	[Address(RVA = "0x118BF78", Offset = "0x118BF78", VA = "0x118BF78")]
	private void Awake()
	{
	}

	[Token(Token = "0x600151D")]
	[Address(RVA = "0x118C408", Offset = "0x118C408", VA = "0x118C408")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600151E")]
	[Address(RVA = "0x118C4A8", Offset = "0x118C4A8", VA = "0x118C4A8")]
	public static float GetStallingSpeed()
	{
		return default(float);
	}

	[Token(Token = "0x600151F")]
	[Address(RVA = "0x118C518", Offset = "0x118C518", VA = "0x118C518")]
	public static void Reset(bool turnBack = false)
	{
	}

	[Token(Token = "0x6001520")]
	[Address(RVA = "0x118C880", Offset = "0x118C880", VA = "0x118C880")]
	public static void Compute(PlaneBody pb, float throttle, Vector2 joystick, float rudder)
	{
	}

	[Token(Token = "0x6001521")]
	[Address(RVA = "0x118CDC0", Offset = "0x118CDC0", VA = "0x118CDC0")]
	private static void CheckForReset()
	{
	}

	[Token(Token = "0x6001522")]
	[Address(RVA = "0x118CE78", Offset = "0x118CE78", VA = "0x118CE78")]
	public static bool HasGroundContact()
	{
		return default(bool);
	}

	[Token(Token = "0x6001523")]
	[Address(RVA = "0x118CF5C", Offset = "0x118CF5C", VA = "0x118CF5C")]
	public static bool IsApproachLanding()
	{
		return default(bool);
	}

	[Token(Token = "0x6001524")]
	[Address(RVA = "0x118D0DC", Offset = "0x118D0DC", VA = "0x118D0DC")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6001525")]
	[Address(RVA = "0x118D384", Offset = "0x118D384", VA = "0x118D384")]
	public static void Clear()
	{
	}

	[Token(Token = "0x6001526")]
	[Address(RVA = "0x118D4D0", Offset = "0x118D4D0", VA = "0x118D4D0")]
	public static void UpdateParams(PlaneBody pb)
	{
	}

	[Token(Token = "0x6001527")]
	[Address(RVA = "0x118CA80", Offset = "0x118CA80", VA = "0x118CA80")]
	private void FillParams(PlaneBody pb)
	{
	}

	[Token(Token = "0x6001528")]
	[Address(RVA = "0x118D5F0", Offset = "0x118D5F0", VA = "0x118D5F0")]
	public void StateStanding()
	{
	}

	[Token(Token = "0x6001529")]
	[Address(RVA = "0x118D60C", Offset = "0x118D60C", VA = "0x118D60C")]
	private void StartRunwayRoll()
	{
	}

	[Token(Token = "0x600152A")]
	[Address(RVA = "0x118D760", Offset = "0x118D760", VA = "0x118D760")]
	public void StateRunwayRoll()
	{
	}

	[Token(Token = "0x600152B")]
	[Address(RVA = "0x118DDC4", Offset = "0x118DDC4", VA = "0x118DDC4")]
	private void ProcessWheelsSound()
	{
	}

	[Token(Token = "0x600152C")]
	[Address(RVA = "0x118DF04", Offset = "0x118DF04", VA = "0x118DF04")]
	private void EndTakeOff()
	{
	}

	[Token(Token = "0x600152D")]
	[Address(RVA = "0x118DBDC", Offset = "0x118DBDC", VA = "0x118DBDC")]
	private void CalculateTailAngle()
	{
	}

	[Token(Token = "0x600152E")]
	[Address(RVA = "0x118DD2C", Offset = "0x118DD2C", VA = "0x118DD2C")]
	private void FlattenRollAngle(float mul = 1f)
	{
	}

	[Token(Token = "0x600152F")]
	[Address(RVA = "0x118E048", Offset = "0x118E048", VA = "0x118E048")]
	public void StateStalling()
	{
	}

	[Token(Token = "0x6001530")]
	[Address(RVA = "0x118E0AC", Offset = "0x118E0AC", VA = "0x118E0AC")]
	private void RotateStalling()
	{
	}

	[Token(Token = "0x6001531")]
	[Address(RVA = "0x118DF8C", Offset = "0x118DF8C", VA = "0x118DF8C")]
	private void TransitToFlying()
	{
	}

	[Token(Token = "0x6001532")]
	[Address(RVA = "0x118E6F8", Offset = "0x118E6F8", VA = "0x118E6F8")]
	public void StateTransitToFlying()
	{
	}

	[Token(Token = "0x6001533")]
	[Address(RVA = "0x118EB6C", Offset = "0x118EB6C", VA = "0x118EB6C")]
	public void StateFlying()
	{
	}

	[Token(Token = "0x6001534")]
	[Address(RVA = "0x118EC60", Offset = "0x118EC60", VA = "0x118EC60")]
	public void StateApproachLanding()
	{
	}

	[Token(Token = "0x6001535")]
	[Address(RVA = "0x118E01C", Offset = "0x118E01C", VA = "0x118E01C")]
	private void DelayRadioPM(eRadio msg, float delay)
	{
	}

	[Token(Token = "0x6001536")]
	[Address(RVA = "0x118EFC8", Offset = "0x118EFC8", VA = "0x118EFC8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x929EB4", Offset = "0x929EB4")]
	private IEnumerator PlayRadioPM(eRadio msg, float delay)
	{
		return null;
	}

	[Token(Token = "0x6001537")]
	[Address(RVA = "0x118ED58", Offset = "0x118ED58", VA = "0x118ED58")]
	private void ProcessTouchDown()
	{
	}

	[Token(Token = "0x6001538")]
	[Address(RVA = "0x118E1A4", Offset = "0x118E1A4", VA = "0x118E1A4")]
	private void CalculateVelocityChange()
	{
	}

	[Token(Token = "0x6001539")]
	[Address(RVA = "0x118E500", Offset = "0x118E500", VA = "0x118E500")]
	private void MovePlane()
	{
	}

	[Token(Token = "0x600153A")]
	[Address(RVA = "0x118E82C", Offset = "0x118E82C", VA = "0x118E82C")]
	private void RotateFlying(float controlsMul = 1f)
	{
	}

	[Token(Token = "0x600153B")]
	[Address(RVA = "0x118E624", Offset = "0x118E624", VA = "0x118E624")]
	private void RotatePlane(Vector3 newRotateSpeed)
	{
	}

	[Token(Token = "0x600153C")]
	[Address(RVA = "0x118F044", Offset = "0x118F044", VA = "0x118F044")]
	public RealisticFlying()
	{
	}
}
[Token(Token = "0x200030A")]
public class RealisticFlyingStateMachine
{
	[Token(Token = "0x200030B")]
	public delegate void State();

	[Token(Token = "0x40016F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private State state;

	[Token(Token = "0x6001544")]
	[Address(RVA = "0x118F120", Offset = "0x118F120", VA = "0x118F120")]
	public void SetState(State s)
	{
	}

	[Token(Token = "0x6001545")]
	[Address(RVA = "0x118D0D0", Offset = "0x118D0D0", VA = "0x118D0D0")]
	public bool IsInState(State s)
	{
		return default(bool);
	}

	[Token(Token = "0x6001546")]
	[Address(RVA = "0x118CDAC", Offset = "0x118CDAC", VA = "0x118CDAC")]
	public void Process()
	{
	}

	[Token(Token = "0x6001547")]
	[Address(RVA = "0x118C400", Offset = "0x118C400", VA = "0x118C400")]
	public RealisticFlyingStateMachine()
	{
	}
}
[Token(Token = "0x200030C")]
public class RealisticPlaneParams : MonoBehaviour
{
	[Token(Token = "0x40016F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public float rudder;

	[Token(Token = "0x40016F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public float elevation;

	[Token(Token = "0x40016F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public float roll;

	[Token(Token = "0x40016F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[HideInInspector]
	public float lift;

	[Token(Token = "0x40016F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float enginePower;

	[Token(Token = "0x40016F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float dragCo;

	[Token(Token = "0x40016FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public float inertia;

	[Token(Token = "0x40016FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float horsePower;

	[Token(Token = "0x40016FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float mass;

	[Token(Token = "0x40016FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float slipStreamMul;

	[Token(Token = "0x40016FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float torqueMul;

	[Token(Token = "0x40016FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float wingarea;

	[Token(Token = "0x4001700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float wingMass;

	[Token(Token = "0x4001701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float wingSize;

	[Token(Token = "0x4001702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float tailMass;

	[Token(Token = "0x4001703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float tailSize;

	[Token(Token = "0x4001704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector3 planeArea;

	[Token(Token = "0x600154C")]
	[Address(RVA = "0x118F128", Offset = "0x118F128", VA = "0x118F128")]
	public RealisticPlaneParams()
	{
	}
}
[Token(Token = "0x200030D")]
public class ReloadTrl : MonoBehaviour
{
	[Token(Token = "0x600154D")]
	[Address(RVA = "0x118F99C", Offset = "0x118F99C", VA = "0x118F99C")]
	public void Update()
	{
	}

	[Token(Token = "0x600154E")]
	[Address(RVA = "0x118FA74", Offset = "0x118FA74", VA = "0x118FA74")]
	public ReloadTrl()
	{
	}
}
[Token(Token = "0x200030E")]
public class RemoveClouds : MonoBehaviour
{
	[Token(Token = "0x600154F")]
	[Address(RVA = "0x119065C", Offset = "0x119065C", VA = "0x119065C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001550")]
	[Address(RVA = "0x1190664", Offset = "0x1190664", VA = "0x1190664")]
	public RemoveClouds()
	{
	}
}
[Token(Token = "0x200030F")]
public class RenderCubemap : MonoBehaviour
{
	[Token(Token = "0x2000310")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x918398", Offset = "0x918398")]
	private sealed class <Start>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400170C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400170D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400170E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RenderCubemap <>4__this;

		[Token(Token = "0x1700011C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600155B")]
			[Address(RVA = "0xD8E07C", Offset = "0xD8E07C", VA = "0xD8E07C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600155D")]
			[Address(RVA = "0xD8E0C4", Offset = "0xD8E0C4", VA = "0xD8E0C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001558")]
		[Address(RVA = "0xD8DFE4", Offset = "0xD8DFE4", VA = "0xD8DFE4")]
		[DebuggerHidden]
		public <Start>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6001559")]
		[Address(RVA = "0xD8E010", Offset = "0xD8E010", VA = "0xD8E010", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600155A")]
		[Address(RVA = "0xD8E014", Offset = "0xD8E014", VA = "0xD8E014", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600155C")]
		[Address(RVA = "0xD8E084", Offset = "0xD8E084", VA = "0xD8E084", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int skipFrames;

	[Token(Token = "0x4001706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform cameraPos;

	[Token(Token = "0x4001707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int cubemapSize;

	[Token(Token = "0x4001708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int cubemapHiResSize;

	[Token(Token = "0x4001709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Cubemap cubemap;

	[Token(Token = "0x400170A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Cubemap cubemapHiRes;

	[Token(Token = "0x400170B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Camera cam;

	[Token(Token = "0x6001551")]
	[Address(RVA = "0x119066C", Offset = "0x119066C", VA = "0x119066C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x929F64", Offset = "0x929F64")]
	public IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6001552")]
	[Address(RVA = "0x11906D8", Offset = "0x11906D8", VA = "0x11906D8")]
	public void RenderCM()
	{
	}

	[Token(Token = "0x6001553")]
	[Address(RVA = "0x1190750", Offset = "0x1190750", VA = "0x1190750")]
	public void UpdateWholeCubemapNow(int faceMask)
	{
	}

	[Token(Token = "0x6001554")]
	[Address(RVA = "0x1190F64", Offset = "0x1190F64", VA = "0x1190F64")]
	private void DarkenCubemap(Cubemap c, int res)
	{
	}

	[Token(Token = "0x6001555")]
	[Address(RVA = "0x1191208", Offset = "0x1191208", VA = "0x1191208")]
	private void DarkenPixel(Cubemap cube, CubemapFace face, int x, int y)
	{
	}

	[Token(Token = "0x6001556")]
	[Address(RVA = "0x119102C", Offset = "0x119102C", VA = "0x119102C")]
	public void BlurPixel(CubemapFace face, int x, int y)
	{
	}

	[Token(Token = "0x6001557")]
	[Address(RVA = "0x1191284", Offset = "0x1191284", VA = "0x1191284")]
	public RenderCubemap()
	{
	}
}
[Token(Token = "0x2000311")]
public class RendererStateListener : MonoBehaviour
{
	[Token(Token = "0x2000312")]
	public delegate void StateChanged(bool visible);

	[Token(Token = "0x400170F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public StateChanged stateChanged;

	[Token(Token = "0x600155E")]
	[Address(RVA = "0xDB33A4", Offset = "0xDB33A4", VA = "0xDB33A4")]
	private void OnBecameVisible()
	{
	}

	[Token(Token = "0x600155F")]
	[Address(RVA = "0xDB33BC", Offset = "0xDB33BC", VA = "0xDB33BC")]
	private void OnBecameInvisible()
	{
	}

	[Token(Token = "0x6001560")]
	[Address(RVA = "0xDB33D4", Offset = "0xDB33D4", VA = "0xDB33D4")]
	public RendererStateListener()
	{
	}
}
[Token(Token = "0x2000313")]
public class RenderingSetup : MonoBehaviour
{
	[Token(Token = "0x4001710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RenderingSetupData quest1;

	[Token(Token = "0x4001711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RenderingSetupData quest2;

	[Token(Token = "0x4001712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RenderingSetupData viveFocus3;

	[Token(Token = "0x4001713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public RenderingSetupData pico3;

	[Token(Token = "0x4001714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public RenderingSetupData pico4;

	[Token(Token = "0x4001715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static XRRenderingSetup currentSetup;

	[Token(Token = "0x4001716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool set_current;

	[Token(Token = "0x4001717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int mission_instance_counter;

	[Token(Token = "0x4001718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool useExternalDevSettings;

	[Token(Token = "0x4001719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool hmdUnmounted;

	[Token(Token = "0x400171A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	private bool unmountedCamerasHidden;

	[Token(Token = "0x400171B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static RenderingSetup instance;

	[Token(Token = "0x400171C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static bool platformInitialized;

	[Token(Token = "0x6001565")]
	[Address(RVA = "0xDB33DC", Offset = "0xDB33DC", VA = "0xDB33DC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001566")]
	[Address(RVA = "0xDB368C", Offset = "0xDB368C", VA = "0xDB368C")]
	private void HandleHMDMounted()
	{
	}

	[Token(Token = "0x6001567")]
	[Address(RVA = "0xDB3694", Offset = "0xDB3694", VA = "0xDB3694")]
	private void HandleHMDUnmounted()
	{
	}

	[Token(Token = "0x6001568")]
	[Address(RVA = "0xDB36A0", Offset = "0xDB36A0", VA = "0xDB36A0")]
	private void Update()
	{
	}

	[Token(Token = "0x6001569")]
	[Address(RVA = "0xDB3CF0", Offset = "0xDB3CF0", VA = "0xDB3CF0")]
	private void UpdateOculusQuest()
	{
	}

	[Token(Token = "0x600156A")]
	[Address(RVA = "0xDB3B28", Offset = "0xDB3B28", VA = "0xDB3B28")]
	private XRRenderingSetup GetSetup()
	{
		return default(XRRenderingSetup);
	}

	[Token(Token = "0x600156B")]
	[Address(RVA = "0xDB3F14", Offset = "0xDB3F14", VA = "0xDB3F14")]
	public void OnExternalTestChangeScale()
	{
	}

	[Token(Token = "0x600156C")]
	[Address(RVA = "0xDB3F20", Offset = "0xDB3F20", VA = "0xDB3F20")]
	public void OnExternalTestChangeFFR()
	{
	}

	[Token(Token = "0x600156D")]
	[Address(RVA = "0xDB3F2C", Offset = "0xDB3F2C", VA = "0xDB3F2C")]
	public RenderingSetup()
	{
	}
}
[Token(Token = "0x2000314")]
public class RenderingSetupData : MonoBehaviour
{
	[Token(Token = "0x400171D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool dynamic_in_menus;

	[Token(Token = "0x400171E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public FixedFoveatedRenderingLevel level_in_menus;

	[Token(Token = "0x400171F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float textureScale_in_menus;

	[Token(Token = "0x4001720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int maxFPS_in_menus;

	[Token(Token = "0x4001721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int msaa_in_menus;

	[Token(Token = "0x4001722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool dynamic_in_mission;

	[Token(Token = "0x4001723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public FixedFoveatedRenderingLevel level_in_mission;

	[Token(Token = "0x4001724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float textureScale_in_mission;

	[Token(Token = "0x4001725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int maxFPS_in_mission;

	[Token(Token = "0x4001726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int msaa_in_mission;

	[Token(Token = "0x600156F")]
	[Address(RVA = "0xDB3F40", Offset = "0xDB3F40", VA = "0xDB3F40")]
	public RenderingSetupData()
	{
	}
}
[Token(Token = "0x2000315")]
public enum FixedFoveatedRenderingLevel
{
	[Token(Token = "0x4001728")]
	Off,
	[Token(Token = "0x4001729")]
	Low,
	[Token(Token = "0x400172A")]
	Medium,
	[Token(Token = "0x400172B")]
	High,
	[Token(Token = "0x400172C")]
	HighTop
}
[Token(Token = "0x2000316")]
public struct XRRenderingSetup
{
	[Token(Token = "0x400172D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool useDynamicFFR;

	[Token(Token = "0x400172E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public int foveal;

	[Token(Token = "0x400172F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float renderScale;

	[Token(Token = "0x4001730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int fps;

	[Token(Token = "0x4001731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int msaa;

	[Token(Token = "0x6001570")]
	[Address(RVA = "0x1263154", Offset = "0x1263154", VA = "0x1263154")]
	public static bool operator ==(XRRenderingSetup lhs, XRRenderingSetup rhs)
	{
		return default(bool);
	}

	[Token(Token = "0x6001571")]
	[Address(RVA = "0x12631C0", Offset = "0x12631C0", VA = "0x12631C0")]
	public static bool operator !=(XRRenderingSetup lhs, XRRenderingSetup rhs)
	{
		return default(bool);
	}

	[Token(Token = "0x6001572")]
	[Address(RVA = "0x126322C", Offset = "0x126322C", VA = "0x126322C", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6001573")]
	[Address(RVA = "0x1263308", Offset = "0x1263308", VA = "0x1263308", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000317")]
public class ResetParticleOnEnable : MonoBehaviour
{
	[Token(Token = "0x4001732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ParticleSystem particle;

	[Token(Token = "0x6001574")]
	[Address(RVA = "0xDB3F7C", Offset = "0xDB3F7C", VA = "0xDB3F7C")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6001575")]
	[Address(RVA = "0xDB4044", Offset = "0xDB4044", VA = "0xDB4044")]
	public ResetParticleOnEnable()
	{
	}
}
[Token(Token = "0x2000318")]
public class ReturnToMissionArea : MonoBehaviour
{
	[Token(Token = "0x2000319")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9183A8", Offset = "0x9183A8")]
	private sealed class <Idle>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ReturnToMissionArea <>4__this;

		[Token(Token = "0x1700011E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600157E")]
			[Address(RVA = "0xD8E838", Offset = "0xD8E838", VA = "0xD8E838", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001580")]
			[Address(RVA = "0xD8E880", Offset = "0xD8E880", VA = "0xD8E880", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600157B")]
		[Address(RVA = "0xD8E734", Offset = "0xD8E734", VA = "0xD8E734")]
		[DebuggerHidden]
		public <Idle>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x600157C")]
		[Address(RVA = "0xD8E760", Offset = "0xD8E760", VA = "0xD8E760", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600157D")]
		[Address(RVA = "0xD8E764", Offset = "0xD8E764", VA = "0xD8E764", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600157F")]
		[Address(RVA = "0xD8E840", Offset = "0xD8E840", VA = "0xD8E840", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200031A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9183B8", Offset = "0x9183B8")]
	private sealed class <Turn>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400173A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ReturnToMissionArea <>4__this;

		[Token(Token = "0x17000120")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001584")]
			[Address(RVA = "0xD8EAE0", Offset = "0xD8EAE0", VA = "0xD8EAE0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000121")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001586")]
			[Address(RVA = "0xD8EB28", Offset = "0xD8EB28", VA = "0xD8EB28", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001581")]
		[Address(RVA = "0xD8E888", Offset = "0xD8E888", VA = "0xD8E888")]
		[DebuggerHidden]
		public <Turn>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6001582")]
		[Address(RVA = "0xD8E8B4", Offset = "0xD8E8B4", VA = "0xD8E8B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001583")]
		[Address(RVA = "0xD8E8B8", Offset = "0xD8E8B8", VA = "0xD8E8B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001585")]
		[Address(RVA = "0xD8EAE8", Offset = "0xD8EAE8", VA = "0xD8EAE8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001733")]
	public const float kMaxDistance = 4500f;

	[Token(Token = "0x4001734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool turning;

	[Token(Token = "0x6001576")]
	[Address(RVA = "0xDB404C", Offset = "0xDB404C", VA = "0xDB404C")]
	public void Start()
	{
	}

	[Token(Token = "0x6001577")]
	[Address(RVA = "0xDB4078", Offset = "0xDB4078", VA = "0xDB4078")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92A014", Offset = "0x92A014")]
	public IEnumerator Idle()
	{
		return null;
	}

	[Token(Token = "0x6001578")]
	[Address(RVA = "0xDB40E4", Offset = "0xDB40E4", VA = "0xDB40E4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92A074", Offset = "0x92A074")]
	private IEnumerator Turn()
	{
		return null;
	}

	[Token(Token = "0x6001579")]
	[Address(RVA = "0xDB4150", Offset = "0xDB4150", VA = "0xDB4150")]
	public void CheckBack()
	{
	}

	[Token(Token = "0x600157A")]
	[Address(RVA = "0xDB4320", Offset = "0xDB4320", VA = "0xDB4320")]
	public ReturnToMissionArea()
	{
	}
}
[Token(Token = "0x200031B")]
public class Road : MonoBehaviour
{
	[Token(Token = "0x400173B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public int multiLocationObjectId;

	[Token(Token = "0x400173C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float width;

	[Token(Token = "0x400173D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float sideWidth;

	[Token(Token = "0x400173E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool createTangent;

	[Token(Token = "0x400173F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool createPhysics;

	[Token(Token = "0x4001740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int trianglesCount;

	[Token(Token = "0x4001741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject bridgePrefab;

	[Token(Token = "0x4001742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material mapMaterial;

	[Token(Token = "0x4001743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material myMaterial;

	[Token(Token = "0x4001744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3[] vertices;

	[Token(Token = "0x4001745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector2[] uv;

	[Token(Token = "0x4001746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3[] norm;

	[Token(Token = "0x4001747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color[] colors;

	[Token(Token = "0x4001748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int[] triangles;

	[Token(Token = "0x4001749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool[] bridge;

	[Token(Token = "0x400174A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool[] bridgeSegment;

	[Token(Token = "0x400174B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private SplineCurve spline;

	[Token(Token = "0x400174C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int vert;

	[Token(Token = "0x400174D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Renderer r;

	[Token(Token = "0x400174E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Mesh mesh;

	[Token(Token = "0x400174F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private MultiplayerSync.SyncState mSync;

	[Token(Token = "0x4001750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Vector3 lastNormal;

	[Token(Token = "0x6001587")]
	[Address(RVA = "0xDBE678", Offset = "0xDBE678", VA = "0xDBE678")]
	public void InitMultiplayerSync()
	{
	}

	[Token(Token = "0x6001588")]
	[Address(RVA = "0xDBE6EC", Offset = "0xDBE6EC", VA = "0xDBE6EC")]
	public void Awake()
	{
	}

	[Token(Token = "0x6001589")]
	[Address(RVA = "0xDBE740", Offset = "0xDBE740", VA = "0xDBE740")]
	public void Start()
	{
	}

	[Token(Token = "0x600158A")]
	[Address(RVA = "0xDBEA50", Offset = "0xDBEA50", VA = "0xDBEA50")]
	public void SwitchMaterial()
	{
	}

	[Token(Token = "0x600158B")]
	[Address(RVA = "0xDBEB54", Offset = "0xDBEB54", VA = "0xDBEB54")]
	public void PlantTrees()
	{
	}

	[Token(Token = "0x600158C")]
	[Address(RVA = "0xDBED38", Offset = "0xDBED38", VA = "0xDBED38")]
	public void BuildRoadMesh()
	{
	}

	[Token(Token = "0x600158D")]
	[Address(RVA = "0xDBFE08", Offset = "0xDBFE08", VA = "0xDBFE08")]
	public static float GetH(Vector3 pos)
	{
		return default(float);
	}

	[Token(Token = "0x600158E")]
	[Address(RVA = "0xDBFF38", Offset = "0xDBFF38", VA = "0xDBFF38")]
	public void UpdateMesh()
	{
	}

	[Token(Token = "0x600158F")]
	[Address(RVA = "0xDC0120", Offset = "0xDC0120", VA = "0xDC0120")]
	public void UpdateMeshCollider()
	{
	}

	[Token(Token = "0x6001590")]
	[Address(RVA = "0xDBF9E8", Offset = "0xDBF9E8", VA = "0xDBF9E8")]
	public bool IsBridge(int segment)
	{
		return default(bool);
	}

	[Token(Token = "0x6001591")]
	[Address(RVA = "0xDBFB5C", Offset = "0xDBFB5C", VA = "0xDBFB5C")]
	public void BuildBridge(int segment)
	{
	}

	[Token(Token = "0x6001592")]
	[Address(RVA = "0xDC0210", Offset = "0xDC0210", VA = "0xDC0210")]
	public Vector3[] GetVertices()
	{
		return null;
	}

	[Token(Token = "0x6001593")]
	[Address(RVA = "0xDC0218", Offset = "0xDC0218", VA = "0xDC0218")]
	public bool[] GetBridges()
	{
		return null;
	}

	[Token(Token = "0x6001594")]
	[Address(RVA = "0xDC0220", Offset = "0xDC0220", VA = "0xDC0220")]
	public float DistanceToRoad(Vector3 pos)
	{
		return default(float);
	}

	[Token(Token = "0x6001595")]
	[Address(RVA = "0xDC0338", Offset = "0xDC0338", VA = "0xDC0338")]
	public Road()
	{
	}
}
[Token(Token = "0x200031C")]
public class RoadManager : MonoBehaviour
{
	[Token(Token = "0x4001751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Road[] roads;

	[Token(Token = "0x4001752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Bridge[] bridges;

	[Token(Token = "0x4001753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static List<RoadVehicle> vehicles;

	[Token(Token = "0x6001596")]
	[Address(RVA = "0xDC034C", Offset = "0xDC034C", VA = "0xDC034C")]
	public static void Add(RoadVehicle v)
	{
	}

	[Token(Token = "0x6001597")]
	[Address(RVA = "0xDC03D8", Offset = "0xDC03D8", VA = "0xDC03D8")]
	public static void Remove(RoadVehicle v)
	{
	}

	[Token(Token = "0x6001598")]
	[Address(RVA = "0xDBE85C", Offset = "0xDBE85C", VA = "0xDBE85C")]
	public static void Add(Road nr)
	{
	}

	[Token(Token = "0x6001599")]
	[Address(RVA = "0xDC0464", Offset = "0xDC0464", VA = "0xDC0464")]
	public static void Add(Bridge bridge)
	{
	}

	[Token(Token = "0x600159A")]
	[Address(RVA = "0xDC0664", Offset = "0xDC0664", VA = "0xDC0664")]
	public static void MapOnOff()
	{
	}

	[Token(Token = "0x600159B")]
	[Address(RVA = "0xDC076C", Offset = "0xDC076C", VA = "0xDC076C")]
	public static int FindNearestVertex(Vector3[] vertices, Vector3 pos)
	{
		return default(int);
	}

	[Token(Token = "0x600159C")]
	[Address(RVA = "0xDC0814", Offset = "0xDC0814", VA = "0xDC0814")]
	public static Road FindRoad(Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x600159D")]
	[Address(RVA = "0xDC0990", Offset = "0xDC0990", VA = "0xDC0990")]
	public static Bridge NearestBridgeTo(Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x600159E")]
	[Address(RVA = "0xDC0B0C", Offset = "0xDC0B0C", VA = "0xDC0B0C")]
	public static int GetObstacle(Transform transform)
	{
		return default(int);
	}

	[Token(Token = "0x600159F")]
	[Address(RVA = "0xDC0CA4", Offset = "0xDC0CA4", VA = "0xDC0CA4")]
	public RoadManager()
	{
	}
}
[Token(Token = "0x200031D")]
public class RoadPlaner : MonoBehaviour
{
	[Token(Token = "0x200031E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9183C8", Offset = "0x9183C8")]
	private sealed class <Start>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RoadPlaner <>4__this;

		[Token(Token = "0x17000122")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60015A9")]
			[Address(RVA = "0xD8F748", Offset = "0xD8F748", VA = "0xD8F748", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000123")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60015AB")]
			[Address(RVA = "0xD8F790", Offset = "0xD8F790", VA = "0xD8F790", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015A6")]
		[Address(RVA = "0xD8F420", Offset = "0xD8F420", VA = "0xD8F420")]
		[DebuggerHidden]
		public <Start>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x60015A7")]
		[Address(RVA = "0xD8F44C", Offset = "0xD8F44C", VA = "0xD8F44C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60015A8")]
		[Address(RVA = "0xD8F450", Offset = "0xD8F450", VA = "0xD8F450", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60015AA")]
		[Address(RVA = "0xD8F750", Offset = "0xD8F750", VA = "0xD8F750", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SplineCurve spline;

	[Token(Token = "0x4001755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform[] point;

	[Token(Token = "0x60015A1")]
	[Address(RVA = "0xDC0D34", Offset = "0xDC0D34", VA = "0xDC0D34")]
	private void Awake()
	{
	}

	[Token(Token = "0x60015A2")]
	[Address(RVA = "0xDC0E38", Offset = "0xDC0E38", VA = "0xDC0E38")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92A174", Offset = "0x92A174")]
	public IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60015A3")]
	[Address(RVA = "0xDC0EA4", Offset = "0xDC0EA4", VA = "0xDC0EA4")]
	public float GetH(Vector3 pos)
	{
		return default(float);
	}

	[Token(Token = "0x60015A4")]
	[Address(RVA = "0xDC0FA4", Offset = "0xDC0FA4", VA = "0xDC0FA4")]
	public void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60015A5")]
	[Address(RVA = "0xDC1094", Offset = "0xDC1094", VA = "0xDC1094")]
	public RoadPlaner()
	{
	}
}
[Token(Token = "0x200031F")]
public enum eRVstate
{
	[Token(Token = "0x400175A")]
	stop,
	[Token(Token = "0x400175B")]
	moveForward,
	[Token(Token = "0x400175C")]
	moveBack,
	[Token(Token = "0x400175D")]
	falling
}
[Token(Token = "0x2000320")]
public class RoadVehicle : MonoBehaviour
{
	[Token(Token = "0x2000321")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9183D8", Offset = "0x9183D8")]
	private sealed class <StartYielded>d__36 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400177B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400177C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400177D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RoadVehicle <>4__this;

		[Token(Token = "0x400177E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <pos>5__2;

		[Token(Token = "0x17000124")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60015C4")]
			[Address(RVA = "0xD8FCA8", Offset = "0xD8FCA8", VA = "0xD8FCA8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000125")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60015C6")]
			[Address(RVA = "0xD8FCF0", Offset = "0xD8FCF0", VA = "0xD8FCF0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015C1")]
		[Address(RVA = "0xD8F798", Offset = "0xD8F798", VA = "0xD8F798")]
		[DebuggerHidden]
		public <StartYielded>d__36(int <>1__state)
		{
		}

		[Token(Token = "0x60015C2")]
		[Address(RVA = "0xD8F7C4", Offset = "0xD8F7C4", VA = "0xD8F7C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60015C3")]
		[Address(RVA = "0xD8F7C8", Offset = "0xD8F7C8", VA = "0xD8F7C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60015C5")]
		[Address(RVA = "0xD8FCB0", Offset = "0xD8FCB0", VA = "0xD8FCB0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400175E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public eRVstate state;

	[Token(Token = "0x400175F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool repeat;

	[Token(Token = "0x4001760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float speed;

	[Token(Token = "0x4001761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float turnSpeed;

	[Token(Token = "0x4001762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform mainObject;

	[Token(Token = "0x4001763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected Road road;

	[Token(Token = "0x4001764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int vIndex;

	[Token(Token = "0x4001765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x91B824", Offset = "0x91B824")]
	[SerializeField]
	private bool autoSetupWheels;

	[Token(Token = "0x4001766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	public bool hasWheels;

	[Token(Token = "0x4001767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
	public bool useWheels;

	[Token(Token = "0x4001768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Transform frontLeft;

	[Token(Token = "0x4001769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Transform frontRight;

	[Token(Token = "0x400176A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Transform rearWheels;

	[Token(Token = "0x400176B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private float wheelSize;

	[Token(Token = "0x400176C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float wheelRadius2Pi;

	[Token(Token = "0x400176D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Quaternion wheelNormalRotation;

	[Token(Token = "0x400176E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Quaternion wheelRotationSteer;

	[Token(Token = "0x400176F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Quaternion wheelRotation;

	[Token(Token = "0x4001770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected float dist;

	[Token(Token = "0x4001771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected Vector3[] vertices;

	[Token(Token = "0x4001772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected bool ready;

	[Token(Token = "0x4001773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	protected float currentSpeed;

	[Token(Token = "0x4001774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected Rigidbody rb;

	[Token(Token = "0x4001775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected int obstacle;

	[Token(Token = "0x4001776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	protected float accSpeed;

	[Token(Token = "0x4001777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected float breakSpeed;

	[Token(Token = "0x4001778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float fallTime;

	[Token(Token = "0x4001779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int globalObstacle;

	[Token(Token = "0x400177A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static float startTime;

	[Token(Token = "0x60015AC")]
	[Address(RVA = "0xDC109C", Offset = "0xDC109C", VA = "0xDC109C")]
	public static void Reset()
	{
	}

	[Token(Token = "0x60015AD")]
	[Address(RVA = "0xDC1100", Offset = "0xDC1100", VA = "0xDC1100")]
	public void DestroyRoadVechicle()
	{
	}

	[Token(Token = "0x60015AE")]
	[Address(RVA = "0xDC1168", Offset = "0xDC1168", VA = "0xDC1168")]
	public void SetTrackVehicleOnly()
	{
	}

	[Token(Token = "0x60015AF")]
	[Address(RVA = "0xDC1174", Offset = "0xDC1174", VA = "0xDC1174")]
	private void Awake()
	{
	}

	[Token(Token = "0x60015B0")]
	[Address(RVA = "0xDC11F0", Offset = "0xDC11F0", VA = "0xDC11F0")]
	public void Start()
	{
	}

	[Token(Token = "0x60015B1")]
	[Address(RVA = "0xDC1260", Offset = "0xDC1260", VA = "0xDC1260")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60015B2")]
	[Address(RVA = "0xDC12C0", Offset = "0xDC12C0", VA = "0xDC12C0", Slot = "4")]
	protected virtual void Initialize()
	{
	}

	[Token(Token = "0x60015B3")]
	[Address(RVA = "0xDC12EC", Offset = "0xDC12EC", VA = "0xDC12EC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92A224", Offset = "0x92A224")]
	private IEnumerator StartYielded()
	{
		return null;
	}

	[Token(Token = "0x60015B4")]
	[Address(RVA = "0xDC1358", Offset = "0xDC1358", VA = "0xDC1358", Slot = "5")]
	public virtual Vector3 FindNextPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60015B5")]
	[Address(RVA = "0xDC1428", Offset = "0xDC1428", VA = "0xDC1428", Slot = "6")]
	public virtual Vector3 FindPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60015B6")]
	[Address(RVA = "0xDC1500", Offset = "0xDC1500", VA = "0xDC1500", Slot = "7")]
	public virtual float DistToNextPoint()
	{
		return default(float);
	}

	[Token(Token = "0x60015B7")]
	[Address(RVA = "0xDC1590", Offset = "0xDC1590", VA = "0xDC1590", Slot = "8")]
	public virtual void MoveIndex()
	{
	}

	[Token(Token = "0x60015B8")]
	[Address(RVA = "0xDC16D0", Offset = "0xDC16D0", VA = "0xDC16D0")]
	public void Rotate()
	{
	}

	[Token(Token = "0x60015B9")]
	[Address(RVA = "0xDC1718", Offset = "0xDC1718", VA = "0xDC1718")]
	public float FollowTheRoad(float dt)
	{
		return default(float);
	}

	[Token(Token = "0x60015BA")]
	[Address(RVA = "0xDC1A2C", Offset = "0xDC1A2C", VA = "0xDC1A2C")]
	public void RotateWheels(float dist)
	{
	}

	[Token(Token = "0x60015BB")]
	[Address(RVA = "0xDC1BBC", Offset = "0xDC1BBC", VA = "0xDC1BBC")]
	private void Update()
	{
	}

	[Token(Token = "0x60015BC")]
	[Address(RVA = "0xDC1D00", Offset = "0xDC1D00", VA = "0xDC1D00", Slot = "9")]
	protected virtual void UpdateMove()
	{
	}

	[Token(Token = "0x60015BD")]
	[Address(RVA = "0xDC1D28", Offset = "0xDC1D28", VA = "0xDC1D28")]
	public void BeginFalling()
	{
	}

	[Token(Token = "0x60015BE")]
	[Address(RVA = "0xDC1DD4", Offset = "0xDC1DD4", VA = "0xDC1DD4", Slot = "10")]
	protected virtual void SetupFalling()
	{
	}

	[Token(Token = "0x60015BF")]
	[Address(RVA = "0xDC1DD8", Offset = "0xDC1DD8", VA = "0xDC1DD8")]
	public RoadVehicle()
	{
	}
}
[Token(Token = "0x2000322")]
public class RoadVehicle_LOD : L_O_D
{
	[Token(Token = "0x400177F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private RoadVehicle rv;

	[Token(Token = "0x60015C7")]
	[Address(RVA = "0xDC1E04", Offset = "0xDC1E04", VA = "0xDC1E04", Slot = "5")]
	protected override void EnableHiRes()
	{
	}

	[Token(Token = "0x60015C8")]
	[Address(RVA = "0xDC1E3C", Offset = "0xDC1E3C", VA = "0xDC1E3C", Slot = "6")]
	protected override void DisableHiRes()
	{
	}

	[Token(Token = "0x60015C9")]
	[Address(RVA = "0xDC1E70", Offset = "0xDC1E70", VA = "0xDC1E70")]
	public RoadVehicle_LOD()
	{
	}
}
[Token(Token = "0x2000323")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x9183E8", Offset = "0x9183E8")]
public class RocketBay : MonoBehaviour
{
	[Token(Token = "0x4001780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public eMissile rocketType;

	[Token(Token = "0x4001781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int rockets;

	[Token(Token = "0x4001782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform crosshairAimPivot;

	[Token(Token = "0x4001783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] slots;

	[Token(Token = "0x4001784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject[] dummies;

	[Token(Token = "0x4001785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float delay;

	[Token(Token = "0x4001786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float time;

	[Token(Token = "0x4001787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private PlaneBody plane;

	[Token(Token = "0x4001788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Hull hull;

	[Token(Token = "0x4001789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int maxRockets;

	[Token(Token = "0x60015CA")]
	[Address(RVA = "0xDC1ED4", Offset = "0xDC1ED4", VA = "0xDC1ED4")]
	private void Start()
	{
	}

	[Token(Token = "0x60015CB")]
	[Address(RVA = "0xDC23B4", Offset = "0xDC23B4", VA = "0xDC23B4")]
	public void SetCount(int count)
	{
	}

	[Token(Token = "0x60015CC")]
	[Address(RVA = "0xDC23C0", Offset = "0xDC23C0", VA = "0xDC23C0")]
	public void Reload()
	{
	}

	[Token(Token = "0x60015CD")]
	[Address(RVA = "0xDC23CC", Offset = "0xDC23CC", VA = "0xDC23CC")]
	public bool NeedReload()
	{
		return default(bool);
	}

	[Token(Token = "0x60015CE")]
	[Address(RVA = "0xDC208C", Offset = "0xDC208C", VA = "0xDC208C")]
	public void Fill()
	{
	}

	[Token(Token = "0x60015CF")]
	[Address(RVA = "0xDC23EC", Offset = "0xDC23EC", VA = "0xDC23EC")]
	public bool HasRocket()
	{
		return default(bool);
	}

	[Token(Token = "0x60015D0")]
	[Address(RVA = "0xDC23FC", Offset = "0xDC23FC", VA = "0xDC23FC")]
	public bool LaunchRocket(Vector3 targetPos, bool remote = false)
	{
		return default(bool);
	}

	[Token(Token = "0x60015D1")]
	[Address(RVA = "0xDC2C84", Offset = "0xDC2C84", VA = "0xDC2C84")]
	public bool LaunchRocketAI(Vector3 targetPos)
	{
		return default(bool);
	}

	[Token(Token = "0x60015D2")]
	[Address(RVA = "0xDC2408", Offset = "0xDC2408", VA = "0xDC2408")]
	private bool LaunchRocketP(Vector3 targetPos, float delayMul, bool remote = false)
	{
		return default(bool);
	}

	[Token(Token = "0x60015D3")]
	[Address(RVA = "0xDC2C90", Offset = "0xDC2C90", VA = "0xDC2C90")]
	public RocketBay()
	{
	}
}
[Token(Token = "0x2000324")]
public class RotateAxis : MonoBehaviour
{
	[Token(Token = "0x400178A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speedX;

	[Token(Token = "0x400178B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float speedY;

	[Token(Token = "0x400178C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float speedZ;

	[Token(Token = "0x400178D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool resetOnEnable;

	[Token(Token = "0x400178E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool unscaledTime;

	[Token(Token = "0x400178F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected float lastDisableTime;

	[Token(Token = "0x60015D5")]
	[Address(RVA = "0xDC3E20", Offset = "0xDC3E20", VA = "0xDC3E20")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60015D6")]
	[Address(RVA = "0xDC3E98", Offset = "0xDC3E98", VA = "0xDC3E98")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60015D7")]
	[Address(RVA = "0xDC3EC0", Offset = "0xDC3EC0", VA = "0xDC3EC0")]
	private void Update()
	{
	}

	[Token(Token = "0x60015D8")]
	[Address(RVA = "0xDC3F5C", Offset = "0xDC3F5C", VA = "0xDC3F5C")]
	public RotateAxis()
	{
	}
}
[Token(Token = "0x2000325")]
public class RotateByAxis : MonoBehaviour
{
	[Token(Token = "0x2000326")]
	public enum Axis
	{
		[Token(Token = "0x4001793")]
		X,
		[Token(Token = "0x4001794")]
		Y,
		[Token(Token = "0x4001795")]
		Z
	}

	[Token(Token = "0x4001790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Axis axis;

	[Token(Token = "0x4001791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float speed;

	[Token(Token = "0x60015D9")]
	[Address(RVA = "0xDC3F64", Offset = "0xDC3F64", VA = "0xDC3F64")]
	private void Start()
	{
	}

	[Token(Token = "0x60015DA")]
	[Address(RVA = "0xDC3F68", Offset = "0xDC3F68", VA = "0xDC3F68")]
	private void Update()
	{
	}

	[Token(Token = "0x60015DB")]
	[Address(RVA = "0xDC4034", Offset = "0xDC4034", VA = "0xDC4034")]
	public RotateByAxis()
	{
	}
}
[Token(Token = "0x2000327")]
public class RotateCartridge : MonoBehaviour
{
	[Token(Token = "0x4001796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Cannon selfCannon;

	[Token(Token = "0x4001797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 axis;

	[Token(Token = "0x60015DC")]
	[Address(RVA = "0xDC4048", Offset = "0xDC4048", VA = "0xDC4048")]
	private void Start()
	{
	}

	[Token(Token = "0x60015DD")]
	[Address(RVA = "0xDC41F8", Offset = "0xDC41F8", VA = "0xDC41F8")]
	private void OnShoot()
	{
	}

	[Token(Token = "0x60015DE")]
	[Address(RVA = "0xDC4240", Offset = "0xDC4240", VA = "0xDC4240")]
	public RotateCartridge()
	{
	}
}
[Token(Token = "0x2000328")]
public class SavePlanePrefab : MonoBehaviour
{
	[Token(Token = "0x60015DF")]
	[Address(RVA = "0xDC5F28", Offset = "0xDC5F28", VA = "0xDC5F28")]
	public bool IsPrefab()
	{
		return default(bool);
	}

	[Token(Token = "0x60015E0")]
	[Address(RVA = "0xDC5F30", Offset = "0xDC5F30", VA = "0xDC5F30")]
	public void UnpackPrefab()
	{
	}

	[Token(Token = "0x60015E1")]
	[Address(RVA = "0xDC5F34", Offset = "0xDC5F34", VA = "0xDC5F34")]
	public void SavePrefab()
	{
	}

	[Token(Token = "0x60015E2")]
	[Address(RVA = "0xDC5F38", Offset = "0xDC5F38", VA = "0xDC5F38")]
	public SavePlanePrefab()
	{
	}
}
[Token(Token = "0x2000329")]
public class SaveTextureAsset : MonoBehaviour
{
	[Token(Token = "0x4001798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Camera cam;

	[Token(Token = "0x60015E3")]
	[Address(RVA = "0xDC5F40", Offset = "0xDC5F40", VA = "0xDC5F40")]
	public void Start()
	{
	}

	[Token(Token = "0x60015E4")]
	[Address(RVA = "0xDC5F44", Offset = "0xDC5F44", VA = "0xDC5F44")]
	public void Update()
	{
	}

	[Token(Token = "0x60015E5")]
	[Address(RVA = "0xDC5F48", Offset = "0xDC5F48", VA = "0xDC5F48")]
	public void SavePlaneAsset()
	{
	}

	[Token(Token = "0x60015E6")]
	[Address(RVA = "0xDC5F4C", Offset = "0xDC5F4C", VA = "0xDC5F4C")]
	public SaveTextureAsset()
	{
	}
}
[Token(Token = "0x200032A")]
public class ScrollUV : MonoBehaviour
{
	[Token(Token = "0x4001799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector2 speed;

	[Token(Token = "0x400179A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Material mat;

	[Token(Token = "0x400179B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector2 offset;

	[Token(Token = "0x60015E7")]
	[Address(RVA = "0xDC679C", Offset = "0xDC679C", VA = "0xDC679C")]
	public void Start()
	{
	}

	[Token(Token = "0x60015E8")]
	[Address(RVA = "0xDC6810", Offset = "0xDC6810", VA = "0xDC6810")]
	public void Update()
	{
	}

	[Token(Token = "0x60015E9")]
	[Address(RVA = "0xDC6864", Offset = "0xDC6864", VA = "0xDC6864")]
	public ScrollUV()
	{
	}
}
[Token(Token = "0x200032B")]
public class SellPlaneWindow : MonoBehaviour
{
	[Token(Token = "0x400179C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMesh question;

	[Token(Token = "0x400179D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject sellButton;

	[Token(Token = "0x400179E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MeshRenderer icon;

	[Token(Token = "0x60015EA")]
	[Address(RVA = "0xDC6BBC", Offset = "0xDC6BBC", VA = "0xDC6BBC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60015EB")]
	[Address(RVA = "0xDC6E70", Offset = "0xDC6E70", VA = "0xDC6E70")]
	private void SellPlane()
	{
	}

	[Token(Token = "0x60015EC")]
	[Address(RVA = "0xDC6ECC", Offset = "0xDC6ECC", VA = "0xDC6ECC")]
	public SellPlaneWindow()
	{
	}
}
[Token(Token = "0x200032C")]
public enum ServerWWWErrorCode
{
	[Token(Token = "0x40017A0")]
	CloudSaveNotInitialized,
	[Token(Token = "0x40017A1")]
	CloudSaveNotLoggedIn,
	[Token(Token = "0x40017A2")]
	ErrorConnectingServer,
	[Token(Token = "0x40017A3")]
	ErrorAuthorNotFound,
	[Token(Token = "0x40017A4")]
	ErrorNotFound,
	[Token(Token = "0x40017A5")]
	ErrorOther,
	[Token(Token = "0x40017A6")]
	ErrorInvalidCode,
	[Token(Token = "0x40017A7")]
	ErrorInvalidType
}
[Token(Token = "0x200032D")]
public enum WWWReplyResult
{
	[Token(Token = "0x40017A9")]
	Unknown,
	[Token(Token = "0x40017AA")]
	OK
}
[Token(Token = "0x200032E")]
public class PlayerScore
{
	[Token(Token = "0x40017AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string type;

	[Token(Token = "0x40017AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public uint account_id;

	[Token(Token = "0x40017AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string playerName;

	[Token(Token = "0x40017AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int playerExpLevel;

	[Token(Token = "0x40017AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int position;

	[Token(Token = "0x40017B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int gamesCnt;

	[Token(Token = "0x40017B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int points;

	[Token(Token = "0x60015ED")]
	[Address(RVA = "0x117C464", Offset = "0x117C464", VA = "0x117C464")]
	public PlayerScore()
	{
	}
}
[Token(Token = "0x200032F")]
public class ServerCustomCampaignItem
{
	[Token(Token = "0x40017B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public long guid;

	[Token(Token = "0x40017B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CustomMissionTranslatedText trlTitle;

	[Token(Token = "0x40017B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int account_id;

	[Token(Token = "0x40017B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string player_name;

	[Token(Token = "0x40017B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int author_difficulty;

	[Token(Token = "0x40017B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int missions;

	[Token(Token = "0x40017B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int planesCnt;

	[Token(Token = "0x40017B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int nation;

	[Token(Token = "0x40017BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int rating_cnt;

	[Token(Token = "0x40017BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float rating_avrg;

	[Token(Token = "0x40017BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float rating_weight;

	[Token(Token = "0x40017BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int difficulty_cnt;

	[Token(Token = "0x40017BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float difficulty_avrg;

	[Token(Token = "0x40017BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int difficulty_lvl;

	[Token(Token = "0x40017C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int totalgames_cnt;

	[Token(Token = "0x40017C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int totalgames2_cnt;

	[Token(Token = "0x40017C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string save;

	[Token(Token = "0x60015EE")]
	[Address(RVA = "0xDC6ED4", Offset = "0xDC6ED4", VA = "0xDC6ED4")]
	public ServerCustomCampaignItem()
	{
	}
}
[Token(Token = "0x2000330")]
public class ServerWWW : MonoBehaviour
{
	[Token(Token = "0x2000331")]
	protected class CachedReply
	{
		[Token(Token = "0x40017D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string logged_mail;

		[Token(Token = "0x40017D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string action;

		[Token(Token = "0x40017D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Dictionary<string, string> parameters;

		[Token(Token = "0x40017D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string reply;

		[Token(Token = "0x40017D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float time;

		[Token(Token = "0x40017D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public object obj;

		[Token(Token = "0x6001617")]
		[Address(RVA = "0xD907FC", Offset = "0xD907FC", VA = "0xD907FC")]
		public CachedReply()
		{
		}

		[Token(Token = "0x6001618")]
		[Address(RVA = "0xD9089C", Offset = "0xD9089C", VA = "0xD9089C")]
		public CachedReply(string mail, string _action, Dictionary<string, string> _params, string _reply, float _time)
		{
		}
	}

	[Token(Token = "0x2000332")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9183FC", Offset = "0x9183FC")]
	private sealed class <StartYielded>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40017D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40017D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40017DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ServerWWW <>4__this;

		[Token(Token = "0x17000126")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600161C")]
			[Address(RVA = "0xD907AC", Offset = "0xD907AC", VA = "0xD907AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000127")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600161E")]
			[Address(RVA = "0xD907F4", Offset = "0xD907F4", VA = "0xD907F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001619")]
		[Address(RVA = "0xD9064C", Offset = "0xD9064C", VA = "0xD9064C")]
		[DebuggerHidden]
		public <StartYielded>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x600161A")]
		[Address(RVA = "0xD90678", Offset = "0xD90678", VA = "0xD90678", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600161B")]
		[Address(RVA = "0xD9067C", Offset = "0xD9067C", VA = "0xD9067C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600161D")]
		[Address(RVA = "0xD907B4", Offset = "0xD907B4", VA = "0xD907B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000333")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91840C", Offset = "0x91840C")]
	private sealed class <ResendRequest>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40017DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40017DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40017DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ServerWWW <>4__this;

		[Token(Token = "0x17000128")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001622")]
			[Address(RVA = "0xD8FFEC", Offset = "0xD8FFEC", VA = "0xD8FFEC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000129")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001624")]
			[Address(RVA = "0xD90034", Offset = "0xD90034", VA = "0xD90034", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600161F")]
		[Address(RVA = "0xD8FE9C", Offset = "0xD8FE9C", VA = "0xD8FE9C")]
		[DebuggerHidden]
		public <ResendRequest>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6001620")]
		[Address(RVA = "0xD8FEC8", Offset = "0xD8FEC8", VA = "0xD8FEC8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001621")]
		[Address(RVA = "0xD8FECC", Offset = "0xD8FECC", VA = "0xD8FECC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001623")]
		[Address(RVA = "0xD8FFF4", Offset = "0xD8FFF4", VA = "0xD8FFF4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000334")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91841C", Offset = "0x91841C")]
	private sealed class <SendRequest>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40017DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40017DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40017E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ServerWWW <>4__this;

		[Token(Token = "0x40017E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WWWwrapper <w>5__2;

		[Token(Token = "0x1700012A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001628")]
			[Address(RVA = "0xD905FC", Offset = "0xD905FC", VA = "0xD905FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600162A")]
			[Address(RVA = "0xD90644", Offset = "0xD90644", VA = "0xD90644", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001625")]
		[Address(RVA = "0xD9003C", Offset = "0xD9003C", VA = "0xD9003C")]
		[DebuggerHidden]
		public <SendRequest>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6001626")]
		[Address(RVA = "0xD90068", Offset = "0xD90068", VA = "0xD90068", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001627")]
		[Address(RVA = "0xD9006C", Offset = "0xD9006C", VA = "0xD9006C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001629")]
		[Address(RVA = "0xD90604", Offset = "0xD90604", VA = "0xD90604", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40017C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected string action;

	[Token(Token = "0x40017C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected Dictionary<string, string> parameters;

	[Token(Token = "0x40017C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected bool forceCloudSaveLogged;

	[Token(Token = "0x40017C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected Action<bool> returnCallback;

	[Token(Token = "0x40017C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected Action<int> returnCallbackInt;

	[Token(Token = "0x40017C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected Action<string> returnCallbackString;

	[Token(Token = "0x40017C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected Action<string, int, string> returnCallbackStringIntString;

	[Token(Token = "0x40017CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected Action<object> returnCallbackObj;

	[Token(Token = "0x40017CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected Action<object, int> returnCallbackObjInt;

	[Token(Token = "0x40017CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected Action<object, int, int> returnCallbackObjIntInt;

	[Token(Token = "0x40017CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Action<ServerWWWErrorCode> errorCallback;

	[Token(Token = "0x40017CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected bool cancelRequest;

	[Token(Token = "0x40017CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	protected bool resendIfFailed;

	[Token(Token = "0x40017D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
	protected bool replyRequest;

	[Token(Token = "0x40017D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static List<CachedReply> cachedReplies;

	[Token(Token = "0x60015EF")]
	[Address(RVA = "0xDC6F58", Offset = "0xDC6F58", VA = "0xDC6F58")]
	private void Start()
	{
	}

	[Token(Token = "0x60015F0")]
	[Address(RVA = "0xDC82A4", Offset = "0xDC82A4", VA = "0xDC82A4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92A2D4", Offset = "0x92A2D4")]
	private IEnumerator StartYielded()
	{
		return null;
	}

	[Token(Token = "0x60015F1")]
	[Address(RVA = "0xDC8310", Offset = "0xDC8310", VA = "0xDC8310")]
	private void Update()
	{
	}

	[Token(Token = "0x60015F2")]
	[Address(RVA = "0xDC834C", Offset = "0xDC834C", VA = "0xDC834C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92A334", Offset = "0x92A334")]
	private IEnumerator ResendRequest()
	{
		return null;
	}

	[Token(Token = "0x60015F3")]
	[Address(RVA = "0xDC83B8", Offset = "0xDC83B8", VA = "0xDC83B8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92A394", Offset = "0x92A394")]
	private IEnumerator SendRequest()
	{
		return null;
	}

	[Token(Token = "0x60015F4")]
	[Address(RVA = "0xDC8424", Offset = "0xDC8424", VA = "0xDC8424")]
	protected void ErrorCallback(ServerWWWErrorCode e)
	{
	}

	[Token(Token = "0x60015F5")]
	[Address(RVA = "0xDC8538", Offset = "0xDC8538", VA = "0xDC8538")]
	protected static ServerWWW CreateRequest(string _action, Dictionary<string, string> _params, bool _forceCloudSaveLogged, Action<bool> _returnCallback, Action<int> _returnCallbackInt, Action<string> _returnCallbackString, Action<string, int, string> _returnCallbackStringIntString, Action<object> _returnCallbackObj, Action<object, int> _returnCallbackObjInt, Action<object, int, int> _returnCallbackObjIntInt, Action<ServerWWWErrorCode> _errorCallback)
	{
		return null;
	}

	[Token(Token = "0x60015F6")]
	[Address(RVA = "0xDC7648", Offset = "0xDC7648", VA = "0xDC7648")]
	protected bool ReturnResult(string reply, bool fromCache)
	{
		return default(bool);
	}

	[Token(Token = "0x60015F7")]
	[Address(RVA = "0xDC8C8C", Offset = "0xDC8C8C", VA = "0xDC8C8C")]
	protected void ResetCachedReplies(string action)
	{
	}

	[Token(Token = "0x60015F8")]
	[Address(RVA = "0xDC87E8", Offset = "0xDC87E8", VA = "0xDC87E8")]
	protected void ParseChangePlayerName(string reply)
	{
	}

	[Token(Token = "0x60015F9")]
	[Address(RVA = "0xDC9404", Offset = "0xDC9404", VA = "0xDC9404")]
	protected ServerCustomCampaignItem ParseSaveParams(string vals)
	{
		return null;
	}

	[Token(Token = "0x60015FA")]
	[Address(RVA = "0xDC894C", Offset = "0xDC894C", VA = "0xDC894C")]
	protected void ParseGetGameSave(string reply)
	{
	}

	[Token(Token = "0x60015FB")]
	[Address(RVA = "0xDC8AA4", Offset = "0xDC8AA4", VA = "0xDC8AA4")]
	protected void ParseGetGameSavesList(string reply)
	{
	}

	[Token(Token = "0x60015FC")]
	[Address(RVA = "0xDC9C54", Offset = "0xDC9C54", VA = "0xDC9C54")]
	protected PlayerScore GetPlayerScore(string type, List<PlayerScore> scores, bool clan)
	{
		return null;
	}

	[Token(Token = "0x60015FD")]
	[Address(RVA = "0xDC9248", Offset = "0xDC9248", VA = "0xDC9248")]
	protected void ParseGetScoreLeaderboard(string reply, bool clans, bool includeEmptyLocalPlayerScore)
	{
	}

	[Token(Token = "0x60015FE")]
	[Address(RVA = "0xDC8DE8", Offset = "0xDC8DE8", VA = "0xDC8DE8")]
	protected void ParseGetPlayerScore(string reply, bool clan)
	{
	}

	[Token(Token = "0x60015FF")]
	[Address(RVA = "0xDC9354", Offset = "0xDC9354", VA = "0xDC9354")]
	protected void ParseChallangeOfTheDayLeaderboard(string reply)
	{
	}

	[Token(Token = "0x6001600")]
	[Address(RVA = "0xDC9E4C", Offset = "0xDC9E4C", VA = "0xDC9E4C")]
	protected static PlayerScore[] ParseLeaderboard(string reply, bool clans, bool includeEmptyLocalPlayerScore)
	{
		return null;
	}

	[Token(Token = "0x6001601")]
	[Address(RVA = "0xDCA91C", Offset = "0xDCA91C", VA = "0xDCA91C")]
	public void CancelRequest()
	{
	}

	[Token(Token = "0x6001602")]
	[Address(RVA = "0xDCA9A8", Offset = "0xDCA9A8", VA = "0xDCA9A8")]
	public static ServerWWW ChangePlayerName(string name, Action<bool> callbackResult, Action<ServerWWWErrorCode> callbackError)
	{
		return null;
	}

	[Token(Token = "0x6001603")]
	[Address(RVA = "0xDCAADC", Offset = "0xDCAADC", VA = "0xDCAADC")]
	public static ServerWWW ResetAddSkuItems()
	{
		return null;
	}

	[Token(Token = "0x6001604")]
	[Address(RVA = "0xDCAB7C", Offset = "0xDCAB7C", VA = "0xDCAB7C")]
	public static ServerWWW SetNewsletterSetting(bool agree)
	{
		return null;
	}

	[Token(Token = "0x6001605")]
	[Address(RVA = "0xDCACC0", Offset = "0xDCACC0", VA = "0xDCACC0")]
	public static void SetNewsletterSettingVoid(bool agree)
	{
	}

	[Token(Token = "0x6001606")]
	[Address(RVA = "0xDCAE04", Offset = "0xDCAE04", VA = "0xDCAE04")]
	public static ServerWWW SetLevelParams(long guid, int rateDifficulty, int prevRateDifficulty, int rateRating, int prevRateRating, bool increaseGamesCount, bool increaseGames2Count, Action<bool> callbackResult, Action<ServerWWWErrorCode> callbackError)
	{
		return null;
	}

	[Token(Token = "0x6001607")]
	[Address(RVA = "0xDCB0B8", Offset = "0xDCB0B8", VA = "0xDCB0B8")]
	public static ServerWWW GetLevelSave(long guid, Action<object> callbackResultObj, Action<ServerWWWErrorCode> callbackError)
	{
		return null;
	}

	[Token(Token = "0x6001608")]
	[Address(RVA = "0xDCB234", Offset = "0xDCB234", VA = "0xDCB234")]
	public static ServerWWW GetLevelSaveParams(long guid, Action<object> callbackResultObj, Action<ServerWWWErrorCode> callbackError)
	{
		return null;
	}

	[Token(Token = "0x6001609")]
	[Address(RVA = "0xDCB3B0", Offset = "0xDCB3B0", VA = "0xDCB3B0")]
	public static ServerWWW GetRandomLevelSave(bool singleMissions, Action<object> callbackResultObj, Action<ServerWWWErrorCode> callbackError)
	{
		return null;
	}

	[Token(Token = "0x600160A")]
	[Address(RVA = "0xDCB544", Offset = "0xDCB544", VA = "0xDCB544")]
	public static ServerWWW GetLevelsList(bool singleMissions, int nation, CustomCampaignData.eDifficulty difficulty, CustomCampaignData.eSortBy sortByType, string author, long[] onlyGuids, long topGuid, int startIndex, int maxCount, Action<object, int> callbackResultObjInt, Action<ServerWWWErrorCode> callbackError)
	{
		return null;
	}

	[Token(Token = "0x600160B")]
	[Address(RVA = "0xDCB928", Offset = "0xDCB928", VA = "0xDCB928")]
	public static ServerWWW SendCustomMissionScore(int points, Action<bool> callbackResult, Action<ServerWWWErrorCode> callbackError)
	{
		return null;
	}

	[Token(Token = "0x600160C")]
	[Address(RVA = "0xDCBA94", Offset = "0xDCBA94", VA = "0xDCBA94")]
	public static ServerWWW GetCustomMissionsLeaderboard(bool includePlayer, Action<object> callbackResultObj, Action<ServerWWWErrorCode> callbackError)
	{
		return null;
	}

	[Token(Token = "0x600160D")]
	[Address(RVA = "0xDCBC60", Offset = "0xDCBC60", VA = "0xDCBC60")]
	public static ServerWWW SendMultiplayerScore(int points, int type, string sessionID, Action<bool> callbackResult, Action<ServerWWWErrorCode> callbackError)
	{
		return null;
	}

	[Token(Token = "0x600160E")]
	[Address(RVA = "0xDCBEFC", Offset = "0xDCBEFC", VA = "0xDCBEFC")]
	public static ServerWWW GetPlayerScore(Action<object> callbackResult, Action<ServerWWWErrorCode> callbackError)
	{
		return null;
	}

	[Token(Token = "0x600160F")]
	[Address(RVA = "0xDCBFAC", Offset = "0xDCBFAC", VA = "0xDCBFAC")]
	public static ServerWWW GetScoreLeaderboard(string type, int pastPeriod, bool includePlayer, Action<object, int, int> callbackResult, Action<ServerWWWErrorCode> callbackError)
	{
		return null;
	}

	[Token(Token = "0x6001610")]
	[Address(RVA = "0xDCC1EC", Offset = "0xDCC1EC", VA = "0xDCC1EC")]
	public static ServerWWW SendGift(string save, int requiredNation, ulong ownerID, Action<int> callbackResult, Action<ServerWWWErrorCode> callbackError)
	{
		return null;
	}

	[Token(Token = "0x6001611")]
	[Address(RVA = "0xDCC394", Offset = "0xDCC394", VA = "0xDCC394")]
	public static ServerWWW ReceiveGift(int code, int nation, Action<string> callbackResult, Action<ServerWWWErrorCode> callbackError)
	{
		return null;
	}

	[Token(Token = "0x6001612")]
	[Address(RVA = "0xDCC50C", Offset = "0xDCC50C", VA = "0xDCC50C")]
	public static ServerWWW GetActiveGifts(int[] codes, ulong ownerID, Action<object> callbackResult, Action<ServerWWWErrorCode> callbackError)
	{
		return null;
	}

	[Token(Token = "0x6001613")]
	[Address(RVA = "0xDCC740", Offset = "0xDCC740", VA = "0xDCC740")]
	public static ServerWWW RegisterLounge(string loungeID, int loungeKey, string server, Action<bool> callbackResult, Action<ServerWWWErrorCode> callbackError)
	{
		return null;
	}

	[Token(Token = "0x6001614")]
	[Address(RVA = "0xDCC8EC", Offset = "0xDCC8EC", VA = "0xDCC8EC")]
	public static ServerWWW GetRegisteredLounge(string loungeID, Action<string, int, string> callbackResult, Action<ServerWWWErrorCode> callbackError)
	{
		return null;
	}

	[Token(Token = "0x6001615")]
	[Address(RVA = "0xDCCA2C", Offset = "0xDCCA2C", VA = "0xDCCA2C")]
	public ServerWWW()
	{
	}
}
[Token(Token = "0x2000335")]
public class ShadowCasterGroupFocus : MonoBehaviour
{
	[Token(Token = "0x40017E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool areAllModelsSeparate;

	[Token(Token = "0x40017E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float shadowIntensityFactor;

	[Token(Token = "0x600162B")]
	[Address(RVA = "0x10A5998", Offset = "0x10A5998", VA = "0x10A5998")]
	public ShadowCasterGroupFocus()
	{
	}
}
[Token(Token = "0x2000336")]
public class ShadowCreator : MonoBehaviour
{
	[Token(Token = "0x2000337")]
	public enum Shadows
	{
		[Token(Token = "0x40017F8")]
		NONE,
		[Token(Token = "0x40017F9")]
		HARD,
		[Token(Token = "0x40017FA")]
		VARIANCE
	}

	[Token(Token = "0x2000338")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91842C", Offset = "0x91842C")]
	private sealed class <Start>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40017FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40017FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40017FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ShadowCreator <>4__this;

		[Token(Token = "0x40017FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x1700012C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001647")]
			[Address(RVA = "0xD90B84", Offset = "0xD90B84", VA = "0xD90B84", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001649")]
			[Address(RVA = "0xD90BCC", Offset = "0xD90BCC", VA = "0xD90BCC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001644")]
		[Address(RVA = "0xD90A98", Offset = "0xD90A98", VA = "0xD90A98")]
		[DebuggerHidden]
		public <Start>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6001645")]
		[Address(RVA = "0xD90AC4", Offset = "0xD90AC4", VA = "0xD90AC4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001646")]
		[Address(RVA = "0xD90AC8", Offset = "0xD90AC8", VA = "0xD90AC8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001648")]
		[Address(RVA = "0xD90B8C", Offset = "0xD90B8C", VA = "0xD90B8C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40017E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x91B8D0", Offset = "0x91B8D0")]
	private Shader _depthShader;

	[Token(Token = "0x40017E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private int _resolution;

	[Token(Token = "0x40017E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private ComputeShader _blur;

	[Token(Token = "0x40017E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private ComputeShader colorInverse;

	[Token(Token = "0x40017E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x91B94C", Offset = "0x91B94C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x91B94C", Offset = "0x91B94C")]
	public int blurIterations;

	[Token(Token = "0x40017E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x91B9A0", Offset = "0x91B9A0")]
	public float maxShadowIntensity;

	[Token(Token = "0x40017EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool drawTransparent;

	[Token(Token = "0x40017EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x91B9B8", Offset = "0x91B9B8")]
	public float varianceShadowExpansion;

	[Token(Token = "0x40017EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Shadows _shadowType;

	[Token(Token = "0x40017ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public FilterMode _filterMode;

	[Token(Token = "0x40017EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Camera _shadowCam;

	[Token(Token = "0x40017EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private RenderTexture _backTarget;

	[Token(Token = "0x40017F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private RenderTexture _target;

	[Token(Token = "0x40017F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private RenderTexture mipMapTargetFinal;

	[Token(Token = "0x40017F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<Renderer> renderers;

	[Token(Token = "0x40017F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<Vector3> originalScale;

	[Token(Token = "0x40017F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<int> sourceLayers;

	[Token(Token = "0x40017F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private ShadowCasterGroupFocus shadowCasterGroupFocus;

	[Token(Token = "0x40017F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ShadowCreator instance;

	[Token(Token = "0x600162C")]
	[Address(RVA = "0x10A59B0", Offset = "0x10A59B0", VA = "0x10A59B0")]
	public static void Initialize()
	{
	}

	[Token(Token = "0x600162D")]
	[Address(RVA = "0x10A5AC4", Offset = "0x10A5AC4", VA = "0x10A5AC4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600162E")]
	[Address(RVA = "0x10A5CA4", Offset = "0x10A5CA4", VA = "0x10A5CA4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600162F")]
	[Address(RVA = "0x10A5CA8", Offset = "0x10A5CA8", VA = "0x10A5CA8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92A4E4", Offset = "0x92A4E4")]
	public IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6001630")]
	[Address(RVA = "0x10A5D14", Offset = "0x10A5D14", VA = "0x10A5D14")]
	private void BakeShadows()
	{
	}

	[Token(Token = "0x6001631")]
	[Address(RVA = "0x10A685C", Offset = "0x10A685C", VA = "0x10A685C")]
	private void UpdateShadowIntensityToWeather()
	{
	}

	[Token(Token = "0x6001632")]
	[Address(RVA = "0x10A67F0", Offset = "0x10A67F0", VA = "0x10A67F0")]
	private void FillEmpty()
	{
	}

	[Token(Token = "0x6001633")]
	[Address(RVA = "0x10A60DC", Offset = "0x10A60DC", VA = "0x10A60DC")]
	private void SetUpShadowCam()
	{
	}

	[Token(Token = "0x6001634")]
	[Address(RVA = "0x10A70A0", Offset = "0x10A70A0", VA = "0x10A70A0")]
	private void GenerateMipMaps()
	{
	}

	[Token(Token = "0x6001635")]
	[Address(RVA = "0x10A718C", Offset = "0x10A718C", VA = "0x10A718C")]
	private void UpdateShaderValues()
	{
	}

	[Token(Token = "0x6001636")]
	[Address(RVA = "0x10A6300", Offset = "0x10A6300", VA = "0x10A6300")]
	private void UpdateRenderTexture()
	{
	}

	[Token(Token = "0x6001637")]
	[Address(RVA = "0x10A69B4", Offset = "0x10A69B4", VA = "0x10A69B4")]
	private void ScaleObjectForAO()
	{
	}

	[Token(Token = "0x6001638")]
	[Address(RVA = "0x10A6E40", Offset = "0x10A6E40", VA = "0x10A6E40")]
	private void RestoreObjectsAfterAO()
	{
	}

	[Token(Token = "0x6001639")]
	[Address(RVA = "0x10A6CD0", Offset = "0x10A6CD0", VA = "0x10A6CD0")]
	private void UpdateObjectsLayer()
	{
	}

	[Token(Token = "0x600163A")]
	[Address(RVA = "0x10A6F94", Offset = "0x10A6F94", VA = "0x10A6F94")]
	private void RestoreObjectsLayer()
	{
	}

	[Token(Token = "0x600163B")]
	[Address(RVA = "0x10A73C8", Offset = "0x10A73C8", VA = "0x10A73C8")]
	private void SetGlobalScale(Transform t, Vector3 globalScale)
	{
	}

	[Token(Token = "0x600163C")]
	[Address(RVA = "0x10A6478", Offset = "0x10A6478", VA = "0x10A6478")]
	private void UpdateShadowCameraPos()
	{
	}

	[Token(Token = "0x600163D")]
	[Address(RVA = "0x10A72E8", Offset = "0x10A72E8", VA = "0x10A72E8")]
	private RenderTexture CreateTarget(bool useMipMaps = false)
	{
		return null;
	}

	[Token(Token = "0x600163E")]
	[Address(RVA = "0x10A7860", Offset = "0x10A7860", VA = "0x10A7860")]
	private void ForAllKeywords(Action<Shadows> func)
	{
	}

	[Token(Token = "0x600163F")]
	[Address(RVA = "0x10A78C8", Offset = "0x10A78C8", VA = "0x10A78C8")]
	private string ToKeyword(Shadows en)
	{
		return null;
	}

	[Token(Token = "0x6001640")]
	[Address(RVA = "0x10A7464", Offset = "0x10A7464", VA = "0x10A7464")]
	private void GetRenderersExtents(List<Renderer> renderers, Transform frame, out Vector3 center, out Vector3 extents)
	{
	}

	[Token(Token = "0x6001641")]
	[Address(RVA = "0x10A7948", Offset = "0x10A7948", VA = "0x10A7948")]
	private void GetBoundsPoints(Bounds b, Vector3[] points, [Optional] Matrix4x4? mat)
	{
	}

	[Token(Token = "0x6001642")]
	private void Swap<T>(ref T a, ref T b)
	{
	}

	[Token(Token = "0x6001643")]
	[Address(RVA = "0x10A7AFC", Offset = "0x10A7AFC", VA = "0x10A7AFC")]
	public ShadowCreator()
	{
	}
}
[Token(Token = "0x2000339")]
public class ShakeIcon : MonoBehaviour
{
	[Token(Token = "0x40017FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float initDelay;

	[Token(Token = "0x4001800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float shakeTime;

	[Token(Token = "0x4001801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float stopTime;

	[Token(Token = "0x4001802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float shakeSpeed;

	[Token(Token = "0x4001803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float shakeAngle;

	[Token(Token = "0x4001804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float maxTime;

	[Token(Token = "0x4001805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float shakingTime;

	[Token(Token = "0x4001806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float stopedTime;

	[Token(Token = "0x4001807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float rotate;

	[Token(Token = "0x4001808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float timeSum;

	[Token(Token = "0x600164A")]
	[Address(RVA = "0x10A7C24", Offset = "0x10A7C24", VA = "0x10A7C24")]
	private void Awake()
	{
	}

	[Token(Token = "0x600164B")]
	[Address(RVA = "0x10A7C30", Offset = "0x10A7C30", VA = "0x10A7C30")]
	private void Update()
	{
	}

	[Token(Token = "0x600164C")]
	[Address(RVA = "0x10A7D94", Offset = "0x10A7D94", VA = "0x10A7D94")]
	public ShakeIcon()
	{
	}
}
[Token(Token = "0x200033A")]
public class Ship : MonoBehaviour
{
	[Token(Token = "0x4001809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool boat;

	[Token(Token = "0x400180A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float shipLength;

	[Token(Token = "0x400180B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float moveSpeed;

	[Token(Token = "0x400180C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float turnSpeed;

	[Token(Token = "0x400180D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Hull hull;

	[Token(Token = "0x400180E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3[] track;

	[Token(Token = "0x400180F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int nodeIdx;

	[Token(Token = "0x4001810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private TrackVehicleBoat boatV;

	[Token(Token = "0x4001811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float lastHitDistance;

	[Token(Token = "0x4001812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float shipLengthInv;

	[Token(Token = "0x4001813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool engineDown;

	[Token(Token = "0x600164D")]
	[Address(RVA = "0x10AA2E8", Offset = "0x10AA2E8", VA = "0x10AA2E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600164E")]
	[Address(RVA = "0x10AA3E0", Offset = "0x10AA3E0", VA = "0x10AA3E0")]
	private void Start()
	{
	}

	[Token(Token = "0x600164F")]
	[Address(RVA = "0x10AA514", Offset = "0x10AA514", VA = "0x10AA514")]
	public void HandleTorpedoHit(Vector3 localPos)
	{
	}

	[Token(Token = "0x6001650")]
	[Address(RVA = "0x10AA538", Offset = "0x10AA538", VA = "0x10AA538")]
	public void InitTrack(Vector3[] _track, float _moveSpeed, float _turnSpeed)
	{
	}

	[Token(Token = "0x6001651")]
	[Address(RVA = "0x10AA568", Offset = "0x10AA568", VA = "0x10AA568")]
	public Hull GetHull()
	{
		return null;
	}

	[Token(Token = "0x6001652")]
	[Address(RVA = "0x10AA570", Offset = "0x10AA570", VA = "0x10AA570")]
	public float GetSpeed()
	{
		return default(float);
	}

	[Token(Token = "0x6001653")]
	[Address(RVA = "0x10AA5FC", Offset = "0x10AA5FC", VA = "0x10AA5FC")]
	public void Update()
	{
	}

	[Token(Token = "0x6001654")]
	[Address(RVA = "0x10AAA8C", Offset = "0x10AAA8C", VA = "0x10AAA8C")]
	private void Destroyed(Hull h)
	{
	}

	[Token(Token = "0x6001655")]
	[Address(RVA = "0x10AABBC", Offset = "0x10AABBC", VA = "0x10AABBC")]
	public Ship()
	{
	}
}
[Token(Token = "0x200033B")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x91843C", Offset = "0x91843C")]
public class ShipFormation : MonoBehaviour
{
	[Token(Token = "0x4001814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public eParty party;

	[Token(Token = "0x4001815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TrackBoat track;

	[Token(Token = "0x4001816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float moveSpeed;

	[Token(Token = "0x4001817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float turnSpeed;

	[Token(Token = "0x4001818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform[] pos;

	[Token(Token = "0x4001819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ShipFormation instanceFriend;

	[Token(Token = "0x400181A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ShipFormation instanceEnemy;

	[Token(Token = "0x400181B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static ShipFormation instance;

	[Token(Token = "0x400181C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int shipsNum;

	[Token(Token = "0x400181D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] trackPos;

	[Token(Token = "0x400181E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float trackLength;

	[Token(Token = "0x6001656")]
	[Address(RVA = "0x10AB220", Offset = "0x10AB220", VA = "0x10AB220")]
	private void Start()
	{
	}

	[Token(Token = "0x6001657")]
	[Address(RVA = "0x10AB37C", Offset = "0x10AB37C", VA = "0x10AB37C")]
	public void Init(eParty party)
	{
	}

	[Token(Token = "0x6001658")]
	[Address(RVA = "0x10AB34C", Offset = "0x10AB34C", VA = "0x10AB34C")]
	private void InitTrack()
	{
	}

	[Token(Token = "0x6001659")]
	[Address(RVA = "0x10AB8DC", Offset = "0x10AB8DC", VA = "0x10AB8DC")]
	private void CreateRingTrack(eParty party)
	{
	}

	[Token(Token = "0x600165A")]
	[Address(RVA = "0x10AB690", Offset = "0x10AB690", VA = "0x10AB690")]
	private void FindTrackBoat()
	{
	}

	[Token(Token = "0x600165B")]
	[Address(RVA = "0x10ABA48", Offset = "0x10ABA48", VA = "0x10ABA48")]
	public Vector3[] GetTrackNodesPos()
	{
		return null;
	}

	[Token(Token = "0x600165C")]
	[Address(RVA = "0x10ABBE0", Offset = "0x10ABBE0", VA = "0x10ABBE0")]
	public float GetTrackLength(Vector3[] pos)
	{
		return default(float);
	}

	[Token(Token = "0x600165D")]
	[Address(RVA = "0x10ABCBC", Offset = "0x10ABCBC", VA = "0x10ABCBC")]
	public Vector3[] GetOffsetedTrackNodesPos(Vector3 shipPos)
	{
		return null;
	}

	[Token(Token = "0x600165E")]
	[Address(RVA = "0x10AC068", Offset = "0x10AC068", VA = "0x10AC068")]
	public void RegisterInt(Ship ship)
	{
	}

	[Token(Token = "0x600165F")]
	[Address(RVA = "0x10AC648", Offset = "0x10AC648", VA = "0x10AC648")]
	private static void InitInstance(Ship ship)
	{
	}

	[Token(Token = "0x6001660")]
	[Address(RVA = "0x10AA44C", Offset = "0x10AA44C", VA = "0x10AA44C")]
	public static void Register(Ship ship)
	{
	}

	[Token(Token = "0x6001661")]
	[Address(RVA = "0x10AC978", Offset = "0x10AC978", VA = "0x10AC978")]
	public ShipFormation()
	{
	}
}
[Token(Token = "0x200033C")]
public class ShowGameObjectDelayed : MonoBehaviour
{
	[Token(Token = "0x200033D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x918450", Offset = "0x918450")]
	private sealed class <Start>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ShowGameObjectDelayed <>4__this;

		[Token(Token = "0x1700012E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001667")]
			[Address(RVA = "0x136EA2C", Offset = "0x136EA2C", VA = "0x136EA2C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001669")]
			[Address(RVA = "0x136EA74", Offset = "0x136EA74", VA = "0x136EA74", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001664")]
		[Address(RVA = "0x136E904", Offset = "0x136E904", VA = "0x136E904")]
		[DebuggerHidden]
		public <Start>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6001665")]
		[Address(RVA = "0x136E930", Offset = "0x136E930", VA = "0x136E930", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001666")]
		[Address(RVA = "0x136E934", Offset = "0x136E934", VA = "0x136E934", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001668")]
		[Address(RVA = "0x136EA34", Offset = "0x136EA34", VA = "0x136EA34", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400181F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int delayInSeconds;

	[Token(Token = "0x4001820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] objectToShow;

	[Token(Token = "0x6001662")]
	[Address(RVA = "0x10AC98C", Offset = "0x10AC98C", VA = "0x10AC98C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92A594", Offset = "0x92A594")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6001663")]
	[Address(RVA = "0x10AC9F8", Offset = "0x10AC9F8", VA = "0x10AC9F8")]
	public ShowGameObjectDelayed()
	{
	}
}
[Token(Token = "0x200033E")]
public class ShowLanguageCondition : MonoBehaviour
{
	[Token(Token = "0x4001824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string[] showForLanguage;

	[Token(Token = "0x4001825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool reverseShowCondition;

	[Token(Token = "0x4001826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool destroyIfNotShow;

	[Token(Token = "0x4001827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	private bool currEnabled;

	[Token(Token = "0x4001828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Collider> disabledColliders;

	[Token(Token = "0x4001829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<Renderer> disabledRenderers;

	[Token(Token = "0x400182A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool firstCheck;

	[Token(Token = "0x400182B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int delayedUpdate;

	[Token(Token = "0x600166A")]
	[Address(RVA = "0x10ACA08", Offset = "0x10ACA08", VA = "0x10ACA08")]
	private void Awake()
	{
	}

	[Token(Token = "0x600166B")]
	[Address(RVA = "0x10ACBB4", Offset = "0x10ACBB4", VA = "0x10ACBB4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600166C")]
	[Address(RVA = "0x10ACBE4", Offset = "0x10ACBE4", VA = "0x10ACBE4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600166D")]
	[Address(RVA = "0x10ACA20", Offset = "0x10ACA20", VA = "0x10ACA20")]
	private void UpdateShow(bool fromAwake, bool fromOnEnable)
	{
	}

	[Token(Token = "0x600166E")]
	[Address(RVA = "0x10ACC08", Offset = "0x10ACC08", VA = "0x10ACC08")]
	private void EnableCollidersAndRenderers(bool enable, bool fromOnEnable)
	{
	}

	[Token(Token = "0x600166F")]
	[Address(RVA = "0x10AD04C", Offset = "0x10AD04C", VA = "0x10AD04C")]
	private void ResetDisabled()
	{
	}

	[Token(Token = "0x6001670")]
	[Address(RVA = "0x10AD254", Offset = "0x10AD254", VA = "0x10AD254")]
	public ShowLanguageCondition()
	{
	}
}
[Token(Token = "0x200033F")]
public class ShowMessageBox : MonoBehaviour
{
	[Token(Token = "0x400182C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string text;

	[Token(Token = "0x400182D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string radioText;

	[Token(Token = "0x400182E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool mechanic;

	[Token(Token = "0x400182F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool plane;

	[Token(Token = "0x6001671")]
	[Address(RVA = "0x10AD314", Offset = "0x10AD314", VA = "0x10AD314")]
	public void Click()
	{
	}

	[Token(Token = "0x6001672")]
	[Address(RVA = "0x10AD628", Offset = "0x10AD628", VA = "0x10AD628")]
	public ShowMessageBox()
	{
	}
}
[Token(Token = "0x2000340")]
public class ShowWhenNation : MonoBehaviour
{
	[Token(Token = "0x4001830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public eNation[] nations;

	[Token(Token = "0x6001673")]
	[Address(RVA = "0x10AD67C", Offset = "0x10AD67C", VA = "0x10AD67C")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6001674")]
	[Address(RVA = "0x10AD900", Offset = "0x10AD900", VA = "0x10AD900")]
	public ShowWhenNation()
	{
	}
}
[Token(Token = "0x2000341")]
public class ShowWhenScriptConditionResult
{
	[Token(Token = "0x4001831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string param;

	[Token(Token = "0x4001832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool ret;

	[Token(Token = "0x6001675")]
	[Address(RVA = "0x10ADB78", Offset = "0x10ADB78", VA = "0x10ADB78")]
	public ShowWhenScriptConditionResult()
	{
	}
}
[Token(Token = "0x2000342")]
public class ShowWhenScriptCondition : MonoBehaviour
{
	[Token(Token = "0x4001833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject callbackObject;

	[Token(Token = "0x4001834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string callbackFunction;

	[Token(Token = "0x4001835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string callbackParam;

	[Token(Token = "0x4001836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool destroyIfNotShow;

	[Token(Token = "0x4001837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float checkDelaySec;

	[Token(Token = "0x4001838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected float lastCheckTime;

	[Token(Token = "0x4001839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	protected bool currEnabled;

	[Token(Token = "0x400183A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected List<Collider> disabledColliders;

	[Token(Token = "0x400183B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected List<Renderer> disabledRenderers;

	[Token(Token = "0x6001676")]
	[Address(RVA = "0x10AD908", Offset = "0x10AD908", VA = "0x10AD908")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001677")]
	[Address(RVA = "0x10ADA00", Offset = "0x10ADA00", VA = "0x10ADA00")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001678")]
	[Address(RVA = "0x10ADA0C", Offset = "0x10ADA0C", VA = "0x10ADA0C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001679")]
	[Address(RVA = "0x10ADA3C", Offset = "0x10ADA3C", VA = "0x10ADA3C")]
	private void Update()
	{
	}

	[Token(Token = "0x600167A")]
	[Address(RVA = "0x10ADA9C", Offset = "0x10ADA9C", VA = "0x10ADA9C")]
	protected bool IsVisibleCondition()
	{
		return default(bool);
	}

	[Token(Token = "0x600167B")]
	[Address(RVA = "0x10ADBCC", Offset = "0x10ADBCC", VA = "0x10ADBCC")]
	protected void UpdateShowCondition()
	{
	}

	[Token(Token = "0x600167C")]
	[Address(RVA = "0x10AD920", Offset = "0x10AD920", VA = "0x10AD920")]
	protected void UpdateShow(bool fromAwake, bool fromOnEnable)
	{
	}

	[Token(Token = "0x600167D")]
	[Address(RVA = "0x10ADF40", Offset = "0x10ADF40", VA = "0x10ADF40")]
	protected bool HaveConditionComponentInObjectAndUpwards(GameObject go)
	{
		return default(bool);
	}

	[Token(Token = "0x600167E")]
	[Address(RVA = "0x10ADBD8", Offset = "0x10ADBD8", VA = "0x10ADBD8")]
	protected void EnableCollidersAndRenderers(bool enable, bool fromOnEnable)
	{
	}

	[Token(Token = "0x600167F")]
	[Address(RVA = "0x10AE0DC", Offset = "0x10AE0DC", VA = "0x10AE0DC")]
	protected void ResetDisabled()
	{
	}

	[Token(Token = "0x6001680")]
	[Address(RVA = "0x10AE374", Offset = "0x10AE374", VA = "0x10AE374")]
	public ShowWhenScriptCondition()
	{
	}
}
[Token(Token = "0x2000343")]
public class SinkingShip : MonoBehaviour
{
	[Token(Token = "0x400183C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ParticleSystem sinkParticle;

	[Token(Token = "0x400183D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem.ShapeModule particleShape;

	[Token(Token = "0x400183E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 sinkParticleSize;

	[Token(Token = "0x400183F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float lastDestroyedSize;

	[Token(Token = "0x4001840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static Vector3 lastDestroyedSpeed;

	[Token(Token = "0x4001841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static float lastSinkBalance;

	[Token(Token = "0x4001842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform moveObject;

	[Token(Token = "0x4001843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 speed;

	[Token(Token = "0x4001844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float size;

	[Token(Token = "0x4001845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float sinkBalance;

	[Token(Token = "0x4001846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float balanceSqrAbs;

	[Token(Token = "0x4001847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float sinkTime;

	[Token(Token = "0x4001848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float sinkAngleTarget;

	[Token(Token = "0x4001849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float sinkRatio;

	[Token(Token = "0x400184A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float zSpinFactor;

	[Token(Token = "0x400184B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Quaternion startRot;

	[Token(Token = "0x400184C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float sinkAngle;

	[Token(Token = "0x400184D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float dampVel;

	[Token(Token = "0x400184E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float sinkSpeed;

	[Token(Token = "0x400184F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float zSpin;

	[Token(Token = "0x6001681")]
	[Address(RVA = "0x10AAB44", Offset = "0x10AAB44", VA = "0x10AAB44")]
	public static void SetVelocity(Vector3 fspeed, float sinkBalance)
	{
	}

	[Token(Token = "0x6001682")]
	[Address(RVA = "0x10B5510", Offset = "0x10B5510", VA = "0x10B5510")]
	public void Start()
	{
	}

	[Token(Token = "0x6001683")]
	[Address(RVA = "0x10B59A0", Offset = "0x10B59A0", VA = "0x10B59A0")]
	private void Update()
	{
	}

	[Token(Token = "0x6001684")]
	[Address(RVA = "0x10B5DBC", Offset = "0x10B5DBC", VA = "0x10B5DBC")]
	private void AdjustSinkParticle(float step)
	{
	}

	[Token(Token = "0x6001685")]
	[Address(RVA = "0x10B5F5C", Offset = "0x10B5F5C", VA = "0x10B5F5C")]
	public void MoveObject(Transform t)
	{
	}

	[Token(Token = "0x6001686")]
	[Address(RVA = "0x10B5F64", Offset = "0x10B5F64", VA = "0x10B5F64")]
	public SinkingShip()
	{
	}
}
[Token(Token = "0x2000344")]
public class SinkingShipAudio : MonoBehaviour
{
	[Token(Token = "0x4001850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioClip[] intro;

	[Token(Token = "0x4001851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioClip[] loop;

	[Token(Token = "0x4001852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioClip[] largeStress;

	[Token(Token = "0x4001853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AudioLowPassFilter lowPassFilter;

	[Token(Token = "0x4001854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AudioSource audio;

	[Token(Token = "0x4001855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float sinkTime;

	[Token(Token = "0x4001856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float shipSize;

	[Token(Token = "0x4001857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float introEndTime;

	[Token(Token = "0x4001858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float loopEndTime;

	[Token(Token = "0x4001859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float audioDistance;

	[Token(Token = "0x400185A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool playingIntro;

	[Token(Token = "0x400185B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	private bool fadingOut;

	[Token(Token = "0x400185C")]
	private const float kLoopVolume = 0.6f;

	[Token(Token = "0x400185D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float currentMaxVolume;

	[Token(Token = "0x400185E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static SinkingShipAudio prefab;

	[Token(Token = "0x400185F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static SinkingShipAudio prioritized;

	[Token(Token = "0x4001860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static float stressTime;

	[Token(Token = "0x6001687")]
	[Address(RVA = "0x10B57EC", Offset = "0x10B57EC", VA = "0x10B57EC")]
	public static void Play(Transform t, float sinkTime, float shipSize)
	{
	}

	[Token(Token = "0x6001688")]
	[Address(RVA = "0x10B5F6C", Offset = "0x10B5F6C", VA = "0x10B5F6C")]
	private static void Initialize()
	{
	}

	[Token(Token = "0x6001689")]
	[Address(RVA = "0x10B6010", Offset = "0x10B6010", VA = "0x10B6010")]
	private void Start()
	{
	}

	[Token(Token = "0x600168A")]
	[Address(RVA = "0x10B6248", Offset = "0x10B6248", VA = "0x10B6248")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600168B")]
	[Address(RVA = "0x10B6458", Offset = "0x10B6458", VA = "0x10B6458")]
	private void PlayLoop()
	{
	}

	[Token(Token = "0x600168C")]
	[Address(RVA = "0x10B6710", Offset = "0x10B6710", VA = "0x10B6710")]
	private void PlayLargeStress()
	{
	}

	[Token(Token = "0x600168D")]
	[Address(RVA = "0x10B68CC", Offset = "0x10B68CC", VA = "0x10B68CC")]
	public SinkingShipAudio()
	{
	}
}
[Token(Token = "0x2000345")]
public class SkillTag : MonoBehaviour
{
	[Token(Token = "0x4001861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Career.Skill skill;

	[Token(Token = "0x4001862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMesh tm;

	[Token(Token = "0x4001863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] medals;

	[Token(Token = "0x600168E")]
	[Address(RVA = "0x10B7638", Offset = "0x10B7638", VA = "0x10B7638")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600168F")]
	[Address(RVA = "0x10B763C", Offset = "0x10B763C", VA = "0x10B763C")]
	private void Print()
	{
	}

	[Token(Token = "0x6001690")]
	[Address(RVA = "0x10B79B0", Offset = "0x10B79B0", VA = "0x10B79B0")]
	private void Click()
	{
	}

	[Token(Token = "0x6001691")]
	[Address(RVA = "0x10B7A8C", Offset = "0x10B7A8C", VA = "0x10B7A8C")]
	public SkillTag()
	{
	}
}
[Token(Token = "0x2000346")]
public class SkinnedRoadVehicle_LOD : L_O_D
{
	[Token(Token = "0x4001864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private RoadVehicle rv;

	[Token(Token = "0x4001865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x91BA20", Offset = "0x91BA20")]
	[SerializeField]
	private bool testSwapSkin;

	[Token(Token = "0x4001866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	[SerializeField]
	private bool autoSkinBinding;

	[Token(Token = "0x4001867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private SkinnedMeshRenderer smr;

	[Token(Token = "0x4001868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Mesh meshLow;

	[Token(Token = "0x4001869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Mesh meshVR;

	[Token(Token = "0x400186A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Transform[] bonesLow;

	[Token(Token = "0x400186B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Transform[] bonesVR;

	[Token(Token = "0x6001692")]
	[Address(RVA = "0x10B7A94", Offset = "0x10B7A94", VA = "0x10B7A94", Slot = "5")]
	protected override void EnableHiRes()
	{
	}

	[Token(Token = "0x6001693")]
	[Address(RVA = "0x10B7B20", Offset = "0x10B7B20", VA = "0x10B7B20", Slot = "6")]
	protected override void DisableHiRes()
	{
	}

	[Token(Token = "0x6001694")]
	[Address(RVA = "0x10B7B2C", Offset = "0x10B7B2C", VA = "0x10B7B2C", Slot = "7")]
	protected override void EnableLowRes()
	{
	}

	[Token(Token = "0x6001695")]
	[Address(RVA = "0x10B7B58", Offset = "0x10B7B58", VA = "0x10B7B58", Slot = "8")]
	protected override void DisableLowRes()
	{
	}

	[Token(Token = "0x6001696")]
	[Address(RVA = "0x10B7AA4", Offset = "0x10B7AA4", VA = "0x10B7AA4")]
	private void ToggleWheels(bool toggle)
	{
	}

	[Token(Token = "0x6001697")]
	[Address(RVA = "0x10B7B5C", Offset = "0x10B7B5C", VA = "0x10B7B5C")]
	public SkinnedRoadVehicle_LOD()
	{
	}
}
[Token(Token = "0x2000347")]
public class SolvePlanesTooClose : MonoBehaviour
{
	[Token(Token = "0x2000348")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x918460", Offset = "0x918460")]
	private sealed class <Idle>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400186C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400186D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400186E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <i>5__2;

		[Token(Token = "0x400186F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<Hull> <planes>5__3;

		[Token(Token = "0x4001870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<Hull>.Enumerator <>7__wrap3;

		[Token(Token = "0x4001871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Hull <h1>5__5;

		[Token(Token = "0x17000130")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600169F")]
			[Address(RVA = "0x136FA34", Offset = "0x136FA34", VA = "0x136FA34", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000131")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016A1")]
			[Address(RVA = "0x136FA7C", Offset = "0x136FA7C", VA = "0x136FA7C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600169B")]
		[Address(RVA = "0x136F494", Offset = "0x136F494", VA = "0x136F494")]
		[DebuggerHidden]
		public <Idle>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x600169C")]
		[Address(RVA = "0x136F4C0", Offset = "0x136F4C0", VA = "0x136F4C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600169D")]
		[Address(RVA = "0x136F530", Offset = "0x136F530", VA = "0x136F530", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600169E")]
		[Address(RVA = "0x136F4DC", Offset = "0x136F4DC", VA = "0x136F4DC")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x60016A0")]
		[Address(RVA = "0x136FA3C", Offset = "0x136FA3C", VA = "0x136FA3C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6001698")]
	[Address(RVA = "0x10DBBE4", Offset = "0x10DBBE4", VA = "0x10DBBE4")]
	private void Start()
	{
	}

	[Token(Token = "0x6001699")]
	[Address(RVA = "0x10DBC10", Offset = "0x10DBC10", VA = "0x10DBC10")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92A644", Offset = "0x92A644")]
	private IEnumerator Idle()
	{
		return null;
	}

	[Token(Token = "0x600169A")]
	[Address(RVA = "0x10DBC6C", Offset = "0x10DBC6C", VA = "0x10DBC6C")]
	public SolvePlanesTooClose()
	{
	}
}
[Token(Token = "0x2000349")]
public enum eMusic
{
	[Token(Token = "0x4001873")]
	menu,
	[Token(Token = "0x4001874")]
	inbase,
	[Token(Token = "0x4001875")]
	mission,
	[Token(Token = "0x4001876")]
	intro,
	[Token(Token = "0x4001877")]
	victory,
	[Token(Token = "0x4001878")]
	defeat,
	[Token(Token = "0x4001879")]
	multi_victory,
	[Token(Token = "0x400187A")]
	multi_defeat
}
[Token(Token = "0x200034A")]
public class MusicManager2 : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200034B")]
	public class MusicCue
	{
		[Token(Token = "0x4001897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioClip cue;

		[Token(Token = "0x4001898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float volume;

		[Token(Token = "0x4001899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool first;

		[Token(Token = "0x400189A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int loopsMin;

		[Token(Token = "0x400189B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int loopsMax;

		[Token(Token = "0x60016B2")]
		[Address(RVA = "0xD8307C", Offset = "0xD8307C", VA = "0xD8307C")]
		public MusicCue()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200034C")]
	public class MusicTypeCues
	{
		[Token(Token = "0x400189C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public eMusic type;

		[Token(Token = "0x400189D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MusicCue[] cues;

		[Token(Token = "0x400189E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float finishFadeOutTime;

		[Token(Token = "0x400189F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float finishSilenceTime;

		[Token(Token = "0x60016B3")]
		[Address(RVA = "0xD83094", Offset = "0xD83094", VA = "0xD83094")]
		public MusicTypeCues()
		{
		}
	}

	[Token(Token = "0x400187B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public eMusic type;

	[Token(Token = "0x400187C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MusicTypeCues[] cues;

	[Token(Token = "0x400187D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float fadeInTime;

	[Token(Token = "0x400187E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float fadeOutTime;

	[Token(Token = "0x400187F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static MusicManager2 instance;

	[Token(Token = "0x4001880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AudioSource audios;

	[Token(Token = "0x4001881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int nextTypeAfterLoad;

	[Token(Token = "0x4001882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int nextTypeAfterLoad2;

	[Token(Token = "0x4001883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MusicTypeCues currentCues;

	[Token(Token = "0x4001884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int currentTypeCnt;

	[Token(Token = "0x4001885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MusicCue firstCue;

	[Token(Token = "0x4001886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<MusicCue> loopedCues;

	[Token(Token = "0x4001887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float currentFadeVal;

	[Token(Token = "0x4001888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private MusicCue currentCue;

	[Token(Token = "0x4001889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float volumeFromPrevCue;

	[Token(Token = "0x400188A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private bool currentPlayLoop;

	[Token(Token = "0x400188B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int currentLoopsCnt;

	[Token(Token = "0x400188C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float currentPlayTime;

	[Token(Token = "0x400188D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool playRequested;

	[Token(Token = "0x400188E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private int playCnt;

	[Token(Token = "0x400188F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool isLastCue;

	[Token(Token = "0x4001890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float silenceBeforeNextFill;

	[Token(Token = "0x4001891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float forceFadeOutTime;

	[Token(Token = "0x4001892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private bool hmdUnmounted;

	[Token(Token = "0x4001893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
	private bool vrFocusLost;

	[Token(Token = "0x4001894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x96")]
	private bool vrTrackingLost;

	[Token(Token = "0x4001895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float muteFocusLostDelay;

	[Token(Token = "0x4001896")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float muteGamePromo;

	[Token(Token = "0x60016A2")]
	[Address(RVA = "0xCADF70", Offset = "0xCADF70", VA = "0xCADF70")]
	public void Awake()
	{
	}

	[Token(Token = "0x60016A3")]
	[Address(RVA = "0xCAE824", Offset = "0xCAE824", VA = "0xCAE824")]
	public static void PlayMissionEndingMusic(bool victory)
	{
	}

	[Token(Token = "0x60016A4")]
	[Address(RVA = "0xCAE964", Offset = "0xCAE964", VA = "0xCAE964")]
	public static void FadeOut(float time)
	{
	}

	[Token(Token = "0x60016A5")]
	[Address(RVA = "0xCAEA14", Offset = "0xCAEA14", VA = "0xCAEA14")]
	public void Start()
	{
	}

	[Token(Token = "0x60016A6")]
	[Address(RVA = "0xCAEBF0", Offset = "0xCAEBF0", VA = "0xCAEBF0")]
	private void HandleHMDMounted()
	{
	}

	[Token(Token = "0x60016A7")]
	[Address(RVA = "0xCAEC6C", Offset = "0xCAEC6C", VA = "0xCAEC6C")]
	private void HandleHMDUnmounted()
	{
	}

	[Token(Token = "0x60016A8")]
	[Address(RVA = "0xCAECEC", Offset = "0xCAECEC", VA = "0xCAECEC")]
	private void HandleVrFocusAcquired()
	{
	}

	[Token(Token = "0x60016A9")]
	[Address(RVA = "0xCAED68", Offset = "0xCAED68", VA = "0xCAED68")]
	private void HandleVrFocusLost()
	{
	}

	[Token(Token = "0x60016AA")]
	[Address(RVA = "0xCAEDE8", Offset = "0xCAEDE8", VA = "0xCAEDE8")]
	private void HandleVrTrackingAcquired()
	{
	}

	[Token(Token = "0x60016AB")]
	[Address(RVA = "0xCAEE64", Offset = "0xCAEE64", VA = "0xCAEE64")]
	private void HandleVrTrackingLost()
	{
	}

	[Token(Token = "0x60016AC")]
	[Address(RVA = "0xCAEEE4", Offset = "0xCAEEE4", VA = "0xCAEEE4")]
	private void Update()
	{
	}

	[Token(Token = "0x60016AD")]
	[Address(RVA = "0xCAFBA4", Offset = "0xCAFBA4", VA = "0xCAFBA4")]
	public float GetVolume()
	{
		return default(float);
	}

	[Token(Token = "0x60016AE")]
	[Address(RVA = "0xCAE5E8", Offset = "0xCAE5E8", VA = "0xCAE5E8")]
	private MusicTypeCues FindType(eMusic t)
	{
		return null;
	}

	[Token(Token = "0x60016AF")]
	[Address(RVA = "0xCAFC50", Offset = "0xCAFC50", VA = "0xCAFC50")]
	private int CountType(eMusic t)
	{
		return default(int);
	}

	[Token(Token = "0x60016B0")]
	[Address(RVA = "0xCAE688", Offset = "0xCAE688", VA = "0xCAE688")]
	private void FillIndexes([Optional] MusicTypeCues _currentCues)
	{
	}

	[Token(Token = "0x60016B1")]
	[Address(RVA = "0xCAFCC0", Offset = "0xCAFCC0", VA = "0xCAFCC0")]
	public MusicManager2()
	{
	}
}
[Token(Token = "0x200034D")]
public enum eSoundFX
{
	[Token(Token = "0x40018A1")]
	none,
	[Token(Token = "0x40018A2")]
	airplane_explosion,
	[Token(Token = "0x40018A3")]
	airplane_explosion_ground,
	[Token(Token = "0x40018A4")]
	gun_hit,
	[Token(Token = "0x40018A5")]
	bomb_spawn,
	[Token(Token = "0x40018A6")]
	rocket_launch,
	[Token(Token = "0x40018A7")]
	cannon20mm,
	[Token(Token = "0x40018A8")]
	waterBigExplosion,
	[Token(Token = "0x40018A9")]
	waterSmallExplosion,
	[Token(Token = "0x40018AA")]
	player_hit,
	[Token(Token = "0x40018AB")]
	machinegun_hit,
	[Token(Token = "0x40018AC")]
	machinegun_cooling,
	[Token(Token = "0x40018AD")]
	pistol_grab,
	[Token(Token = "0x40018AE")]
	flare_grab,
	[Token(Token = "0x40018AF")]
	flare_reload,
	[Token(Token = "0x40018B0")]
	flare_fire,
	[Token(Token = "0x40018B1")]
	help_next_page,
	[Token(Token = "0x40018B2")]
	wheels_rolling,
	[Token(Token = "0x40018B3")]
	_unused,
	[Token(Token = "0x40018B4")]
	radio_switch,
	[Token(Token = "0x40018B5")]
	engine_off,
	[Token(Token = "0x40018B6")]
	switchArmamentLight,
	[Token(Token = "0x40018B7")]
	switchArmamentHeavy,
	[Token(Token = "0x40018B8")]
	torpedo_spawn,
	[Token(Token = "0x40018B9")]
	switchArmamentDenied,
	[Token(Token = "0x40018BA")]
	carrierLiftDown,
	[Token(Token = "0x40018BB")]
	carrierLiftUp,
	[Token(Token = "0x40018BC")]
	stallBeep,
	[Token(Token = "0x40018BD")]
	landingGearUp,
	[Token(Token = "0x40018BE")]
	landingGearDown,
	[Token(Token = "0x40018BF")]
	landingGearFailure,
	[Token(Token = "0x40018C0")]
	landingFrictionNoGear,
	[Token(Token = "0x40018C1")]
	landingGroundHitConcrete,
	[Token(Token = "0x40018C2")]
	rocketFly,
	[Token(Token = "0x40018C3")]
	bombFly,
	[Token(Token = "0x40018C4")]
	torpedoFly,
	[Token(Token = "0x40018C5")]
	flapsExtend,
	[Token(Token = "0x40018C6")]
	flapsFadeout,
	[Token(Token = "0x40018C7")]
	engineOverheatBeep
}
[Token(Token = "0x200034E")]
public class SoundManager : MonoBehaviour
{
	[Token(Token = "0x40018C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SoundPack[] soundPack;

	[Token(Token = "0x40018C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject source;

	[Token(Token = "0x40018CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AudioSource[] sources;

	[Token(Token = "0x40018CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SoundManager instance;

	[Token(Token = "0x40018CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool destroyed;

	[Token(Token = "0x40018CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<int> trackPlaying;

	[Token(Token = "0x60016B4")]
	[Address(RVA = "0x10DBC74", Offset = "0x10DBC74", VA = "0x10DBC74")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x60016B5")]
	[Address(RVA = "0x10DBC78", Offset = "0x10DBC78", VA = "0x10DBC78")]
	private void Update()
	{
	}

	[Token(Token = "0x60016B6")]
	[Address(RVA = "0x10DBD94", Offset = "0x10DBD94", VA = "0x10DBD94")]
	public static bool IsDestroyed()
	{
		return default(bool);
	}

	[Token(Token = "0x60016B7")]
	[Address(RVA = "0x10DBDF8", Offset = "0x10DBDF8", VA = "0x10DBDF8")]
	public static void Init()
	{
	}

	[Token(Token = "0x60016B8")]
	[Address(RVA = "0x10DC06C", Offset = "0x10DC06C", VA = "0x10DC06C")]
	private void InitLocal()
	{
	}

	[Token(Token = "0x60016B9")]
	[Address(RVA = "0x10DC930", Offset = "0x10DC930", VA = "0x10DC930")]
	public static AudioSource Play(eSoundFX type, GameObject go, [Optional] Vector3 goLocalPos)
	{
		return null;
	}

	[Token(Token = "0x60016BA")]
	[Address(RVA = "0x10DD074", Offset = "0x10DD074", VA = "0x10DD074")]
	public static AudioSource PlayLooped(eSoundFX type, GameObject go, [Optional] Vector3 goLocalPos, bool loopedRandomSeek = true)
	{
		return null;
	}

	[Token(Token = "0x60016BB")]
	[Address(RVA = "0x10DCA68", Offset = "0x10DCA68", VA = "0x10DCA68")]
	private AudioSource Play(eSoundFX type, GameObject go, Vector3 goLocalPos, bool looped, bool loopedRandomSeek = true)
	{
		return null;
	}

	[Token(Token = "0x60016BC")]
	[Address(RVA = "0x10DD4C0", Offset = "0x10DD4C0", VA = "0x10DD4C0")]
	public static void UpdateLoopedVolume(AudioSource source, ref float volume)
	{
	}

	[Token(Token = "0x60016BD")]
	[Address(RVA = "0x10DD2A0", Offset = "0x10DD2A0", VA = "0x10DD2A0")]
	public AudioSource FindSource(out int idx, out bool reused)
	{
		return null;
	}

	[Token(Token = "0x60016BE")]
	[Address(RVA = "0x10DD1B8", Offset = "0x10DD1B8", VA = "0x10DD1B8")]
	public SoundPack FindSoundPack(eSoundFX type)
	{
		return null;
	}

	[Token(Token = "0x60016BF")]
	[Address(RVA = "0x10DD5C4", Offset = "0x10DD5C4", VA = "0x10DD5C4")]
	public SoundManager()
	{
	}
}
[Token(Token = "0x200034F")]
public class SoundPack : MonoBehaviour
{
	[Token(Token = "0x40018CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public eSoundFX type;

	[Token(Token = "0x40018CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float volumeMul;

	[Token(Token = "0x40018D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxDist;

	[Token(Token = "0x40018D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int pitchVariationInPercent;

	[Token(Token = "0x40018D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool _2D;

	[Token(Token = "0x40018D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip[] clip;

	[Token(Token = "0x60016C1")]
	[Address(RVA = "0x10DD460", Offset = "0x10DD460", VA = "0x10DD460")]
	public AudioClip GetClip()
	{
		return null;
	}

	[Token(Token = "0x60016C2")]
	[Address(RVA = "0x10DD5D0", Offset = "0x10DD5D0", VA = "0x10DD5D0")]
	public void UpdateName()
	{
	}

	[Token(Token = "0x60016C3")]
	[Address(RVA = "0x10DD69C", Offset = "0x10DD69C", VA = "0x10DD69C")]
	public SoundPack()
	{
	}
}
[Token(Token = "0x2000350")]
public class SoundVolume : MonoBehaviour
{
	[Token(Token = "0x40018D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public eSlider type;

	[Token(Token = "0x40018D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AudioSource audios;

	[Token(Token = "0x60016C4")]
	[Address(RVA = "0x10DD6B0", Offset = "0x10DD6B0", VA = "0x10DD6B0")]
	private void Start()
	{
	}

	[Token(Token = "0x60016C5")]
	[Address(RVA = "0x10DD704", Offset = "0x10DD704", VA = "0x10DD704")]
	private void Update()
	{
	}

	[Token(Token = "0x60016C6")]
	[Address(RVA = "0x10DD7D8", Offset = "0x10DD7D8", VA = "0x10DD7D8")]
	public SoundVolume()
	{
	}
}
[Token(Token = "0x2000351")]
public enum SpawnAreaType
{
	[Token(Token = "0x40018D7")]
	Ground,
	[Token(Token = "0x40018D8")]
	Road,
	[Token(Token = "0x40018D9")]
	Water,
	[Token(Token = "0x40018DA")]
	Balloons,
	[Token(Token = "0x40018DB")]
	Num
}
[Serializable]
[Token(Token = "0x2000352")]
public struct SpawnAreaKey
{
	[Token(Token = "0x40018DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public SpawnAreaType type;

	[Token(Token = "0x40018DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public eParty party;

	[Token(Token = "0x60016C7")]
	[Address(RVA = "0x10DF240", Offset = "0x10DF240", VA = "0x10DF240")]
	public SpawnAreaKey(SpawnAreaType type, eParty party)
	{
	}
}
[Token(Token = "0x2000353")]
public class SpawnArea : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000354")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x918470", Offset = "0x918470")]
	private sealed class <>c
	{
		[Token(Token = "0x40018E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40018E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<SpawnArea> <>9__10_0;

		[Token(Token = "0x40018E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Comparison<SpawnArea> <>9__11_0;

		[Token(Token = "0x60016D0")]
		[Address(RVA = "0x136FAE4", Offset = "0x136FAE4", VA = "0x136FAE4")]
		public <>c()
		{
		}

		[Token(Token = "0x60016D1")]
		[Address(RVA = "0x136FAEC", Offset = "0x136FAEC", VA = "0x136FAEC")]
		internal int <SortAreasById>b__10_0(SpawnArea a, SpawnArea b)
		{
			return default(int);
		}

		[Token(Token = "0x60016D2")]
		[Address(RVA = "0x136FB14", Offset = "0x136FB14", VA = "0x136FB14")]
		internal int <SortAreasByDistance>b__11_0(SpawnArea a, SpawnArea b)
		{
			return default(int);
		}
	}

	[Token(Token = "0x40018DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public int multiLocationObjectId;

	[Token(Token = "0x40018DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public eParty party;

	[Token(Token = "0x40018E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SpawnAreaType type;

	[Token(Token = "0x40018E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int usedCnt;

	[Token(Token = "0x40018E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static SpawnArea[] areas;

	[Token(Token = "0x40018E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static SpawnArea[] tmpAreas;

	[Token(Token = "0x40018E4")]
	private const int kMaxAreas = 20;

	[Token(Token = "0x60016C8")]
	[Address(RVA = "0x10DE264", Offset = "0x10DE264", VA = "0x10DE264")]
	public void Awake()
	{
	}

	[Token(Token = "0x60016C9")]
	[Address(RVA = "0x10DE268", Offset = "0x10DE268", VA = "0x10DE268")]
	public static void Add(SpawnArea newArea)
	{
	}

	[Token(Token = "0x60016CA")]
	[Address(RVA = "0x10DE3E8", Offset = "0x10DE3E8", VA = "0x10DE3E8")]
	public static void SortAreas()
	{
	}

	[Token(Token = "0x60016CB")]
	[Address(RVA = "0x10DE50C", Offset = "0x10DE50C", VA = "0x10DE50C")]
	public static void SortAreasById()
	{
	}

	[Token(Token = "0x60016CC")]
	[Address(RVA = "0x10DE854", Offset = "0x10DE854", VA = "0x10DE854")]
	public static void SortAreasByDistance()
	{
	}

	[Token(Token = "0x60016CD")]
	[Address(RVA = "0x10DEB9C", Offset = "0x10DEB9C", VA = "0x10DEB9C")]
	public static SpawnArea Get(MultiplayerSync.SyncState mSync, SpawnAreaKey key)
	{
		return null;
	}

	[Token(Token = "0x60016CE")]
	[Address(RVA = "0x10DF230", Offset = "0x10DF230", VA = "0x10DF230")]
	public SpawnArea()
	{
	}
}
[Token(Token = "0x2000355")]
public class Speed : MonoBehaviour
{
	[Token(Token = "0x40018E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int dropsCount;

	[Token(Token = "0x40018E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float offset;

	[Token(Token = "0x40018EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Renderer r;

	[Token(Token = "0x40018EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3[] vertices;

	[Token(Token = "0x40018EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int[] triangles;

	[Token(Token = "0x40018ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector2[] uv;

	[Token(Token = "0x60016D3")]
	[Address(RVA = "0x10DF248", Offset = "0x10DF248", VA = "0x10DF248")]
	public void Awake()
	{
	}

	[Token(Token = "0x60016D4")]
	[Address(RVA = "0x10DF2B8", Offset = "0x10DF2B8", VA = "0x10DF2B8")]
	public void Start()
	{
	}

	[Token(Token = "0x60016D5")]
	[Address(RVA = "0x10DF5E8", Offset = "0x10DF5E8", VA = "0x10DF5E8")]
	public void LateUpdate()
	{
	}

	[Token(Token = "0x60016D6")]
	[Address(RVA = "0x10DF720", Offset = "0x10DF720", VA = "0x10DF720")]
	private void Realistic()
	{
	}

	[Token(Token = "0x60016D7")]
	[Address(RVA = "0x10DF2BC", Offset = "0x10DF2BC", VA = "0x10DF2BC")]
	public void Init()
	{
	}

	[Token(Token = "0x60016D8")]
	[Address(RVA = "0x10DF9F0", Offset = "0x10DF9F0", VA = "0x10DF9F0")]
	public void UpdateMesh()
	{
	}

	[Token(Token = "0x60016D9")]
	[Address(RVA = "0x10DFBDC", Offset = "0x10DFBDC", VA = "0x10DFBDC")]
	public Speed()
	{
	}
}
[Token(Token = "0x2000356")]
public class SpeedMeter : MonoBehaviour
{
	[Token(Token = "0x40018EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TextMesh tm;

	[Token(Token = "0x60016DA")]
	[Address(RVA = "0x10DFBEC", Offset = "0x10DFBEC", VA = "0x10DFBEC")]
	private void Start()
	{
	}

	[Token(Token = "0x60016DB")]
	[Address(RVA = "0x10DFC40", Offset = "0x10DFC40", VA = "0x10DFC40")]
	private void Update()
	{
	}

	[Token(Token = "0x60016DC")]
	[Address(RVA = "0x10DFD20", Offset = "0x10DFD20", VA = "0x10DFD20")]
	public SpeedMeter()
	{
	}
}
[Token(Token = "0x2000357")]
public class SplineCurve : MonoBehaviour
{
	[Token(Token = "0x40018EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3[] pos;

	[Token(Token = "0x40018F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3[] dir;

	[Token(Token = "0x40018F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector2[] par;

	[Token(Token = "0x60016DD")]
	[Address(RVA = "0x10E247C", Offset = "0x10E247C", VA = "0x10E247C")]
	public int SegmentsNum()
	{
		return default(int);
	}

	[Token(Token = "0x60016DE")]
	[Address(RVA = "0x10E249C", Offset = "0x10E249C", VA = "0x10E249C")]
	public int SubSectorsNum()
	{
		return default(int);
	}

	[Token(Token = "0x60016DF")]
	[Address(RVA = "0x10E252C", Offset = "0x10E252C", VA = "0x10E252C")]
	public int SubSectors(int i)
	{
		return default(int);
	}

	[Token(Token = "0x60016E0")]
	[Address(RVA = "0x10E2584", Offset = "0x10E2584", VA = "0x10E2584")]
	public void CalculateSpline(Transform[] point)
	{
	}

	[Token(Token = "0x60016E1")]
	[Address(RVA = "0x10E2A20", Offset = "0x10E2A20", VA = "0x10E2A20")]
	public void MakeBridge(int i)
	{
	}

	[Token(Token = "0x60016E2")]
	[Address(RVA = "0x10E2B38", Offset = "0x10E2B38", VA = "0x10E2B38")]
	private static Vector3 GetPoint(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60016E3")]
	[Address(RVA = "0x10E2C38", Offset = "0x10E2C38", VA = "0x10E2C38")]
	private static Vector3 GetFirstDerivative(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60016E4")]
	[Address(RVA = "0x10E2824", Offset = "0x10E2824", VA = "0x10E2824")]
	private Vector3 GetForwardControlPointDir(int i)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60016E5")]
	[Address(RVA = "0x10E2D5C", Offset = "0x10E2D5C", VA = "0x10E2D5C")]
	public Vector3 Rotate90R(Vector3 v)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60016E6")]
	[Address(RVA = "0x10E2D48", Offset = "0x10E2D48", VA = "0x10E2D48")]
	public Vector3 Rotate90L(Vector3 v)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60016E7")]
	[Address(RVA = "0x10E2D6C", Offset = "0x10E2D6C", VA = "0x10E2D6C")]
	public Vector3 GetPoint(int i, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60016E8")]
	[Address(RVA = "0x10E2E80", Offset = "0x10E2E80", VA = "0x10E2E80")]
	public Vector3 GetLastPoint()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60016E9")]
	[Address(RVA = "0x10E2ECC", Offset = "0x10E2ECC", VA = "0x10E2ECC")]
	public Vector3 GetVelocity(int i, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60016EA")]
	[Address(RVA = "0x10E2FE0", Offset = "0x10E2FE0", VA = "0x10E2FE0")]
	public Vector3 GetDirection(int i, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60016EB")]
	[Address(RVA = "0x10E3010", Offset = "0x10E3010", VA = "0x10E3010")]
	public Vector3 GetRight(int i, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60016EC")]
	[Address(RVA = "0x10E304C", Offset = "0x10E304C", VA = "0x10E304C")]
	public SplineCurve()
	{
	}
}
[Token(Token = "0x2000358")]
public class SpotlightTurret : MonoBehaviour
{
	[Token(Token = "0x40018F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform turret;

	[Token(Token = "0x40018F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform barrel;

	[Token(Token = "0x40018F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 speedX;

	[Token(Token = "0x40018F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 speedY;

	[Token(Token = "0x40018F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float time;

	[Token(Token = "0x40018F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float dir;

	[Token(Token = "0x60016ED")]
	[Address(RVA = "0x10E55DC", Offset = "0x10E55DC", VA = "0x10E55DC")]
	private void Start()
	{
	}

	[Token(Token = "0x60016EE")]
	[Address(RVA = "0x10E5690", Offset = "0x10E5690", VA = "0x10E5690")]
	private void Update()
	{
	}

	[Token(Token = "0x60016EF")]
	[Address(RVA = "0x10E5858", Offset = "0x10E5858", VA = "0x10E5858")]
	public SpotlightTurret()
	{
	}
}
[Token(Token = "0x2000359")]
public enum eObjective
{
	[Token(Token = "0x40018F9")]
	none,
	[Token(Token = "0x40018FA")]
	protect,
	[Token(Token = "0x40018FB")]
	escort
}
[Token(Token = "0x200035A")]
public enum eFormation
{
	[Token(Token = "0x40018FD")]
	lineRight,
	[Token(Token = "0x40018FE")]
	lineFollow,
	[Token(Token = "0x40018FF")]
	v,
	[Token(Token = "0x4001900")]
	square
}
[Token(Token = "0x200035B")]
public class Squadron : MonoBehaviour
{
	[Token(Token = "0x200035C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x918480", Offset = "0x918480")]
	private sealed class <CheckNextWave>d__40 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Squadron <>4__this;

		[Token(Token = "0x4001924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool <isPlane>5__2;

		[Token(Token = "0x4001925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool <immediateFirstWave>5__3;

		[Token(Token = "0x17000132")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001708")]
			[Address(RVA = "0x13702AC", Offset = "0x13702AC", VA = "0x13702AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000133")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600170A")]
			[Address(RVA = "0x13702F4", Offset = "0x13702F4", VA = "0x13702F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001705")]
		[Address(RVA = "0x136FC54", Offset = "0x136FC54", VA = "0x136FC54")]
		[DebuggerHidden]
		public <CheckNextWave>d__40(int <>1__state)
		{
		}

		[Token(Token = "0x6001706")]
		[Address(RVA = "0x136FC80", Offset = "0x136FC80", VA = "0x136FC80", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001707")]
		[Address(RVA = "0x136FC84", Offset = "0x136FC84", VA = "0x136FC84", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001709")]
		[Address(RVA = "0x13702B4", Offset = "0x13702B4", VA = "0x13702B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200035D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x918490", Offset = "0x918490")]
	private sealed class <Deploy>d__43 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Squadron <>4__this;

		[Token(Token = "0x4001929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool immediateFirstWave;

		[Token(Token = "0x400192A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject <goPrefab>5__2;

		[Token(Token = "0x400192B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool <planeMulti>5__3;

		[Token(Token = "0x400192C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int <i>5__4;

		[Token(Token = "0x17000134")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600170E")]
			[Address(RVA = "0x1370D00", Offset = "0x1370D00", VA = "0x1370D00", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000135")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001710")]
			[Address(RVA = "0x1370D48", Offset = "0x1370D48", VA = "0x1370D48", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600170B")]
		[Address(RVA = "0x13702FC", Offset = "0x13702FC", VA = "0x13702FC")]
		[DebuggerHidden]
		public <Deploy>d__43(int <>1__state)
		{
		}

		[Token(Token = "0x600170C")]
		[Address(RVA = "0x1370328", Offset = "0x1370328", VA = "0x1370328", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600170D")]
		[Address(RVA = "0x137032C", Offset = "0x137032C", VA = "0x137032C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600170F")]
		[Address(RVA = "0x1370D08", Offset = "0x1370D08", VA = "0x1370D08", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool autoStart;

	[Token(Token = "0x4001902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int ID;

	[Token(Token = "0x4001903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public eqType type;

	[Token(Token = "0x4001904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public eParty party;

	[Token(Token = "0x4001905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject prefab;

	[Token(Token = "0x4001906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int numInWaveStart;

	[Token(Token = "0x4001907")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int wavesStart;

	[Token(Token = "0x4001908")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int numInWave;

	[Token(Token = "0x4001909")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int waves;

	[Token(Token = "0x400190A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public eObjective objective;

	[Token(Token = "0x400190B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject conditionGO;

	[Token(Token = "0x400190C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public eFormation formation;

	[Token(Token = "0x400190D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Vector3 spread;

	[Token(Token = "0x400190E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool randomXY;

	[Token(Token = "0x400190F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	public bool randomR;

	[Token(Token = "0x4001910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public SpawnAreaKey spawnAreaKey;

	[Token(Token = "0x4001911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public bool onRoad;

	[Token(Token = "0x4001912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
	public bool isObjective;

	[Token(Token = "0x4001913")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public eRadio radioMsg;

	[NonSerialized]
	[Token(Token = "0x4001914")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public List<string> wavesPlanes;

	[Token(Token = "0x4001915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int[][] aFormation;

	[Token(Token = "0x4001916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private MultiplayerSync.SyncState mSync;

	[Token(Token = "0x4001917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private MultiplayerSync.UID multiplayerUID;

	[Token(Token = "0x4001918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int multiplayerNextOwnershipIdx;

	[Token(Token = "0x4001919")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private int waveIdx;

	[Token(Token = "0x400191A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Vector3 startPos;

	[Token(Token = "0x400191B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private bool requestImmediateSpawn;

	[Token(Token = "0x400191C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int deployingCnt;

	[Token(Token = "0x400191D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private GameObject[] planes;

	[Token(Token = "0x400191E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private IHull[] hulls;

	[Token(Token = "0x400191F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Coroutine startSquadron;

	[Token(Token = "0x4001920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private SpawnArea spawnArea;

	[Token(Token = "0x60016F0")]
	[Address(RVA = "0x10E5868", Offset = "0x10E5868", VA = "0x10E5868")]
	public void Awake()
	{
	}

	[Token(Token = "0x60016F1")]
	[Address(RVA = "0x10E5918", Offset = "0x10E5918", VA = "0x10E5918")]
	private void Start()
	{
	}

	[Token(Token = "0x60016F2")]
	[Address(RVA = "0x10E5D2C", Offset = "0x10E5D2C", VA = "0x10E5D2C")]
	public MultiplayerSync.UID GetMultiplayerUID()
	{
		return default(MultiplayerSync.UID);
	}

	[Token(Token = "0x60016F3")]
	[Address(RVA = "0x10E5D34", Offset = "0x10E5D34", VA = "0x10E5D34")]
	public void RequestImmediateSpawn()
	{
	}

	[Token(Token = "0x60016F4")]
	[Address(RVA = "0x10E5D40", Offset = "0x10E5D40", VA = "0x10E5D40")]
	public int GetTotalCount()
	{
		return default(int);
	}

	[Token(Token = "0x60016F5")]
	[Address(RVA = "0x10E5D4C", Offset = "0x10E5D4C", VA = "0x10E5D4C")]
	public void Refresh()
	{
	}

	[Token(Token = "0x60016F6")]
	[Address(RVA = "0x10E5EF8", Offset = "0x10E5EF8", VA = "0x10E5EF8")]
	public GameObject[] GetObjects()
	{
		return null;
	}

	[Token(Token = "0x60016F7")]
	[Address(RVA = "0x10E5928", Offset = "0x10E5928", VA = "0x10E5928")]
	public void StartSquadron()
	{
	}

	[Token(Token = "0x60016F8")]
	[Address(RVA = "0x10E5F00", Offset = "0x10E5F00", VA = "0x10E5F00")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92A6F4", Offset = "0x92A6F4")]
	public IEnumerator CheckNextWave()
	{
		return null;
	}

	[Token(Token = "0x60016F9")]
	[Address(RVA = "0x10E5F6C", Offset = "0x10E5F6C", VA = "0x10E5F6C")]
	private void RandomizePosition()
	{
	}

	[Token(Token = "0x60016FA")]
	[Address(RVA = "0x10E6050", Offset = "0x10E6050", VA = "0x10E6050")]
	public static GameObject SpawnWaveObject(int i, GameObject goPrefab, eParty party, bool isObjective, bool isExtraChallange, Vector3 position, Quaternion rotation, eFormation formation, Vector3 spread, bool randomXY, bool randomR, bool onRoad, MultiplayerSync.SyncState mSync, MultiplayerSync.UID multiplayerUID, ref int multiplayerNextOwnershipIdx)
	{
		return null;
	}

	[Token(Token = "0x60016FB")]
	[Address(RVA = "0x10E7540", Offset = "0x10E7540", VA = "0x10E7540")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92A754", Offset = "0x92A754")]
	private IEnumerator Deploy(bool immediateFirstWave)
	{
		return null;
	}

	[Token(Token = "0x60016FC")]
	[Address(RVA = "0x10E75C0", Offset = "0x10E75C0", VA = "0x10E75C0")]
	public int GetFlyingCount()
	{
		return default(int);
	}

	[Token(Token = "0x60016FD")]
	[Address(RVA = "0x10E76E4", Offset = "0x10E76E4", VA = "0x10E76E4")]
	public void ChangeLivePlaneReference(GameObject old, GameObject current)
	{
	}

	[Token(Token = "0x60016FE")]
	[Address(RVA = "0x10E785C", Offset = "0x10E785C", VA = "0x10E785C")]
	public int GetCount()
	{
		return default(int);
	}

	[Token(Token = "0x60016FF")]
	[Address(RVA = "0x10E7298", Offset = "0x10E7298", VA = "0x10E7298")]
	private static void InitAIPlanePilotLevel(bool multi, MultiplayerSync.SyncState mSync, GameObject go, eParty party, bool isExtraChallange)
	{
	}

	[Token(Token = "0x6001700")]
	[Address(RVA = "0x10E7890", Offset = "0x10E7890", VA = "0x10E7890")]
	public static void InitializeInstantiatedMultiplayer(GameObject gameObject, Photon.Realtime.Player netPlayer, object[] instantiationData)
	{
	}

	[Token(Token = "0x6001701")]
	[Address(RVA = "0x10E7C68", Offset = "0x10E7C68", VA = "0x10E7C68")]
	private void SetMultiplayerSpawnedPlane(GameObject go, string mSyncSave, int squadronIdx, eParty party, bool isExtraChallange)
	{
	}

	[Token(Token = "0x6001702")]
	[Address(RVA = "0x10E8024", Offset = "0x10E8024", VA = "0x10E8024")]
	public void OnRemoteSetSquadronWave(int _waves, int _deployingCnt, int nextOwnershipIdx, bool playRadioMsg)
	{
	}

	[Token(Token = "0x6001703")]
	[Address(RVA = "0x10E8144", Offset = "0x10E8144", VA = "0x10E8144")]
	public Squadron()
	{
	}
}
[Token(Token = "0x200035E")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x9184A0", Offset = "0x9184A0")]
public class StartApplication : MonoBehaviour
{
	[Token(Token = "0x200035F")]
	private enum FadeStep
	{
		[Token(Token = "0x4001942")]
		hngLogoFadeIn,
		[Token(Token = "0x4001943")]
		hngLogoFull,
		[Token(Token = "0x4001944")]
		hngLogoFadeOut,
		[Token(Token = "0x4001945")]
		gameLogoFadeIn,
		[Token(Token = "0x4001946")]
		gameLogoFull,
		[Token(Token = "0x4001947")]
		gameLogoFadeOut
	}

	[Token(Token = "0x2000360")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9184B4", Offset = "0x9184B4")]
	private sealed class <StartFade>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400194A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StartApplication <>4__this;

		[Token(Token = "0x17000136")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001722")]
			[Address(RVA = "0x1371200", Offset = "0x1371200", VA = "0x1371200", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000137")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001724")]
			[Address(RVA = "0x1371248", Offset = "0x1371248", VA = "0x1371248", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600171F")]
		[Address(RVA = "0x1371104", Offset = "0x1371104", VA = "0x1371104")]
		[DebuggerHidden]
		public <StartFade>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x6001720")]
		[Address(RVA = "0x1371130", Offset = "0x1371130", VA = "0x1371130", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001721")]
		[Address(RVA = "0x1371134", Offset = "0x1371134", VA = "0x1371134", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001723")]
		[Address(RVA = "0x1371208", Offset = "0x1371208", VA = "0x1371208", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000361")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9184C4", Offset = "0x9184C4")]
	private sealed class <>c__DisplayClass29_0
	{
		[Token(Token = "0x400194B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public StartApplication <>4__this;

		[Token(Token = "0x400194C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string cloudAutoAccountID;

		[Token(Token = "0x6001725")]
		[Address(RVA = "0x1370D50", Offset = "0x1370D50", VA = "0x1370D50")]
		public <>c__DisplayClass29_0()
		{
		}

		[Token(Token = "0x6001726")]
		[Address(RVA = "0x1370D58", Offset = "0x1370D58", VA = "0x1370D58")]
		internal void <StartYielded>b__0(Message<Oculus.Platform.Models.User> msg)
		{
		}
	}

	[Token(Token = "0x2000362")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9184D4", Offset = "0x9184D4")]
	private sealed class <StartYielded>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400194D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400194E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400194F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StartApplication <>4__this;

		[Token(Token = "0x4001950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private <>c__DisplayClass29_0 <>8__1;

		[Token(Token = "0x4001951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string <loadScene>5__2;

		[Token(Token = "0x4001952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AsyncOperation <asyncOperation>5__3;

		[Token(Token = "0x4001953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool <demoAfterError>5__4;

		[Token(Token = "0x4001954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float <timeShow>5__5;

		[Token(Token = "0x17000138")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600172A")]
			[Address(RVA = "0x1372CE0", Offset = "0x1372CE0", VA = "0x1372CE0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000139")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600172C")]
			[Address(RVA = "0x1372D28", Offset = "0x1372D28", VA = "0x1372D28", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001727")]
		[Address(RVA = "0x1371250", Offset = "0x1371250", VA = "0x1371250")]
		[DebuggerHidden]
		public <StartYielded>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x6001728")]
		[Address(RVA = "0x137127C", Offset = "0x137127C", VA = "0x137127C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001729")]
		[Address(RVA = "0x1371280", Offset = "0x1371280", VA = "0x1371280", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600172B")]
		[Address(RVA = "0x1372CE8", Offset = "0x1372CE8", VA = "0x1372CE8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400192D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cameraMissionEditor;

	[Token(Token = "0x400192E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float hngLogoFadeIn;

	[Token(Token = "0x400192F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float hngLogoFull;

	[Token(Token = "0x4001930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float hngLogoFadeOut;

	[Token(Token = "0x4001931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject gameLogo;

	[Token(Token = "0x4001932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float gameLogoFadeIn;

	[Token(Token = "0x4001933")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float gameLogoFull;

	[Token(Token = "0x4001934")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float gameLogoFadeOut;

	[Token(Token = "0x4001935")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject entitlementErrorScreen;

	[Token(Token = "0x4001936")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMesh entitlementErrorText;

	[Token(Token = "0x4001937")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TextMesh progressTm;

	[Token(Token = "0x4001938")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ShaderVariantCollection prewarmShaders;

	[Token(Token = "0x4001939")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GameObject hngLogo;

	[Token(Token = "0x400193A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool initializing;

	[Token(Token = "0x400193B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	private bool checkingEntitlement;

	[Token(Token = "0x400193C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
	private bool entitlementError;

	[Token(Token = "0x400193D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private FadeStep fadeStep;

	[Token(Token = "0x400193E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool fadeComplete;

	[Token(Token = "0x400193F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool initialized;

	[Token(Token = "0x4001940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static DateTime logStartTime;

	[Token(Token = "0x6001711")]
	[Address(RVA = "0x10E8410", Offset = "0x10E8410", VA = "0x10E8410")]
	public static bool InitializeInEditorOtherScene()
	{
		return default(bool);
	}

	[Token(Token = "0x6001712")]
	[Address(RVA = "0x10E89E4", Offset = "0x10E89E4", VA = "0x10E89E4")]
	public static void PrepareConfig()
	{
	}

	[Token(Token = "0x6001713")]
	[Address(RVA = "0x10E85F4", Offset = "0x10E85F4", VA = "0x10E85F4")]
	public static void Initialize()
	{
	}

	[Token(Token = "0x6001714")]
	[Address(RVA = "0x10E87D8", Offset = "0x10E87D8", VA = "0x10E87D8")]
	public static void Log(string l)
	{
	}

	[Token(Token = "0x6001715")]
	[Address(RVA = "0x10E9538", Offset = "0x10E9538", VA = "0x10E9538")]
	private void ProgressLog(string l)
	{
	}

	[Token(Token = "0x6001716")]
	[Address(RVA = "0x10E9634", Offset = "0x10E9634", VA = "0x10E9634")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001717")]
	[Address(RVA = "0x10E97D4", Offset = "0x10E97D4", VA = "0x10E97D4")]
	public void Start()
	{
	}

	[Token(Token = "0x6001718")]
	[Address(RVA = "0x10E9864", Offset = "0x10E9864", VA = "0x10E9864")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92A854", Offset = "0x92A854")]
	public IEnumerator StartFade()
	{
		return null;
	}

	[Token(Token = "0x6001719")]
	[Address(RVA = "0x10E98D0", Offset = "0x10E98D0", VA = "0x10E98D0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92A8B4", Offset = "0x92A8B4")]
	public IEnumerator StartYielded()
	{
		return null;
	}

	[Token(Token = "0x600171A")]
	[Address(RVA = "0x10E8728", Offset = "0x10E8728", VA = "0x10E8728")]
	private static string GetEditorCloudAutoAccountID()
	{
		return null;
	}

	[Token(Token = "0x600171B")]
	[Address(RVA = "0x10E993C", Offset = "0x10E993C", VA = "0x10E993C")]
	private void OnCompleteAsyncInitialize(Message msg)
	{
	}

	[Token(Token = "0x600171C")]
	[Address(RVA = "0x10E9A94", Offset = "0x10E9A94", VA = "0x10E9A94")]
	private void OnCompleteEntitlementCheck(Message msg)
	{
	}

	[Token(Token = "0x600171D")]
	[Address(RVA = "0x10E9BE0", Offset = "0x10E9BE0", VA = "0x10E9BE0")]
	public StartApplication()
	{
	}
}
[Token(Token = "0x2000363")]
public class StaticMaterials : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000364")]
	public class PopupMenu
	{
		[Token(Token = "0x4001958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Material Kick;

		[Token(Token = "0x4001959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material Mute;

		[Token(Token = "0x400195A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material Unmute;

		[Token(Token = "0x400195B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material AddFriend;

		[Token(Token = "0x400195C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Material AlreadyFriend;

		[Token(Token = "0x400195D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Material Steam;

		[Token(Token = "0x400195E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Material Oculus;

		[Token(Token = "0x400195F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Material Unknown;

		[Token(Token = "0x4001960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Material UnlitKick;

		[Token(Token = "0x4001961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Material UnlitMute;

		[Token(Token = "0x4001962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Material UnlitUnmute;

		[Token(Token = "0x4001963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Material UnlitAddFriend;

		[Token(Token = "0x4001964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Material UnlitAlreadyFriend;

		[Token(Token = "0x4001965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Material UnlitSteam;

		[Token(Token = "0x4001966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Material UnlitOculus;

		[Token(Token = "0x4001967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Material UnlitUnknown;

		[Token(Token = "0x6001730")]
		[Address(RVA = "0x1372D30", Offset = "0x1372D30", VA = "0x1372D30")]
		public PopupMenu()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000365")]
	public class Speech
	{
		[Token(Token = "0x4001968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Material[] Volume;

		[Token(Token = "0x4001969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material[] UnlitVolume;

		[Token(Token = "0x400196A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material MicrophoneDisabled;

		[Token(Token = "0x400196B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material UnlitMicrophoneDisabled;

		[Token(Token = "0x400196C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Material Muted;

		[Token(Token = "0x400196D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Material UnlitMuted;

		[Token(Token = "0x6001731")]
		[Address(RVA = "0x1372D38", Offset = "0x1372D38", VA = "0x1372D38")]
		public Speech()
		{
		}
	}

	[Token(Token = "0x4001955")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static StaticMaterials instance;

	[Token(Token = "0x4001956")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PopupMenu popupMenu;

	[Token(Token = "0x4001957")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Speech speech;

	[Token(Token = "0x1700013A")]
	public static StaticMaterials Instance
	{
		[Token(Token = "0x600172D")]
		[Address(RVA = "0x10E9C9C", Offset = "0x10E9C9C", VA = "0x10E9C9C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600172E")]
	[Address(RVA = "0x10E9D88", Offset = "0x10E9D88", VA = "0x10E9D88")]
	private void Awake()
	{
	}

	[Token(Token = "0x600172F")]
	[Address(RVA = "0x10E9E20", Offset = "0x10E9E20", VA = "0x10E9E20")]
	public StaticMaterials()
	{
	}
}
[Token(Token = "0x2000366")]
public class StayVertical : MonoBehaviour
{
	[Token(Token = "0x6001732")]
	[Address(RVA = "0x10EA9A8", Offset = "0x10EA9A8", VA = "0x10EA9A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6001733")]
	[Address(RVA = "0x10EAA3C", Offset = "0x10EAA3C", VA = "0x10EAA3C")]
	public StayVertical()
	{
	}
}
[Token(Token = "0x2000367")]
public class StickToGround : MonoBehaviour
{
	[Token(Token = "0x2000368")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9184E4", Offset = "0x9184E4")]
	private sealed class <StartYielded>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StickToGround <>4__this;

		[Token(Token = "0x1700013B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600173C")]
			[Address(RVA = "0x1372EE0", Offset = "0x1372EE0", VA = "0x1372EE0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600173E")]
			[Address(RVA = "0x1372F28", Offset = "0x1372F28", VA = "0x1372F28", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001739")]
		[Address(RVA = "0x1372D40", Offset = "0x1372D40", VA = "0x1372D40")]
		[DebuggerHidden]
		public <StartYielded>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x600173A")]
		[Address(RVA = "0x1372D6C", Offset = "0x1372D6C", VA = "0x1372D6C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600173B")]
		[Address(RVA = "0x1372D70", Offset = "0x1372D70", VA = "0x1372D70", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600173D")]
		[Address(RVA = "0x1372EE8", Offset = "0x1372EE8", VA = "0x1372EE8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400196E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool boat;

	[Token(Token = "0x400196F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool vehicle;

	[Token(Token = "0x6001734")]
	[Address(RVA = "0x10EAD04", Offset = "0x10EAD04", VA = "0x10EAD04")]
	public void Start()
	{
	}

	[Token(Token = "0x6001735")]
	[Address(RVA = "0x10EAD30", Offset = "0x10EAD30", VA = "0x10EAD30")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92A9B4", Offset = "0x92A9B4")]
	public IEnumerator StartYielded()
	{
		return null;
	}

	[Token(Token = "0x6001736")]
	[Address(RVA = "0x10EAD9C", Offset = "0x10EAD9C", VA = "0x10EAD9C")]
	public static void Stick(Transform transform, bool applyRotation = false)
	{
	}

	[Token(Token = "0x6001737")]
	[Address(RVA = "0x10EAF1C", Offset = "0x10EAF1C", VA = "0x10EAF1C")]
	private static void StickRotation(Transform transform, Vector3 up)
	{
	}

	[Token(Token = "0x6001738")]
	[Address(RVA = "0x10EB030", Offset = "0x10EB030", VA = "0x10EB030")]
	public StickToGround()
	{
	}
}
[Token(Token = "0x2000369")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x9184F4", Offset = "0x9184F4")]
public class StoreCondition : MonoBehaviour
{
	[Token(Token = "0x4001973")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool showIfSidequestStore;

	[Token(Token = "0x4001974")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool showIfOculusQuestStore;

	[Token(Token = "0x4001975")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool showIfOculusRiftStore;

	[Token(Token = "0x4001976")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool showIfSteamStore;

	[Token(Token = "0x4001977")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool showIfViveStore;

	[Token(Token = "0x4001978")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool showIfMicrosoftStore;

	[Token(Token = "0x4001979")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	public bool showIfNoloStore;

	[Token(Token = "0x400197A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	public bool showIfStandaloneOVRStore;

	[Token(Token = "0x400197B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool destroyIfNotShow;

	[Token(Token = "0x600173F")]
	[Address(RVA = "0x10EB038", Offset = "0x10EB038", VA = "0x10EB038")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001740")]
	[Address(RVA = "0x10EB308", Offset = "0x10EB308", VA = "0x10EB308")]
	public StoreCondition()
	{
	}
}
[Token(Token = "0x200036A")]
public class StructuresMenu : MonoBehaviour
{
	[Token(Token = "0x400197C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool isOpen;

	[Token(Token = "0x6001741")]
	[Address(RVA = "0x10EB318", Offset = "0x10EB318", VA = "0x10EB318")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6001742")]
	[Address(RVA = "0x10EB380", Offset = "0x10EB380", VA = "0x10EB380")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6001743")]
	[Address(RVA = "0x10EB3E4", Offset = "0x10EB3E4", VA = "0x10EB3E4")]
	public StructuresMenu()
	{
	}
}
[Token(Token = "0x200036B")]
public class StukaSiren : MonoBehaviour
{
	[Token(Token = "0x400197D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float lastY;

	[Token(Token = "0x400197E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AudioSource audios;

	[Token(Token = "0x400197F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float vy;

	[Token(Token = "0x4001980")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float vyTreshold;

	[Token(Token = "0x4001981")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float pitchMulIn;

	[Token(Token = "0x4001982")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float pitchMulOut;

	[Token(Token = "0x4001983")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float volumeMulIn;

	[Token(Token = "0x4001984")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float volumeMulOut;

	[Token(Token = "0x4001985")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float volume;

	[Token(Token = "0x4001986")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float pitch;

	[Token(Token = "0x4001987")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float pitchMin;

	[Token(Token = "0x4001988")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float pitchMax;

	[Token(Token = "0x6001745")]
	[Address(RVA = "0x10EB3F0", Offset = "0x10EB3F0", VA = "0x10EB3F0")]
	public void Start()
	{
	}

	[Token(Token = "0x6001746")]
	[Address(RVA = "0x10EB468", Offset = "0x10EB468", VA = "0x10EB468")]
	public void LateUpdate()
	{
	}

	[Token(Token = "0x6001747")]
	[Address(RVA = "0x10EB690", Offset = "0x10EB690", VA = "0x10EB690")]
	public StukaSiren()
	{
	}
}
[Token(Token = "0x200036C")]
public class SunFlare : MonoBehaviour
{
	[Token(Token = "0x4001989")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Transform t;

	[Token(Token = "0x6001748")]
	[Address(RVA = "0x10EC000", Offset = "0x10EC000", VA = "0x10EC000")]
	public void Awake()
	{
	}

	[Token(Token = "0x6001749")]
	[Address(RVA = "0x10EC05C", Offset = "0x10EC05C", VA = "0x10EC05C")]
	public SunFlare()
	{
	}
}
[Token(Token = "0x200036D")]
public class SunMoonTexture : MonoBehaviour
{
	[Token(Token = "0x400198A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material moonMaterial;

	[Token(Token = "0x400198B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected Material sunMaterial;

	[Token(Token = "0x400198C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected bool night;

	[Token(Token = "0x600174A")]
	[Address(RVA = "0x10EC064", Offset = "0x10EC064", VA = "0x10EC064")]
	private void Start()
	{
	}

	[Token(Token = "0x600174B")]
	[Address(RVA = "0x10EC1A4", Offset = "0x10EC1A4", VA = "0x10EC1A4")]
	public SunMoonTexture()
	{
	}
}
[Token(Token = "0x200036E")]
public class TakeOff : MonoBehaviour
{
	[Token(Token = "0x400198D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int priority;

	[Token(Token = "0x400198E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static TakeOff instance;

	[Token(Token = "0x400198F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool startOnGround;

	[Token(Token = "0x4001990")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
	public static bool onGround;

	[Token(Token = "0x600174C")]
	[Address(RVA = "0x10EE188", Offset = "0x10EE188", VA = "0x10EE188")]
	private void Awake()
	{
	}

	[Token(Token = "0x600174D")]
	[Address(RVA = "0x10EE2E0", Offset = "0x10EE2E0", VA = "0x10EE2E0")]
	public static Transform GetTransform()
	{
		return null;
	}

	[Token(Token = "0x600174E")]
	[Address(RVA = "0x10EE3C8", Offset = "0x10EE3C8", VA = "0x10EE3C8")]
	public TakeOff()
	{
	}
}
[Token(Token = "0x200036F")]
public enum eTaskResult
{
	[Token(Token = "0x4001992")]
	none,
	[Token(Token = "0x4001993")]
	completed,
	[Token(Token = "0x4001994")]
	failed
}
[Serializable]
[Token(Token = "0x2000370")]
public class Task
{
	[Token(Token = "0x4001995")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public eTask type;

	[Token(Token = "0x4001996")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public eqType eType;

	[Token(Token = "0x4001997")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int num;

	[Token(Token = "0x4001998")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Squadron squadron;

	[Token(Token = "0x4001999")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool convoy;

	[Token(Token = "0x400199A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool train;

	[Token(Token = "0x400199B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool bridge;

	[Token(Token = "0x400199C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	public bool factory;

	[Token(Token = "0x400199D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool airfield;

	[Token(Token = "0x400199E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public bool aa;

	[Token(Token = "0x400199F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private eTaskResult result;

	[Token(Token = "0x6001750")]
	[Address(RVA = "0x21D9DA4", Offset = "0x21D9DA4", VA = "0x21D9DA4")]
	public void Reset()
	{
	}

	[Token(Token = "0x6001751")]
	[Address(RVA = "0x21D9DAC", Offset = "0x21D9DAC", VA = "0x21D9DAC")]
	public eTaskResult GetResult(bool b)
	{
		return default(eTaskResult);
	}

	[Token(Token = "0x6001752")]
	[Address(RVA = "0x21D9E58", Offset = "0x21D9E58", VA = "0x21D9E58")]
	public string GetReason()
	{
		return null;
	}

	[Token(Token = "0x6001753")]
	[Address(RVA = "0x21D9F00", Offset = "0x21D9F00", VA = "0x21D9F00")]
	public bool IsGroundTarget()
	{
		return default(bool);
	}

	[Token(Token = "0x6001754")]
	[Address(RVA = "0x21D9F10", Offset = "0x21D9F10", VA = "0x21D9F10")]
	public bool IsGroundTargetOrBaloon()
	{
		return default(bool);
	}

	[Token(Token = "0x6001755")]
	[Address(RVA = "0x21D9F20", Offset = "0x21D9F20", VA = "0x21D9F20")]
	public int GetCount()
	{
		return default(int);
	}

	[Token(Token = "0x6001756")]
	[Address(RVA = "0x21DA29C", Offset = "0x21DA29C", VA = "0x21DA29C")]
	public int GetMax()
	{
		return default(int);
	}

	[Token(Token = "0x6001757")]
	[Address(RVA = "0x21D9DE0", Offset = "0x21D9DE0", VA = "0x21D9DE0")]
	private void Evaluate()
	{
	}

	[Token(Token = "0x6001758")]
	[Address(RVA = "0x21DA574", Offset = "0x21DA574", VA = "0x21DA574")]
	private void EvaluateDestroy(int count)
	{
	}

	[Token(Token = "0x6001759")]
	[Address(RVA = "0x21DA620", Offset = "0x21DA620", VA = "0x21DA620")]
	private void EvaluateProtect(int count)
	{
	}

	[Token(Token = "0x600175A")]
	[Address(RVA = "0x21DA73C", Offset = "0x21DA73C", VA = "0x21DA73C")]
	public string GetText(int addDestroyed, int addMax)
	{
		return null;
	}

	[Token(Token = "0x600175B")]
	[Address(RVA = "0x21DAAB4", Offset = "0x21DAAB4", VA = "0x21DAAB4")]
	public static string GetText(CustomMissionTask task)
	{
		return null;
	}

	[Token(Token = "0x600175C")]
	[Address(RVA = "0x21DAB24", Offset = "0x21DAB24", VA = "0x21DAB24")]
	public Task()
	{
	}
}
[Token(Token = "0x2000371")]
public enum eTask
{
	[Token(Token = "0x40019A1")]
	ignoreEnemy,
	[Token(Token = "0x40019A2")]
	destroyEnemy,
	[Token(Token = "0x40019A3")]
	protectFriend,
	[Token(Token = "0x40019A4")]
	ignoreFriend
}
[Token(Token = "0x2000372")]
public class TaskTemplate : MonoBehaviour
{
	[Token(Token = "0x40019A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public eTask type;

	[Token(Token = "0x40019A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public eqType eType;

	[Token(Token = "0x40019A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int num;

	[Token(Token = "0x40019A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int waves;

	[NonSerialized]
	[Token(Token = "0x40019A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<string> wavesPlanes;

	[Token(Token = "0x600175D")]
	[Address(RVA = "0x21DAB2C", Offset = "0x21DAB2C", VA = "0x21DAB2C")]
	public bool IsOffensive()
	{
		return default(bool);
	}

	[Token(Token = "0x600175E")]
	[Address(RVA = "0x21DAB3C", Offset = "0x21DAB3C", VA = "0x21DAB3C")]
	public string GetText()
	{
		return null;
	}

	[Token(Token = "0x600175F")]
	[Address(RVA = "0x21DAB4C", Offset = "0x21DAB4C", VA = "0x21DAB4C")]
	public void UpdateName()
	{
	}

	[Token(Token = "0x6001760")]
	[Address(RVA = "0x21DAAAC", Offset = "0x21DAAAC", VA = "0x21DAAAC")]
	public static string GetTaskText(eTask type, eqType eqType)
	{
		return null;
	}

	[Token(Token = "0x6001761")]
	[Address(RVA = "0x21DACB8", Offset = "0x21DACB8", VA = "0x21DACB8")]
	public static string GetTaskText(eTask type, eqType eqType, bool showIgnore)
	{
		return null;
	}

	[Token(Token = "0x6001762")]
	[Address(RVA = "0x21DAE30", Offset = "0x21DAE30", VA = "0x21DAE30")]
	public static string GetEqTypeText(eqType eqType)
	{
		return null;
	}

	[Token(Token = "0x6001763")]
	[Address(RVA = "0x21DB654", Offset = "0x21DB654", VA = "0x21DB654")]
	public static string GetTaskBriefing(eTask type, eqType eqType)
	{
		return null;
	}

	[Token(Token = "0x6001764")]
	[Address(RVA = "0x21DBAA0", Offset = "0x21DBAA0", VA = "0x21DBAA0")]
	public static int GetSymbol(eqType et)
	{
		return default(int);
	}

	[Token(Token = "0x6001765")]
	[Address(RVA = "0x21DBB58", Offset = "0x21DBB58", VA = "0x21DBB58")]
	public TaskTemplate()
	{
	}
}
[Token(Token = "0x2000373")]
public class TerrainComputeShaders : MonoBehaviour
{
	[StructLayout(3)]
	[Token(Token = "0x2000374")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x918508", Offset = "0x918508")]
	private struct <>c__DisplayClass7_0
	{
		[Token(Token = "0x40019B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GraphicsFormat format;

		[Token(Token = "0x40019B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ComputeShader cr;

		[Token(Token = "0x40019B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ComputeShader cs;

		[Token(Token = "0x40019B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public uint computeStrokes;

		[Token(Token = "0x40019B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ComputeShader blur;

		[Token(Token = "0x40019B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ComputeShader cmb;
	}

	[Token(Token = "0x40019AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ComputeShader ridges;

	[Token(Token = "0x40019AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ComputeShader stroke;

	[Token(Token = "0x40019AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private ComputeShader materialPatching;

	[Token(Token = "0x40019AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private ComputeShader blur;

	[Token(Token = "0x40019AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private ComputeShader combine;

	[Token(Token = "0x40019AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static TerrainComputeShaders instance;

	[Token(Token = "0x6001766")]
	[Address(RVA = "0x21DD6E8", Offset = "0x21DD6E8", VA = "0x21DD6E8")]
	private static void Init()
	{
	}

	[Token(Token = "0x6001767")]
	[Address(RVA = "0x21DD7B4", Offset = "0x21DD7B4", VA = "0x21DD7B4")]
	public static void Ridges(Texture hmap, ref RenderTexture copyMask, ref RenderTexture source, ref RenderTexture target, GraphicsFormat format, Vector4 st, float heightScale, float ridgesIntensity = 1f, uint computeStrokes = 1u)
	{
	}

	[Token(Token = "0x6001768")]
	[Address(RVA = "0x21DE260", Offset = "0x21DE260", VA = "0x21DE260")]
	private static void DestroyTexture(RenderTexture rt)
	{
	}

	[Token(Token = "0x6001769")]
	[Address(RVA = "0x21DE2FC", Offset = "0x21DE2FC", VA = "0x21DE2FC")]
	private static void Swap(ref RenderTexture a, ref RenderTexture b)
	{
	}

	[Token(Token = "0x600176A")]
	[Address(RVA = "0x21DE310", Offset = "0x21DE310", VA = "0x21DE310")]
	public TerrainComputeShaders()
	{
	}

	[Token(Token = "0x600176B")]
	[Address(RVA = "0x21DDF44", Offset = "0x21DDF44", VA = "0x21DDF44")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92AA64", Offset = "0x92AA64")]
	internal static RenderTexture <Ridges>g__CreateTexture|7_0(ref <>c__DisplayClass7_0 P_0)
	{
		return null;
	}

	[Token(Token = "0x600176C")]
	[Address(RVA = "0x21DDFD8", Offset = "0x21DDFD8", VA = "0x21DDFD8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92AA74", Offset = "0x92AA74")]
	internal static void <Ridges>g__ComputeLayer|7_1(int matA, int matB, bool combine, ref <>c__DisplayClass7_0 P_3)
	{
	}

	[Token(Token = "0x600176D")]
	[Address(RVA = "0x21DE0E0", Offset = "0x21DE0E0", VA = "0x21DE0E0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92AA84", Offset = "0x92AA84")]
	internal static void <Ridges>g__PostprocessMask|7_2(ref RenderTexture result, ref RenderTexture source, ref <>c__DisplayClass7_0 P_2)
	{
	}

	[Token(Token = "0x600176E")]
	[Address(RVA = "0x21DE318", Offset = "0x21DE318", VA = "0x21DE318")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92AA94", Offset = "0x92AA94")]
	internal static void <Ridges>g__Stroke|7_3(ref RenderTexture result, ref RenderTexture source, ref <>c__DisplayClass7_0 P_2)
	{
	}

	[Token(Token = "0x600176F")]
	[Address(RVA = "0x21DE410", Offset = "0x21DE410", VA = "0x21DE410")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92AAA4", Offset = "0x92AAA4")]
	internal static void <Ridges>g__Blur|7_4(ref RenderTexture result, ref RenderTexture source, int itter, ref <>c__DisplayClass7_0 P_3)
	{
	}

	[Token(Token = "0x6001770")]
	[Address(RVA = "0x21DE120", Offset = "0x21DE120", VA = "0x21DE120")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92AAB4", Offset = "0x92AAB4")]
	internal static void <Ridges>g__Combine|7_5(ref RenderTexture combined, ref RenderTexture layer, ref RenderTexture target, bool exclusive, ref <>c__DisplayClass7_0 P_4)
	{
	}
}
[Token(Token = "0x2000375")]
public enum eTerrainH
{
	[Token(Token = "0x40019B7")]
	lakes,
	[Token(Token = "0x40019B8")]
	plain,
	[Token(Token = "0x40019B9")]
	plainLake1,
	[Token(Token = "0x40019BA")]
	plainLake2,
	[Token(Token = "0x40019BB")]
	hills,
	[Token(Token = "0x40019BC")]
	hillsLake1,
	[Token(Token = "0x40019BD")]
	hillsLake2,
	[Token(Token = "0x40019BE")]
	hillsLakes,
	[Token(Token = "0x40019BF")]
	mountains,
	[Token(Token = "0x40019C0")]
	mountainsLake1,
	[Token(Token = "0x40019C1")]
	mountainsLake2,
	[Token(Token = "0x40019C2")]
	num
}
[Token(Token = "0x2000376")]
public class TerrainHeight : MonoBehaviour
{
	[Token(Token = "0x40019C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool[] isLake;

	[Token(Token = "0x40019C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static float customXmin;

	[Token(Token = "0x40019C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static float customXmax;

	[Token(Token = "0x40019C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static float customYmin;

	[Token(Token = "0x40019C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static float customYmax;

	[Token(Token = "0x40019C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static float customZmin;

	[Token(Token = "0x40019C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public static float customZmax;

	[Token(Token = "0x6001771")]
	[Address(RVA = "0x21E0824", Offset = "0x21E0824", VA = "0x21E0824")]
	public static Vector3 InitHValues(string mapName)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001772")]
	[Address(RVA = "0x21E4724", Offset = "0x21E4724", VA = "0x21E4724")]
	private static float R(float a, float b)
	{
		return default(float);
	}

	[Token(Token = "0x6001773")]
	[Address(RVA = "0x21E472C", Offset = "0x21E472C", VA = "0x21E472C")]
	public TerrainHeight()
	{
	}
}
[Token(Token = "0x2000377")]
[ExecuteInEditMode]
public class TerrainHeightPlane : MonoBehaviour
{
	[Token(Token = "0x40019CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public float height;

	[Token(Token = "0x40019CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public TerrainZoneData data;

	[Token(Token = "0x40019CC")]
	public const float kTownH = 19.5f;

	[Token(Token = "0x6001775")]
	[Address(RVA = "0x21E4804", Offset = "0x21E4804", VA = "0x21E4804")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001776")]
	[Address(RVA = "0x21E4A08", Offset = "0x21E4A08", VA = "0x21E4A08")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001777")]
	[Address(RVA = "0x21E4870", Offset = "0x21E4870", VA = "0x21E4870")]
	public void Recalculate()
	{
	}

	[Token(Token = "0x6001778")]
	[Address(RVA = "0x21E4CA8", Offset = "0x21E4CA8", VA = "0x21E4CA8")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6001779")]
	[Address(RVA = "0x21E4CB8", Offset = "0x21E4CB8", VA = "0x21E4CB8")]
	public TerrainHeightPlane()
	{
	}
}
[Token(Token = "0x2000378")]
public class TerrainMask : MonoBehaviour
{
	[Token(Token = "0x40019CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int arrayIndex;

	[Token(Token = "0x40019CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float scale;

	[Token(Token = "0x40019CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture2D mask;

	[Token(Token = "0x40019D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool overrideMaterials;

	[Token(Token = "0x40019D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int materialId;

	[Token(Token = "0x600177A")]
	[Address(RVA = "0x21E4CC8", Offset = "0x21E4CC8", VA = "0x21E4CC8")]
	public Vector2 GetOffset(Transform parent)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600177B")]
	[Address(RVA = "0x21E4CCC", Offset = "0x21E4CCC", VA = "0x21E4CCC")]
	private Vector2 PositionToTextureOffset(Transform parent)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600177C")]
	[Address(RVA = "0x21E4D50", Offset = "0x21E4D50", VA = "0x21E4D50")]
	public TerrainMask()
	{
	}
}
[Token(Token = "0x2000379")]
public class TerrainMaskContainer : MonoBehaviour
{
	[Token(Token = "0x200037A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x918528", Offset = "0x918528")]
	private sealed class <Start>d__0 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40019D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40019D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40019D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TerrainMaskContainer <>4__this;

		[Token(Token = "0x1700013D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001782")]
			[Address(RVA = "0x13739C8", Offset = "0x13739C8", VA = "0x13739C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001784")]
			[Address(RVA = "0x1373A10", Offset = "0x1373A10", VA = "0x1373A10", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600177F")]
		[Address(RVA = "0x13738AC", Offset = "0x13738AC", VA = "0x13738AC")]
		[DebuggerHidden]
		public <Start>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x6001780")]
		[Address(RVA = "0x13738D8", Offset = "0x13738D8", VA = "0x13738D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001781")]
		[Address(RVA = "0x13738DC", Offset = "0x13738DC", VA = "0x13738DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001783")]
		[Address(RVA = "0x13739D0", Offset = "0x13739D0", VA = "0x13739D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x600177D")]
	[Address(RVA = "0x21E4D60", Offset = "0x21E4D60", VA = "0x21E4D60")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92AAC4", Offset = "0x92AAC4")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600177E")]
	[Address(RVA = "0x21E4DCC", Offset = "0x21E4DCC", VA = "0x21E4DCC")]
	public TerrainMaskContainer()
	{
	}
}
[Token(Token = "0x200037B")]
public static class TerrainMaskFinalizer
{
	[Token(Token = "0x40019D5")]
	public const int maskSize = 512;

	[Token(Token = "0x40019D6")]
	public const GraphicsFormat rtFormat = GraphicsFormat.R8G8B8A8_UNorm;

	[Token(Token = "0x40019D7")]
	public const int kMainTerrainMaskIndex = 1;

	[Token(Token = "0x40019D8")]
	public const int kMainTownMaskIndex = 2;

	[Token(Token = "0x40019D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool useRawHMap;

	[Token(Token = "0x40019DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static Vector3 scale;

	[Token(Token = "0x40019DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Vector2 offsetHM;

	[Token(Token = "0x40019DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static float scaleHM;

	[Token(Token = "0x40019DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public static float ridgesIntensity;

	[Token(Token = "0x40019DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static uint computeStrokes;

	[Token(Token = "0x40019DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static Texture hmap;

	[Token(Token = "0x40019E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static Transform terrainTransform;

	[Token(Token = "0x40019E1")]
	private const int kMaxZones = 128;

	[Token(Token = "0x40019E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static RenderTexture rtArrayMask;

	[Token(Token = "0x40019E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static bool arrayMaskReady;

	[Token(Token = "0x40019E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static TerrainMask[] terrainMasks;

	[Token(Token = "0x40019E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static TerrainZoneData[] terrainMasksData;

	[Token(Token = "0x40019E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static int zoneHead;

	[Token(Token = "0x40019E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static Action finalizeRequest;

	[Token(Token = "0x6001785")]
	[Address(RVA = "0x21E4DD4", Offset = "0x21E4DD4", VA = "0x21E4DD4")]
	private static RenderTexture LegacyHeightMap()
	{
		return null;
	}

	[Token(Token = "0x6001786")]
	[Address(RVA = "0x21E508C", Offset = "0x21E508C", VA = "0x21E508C")]
	public static bool PutMask(TerrainMask mask, Texture tex, int putArrayIndex)
	{
		return default(bool);
	}

	[Token(Token = "0x6001787")]
	[Address(RVA = "0x21E51FC", Offset = "0x21E51FC", VA = "0x21E51FC")]
	public static void AddMaskOnly(TerrainMask mask)
	{
	}

	[Token(Token = "0x6001788")]
	[Address(RVA = "0x21E2330", Offset = "0x21E2330", VA = "0x21E2330")]
	public static void ComputeRidges(Renderer r, out Texture2D cpuRidges, [Optional] Texture2D globalMaskToCopy, bool cpuUsage = false)
	{
	}

	[Token(Token = "0x6001789")]
	[Address(RVA = "0x21DE880", Offset = "0x21DE880", VA = "0x21DE880")]
	public static void ClearMasks()
	{
	}

	[Token(Token = "0x600178A")]
	[Address(RVA = "0x21DFFB0", Offset = "0x21DFFB0", VA = "0x21DFFB0")]
	public static void PrepareMaskZones(TerrainMask[] masks)
	{
	}

	[Token(Token = "0x600178B")]
	[Address(RVA = "0x21E4260", Offset = "0x21E4260", VA = "0x21E4260")]
	public static bool IsPointWithinTerrainMask(Vector3 p)
	{
		return default(bool);
	}

	[Token(Token = "0x600178C")]
	[Address(RVA = "0x21E3288", Offset = "0x21E3288", VA = "0x21E3288")]
	public static bool GetPointTerrainMask(Vector3 point, out float maskIdx, out Vector2 scaleRotation, out Vector2 offset)
	{
		return default(bool);
	}

	[Token(Token = "0x600178D")]
	[Address(RVA = "0x21E5734", Offset = "0x21E5734", VA = "0x21E5734")]
	public static void Dispose()
	{
	}

	[Token(Token = "0x600178E")]
	[Address(RVA = "0x21E534C", Offset = "0x21E534C", VA = "0x21E534C")]
	private static void CreateMaskArray(Texture sourceMaskArray)
	{
	}
}
[Token(Token = "0x200037C")]
public static class TerrainRenderMaskCombiner
{
	[Token(Token = "0x40019E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Camera cam;

	[Token(Token = "0x40019E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static RenderTexture target;

	[Token(Token = "0x6001790")]
	[Address(RVA = "0x21E58F8", Offset = "0x21E58F8", VA = "0x21E58F8")]
	public static void Initialize()
	{
	}

	[Token(Token = "0x6001791")]
	[Address(RVA = "0x21E5A3C", Offset = "0x21E5A3C", VA = "0x21E5A3C")]
	private static void PrepareTown(GameObject town)
	{
	}

	[Token(Token = "0x6001792")]
	[Address(RVA = "0x21E5A44", Offset = "0x21E5A44", VA = "0x21E5A44")]
	public static void CombineMask(GameObject go, int arrayIndex)
	{
	}

	[Token(Token = "0x6001793")]
	[Address(RVA = "0x21E5D58", Offset = "0x21E5D58", VA = "0x21E5D58")]
	private static void CreateCamera()
	{
	}

	[Token(Token = "0x6001794")]
	[Address(RVA = "0x21E608C", Offset = "0x21E608C", VA = "0x21E608C")]
	private static void UpdateCameraSize(List<Renderer> renderers)
	{
	}

	[Token(Token = "0x6001795")]
	[Address(RVA = "0x21E624C", Offset = "0x21E624C", VA = "0x21E624C")]
	private static TerrainMask CreateTerrainMaskFromCamera()
	{
		return null;
	}

	[Token(Token = "0x6001796")]
	[Address(RVA = "0x21E64B8", Offset = "0x21E64B8", VA = "0x21E64B8")]
	private static RenderTexture CreateRT()
	{
		return null;
	}

	[Token(Token = "0x6001797")]
	[Address(RVA = "0x21E6554", Offset = "0x21E6554", VA = "0x21E6554")]
	private static void GetRenderersExtents(List<Renderer> renderers, Transform frame, out Vector3 center, out Vector3 extents)
	{
	}

	[Token(Token = "0x6001798")]
	[Address(RVA = "0x21E6950", Offset = "0x21E6950", VA = "0x21E6950")]
	private static void GetBoundsPoints(Bounds b, Vector3[] points, [Optional] Matrix4x4? mat)
	{
	}

	[Token(Token = "0x6001799")]
	[Address(RVA = "0x21E6B04", Offset = "0x21E6B04", VA = "0x21E6B04")]
	public static void Dispose()
	{
	}
}
[Token(Token = "0x200037D")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x918538", Offset = "0x918538")]
public class TerrainRenderMaskHolder : MonoBehaviour
{
	[Token(Token = "0x200037E")]
	public enum Layer
	{
		[Token(Token = "0x40019F3")]
		First,
		[Token(Token = "0x40019F4")]
		Second
	}

	[Token(Token = "0x200037F")]
	public enum Size
	{
		[Token(Token = "0x40019F6")]
		Custom,
		[Token(Token = "0x40019F7")]
		Path,
		[Token(Token = "0x40019F8")]
		Road,
		[Token(Token = "0x40019F9")]
		Background
	}

	[Token(Token = "0x40019EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D mask;

	[Token(Token = "0x40019EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int materialId;

	[Token(Token = "0x40019EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Size size;

	[Token(Token = "0x40019ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Layer layer;

	[Token(Token = "0x40019EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Mesh quad;

	[Token(Token = "0x40019EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Shader shader;

	[Token(Token = "0x40019F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material matInstance;

	[Token(Token = "0x40019F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly float[] kSizes;

	[Token(Token = "0x600179A")]
	[Address(RVA = "0x21E6D00", Offset = "0x21E6D00", VA = "0x21E6D00")]
	private void Awake()
	{
	}

	[Token(Token = "0x600179B")]
	[Address(RVA = "0x21E7190", Offset = "0x21E7190", VA = "0x21E7190")]
	private TerrainMask CreateTerrainMask()
	{
		return null;
	}

	[Token(Token = "0x600179C")]
	[Address(RVA = "0x21E743C", Offset = "0x21E743C", VA = "0x21E743C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600179D")]
	[Address(RVA = "0x21E7324", Offset = "0x21E7324", VA = "0x21E7324")]
	private static void Init()
	{
	}

	[Token(Token = "0x600179E")]
	[Address(RVA = "0x21E74E4", Offset = "0x21E74E4", VA = "0x21E74E4")]
	public TerrainRenderMaskHolder()
	{
	}
}
[Token(Token = "0x2000380")]
public struct TerrainZoneData
{
	[Token(Token = "0x40019FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Matrix4x4 mat;

	[Token(Token = "0x40019FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Quaternion rot;

	[Token(Token = "0x40019FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector3 angles;

	[Token(Token = "0x40019FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public Vector3 scale;

	[Token(Token = "0x60017A0")]
	[Address(RVA = "0x21E566C", Offset = "0x21E566C", VA = "0x21E566C")]
	public static bool IsPointWithinAnyZone(Vector3 point, TerrainZoneData[] zones, int len, out int zoneIndex)
	{
		return default(bool);
	}

	[Token(Token = "0x60017A1")]
	[Address(RVA = "0x21E4A6C", Offset = "0x21E4A6C", VA = "0x21E4A6C")]
	public static TerrainZoneData Setup(Transform parent, Transform self)
	{
		return default(TerrainZoneData);
	}
}
[Token(Token = "0x2000381")]
public static class TerrainZoneDataHelper
{
	[Token(Token = "0x60017A2")]
	[Address(RVA = "0x21E7584", Offset = "0x21E7584", VA = "0x21E7584")]
	public static bool IsPointWithinZone(this TerrainZoneData d, Vector3 point)
	{
		return default(bool);
	}

	[Token(Token = "0x60017A3")]
	[Address(RVA = "0x21E75E0", Offset = "0x21E75E0", VA = "0x21E75E0")]
	public static bool IsPointWithinZone(this TerrainZoneData d, Vector3 point, float margin, out Vector2 offset)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000382")]
public class TerritoryMap : MonoBehaviour, IMUIHoverable
{
	[Token(Token = "0x2000383")]
	public enum Region
	{
		[Token(Token = "0x4001A10")]
		Global,
		[Token(Token = "0x4001A11")]
		Tutorial,
		[Token(Token = "0x4001A12")]
		Hawaii,
		[Token(Token = "0x4001A13")]
		Midway,
		[Token(Token = "0x4001A14")]
		LineIslands,
		[Token(Token = "0x4001A15")]
		MarshallIslands,
		[Token(Token = "0x4001A16")]
		WakeIsland,
		[Token(Token = "0x4001A17")]
		MarcusIsland,
		[Token(Token = "0x4001A18")]
		Truk,
		[Token(Token = "0x4001A19")]
		MarianaIslands,
		[Token(Token = "0x4001A1A")]
		IwoJima,
		[Token(Token = "0x4001A1B")]
		Yap,
		[Token(Token = "0x4001A1C")]
		Okinawa,
		[Token(Token = "0x4001A1D")]
		Taiwan,
		[Token(Token = "0x4001A1E")]
		Phillipines,
		[Token(Token = "0x4001A1F")]
		Borneo,
		[Token(Token = "0x4001A20")]
		NewGuinea,
		[Token(Token = "0x4001A21")]
		Solomons,
		[Token(Token = "0x4001A22")]
		SantaCruzIslands,
		[Token(Token = "0x4001A23")]
		GilbertsIslands,
		[Token(Token = "0x4001A24")]
		Australia,
		[Token(Token = "0x4001A25")]
		Java,
		[Token(Token = "0x4001A26")]
		Thailand,
		[Token(Token = "0x4001A27")]
		China,
		[Token(Token = "0x4001A28")]
		Japan,
		[Token(Token = "0x4001A29")]
		Num
	}

	[Token(Token = "0x2000384")]
	public delegate void ChangeRegion(Region region);

	[Token(Token = "0x40019FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Material mapMain;

	[Token(Token = "0x40019FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Material[] mapRegions;

	[Token(Token = "0x4001A00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private MeshRenderer rend;

	[Token(Token = "0x4001A01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Texture2D maskCampaign;

	[Token(Token = "0x4001A02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Texture2D maskNoCampaign;

	[Token(Token = "0x4001A03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int mask;

	[Token(Token = "0x4001A04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int attackMask;

	[Token(Token = "0x4001A05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int neutralMask;

	[Token(Token = "0x4001A06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static TerritoryMap instance;

	[Token(Token = "0x4001A07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector2 texScale;

	[Token(Token = "0x4001A08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector2 texOffset;

	[Token(Token = "0x4001A09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int texWidth;

	[Token(Token = "0x4001A0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int texHeight;

	[Token(Token = "0x4001A0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Texture2D texMask;

	[Token(Token = "0x4001A0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool zoomed;

	[Token(Token = "0x4001A0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Region hoveredRegion;

	[Token(Token = "0x4001A0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static ChangeRegion regionChanged;

	[Token(Token = "0x60017A4")]
	[Address(RVA = "0x21E7690", Offset = "0x21E7690", VA = "0x21E7690")]
	public static int CreateMask(Region region)
	{
		return default(int);
	}

	[Token(Token = "0x60017A5")]
	[Address(RVA = "0x21E76F4", Offset = "0x21E76F4", VA = "0x21E76F4")]
	public static int CreateMask(int region)
	{
		return default(int);
	}

	[Token(Token = "0x60017A6")]
	[Address(RVA = "0x21E7700", Offset = "0x21E7700", VA = "0x21E7700")]
	public static void SetFriend(Region region)
	{
	}

	[Token(Token = "0x60017A7")]
	[Address(RVA = "0x21E7788", Offset = "0x21E7788", VA = "0x21E7788")]
	public static void SetEnemy(Region region)
	{
	}

	[Token(Token = "0x60017A8")]
	[Address(RVA = "0x21E7810", Offset = "0x21E7810", VA = "0x21E7810")]
	public static void SetNeutral(Region region)
	{
	}

	[Token(Token = "0x60017A9")]
	[Address(RVA = "0x21E7898", Offset = "0x21E7898", VA = "0x21E7898")]
	public static bool IsFriend(Region region)
	{
		return default(bool);
	}

	[Token(Token = "0x60017AA")]
	[Address(RVA = "0x21E78F8", Offset = "0x21E78F8", VA = "0x21E78F8")]
	public static bool IsFriend(int region)
	{
		return default(bool);
	}

	[Token(Token = "0x60017AB")]
	[Address(RVA = "0x21E797C", Offset = "0x21E797C", VA = "0x21E797C")]
	public static bool IsAttacked(Region region)
	{
		return default(bool);
	}

	[Token(Token = "0x60017AC")]
	[Address(RVA = "0x21E79DC", Offset = "0x21E79DC", VA = "0x21E79DC")]
	public static bool IsAttacked(int region)
	{
		return default(bool);
	}

	[Token(Token = "0x60017AD")]
	[Address(RVA = "0x21E7A60", Offset = "0x21E7A60", VA = "0x21E7A60")]
	public static void SetRaw(int mask)
	{
	}

	[Token(Token = "0x60017AE")]
	[Address(RVA = "0x21E7C84", Offset = "0x21E7C84", VA = "0x21E7C84")]
	public static int GetMask()
	{
		return default(int);
	}

	[Token(Token = "0x60017AF")]
	[Address(RVA = "0x21E7CE8", Offset = "0x21E7CE8", VA = "0x21E7CE8")]
	public static void SetAttacked(Region region)
	{
	}

	[Token(Token = "0x60017B0")]
	[Address(RVA = "0x21E7D48", Offset = "0x21E7D48", VA = "0x21E7D48")]
	public static void SetAttacked(int region)
	{
	}

	[Token(Token = "0x60017B1")]
	[Address(RVA = "0x21E7DC0", Offset = "0x21E7DC0", VA = "0x21E7DC0")]
	public static void SetCalm(Region region)
	{
	}

	[Token(Token = "0x60017B2")]
	[Address(RVA = "0x21E7E20", Offset = "0x21E7E20", VA = "0x21E7E20")]
	public static void SetCalm(int region)
	{
	}

	[Token(Token = "0x60017B3")]
	[Address(RVA = "0x21E7E98", Offset = "0x21E7E98", VA = "0x21E7E98")]
	public static Vector3 GetPosition(MissionPosition mp)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60017B4")]
	[Address(RVA = "0x21E7F8C", Offset = "0x21E7F8C", VA = "0x21E7F8C")]
	public static int CalculateMaxAttackedRegions()
	{
		return default(int);
	}

	[Token(Token = "0x60017B5")]
	[Address(RVA = "0x21E80A0", Offset = "0x21E80A0", VA = "0x21E80A0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60017B6")]
	[Address(RVA = "0x21E7AC8", Offset = "0x21E7AC8", VA = "0x21E7AC8")]
	public static void UpdateMap()
	{
	}

	[Token(Token = "0x60017B7")]
	[Address(RVA = "0x21E840C", Offset = "0x21E840C", VA = "0x21E840C")]
	public static void Prepare()
	{
	}

	[Token(Token = "0x60017B8")]
	[Address(RVA = "0x21E84DC", Offset = "0x21E84DC", VA = "0x21E84DC")]
	private static void DistributeZoneAttacks()
	{
	}

	[Token(Token = "0x60017B9")]
	[Address(RVA = "0x21E86DC", Offset = "0x21E86DC", VA = "0x21E86DC", Slot = "4")]
	public void OnHover(Vector3 worldPos)
	{
	}

	[Token(Token = "0x60017BA")]
	[Address(RVA = "0x21E86E0", Offset = "0x21E86E0", VA = "0x21E86E0", Slot = "5")]
	public void OnMove(Vector3 worldPos)
	{
	}

	[Token(Token = "0x60017BB")]
	[Address(RVA = "0x21E8900", Offset = "0x21E8900", VA = "0x21E8900", Slot = "6")]
	public void OnLeave()
	{
	}

	[Token(Token = "0x60017BC")]
	[Address(RVA = "0x21E8960", Offset = "0x21E8960", VA = "0x21E8960")]
	public void Click()
	{
	}

	[Token(Token = "0x60017BD")]
	[Address(RVA = "0x21E8BE8", Offset = "0x21E8BE8", VA = "0x21E8BE8")]
	public void ClickTutorial()
	{
	}

	[Token(Token = "0x60017BE")]
	[Address(RVA = "0x21E89FC", Offset = "0x21E89FC", VA = "0x21E89FC")]
	private void ZoomOut()
	{
	}

	[Token(Token = "0x60017BF")]
	[Address(RVA = "0x21E8A98", Offset = "0x21E8A98", VA = "0x21E8A98")]
	private void ZoomRegion(Region region)
	{
	}

	[Token(Token = "0x60017C0")]
	[Address(RVA = "0x21E8BFC", Offset = "0x21E8BFC", VA = "0x21E8BFC")]
	public TerritoryMap()
	{
	}
}
[Token(Token = "0x2000385")]
public class TestMissionsListLine : MonoBehaviour
{
	[Token(Token = "0x4001A2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private CloudSave_Checkbox checkbox;

	[Token(Token = "0x4001A2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TextMesh title;

	[Token(Token = "0x4001A2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private TerritoryMap.Region region;

	[Token(Token = "0x4001A2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MissionTemplate mission;

	[Token(Token = "0x4001A2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string prefs_key;

	[Token(Token = "0x60017C6")]
	[Address(RVA = "0xF05BA8", Offset = "0xF05BA8", VA = "0xF05BA8")]
	public void Init(TerritoryMap.Region r, MissionTemplate m)
	{
	}

	[Token(Token = "0x60017C7")]
	[Address(RVA = "0xF05CB0", Offset = "0xF05CB0", VA = "0xF05CB0")]
	public static string GetMissionDbgName(MissionTemplate m)
	{
		return null;
	}

	[Token(Token = "0x60017C8")]
	[Address(RVA = "0xF0609C", Offset = "0xF0609C", VA = "0xF0609C")]
	public void ClearChecked()
	{
	}

	[Token(Token = "0x60017C9")]
	[Address(RVA = "0xF060E0", Offset = "0xF060E0", VA = "0xF060E0")]
	private void OnClickCheckbox(bool on)
	{
	}

	[Token(Token = "0x60017CA")]
	[Address(RVA = "0xF06114", Offset = "0xF06114", VA = "0xF06114")]
	private void OnClickSelect()
	{
	}

	[Token(Token = "0x60017CB")]
	[Address(RVA = "0xF061E0", Offset = "0xF061E0", VA = "0xF061E0")]
	public TestMissionsListLine()
	{
	}
}
[Token(Token = "0x2000386")]
public class TestMissionsListWindow : MonoBehaviour
{
	[Token(Token = "0x4001A2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject linePrefab;

	[Token(Token = "0x4001A30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject linePrefabNext;

	[Token(Token = "0x4001A31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MUI_ClippedScroll scroll;

	[Token(Token = "0x4001A32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<TestMissionsListLine> lines;

	[Token(Token = "0x4001A33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float scrollPos;

	[Token(Token = "0x60017CC")]
	[Address(RVA = "0xF061E8", Offset = "0xF061E8", VA = "0xF061E8")]
	private void Start()
	{
	}

	[Token(Token = "0x60017CD")]
	[Address(RVA = "0xF06B98", Offset = "0xF06B98", VA = "0xF06B98")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60017CE")]
	[Address(RVA = "0xF06C40", Offset = "0xF06C40", VA = "0xF06C40")]
	private void OnClickClearCheckboxes()
	{
	}

	[Token(Token = "0x60017CF")]
	[Address(RVA = "0xF06D54", Offset = "0xF06D54", VA = "0xF06D54")]
	public TestMissionsListWindow()
	{
	}
}
[Token(Token = "0x2000387")]
public class TestingAssets : MonoBehaviour
{
	[Token(Token = "0x2000388")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91855C", Offset = "0x91855C")]
	private sealed class <LoadAssets>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TestingAssets <>4__this;

		[Token(Token = "0x4001A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x1700013F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60017DE")]
			[Address(RVA = "0x13745B4", Offset = "0x13745B4", VA = "0x13745B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000140")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017E0")]
			[Address(RVA = "0x13745FC", Offset = "0x13745FC", VA = "0x13745FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017DB")]
		[Address(RVA = "0x1374174", Offset = "0x1374174", VA = "0x1374174")]
		[DebuggerHidden]
		public <LoadAssets>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x60017DC")]
		[Address(RVA = "0x13741A0", Offset = "0x13741A0", VA = "0x13741A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60017DD")]
		[Address(RVA = "0x13741A4", Offset = "0x13741A4", VA = "0x13741A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017DF")]
		[Address(RVA = "0x13745BC", Offset = "0x13745BC", VA = "0x13745BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000389")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91856C", Offset = "0x91856C")]
	private sealed class <LoadAsset>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string file;

		[Token(Token = "0x4001A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TestingAssets <>4__this;

		[Token(Token = "0x4001A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UnityWebRequest <www>5__2;

		[Token(Token = "0x17000141")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60017E4")]
			[Address(RVA = "0x1374124", Offset = "0x1374124", VA = "0x1374124", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000142")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017E6")]
			[Address(RVA = "0x137416C", Offset = "0x137416C", VA = "0x137416C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017E1")]
		[Address(RVA = "0x1373D10", Offset = "0x1373D10", VA = "0x1373D10")]
		[DebuggerHidden]
		public <LoadAsset>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x60017E2")]
		[Address(RVA = "0x1373D3C", Offset = "0x1373D3C", VA = "0x1373D3C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60017E3")]
		[Address(RVA = "0x1373D40", Offset = "0x1373D40", VA = "0x1373D40", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017E5")]
		[Address(RVA = "0x137412C", Offset = "0x137412C", VA = "0x137412C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001A34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextMesh progressInfo;

	[Token(Token = "0x4001A35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static TestingAssets instance;

	[Token(Token = "0x4001A36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<string> loadFiles;

	[Token(Token = "0x4001A37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<string, object> assets;

	[Token(Token = "0x60017D0")]
	[Address(RVA = "0xF06DD4", Offset = "0xF06DD4", VA = "0xF06DD4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60017D1")]
	[Address(RVA = "0xF06F5C", Offset = "0xF06F5C", VA = "0xF06F5C")]
	private void Start()
	{
	}

	[Token(Token = "0x60017D2")]
	[Address(RVA = "0xF07114", Offset = "0xF07114", VA = "0xF07114")]
	private void FillFilesFromDir(string dir, string[] ext)
	{
	}

	[Token(Token = "0x60017D3")]
	[Address(RVA = "0xF074B8", Offset = "0xF074B8", VA = "0xF074B8")]
	private void Log(string txt)
	{
	}

	[Token(Token = "0x60017D4")]
	[Address(RVA = "0xF0744C", Offset = "0xF0744C", VA = "0xF0744C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92AB94", Offset = "0x92AB94")]
	private IEnumerator LoadAssets()
	{
		return null;
	}

	[Token(Token = "0x60017D5")]
	[Address(RVA = "0xF075E8", Offset = "0xF075E8", VA = "0xF075E8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92ABF4", Offset = "0x92ABF4")]
	private IEnumerator LoadAsset(string file)
	{
		return null;
	}

	[Token(Token = "0x60017D6")]
	[Address(RVA = "0xF07660", Offset = "0xF07660", VA = "0xF07660")]
	public static AudioClip Replace(AudioClip clip)
	{
		return null;
	}

	[Token(Token = "0x60017D7")]
	[Address(RVA = "0xF077F0", Offset = "0xF077F0", VA = "0xF077F0")]
	public static void Replace(ref AudioClip clip)
	{
	}

	[Token(Token = "0x60017D8")]
	[Address(RVA = "0xF07818", Offset = "0xF07818", VA = "0xF07818")]
	public static void Replace(AudioClip[] clips)
	{
	}

	[Token(Token = "0x60017D9")]
	[Address(RVA = "0xF078B8", Offset = "0xF078B8", VA = "0xF078B8")]
	public static void Replace(AudioSource src)
	{
	}

	[Token(Token = "0x60017DA")]
	[Address(RVA = "0xF07958", Offset = "0xF07958", VA = "0xF07958")]
	public TestingAssets()
	{
	}
}
[Token(Token = "0x200038A")]
public class TestingHelper : MonoBehaviour
{
	[Token(Token = "0x4001A41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Color onlyPlaneCameraBackground;

	[Token(Token = "0x4001A42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static float mouseLookSpeed;

	[Token(Token = "0x4001A43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static TestingHelper instance;

	[Token(Token = "0x4001A44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float timeScale;

	[Token(Token = "0x4001A45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool showFPS;

	[Token(Token = "0x4001A46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool showFPS_profiler;

	[Token(Token = "0x4001A47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	public bool showFPS_usePause;

	[Token(Token = "0x4001A48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	public bool multiLocalPlayerIsBot;

	[Token(Token = "0x4001A49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool killAllEnemies;

	[Token(Token = "0x4001A4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool killAllEnemyFighters;

	[Token(Token = "0x4001A4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool hitAllPlanesNearDeath;

	[Token(Token = "0x4001A4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	public bool killTasksEnemies;

	[Token(Token = "0x4001A4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool killOneTasksEnemy;

	[Token(Token = "0x4001A4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool killAllNonTaskEnemies;

	[Token(Token = "0x4001A4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
	public bool killLocomotive;

	[Token(Token = "0x4001A50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27")]
	public bool killBridge;

	[Token(Token = "0x4001A51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int hitCurrentPlane;

	[Token(Token = "0x4001A52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int hitOurOtherPlane;

	[Token(Token = "0x4001A53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int hitAllEnemies;

	[Token(Token = "0x4001A54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int forceFinishedMissions;

	[Token(Token = "0x4001A55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool forceNightMission;

	[Token(Token = "0x4001A56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool forceDayMission;

	[Token(Token = "0x4001A57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public eCondition forceCondition;

	[Token(Token = "0x4001A58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public eWeather forceWeather;

	[Token(Token = "0x4001A59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool immortal;

	[Token(Token = "0x4001A5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	public bool superStrong;

	[Token(Token = "0x4001A5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int addGold;

	[Token(Token = "0x4001A5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool upgradeAllPlanes;

	[Token(Token = "0x4001A5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int addMultiExp;

	[Token(Token = "0x4001A5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int addfinishedMissionsCnt;

	[Token(Token = "0x4001A5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool addFinishedMissions;

	[Token(Token = "0x4001A60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int forceMission;

	[Token(Token = "0x4001A61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Mission.eSpecialTask forceMultiSpecialTask;

	[Token(Token = "0x4001A62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool showNetPhotonStats;

	[Token(Token = "0x4001A63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	public bool showNetPlayersStats;

	[Token(Token = "0x4001A64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
	public bool showNetLagSim;

	[Token(Token = "0x4001A65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x67")]
	public bool noMouseSteering;

	[Token(Token = "0x4001A66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool forceAutoAim;

	[Token(Token = "0x4001A67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected static bool wasTesterAccountLoggedIn;

	[Token(Token = "0x4001A68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	protected float lastTimeScale;

	[Token(Token = "0x4001A69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int finishedMissions_cID;

	[Token(Token = "0x4001A6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int screenNum;

	[Token(Token = "0x4001A6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool crosshairHidden;

	[Token(Token = "0x4001A6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	private bool crosshairAimHidden;

	[Token(Token = "0x4001A6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
	private bool objectsIconsHidden;

	[Token(Token = "0x4001A6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int currentPlaneHidden;

	[Token(Token = "0x4001A6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<Renderer> currentPlaneHiddenRenderers;

	[Token(Token = "0x4001A70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Camera[] currentPlaneHiddenCameras;

	[Token(Token = "0x4001A71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Transform currentPlaneHiddenCameraParent;

	[Token(Token = "0x4001A72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool hideHands;

	[Token(Token = "0x4001A73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private GameObject crosshairObject;

	[Token(Token = "0x4001A74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private GameObject crosshairAimObject;

	[Token(Token = "0x4001A75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private string messageResolution;

	[Token(Token = "0x4001A76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float messageResolutionEndTime;

	[Token(Token = "0x4001A77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private GUIStyle msgStyle;

	[Token(Token = "0x4001A78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private GUIStyle msgStyle2;

	[Token(Token = "0x60017E7")]
	[Address(RVA = "0xF07A10", Offset = "0xF07A10", VA = "0xF07A10")]
	public static bool IsTesterAccountLoggedIn()
	{
		return default(bool);
	}

	[Token(Token = "0x60017E8")]
	[Address(RVA = "0xF07FC8", Offset = "0xF07FC8", VA = "0xF07FC8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60017E9")]
	[Address(RVA = "0xF081D0", Offset = "0xF081D0", VA = "0xF081D0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60017EA")]
	[Address(RVA = "0xF082A8", Offset = "0xF082A8", VA = "0xF082A8")]
	private void Start()
	{
	}

	[Token(Token = "0x60017EB")]
	[Address(RVA = "0xF0817C", Offset = "0xF0817C", VA = "0xF0817C")]
	private void ResetAll()
	{
	}

	[Token(Token = "0x60017EC")]
	[Address(RVA = "0xF082AC", Offset = "0xF082AC", VA = "0xF082AC")]
	public string GetTestingDevCmd()
	{
		return null;
	}

	[Token(Token = "0x60017ED")]
	[Address(RVA = "0xF08374", Offset = "0xF08374", VA = "0xF08374")]
	public void SetTestingDevCmd(string devCmd)
	{
	}

	[Token(Token = "0x60017EE")]
	[Address(RVA = "0xF0843C", Offset = "0xF0843C", VA = "0xF0843C")]
	private void Update()
	{
	}

	[Token(Token = "0x60017EF")]
	[Address(RVA = "0xF091D8", Offset = "0xF091D8", VA = "0xF091D8")]
	public static void KillEnemies(bool objectives, bool nonObjectives, bool all, bool onlyFighers = false, int hitHP = 0)
	{
	}

	[Token(Token = "0x60017F0")]
	[Address(RVA = "0xF09ED8", Offset = "0xF09ED8", VA = "0xF09ED8")]
	public static void HitEnemies()
	{
	}

	[Token(Token = "0x60017F1")]
	[Address(RVA = "0xF0956C", Offset = "0xF0956C", VA = "0xF0956C")]
	public static void HitEnemiesNearDeath()
	{
	}

	[Token(Token = "0x60017F2")]
	[Address(RVA = "0xF0A0D4", Offset = "0xF0A0D4", VA = "0xF0A0D4")]
	private void ShowGuiInfo()
	{
	}

	[Token(Token = "0x60017F3")]
	[Address(RVA = "0xF0A264", Offset = "0xF0A264", VA = "0xF0A264")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60017F4")]
	[Address(RVA = "0xF0A268", Offset = "0xF0A268", VA = "0xF0A268")]
	public bool AreObjectsIconsHidden()
	{
		return default(bool);
	}

	[Token(Token = "0x60017F5")]
	[Address(RVA = "0xF0A270", Offset = "0xF0A270", VA = "0xF0A270")]
	public bool AreHandsHidden()
	{
		return default(bool);
	}

	[Token(Token = "0x60017F6")]
	[Address(RVA = "0xF0A278", Offset = "0xF0A278", VA = "0xF0A278")]
	public bool IsCurrentPlaneHidden()
	{
		return default(bool);
	}

	[Token(Token = "0x60017F7")]
	[Address(RVA = "0xF0A288", Offset = "0xF0A288", VA = "0xF0A288")]
	private void HideCrosshair(bool hide)
	{
	}

	[Token(Token = "0x60017F8")]
	[Address(RVA = "0xF0A3A0", Offset = "0xF0A3A0", VA = "0xF0A3A0")]
	private void HideCrosshairAim(bool hide)
	{
	}

	[Token(Token = "0x60017F9")]
	[Address(RVA = "0xF09738", Offset = "0xF09738", VA = "0xF09738")]
	private void StepTestingMode()
	{
	}

	[Token(Token = "0x60017FA")]
	[Address(RVA = "0xF0A4B8", Offset = "0xF0A4B8", VA = "0xF0A4B8")]
	private void TakeScreenshot()
	{
	}

	[Token(Token = "0x60017FB")]
	[Address(RVA = "0xF0A764", Offset = "0xF0A764", VA = "0xF0A764")]
	protected void TestSaves()
	{
	}

	[Token(Token = "0x60017FC")]
	[Address(RVA = "0xF0A768", Offset = "0xF0A768", VA = "0xF0A768")]
	public TestingHelper()
	{
	}
}
[Token(Token = "0x200038B")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x91857C", Offset = "0x91857C")]
public class TorpedoBay : MonoBehaviour
{
	[Token(Token = "0x4001A79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public eMissile rocketType;

	[Token(Token = "0x4001A7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int torpedos;

	[Token(Token = "0x4001A7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform[] slots;

	[Token(Token = "0x4001A7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] slotsBase;

	[Token(Token = "0x4001A7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float delay;

	[Token(Token = "0x4001A7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float time;

	[Token(Token = "0x4001A7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private PlaneBody plane;

	[Token(Token = "0x4001A80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Hull hull;

	[Token(Token = "0x4001A81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject[] dummies;

	[Token(Token = "0x4001A82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Missile lastDropped;

	[Token(Token = "0x4001A83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int maxTorp;

	[Token(Token = "0x60017FE")]
	[Address(RVA = "0xF10F34", Offset = "0xF10F34", VA = "0xF10F34")]
	private void Start()
	{
	}

	[Token(Token = "0x60017FF")]
	[Address(RVA = "0xF11538", Offset = "0xF11538", VA = "0xF11538")]
	public void SetCount(int count)
	{
	}

	[Token(Token = "0x6001800")]
	[Address(RVA = "0xF11544", Offset = "0xF11544", VA = "0xF11544")]
	public void Reload()
	{
	}

	[Token(Token = "0x6001801")]
	[Address(RVA = "0xF11550", Offset = "0xF11550", VA = "0xF11550")]
	public bool NeedReload()
	{
		return default(bool);
	}

	[Token(Token = "0x6001802")]
	[Address(RVA = "0xF110EC", Offset = "0xF110EC", VA = "0xF110EC")]
	public void Fill()
	{
	}

	[Token(Token = "0x6001803")]
	[Address(RVA = "0xF11570", Offset = "0xF11570", VA = "0xF11570")]
	public bool HasTorpedo()
	{
		return default(bool);
	}

	[Token(Token = "0x6001804")]
	[Address(RVA = "0xF11580", Offset = "0xF11580", VA = "0xF11580")]
	public Missile GetLastDroppedMissile()
	{
		return null;
	}

	[Token(Token = "0x6001805")]
	[Address(RVA = "0xF11588", Offset = "0xF11588", VA = "0xF11588")]
	public bool DropTorpedo(bool remote = false, bool remoteWasCorrect = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6001806")]
	[Address(RVA = "0xF11CBC", Offset = "0xF11CBC", VA = "0xF11CBC")]
	public TorpedoBay()
	{
	}
}
[Token(Token = "0x200038C")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x918590", Offset = "0x918590")]
public class TownGenerator : MonoBehaviour
{
	[Token(Token = "0x200038D")]
	public delegate void TownCreated(GameObject town);

	[Token(Token = "0x200038E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9185A4", Offset = "0x9185A4")]
	private sealed class <Generate>d__41 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TownGenerator <>4__this;

		[Token(Token = "0x17000143")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001821")]
			[Address(RVA = "0x1376A60", Offset = "0x1376A60", VA = "0x1376A60", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000144")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001823")]
			[Address(RVA = "0x1376AA8", Offset = "0x1376AA8", VA = "0x1376AA8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600181E")]
		[Address(RVA = "0x1375DCC", Offset = "0x1375DCC", VA = "0x1375DCC")]
		[DebuggerHidden]
		public <Generate>d__41(int <>1__state)
		{
		}

		[Token(Token = "0x600181F")]
		[Address(RVA = "0x1375DF8", Offset = "0x1375DF8", VA = "0x1375DF8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001820")]
		[Address(RVA = "0x1375DFC", Offset = "0x1375DFC", VA = "0x1375DFC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001822")]
		[Address(RVA = "0x1376A68", Offset = "0x1376A68", VA = "0x1376A68", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001A84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static TownCreated onTownCreated;

	[Token(Token = "0x4001A85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool generateOnStart;

	[Token(Token = "0x4001A86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector2 size;

	[Token(Token = "0x4001A87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] prefabHi;

	[Token(Token = "0x4001A88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] prefabLo;

	[Token(Token = "0x4001A89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject[] prefabSide;

	[Token(Token = "0x4001A8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject[] prefabFactory;

	[Token(Token = "0x4001A8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject[] prefabAirfield;

	[Token(Token = "0x4001A8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject[] prefabStorage;

	[Token(Token = "0x4001A8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject[] prefabFuelTank;

	[Token(Token = "0x4001A8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject[] prefabHQ;

	[Token(Token = "0x4001A8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject[] prefabRefinery;

	[Token(Token = "0x4001A90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject[] prefabCoalMine;

	[Token(Token = "0x4001A91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject[] prefabTownAA;

	[Token(Token = "0x4001A92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Transform mainParent;

	[Token(Token = "0x4001A93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private List<Transform> unparentObjects;

	[Token(Token = "0x4001A94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool factory;

	[Token(Token = "0x4001A95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	private bool airfield;

	[Token(Token = "0x4001A96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
	private bool coalMine;

	[Token(Token = "0x4001A97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x93")]
	private bool camp;

	[Token(Token = "0x4001A98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static eParty party;

	[Token(Token = "0x4001A99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private int blockSize;

	[Token(Token = "0x4001A9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool ready;

	[Token(Token = "0x4001A9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private MultiplayerSync.SyncState mSync;

	[Token(Token = "0x4001A9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static List<TerrainHeightPlane> heightPlanes;

	[Token(Token = "0x4001A9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static TerrainHeightPlane globalHeightPlane;

	[Token(Token = "0x4001A9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int[] rotation;

	[Token(Token = "0x4001A9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Transform[] parts;

	[Token(Token = "0x6001807")]
	[Address(RVA = "0xF11CD8", Offset = "0xF11CD8", VA = "0xF11CD8")]
	public static void Register(TerrainHeightPlane heightPlane)
	{
	}

	[Token(Token = "0x6001808")]
	[Address(RVA = "0xF11D64", Offset = "0xF11D64", VA = "0xF11D64")]
	public static void Unregister(TerrainHeightPlane heightPlane)
	{
	}

	[Token(Token = "0x6001809")]
	[Address(RVA = "0xF11DF0", Offset = "0xF11DF0", VA = "0xF11DF0")]
	public void Awake()
	{
	}

	[Token(Token = "0x600180A")]
	[Address(RVA = "0xF12070", Offset = "0xF12070", VA = "0xF12070")]
	public void Start()
	{
	}

	[Token(Token = "0x600180B")]
	[Address(RVA = "0xF12250", Offset = "0xF12250", VA = "0xF12250")]
	public static void Dispose()
	{
	}

	[Token(Token = "0x600180C")]
	[Address(RVA = "0xF122C8", Offset = "0xF122C8", VA = "0xF122C8")]
	public static void UpdateZones()
	{
	}

	[Token(Token = "0x600180D")]
	[Address(RVA = "0xF11E68", Offset = "0xF11E68", VA = "0xF11E68")]
	private void Init()
	{
	}

	[Token(Token = "0x600180E")]
	[Address(RVA = "0xF12410", Offset = "0xF12410", VA = "0xF12410")]
	public void SetSize(Vector2 s)
	{
	}

	[Token(Token = "0x600180F")]
	[Address(RVA = "0xF12528", Offset = "0xF12528", VA = "0xF12528")]
	public void AdjustTerrainToHeight(bool adjust)
	{
	}

	[Token(Token = "0x6001810")]
	[Address(RVA = "0xF125DC", Offset = "0xF125DC", VA = "0xF125DC")]
	public static bool InsideTown(Vector3 pos)
	{
		return default(bool);
	}

	[Token(Token = "0x6001811")]
	[Address(RVA = "0xF12664", Offset = "0xF12664", VA = "0xF12664")]
	public static bool InsideTown(Vector3 pos, float margin)
	{
		return default(bool);
	}

	[Token(Token = "0x6001812")]
	[Address(RVA = "0xF1270C", Offset = "0xF1270C", VA = "0xF1270C")]
	public static bool InsideTown(Vector3 pos, float margin, out TerrainHeightPlane h, out Vector2 offset)
	{
		return default(bool);
	}

	[Token(Token = "0x6001813")]
	[Address(RVA = "0xF12878", Offset = "0xF12878", VA = "0xF12878")]
	private static float EaseSlope(TerrainHeightPlane hp, Vector3 p, float h, Vector2 offset, float margin)
	{
		return default(float);
	}

	[Token(Token = "0x6001814")]
	[Address(RVA = "0xF12970", Offset = "0xF12970", VA = "0xF12970")]
	public static float GetH(Vector3 pos, float h)
	{
		return default(float);
	}

	[Token(Token = "0x6001815")]
	[Address(RVA = "0xF121E4", Offset = "0xF121E4", VA = "0xF121E4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92ACF4", Offset = "0x92ACF4")]
	public IEnumerator Generate()
	{
		return null;
	}

	[Token(Token = "0x6001816")]
	[Address(RVA = "0xF12AAC", Offset = "0xF12AAC", VA = "0xF12AAC")]
	private void GenerateTown(eqType tt, eParty tp)
	{
	}

	[Token(Token = "0x6001817")]
	[Address(RVA = "0xF13308", Offset = "0xF13308", VA = "0xF13308")]
	private void MarkTaskUnits(GameObject go, eqType type)
	{
	}

	[Token(Token = "0x6001818")]
	[Address(RVA = "0xF1330C", Offset = "0xF1330C", VA = "0xF1330C")]
	public TownGenerator()
	{
	}
}
[Token(Token = "0x200038F")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x9185B4", Offset = "0x9185B4")]
public class TownLoader : MonoBehaviour
{
	[Token(Token = "0x2000390")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9185C8", Offset = "0x9185C8")]
	private sealed class <StartYielded>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TownLoader <>4__this;

		[Token(Token = "0x4001AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TownGenerator <tg>5__2;

		[Token(Token = "0x17000145")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600182B")]
			[Address(RVA = "0x1376F04", Offset = "0x1376F04", VA = "0x1376F04", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000146")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600182D")]
			[Address(RVA = "0x1376F4C", Offset = "0x1376F4C", VA = "0x1376F4C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001828")]
		[Address(RVA = "0x1376AF0", Offset = "0x1376AF0", VA = "0x1376AF0")]
		[DebuggerHidden]
		public <StartYielded>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6001829")]
		[Address(RVA = "0x1376B1C", Offset = "0x1376B1C", VA = "0x1376B1C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600182A")]
		[Address(RVA = "0x1376B20", Offset = "0x1376B20", VA = "0x1376B20", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600182C")]
		[Address(RVA = "0x1376F0C", Offset = "0x1376F0C", VA = "0x1376F0C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001AA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public int multiLocationObjectId;

	[Token(Token = "0x4001AA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector2 size;

	[Token(Token = "0x4001AA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject prefab;

	[Token(Token = "0x4001AA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool adjustTerrainToHeight;

	[Token(Token = "0x4001AA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MultiplayerSync.SyncState mSync;

	[Token(Token = "0x6001824")]
	[Address(RVA = "0xF1342C", Offset = "0xF1342C", VA = "0xF1342C")]
	public void InitMultiplayerSync()
	{
	}

	[Token(Token = "0x6001825")]
	[Address(RVA = "0xF134A0", Offset = "0xF134A0", VA = "0xF134A0")]
	public void Start()
	{
	}

	[Token(Token = "0x6001826")]
	[Address(RVA = "0xF1357C", Offset = "0xF1357C", VA = "0xF1357C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92ADA4", Offset = "0x92ADA4")]
	public IEnumerator StartYielded()
	{
		return null;
	}

	[Token(Token = "0x6001827")]
	[Address(RVA = "0xF135E8", Offset = "0xF135E8", VA = "0xF135E8")]
	public TownLoader()
	{
	}
}
[Token(Token = "0x2000391")]
public class TownSiren : MonoBehaviour
{
	[Token(Token = "0x4001AAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource audios;

	[Token(Token = "0x600182E")]
	[Address(RVA = "0xF135F8", Offset = "0xF135F8", VA = "0xF135F8")]
	private void Start()
	{
	}

	[Token(Token = "0x600182F")]
	[Address(RVA = "0xF136EC", Offset = "0xF136EC", VA = "0xF136EC")]
	private void Update()
	{
	}

	[Token(Token = "0x6001830")]
	[Address(RVA = "0xF138C0", Offset = "0xF138C0", VA = "0xF138C0")]
	public TownSiren()
	{
	}
}
[Token(Token = "0x2000392")]
public class TownTree : MonoBehaviour
{
	[Token(Token = "0x6001831")]
	[Address(RVA = "0xF138C8", Offset = "0xF138C8", VA = "0xF138C8")]
	public void Start()
	{
	}

	[Token(Token = "0x6001832")]
	[Address(RVA = "0xF139B8", Offset = "0xF139B8", VA = "0xF139B8")]
	public TownTree()
	{
	}
}
[Token(Token = "0x2000393")]
public class TownVehicle : MonoBehaviour
{
	[Token(Token = "0x2000394")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9185D8", Offset = "0x9185D8")]
	private sealed class <StartYielded>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TownVehicle <>4__this;

		[Token(Token = "0x17000147")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600183D")]
			[Address(RVA = "0x1377764", Offset = "0x1377764", VA = "0x1377764", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000148")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600183F")]
			[Address(RVA = "0x13777AC", Offset = "0x13777AC", VA = "0x13777AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600183A")]
		[Address(RVA = "0x1376F54", Offset = "0x1376F54", VA = "0x1376F54")]
		[DebuggerHidden]
		public <StartYielded>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x600183B")]
		[Address(RVA = "0x1376F80", Offset = "0x1376F80", VA = "0x1376F80", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600183C")]
		[Address(RVA = "0x1376F84", Offset = "0x1376F84", VA = "0x1376F84", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600183E")]
		[Address(RVA = "0x137776C", Offset = "0x137776C", VA = "0x137776C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001AAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public eqType type;

	[Token(Token = "0x4001AAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Track track;

	[Token(Token = "0x4001AAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool addFactory;

	[Token(Token = "0x4001AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool spawnAtNightOnly;

	[Token(Token = "0x4001AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MultiplayerSync.SyncState mSync;

	[Token(Token = "0x6001833")]
	[Address(RVA = "0xF139C0", Offset = "0xF139C0", VA = "0xF139C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001834")]
	[Address(RVA = "0xF13A34", Offset = "0xF13A34", VA = "0xF13A34")]
	public void Start()
	{
	}

	[Token(Token = "0x6001835")]
	[Address(RVA = "0xF13B30", Offset = "0xF13B30", VA = "0xF13B30")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92AE54", Offset = "0x92AE54")]
	public IEnumerator StartYielded()
	{
		return null;
	}

	[Token(Token = "0x6001836")]
	[Address(RVA = "0xF13B9C", Offset = "0xF13B9C", VA = "0xF13B9C")]
	private void PositionPlane(Transform t, PlaneStand planeStand)
	{
	}

	[Token(Token = "0x6001837")]
	[Address(RVA = "0xF13D18", Offset = "0xF13D18", VA = "0xF13D18")]
	private bool CreateAsTaskUnit()
	{
		return default(bool);
	}

	[Token(Token = "0x6001838")]
	[Address(RVA = "0xF13D34", Offset = "0xF13D34", VA = "0xF13D34")]
	private void TaskUnitDestroyed(Hull h)
	{
	}

	[Token(Token = "0x6001839")]
	[Address(RVA = "0xF13DA0", Offset = "0xF13DA0", VA = "0xF13DA0")]
	public TownVehicle()
	{
	}
}
[Token(Token = "0x2000395")]
public class Track : MonoBehaviour
{
	[Token(Token = "0x4001AB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] point;

	[Token(Token = "0x6001840")]
	[Address(RVA = "0xF13DA8", Offset = "0xF13DA8", VA = "0xF13DA8")]
	public void Start()
	{
	}

	[Token(Token = "0x6001841")]
	[Address(RVA = "0xF13E24", Offset = "0xF13E24", VA = "0xF13E24")]
	public Transform FindNearestNode(Transform t0)
	{
		return null;
	}

	[Token(Token = "0x6001842")]
	[Address(RVA = "0xF13F48", Offset = "0xF13F48", VA = "0xF13F48")]
	public Transform GetNextNode(Transform t0)
	{
		return null;
	}

	[Token(Token = "0x6001843")]
	[Address(RVA = "0xF14054", Offset = "0xF14054", VA = "0xF14054")]
	public Track()
	{
	}
}
[Token(Token = "0x2000396")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x9185E8", Offset = "0x9185E8")]
public class TrackBoat : MonoBehaviour
{
	[Token(Token = "0x2000397")]
	public struct Node
	{
		[Token(Token = "0x4001ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 position;

		[Token(Token = "0x4001ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int index;

		[Token(Token = "0x4001ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool valid;

		[Token(Token = "0x600184C")]
		[Address(RVA = "0x13777B4", Offset = "0x13777B4", VA = "0x13777B4")]
		public Node(int index, Vector3 pos)
		{
		}
	}

	[Token(Token = "0x4001AB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform commonSpawnpointEnemy;

	[Token(Token = "0x4001AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform commonSpawnpointFriend;

	[Token(Token = "0x4001AB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool ourShip;

	[Token(Token = "0x4001AB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool enemyShip;

	[Token(Token = "0x4001ABA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform[] point;

	[Token(Token = "0x4001ABB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91BBFC", Offset = "0x91BBFC")]
	private bool <IsGeneric>k__BackingField;

	[Token(Token = "0x4001ABC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Node[] nodes;

	[Token(Token = "0x17000149")]
	public bool IsGeneric
	{
		[Token(Token = "0x6001844")]
		[Address(RVA = "0xF14414", Offset = "0xF14414", VA = "0xF14414")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92AF04", Offset = "0x92AF04")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001845")]
		[Address(RVA = "0xF1441C", Offset = "0xF1441C", VA = "0xF1441C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92AF14", Offset = "0x92AF14")]
		set
		{
		}
	}

	[Token(Token = "0x6001846")]
	[Address(RVA = "0xF14428", Offset = "0xF14428", VA = "0xF14428")]
	public void Start()
	{
	}

	[Token(Token = "0x6001847")]
	[Address(RVA = "0xF1442C", Offset = "0xF1442C", VA = "0xF1442C")]
	public void Init()
	{
	}

	[Token(Token = "0x6001848")]
	[Address(RVA = "0xF145E8", Offset = "0xF145E8", VA = "0xF145E8")]
	public Node FindNearestNode(Transform t0)
	{
		return default(Node);
	}

	[Token(Token = "0x6001849")]
	[Address(RVA = "0xF14728", Offset = "0xF14728", VA = "0xF14728")]
	public Node GetNextNode(Node current)
	{
		return default(Node);
	}

	[Token(Token = "0x600184A")]
	[Address(RVA = "0xF14788", Offset = "0xF14788", VA = "0xF14788")]
	public Node GetNode(int idx)
	{
		return default(Node);
	}

	[Token(Token = "0x600184B")]
	[Address(RVA = "0xF147D4", Offset = "0xF147D4", VA = "0xF147D4")]
	public TrackBoat()
	{
	}
}
[Token(Token = "0x2000398")]
public class TrackVehicle : MonoBehaviour
{
	[Token(Token = "0x4001AC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Track track;

	[Token(Token = "0x4001AC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform node;

	[Token(Token = "0x4001AC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float speed;

	[Token(Token = "0x4001AC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float turnSpeed;

	[Token(Token = "0x4001AC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RoadVehicle rv;

	[Token(Token = "0x4001AC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool hasRoadVehicleWheels;

	[Token(Token = "0x4001AC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector2 bumpsDelay;

	[Token(Token = "0x4001AC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Quaternion qBumpsVertTarget;

	[Token(Token = "0x4001AC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Quaternion qBumpsHorzTarget;

	[Token(Token = "0x4001AC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Quaternion qBumpsVert;

	[Token(Token = "0x4001ACA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Quaternion qBumpsHorz;

	[Token(Token = "0x600184D")]
	[Address(RVA = "0xF147DC", Offset = "0xF147DC", VA = "0xF147DC")]
	public void SetRoadVehicle(RoadVehicle roadVehicle)
	{
	}

	[Token(Token = "0x600184E")]
	[Address(RVA = "0xF14894", Offset = "0xF14894", VA = "0xF14894")]
	public void Start()
	{
	}

	[Token(Token = "0x600184F")]
	[Address(RVA = "0xF14AB8", Offset = "0xF14AB8", VA = "0xF14AB8")]
	public void Update()
	{
	}

	[Token(Token = "0x6001850")]
	[Address(RVA = "0xF14F00", Offset = "0xF14F00", VA = "0xF14F00")]
	private void SimulateUnevenRoad()
	{
	}

	[Token(Token = "0x6001851")]
	[Address(RVA = "0xF150E0", Offset = "0xF150E0", VA = "0xF150E0")]
	public TrackVehicle()
	{
	}
}
[Token(Token = "0x2000399")]
public class TrackVehicleBoat : MonoBehaviour
{
	[Token(Token = "0x4001ACB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float moveSpeed;

	[Token(Token = "0x4001ACC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TrackBoat track;

	[Token(Token = "0x4001ACD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float turnSpeed;

	[Token(Token = "0x4001ACE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 offset;

	[Token(Token = "0x4001ACF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private TrackBoat.Node node;

	[Token(Token = "0x6001852")]
	[Address(RVA = "0xF15150", Offset = "0xF15150", VA = "0xF15150")]
	public void Start()
	{
	}

	[Token(Token = "0x6001853")]
	[Address(RVA = "0xF153FC", Offset = "0xF153FC", VA = "0xF153FC")]
	public float GetSpeed()
	{
		return default(float);
	}

	[Token(Token = "0x6001854")]
	[Address(RVA = "0xF15404", Offset = "0xF15404", VA = "0xF15404")]
	public void Update()
	{
	}

	[Token(Token = "0x6001855")]
	[Address(RVA = "0xF1581C", Offset = "0xF1581C", VA = "0xF1581C")]
	public TrackVehicleBoat()
	{
	}
}
[Token(Token = "0x200039A")]
public class TrailAnimator : MonoBehaviour
{
	[Token(Token = "0x4001AD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float offset;

	[Token(Token = "0x6001856")]
	[Address(RVA = "0xF15834", Offset = "0xF15834", VA = "0xF15834")]
	private void Start()
	{
	}

	[Token(Token = "0x6001857")]
	[Address(RVA = "0xF1583C", Offset = "0xF1583C", VA = "0xF1583C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001858")]
	[Address(RVA = "0xF158B8", Offset = "0xF158B8", VA = "0xF158B8")]
	public TrailAnimator()
	{
	}
}
[Token(Token = "0x200039B")]
public static class TrainRendererExtensions
{
	[Token(Token = "0x200039C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91860C", Offset = "0x91860C")]
	private sealed class <ResetTrail>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TrailRenderer trail;

		[Token(Token = "0x4001AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <trailTime>5__2;

		[Token(Token = "0x1700014A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600185E")]
			[Address(RVA = "0x1377F80", Offset = "0x1377F80", VA = "0x1377F80", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001860")]
			[Address(RVA = "0x1377FC8", Offset = "0x1377FC8", VA = "0x1377FC8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600185B")]
		[Address(RVA = "0x1377E80", Offset = "0x1377E80", VA = "0x1377E80")]
		[DebuggerHidden]
		public <ResetTrail>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x600185C")]
		[Address(RVA = "0x1377EAC", Offset = "0x1377EAC", VA = "0x1377EAC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600185D")]
		[Address(RVA = "0x1377EB0", Offset = "0x1377EB0", VA = "0x1377EB0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600185F")]
		[Address(RVA = "0x1377F88", Offset = "0x1377F88", VA = "0x1377F88", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6001859")]
	[Address(RVA = "0xF1627C", Offset = "0xF1627C", VA = "0xF1627C")]
	public static void Reset(this TrailRenderer trail, MonoBehaviour instance)
	{
	}

	[Token(Token = "0x600185A")]
	[Address(RVA = "0xF162B0", Offset = "0xF162B0", VA = "0xF162B0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92AF34", Offset = "0x92AF34")]
	private static IEnumerator ResetTrail(TrailRenderer trail)
	{
		return null;
	}
}
[Token(Token = "0x200039D")]
public class Train : RoadVehicle
{
	[Token(Token = "0x200039E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91861C", Offset = "0x91861C")]
	private sealed class <StartYielded>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Train <>4__this;

		[Token(Token = "0x1700014C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001873")]
			[Address(RVA = "0x1377E30", Offset = "0x1377E30", VA = "0x1377E30", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001875")]
			[Address(RVA = "0x1377E78", Offset = "0x1377E78", VA = "0x1377E78", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001870")]
		[Address(RVA = "0x13777CC", Offset = "0x13777CC", VA = "0x13777CC")]
		[DebuggerHidden]
		public <StartYielded>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6001871")]
		[Address(RVA = "0x13777F8", Offset = "0x13777F8", VA = "0x13777F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001872")]
		[Address(RVA = "0x13777FC", Offset = "0x13777FC", VA = "0x13777FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001874")]
		[Address(RVA = "0x1377E38", Offset = "0x1377E38", VA = "0x1377E38", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001AD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public bool showOnRadar;

	[Token(Token = "0x4001AD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
	public bool locomotive;

	[Token(Token = "0x4001AD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Train wagon;

	[Token(Token = "0x4001AD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float length;

	[Token(Token = "0x4001AD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private TrainSetup setup;

	[Token(Token = "0x4001ADA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float initialBreakSpeed;

	[Token(Token = "0x6001861")]
	[Address(RVA = "0xF158C0", Offset = "0xF158C0", VA = "0xF158C0")]
	public void Register(TrainSetup trainSetup)
	{
	}

	[Token(Token = "0x6001862")]
	[Address(RVA = "0xF158C8", Offset = "0xF158C8", VA = "0xF158C8", Slot = "4")]
	protected override void Initialize()
	{
	}

	[Token(Token = "0x6001863")]
	[Address(RVA = "0xF158F4", Offset = "0xF158F4", VA = "0xF158F4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92AFE4", Offset = "0x92AFE4")]
	private IEnumerator StartYielded()
	{
		return null;
	}

	[Token(Token = "0x6001864")]
	[Address(RVA = "0xF15960", Offset = "0xF15960", VA = "0xF15960")]
	public void SetWagon(GameObject go)
	{
	}

	[Token(Token = "0x6001865")]
	[Address(RVA = "0xF159C8", Offset = "0xF159C8", VA = "0xF159C8")]
	public void SetPosition(Vector3 p, int i, Quaternion r, eRVstate s, float nextDist)
	{
	}

	[Token(Token = "0x6001866")]
	[Address(RVA = "0xF15B4C", Offset = "0xF15B4C", VA = "0xF15B4C", Slot = "5")]
	public override Vector3 FindNextPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001867")]
	[Address(RVA = "0xF15BD8", Offset = "0xF15BD8", VA = "0xF15BD8")]
	private Vector3 FindPreviousPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001868")]
	[Address(RVA = "0xF15C64", Offset = "0xF15C64", VA = "0xF15C64", Slot = "6")]
	public override Vector3 FindPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001869")]
	[Address(RVA = "0xF15CE8", Offset = "0xF15CE8", VA = "0xF15CE8", Slot = "8")]
	public override void MoveIndex()
	{
	}

	[Token(Token = "0x600186A")]
	[Address(RVA = "0xF15D50", Offset = "0xF15D50", VA = "0xF15D50", Slot = "7")]
	public override float DistToNextPoint()
	{
		return default(float);
	}

	[Token(Token = "0x600186B")]
	[Address(RVA = "0xF15D70", Offset = "0xF15D70", VA = "0xF15D70")]
	public void MoveWagon(float d, float speed)
	{
	}

	[Token(Token = "0x600186C")]
	[Address(RVA = "0xF15ED8", Offset = "0xF15ED8", VA = "0xF15ED8", Slot = "9")]
	protected override void UpdateMove()
	{
	}

	[Token(Token = "0x600186D")]
	[Address(RVA = "0xF15FA0", Offset = "0xF15FA0", VA = "0xF15FA0", Slot = "10")]
	protected override void SetupFalling()
	{
	}

	[Token(Token = "0x600186E")]
	[Address(RVA = "0xF161D0", Offset = "0xF161D0", VA = "0xF161D0")]
	public void UpdateSpeed()
	{
	}

	[Token(Token = "0x600186F")]
	[Address(RVA = "0xF16210", Offset = "0xF16210", VA = "0xF16210")]
	public Train()
	{
	}
}
[Token(Token = "0x200039F")]
public class TrainSetup : MonoBehaviour, IHull
{
	[Token(Token = "0x20003A0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91862C", Offset = "0x91862C")]
	private sealed class <Start>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TrainSetup <>4__this;

		[Token(Token = "0x1700014F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001889")]
			[Address(RVA = "0x1378478", Offset = "0x1378478", VA = "0x1378478", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000150")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600188B")]
			[Address(RVA = "0x13784C0", Offset = "0x13784C0", VA = "0x13784C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001886")]
		[Address(RVA = "0x1377FD0", Offset = "0x1377FD0", VA = "0x1377FD0")]
		[DebuggerHidden]
		public <Start>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6001887")]
		[Address(RVA = "0x1377FFC", Offset = "0x1377FFC", VA = "0x1377FFC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001888")]
		[Address(RVA = "0x1378000", Offset = "0x1378000", VA = "0x1378000", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600188A")]
		[Address(RVA = "0x1378480", Offset = "0x1378480", VA = "0x1378480", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001ADE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91BC0C", Offset = "0x91BC0C")]
	private bool <IsTaskUnit>k__BackingField;

	[Token(Token = "0x4001ADF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] wagons;

	[Token(Token = "0x4001AE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject[] spawnedWagons;

	[Token(Token = "0x4001AE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Train[] cars;

	[Token(Token = "0x4001AE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private eParty party;

	[Token(Token = "0x4001AE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool check;

	[Token(Token = "0x4001AE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int maxCars;

	[Token(Token = "0x4001AE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int currentCars;

	[Token(Token = "0x4001AE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private MultiplayerSync.SyncState mSync;

	[Token(Token = "0x4001AE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool isObjective;

	[Token(Token = "0x1700014E")]
	public bool IsTaskUnit
	{
		[Token(Token = "0x6001876")]
		[Address(RVA = "0xF1631C", Offset = "0xF1631C", VA = "0xF1631C", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92B094", Offset = "0x92B094")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001877")]
		[Address(RVA = "0xF16324", Offset = "0xF16324", VA = "0xF16324", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92B0A4", Offset = "0x92B0A4")]
		set
		{
		}
	}

	[Token(Token = "0x6001878")]
	[Address(RVA = "0xF160D4", Offset = "0xF160D4", VA = "0xF160D4")]
	public void CartDestroyed(Hull e)
	{
	}

	[Token(Token = "0x6001879")]
	[Address(RVA = "0xF16330", Offset = "0xF16330", VA = "0xF16330")]
	public void Awake()
	{
	}

	[Token(Token = "0x600187A")]
	[Address(RVA = "0xF163A4", Offset = "0xF163A4", VA = "0xF163A4", Slot = "8")]
	public void SetParty(eParty p)
	{
	}

	[Token(Token = "0x600187B")]
	[Address(RVA = "0xF163AC", Offset = "0xF163AC", VA = "0xF163AC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92B0B4", Offset = "0x92B0B4")]
	public IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600187C")]
	[Address(RVA = "0xF16418", Offset = "0xF16418", VA = "0xF16418")]
	public int GetMaxCars()
	{
		return default(int);
	}

	[Token(Token = "0x600187D")]
	[Address(RVA = "0xF16420", Offset = "0xF16420", VA = "0xF16420")]
	public int GetCurrentCars()
	{
		return default(int);
	}

	[Token(Token = "0x600187E")]
	[Address(RVA = "0xF16428", Offset = "0xF16428", VA = "0xF16428", Slot = "6")]
	public void SetObjective(bool b)
	{
	}

	[Token(Token = "0x600187F")]
	[Address(RVA = "0xF16434", Offset = "0xF16434", VA = "0xF16434", Slot = "7")]
	public void SetExtraChallange(bool b)
	{
	}

	[Token(Token = "0x6001880")]
	[Address(RVA = "0xF16438", Offset = "0xF16438", VA = "0xF16438")]
	public void Update()
	{
	}

	[Token(Token = "0x6001881")]
	[Address(RVA = "0xF165C8", Offset = "0xF165C8", VA = "0xF165C8", Slot = "10")]
	public void RegisterDestroyed(Hull.DestroyedCallback cb)
	{
	}

	[Token(Token = "0x6001882")]
	[Address(RVA = "0xF1663C", Offset = "0xF1663C", VA = "0xF1663C", Slot = "11")]
	public void UnregisterDestroyed(Hull.DestroyedCallback cb)
	{
	}

	[Token(Token = "0x6001883")]
	[Address(RVA = "0xF166B0", Offset = "0xF166B0", VA = "0xF166B0", Slot = "12")]
	public bool IsAlive()
	{
		return default(bool);
	}

	[Token(Token = "0x6001884")]
	[Address(RVA = "0xF166C0", Offset = "0xF166C0", VA = "0xF166C0", Slot = "9")]
	public void SetRadarType(eRadarType radarType)
	{
	}

	[Token(Token = "0x6001885")]
	[Address(RVA = "0xF166C4", Offset = "0xF166C4", VA = "0xF166C4")]
	public TrainSetup()
	{
	}
}
[Token(Token = "0x20003A1")]
public class TransformAnimation : MonoBehaviour
{
	[Token(Token = "0x4001AEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float positionSpeedX;

	[Token(Token = "0x4001AEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float positionSpeedY;

	[Token(Token = "0x4001AED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float positionSpeedZ;

	[Token(Token = "0x4001AEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float positionDeltaX;

	[Token(Token = "0x4001AEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float positionDeltaY;

	[Token(Token = "0x4001AF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float positionDeltaZ;

	[Token(Token = "0x4001AF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float rotationSpeedX;

	[Token(Token = "0x4001AF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float rotationSpeedY;

	[Token(Token = "0x4001AF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float rotationSpeedZ;

	[Token(Token = "0x4001AF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float deltaTimeSum;

	[Token(Token = "0x4001AF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 prevOffset;

	[Token(Token = "0x600188C")]
	[Address(RVA = "0xF166D4", Offset = "0xF166D4", VA = "0xF166D4")]
	public void Update()
	{
	}

	[Token(Token = "0x600188D")]
	[Address(RVA = "0xF16884", Offset = "0xF16884", VA = "0xF16884")]
	public TransformAnimation()
	{
	}
}
[Token(Token = "0x20003A2")]
public class FadeOffSound : MonoBehaviour
{
	[Token(Token = "0x4001AF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static FadeOffSound instance;

	[Token(Token = "0x4001AF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource audioSource;

	[Token(Token = "0x4001AF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float deltaVolume;

	[Token(Token = "0x600188E")]
	[Address(RVA = "0x1306AD0", Offset = "0x1306AD0", VA = "0x1306AD0")]
	public static void FadeOff(AudioSource source, float time)
	{
	}

	[Token(Token = "0x600188F")]
	[Address(RVA = "0x1306BD8", Offset = "0x1306BD8", VA = "0x1306BD8")]
	private static void CreateInstance()
	{
	}

	[Token(Token = "0x6001890")]
	[Address(RVA = "0x1306C74", Offset = "0x1306C74", VA = "0x1306C74")]
	private void Update()
	{
	}

	[Token(Token = "0x6001891")]
	[Address(RVA = "0x1306D8C", Offset = "0x1306D8C", VA = "0x1306D8C")]
	public FadeOffSound()
	{
	}
}
[Serializable]
[Token(Token = "0x20003A3")]
public class LocalizationInfo
{
	[Token(Token = "0x4001AF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string fileName;

	[Token(Token = "0x4001AFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string languageCode;

	[Token(Token = "0x4001AFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string version;

	[Token(Token = "0x4001AFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string name;

	[Token(Token = "0x4001AFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string changeLanguageQuestion;

	[Token(Token = "0x6001892")]
	[Address(RVA = "0x113EC0C", Offset = "0x113EC0C", VA = "0x113EC0C")]
	public LocalizationInfo()
	{
	}
}
[Serializable]
[Token(Token = "0x20003A4")]
public class TwoStringArrays
{
	[Token(Token = "0x4001AFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string[] array1;

	[Token(Token = "0x4001AFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string[] array2;

	[Token(Token = "0x6001893")]
	[Address(RVA = "0xECFC00", Offset = "0xECFC00", VA = "0xECFC00")]
	public TwoStringArrays(string[] arr1, string[] arr2)
	{
	}
}
[Token(Token = "0x20003A5")]
public class GameConfig : MonoBehaviour
{
	[Token(Token = "0x20003A6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91863C", Offset = "0x91863C")]
	private sealed class <DownloadConfigFromServer>d__60 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameConfig <>4__this;

		[Token(Token = "0x4001B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool <newLanguage>5__2;

		[Token(Token = "0x4001B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WWWwrapper <www>5__3;

		[Token(Token = "0x17000151")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60018C2")]
			[Address(RVA = "0xBEA47C", Offset = "0xBEA47C", VA = "0xBEA47C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000152")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60018C4")]
			[Address(RVA = "0xBEA4C4", Offset = "0xBEA4C4", VA = "0xBEA4C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018BF")]
		[Address(RVA = "0xBE9BDC", Offset = "0xBE9BDC", VA = "0xBE9BDC")]
		[DebuggerHidden]
		public <DownloadConfigFromServer>d__60(int <>1__state)
		{
		}

		[Token(Token = "0x60018C0")]
		[Address(RVA = "0xBE9C08", Offset = "0xBE9C08", VA = "0xBE9C08", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60018C1")]
		[Address(RVA = "0xBE9C0C", Offset = "0xBE9C0C", VA = "0xBE9C0C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60018C3")]
		[Address(RVA = "0xBEA484", Offset = "0xBEA484", VA = "0xBEA484", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003A7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91864C", Offset = "0x91864C")]
	private sealed class <DownloadLanguageFromServer>d__63 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string locCode;

		[Token(Token = "0x4001B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameConfig <>4__this;

		[Token(Token = "0x4001B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string locVer;

		[Token(Token = "0x4001B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool setLanguageAfterDownload;

		[Token(Token = "0x4001B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool setLanguageInPrefs;

		[Token(Token = "0x4001B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string <locName>5__2;

		[Token(Token = "0x4001B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private WWWwrapper <www>5__3;

		[Token(Token = "0x17000153")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60018C8")]
			[Address(RVA = "0xBEA98C", Offset = "0xBEA98C", VA = "0xBEA98C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000154")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60018CA")]
			[Address(RVA = "0xBEA9D4", Offset = "0xBEA9D4", VA = "0xBEA9D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018C5")]
		[Address(RVA = "0xBEA4CC", Offset = "0xBEA4CC", VA = "0xBEA4CC")]
		[DebuggerHidden]
		public <DownloadLanguageFromServer>d__63(int <>1__state)
		{
		}

		[Token(Token = "0x60018C6")]
		[Address(RVA = "0xBEA4F8", Offset = "0xBEA4F8", VA = "0xBEA4F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60018C7")]
		[Address(RVA = "0xBEA4FC", Offset = "0xBEA4FC", VA = "0xBEA4FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60018C9")]
		[Address(RVA = "0xBEA994", Offset = "0xBEA994", VA = "0xBEA994", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001B00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string serverUrl_Oculus;

	[Token(Token = "0x4001B01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string serverUrl_Steam;

	[Token(Token = "0x4001B02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string serverUrl_Vive;

	[Token(Token = "0x4001B03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string serverUrl_Pico;

	[Token(Token = "0x4001B04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string serverUrl_Pico_china;

	[Token(Token = "0x4001B05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string serverUrl_Other;

	[Token(Token = "0x4001B06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string languageLocalizationDir;

	[Token(Token = "0x4001B07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string languageFilePrefix;

	[Token(Token = "0x4001B08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string languagePlayerProfileKey;

	[Token(Token = "0x4001B09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected static string applicationVersion;

	[Token(Token = "0x4001B0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected static string multiplayerVersion;

	[Token(Token = "0x4001B0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected static string newerApplicationVersionAvailable;

	[Token(Token = "0x4001B0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected static List<Action> configUpdatedEvents;

	[Token(Token = "0x4001B0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected static bool newConfigValuesDownloaded;

	[Token(Token = "0x4001B0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static GameConfig instance;

	[Token(Token = "0x4001B0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static string configFile;

	[Token(Token = "0x4001B10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static string keyGameID;

	[Token(Token = "0x4001B11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static string keyConfigVersion;

	[Token(Token = "0x4001B12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static string keyApplicationVersion;

	[Token(Token = "0x4001B13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static string keyMultiplayerVersion;

	[Token(Token = "0x4001B14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected static bool isInitialized;

	[Token(Token = "0x4001B15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	protected static bool isDownloadAttemptFinished;

	[Token(Token = "0x4001B16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
	protected static bool isDownloadConnectionSucceeded;

	[Token(Token = "0x4001B17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected static List<KeyValuePair<string, string>> resourcesConfigValues;

	[Token(Token = "0x4001B18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected static List<KeyValuePair<string, string>> configValues;

	[Token(Token = "0x4001B19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected static string newLanguageInfoCode;

	[Token(Token = "0x4001B1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected static string newLanguageInfoVersion;

	[Token(Token = "0x4001B1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected static string newLanguageInfoMessage;

	[Token(Token = "0x4001B1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected static string applyNewLanguageInfoCode;

	[Token(Token = "0x6001894")]
	[Address(RVA = "0x1465D18", Offset = "0x1465D18", VA = "0x1465D18")]
	public static int GetVersionNumber(string ver)
	{
		return default(int);
	}

	[Token(Token = "0x6001895")]
	[Address(RVA = "0x1465EBC", Offset = "0x1465EBC", VA = "0x1465EBC")]
	public static short GetVersionNumberShort(string ver)
	{
		return default(short);
	}

	[Token(Token = "0x6001896")]
	[Address(RVA = "0x14660A8", Offset = "0x14660A8", VA = "0x14660A8")]
	public static bool IsConfigDownloadAttemptFinished()
	{
		return default(bool);
	}

	[Token(Token = "0x6001897")]
	[Address(RVA = "0x146610C", Offset = "0x146610C", VA = "0x146610C")]
	public static bool IsCurrentConfigDownloadConnectionSucceeded()
	{
		return default(bool);
	}

	[Token(Token = "0x6001898")]
	[Address(RVA = "0x1466170", Offset = "0x1466170", VA = "0x1466170")]
	public static string GetApplicationVersion()
	{
		return null;
	}

	[Token(Token = "0x6001899")]
	[Address(RVA = "0x1466834", Offset = "0x1466834", VA = "0x1466834")]
	public static string GetMultiplayerVersion()
	{
		return null;
	}

	[Token(Token = "0x600189A")]
	[Address(RVA = "0x146689C", Offset = "0x146689C", VA = "0x146689C")]
	public static string GetNewerApplicationVersionAvailable()
	{
		return null;
	}

	[Token(Token = "0x600189B")]
	[Address(RVA = "0x1466900", Offset = "0x1466900", VA = "0x1466900")]
	public static void RegisterConfigValuesDownloadedCallback(Action callback)
	{
	}

	[Token(Token = "0x600189C")]
	[Address(RVA = "0x146698C", Offset = "0x146698C", VA = "0x146698C")]
	public static void UnregisterConfigValuesDownloadedCallback(Action callback)
	{
	}

	[Token(Token = "0x600189D")]
	[Address(RVA = "0x1466ADC", Offset = "0x1466ADC", VA = "0x1466ADC")]
	public static bool HaveConfigValue(string key)
	{
		return default(bool);
	}

	[Token(Token = "0x600189E")]
	[Address(RVA = "0x1466C18", Offset = "0x1466C18", VA = "0x1466C18")]
	public static string GetConfigValue(string key)
	{
		return null;
	}

	[Token(Token = "0x600189F")]
	[Address(RVA = "0x1466D94", Offset = "0x1466D94", VA = "0x1466D94")]
	public static int GetConfigValueAsInt(string key)
	{
		return default(int);
	}

	[Token(Token = "0x60018A0")]
	[Address(RVA = "0x1466EBC", Offset = "0x1466EBC", VA = "0x1466EBC")]
	public static bool GetConfigValueAsBool(string key)
	{
		return default(bool);
	}

	[Token(Token = "0x60018A1")]
	[Address(RVA = "0x1466F28", Offset = "0x1466F28", VA = "0x1466F28")]
	public static float GetConfigValueAsFloat(string key)
	{
		return default(float);
	}

	[Token(Token = "0x60018A2")]
	[Address(RVA = "0x1467090", Offset = "0x1467090", VA = "0x1467090")]
	public static string[] GetConfigValues(string key)
	{
		return null;
	}

	[Token(Token = "0x60018A3")]
	[Address(RVA = "0x14672A4", Offset = "0x14672A4", VA = "0x14672A4")]
	public static TwoStringArrays GetConfigKeysAndValuesStartingWith(string key)
	{
		return null;
	}

	[Token(Token = "0x60018A4")]
	[Address(RVA = "0x1467558", Offset = "0x1467558", VA = "0x1467558")]
	public static string StripExtFromLanguageFileName(string fileName)
	{
		return null;
	}

	[Token(Token = "0x60018A5")]
	[Address(RVA = "0x1467654", Offset = "0x1467654", VA = "0x1467654")]
	public static LocalizationInfo[] GetLocalizationsInfo()
	{
		return null;
	}

	[Token(Token = "0x60018A6")]
	[Address(RVA = "0x1467B2C", Offset = "0x1467B2C", VA = "0x1467B2C")]
	public static bool HaveLanguageData(string lanCode)
	{
		return default(bool);
	}

	[Token(Token = "0x60018A7")]
	[Address(RVA = "0x1467E80", Offset = "0x1467E80", VA = "0x1467E80")]
	public static string GetLanguageData(string lanCode)
	{
		return null;
	}

	[Token(Token = "0x60018A8")]
	[Address(RVA = "0x1467D4C", Offset = "0x1467D4C", VA = "0x1467D4C")]
	public static string GetLanguageDataVersion(string lanCode)
	{
		return null;
	}

	[Token(Token = "0x60018A9")]
	[Address(RVA = "0x1468540", Offset = "0x1468540", VA = "0x1468540")]
	public static bool HaveNewLanguageInfo()
	{
		return default(bool);
	}

	[Token(Token = "0x60018AA")]
	[Address(RVA = "0x14685B8", Offset = "0x14685B8", VA = "0x14685B8")]
	public static string GetNewLanguageInfoMessage()
	{
		return null;
	}

	[Token(Token = "0x60018AB")]
	[Address(RVA = "0x14686D0", Offset = "0x14686D0", VA = "0x14686D0")]
	public void OnApplyNewLanguageChange()
	{
	}

	[Token(Token = "0x60018AC")]
	[Address(RVA = "0x14688FC", Offset = "0x14688FC", VA = "0x14688FC")]
	public void CheckUpdateChangedLanguage(string lan)
	{
	}

	[Token(Token = "0x60018AD")]
	[Address(RVA = "0x1468CB4", Offset = "0x1468CB4", VA = "0x1468CB4")]
	public void Awake()
	{
	}

	[Token(Token = "0x60018AE")]
	[Address(RVA = "0x1468F24", Offset = "0x1468F24", VA = "0x1468F24")]
	public void Update()
	{
	}

	[Token(Token = "0x60018AF")]
	[Address(RVA = "0x14661D8", Offset = "0x14661D8", VA = "0x14661D8")]
	protected static void Initialize()
	{
	}

	[Token(Token = "0x60018B0")]
	[Address(RVA = "0x14695CC", Offset = "0x14695CC", VA = "0x14695CC")]
	protected static int IndexOf(string _str, char c)
	{
		return default(int);
	}

	[Token(Token = "0x60018B1")]
	[Address(RVA = "0x1468F28", Offset = "0x1468F28", VA = "0x1468F28")]
	protected static List<KeyValuePair<string, string>> ReadConfigValues(string _data)
	{
		return null;
	}

	[Token(Token = "0x60018B2")]
	[Address(RVA = "0x1469640", Offset = "0x1469640", VA = "0x1469640")]
	protected string GetServerUrl()
	{
		return null;
	}

	[Token(Token = "0x60018B3")]
	[Address(RVA = "0x1468EB8", Offset = "0x1468EB8", VA = "0x1468EB8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92B164", Offset = "0x92B164")]
	protected IEnumerator DownloadConfigFromServer()
	{
		return null;
	}

	[Token(Token = "0x60018B4")]
	[Address(RVA = "0x1469790", Offset = "0x1469790", VA = "0x1469790")]
	private bool CheckNewLangauge(bool afterDownload)
	{
		return default(bool);
	}

	[Token(Token = "0x60018B5")]
	[Address(RVA = "0x1468908", Offset = "0x1468908", VA = "0x1468908")]
	protected void CheckDownloadNewerLanguage(string lan, bool setLanguageAfterDownload, bool setLanguageInPrefs)
	{
	}

	[Token(Token = "0x60018B6")]
	[Address(RVA = "0x146885C", Offset = "0x146885C", VA = "0x146885C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92B1C4", Offset = "0x92B1C4")]
	protected IEnumerator DownloadLanguageFromServer(string locCode, string locVer, bool setLanguageAfterDownload, bool setLanguageInPrefs)
	{
		return null;
	}

	[Token(Token = "0x60018B7")]
	[Address(RVA = "0x1466C88", Offset = "0x1466C88", VA = "0x1466C88")]
	protected static string GetConfigValue(List<KeyValuePair<string, string>> values, string key)
	{
		return null;
	}

	[Token(Token = "0x60018B8")]
	[Address(RVA = "0x1467100", Offset = "0x1467100", VA = "0x1467100")]
	protected static string[] GetConfigValues(List<KeyValuePair<string, string>> values, string key)
	{
		return null;
	}

	[Token(Token = "0x60018B9")]
	[Address(RVA = "0x1467314", Offset = "0x1467314", VA = "0x1467314")]
	protected static TwoStringArrays GetConfigKeysAndValuesStartingWith(List<KeyValuePair<string, string>> values, string key)
	{
		return null;
	}

	[Token(Token = "0x60018BA")]
	[Address(RVA = "0x14676BC", Offset = "0x14676BC", VA = "0x14676BC")]
	protected static LocalizationInfo[] GetLocalizationsInfo(List<KeyValuePair<string, string>> values)
	{
		return null;
	}

	[Token(Token = "0x60018BB")]
	[Address(RVA = "0x1469A78", Offset = "0x1469A78", VA = "0x1469A78")]
	protected static int FindLanguageInConfig(LocalizationInfo[] localizations, string languageCode)
	{
		return default(int);
	}

	[Token(Token = "0x60018BC")]
	[Address(RVA = "0x1468474", Offset = "0x1468474", VA = "0x1468474")]
	protected static string GetLanguageVersionFromConfig(List<KeyValuePair<string, string>> values, string languageCode)
	{
		return null;
	}

	[Token(Token = "0x60018BD")]
	[Address(RVA = "0x1469B08", Offset = "0x1469B08", VA = "0x1469B08")]
	public GameConfig()
	{
	}
}
[Serializable]
[Token(Token = "0x20003A8")]
public class NamesList
{
	[Token(Token = "0x4001B2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string[] names;

	[Token(Token = "0x60018CB")]
	[Address(RVA = "0xCB0C74", Offset = "0xCB0C74", VA = "0xCB0C74")]
	public void Init(string text)
	{
	}

	[Token(Token = "0x60018CC")]
	[Address(RVA = "0xCB0700", Offset = "0xCB0700", VA = "0xCB0700")]
	public string Get()
	{
		return null;
	}

	[Token(Token = "0x60018CD")]
	[Address(RVA = "0xCB0C6C", Offset = "0xCB0C6C", VA = "0xCB0C6C")]
	public NamesList()
	{
	}
}
[Serializable]
[Token(Token = "0x20003A9")]
public class NameStructure
{
	[Token(Token = "0x4001B2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int[] index;

	[Token(Token = "0x60018CE")]
	[Address(RVA = "0xCB0E24", Offset = "0xCB0E24", VA = "0xCB0E24")]
	public void Init(string text)
	{
	}

	[Token(Token = "0x60018CF")]
	[Address(RVA = "0xCB0E1C", Offset = "0xCB0E1C", VA = "0xCB0E1C")]
	public NameStructure()
	{
	}
}
[Token(Token = "0x20003AA")]
public class NameGenerator : MonoBehaviour
{
	[Token(Token = "0x4001B2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static NamesList[] names;

	[Token(Token = "0x4001B2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static NameStructure[] data;

	[Token(Token = "0x4001B2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool initialized;

	[Token(Token = "0x60018D0")]
	[Address(RVA = "0xCB02B4", Offset = "0xCB02B4", VA = "0xCB02B4")]
	public static string Get()
	{
		return null;
	}

	[Token(Token = "0x60018D1")]
	[Address(RVA = "0xCB04A8", Offset = "0xCB04A8", VA = "0xCB04A8")]
	public static void Init()
	{
	}

	[Token(Token = "0x60018D2")]
	[Address(RVA = "0xCB0754", Offset = "0xCB0754", VA = "0xCB0754")]
	public static void SetNamesFromText(string text)
	{
	}

	[Token(Token = "0x60018D3")]
	[Address(RVA = "0xCB0F40", Offset = "0xCB0F40", VA = "0xCB0F40")]
	public NameGenerator()
	{
	}
}
[Token(Token = "0x20003AB")]
public class Translate : MonoBehaviour
{
	[Token(Token = "0x4001B30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string oryginalText;

	[Token(Token = "0x60018D5")]
	[Address(RVA = "0xEC2FA8", Offset = "0xEC2FA8", VA = "0xEC2FA8")]
	public void Start()
	{
	}

	[Token(Token = "0x60018D6")]
	[Address(RVA = "0xEC2FAC", Offset = "0xEC2FAC", VA = "0xEC2FAC")]
	public void TranslateText()
	{
	}

	[Token(Token = "0x60018D7")]
	[Address(RVA = "0xEC3240", Offset = "0xEC3240", VA = "0xEC3240")]
	public void TranslateFromStart()
	{
	}

	[Token(Token = "0x60018D8")]
	[Address(RVA = "0xEC32A8", Offset = "0xEC32A8", VA = "0xEC32A8")]
	public Translate()
	{
	}
}
[Token(Token = "0x20003AC")]
public class TranslateFormat : MonoBehaviour
{
	[Token(Token = "0x4001B31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string param;

	[Token(Token = "0x4001B32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string oryginalText;

	[Token(Token = "0x60018D9")]
	[Address(RVA = "0xEC32FC", Offset = "0xEC32FC", VA = "0xEC32FC")]
	public void Start()
	{
	}

	[Token(Token = "0x60018DA")]
	[Address(RVA = "0xEC3300", Offset = "0xEC3300", VA = "0xEC3300")]
	public void Translate()
	{
	}

	[Token(Token = "0x60018DB")]
	[Address(RVA = "0xEC3550", Offset = "0xEC3550", VA = "0xEC3550")]
	public void TranslateFromStart()
	{
	}

	[Token(Token = "0x60018DC")]
	[Address(RVA = "0xEC35B8", Offset = "0xEC35B8", VA = "0xEC35B8")]
	public TranslateFormat()
	{
	}
}
[Token(Token = "0x20003AD")]
public class Trl : MonoBehaviour
{
	[Token(Token = "0x4001B33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string defaultLang;

	[Token(Token = "0x4001B34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool changed;

	[Token(Token = "0x4001B35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Dictionary<string, string> data;

	[Token(Token = "0x4001B36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static Dictionary<string, bool> translatedTexts;

	[Token(Token = "0x4001B37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static bool initialized;

	[Token(Token = "0x4001B38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static string current;

	[Token(Token = "0x4001B39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static bool updatedCHangedSystemLanguageID;

	[Token(Token = "0x60018DD")]
	[Address(RVA = "0xEC4944", Offset = "0xEC4944", VA = "0xEC4944")]
	public static void InitCalendars()
	{
	}

	[Token(Token = "0x60018DE")]
	[Address(RVA = "0xEC4AE8", Offset = "0xEC4AE8", VA = "0xEC4AE8")]
	public static string GetSystemLanguageID()
	{
		return null;
	}

	[Token(Token = "0x60018DF")]
	[Address(RVA = "0xEC4D70", Offset = "0xEC4D70", VA = "0xEC4D70")]
	public static void UpdateChangedSystemLanguageID()
	{
	}

	[Token(Token = "0x60018E0")]
	[Address(RVA = "0xEC4D74", Offset = "0xEC4D74", VA = "0xEC4D74")]
	public static void Test(string lan)
	{
	}

	[Token(Token = "0x60018E1")]
	[Address(RVA = "0xEC5B64", Offset = "0xEC5B64", VA = "0xEC5B64")]
	public static void Init()
	{
	}

	[Token(Token = "0x60018E2")]
	[Address(RVA = "0xEC5C6C", Offset = "0xEC5C6C", VA = "0xEC5C6C")]
	public static string GetCurrentLanguageCode()
	{
		return null;
	}

	[Token(Token = "0x60018E3")]
	[Address(RVA = "0xEC5DF4", Offset = "0xEC5DF4", VA = "0xEC5DF4")]
	public static void Reload()
	{
	}

	[Token(Token = "0x60018E4")]
	[Address(RVA = "0xEC5EBC", Offset = "0xEC5EBC", VA = "0xEC5EBC")]
	public static string GetLanguage()
	{
		return null;
	}

	[Token(Token = "0x60018E5")]
	[Address(RVA = "0xEC5F60", Offset = "0xEC5F60", VA = "0xEC5F60")]
	public static void SetLanguage(string lan, bool setInPrefs = true)
	{
	}

	[Token(Token = "0x60018E6")]
	[Address(RVA = "0xEC6024", Offset = "0xEC6024", VA = "0xEC6024")]
	public static void SetDownloadedLanguage(string lan, bool setInPrefs)
	{
	}

	[Token(Token = "0x60018E7")]
	[Address(RVA = "0xEC5768", Offset = "0xEC5768", VA = "0xEC5768")]
	private static void SetLanguage(string lan, bool reportDuplicates, bool setIfIsCurrent)
	{
	}

	[Token(Token = "0x60018E8")]
	[Address(RVA = "0xEC6234", Offset = "0xEC6234", VA = "0xEC6234")]
	public static void SetLanguageFromText(string lan, string _text, bool reportDuplicates)
	{
	}

	[Token(Token = "0x60018E9")]
	[Address(RVA = "0xEC7028", Offset = "0xEC7028", VA = "0xEC7028")]
	public static Dictionary<string, string> GetDictionary()
	{
		return null;
	}

	[Token(Token = "0x60018EA")]
	[Address(RVA = "0xEC70CC", Offset = "0xEC70CC", VA = "0xEC70CC")]
	public static bool Has(string key)
	{
		return default(bool);
	}

	[Token(Token = "0x60018EB")]
	[Address(RVA = "0xEC311C", Offset = "0xEC311C", VA = "0xEC311C")]
	public static string Get(string key)
	{
		return null;
	}

	[Token(Token = "0x60018EC")]
	[Address(RVA = "0xEC7198", Offset = "0xEC7198", VA = "0xEC7198")]
	public static bool HasTranslated(string key)
	{
		return default(bool);
	}

	[Token(Token = "0x60018ED")]
	[Address(RVA = "0xEC72B8", Offset = "0xEC72B8", VA = "0xEC72B8")]
	public static string GetNoBreaks(string key)
	{
		return null;
	}

	[Token(Token = "0x60018EE")]
	[Address(RVA = "0xEC347C", Offset = "0xEC347C", VA = "0xEC347C")]
	public static string GetFormat(string key, string param1)
	{
		return null;
	}

	[Token(Token = "0x60018EF")]
	[Address(RVA = "0xEC7358", Offset = "0xEC7358", VA = "0xEC7358")]
	public static string GetFormat(string key, string param1, string param2)
	{
		return null;
	}

	[Token(Token = "0x60018F0")]
	[Address(RVA = "0xEC7484", Offset = "0xEC7484", VA = "0xEC7484")]
	public static string GetFormat(string key, string param1, string param2, string param3)
	{
		return null;
	}

	[Token(Token = "0x60018F1")]
	[Address(RVA = "0xEC7610", Offset = "0xEC7610", VA = "0xEC7610")]
	public static string GetFormat(string key, string param1, string param2, string param3, string param4)
	{
		return null;
	}

	[Token(Token = "0x60018F2")]
	[Address(RVA = "0xEC78C4", Offset = "0xEC78C4", VA = "0xEC78C4")]
	public static string GetFormat(string key, string param1, string param2, string param3, string param4, string param5)
	{
		return null;
	}

	[Token(Token = "0x60018F3")]
	[Address(RVA = "0xEC7BFC", Offset = "0xEC7BFC", VA = "0xEC7BFC")]
	public static string GetFormat(string key, string param1, string param2, string param3, string param4, string param5, string param6)
	{
		return null;
	}

	[Token(Token = "0x60018F4")]
	[Address(RVA = "0xEC7FB0", Offset = "0xEC7FB0", VA = "0xEC7FB0")]
	public static string GetFormat(string key, string param1, string param2, string param3, string param4, string param5, string param6, string param7)
	{
		return null;
	}

	[Token(Token = "0x60018F5")]
	[Address(RVA = "0xEC8434", Offset = "0xEC8434", VA = "0xEC8434")]
	public static string GetFormat(string key, string param1, string param2, string param3, string param4, string param5, string param6, string param7, string param8)
	{
		return null;
	}

	[Token(Token = "0x60018F6")]
	[Address(RVA = "0xEC8934", Offset = "0xEC8934", VA = "0xEC8934")]
	public static string GetFormat(string key, string param1, string param2, string param3, string param4, string param5, string param6, string param7, string param8, string param9)
	{
		return null;
	}

	[Token(Token = "0x60018F7")]
	[Address(RVA = "0xEC8F38", Offset = "0xEC8F38", VA = "0xEC8F38")]
	public Trl()
	{
	}
}
[Token(Token = "0x20003AE")]
public class CollisionChunk
{
	[Token(Token = "0x4001B3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float maxH;

	[Token(Token = "0x4001B3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3[] pos;

	[Token(Token = "0x4001B3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int num;

	[Token(Token = "0x60018F9")]
	[Address(RVA = "0x10403CC", Offset = "0x10403CC", VA = "0x10403CC")]
	public bool Check(Vector3 v)
	{
		return default(bool);
	}

	[Token(Token = "0x60018FA")]
	[Address(RVA = "0x1040468", Offset = "0x1040468", VA = "0x1040468")]
	public void Add(Vector3 v)
	{
	}

	[Token(Token = "0x60018FB")]
	[Address(RVA = "0x1040538", Offset = "0x1040538", VA = "0x1040538")]
	public CollisionChunk()
	{
	}
}
[Token(Token = "0x20003AF")]
public class TreeCollision : MonoBehaviour
{
	[Token(Token = "0x4001B3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static CollisionChunk[] chunk;

	[Token(Token = "0x4001B3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int chunkSize;

	[Token(Token = "0x4001B3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int rowSize;

	[Token(Token = "0x60018FC")]
	[Address(RVA = "0xEC36C4", Offset = "0xEC36C4", VA = "0xEC36C4")]
	public static void Reset()
	{
	}

	[Token(Token = "0x60018FD")]
	[Address(RVA = "0xEC3728", Offset = "0xEC3728", VA = "0xEC3728")]
	public static void Add(Vector3 pos)
	{
	}

	[Token(Token = "0x60018FE")]
	[Address(RVA = "0xEC39BC", Offset = "0xEC39BC", VA = "0xEC39BC")]
	public static int Index(Vector3 pos)
	{
		return default(int);
	}

	[Token(Token = "0x60018FF")]
	[Address(RVA = "0xEC3A94", Offset = "0xEC3A94", VA = "0xEC3A94")]
	public static bool Check(Vector3 pos)
	{
		return default(bool);
	}

	[Token(Token = "0x6001900")]
	[Address(RVA = "0xEC3C18", Offset = "0xEC3C18", VA = "0xEC3C18")]
	public TreeCollision()
	{
	}
}
[Token(Token = "0x20003B0")]
public class TreesPlacer : MonoBehaviour
{
	[Token(Token = "0x6001902")]
	[Address(RVA = "0xEC493C", Offset = "0xEC493C", VA = "0xEC493C")]
	public TreesPlacer()
	{
	}
}
[Token(Token = "0x20003B1")]
public class ButtonFinishTutorial : MonoBehaviour
{
	[Token(Token = "0x6001903")]
	[Address(RVA = "0xC26F14", Offset = "0xC26F14", VA = "0xC26F14")]
	private void Start()
	{
	}

	[Token(Token = "0x6001904")]
	[Address(RVA = "0xC26FA8", Offset = "0xC26FA8", VA = "0xC26FA8")]
	public void Click()
	{
	}

	[Token(Token = "0x6001905")]
	[Address(RVA = "0xC2706C", Offset = "0xC2706C", VA = "0xC2706C")]
	public ButtonFinishTutorial()
	{
	}
}
[Token(Token = "0x20003B2")]
public class MarkTargetInTutorial : MonoBehaviour
{
	[Token(Token = "0x6001906")]
	[Address(RVA = "0x1361444", Offset = "0x1361444", VA = "0x1361444")]
	private void Start()
	{
	}

	[Token(Token = "0x6001907")]
	[Address(RVA = "0x1361448", Offset = "0x1361448", VA = "0x1361448")]
	private void Update()
	{
	}

	[Token(Token = "0x6001908")]
	[Address(RVA = "0x136144C", Offset = "0x136144C", VA = "0x136144C")]
	public MarkTargetInTutorial()
	{
	}
}
[Token(Token = "0x20003B3")]
public abstract class Tutorial : MonoBehaviour
{
	[Token(Token = "0x20003B4")]
	public enum MissionType
	{
		[Token(Token = "0x4001B58")]
		Takeoff,
		[Token(Token = "0x4001B59")]
		Landing,
		[Token(Token = "0x4001B5A")]
		FreeFlight,
		[Token(Token = "0x4001B5B")]
		Shooting,
		[Token(Token = "0x4001B5C")]
		Rockets,
		[Token(Token = "0x4001B5D")]
		Bombs,
		[Token(Token = "0x4001B5E")]
		Torpedoes,
		[Token(Token = "0x4001B5F")]
		BombsNaval,
		[Token(Token = "0x4001B60")]
		CannonShooting,
		[Token(Token = "0x4001B61")]
		Num
	}

	[Token(Token = "0x20003B5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91865C", Offset = "0x91865C")]
	private sealed class <MonitorEnd>d__43 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Tutorial <>4__this;

		[Token(Token = "0x17000159")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001938")]
			[Address(RVA = "0x1378A00", Offset = "0x1378A00", VA = "0x1378A00", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600193A")]
			[Address(RVA = "0x1378A48", Offset = "0x1378A48", VA = "0x1378A48", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001935")]
		[Address(RVA = "0x13787F8", Offset = "0x13787F8", VA = "0x13787F8")]
		[DebuggerHidden]
		public <MonitorEnd>d__43(int <>1__state)
		{
		}

		[Token(Token = "0x6001936")]
		[Address(RVA = "0x1378824", Offset = "0x1378824", VA = "0x1378824", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001937")]
		[Address(RVA = "0x1378828", Offset = "0x1378828", VA = "0x1378828", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001939")]
		[Address(RVA = "0x1378A08", Offset = "0x1378A08", VA = "0x1378A08", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003B6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91866C", Offset = "0x91866C")]
	private sealed class <MonitorPause>d__44 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Tutorial <>4__this;

		[Token(Token = "0x1700015B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600193E")]
			[Address(RVA = "0x1378BD8", Offset = "0x1378BD8", VA = "0x1378BD8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001940")]
			[Address(RVA = "0x1378C20", Offset = "0x1378C20", VA = "0x1378C20", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600193B")]
		[Address(RVA = "0x1378A50", Offset = "0x1378A50", VA = "0x1378A50")]
		[DebuggerHidden]
		public <MonitorPause>d__44(int <>1__state)
		{
		}

		[Token(Token = "0x600193C")]
		[Address(RVA = "0x1378A7C", Offset = "0x1378A7C", VA = "0x1378A7C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600193D")]
		[Address(RVA = "0x1378A80", Offset = "0x1378A80", VA = "0x1378A80", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600193F")]
		[Address(RVA = "0x1378BE0", Offset = "0x1378BE0", VA = "0x1378BE0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003B7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91867C", Offset = "0x91867C")]
	private sealed class <TutorialSteps>d__45 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Tutorial <>4__this;

		[Token(Token = "0x1700015D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001944")]
			[Address(RVA = "0x1379800", Offset = "0x1379800", VA = "0x1379800", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001946")]
			[Address(RVA = "0x1379848", Offset = "0x1379848", VA = "0x1379848", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001941")]
		[Address(RVA = "0x13792D0", Offset = "0x13792D0", VA = "0x13792D0")]
		[DebuggerHidden]
		public <TutorialSteps>d__45(int <>1__state)
		{
		}

		[Token(Token = "0x6001942")]
		[Address(RVA = "0x13792FC", Offset = "0x13792FC", VA = "0x13792FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001943")]
		[Address(RVA = "0x1379300", Offset = "0x1379300", VA = "0x1379300", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001945")]
		[Address(RVA = "0x1379808", Offset = "0x1379808", VA = "0x1379808", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003B8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91868C", Offset = "0x91868C")]
	private sealed class <ConditionSteps>d__46 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Tutorial <>4__this;

		[Token(Token = "0x1700015F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600194A")]
			[Address(RVA = "0x13787A8", Offset = "0x13787A8", VA = "0x13787A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000160")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600194C")]
			[Address(RVA = "0x13787F0", Offset = "0x13787F0", VA = "0x13787F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001947")]
		[Address(RVA = "0x13784C8", Offset = "0x13784C8", VA = "0x13784C8")]
		[DebuggerHidden]
		public <ConditionSteps>d__46(int <>1__state)
		{
		}

		[Token(Token = "0x6001948")]
		[Address(RVA = "0x13784F4", Offset = "0x13784F4", VA = "0x13784F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001949")]
		[Address(RVA = "0x13784F8", Offset = "0x13784F8", VA = "0x13784F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600194B")]
		[Address(RVA = "0x13787B0", Offset = "0x13787B0", VA = "0x13787B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003B9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91869C", Offset = "0x91869C")]
	private sealed class <TakeOffState>d__47 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Tutorial <>4__this;

		[Token(Token = "0x17000161")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001950")]
			[Address(RVA = "0x1379280", Offset = "0x1379280", VA = "0x1379280", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000162")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001952")]
			[Address(RVA = "0x13792C8", Offset = "0x13792C8", VA = "0x13792C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600194D")]
		[Address(RVA = "0x1378FFC", Offset = "0x1378FFC", VA = "0x1378FFC")]
		[DebuggerHidden]
		public <TakeOffState>d__47(int <>1__state)
		{
		}

		[Token(Token = "0x600194E")]
		[Address(RVA = "0x1379028", Offset = "0x1379028", VA = "0x1379028", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600194F")]
		[Address(RVA = "0x137902C", Offset = "0x137902C", VA = "0x137902C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001951")]
		[Address(RVA = "0x1379288", Offset = "0x1379288", VA = "0x1379288", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003BA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9186AC", Offset = "0x9186AC")]
	private sealed class <Step>d__56 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Tutorial <>4__this;

		[Token(Token = "0x4001B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool wasRepeat;

		[Token(Token = "0x17000163")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001956")]
			[Address(RVA = "0x1378FAC", Offset = "0x1378FAC", VA = "0x1378FAC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000164")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001958")]
			[Address(RVA = "0x1378FF4", Offset = "0x1378FF4", VA = "0x1378FF4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001953")]
		[Address(RVA = "0x1378C28", Offset = "0x1378C28", VA = "0x1378C28")]
		[DebuggerHidden]
		public <Step>d__56(int <>1__state)
		{
		}

		[Token(Token = "0x6001954")]
		[Address(RVA = "0x1378C54", Offset = "0x1378C54", VA = "0x1378C54", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001955")]
		[Address(RVA = "0x1378C58", Offset = "0x1378C58", VA = "0x1378C58", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001957")]
		[Address(RVA = "0x1378FB4", Offset = "0x1378FB4", VA = "0x1378FB4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001B40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool active;

	[Token(Token = "0x4001B41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static MissionType missionType;

	[Token(Token = "0x4001B42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static PlaneBody currentPlane;

	[Token(Token = "0x4001B43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected int totalSteps;

	[Token(Token = "0x4001B44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected int[] totalSubsteps;

	[Token(Token = "0x4001B45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected int step;

	[Token(Token = "0x4001B46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	protected int substep;

	[Token(Token = "0x4001B47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected int conditionStep;

	[Token(Token = "0x4001B48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	protected int conditionSubstep;

	[Token(Token = "0x4001B49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected bool completed;

	[Token(Token = "0x4001B4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected PlaneBody plane;

	[Token(Token = "0x4001B4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected VRCockpit cockpit;

	[Token(Token = "0x4001B4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected Transform t;

	[Token(Token = "0x4001B4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool repeatStep;

	[Token(Token = "0x4001B4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool skipConditionFulfill;

	[Token(Token = "0x4001B4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	private bool isPaused;

	[Token(Token = "0x4001B50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
	private bool shouldPause;

	[Token(Token = "0x4001B51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float takeoffRadioTime;

	[Token(Token = "0x4001B52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected bool shouldUnpause;

	[Token(Token = "0x4001B53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91BC1C", Offset = "0x91BC1C")]
	private readonly Vector3 <CarrierPosition>k__BackingField;

	[Token(Token = "0x4001B54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91BC2C", Offset = "0x91BC2C")]
	private readonly Quaternion <CarrierRotation>k__BackingField;

	[Token(Token = "0x4001B55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91BC3C", Offset = "0x91BC3C")]
	private readonly bool <ShouldSpawnCarrier>k__BackingField;

	[Token(Token = "0x4001B56")]
	private const string kDefaultPlane = "VR_As__F6F_Hellcat";

	[Token(Token = "0x17000155")]
	public static string Title
	{
		[Token(Token = "0x6001909")]
		[Address(RVA = "0xEC8FE0", Offset = "0xEC8FE0", VA = "0xEC8FE0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000156")]
	protected virtual Vector3 CarrierPosition
	{
		[Token(Token = "0x600190A")]
		[Address(RVA = "0xEC9138", Offset = "0xEC9138", VA = "0xEC9138", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92B2C4", Offset = "0x92B2C4")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000157")]
	protected virtual Quaternion CarrierRotation
	{
		[Token(Token = "0x600190B")]
		[Address(RVA = "0xEC9144", Offset = "0xEC9144", VA = "0xEC9144", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92B2D4", Offset = "0x92B2D4")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x17000158")]
	protected virtual bool ShouldSpawnCarrier
	{
		[Token(Token = "0x600190C")]
		[Address(RVA = "0xEC9150", Offset = "0xEC9150", VA = "0xEC9150", Slot = "6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92B2E4", Offset = "0x92B2E4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600190D")]
	[Address(RVA = "0xEC9158", Offset = "0xEC9158", VA = "0xEC9158")]
	public static void MissionAwake()
	{
	}

	[Token(Token = "0x600190E")]
	[Address(RVA = "0xEC91F4", Offset = "0xEC91F4", VA = "0xEC91F4")]
	public static Tutorial Prepare()
	{
		return null;
	}

	[Token(Token = "0x600190F")]
	[Address(RVA = "0xEC955C", Offset = "0xEC955C", VA = "0xEC955C")]
	private static void SpawnCarrier(Tutorial t)
	{
	}

	[Token(Token = "0x6001910")]
	[Address(RVA = "0xEC92B8", Offset = "0xEC92B8", VA = "0xEC92B8")]
	private static Tutorial Create()
	{
		return null;
	}

	[Token(Token = "0x6001911")]
	[Address(RVA = "0xEC9A28", Offset = "0xEC9A28", VA = "0xEC9A28", Slot = "7")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6001912")]
	[Address(RVA = "0xEC9B4C", Offset = "0xEC9B4C", VA = "0xEC9B4C", Slot = "8")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6001913")]
	[Address(RVA = "0xEC9D64", Offset = "0xEC9D64", VA = "0xEC9D64", Slot = "9")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6001914")]
	[Address(RVA = "0xEC9F2C", Offset = "0xEC9F2C", VA = "0xEC9F2C", Slot = "10")]
	protected virtual void PlayerPlaneSpawned(PlaneBody pb)
	{
	}

	[Token(Token = "0x6001915")]
	[Address(RVA = "0xEC9F30", Offset = "0xEC9F30", VA = "0xEC9F30")]
	public static string GetEndingSentence()
	{
		return null;
	}

	[Token(Token = "0x6001916")]
	protected abstract void OverrideSteps(ref int steps, ref int[] substeps);

	[Token(Token = "0x6001917")]
	protected abstract IEnumerator StepLogic();

	[Token(Token = "0x6001918")]
	[Address(RVA = "0xEC9F74", Offset = "0xEC9F74", VA = "0xEC9F74")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92B2F4", Offset = "0x92B2F4")]
	private IEnumerator MonitorEnd()
	{
		return null;
	}

	[Token(Token = "0x6001919")]
	[Address(RVA = "0xEC9CF8", Offset = "0xEC9CF8", VA = "0xEC9CF8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92B354", Offset = "0x92B354")]
	private IEnumerator MonitorPause()
	{
		return null;
	}

	[Token(Token = "0x600191A")]
	[Address(RVA = "0xEC9C20", Offset = "0xEC9C20", VA = "0xEC9C20")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92B3B4", Offset = "0x92B3B4")]
	private IEnumerator TutorialSteps()
	{
		return null;
	}

	[Token(Token = "0x600191B")]
	[Address(RVA = "0xEC9C8C", Offset = "0xEC9C8C", VA = "0xEC9C8C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92B414", Offset = "0x92B414")]
	private IEnumerator ConditionSteps()
	{
		return null;
	}

	[Token(Token = "0x600191C")]
	[Address(RVA = "0xEC9FE0", Offset = "0xEC9FE0", VA = "0xEC9FE0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92B474", Offset = "0x92B474")]
	protected IEnumerator TakeOffState()
	{
		return null;
	}

	[Token(Token = "0x600191D")]
	[Address(RVA = "0xECA04C", Offset = "0xECA04C", VA = "0xECA04C", Slot = "13")]
	protected virtual void UpdateText(string param = "", string param2 = "", bool repeatingStep = false, int step = -1, int substep = -1, MissionType missionType = MissionType.Num)
	{
	}

	[Token(Token = "0x600191E")]
	[Address(RVA = "0xECA228", Offset = "0xECA228", VA = "0xECA228")]
	protected float PlanarDistance(Vector3 a, Vector3 b)
	{
		return default(float);
	}

	[Token(Token = "0x600191F")]
	[Address(RVA = "0xECA258", Offset = "0xECA258", VA = "0xECA258")]
	protected bool IsPointBehindPlane(Vector3 p)
	{
		return default(bool);
	}

	[Token(Token = "0x6001920")]
	[Address(RVA = "0xECA370", Offset = "0xECA370", VA = "0xECA370")]
	protected int CountLiveHulls(List<Hull> hulls)
	{
		return default(int);
	}

	[Token(Token = "0x6001921")]
	[Address(RVA = "0xECA498", Offset = "0xECA498", VA = "0xECA498")]
	protected void MarkEnemies(List<Hull> ret, eHull type)
	{
	}

	[Token(Token = "0x6001922")]
	[Address(RVA = "0xECA62C", Offset = "0xECA62C", VA = "0xECA62C")]
	protected void MarkTutorialEntities(List<Hull> ret, eParty party)
	{
	}

	[Token(Token = "0x6001923")]
	[Address(RVA = "0xECA80C", Offset = "0xECA80C", VA = "0xECA80C")]
	protected void DisableEnemyGroundCannons()
	{
	}

	[Token(Token = "0x6001924")]
	[Address(RVA = "0xECAA10", Offset = "0xECAA10", VA = "0xECAA10")]
	protected void Fulfilled()
	{
	}

	[Token(Token = "0x6001925")]
	[Address(RVA = "0xECAB24", Offset = "0xECAB24", VA = "0xECAB24")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92B4D4", Offset = "0x92B4D4")]
	private IEnumerator Step(bool wasRepeat)
	{
		return null;
	}

	[Token(Token = "0x6001926")]
	[Address(RVA = "0xECABA4", Offset = "0xECABA4", VA = "0xECABA4", Slot = "14")]
	protected virtual MissionType GetRadioMissionType()
	{
		return default(MissionType);
	}

	[Token(Token = "0x6001927")]
	[Address(RVA = "0xECAC08", Offset = "0xECAC08", VA = "0xECAC08")]
	protected void RadioRepeatStep(int step = -1, int substep = -1)
	{
	}

	[Token(Token = "0x6001928")]
	[Address(RVA = "0xECAD58", Offset = "0xECAD58", VA = "0xECAD58")]
	protected void RadioStep(int step = -1, int substep = -1)
	{
	}

	[Token(Token = "0x6001929")]
	[Address(RVA = "0xECAEA8", Offset = "0xECAEA8", VA = "0xECAEA8")]
	protected void RadioFinal()
	{
	}

	[Token(Token = "0x600192A")]
	[Address(RVA = "0xECAFA8", Offset = "0xECAFA8", VA = "0xECAFA8")]
	protected void RadioApproval()
	{
	}

	[Token(Token = "0x600192B")]
	[Address(RVA = "0xECB01C", Offset = "0xECB01C", VA = "0xECB01C")]
	protected void RepeatStep()
	{
	}

	[Token(Token = "0x600192C")]
	[Address(RVA = "0xEC9708", Offset = "0xEC9708", VA = "0xEC9708")]
	private static void SpawnPlayerPlane()
	{
	}

	[Token(Token = "0x600192D")]
	[Address(RVA = "0xECB118", Offset = "0xECB118", VA = "0xECB118")]
	private static void PutPlaneAtTakeoff(PlaneBody pb)
	{
	}

	[Token(Token = "0x600192E")]
	[Address(RVA = "0xECB3A0", Offset = "0xECB3A0", VA = "0xECB3A0")]
	protected Squadron AddBaloons(eqType type, eParty party)
	{
		return null;
	}

	[Token(Token = "0x600192F")]
	[Address(RVA = "0xECB5F0", Offset = "0xECB5F0", VA = "0xECB5F0")]
	protected Squadron AddBoats(eqType type, eParty party)
	{
		return null;
	}

	[Token(Token = "0x6001930")]
	[Address(RVA = "0xECB6D4", Offset = "0xECB6D4", VA = "0xECB6D4")]
	protected Squadron AddGroundObjects(eqType type, eParty party)
	{
		return null;
	}

	[Token(Token = "0x6001931")]
	[Address(RVA = "0xECB828", Offset = "0xECB828", VA = "0xECB828")]
	protected Squadron AddPlanes(eqType type, eParty party)
	{
		return null;
	}

	[Token(Token = "0x6001932")]
	[Address(RVA = "0xECB48C", Offset = "0xECB48C", VA = "0xECB48C")]
	protected Squadron AddSquadron(Vector3 pos, GameObject prefab, eParty party, Vector3 spread, bool random)
	{
		return null;
	}

	[Token(Token = "0x6001933")]
	[Address(RVA = "0xECB91C", Offset = "0xECB91C", VA = "0xECB91C")]
	protected Tutorial()
	{
	}
}
[Token(Token = "0x20003BB")]
public class TutorialBombsTarget : MonoBehaviour
{
	[Token(Token = "0x4001B75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float radius;

	[Token(Token = "0x4001B76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static TutorialBombsTarget instance;

	[Token(Token = "0x6001959")]
	[Address(RVA = "0xECD3EC", Offset = "0xECD3EC", VA = "0xECD3EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600195A")]
	[Address(RVA = "0xECD43C", Offset = "0xECD43C", VA = "0xECD43C")]
	public static Transform Get(out float radius)
	{
		return null;
	}

	[Token(Token = "0x600195B")]
	[Address(RVA = "0xECD4B0", Offset = "0xECD4B0", VA = "0xECD4B0")]
	public TutorialBombsTarget()
	{
	}
}
[Token(Token = "0x20003BC")]
public class UnlockedPopupWindow : MonoBehaviour
{
	[Token(Token = "0x20003BD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9186BC", Offset = "0x9186BC")]
	private sealed class <StartAnim>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnlockedPopupWindow <>4__this;

		[Token(Token = "0x4001B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <time>5__2;

		[Token(Token = "0x17000165")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001964")]
			[Address(RVA = "0x11B4C18", Offset = "0x11B4C18", VA = "0x11B4C18", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000166")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001966")]
			[Address(RVA = "0x11B4C60", Offset = "0x11B4C60", VA = "0x11B4C60", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001961")]
		[Address(RVA = "0x11B4060", Offset = "0x11B4060", VA = "0x11B4060")]
		[DebuggerHidden]
		public <StartAnim>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x6001962")]
		[Address(RVA = "0x11B408C", Offset = "0x11B408C", VA = "0x11B408C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001963")]
		[Address(RVA = "0x11B4090", Offset = "0x11B4090", VA = "0x11B4090", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001965")]
		[Address(RVA = "0x11B4C20", Offset = "0x11B4C20", VA = "0x11B4C20", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003BE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9186CC", Offset = "0x9186CC")]
	private sealed class <DecalAnim>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnlockedPopupWindow <>4__this;

		[Token(Token = "0x4001B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int i;

		[Token(Token = "0x4001B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <time>5__2;

		[Token(Token = "0x4001B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <next>5__3;

		[Token(Token = "0x17000167")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600196A")]
			[Address(RVA = "0x11B4010", Offset = "0x11B4010", VA = "0x11B4010", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000168")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600196C")]
			[Address(RVA = "0x11B4058", Offset = "0x11B4058", VA = "0x11B4058", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001967")]
		[Address(RVA = "0x11B3D80", Offset = "0x11B3D80", VA = "0x11B3D80")]
		[DebuggerHidden]
		public <DecalAnim>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x6001968")]
		[Address(RVA = "0x11B3DAC", Offset = "0x11B3DAC", VA = "0x11B3DAC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001969")]
		[Address(RVA = "0x11B3DB0", Offset = "0x11B3DB0", VA = "0x11B3DB0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600196B")]
		[Address(RVA = "0x11B4018", Offset = "0x11B4018", VA = "0x11B4018", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001B77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject objRank;

	[Token(Token = "0x4001B78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMesh textRank;

	[Token(Token = "0x4001B79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Renderer iconRank;

	[Token(Token = "0x4001B7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject textUnlockInfo;

	[Token(Token = "0x4001B7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Renderer[] decalIcons;

	[Token(Token = "0x4001B7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public PaintDecalList decalWnd;

	[Token(Token = "0x4001B7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public MUI_Sound.UISfx startSound;

	[Token(Token = "0x4001B7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float anim1Time;

	[Token(Token = "0x4001B7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AnimationCurve anim1Scale;

	[Token(Token = "0x4001B80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float anim2TimeS;

	[Token(Token = "0x4001B81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float anim2Time;

	[Token(Token = "0x4001B82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AnimationCurve anim2Scale;

	[Token(Token = "0x4001B83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float anim3TimeS;

	[Token(Token = "0x4001B84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float anim3Time;

	[Token(Token = "0x4001B85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AnimationCurve anim3Scale;

	[Token(Token = "0x4001B86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float anim4TimeS;

	[Token(Token = "0x4001B87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float anim4Time;

	[Token(Token = "0x4001B88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AnimationCurve anim4Scale;

	[Token(Token = "0x4001B89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float anim4ScaleTrigger;

	[Token(Token = "0x4001B8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float anim5TimeS;

	[Token(Token = "0x4001B8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float anim5Time;

	[Token(Token = "0x4001B8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public AnimationCurve anim5Scale;

	[Token(Token = "0x4001B8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected int iconRankQueue;

	[Token(Token = "0x4001B8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected bool[] decalFilled;

	[Token(Token = "0x4001B8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected bool endDecalAnim;

	[Token(Token = "0x600195C")]
	[Address(RVA = "0xED3254", Offset = "0xED3254", VA = "0xED3254")]
	private void Awake()
	{
	}

	[Token(Token = "0x600195D")]
	[Address(RVA = "0xED3294", Offset = "0xED3294", VA = "0xED3294")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600195E")]
	[Address(RVA = "0xED32C0", Offset = "0xED32C0", VA = "0xED32C0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92B714", Offset = "0x92B714")]
	private IEnumerator StartAnim()
	{
		return null;
	}

	[Token(Token = "0x600195F")]
	[Address(RVA = "0xED332C", Offset = "0xED332C", VA = "0xED332C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92B774", Offset = "0x92B774")]
	private IEnumerator DecalAnim(int i)
	{
		return null;
	}

	[Token(Token = "0x6001960")]
	[Address(RVA = "0xED33A8", Offset = "0xED33A8", VA = "0xED33A8")]
	public UnlockedPopupWindow()
	{
	}
}
[Token(Token = "0x20003BF")]
public class UpgradeButton : MonoBehaviour
{
	[Token(Token = "0x4001B9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public eUpgrade upgrade;

	[Token(Token = "0x4001B9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer icon;

	[Token(Token = "0x4001B9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UpgradeBuyWindow buyWindow;

	[Token(Token = "0x4001B9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMesh state;

	[Token(Token = "0x4001B9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private PlayerPlane playerPlane;

	[Token(Token = "0x4001B9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private PlaneBody planeBody;

	[Token(Token = "0x600196D")]
	[Address(RVA = "0xED54F4", Offset = "0xED54F4", VA = "0xED54F4")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x600196E")]
	[Address(RVA = "0xED54F8", Offset = "0xED54F8", VA = "0xED54F8")]
	public void UpdatePlane()
	{
	}

	[Token(Token = "0x600196F")]
	[Address(RVA = "0xED5638", Offset = "0xED5638", VA = "0xED5638")]
	public void Print()
	{
	}

	[Token(Token = "0x6001970")]
	[Address(RVA = "0xED5890", Offset = "0xED5890", VA = "0xED5890")]
	public void Click()
	{
	}

	[Token(Token = "0x6001971")]
	[Address(RVA = "0xED5A18", Offset = "0xED5A18", VA = "0xED5A18")]
	public void Update()
	{
	}

	[Token(Token = "0x6001972")]
	[Address(RVA = "0xED5AD0", Offset = "0xED5AD0", VA = "0xED5AD0")]
	public UpgradeButton()
	{
	}
}
[Token(Token = "0x20003C0")]
public class UpgradeBuyWindow : MonoBehaviour
{
	[Token(Token = "0x4001BA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public eUpgrade upgrade;

	[Token(Token = "0x4001BA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer icon;

	[Token(Token = "0x4001BA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMesh tmName;

	[Token(Token = "0x4001BA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMesh tmDescription;

	[Token(Token = "0x4001BA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMesh tmLevelValue;

	[Token(Token = "0x4001BA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject priceGroup;

	[Token(Token = "0x4001BA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMesh tmPriceValue;

	[Token(Token = "0x4001BA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject buyButton;

	[Token(Token = "0x4001BA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject buttonChangeMulti;

	[Token(Token = "0x4001BA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private PlayerPlane playerPlane;

	[Token(Token = "0x4001BAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private PlaneBody planeBody;

	[Token(Token = "0x4001BAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Hull hull;

	[Token(Token = "0x4001BAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private readonly float[] priceArr;

	[Token(Token = "0x6001973")]
	[Address(RVA = "0xED5AD8", Offset = "0xED5AD8", VA = "0xED5AD8")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6001974")]
	[Address(RVA = "0xED5BD8", Offset = "0xED5BD8", VA = "0xED5BD8")]
	public void Print()
	{
	}

	[Token(Token = "0x6001975")]
	[Address(RVA = "0xED66FC", Offset = "0xED66FC", VA = "0xED66FC")]
	public static string GetSkillValueText(ePilotSkill skill, int skillVal)
	{
		return null;
	}

	[Token(Token = "0x6001976")]
	[Address(RVA = "0xED59C0", Offset = "0xED59C0", VA = "0xED59C0")]
	public void SetUpgrade(eUpgrade u, Material m)
	{
	}

	[Token(Token = "0x6001977")]
	[Address(RVA = "0xED67E8", Offset = "0xED67E8", VA = "0xED67E8")]
	public void Click()
	{
	}

	[Token(Token = "0x6001978")]
	[Address(RVA = "0xED65E4", Offset = "0xED65E4", VA = "0xED65E4")]
	public int PriceGold()
	{
		return default(int);
	}

	[Token(Token = "0x6001979")]
	[Address(RVA = "0xED6A24", Offset = "0xED6A24", VA = "0xED6A24")]
	public UpgradeBuyWindow()
	{
	}
}
[Token(Token = "0x20003C1")]
public class UpgradesList : MonoBehaviour
{
	[Token(Token = "0x4001BAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject plane;

	[Token(Token = "0x4001BAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject buttonCannon;

	[Token(Token = "0x600197A")]
	[Address(RVA = "0xED6AA4", Offset = "0xED6AA4", VA = "0xED6AA4")]
	public void Update()
	{
	}

	[Token(Token = "0x600197B")]
	[Address(RVA = "0xED6CD8", Offset = "0xED6CD8", VA = "0xED6CD8")]
	public UpgradesList()
	{
	}
}
[Token(Token = "0x20003C2")]
public class VRControllerHelpTexts : MonoBehaviour
{
	[Token(Token = "0x4001BAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string textOrg;

	[Token(Token = "0x4001BB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private TextMesh tm;

	[Token(Token = "0x600197C")]
	[Address(RVA = "0x13D3700", Offset = "0x13D3700", VA = "0x13D3700")]
	private void Awake()
	{
	}

	[Token(Token = "0x600197D")]
	[Address(RVA = "0x13D3774", Offset = "0x13D3774", VA = "0x13D3774")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600197E")]
	[Address(RVA = "0x13D3778", Offset = "0x13D3778", VA = "0x13D3778")]
	private void FillTexts()
	{
	}

	[Token(Token = "0x600197F")]
	[Address(RVA = "0x13D3F3C", Offset = "0x13D3F3C", VA = "0x13D3F3C")]
	public VRControllerHelpTexts()
	{
	}
}
[Token(Token = "0x20003C3")]
public class WarningInBriefing : MonoBehaviour
{
	[Token(Token = "0x4001BB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float onTime;

	[Token(Token = "0x4001BB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float offTime;

	[Token(Token = "0x4001BB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool on;

	[Token(Token = "0x4001BB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MeshRenderer _renderer;

	[Token(Token = "0x4001BB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float time;

	[Token(Token = "0x6001980")]
	[Address(RVA = "0xE21258", Offset = "0xE21258", VA = "0xE21258")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001981")]
	[Address(RVA = "0xE2142C", Offset = "0xE2142C", VA = "0xE2142C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001982")]
	[Address(RVA = "0xE214D0", Offset = "0xE214D0", VA = "0xE214D0")]
	public WarningInBriefing()
	{
	}
}
[Token(Token = "0x20003C4")]
public class WaterPatchGenerator : MonoBehaviour
{
	[Token(Token = "0x4001BB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector2[] uvArray;

	[Token(Token = "0x4001BB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int num;

	[Token(Token = "0x4001BB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3[] vertices;

	[Token(Token = "0x4001BB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Color[] colors;

	[Token(Token = "0x4001BBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector2[] uv;

	[Token(Token = "0x4001BBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int[] triangles;

	[Token(Token = "0x4001BBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int vertZ;

	[Token(Token = "0x4001BBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Mesh mesh;

	[Token(Token = "0x6001983")]
	[Address(RVA = "0xE214E8", Offset = "0xE214E8", VA = "0xE214E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001984")]
	[Address(RVA = "0xE214EC", Offset = "0xE214EC", VA = "0xE214EC")]
	public void GenerateOnMesh(Mesh m)
	{
	}

	[Token(Token = "0x6001985")]
	[Address(RVA = "0xE21E10", Offset = "0xE21E10", VA = "0xE21E10")]
	public void UpdateMesh()
	{
	}

	[Token(Token = "0x6001986")]
	[Address(RVA = "0xE21FD8", Offset = "0xE21FD8", VA = "0xE21FD8")]
	private void CreateTangent(Mesh theMesh)
	{
	}

	[Token(Token = "0x6001987")]
	[Address(RVA = "0xE224A0", Offset = "0xE224A0", VA = "0xE224A0")]
	public WaterPatchGenerator()
	{
	}
}
[Token(Token = "0x20003C5")]
public enum eWeather
{
	[Token(Token = "0x4001BBF")]
	morning,
	[Token(Token = "0x4001BC0")]
	morningCloudy,
	[Token(Token = "0x4001BC1")]
	noon,
	[Token(Token = "0x4001BC2")]
	noonCloudy,
	[Token(Token = "0x4001BC3")]
	sunSet,
	[Token(Token = "0x4001BC4")]
	sunSetCloudy,
	[Token(Token = "0x4001BC5")]
	tutorial,
	[Token(Token = "0x4001BC6")]
	night,
	[Token(Token = "0x4001BC7")]
	num
}
[Token(Token = "0x20003C6")]
public class Weather : MonoBehaviour
{
	[Token(Token = "0x20003C7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9186DC", Offset = "0x9186DC")]
	private sealed class <Start>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Weather <>4__this;

		[Token(Token = "0x17000169")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001995")]
			[Address(RVA = "0x11B9344", Offset = "0x11B9344", VA = "0x11B9344", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001997")]
			[Address(RVA = "0x11B938C", Offset = "0x11B938C", VA = "0x11B938C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001992")]
		[Address(RVA = "0x11B8CBC", Offset = "0x11B8CBC", VA = "0x11B8CBC")]
		[DebuggerHidden]
		public <Start>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6001993")]
		[Address(RVA = "0x11B8CE8", Offset = "0x11B8CE8", VA = "0x11B8CE8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001994")]
		[Address(RVA = "0x11B8CEC", Offset = "0x11B8CEC", VA = "0x11B8CEC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001996")]
		[Address(RVA = "0x11B934C", Offset = "0x11B934C", VA = "0x11B934C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001BC8")]
	public const eWeather maxMissionWeather = eWeather.tutorial;

	[Token(Token = "0x4001BC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public eWeather type;

	[Token(Token = "0x4001BCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture skyDomeTexture;

	[Token(Token = "0x4001BCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color colorLight;

	[Token(Token = "0x4001BCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color colorAmbient;

	[Token(Token = "0x4001BCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Color colorClouds;

	[Token(Token = "0x4001BCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Color colorHorizon;

	[Token(Token = "0x4001BCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Color colorHorizonSun;

	[Token(Token = "0x4001BD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x91BC5C", Offset = "0x91BC5C")]
	public float shadowIntensity;

	[Token(Token = "0x4001BD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x91BC74", Offset = "0x91BC74")]
	public int shadowSoftness;

	[Token(Token = "0x4001BD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float fogStart;

	[Token(Token = "0x4001BD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float fogEnd;

	[Token(Token = "0x4001BD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[HideInInspector]
	public GameObject sunLight;

	[Token(Token = "0x4001BD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[HideInInspector]
	public Light sunLightComponent;

	[Token(Token = "0x4001BD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Vector2 lightmapSunDir;

	[Token(Token = "0x4001BD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Weather instance;

	[Token(Token = "0x4001BD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Transform sun;

	[Token(Token = "0x4001BD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static int clouds;

	[Token(Token = "0x4001BDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public int closeCloudsNum;

	[Token(Token = "0x4001BDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public static Color sunColor;

	[Token(Token = "0x4001BDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public static bool changeQuality;

	[Token(Token = "0x4001BDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[SerializeField]
	private float startMul;

	[Token(Token = "0x4001BDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private float endMul;

	[Token(Token = "0x6001988")]
	[Address(RVA = "0xE22694", Offset = "0xE22694", VA = "0xE22694")]
	public void Awake()
	{
	}

	[Token(Token = "0x6001989")]
	[Address(RVA = "0xE227AC", Offset = "0xE227AC", VA = "0xE227AC")]
	private void ConnectLight()
	{
	}

	[Token(Token = "0x600198A")]
	[Address(RVA = "0xE22AE0", Offset = "0xE22AE0", VA = "0xE22AE0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92B874", Offset = "0x92B874")]
	public IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600198B")]
	[Address(RVA = "0xE22B4C", Offset = "0xE22B4C", VA = "0xE22B4C")]
	public static void UpdateSunPosition()
	{
	}

	[Token(Token = "0x600198C")]
	[Address(RVA = "0xE22D00", Offset = "0xE22D00", VA = "0xE22D00")]
	private void UpdateFog()
	{
	}

	[Token(Token = "0x600198D")]
	[Address(RVA = "0xE22F20", Offset = "0xE22F20", VA = "0xE22F20")]
	public void Update()
	{
	}

	[Token(Token = "0x600198E")]
	[Address(RVA = "0xE23118", Offset = "0xE23118", VA = "0xE23118")]
	public static bool IsNight()
	{
		return default(bool);
	}

	[Token(Token = "0x600198F")]
	[Address(RVA = "0xE23200", Offset = "0xE23200", VA = "0xE23200")]
	public static float GetCurrentMaxFog()
	{
		return default(float);
	}

	[Token(Token = "0x6001990")]
	[Address(RVA = "0xE232B4", Offset = "0xE232B4", VA = "0xE232B4")]
	public Weather()
	{
	}
}
[Token(Token = "0x20003C8")]
public class WeatherLoader : MonoBehaviour
{
	[Token(Token = "0x6001998")]
	[Address(RVA = "0xE233BC", Offset = "0xE233BC", VA = "0xE233BC")]
	public void Awake()
	{
	}

	[Token(Token = "0x6001999")]
	[Address(RVA = "0xE23588", Offset = "0xE23588", VA = "0xE23588")]
	private void ReloadWeather()
	{
	}

	[Token(Token = "0x600199A")]
	[Address(RVA = "0xE237C0", Offset = "0xE237C0", VA = "0xE237C0")]
	public WeatherLoader()
	{
	}
}
[Token(Token = "0x20003C9")]
public class WindSound : MonoBehaviour
{
	[Token(Token = "0x4001BE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip flying;

	[Token(Token = "0x4001BE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip falling;

	[Token(Token = "0x4001BE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AudioSource audios;

	[Token(Token = "0x600199B")]
	[Address(RVA = "0xE237C8", Offset = "0xE237C8", VA = "0xE237C8")]
	private void Start()
	{
	}

	[Token(Token = "0x600199C")]
	[Address(RVA = "0xE23838", Offset = "0xE23838", VA = "0xE23838")]
	private void Update()
	{
	}

	[Token(Token = "0x600199D")]
	[Address(RVA = "0xE23AC8", Offset = "0xE23AC8", VA = "0xE23AC8")]
	public WindSound()
	{
	}
}
[Token(Token = "0x20003CA")]
public class WindowControlsHelp : MonoBehaviour
{
	[Token(Token = "0x4001BE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject helpOculus;

	[Token(Token = "0x4001BE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject helpHTC_Cosmos;

	[Token(Token = "0x4001BE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject helpHTC_Wands;

	[Token(Token = "0x4001BE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject helpValveIndex;

	[Token(Token = "0x4001BE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject helpWMR;

	[Token(Token = "0x4001BEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject helpHPReverb;

	[Token(Token = "0x4001BEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject helpViveFocus;

	[Token(Token = "0x4001BEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject helpPico;

	[Token(Token = "0x4001BED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject helpPicoPhoenix;

	[Token(Token = "0x600199E")]
	[Address(RVA = "0xE25610", Offset = "0xE25610", VA = "0xE25610")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600199F")]
	[Address(RVA = "0xE25614", Offset = "0xE25614", VA = "0xE25614")]
	public void UpdateView()
	{
	}

	[Token(Token = "0x60019A0")]
	[Address(RVA = "0xE257BC", Offset = "0xE257BC", VA = "0xE257BC")]
	public WindowControlsHelp()
	{
	}
}
[Token(Token = "0x20003CB")]
public class WindowGiftsList : MonoBehaviour
{
	[Token(Token = "0x4001BEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMesh message;

	[Token(Token = "0x4001BEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject giftPrefab;

	[Token(Token = "0x4001BF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject giftPrefabNext;

	[Token(Token = "0x4001BF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<GameObject> giftTags;

	[Token(Token = "0x4001BF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<PlayerPlane> planes;

	[Token(Token = "0x4001BF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool receiving;

	[Token(Token = "0x60019A1")]
	[Address(RVA = "0xE257C4", Offset = "0xE257C4", VA = "0xE257C4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60019A2")]
	[Address(RVA = "0xE25844", Offset = "0xE25844", VA = "0xE25844")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60019A3")]
	[Address(RVA = "0xE25D10", Offset = "0xE25D10", VA = "0xE25D10")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60019A4")]
	[Address(RVA = "0xE25D14", Offset = "0xE25D14", VA = "0xE25D14")]
	private void DisposePlanes()
	{
	}

	[Token(Token = "0x60019A5")]
	[Address(RVA = "0xE2584C", Offset = "0xE2584C", VA = "0xE2584C")]
	private void Repaint(bool clearList)
	{
	}

	[Token(Token = "0x60019A6")]
	[Address(RVA = "0xE25DD0", Offset = "0xE25DD0", VA = "0xE25DD0")]
	private void Fill(Dictionary<int, string> code2save)
	{
	}

	[Token(Token = "0x60019A7")]
	[Address(RVA = "0xE26DDC", Offset = "0xE26DDC", VA = "0xE26DDC")]
	private void CallbackGetActiveGiftsResult(object obj)
	{
	}

	[Token(Token = "0x60019A8")]
	[Address(RVA = "0xE26E6C", Offset = "0xE26E6C", VA = "0xE26E6C")]
	private void CallbackGetActiveGiftsError(ServerWWWErrorCode err)
	{
	}

	[Token(Token = "0x60019A9")]
	[Address(RVA = "0xE26F2C", Offset = "0xE26F2C", VA = "0xE26F2C")]
	private void OnRemoveGift(int code)
	{
	}

	[Token(Token = "0x60019AA")]
	[Address(RVA = "0xE270F4", Offset = "0xE270F4", VA = "0xE270F4")]
	private void CallbackReceiveGiftResult(string save)
	{
	}

	[Token(Token = "0x60019AB")]
	[Address(RVA = "0xE27210", Offset = "0xE27210", VA = "0xE27210")]
	private void CallbackReceiveGiftError(ServerWWWErrorCode err)
	{
	}

	[Token(Token = "0x60019AC")]
	[Address(RVA = "0xE27218", Offset = "0xE27218", VA = "0xE27218")]
	public WindowGiftsList()
	{
	}
}
[Token(Token = "0x20003CC")]
public class WindowReceiveGift : MonoBehaviour
{
	[Token(Token = "0x4001BF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject codeWindow;

	[Token(Token = "0x4001BF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject receivedWindow;

	[Token(Token = "0x4001BF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMesh[] codeDigits;

	[Token(Token = "0x4001BF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMesh message;

	[Token(Token = "0x4001BF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMesh receivedInfo;

	[Token(Token = "0x4001BF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected int currentCodeIndex;

	[Token(Token = "0x4001BFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	protected float blinkTime;

	[Token(Token = "0x4001BFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected bool receiving;

	[Token(Token = "0x4001BFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static WindowReceiveGift instance;

	[Token(Token = "0x60019AD")]
	[Address(RVA = "0xE272D0", Offset = "0xE272D0", VA = "0xE272D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60019AE")]
	[Address(RVA = "0xE27348", Offset = "0xE27348", VA = "0xE27348")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60019AF")]
	[Address(RVA = "0xE2744C", Offset = "0xE2744C", VA = "0xE2744C")]
	private void Update()
	{
	}

	[Token(Token = "0x60019B0")]
	[Address(RVA = "0xE27394", Offset = "0xE27394", VA = "0xE27394")]
	private void Reset()
	{
	}

	[Token(Token = "0x60019B1")]
	[Address(RVA = "0xE27534", Offset = "0xE27534", VA = "0xE27534")]
	private void EnterDigit(int val)
	{
	}

	[Token(Token = "0x60019B2")]
	[Address(RVA = "0xE275F8", Offset = "0xE275F8", VA = "0xE275F8")]
	private void EnterDelete()
	{
	}

	[Token(Token = "0x60019B3")]
	[Address(RVA = "0xE276F4", Offset = "0xE276F4", VA = "0xE276F4")]
	private void OnPasteCode()
	{
	}

	[Token(Token = "0x60019B4")]
	[Address(RVA = "0xE27874", Offset = "0xE27874", VA = "0xE27874")]
	private void OnReceive()
	{
	}

	[Token(Token = "0x60019B5")]
	[Address(RVA = "0xE27B30", Offset = "0xE27B30", VA = "0xE27B30")]
	private void OnConfirmedReceivedInfo()
	{
	}

	[Token(Token = "0x60019B6")]
	[Address(RVA = "0xE27B74", Offset = "0xE27B74", VA = "0xE27B74")]
	private void CallbackReceiveGiftResult(string save)
	{
	}

	[Token(Token = "0x60019B7")]
	[Address(RVA = "0xE280C0", Offset = "0xE280C0", VA = "0xE280C0")]
	private void CallbackReceiveGiftError(ServerWWWErrorCode err)
	{
	}

	[Token(Token = "0x60019B8")]
	[Address(RVA = "0xE28348", Offset = "0xE28348", VA = "0xE28348")]
	public WindowReceiveGift()
	{
	}
}
[Token(Token = "0x20003CD")]
public class WindowSendGift : MonoBehaviour
{
	[Token(Token = "0x4001BFD")]
	public const int giftVersion = 1;

	[Token(Token = "0x4001BFE")]
	private const int cashPiece = 100;

	[Token(Token = "0x4001BFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject sendWindow;

	[Token(Token = "0x4001C00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject codeWindow;

	[Token(Token = "0x4001C01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMesh planeName;

	[Token(Token = "0x4001C02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMesh cashValue;

	[Token(Token = "0x4001C03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMesh message;

	[Token(Token = "0x4001C04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMesh[] codeDigits;

	[Token(Token = "0x4001C05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected PlayerPlane selectedPlane;

	[Token(Token = "0x4001C06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected int cash;

	[Token(Token = "0x4001C07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	protected bool sending;

	[Token(Token = "0x4001C08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected int giftCode;

	[Token(Token = "0x4001C09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	protected int sendCash;

	[Token(Token = "0x4001C0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected PlayerPlane sendPlane;

	[Token(Token = "0x4001C0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static WindowSendGift instance;

	[Token(Token = "0x60019B9")]
	[Address(RVA = "0xE28350", Offset = "0xE28350", VA = "0xE28350")]
	private void Awake()
	{
	}

	[Token(Token = "0x60019BA")]
	[Address(RVA = "0xE283C8", Offset = "0xE283C8", VA = "0xE283C8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60019BB")]
	[Address(RVA = "0xE28554", Offset = "0xE28554", VA = "0xE28554")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60019BC")]
	[Address(RVA = "0xE28458", Offset = "0xE28458", VA = "0xE28458")]
	private void Repaint()
	{
	}

	[Token(Token = "0x60019BD")]
	[Address(RVA = "0xE28558", Offset = "0xE28558", VA = "0xE28558")]
	private void OnAddFounds()
	{
	}

	[Token(Token = "0x60019BE")]
	[Address(RVA = "0xE28670", Offset = "0xE28670", VA = "0xE28670")]
	private void OnRemoveFounds()
	{
	}

	[Token(Token = "0x60019BF")]
	[Address(RVA = "0xE28704", Offset = "0xE28704", VA = "0xE28704")]
	public void OnSelectedPlane(PlayerPlane plane)
	{
	}

	[Token(Token = "0x60019C0")]
	[Address(RVA = "0xE28868", Offset = "0xE28868", VA = "0xE28868")]
	private void OnSend()
	{
	}

	[Token(Token = "0x60019C1")]
	[Address(RVA = "0xE28B9C", Offset = "0xE28B9C", VA = "0xE28B9C")]
	public static string GetSave(int cash, PlayerPlane pp)
	{
		return null;
	}

	[Token(Token = "0x60019C2")]
	[Address(RVA = "0xE26C18", Offset = "0xE26C18", VA = "0xE26C18")]
	public static bool ParseSave(string save, out int cash, out string giverName, out PlayerPlane pp)
	{
		return default(bool);
	}

	[Token(Token = "0x60019C3")]
	[Address(RVA = "0xE28D4C", Offset = "0xE28D4C", VA = "0xE28D4C")]
	private void OnCopyCode()
	{
	}

	[Token(Token = "0x60019C4")]
	[Address(RVA = "0xE28D6C", Offset = "0xE28D6C", VA = "0xE28D6C")]
	private void OnConfirmedReceivedCode()
	{
	}

	[Token(Token = "0x60019C5")]
	[Address(RVA = "0xE28DB8", Offset = "0xE28DB8", VA = "0xE28DB8")]
	private void CallbackSendGiftResult(int code)
	{
	}

	[Token(Token = "0x60019C6")]
	[Address(RVA = "0xE29030", Offset = "0xE29030", VA = "0xE29030")]
	private void CallbackSendGiftError(ServerWWWErrorCode err)
	{
	}

	[Token(Token = "0x60019C7")]
	[Address(RVA = "0xE290F8", Offset = "0xE290F8", VA = "0xE290F8")]
	public WindowSendGift()
	{
	}
}
[Token(Token = "0x20003CE")]
public class WindowSettings : MonoBehaviour
{
	[Token(Token = "0x20003CF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9186EC", Offset = "0x9186EC")]
	private sealed class <ChangeResolution>d__149 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WindowSettings <>4__this;

		[Token(Token = "0x1700016B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A28")]
			[Address(RVA = "0x11B9818", Offset = "0x11B9818", VA = "0x11B9818", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A2A")]
			[Address(RVA = "0x11B9860", Offset = "0x11B9860", VA = "0x11B9860", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A25")]
		[Address(RVA = "0x11B969C", Offset = "0x11B969C", VA = "0x11B969C")]
		[DebuggerHidden]
		public <ChangeResolution>d__149(int <>1__state)
		{
		}

		[Token(Token = "0x6001A26")]
		[Address(RVA = "0x11B96C8", Offset = "0x11B96C8", VA = "0x11B96C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A27")]
		[Address(RVA = "0x11B96CC", Offset = "0x11B96CC", VA = "0x11B96CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A29")]
		[Address(RVA = "0x11B9820", Offset = "0x11B9820", VA = "0x11B9820", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001C0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public WindowControlsHelp controlsHelpWnd;

	[Token(Token = "0x4001C0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject multiplayerPlayersWnd;

	[Token(Token = "0x4001C0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] subWindows;

	[Token(Token = "0x4001C0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject closeButton;

	[Token(Token = "0x4001C10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject closeButton2;

	[Token(Token = "0x4001C11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject restorePurchasesButton;

	[Token(Token = "0x4001C12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject missionTestCode;

	[Token(Token = "0x4001C13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject[] testButtons;

	[Token(Token = "0x4001C14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public CloudSave_Checkbox testCheckboxImmortal;

	[Token(Token = "0x4001C15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public CloudSave_Checkbox testCheckboxSuperStrong;

	[Token(Token = "0x4001C16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public CloudSave_Checkbox testCheckboxFPS;

	[Token(Token = "0x4001C17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public CloudSave_Checkbox testCheckboxDisableColorSetup;

	[Token(Token = "0x4001C18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public CloudSave_Checkbox testCheckboxForceNightMission;

	[Token(Token = "0x4001C19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public CloudSave_Checkbox testCheckboxForceDayMission;

	[Token(Token = "0x4001C1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public CloudSave_Checkbox testCheckboxMultiLocalPlayerIsBot;

	[Token(Token = "0x4001C1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public MUI_InputText testInputSetMissionNum;

	[Token(Token = "0x4001C1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject testButtonSetMissionNum;

	[Token(Token = "0x4001C1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject testButtonSetFinishedMissions;

	[Token(Token = "0x4001C1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public TextMesh testDebugMissionName;

	[Token(Token = "0x4001C1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public TextMesh testForceMultiSpecialTask;

	[Token(Token = "0x4001C20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public CloudSave_Checkbox[] testCheckboxesCondition;

	[Token(Token = "0x4001C21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public CloudSave_Checkbox[] testCheckboxesWeather;

	[Token(Token = "0x4001C22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject devModeButtons;

	[Token(Token = "0x4001C23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public CloudSave_Checkbox newsletterCheckbox;

	[Token(Token = "0x4001C24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject newsletterInfo;

	[Token(Token = "0x4001C25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject newsletterDisabled;

	[Token(Token = "0x4001C26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public TextMesh hardcoreModeText;

	[Token(Token = "0x4001C27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public TextMesh currentLanguageText;

	[Token(Token = "0x4001C28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObject currentLanguageFlag;

	[Token(Token = "0x4001C29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public GameObject langButtonPrefab;

	[Token(Token = "0x4001C2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public GameObject langButtonPrefabDx;

	[Token(Token = "0x4001C2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public GameObject langButtonPrefabDy;

	[Token(Token = "0x4001C2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public GameObject voiceButtonPrefab;

	[Token(Token = "0x4001C2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public GameObject voiceButtonPrefabDx;

	[Token(Token = "0x4001C2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public GameObject voiceButtonPrefabDy;

	[Token(Token = "0x4001C2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public GameObject languageApplyButton;

	[Token(Token = "0x4001C30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public CloudSave_Checkbox checkboxVoiceTransmission;

	[Token(Token = "0x4001C31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public CloudSave_Checkbox checkboxFullScreen;

	[Token(Token = "0x4001C32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public GameObject resolutionLabel;

	[Token(Token = "0x4001C33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public TextMesh resolutionValue;

	[Token(Token = "0x4001C34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public GameObject resolutionPrev;

	[Token(Token = "0x4001C35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public GameObject resolutionNext;

	[Token(Token = "0x4001C36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public GameObject resolutionPrev_off;

	[Token(Token = "0x4001C37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public GameObject resolutionNext_off;

	[Token(Token = "0x4001C38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public GameObject monitorLabel;

	[Token(Token = "0x4001C39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public TextMesh monitorValue;

	[Token(Token = "0x4001C3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public GameObject monitorPrev;

	[Token(Token = "0x4001C3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public GameObject monitorNext;

	[Token(Token = "0x4001C3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public GameObject monitorPrev_off;

	[Token(Token = "0x4001C3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public GameObject monitorNext_off;

	[Token(Token = "0x4001C3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public GameObject qualityLabel;

	[Token(Token = "0x4001C3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public TextMesh qualityValue;

	[Token(Token = "0x4001C40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public GameObject qualityPrev;

	[Token(Token = "0x4001C41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public GameObject qualityNext;

	[Token(Token = "0x4001C42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public GameObject qualityPrev_off;

	[Token(Token = "0x4001C43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public GameObject qualityNext_off;

	[Token(Token = "0x4001C44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public GameObject buttonApplyResolution;

	[Token(Token = "0x4001C45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public GameObject nightLight;

	[Token(Token = "0x4001C46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public TextMesh versionInfo;

	[Token(Token = "0x4001C47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public MUI_Slider sliderRenderScale;

	[Token(Token = "0x4001C48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public TextMesh tmRenderScale;

	[Token(Token = "0x4001C49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public MUI_InputText inputPlayerName;

	[Token(Token = "0x4001C4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public TextMesh playerNameChangeStatus;

	[Token(Token = "0x4001C4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public Color playerNameChangeErrorColor;

	[Token(Token = "0x4001C4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public GameObject buttonChangePlayerName;

	[Token(Token = "0x4001C4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	public TextMesh serverText;

	[Token(Token = "0x4001C4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	public GameObject fixedServerNotRecommendedMessage;

	[Token(Token = "0x4001C4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	public GameObject microphoneGroup;

	[Token(Token = "0x4001C50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	public TextMesh microphoneTypeValue;

	[Token(Token = "0x4001C51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	public TextMesh microphoneDeviceValue;

	[Token(Token = "0x4001C52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	public GameObject controlsSetupPivot;

	[Token(Token = "0x4001C53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	public GameObject[] hideWhenControlsSetup;

	[Token(Token = "0x4001C54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	private bool showMissionCode;

	[Token(Token = "0x4001C55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x264")]
	private float prevClickCodeTime;

	[Token(Token = "0x4001C56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	private int clickCodeCnt;

	[Token(Token = "0x4001C57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	private List<Resolution> currentResolutions;

	[Token(Token = "0x4001C58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	private int currentFullScreen;

	[Token(Token = "0x4001C59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
	private int currentResolutionIndex;

	[Token(Token = "0x4001C5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	private int currentResolutionWidth;

	[Token(Token = "0x4001C5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
	private int currentResolutionHeight;

	[Token(Token = "0x4001C5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	private int currentMonitorIndex;

	[Token(Token = "0x4001C5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
	private int currentQualityIndex;

	[Token(Token = "0x4001C5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	private bool resolutionChanged;

	[Token(Token = "0x4001C5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x294")]
	private int restartNewMonitorIndex;

	[Token(Token = "0x4001C60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	private List<GameObject> languageSelectedMarks;

	[Token(Token = "0x4001C61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	private string selectedLanguage;

	[Token(Token = "0x4001C62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	private List<GameObject> voiceSelectedMarks;

	[Token(Token = "0x4001C63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	private string selectedVoice;

	[Token(Token = "0x4001C64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	private Color playerNameChangeNormalColor;

	[Token(Token = "0x4001C65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	protected ServerWWW requestPlayerName;

	[Token(Token = "0x4001C66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	private List<string> servers;

	[Token(Token = "0x4001C67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	private List<string> serversNames;

	[Token(Token = "0x4001C68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	private int currServerIdx;

	[Token(Token = "0x4001C69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	private string currServer;

	[Token(Token = "0x4001C6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	private string[] unityMicrophones;

	[Token(Token = "0x4001C6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
	private string[] photonMicrophones;

	[Token(Token = "0x4001C6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
	private Recorder.MicType microphoneType;

	[Token(Token = "0x4001C6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x304")]
	private int unityMicIndex;

	[Token(Token = "0x4001C6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
	private int photonMicIndex;

	[Token(Token = "0x4001C6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30C")]
	private bool openedControls;

	[Token(Token = "0x4001C70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool openLanguageAfterLoad;

	[Token(Token = "0x4001C71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static WindowSettings instance;

	[Token(Token = "0x60019C8")]
	[Address(RVA = "0xE29100", Offset = "0xE29100", VA = "0xE29100")]
	private void Awake()
	{
	}

	[Token(Token = "0x60019C9")]
	[Address(RVA = "0xE292FC", Offset = "0xE292FC", VA = "0xE292FC")]
	private void Start()
	{
	}

	[Token(Token = "0x60019CA")]
	[Address(RVA = "0xE2C134", Offset = "0xE2C134", VA = "0xE2C134")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60019CB")]
	[Address(RVA = "0xE2E2E0", Offset = "0xE2E2E0", VA = "0xE2E2E0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60019CC")]
	[Address(RVA = "0xE2E3E4", Offset = "0xE2E3E4", VA = "0xE2E3E4")]
	private void OnSliderRenderScaleChanged(MUI_Slider slider, float val)
	{
	}

	[Token(Token = "0x60019CD")]
	[Address(RVA = "0xE2E5D0", Offset = "0xE2E5D0", VA = "0xE2E5D0")]
	private void OnManageUnityPrivacy()
	{
	}

	[Token(Token = "0x60019CE")]
	[Address(RVA = "0xE2E69C", Offset = "0xE2E69C", VA = "0xE2E69C")]
	private void OnUnityPrivacyFailure(string reason)
	{
	}

	[Token(Token = "0x60019CF")]
	[Address(RVA = "0xE2E72C", Offset = "0xE2E72C", VA = "0xE2E72C")]
	private void OnUnityPrivacyURLReceived(string url)
	{
	}

	[Token(Token = "0x60019D0")]
	[Address(RVA = "0xE2E7C8", Offset = "0xE2E7C8", VA = "0xE2E7C8")]
	private void OnChangedSignToNewsletterCheckbox(bool signed)
	{
	}

	[Token(Token = "0x60019D1")]
	[Address(RVA = "0xE2E8F0", Offset = "0xE2E8F0", VA = "0xE2E8F0")]
	private void OnClickMissionCode()
	{
	}

	[Token(Token = "0x60019D2")]
	[Address(RVA = "0xE2E9CC", Offset = "0xE2E9CC", VA = "0xE2E9CC")]
	private void OnClickTestKillAllEnemies()
	{
	}

	[Token(Token = "0x60019D3")]
	[Address(RVA = "0xE2EA3C", Offset = "0xE2EA3C", VA = "0xE2EA3C")]
	private void OnClickTestHitAllEnemies()
	{
	}

	[Token(Token = "0x60019D4")]
	[Address(RVA = "0xE2EA98", Offset = "0xE2EA98", VA = "0xE2EA98")]
	private void OnClickTestKillTaskEnemies()
	{
	}

	[Token(Token = "0x60019D5")]
	[Address(RVA = "0xE2EB08", Offset = "0xE2EB08", VA = "0xE2EB08")]
	private void OnSwitchTestImmortal(bool on)
	{
	}

	[Token(Token = "0x60019D6")]
	[Address(RVA = "0xE2EBF8", Offset = "0xE2EBF8", VA = "0xE2EBF8")]
	private void OnSwitchTestSuperStrong(bool on)
	{
	}

	[Token(Token = "0x60019D7")]
	[Address(RVA = "0xE2ECE8", Offset = "0xE2ECE8", VA = "0xE2ECE8")]
	private void OnSwitchTestFPS(bool on)
	{
	}

	[Token(Token = "0x60019D8")]
	[Address(RVA = "0xE2EDD8", Offset = "0xE2EDD8", VA = "0xE2EDD8")]
	private void OnSwitchMultiLocalPlayerIsBot(bool on)
	{
	}

	[Token(Token = "0x60019D9")]
	[Address(RVA = "0xE2EEC8", Offset = "0xE2EEC8", VA = "0xE2EEC8")]
	private void OnSwitchTestForceNightMission(bool on)
	{
	}

	[Token(Token = "0x60019DA")]
	[Address(RVA = "0xE2EFE8", Offset = "0xE2EFE8", VA = "0xE2EFE8")]
	private void OnSwitchTestForceDayMission(bool on)
	{
	}

	[Token(Token = "0x60019DB")]
	[Address(RVA = "0xE2A418", Offset = "0xE2A418", VA = "0xE2A418")]
	private void UpdateTestConditionCheckboxes()
	{
	}

	[Token(Token = "0x60019DC")]
	[Address(RVA = "0xE2A630", Offset = "0xE2A630", VA = "0xE2A630")]
	private void UpdateTestWeatherCheckboxes()
	{
	}

	[Token(Token = "0x60019DD")]
	[Address(RVA = "0xE2F108", Offset = "0xE2F108", VA = "0xE2F108")]
	private void OnSwitchTestCondition(CloudSave_Checkbox checkbox)
	{
	}

	[Token(Token = "0x60019DE")]
	[Address(RVA = "0xE2F278", Offset = "0xE2F278", VA = "0xE2F278")]
	private void OnSwitchTestWeather(CloudSave_Checkbox checkbox)
	{
	}

	[Token(Token = "0x60019DF")]
	[Address(RVA = "0xE2F3E8", Offset = "0xE2F3E8", VA = "0xE2F3E8")]
	private void OnClickTestSetMissionNum()
	{
	}

	[Token(Token = "0x60019E0")]
	[Address(RVA = "0xE2F524", Offset = "0xE2F524", VA = "0xE2F524")]
	private void OnClickTestSetFinishedMissions()
	{
	}

	[Token(Token = "0x60019E1")]
	[Address(RVA = "0xE2F664", Offset = "0xE2F664", VA = "0xE2F664")]
	private void OnSwitchForcedMultiSpecialTask()
	{
	}

	[Token(Token = "0x60019E2")]
	[Address(RVA = "0xE2A848", Offset = "0xE2A848", VA = "0xE2A848")]
	private void FillLanguagesScreen()
	{
	}

	[Token(Token = "0x60019E3")]
	[Address(RVA = "0xE2F970", Offset = "0xE2F970", VA = "0xE2F970")]
	private void OnShowLanguageScreen()
	{
	}

	[Token(Token = "0x60019E4")]
	[Address(RVA = "0xE2C968", Offset = "0xE2C968", VA = "0xE2C968")]
	private void SelectLanguage(string lan)
	{
	}

	[Token(Token = "0x60019E5")]
	[Address(RVA = "0xE2FA40", Offset = "0xE2FA40", VA = "0xE2FA40")]
	private void SetLanguage(string lan)
	{
	}

	[Token(Token = "0x60019E6")]
	[Address(RVA = "0xE2CA88", Offset = "0xE2CA88", VA = "0xE2CA88")]
	private void SelectVoice(string vo)
	{
	}

	[Token(Token = "0x60019E7")]
	[Address(RVA = "0xE2FBC4", Offset = "0xE2FBC4", VA = "0xE2FBC4")]
	private void SetVoice(string vo)
	{
	}

	[Token(Token = "0x60019E8")]
	[Address(RVA = "0xE2CBA8", Offset = "0xE2CBA8", VA = "0xE2CBA8")]
	private void UpdateLanguageApplyButton()
	{
	}

	[Token(Token = "0x60019E9")]
	[Address(RVA = "0xE2FBEC", Offset = "0xE2FBEC", VA = "0xE2FBEC")]
	private void OnApplyChangedLanguage()
	{
	}

	[Token(Token = "0x60019EA")]
	[Address(RVA = "0xE2BD3C", Offset = "0xE2BD3C", VA = "0xE2BD3C")]
	private void FillCurrentLanguage()
	{
	}

	[Token(Token = "0x60019EB")]
	[Address(RVA = "0xE2CD14", Offset = "0xE2CD14", VA = "0xE2CD14")]
	private void FillResolutions()
	{
	}

	[Token(Token = "0x60019EC")]
	[Address(RVA = "0xE2FE38", Offset = "0xE2FE38", VA = "0xE2FE38")]
	private void OnSwitchFullscreen(bool on)
	{
	}

	[Token(Token = "0x60019ED")]
	[Address(RVA = "0xE2FEC4", Offset = "0xE2FEC4", VA = "0xE2FEC4")]
	private void OnPrevResolution()
	{
	}

	[Token(Token = "0x60019EE")]
	[Address(RVA = "0xE30008", Offset = "0xE30008", VA = "0xE30008")]
	private void OnNextResolution()
	{
	}

	[Token(Token = "0x60019EF")]
	[Address(RVA = "0xE30164", Offset = "0xE30164", VA = "0xE30164")]
	private void OnPrevMonitor()
	{
	}

	[Token(Token = "0x60019F0")]
	[Address(RVA = "0xE30200", Offset = "0xE30200", VA = "0xE30200")]
	private void OnNextMonitor()
	{
	}

	[Token(Token = "0x60019F1")]
	[Address(RVA = "0xE301F0", Offset = "0xE301F0", VA = "0xE301F0")]
	private void SwitchMonitor(int newIndex)
	{
	}

	[Token(Token = "0x60019F2")]
	[Address(RVA = "0xE302E8", Offset = "0xE302E8", VA = "0xE302E8")]
	private void MonitorRestartMessageResult(bool ret)
	{
	}

	[Token(Token = "0x60019F3")]
	[Address(RVA = "0xE3071C", Offset = "0xE3071C", VA = "0xE3071C")]
	private void OnPrevQuality()
	{
	}

	[Token(Token = "0x60019F4")]
	[Address(RVA = "0xE307DC", Offset = "0xE307DC", VA = "0xE307DC")]
	private void OnNextQuality()
	{
	}

	[Token(Token = "0x60019F5")]
	[Address(RVA = "0xE308C8", Offset = "0xE308C8", VA = "0xE308C8")]
	private void OnApplyResolutionChanges()
	{
	}

	[Token(Token = "0x60019F6")]
	[Address(RVA = "0xE305E4", Offset = "0xE305E4", VA = "0xE305E4")]
	private void SaveResolutionToPrefs()
	{
	}

	[Token(Token = "0x60019F7")]
	[Address(RVA = "0xE30958", Offset = "0xE30958", VA = "0xE30958")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92B924", Offset = "0x92B924")]
	private IEnumerator ChangeResolution()
	{
		return null;
	}

	[Token(Token = "0x60019F8")]
	[Address(RVA = "0xE2E35C", Offset = "0xE2E35C", VA = "0xE2E35C")]
	private void CancelRequestPlayerName()
	{
	}

	[Token(Token = "0x60019F9")]
	[Address(RVA = "0xE309C4", Offset = "0xE309C4", VA = "0xE309C4")]
	private void OnChangePlayerName()
	{
	}

	[Token(Token = "0x60019FA")]
	[Address(RVA = "0xE3128C", Offset = "0xE3128C", VA = "0xE3128C")]
	private void CallbackChangePlayerName(bool changed)
	{
	}

	[Token(Token = "0x60019FB")]
	[Address(RVA = "0xE31534", Offset = "0xE31534", VA = "0xE31534")]
	private void CallbackChangePlayerNameError(ServerWWWErrorCode e)
	{
	}

	[Token(Token = "0x60019FC")]
	[Address(RVA = "0xE311A4", Offset = "0xE311A4", VA = "0xE311A4")]
	public static bool FilterBadWordPlayerName(string name)
	{
		return default(bool);
	}

	[Token(Token = "0x60019FD")]
	[Address(RVA = "0xE30ED8", Offset = "0xE30ED8", VA = "0xE30ED8")]
	public static string CheckValidNameLetters(string name)
	{
		return null;
	}

	[Token(Token = "0x60019FE")]
	[Address(RVA = "0xE3107C", Offset = "0xE3107C", VA = "0xE3107C")]
	protected void ShowPlayerNameMessage(string msg, bool error)
	{
	}

	[Token(Token = "0x60019FF")]
	[Address(RVA = "0xE31710", Offset = "0xE31710", VA = "0xE31710")]
	private void OnClickVoiceTransmission()
	{
	}

	[Token(Token = "0x6001A00")]
	[Address(RVA = "0xE319BC", Offset = "0xE319BC", VA = "0xE319BC")]
	public static string GetCurrentServerName(out bool best)
	{
		return null;
	}

	[Token(Token = "0x6001A01")]
	[Address(RVA = "0xE2D9A4", Offset = "0xE2D9A4", VA = "0xE2D9A4")]
	private void FillServers()
	{
	}

	[Token(Token = "0x6001A02")]
	[Address(RVA = "0xE31C34", Offset = "0xE31C34", VA = "0xE31C34")]
	private void OnServerPrev()
	{
	}

	[Token(Token = "0x6001A03")]
	[Address(RVA = "0xE31EB0", Offset = "0xE31EB0", VA = "0xE31EB0")]
	private void OnServerNext()
	{
	}

	[Token(Token = "0x6001A04")]
	[Address(RVA = "0xE31C94", Offset = "0xE31C94", VA = "0xE31C94")]
	private void SetServer(int idx)
	{
	}

	[Token(Token = "0x6001A05")]
	[Address(RVA = "0xE2E030", Offset = "0xE2E030", VA = "0xE2E030")]
	private void FillMicrophone()
	{
	}

	[Token(Token = "0x6001A06")]
	[Address(RVA = "0xE31F10", Offset = "0xE31F10", VA = "0xE31F10")]
	private void OnMicrophoneTypeNext()
	{
	}

	[Token(Token = "0x6001A07")]
	[Address(RVA = "0xE31F58", Offset = "0xE31F58", VA = "0xE31F58")]
	private void OnMicrophoneTypePrev()
	{
	}

	[Token(Token = "0x6001A08")]
	[Address(RVA = "0xE31F5C", Offset = "0xE31F5C", VA = "0xE31F5C")]
	private void OnMicrophoneDeviceNext()
	{
	}

	[Token(Token = "0x6001A09")]
	[Address(RVA = "0xE32004", Offset = "0xE32004", VA = "0xE32004")]
	private void OnMicrophoneDevicePrev()
	{
	}

	[Token(Token = "0x6001A0A")]
	[Address(RVA = "0xE320A4", Offset = "0xE320A4", VA = "0xE320A4")]
	private void OnShowControlsSetup()
	{
	}

	[Token(Token = "0x6001A0B")]
	[Address(RVA = "0xE3228C", Offset = "0xE3228C", VA = "0xE3228C")]
	public bool IsOpenSettingsOrOtherWnd()
	{
		return default(bool);
	}

	[Token(Token = "0x6001A0C")]
	[Address(RVA = "0xE323B4", Offset = "0xE323B4", VA = "0xE323B4")]
	public bool IsOpenControlsSetup()
	{
		return default(bool);
	}

	[Token(Token = "0x6001A0D")]
	[Address(RVA = "0xE323BC", Offset = "0xE323BC", VA = "0xE323BC")]
	public void CloseControlsSetup(bool callController = true)
	{
	}

	[Token(Token = "0x6001A0E")]
	[Address(RVA = "0xE3250C", Offset = "0xE3250C", VA = "0xE3250C")]
	private void UnPause()
	{
	}

	[Token(Token = "0x6001A0F")]
	[Address(RVA = "0xE32510", Offset = "0xE32510", VA = "0xE32510")]
	private void OnCloseSettings()
	{
	}

	[Token(Token = "0x6001A10")]
	[Address(RVA = "0xE32690", Offset = "0xE32690", VA = "0xE32690")]
	private void OnBackToBase()
	{
	}

	[Token(Token = "0x6001A11")]
	[Address(RVA = "0xE328C8", Offset = "0xE328C8", VA = "0xE328C8")]
	private void WinMission()
	{
	}

	[Token(Token = "0x6001A12")]
	[Address(RVA = "0xE32924", Offset = "0xE32924", VA = "0xE32924")]
	private void Condition_IsMission(ShowWhenScriptConditionResult result)
	{
	}

	[Token(Token = "0x6001A13")]
	[Address(RVA = "0xE32998", Offset = "0xE32998", VA = "0xE32998")]
	public void Condition_IsMultiplayerMode(ShowWhenScriptConditionResult result)
	{
	}

	[Token(Token = "0x6001A14")]
	[Address(RVA = "0xE32A4C", Offset = "0xE32A4C", VA = "0xE32A4C")]
	public void Condition_IsRestartMissionAvailable(ShowWhenScriptConditionResult result)
	{
	}

	[Token(Token = "0x6001A15")]
	[Address(RVA = "0xE32BCC", Offset = "0xE32BCC", VA = "0xE32BCC")]
	public void Condition_IsMultiplayerPlayersAvailable(ShowWhenScriptConditionResult result)
	{
	}

	[Token(Token = "0x6001A16")]
	[Address(RVA = "0xE32D10", Offset = "0xE32D10", VA = "0xE32D10")]
	public void Condition_IsRestartMissionNotAvailable(ShowWhenScriptConditionResult result)
	{
	}

	[Token(Token = "0x6001A17")]
	[Address(RVA = "0xE32E14", Offset = "0xE32E14", VA = "0xE32E14")]
	public void Condition_IsExitMissionAvailable(ShowWhenScriptConditionResult result)
	{
	}

	[Token(Token = "0x6001A18")]
	[Address(RVA = "0xE32ECC", Offset = "0xE32ECC", VA = "0xE32ECC")]
	public void Condition_IsExitMissionNotAvailable(ShowWhenScriptConditionResult result)
	{
	}

	[Token(Token = "0x6001A19")]
	[Address(RVA = "0xE32F88", Offset = "0xE32F88", VA = "0xE32F88")]
	public void Condition_IsMultiplayerModeControlsSetupNotAvailable(ShowWhenScriptConditionResult result)
	{
	}

	[Token(Token = "0x6001A1A")]
	[Address(RVA = "0xE33088", Offset = "0xE33088", VA = "0xE33088")]
	public void Condition_IsControlsSetupAvailable(ShowWhenScriptConditionResult result)
	{
	}

	[Token(Token = "0x6001A1B")]
	[Address(RVA = "0xE330FC", Offset = "0xE330FC", VA = "0xE330FC")]
	public void Condition_IsControlsSetupNotAvailable(ShowWhenScriptConditionResult result)
	{
	}

	[Token(Token = "0x6001A1C")]
	[Address(RVA = "0xE33174", Offset = "0xE33174", VA = "0xE33174")]
	public void Condition_IsNotMultiplayerMode(ShowWhenScriptConditionResult result)
	{
	}

	[Token(Token = "0x6001A1D")]
	[Address(RVA = "0xE3322C", Offset = "0xE3322C", VA = "0xE3322C")]
	public void Condition_IsMultiplayerVoiceAvailable(ShowWhenScriptConditionResult result)
	{
	}

	[Token(Token = "0x6001A1E")]
	[Address(RVA = "0xE33368", Offset = "0xE33368", VA = "0xE33368")]
	public void Condition_IsPicoChinaFixedServer(ShowWhenScriptConditionResult result)
	{
	}

	[Token(Token = "0x6001A1F")]
	[Address(RVA = "0xE333DC", Offset = "0xE333DC", VA = "0xE333DC")]
	public void Condition_IsNotPicoChinaFixedServer(ShowWhenScriptConditionResult result)
	{
	}

	[Token(Token = "0x6001A20")]
	[Address(RVA = "0xE33454", Offset = "0xE33454", VA = "0xE33454")]
	private void OnAdjustSeat()
	{
	}

	[Token(Token = "0x6001A21")]
	[Address(RVA = "0xE334BC", Offset = "0xE334BC", VA = "0xE334BC")]
	public WindowSettings()
	{
	}

	[Token(Token = "0x6001A23")]
	[Address(RVA = "0xE33640", Offset = "0xE33640", VA = "0xE33640")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92B984", Offset = "0x92B984")]
	private void <OnClickVoiceTransmission>b__157_0(PUNWrapper.RequestPermissionResult result)
	{
	}

	[Token(Token = "0x6001A24")]
	[Address(RVA = "0xE337F8", Offset = "0xE337F8", VA = "0xE337F8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92B994", Offset = "0x92B994")]
	private void <OnShowControlsSetup>b__168_0()
	{
	}
}
[Token(Token = "0x20003D0")]
public class Windsock : MonoBehaviour
{
	[Token(Token = "0x4001C75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float strength;

	[Token(Token = "0x4001C76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float phase;

	[Token(Token = "0x4001C77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float speed;

	[Token(Token = "0x4001C78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] bones;

	[Token(Token = "0x6001A2B")]
	[Address(RVA = "0x126029C", Offset = "0x126029C", VA = "0x126029C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001A2C")]
	[Address(RVA = "0x12602A0", Offset = "0x12602A0", VA = "0x12602A0")]
	private void Update()
	{
	}

	[Token(Token = "0x6001A2D")]
	[Address(RVA = "0x1260390", Offset = "0x1260390", VA = "0x1260390")]
	public Windsock()
	{
	}
}
[Token(Token = "0x20003D1")]
public class ZeppelinDestroyed : MonoBehaviour
{
	[Token(Token = "0x4001C79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool baloon;

	[Token(Token = "0x4001C7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer rend;

	[Token(Token = "0x4001C7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float fire;

	[Token(Token = "0x4001C7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float fallSpeed;

	[Token(Token = "0x4001C7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly float fallSpeedAcc;

	[Token(Token = "0x4001C7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float forwardSpeed;

	[Token(Token = "0x4001C7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 rotateSpeed;

	[Token(Token = "0x6001A2E")]
	[Address(RVA = "0xBD76BC", Offset = "0xBD76BC", VA = "0xBD76BC")]
	private void SetupForwardSpeed(float f)
	{
	}

	[Token(Token = "0x6001A2F")]
	[Address(RVA = "0xBD76C4", Offset = "0xBD76C4", VA = "0xBD76C4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001A30")]
	[Address(RVA = "0xBD7768", Offset = "0xBD7768", VA = "0xBD7768")]
	private void Update()
	{
	}

	[Token(Token = "0x6001A31")]
	[Address(RVA = "0xBD7A64", Offset = "0xBD7A64", VA = "0xBD7A64")]
	public ZeppelinDestroyed()
	{
	}
}
[Token(Token = "0x20003D2")]
public class ShipFireSpawner : MonoBehaviour
{
	[Token(Token = "0x4001C80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int hpPercent;

	[Token(Token = "0x4001C81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Hull hull;

	[Token(Token = "0x4001C82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject fire;

	[Token(Token = "0x4001C83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameObject prefab;

	[Token(Token = "0x6001A33")]
	[Address(RVA = "0x10AABC4", Offset = "0x10AABC4", VA = "0x10AABC4")]
	private void Start()
	{
	}

	[Token(Token = "0x6001A34")]
	[Address(RVA = "0x10AAE24", Offset = "0x10AAE24", VA = "0x10AAE24")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001A35")]
	[Address(RVA = "0x10AAE28", Offset = "0x10AAE28", VA = "0x10AAE28")]
	private void Dispose()
	{
	}

	[Token(Token = "0x6001A36")]
	[Address(RVA = "0x10AAF2C", Offset = "0x10AAF2C", VA = "0x10AAF2C")]
	private void HullHit()
	{
	}

	[Token(Token = "0x6001A37")]
	[Address(RVA = "0x10AAF90", Offset = "0x10AAF90", VA = "0x10AAF90")]
	private void Spawn()
	{
	}

	[Token(Token = "0x6001A38")]
	[Address(RVA = "0x10AB104", Offset = "0x10AB104", VA = "0x10AB104")]
	private void TransferFireToWreck(Hull h)
	{
	}

	[Token(Token = "0x6001A39")]
	[Address(RVA = "0x10AAD30", Offset = "0x10AAD30", VA = "0x10AAD30")]
	private static GameObject GetPrefab()
	{
		return null;
	}

	[Token(Token = "0x6001A3A")]
	[Address(RVA = "0x10AB210", Offset = "0x10AB210", VA = "0x10AB210")]
	public ShipFireSpawner()
	{
	}
}
[Token(Token = "0x20003D3")]
public static class LODMaker
{
	[Token(Token = "0x6001A3B")]
	[Address(RVA = "0x17ED8BC", Offset = "0x17ED8BC", VA = "0x17ED8BC")]
	public static Mesh MakeLODMesh(Mesh orig, float aMaxWeight, bool recalcNormals = true, float removeSmallParts = 1f, bool reuseOldMesh = false)
	{
		return null;
	}

	[Token(Token = "0x6001A3C")]
	[Address(RVA = "0x17ED8D8", Offset = "0x17ED8D8", VA = "0x17ED8D8")]
	public static Mesh MakeLODMesh(Mesh orig, float aMaxWeight, float removeSmallParts, float protectNormals, float protectUvs, float smallTrianglesFirst, float protectSubMeshesAndSharpEdges, bool recalcNormals, bool reuseOldMesh = false)
	{
		return null;
	}

	[Token(Token = "0x6001A3D")]
	[Address(RVA = "0x17EDA5C", Offset = "0x17EDA5C", VA = "0x17EDA5C")]
	private static void GetWeights(float aMaxWeight, float removeSmallParts, float protectNormals, float protectUvs, float smallTrianglesFirst, float protectSubMeshesAndSharpEdges, out float sideLengthWeight, out float oldAngleWeight, out float newAngleWeight, out float uvWeight, out float areaDiffWeight, out float normalWeight, out float vertexWeight, out float centerDistanceWeight)
	{
	}

	[Token(Token = "0x6001A3E")]
	[Address(RVA = "0x17EE704", Offset = "0x17EE704", VA = "0x17EE704")]
	public static void MakeLODMeshInBackground(object data)
	{
	}

	[Token(Token = "0x6001A3F")]
	[Address(RVA = "0x17EDB00", Offset = "0x17EDB00", VA = "0x17EDB00")]
	private static Mesh MakeLODMesh(Mesh orig, float maxWeight, float removeSmallParts, float sideLengthWeight, float oldAngleWeight, float newAngleWeight, float uvWeight, float areaDiffWeight, float normalWeight, float vertexWeight, float centerDistanceWeight, bool recalcNormals, bool reuseOldMesh)
	{
		return null;
	}

	[Token(Token = "0x6001A40")]
	[Address(RVA = "0x17EFAD4", Offset = "0x17EFAD4", VA = "0x17EFAD4")]
	private static void MakeLODMesh(Vector3[] vs, Vector3[] ns, Vector2[] uv1s, Vector2[] uv2s, Vector2[] uv3s, Vector2[] uv4s, Color32[] colors32, int[] ts, ref Matrix4x4[] bindposes, BoneWeight[] bws, ref int[] subMeshOffsets, Bounds meshBounds, float maxWeight, float removeSmallParts, float sideLengthWeight, float oldAngleWeight, float newAngleWeight, float uvWeight, float areaDiffWeight, float normalWeight, float vertexWeight, float centerDistanceWeight, out List<Vector3> newVs, out List<Vector3> newNs, out List<Vector2> newUv1s, out List<Vector2> newUv2s, out List<Vector2> newUv3s, out List<Vector2> newUv4s, out List<Color32> newColors32, out List<int> newTs, out List<BoneWeight> newBws)
	{
	}

	[Token(Token = "0x6001A41")]
	[Address(RVA = "0x17F371C", Offset = "0x17F371C", VA = "0x17F371C")]
	private static bool AnyWeightOK(float[] weights, float aMaxWeight)
	{
		return default(bool);
	}

	[Token(Token = "0x6001A42")]
	[Address(RVA = "0x17F2FBC", Offset = "0x17F2FBC", VA = "0x17F2FBC")]
	private static int[] GetAdjacentTriangles(int[] ts, int tIdx, List<List<int>> trianglesPerVertex, int[] uniqueVs, int[] triangleGroups, List<List<int>> trianglesPerGroup)
	{
		return null;
	}

	[Token(Token = "0x6001A43")]
	[Address(RVA = "0x17F6A60", Offset = "0x17F6A60", VA = "0x17F6A60")]
	private static void SetTriangleGroup(int tIdx0, int tIdx1, int[] triangleGroups, List<List<int>> trianglesPerGroup)
	{
	}

	[Token(Token = "0x6001A44")]
	[Address(RVA = "0x17F3778", Offset = "0x17F3778", VA = "0x17F3778")]
	private static void GetTotalAngleAndCenterDistanceForCorner(int[] ts, Vector3[] vs, int[] movedVs, int vertexIdx, Vector3[] centerDistances, ref float totalAngle, ref Vector3 totalCenterDist)
	{
	}

	[Token(Token = "0x6001A45")]
	[Address(RVA = "0x17F3C84", Offset = "0x17F3C84", VA = "0x17F3C84")]
	private static void GetTotalAngleAndCenterDistanceForNewCorner(int[] ts, Vector3[] vs, int[] movedVs, int[] uniqueVs, int vertexIdx, int newIdx, Vector3[] centerDistances, float maxWeight, ref float totalAngle, ref Vector3 totalCenterDist, ref bool flipsTriangles)
	{
	}

	[Token(Token = "0x6001A46")]
	[Address(RVA = "0x17F4358", Offset = "0x17F4358", VA = "0x17F4358")]
	private static void GetUVStretchAndAreaForCorner(int[] ts, Vector3[] vs, int[] movedVs, int[] uniqueVs, Vector2[] uvs, int cFrom, int cTo, ref float affectedUvAreaDiff, ref float affectedAreaDiff, ref float totalUvAreaDiff, ref float totalAreaDiff)
	{
	}

	[Token(Token = "0x6001A47")]
	[Address(RVA = "0x17F2F44", Offset = "0x17F2F44", VA = "0x17F2F44")]
	private static float GetNormalDiffForCorners(Vector3[] ns, int corner1, int corner2)
	{
		return default(float);
	}

	[Token(Token = "0x6001A48")]
	[Address(RVA = "0x17F4A60", Offset = "0x17F4A60", VA = "0x17F4A60")]
	private static void MergeVertices(ref int oldV, int newV, bool[] hasTwinVS, Vector3[] vs, int[] triangles, Vector2[] uv1s, Vector2[] uv2s, Vector2[] uv3s, Vector2[] uv4s, Color32[] colors32, bool[] deletedVertices, int[] movedVs, int[] uniqueVs, int[] movedUv1s, int[] movedUv2s, int[] movedUv3s, int[] movedUv4s, int[] movedColors, List<List<int>> trianglesPerVertex, bool logYN)
	{
	}

	[Token(Token = "0x6001A49")]
	[Address(RVA = "0x17F6E44", Offset = "0x17F6E44", VA = "0x17F6E44")]
	private static void MoveVertex(int oldV, int newV, int[] movedVs, int[] uniqueVs, int[] movedUv1s, int[] movedUv2s, int[] movedUv3s, int[] movedUv4s, int[] movedColors)
	{
	}

	[Token(Token = "0x6001A4A")]
	[Address(RVA = "0x17F4E30", Offset = "0x17F4E30", VA = "0x17F4E30")]
	private static void FillNewMeshArray(Vector3[] vs, bool[] vdel, int[] movedVs, Vector3[] ns, Vector2[] uv1s, int[] movedUv1s, Vector2[] uv2s, int[] movedUv2s, Vector2[] uv3s, int[] movedUv3s, Vector2[] uv4s, int[] movedUv4s, Color32[] colors32, int[] movedColors, BoneWeight[] bws, List<Vector3> newVs, List<Vector3> newNs, List<Vector2> newUv1s, List<Vector2> newUv2s, List<Vector2> newUv3s, List<Vector2> newUv4s, List<Color32> newColors32, List<BoneWeight> newBws, int[] o2n)
	{
	}

	[Token(Token = "0x6001A4B")]
	[Address(RVA = "0x17F54E8", Offset = "0x17F54E8", VA = "0x17F54E8")]
	private static void FillNewMeshTriangles(int[] oldTriangles, int[] o2n, List<int> newTriangles, int[] subMeshOffsets, int[] triangleGroups, List<int> newTGrps)
	{
	}

	[Token(Token = "0x6001A4C")]
	[Address(RVA = "0x17F653C", Offset = "0x17F653C", VA = "0x17F653C")]
	public static void RemoveUnusedVertices(List<Vector3> vs, List<Vector3> ns, List<Vector2> uv1s, List<Vector2> uv2s, List<Vector2> uv3s, List<Vector2> uv4s, List<Color32> colors32, List<BoneWeight> bws, List<int> ts)
	{
	}

	[Token(Token = "0x6001A4D")]
	[Address(RVA = "0x17F6FD8", Offset = "0x17F6FD8", VA = "0x17F6FD8")]
	public static void RemoveUnusedVertices(List<Vector3> vs, List<Vector3> ns, List<Vector2> uv1s, List<Vector2> uv2s, List<Vector2> uv3s, List<Vector2> uv4s, List<Color32> colors32, List<BoneWeight> bws, List<List<int>> subMeshes)
	{
	}

	[Token(Token = "0x6001A4E")]
	[Address(RVA = "0x17F7698", Offset = "0x17F7698", VA = "0x17F7698")]
	public static void RemoveUnusedVertices(List<Vector3> vs, List<Vector3> ns, List<Vector2> uv1s, List<Vector2> uv2s, List<Vector2> uv3s, List<Vector2> uv4s, List<Color32> colors32, List<BoneWeight> bws, Dictionary<Material, List<int>> subMeshes)
	{
	}

	[Token(Token = "0x6001A4F")]
	[Address(RVA = "0x17F5780", Offset = "0x17F5780", VA = "0x17F5780")]
	private static void RemoveEmptyTriangles(List<Vector3> newVs, List<Vector3> newNs, List<Vector2> newUv1s, List<Vector2> newUv2s, List<Vector2> newUv3s, List<Vector2> newUv4s, List<Color32> newColors32, List<int> newTs, List<BoneWeight> newBws, int[] subMeshOffsets, List<int> newTGrps)
	{
	}

	[Token(Token = "0x6001A50")]
	[Address(RVA = "0x17F5ED4", Offset = "0x17F5ED4", VA = "0x17F5ED4")]
	private static void RemoveMiniTriangleGroups(float removeSmallParts, Vector3 sizeMultiplier, float aMaxWeight, List<Vector3> newVs, List<int> newTs, int[] subMeshOffsets, List<int> newTGrps)
	{
	}

	[Token(Token = "0x6001A51")]
	[Address(RVA = "0x17F29AC", Offset = "0x17F29AC", VA = "0x17F29AC")]
	public static Mesh CreateNewMesh(Vector3[] vs, Vector3[] ns, Vector2[] uv1s, Vector2[] uv2s, Vector2[] uv3s, Vector2[] uv4s, Color32[] colors32, int[] ts, BoneWeight[] bws, Matrix4x4[] bindposes, int[] subMeshOffsets, bool recalcNormals)
	{
		return null;
	}

	[Token(Token = "0x6001A52")]
	[Address(RVA = "0x17F26B4", Offset = "0x17F26B4", VA = "0x17F26B4")]
	public static void FillMesh(Mesh mesh, Vector3[] vs, Vector3[] ns, Vector2[] uv1s, Vector2[] uv2s, Vector2[] uv3s, Vector2[] uv4s, Color32[] colors32, int[] ts, BoneWeight[] bws, Matrix4x4[] bindposes, int[] subMeshOffsets, bool recalcNormals)
	{
	}

	[Token(Token = "0x6001A53")]
	[Address(RVA = "0x17F4290", Offset = "0x17F4290", VA = "0x17F4290")]
	private static float AngleCornerDiff(float angle)
	{
		return default(float);
	}

	[Token(Token = "0x6001A54")]
	[Address(RVA = "0x17F430C", Offset = "0x17F430C", VA = "0x17F430C")]
	private static float AngleDiff(float angle)
	{
		return default(float);
	}

	[Token(Token = "0x6001A55")]
	[Address(RVA = "0x17F2E64", Offset = "0x17F2E64", VA = "0x17F2E64")]
	private static float Area(Vector3 p0, Vector3 p1, Vector3 p2)
	{
		return default(float);
	}

	[Token(Token = "0x6001A56")]
	[Address(RVA = "0x17F7F14", Offset = "0x17F7F14", VA = "0x17F7F14")]
	private static int GetVertexEqualTo(Vector3 v, List<int> orderedVertices, Vector3[] vs)
	{
		return default(int);
	}

	[Token(Token = "0x6001A57")]
	[Address(RVA = "0x17F2CC0", Offset = "0x17F2CC0", VA = "0x17F2CC0")]
	private static List<int> GetVerticesEqualTo(Vector3 v, List<int> orderedVertices, Vector3[] vs)
	{
		return null;
	}

	[Token(Token = "0x6001A58")]
	[Address(RVA = "0x17F8160", Offset = "0x17F8160", VA = "0x17F8160")]
	private static List<int> GetVerticesWithinBox(Vector3 from, Vector3 to, List<int> orderedVertices, Vector3[] vs)
	{
		return null;
	}

	[Token(Token = "0x6001A59")]
	[Address(RVA = "0x17F2A84", Offset = "0x17F2A84", VA = "0x17F2A84")]
	private static int GetLastVertexWithYSmaller(float y, List<int> orderedVertices, Vector3[] vs, int limitSearchRange)
	{
		return default(int);
	}

	[Token(Token = "0x6001A5A")]
	[Address(RVA = "0x17F8424", Offset = "0x17F8424", VA = "0x17F8424")]
	private static bool IsVertexObscured(Vector3[] vs, Vector3[] ns, int[] ts, bool[] vObscured, int[] uniqueVs, Vector3 vertexBoxSize, List<int> orderedVertices, List<List<int>> trianglesPerVertex, int[] subMeshIdxPerVertex, float maxObscureDist, bool hiddenByOtherSubmesh, Vector3 vertex, Vector3 normal, int i)
	{
		return default(bool);
	}

	[Token(Token = "0x6001A5B")]
	[Address(RVA = "0x17F89F0", Offset = "0x17F89F0", VA = "0x17F89F0")]
	public static float FindCollision(Vector3 fromPos, Vector3 direction, Vector3 pointOnPlane, Vector3 normalPlane)
	{
		return default(float);
	}

	[Token(Token = "0x6001A5C")]
	[Address(RVA = "0x17F25B4", Offset = "0x17F25B4", VA = "0x17F25B4")]
	private static void Log(string msg)
	{
	}
}
[Token(Token = "0x20003D4")]
public class LODSwitcher : MonoBehaviour
{
	[Token(Token = "0x4001C84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mesh[] lodMeshes;

	[Token(Token = "0x4001C85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] lodGameObjects;

	[Token(Token = "0x4001C86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float[] lodScreenSizes;

	[Token(Token = "0x4001C87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float deactivateAtDistance;

	[Token(Token = "0x4001C88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Camera customCamera;

	[Token(Token = "0x4001C89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MeshFilter meshFilter;

	[Token(Token = "0x4001C8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private SkinnedMeshRenderer skinnedMeshRenderer;

	[Token(Token = "0x4001C8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 centerOffset;

	[Token(Token = "0x4001C8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float pixelsPerMeter;

	[Token(Token = "0x4001C8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float objectSize;

	[Token(Token = "0x4001C8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int fixedLODLevel;

	[Token(Token = "0x4001C8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int lodLevel;

	[Token(Token = "0x4001C90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int frameOffset;

	[Token(Token = "0x4001C91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int frameInterval;

	[Token(Token = "0x6001A5D")]
	[Address(RVA = "0x113389C", Offset = "0x113389C", VA = "0x113389C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001A5E")]
	[Address(RVA = "0x1133D7C", Offset = "0x1133D7C", VA = "0x1133D7C")]
	public void ComputeDimensions()
	{
	}

	[Token(Token = "0x6001A5F")]
	[Address(RVA = "0x1134278", Offset = "0x1134278", VA = "0x1134278")]
	public void SetCustomCamera(Camera aCamera)
	{
	}

	[Token(Token = "0x6001A60")]
	[Address(RVA = "0x1134280", Offset = "0x1134280", VA = "0x1134280")]
	public void SetFixedLODLevel(int aLevel)
	{
	}

	[Token(Token = "0x6001A61")]
	[Address(RVA = "0x11342E4", Offset = "0x11342E4", VA = "0x11342E4")]
	public void ReleaseFixedLODLevel()
	{
	}

	[Token(Token = "0x6001A62")]
	[Address(RVA = "0x11342F0", Offset = "0x11342F0", VA = "0x11342F0")]
	public int GetLODLevel()
	{
		return default(int);
	}

	[Token(Token = "0x6001A63")]
	[Address(RVA = "0x11342CC", Offset = "0x11342CC", VA = "0x11342CC")]
	public int MaxLODLevel()
	{
		return default(int);
	}

	[Token(Token = "0x6001A64")]
	[Address(RVA = "0x11342F8", Offset = "0x11342F8", VA = "0x11342F8")]
	public Mesh GetMesh(int aLevel)
	{
		return null;
	}

	[Token(Token = "0x6001A65")]
	[Address(RVA = "0x1134338", Offset = "0x1134338", VA = "0x1134338")]
	public void SetMesh(Mesh aMesh, int aLevel)
	{
	}

	[Token(Token = "0x6001A66")]
	[Address(RVA = "0x11344C4", Offset = "0x11344C4", VA = "0x11344C4")]
	public void SetRelativeScreenSize(float aValue, int aLevel)
	{
	}

	[Token(Token = "0x6001A67")]
	[Address(RVA = "0x1134614", Offset = "0x1134614", VA = "0x1134614")]
	private void Update()
	{
	}

	[Token(Token = "0x6001A68")]
	[Address(RVA = "0x113465C", Offset = "0x113465C", VA = "0x113465C")]
	public Vector3 NearestCameraPositionForLOD(int aLevel)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001A69")]
	[Address(RVA = "0x1134844", Offset = "0x1134844", VA = "0x1134844")]
	public float ScreenPortion()
	{
		return default(float);
	}

	[Token(Token = "0x6001A6A")]
	[Address(RVA = "0x11340E4", Offset = "0x11340E4", VA = "0x11340E4")]
	private void ComputeLODLevel()
	{
	}

	[Token(Token = "0x6001A6B")]
	[Address(RVA = "0x11341A0", Offset = "0x11341A0", VA = "0x11341A0")]
	private void GetMeshFilter()
	{
	}

	[Token(Token = "0x6001A6C")]
	[Address(RVA = "0x1133AE0", Offset = "0x1133AE0", VA = "0x1133AE0")]
	public void SetLODLevel(int newLodLevel)
	{
	}

	[Token(Token = "0x6001A6D")]
	[Address(RVA = "0x11349A0", Offset = "0x11349A0", VA = "0x11349A0")]
	public LODSwitcher()
	{
	}
}
[Token(Token = "0x20003D5")]
public class SkipLanding : MonoBehaviour
{
	[Token(Token = "0x6001A6E")]
	[Address(RVA = "0x10B7BC0", Offset = "0x10B7BC0", VA = "0x10B7BC0")]
	private void Start()
	{
	}

	[Token(Token = "0x6001A6F")]
	[Address(RVA = "0x10B7C54", Offset = "0x10B7C54", VA = "0x10B7C54")]
	public void Click()
	{
	}

	[Token(Token = "0x6001A70")]
	[Address(RVA = "0x10B7D74", Offset = "0x10B7D74", VA = "0x10B7D74")]
	public SkipLanding()
	{
	}
}
[Token(Token = "0x20003D6")]
public class SkipTakeOff : MonoBehaviour
{
	[Token(Token = "0x6001A71")]
	[Address(RVA = "0x10B7D7C", Offset = "0x10B7D7C", VA = "0x10B7D7C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001A72")]
	[Address(RVA = "0x10B7E4C", Offset = "0x10B7E4C", VA = "0x10B7E4C")]
	public void Click()
	{
	}

	[Token(Token = "0x6001A73")]
	[Address(RVA = "0x10B7EA8", Offset = "0x10B7EA8", VA = "0x10B7EA8")]
	public SkipTakeOff()
	{
	}
}
[Token(Token = "0x20003D7")]
public class D
{
	[Token(Token = "0x6001A74")]
	public static void LogR<T>(T s)
	{
	}

	[Token(Token = "0x6001A75")]
	public static void LogG<T>(T s)
	{
	}

	[Token(Token = "0x6001A76")]
	public static void LogY<T>(T s)
	{
	}

	[Token(Token = "0x6001A77")]
	public static void Log<T>(T s)
	{
	}

	[Token(Token = "0x6001A78")]
	[Address(RVA = "0x102D4EC", Offset = "0x102D4EC", VA = "0x102D4EC")]
	public D()
	{
	}
}
[Token(Token = "0x20003D8")]
public class RND
{
	[Token(Token = "0x6001A79")]
	[Address(RVA = "0x1180EA4", Offset = "0x1180EA4", VA = "0x1180EA4")]
	public static void SetSeed(int i)
	{
	}

	[Token(Token = "0x6001A7A")]
	[Address(RVA = "0x1180EAC", Offset = "0x1180EAC", VA = "0x1180EAC")]
	public static float R(float a, float b)
	{
		return default(float);
	}

	[Token(Token = "0x6001A7B")]
	[Address(RVA = "0x1180EB4", Offset = "0x1180EB4", VA = "0x1180EB4")]
	public static int R(int a, int b)
	{
		return default(int);
	}

	[Token(Token = "0x6001A7C")]
	[Address(RVA = "0x1180EBC", Offset = "0x1180EBC", VA = "0x1180EBC")]
	public static float R01()
	{
		return default(float);
	}

	[Token(Token = "0x6001A7D")]
	[Address(RVA = "0x1180ECC", Offset = "0x1180ECC", VA = "0x1180ECC")]
	public static float D(int k)
	{
		return default(float);
	}

	[Token(Token = "0x6001A7E")]
	[Address(RVA = "0x1180EF0", Offset = "0x1180EF0", VA = "0x1180EF0")]
	public static float R11()
	{
		return default(float);
	}

	[Token(Token = "0x6001A7F")]
	[Address(RVA = "0x1180F00", Offset = "0x1180F00", VA = "0x1180F00")]
	public RND()
	{
	}
}
[Token(Token = "0x20003D9")]
public class Vector3Save
{
	[Token(Token = "0x4001C92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly char[] map;

	[Token(Token = "0x6001A80")]
	[Address(RVA = "0xE1AA74", Offset = "0xE1AA74", VA = "0xE1AA74")]
	public static string Vector3ToString(Vector3 vec)
	{
		return null;
	}

	[Token(Token = "0x6001A81")]
	[Address(RVA = "0xE1ACF8", Offset = "0xE1ACF8", VA = "0xE1ACF8")]
	public static Vector3 StringToVector3(string str)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001A82")]
	[Address(RVA = "0xE1ABD8", Offset = "0xE1ABD8", VA = "0xE1ABD8")]
	private static string IntToBase62(int n, int m)
	{
		return null;
	}

	[Token(Token = "0x6001A83")]
	[Address(RVA = "0xE1ADEC", Offset = "0xE1ADEC", VA = "0xE1ADEC")]
	private static int Base62ToInt(string str)
	{
		return default(int);
	}

	[Token(Token = "0x6001A84")]
	[Address(RVA = "0xE1AEF0", Offset = "0xE1AEF0", VA = "0xE1AEF0")]
	public Vector3Save()
	{
	}
}
[Token(Token = "0x20003DA")]
public static class Vector3Extensions
{
	[Token(Token = "0x6001A86")]
	[Address(RVA = "0xE1A0C0", Offset = "0xE1A0C0", VA = "0xE1A0C0")]
	public static Vector3 Flat(this Vector3 v)
	{
		return default(Vector3);
	}
}
[Token(Token = "0x20003DB")]
public class RenderCubemapLOD : MonoBehaviour
{
	[Token(Token = "0x20003DC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91870C", Offset = "0x91870C")]
	private sealed class <Start>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RenderCubemapLOD <>4__this;

		[Token(Token = "0x4001CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x1700016D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A95")]
			[Address(RVA = "0xD8E254", Offset = "0xD8E254", VA = "0xD8E254", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A97")]
			[Address(RVA = "0xD8E29C", Offset = "0xD8E29C", VA = "0xD8E29C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A92")]
		[Address(RVA = "0xD8E0CC", Offset = "0xD8E0CC", VA = "0xD8E0CC")]
		[DebuggerHidden]
		public <Start>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6001A93")]
		[Address(RVA = "0xD8E0F8", Offset = "0xD8E0F8", VA = "0xD8E0F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A94")]
		[Address(RVA = "0xD8E0FC", Offset = "0xD8E0FC", VA = "0xD8E0FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A96")]
		[Address(RVA = "0xD8E25C", Offset = "0xD8E25C", VA = "0xD8E25C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003DD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91871C", Offset = "0x91871C")]
	private sealed class <UpdateLODCubemap>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RenderCubemapLOD <>4__this;

		[Token(Token = "0x4001CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x1700016F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A9B")]
			[Address(RVA = "0xD8E410", Offset = "0xD8E410", VA = "0xD8E410", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000170")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A9D")]
			[Address(RVA = "0xD8E458", Offset = "0xD8E458", VA = "0xD8E458", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A98")]
		[Address(RVA = "0xD8E2A4", Offset = "0xD8E2A4", VA = "0xD8E2A4")]
		[DebuggerHidden]
		public <UpdateLODCubemap>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6001A99")]
		[Address(RVA = "0xD8E2D0", Offset = "0xD8E2D0", VA = "0xD8E2D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A9A")]
		[Address(RVA = "0xD8E2D4", Offset = "0xD8E2D4", VA = "0xD8E2D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A9C")]
		[Address(RVA = "0xD8E418", Offset = "0xD8E418", VA = "0xD8E418", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001C93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool renderSkyCubemap;

	[Token(Token = "0x4001C94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int skipFrames;

	[Token(Token = "0x4001C95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LayerMask layerMaskGroundSky;

	[Token(Token = "0x4001C96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public LayerMask layerMaskSky;

	[Token(Token = "0x4001C97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color camBkg;

	[Token(Token = "0x4001C98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public RenderTexture cubemapSky;

	[Token(Token = "0x4001C99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RenderTexture cubemapLOD;

	[Token(Token = "0x4001C9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RenderTexture[] cubemapLODArray;

	[Token(Token = "0x4001C9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 renderPosition;

	[Token(Token = "0x4001C9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Camera cam;

	[Token(Token = "0x6001A87")]
	[Address(RVA = "0x11912A0", Offset = "0x11912A0", VA = "0x11912A0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92BA04", Offset = "0x92BA04")]
	public IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6001A88")]
	[Address(RVA = "0x119130C", Offset = "0x119130C", VA = "0x119130C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001A89")]
	[Address(RVA = "0x1191470", Offset = "0x1191470", VA = "0x1191470")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92BA64", Offset = "0x92BA64")]
	public IEnumerator UpdateLODCubemap()
	{
		return null;
	}

	[Token(Token = "0x6001A8A")]
	[Address(RVA = "0x11914DC", Offset = "0x11914DC", VA = "0x11914DC")]
	private bool ShouldRender()
	{
		return default(bool);
	}

	[Token(Token = "0x6001A8B")]
	[Address(RVA = "0x1191558", Offset = "0x1191558", VA = "0x1191558")]
	private void CreateCamera()
	{
	}

	[Token(Token = "0x6001A8C")]
	[Address(RVA = "0x1191820", Offset = "0x1191820", VA = "0x1191820")]
	private void UpdateRenderPosition()
	{
	}

	[Token(Token = "0x6001A8D")]
	[Address(RVA = "0x119185C", Offset = "0x119185C", VA = "0x119185C")]
	private void RenderSkyCubemap(int faceMask)
	{
	}

	[Token(Token = "0x6001A8E")]
	[Address(RVA = "0x11918E4", Offset = "0x11918E4", VA = "0x11918E4")]
	private void RenderDynamicLODCubemap(int faceMask)
	{
	}

	[Token(Token = "0x6001A8F")]
	[Address(RVA = "0x119196C", Offset = "0x119196C", VA = "0x119196C")]
	private void ApplyCubemaps()
	{
	}

	[Token(Token = "0x6001A90")]
	[Address(RVA = "0x11919E0", Offset = "0x11919E0", VA = "0x11919E0")]
	private void GenerateCubemapArrayLOD()
	{
	}

	[Token(Token = "0x6001A91")]
	[Address(RVA = "0x1191E58", Offset = "0x1191E58", VA = "0x1191E58")]
	public RenderCubemapLOD()
	{
	}
}
[Token(Token = "0x20003DE")]
public class SkyDome : MonoBehaviour
{
	[Token(Token = "0x4001CA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static SkyDome instance;

	[Token(Token = "0x6001A9E")]
	[Address(RVA = "0x10B7EB0", Offset = "0x10B7EB0", VA = "0x10B7EB0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001A9F")]
	[Address(RVA = "0x10B7F00", Offset = "0x10B7F00", VA = "0x10B7F00")]
	public static void Rotate(float angle)
	{
	}

	[Token(Token = "0x6001AA0")]
	[Address(RVA = "0x10B7F84", Offset = "0x10B7F84", VA = "0x10B7F84")]
	public static void SetTexture(Texture tex)
	{
	}

	[Token(Token = "0x6001AA1")]
	[Address(RVA = "0x10B8028", Offset = "0x10B8028", VA = "0x10B8028")]
	public SkyDome()
	{
	}
}
[Token(Token = "0x20003DF")]
public class SpeedText : MonoBehaviour
{
	[Token(Token = "0x4001CA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TextMesh tm;

	[Token(Token = "0x6001AA2")]
	[Address(RVA = "0x10DFD28", Offset = "0x10DFD28", VA = "0x10DFD28")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001AA3")]
	[Address(RVA = "0x10DFD7C", Offset = "0x10DFD7C", VA = "0x10DFD7C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001AA4")]
	[Address(RVA = "0x10E0140", Offset = "0x10E0140", VA = "0x10E0140")]
	public SpeedText()
	{
	}
}
[Token(Token = "0x20003E0")]
public class TEST_Display_shader_Values : MonoBehaviour
{
	[Token(Token = "0x4001CA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool update;

	[Token(Token = "0x4001CA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fogStart;

	[Token(Token = "0x4001CA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fogLength;

	[Token(Token = "0x4001CAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float fogLengthInv;

	[Token(Token = "0x4001CAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string weather;

	[Token(Token = "0x4001CAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float weatherFogStart;

	[Token(Token = "0x6001AA5")]
	[Address(RVA = "0x10ED1F0", Offset = "0x10ED1F0", VA = "0x10ED1F0")]
	private void Update()
	{
	}

	[Token(Token = "0x6001AA6")]
	[Address(RVA = "0x10ED308", Offset = "0x10ED308", VA = "0x10ED308")]
	public TEST_Display_shader_Values()
	{
	}
}
[Token(Token = "0x20003E1")]
public class TEST_PLANES : MonoBehaviour
{
	[Token(Token = "0x20003E2")]
	private struct Pair
	{
		[Token(Token = "0x4001CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Transform transform;

		[Token(Token = "0x4001CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Quaternion rot;

		[Token(Token = "0x6001AAD")]
		[Address(RVA = "0x1372F30", Offset = "0x1372F30", VA = "0x1372F30")]
		public Pair(Transform t)
		{
		}
	}

	[Token(Token = "0x4001CAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<Pair> flaps;

	[Token(Token = "0x4001CAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Pair> steers;

	[Token(Token = "0x4001CAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Pair> rotors;

	[Token(Token = "0x6001AA7")]
	[Address(RVA = "0x10ED318", Offset = "0x10ED318", VA = "0x10ED318")]
	private void Start()
	{
	}

	[Token(Token = "0x6001AA8")]
	[Address(RVA = "0x10ED3D4", Offset = "0x10ED3D4", VA = "0x10ED3D4")]
	private void AddTransform(Transform t0)
	{
	}

	[Token(Token = "0x6001AA9")]
	[Address(RVA = "0x10ED9E8", Offset = "0x10ED9E8", VA = "0x10ED9E8")]
	private void Update()
	{
	}

	[Token(Token = "0x6001AAA")]
	[Address(RVA = "0x10ED9EC", Offset = "0x10ED9EC", VA = "0x10ED9EC")]
	private void Ver2()
	{
	}

	[Token(Token = "0x6001AAB")]
	[Address(RVA = "0x10EDE18", Offset = "0x10EDE18", VA = "0x10EDE18")]
	private void Ver1()
	{
	}

	[Token(Token = "0x6001AAC")]
	[Address(RVA = "0x10EE180", Offset = "0x10EE180", VA = "0x10EE180")]
	public TEST_PLANES()
	{
	}
}
[Token(Token = "0x20003E3")]
public class TreeCameraUpdate : MonoBehaviour
{
	[Token(Token = "0x6001AAE")]
	[Address(RVA = "0xEC360C", Offset = "0xEC360C", VA = "0xEC360C")]
	public void Start()
	{
	}

	[Token(Token = "0x6001AAF")]
	[Address(RVA = "0xEC36BC", Offset = "0xEC36BC", VA = "0xEC36BC")]
	public TreeCameraUpdate()
	{
	}
}
[Serializable]
[Token(Token = "0x20003E4")]
public class TreeLeaf
{
	[Token(Token = "0x4001CB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 pos;

	[Token(Token = "0x4001CB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 ISL;

	[Token(Token = "0x4001CB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float dist;

	[Token(Token = "0x6001AB0")]
	[Address(RVA = "0xEC47CC", Offset = "0xEC47CC", VA = "0xEC47CC")]
	public TreeLeaf()
	{
	}
}
[Token(Token = "0x20003E5")]
public class TreeGenerator : MonoBehaviour
{
	[Token(Token = "0x4001CB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 cameraPosRelatedToTree;

	[Token(Token = "0x4001CB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int height;

	[Token(Token = "0x4001CB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int radius;

	[Token(Token = "0x4001CB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int maxLeaves;

	[Token(Token = "0x4001CB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int sprites;

	[Token(Token = "0x4001CBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float spriteAspectRatio;

	[Token(Token = "0x4001CBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float minLeavesDistance;

	[Token(Token = "0x4001CBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector2 leafScale;

	[Token(Token = "0x4001CBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AnimationCurve shape;

	[Token(Token = "0x4001CBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AnimationCurve fullLight;

	[Token(Token = "0x4001CBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AnimationCurve fullShadow;

	[Token(Token = "0x4001CC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float shadowValue;

	[Token(Token = "0x4001CC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string saveName;

	[Token(Token = "0x4001CC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private TreeLeaf[] leaves;

	[Token(Token = "0x4001CC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int leavesCount;

	[Token(Token = "0x4001CC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Mesh mesh;

	[Token(Token = "0x6001AB1")]
	[Address(RVA = "0xEC3C7C", Offset = "0xEC3C7C", VA = "0xEC3C7C")]
	public void Init()
	{
	}

	[Token(Token = "0x6001AB2")]
	[Address(RVA = "0xEC3DA4", Offset = "0xEC3DA4", VA = "0xEC3DA4")]
	private void CreateLeaf()
	{
	}

	[Token(Token = "0x6001AB3")]
	[Address(RVA = "0xEC4020", Offset = "0xEC4020", VA = "0xEC4020")]
	private void Sort()
	{
	}

	[Token(Token = "0x6001AB4")]
	[Address(RVA = "0xEC47D4", Offset = "0xEC47D4", VA = "0xEC47D4")]
	private void Swap(int a, int b)
	{
	}

	[Token(Token = "0x6001AB5")]
	[Address(RVA = "0xEC419C", Offset = "0xEC419C", VA = "0xEC419C")]
	private void GenerateMesh()
	{
	}

	[Token(Token = "0x6001AB6")]
	[Address(RVA = "0xEC48B8", Offset = "0xEC48B8", VA = "0xEC48B8")]
	public TreeGenerator()
	{
	}
}
[Token(Token = "0x20003E6")]
public class TestFlapsController : MonoBehaviour
{
	[Token(Token = "0x6001AB7")]
	[Address(RVA = "0xF05BA0", Offset = "0xF05BA0", VA = "0xF05BA0")]
	public TestFlapsController()
	{
	}
}
[Token(Token = "0x20003E7")]
public static class ViveportManager
{
	[Token(Token = "0x20003E8")]
	private class ViveLicenseChecker : Viveport.Api.LicenseChecker
	{
		[Token(Token = "0x6001ABF")]
		[Address(RVA = "0x11B8AE4", Offset = "0x11B8AE4", VA = "0x11B8AE4", Slot = "4")]
		public override void OnSuccess(long issueTime, long expirationTime, int latestVersion, bool updateRequired)
		{
		}

		[Token(Token = "0x6001AC0")]
		[Address(RVA = "0x11B8BE0", Offset = "0x11B8BE0", VA = "0x11B8BE0", Slot = "5")]
		public override void OnFailure(int errorCode, string errorMessage)
		{
		}

		[Token(Token = "0x6001AC1")]
		[Address(RVA = "0x11B8CB4", Offset = "0x11B8CB4", VA = "0x11B8CB4")]
		public ViveLicenseChecker()
		{
		}
	}

	[Token(Token = "0x4001CC5")]
	private const string appId = "3592ddcb-aff5-4225-840a-c36ceb98e172";

	[Token(Token = "0x4001CC6")]
	private const string appKey = "MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCgxL1xMC2Y1ESE8zUOz/0qi5YrEmAjZrXgpiu5iyjVl6JrpQz5+ixQHOkqkbFANfHBq65mC+gM+5GmmxI6Ucn8JQmeMZ5nnFNTzZBiUZ4pTBc4sypwJYPLe/yA+hFy3PncblIvovCFjMKvSSB0/uRvgbSVaoAsb9U/sC5VpjjroQIDAQAB";

	[Token(Token = "0x4001CC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool ready;

	[Token(Token = "0x6001AB8")]
	[Address(RVA = "0xE203D0", Offset = "0xE203D0", VA = "0xE203D0")]
	public static void Initialize()
	{
	}

	[Token(Token = "0x6001AB9")]
	[Address(RVA = "0xE20550", Offset = "0xE20550", VA = "0xE20550")]
	public static void Release()
	{
	}

	[Token(Token = "0x6001ABA")]
	[Address(RVA = "0xE206B8", Offset = "0xE206B8", VA = "0xE206B8")]
	private static void InitCallback(int result)
	{
	}

	[Token(Token = "0x6001ABB")]
	[Address(RVA = "0xE20734", Offset = "0xE20734", VA = "0xE20734")]
	private static void PrepareLicenseCheck()
	{
	}

	[Token(Token = "0x6001ABC")]
	[Address(RVA = "0xE208E8", Offset = "0xE208E8", VA = "0xE208E8")]
	private static void ForceQuit()
	{
	}

	[Token(Token = "0x6001ABD")]
	[Address(RVA = "0xE20964", Offset = "0xE20964", VA = "0xE20964")]
	private static void QuitCallback(int result)
	{
	}
}
[Token(Token = "0x20003E9")]
public class CameraZonesRotator : MonoBehaviour
{
	[Token(Token = "0x4001CC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private int zones;

	[Token(Token = "0x4001CC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 velocity;

	[Token(Token = "0x4001CCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float targetAngle;

	[Token(Token = "0x4001CCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform head;

	[Token(Token = "0x4001CCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform target;

	[Token(Token = "0x6001AC2")]
	[Address(RVA = "0x102FD40", Offset = "0x102FD40", VA = "0x102FD40")]
	private void Start()
	{
	}

	[Token(Token = "0x6001AC3")]
	[Address(RVA = "0x102FDB4", Offset = "0x102FDB4", VA = "0x102FDB4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001AC4")]
	[Address(RVA = "0x1030044", Offset = "0x1030044", VA = "0x1030044")]
	private Vector3 SmoothDampAngle(Vector3 angles, Vector3 dest, ref Vector3 velocity, float time)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001AC5")]
	[Address(RVA = "0x10300E4", Offset = "0x10300E4", VA = "0x10300E4")]
	public CameraZonesRotator()
	{
	}
}
[Token(Token = "0x20003EA")]
public class CarrierSiren : MonoBehaviour
{
	[Token(Token = "0x4001CCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioSource audio;

	[Token(Token = "0x4001CCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool stopAudio;

	[Token(Token = "0x6001AC6")]
	[Address(RVA = "0x103B1B0", Offset = "0x103B1B0", VA = "0x103B1B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6001AC7")]
	[Address(RVA = "0x103B2B4", Offset = "0x103B2B4", VA = "0x103B2B4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6001AC8")]
	[Address(RVA = "0x103B658", Offset = "0x103B658", VA = "0x103B658")]
	public CarrierSiren()
	{
	}
}
[Token(Token = "0x20003EB")]
public class CcomfortMode : MonoBehaviour
{
	[Token(Token = "0x4001CCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Camera leftCam;

	[Token(Token = "0x4001CD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Camera rightCam;

	[Token(Token = "0x4001CD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Material inner;

	[Token(Token = "0x4001CD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Material outer;

	[Token(Token = "0x4001CD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject innerObject;

	[Token(Token = "0x4001CD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject outerObject;

	[Token(Token = "0x4001CD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float mode;

	[Token(Token = "0x4001CD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float lastmode;

	[Token(Token = "0x4001CD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float dmode;

	[Token(Token = "0x4001CD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float lastdmode;

	[Token(Token = "0x4001CD9")]
	private const float offset = 0.2f;

	[Token(Token = "0x4001CDA")]
	private const float circleScale = 1f;

	[Token(Token = "0x4001CDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Camera cam;

	[Token(Token = "0x4001CDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material mat;

	[Token(Token = "0x4001CDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int propID;

	[Token(Token = "0x4001CDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float lastCameraFov;

	[Token(Token = "0x4001CDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float cameraTangent;

	[Token(Token = "0x4001CE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float cameraOffset;

	[Token(Token = "0x4001CE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float camAspect;

	[Token(Token = "0x4001CE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float amount;

	[Token(Token = "0x4001CE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 lastEulerAngles;

	[Token(Token = "0x6001AC9")]
	[Address(RVA = "0x103C01C", Offset = "0x103C01C", VA = "0x103C01C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001ACA")]
	[Address(RVA = "0x103C3F8", Offset = "0x103C3F8", VA = "0x103C3F8")]
	private void Update()
	{
	}

	[Token(Token = "0x6001ACB")]
	[Address(RVA = "0x103C1C4", Offset = "0x103C1C4", VA = "0x103C1C4")]
	private void AdjustToCameraFOV()
	{
	}

	[Token(Token = "0x6001ACC")]
	[Address(RVA = "0x103C70C", Offset = "0x103C70C", VA = "0x103C70C")]
	private void UpdateScale()
	{
	}

	[Token(Token = "0x6001ACD")]
	[Address(RVA = "0x103C264", Offset = "0x103C264", VA = "0x103C264")]
	private void UpdateMode()
	{
	}

	[Token(Token = "0x6001ACE")]
	[Address(RVA = "0x103C894", Offset = "0x103C894", VA = "0x103C894")]
	private float GetCameraFOV()
	{
		return default(float);
	}

	[Token(Token = "0x6001ACF")]
	[Address(RVA = "0x103C178", Offset = "0x103C178", VA = "0x103C178")]
	private float GetCameraAspect()
	{
		return default(float);
	}

	[Token(Token = "0x6001AD0")]
	[Address(RVA = "0x103C194", Offset = "0x103C194", VA = "0x103C194")]
	private float GetPlaneOffset()
	{
		return default(float);
	}

	[Token(Token = "0x6001AD1")]
	[Address(RVA = "0x103C8B0", Offset = "0x103C8B0", VA = "0x103C8B0")]
	public CcomfortMode()
	{
	}
}
[Token(Token = "0x20003EC")]
public class ChangeSeatHelp : MonoBehaviour
{
	[Token(Token = "0x4001CE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TextMesh tm;

	[Token(Token = "0x4001CE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool counterIncreased;

	[Token(Token = "0x4001CE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	private static bool hide;

	[Token(Token = "0x4001CE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static ChangeSeatHelp activeHelp;

	[Token(Token = "0x6001AD2")]
	[Address(RVA = "0x103D310", Offset = "0x103D310", VA = "0x103D310")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001AD3")]
	[Address(RVA = "0x103D438", Offset = "0x103D438", VA = "0x103D438")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001AD4")]
	[Address(RVA = "0x103D6EC", Offset = "0x103D6EC", VA = "0x103D6EC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001AD5")]
	[Address(RVA = "0x103D4A4", Offset = "0x103D4A4", VA = "0x103D4A4")]
	public void UpdateText()
	{
	}

	[Token(Token = "0x6001AD6")]
	[Address(RVA = "0x103D7C4", Offset = "0x103D7C4", VA = "0x103D7C4")]
	public ChangeSeatHelp()
	{
	}
}
[Token(Token = "0x20003ED")]
public class ChangeShaderOnOculus1 : MonoBehaviour
{
	[Token(Token = "0x4001CE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader oculusQuest1Shader;

	[Token(Token = "0x4001CE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Shader defaultShader;

	[Token(Token = "0x4001CEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material[] materials;

	[Token(Token = "0x6001AD8")]
	[Address(RVA = "0x103D7D0", Offset = "0x103D7D0", VA = "0x103D7D0")]
	private void Start()
	{
	}

	[Token(Token = "0x6001AD9")]
	[Address(RVA = "0x103D860", Offset = "0x103D860", VA = "0x103D860")]
	public ChangeShaderOnOculus1()
	{
	}
}
[Token(Token = "0x20003EE")]
public class CockpitHeadHeight : MonoBehaviour
{
	[Token(Token = "0x4001CEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform neck;

	[Token(Token = "0x4001CEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Yoke yoke;

	[Token(Token = "0x6001ADA")]
	[Address(RVA = "0x10402A4", Offset = "0x10402A4", VA = "0x10402A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001ADB")]
	[Address(RVA = "0x10402A8", Offset = "0x10402A8", VA = "0x10402A8")]
	private void AdjustYoke()
	{
	}

	[Token(Token = "0x6001ADC")]
	[Address(RVA = "0x10403A0", Offset = "0x10403A0", VA = "0x10403A0")]
	private float GetYokeOffset(float bodyHeight)
	{
		return default(float);
	}

	[Token(Token = "0x6001ADD")]
	[Address(RVA = "0x10403C4", Offset = "0x10403C4", VA = "0x10403C4")]
	public CockpitHeadHeight()
	{
	}
}
[Token(Token = "0x20003EF")]
public static class ControllerInputAccumulator
{
	[Token(Token = "0x20003F0")]
	public delegate float ExternalInputRead();

	[Token(Token = "0x20003F1")]
	public delegate bool ActivateExternalInput();

	[Token(Token = "0x20003F2")]
	public class ExternalInput
	{
		[Token(Token = "0x4001CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ExternalInputRead input;

		[Token(Token = "0x4001CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ActivateExternalInput isActive;

		[Token(Token = "0x4001CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool singleAdd;

		[Token(Token = "0x6001AEC")]
		[Address(RVA = "0xBE60CC", Offset = "0xBE60CC", VA = "0xBE60CC")]
		public ExternalInput(bool singleAdd, ActivateExternalInput isActive, ExternalInputRead input)
		{
		}
	}

	[Token(Token = "0x20003F3")]
	public enum Source
	{
		[Token(Token = "0x4001CF2")]
		Joystick,
		[Token(Token = "0x4001CF3")]
		External,
		[Token(Token = "0x4001CF4")]
		Num
	}

	[Token(Token = "0x20003F4")]
	public class Accumulator
	{
		[Token(Token = "0x4001CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ControllerInput.eAction action;

		[Token(Token = "0x4001CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly ControllerInput.eAction resetAction;

		[Token(Token = "0x4001CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ControllerInput.eAction switchAction;

		[Token(Token = "0x4001CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ExternalInput externalInput;

		[Token(Token = "0x4001CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float force;

		[Token(Token = "0x4001CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float value;

		[Token(Token = "0x4001CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float defaultValue;

		[Token(Token = "0x4001CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float switchValue;

		[Token(Token = "0x4001CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float delta;

		[Token(Token = "0x4001CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool asAxis;

		[Token(Token = "0x4001CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly float[] sourceValue;

		[Token(Token = "0x4001D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly float[] sourceDelta;

		[Token(Token = "0x4001D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Source activeSource;

		[Token(Token = "0x6001AED")]
		[Address(RVA = "0xBE55F8", Offset = "0xBE55F8", VA = "0xBE55F8")]
		public Accumulator(ControllerInput.eAction action, ControllerInput.eAction resetAction, ControllerInput.eAction switchAction, float defaultValue, float switchValue, float force)
		{
		}

		[Token(Token = "0x6001AEE")]
		[Address(RVA = "0xBE56B4", Offset = "0xBE56B4", VA = "0xBE56B4")]
		public void Add(float v, Source source)
		{
		}

		[Token(Token = "0x6001AEF")]
		[Address(RVA = "0xBE586C", Offset = "0xBE586C", VA = "0xBE586C")]
		public void SetValue(float v, Source source)
		{
		}

		[Token(Token = "0x6001AF0")]
		[Address(RVA = "0xBE57C4", Offset = "0xBE57C4", VA = "0xBE57C4")]
		private void UpdateActive(Source source)
		{
		}

		[Token(Token = "0x6001AF1")]
		[Address(RVA = "0xBE58E8", Offset = "0xBE58E8", VA = "0xBE58E8")]
		public void ExternalUpdate()
		{
		}

		[Token(Token = "0x6001AF2")]
		[Address(RVA = "0xBE5E00", Offset = "0xBE5E00", VA = "0xBE5E00")]
		public void FullUpdate()
		{
		}

		[Token(Token = "0x6001AF3")]
		[Address(RVA = "0xBE5F70", Offset = "0xBE5F70", VA = "0xBE5F70")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001AF4")]
		[Address(RVA = "0xBE5FF0", Offset = "0xBE5FF0", VA = "0xBE5FF0")]
		public void ResetToValue(float v)
		{
		}
	}

	[Token(Token = "0x4001CED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly List<Accumulator> accumulators;

	[Token(Token = "0x6001ADE")]
	[Address(RVA = "0x101BACC", Offset = "0x101BACC", VA = "0x101BACC")]
	public static void Update(bool hasAnyJoystick)
	{
	}

	[Token(Token = "0x6001ADF")]
	[Address(RVA = "0x101A92C", Offset = "0x101A92C", VA = "0x101A92C")]
	public static void Reset()
	{
	}

	[Token(Token = "0x6001AE0")]
	[Address(RVA = "0x1020348", Offset = "0x1020348", VA = "0x1020348")]
	public static float GetValue(ControllerInput.eAction action)
	{
		return default(float);
	}

	[Token(Token = "0x6001AE1")]
	[Address(RVA = "0x102049C", Offset = "0x102049C", VA = "0x102049C")]
	public static bool Contains(ControllerInput.eAction action, out Accumulator acc)
	{
		return default(bool);
	}

	[Token(Token = "0x6001AE2")]
	[Address(RVA = "0x1020200", Offset = "0x1020200", VA = "0x1020200")]
	public static Accumulator Register(ControllerInput.eAction action, ControllerInput.eAction resetAction, ControllerInput.eAction switchAction, float defaultValue, float switchValue, float force)
	{
		return null;
	}
}
[Token(Token = "0x20003F5")]
public class DimIfTargetAway : MonoBehaviour
{
	[Token(Token = "0x4001D02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float startIntensity;

	[Token(Token = "0x4001D03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Light _light;

	[Token(Token = "0x4001D04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float minRange;

	[Token(Token = "0x4001D05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float maxRange;

	[Token(Token = "0x4001D06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform target;

	[Token(Token = "0x6001AF5")]
	[Address(RVA = "0xD94980", Offset = "0xD94980", VA = "0xD94980")]
	private void Start()
	{
	}

	[Token(Token = "0x6001AF6")]
	[Address(RVA = "0xD94A20", Offset = "0xD94A20", VA = "0xD94A20")]
	private void Update()
	{
	}

	[Token(Token = "0x6001AF7")]
	[Address(RVA = "0xD94B10", Offset = "0xD94B10", VA = "0xD94B10")]
	public DimIfTargetAway()
	{
	}
}
[Token(Token = "0x20003F6")]
public class FFRButton : MonoBehaviour
{
	[Token(Token = "0x4001D07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool useDynamicFixedFoveatedRendering;

	[Token(Token = "0x4001D08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public FixedFoveatedRenderingLevel fixedFoveatedRenderingLevel;

	[Token(Token = "0x6001AF8")]
	[Address(RVA = "0x12FF150", Offset = "0x12FF150", VA = "0x12FF150")]
	private void Click()
	{
	}

	[Token(Token = "0x6001AF9")]
	[Address(RVA = "0x12FF2BC", Offset = "0x12FF2BC", VA = "0x12FF2BC")]
	public FFRButton()
	{
	}
}
[Token(Token = "0x20003F7")]
public class FadeBetweenPoses : MonoBehaviour
{
	[Token(Token = "0x4001D09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float fadeOut;

	[Token(Token = "0x4001D0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float fadeIn;

	[Token(Token = "0x4001D0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private MUI_click_ShowHideObjects showHide;

	[Token(Token = "0x4001D0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool inSingleplayer;

	[Token(Token = "0x4001D0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	[SerializeField]
	private bool inMultiplayer;

	[Token(Token = "0x4001D0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Action inBetween;

	[Token(Token = "0x4001D0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float fadeTime;

	[Token(Token = "0x4001D10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool active;

	[Token(Token = "0x6001AFA")]
	[Address(RVA = "0x1306724", Offset = "0x1306724", VA = "0x1306724")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001AFB")]
	[Address(RVA = "0x13068A8", Offset = "0x13068A8", VA = "0x13068A8")]
	private void Click()
	{
	}

	[Token(Token = "0x6001AFC")]
	[Address(RVA = "0x1306978", Offset = "0x1306978", VA = "0x1306978")]
	private void Call()
	{
	}

	[Token(Token = "0x6001AFD")]
	[Address(RVA = "0x1306A68", Offset = "0x1306A68", VA = "0x1306A68")]
	private void Update()
	{
	}

	[Token(Token = "0x6001AFE")]
	[Address(RVA = "0x1306AB8", Offset = "0x1306AB8", VA = "0x1306AB8")]
	public FadeBetweenPoses()
	{
	}
}
[Token(Token = "0x20003F8")]
public class FlareGrabbable : Grabbable, ISelfGrabbable, IGrabbableHolder
{
	[Token(Token = "0x4001D11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool held;

	[Token(Token = "0x4001D12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private FlareGun targetGun;

	[Token(Token = "0x4001D13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private VRTransformGuide guide;

	[Token(Token = "0x4001D14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Transform prevAttach;

	[Token(Token = "0x4001D15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Transform prevDetach;

	[Token(Token = "0x4001D16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Transform prevDetachRotation;

	[Token(Token = "0x4001D17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91BDBC", Offset = "0x91BDBC")]
	private GrabbableHolder <Holder>k__BackingField;

	[Token(Token = "0x17000171")]
	public GrabbableHolder Holder
	{
		[Token(Token = "0x6001AFF")]
		[Address(RVA = "0x1308168", Offset = "0x1308168", VA = "0x1308168", Slot = "11")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92BB64", Offset = "0x92BB64")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001B00")]
		[Address(RVA = "0x1308170", Offset = "0x1308170", VA = "0x1308170", Slot = "12")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92BB74", Offset = "0x92BB74")]
		set
		{
		}
	}

	[Token(Token = "0x6001B01")]
	[Address(RVA = "0x1308178", Offset = "0x1308178", VA = "0x1308178", Slot = "7")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6001B02")]
	[Address(RVA = "0x130827C", Offset = "0x130827C", VA = "0x130827C", Slot = "5")]
	public override void GrabBegin(Grabber hand, Collider grabPoint)
	{
	}

	[Token(Token = "0x6001B03")]
	[Address(RVA = "0x1308370", Offset = "0x1308370", VA = "0x1308370", Slot = "6")]
	public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
	{
	}

	[Token(Token = "0x6001B04")]
	[Address(RVA = "0x13083E4", Offset = "0x13083E4", VA = "0x13083E4")]
	public void SetGun(FlareGun gun)
	{
	}

	[Token(Token = "0x6001B05")]
	[Address(RVA = "0x13083EC", Offset = "0x13083EC", VA = "0x13083EC")]
	public void Setup(Vector3 position, Vector3 forward, Vector3 velocity, float movingSpeed)
	{
	}

	[Token(Token = "0x6001B06")]
	[Address(RVA = "0x1308A9C", Offset = "0x1308A9C", VA = "0x1308A9C")]
	public static void SetupRemote(PlaneBody plane, Vector3 offsetPosition, Vector3 forward, Vector3 velocity, float speed)
	{
	}

	[Token(Token = "0x6001B07")]
	[Address(RVA = "0x1308CB8", Offset = "0x1308CB8", VA = "0x1308CB8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001B08")]
	[Address(RVA = "0x1308DF0", Offset = "0x1308DF0", VA = "0x1308DF0", Slot = "10")]
	public void OnMove(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x6001B09")]
	[Address(RVA = "0x1308EA0", Offset = "0x1308EA0", VA = "0x1308EA0")]
	public FlareGrabbable()
	{
	}

	[Token(Token = "0x6001B0A")]
	[Address(RVA = "0x1308EA8", Offset = "0x1308EA8", VA = "0x1308EA8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92BB84", Offset = "0x92BB84")]
	private void <Awake>b__10_0()
	{
	}

	[Token(Token = "0x6001B0B")]
	[Address(RVA = "0x1309014", Offset = "0x1309014", VA = "0x1309014")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92BB94", Offset = "0x92BB94")]
	private void <Awake>b__10_1()
	{
	}
}
[Token(Token = "0x20003F9")]
public class FlareGun : Grabbable, ISelfGrabbable
{
	[Token(Token = "0x4001D18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x91BDCC", Offset = "0x91BDCC")]
	public float triggerThreshold;

	[Token(Token = "0x4001D19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[SerializeField]
	private float pointloadDistance;

	[Token(Token = "0x4001D1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Transform outsideBarrel;

	[Token(Token = "0x4001D1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform insideBarrel;

	[Token(Token = "0x4001D1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Transform loadbay;

	[Token(Token = "0x4001D1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Transform detachedRotation;

	[Token(Token = "0x4001D1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Transform trigger;

	[Token(Token = "0x4001D1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Transform hammer;

	[Token(Token = "0x4001D20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Transform baylock;

	[Token(Token = "0x4001D21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Transform barrel;

	[Token(Token = "0x4001D22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Vector2 triggerAngles;

	[Token(Token = "0x4001D23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Vector2 hammerAngles;

	[Token(Token = "0x4001D24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Vector2 lockAngles;

	[Token(Token = "0x4001D25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Vector2 barrelAngles;

	[Token(Token = "0x4001D26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public float barrelOpenSpeed;

	[Token(Token = "0x4001D27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public float lockOpenSpeed;

	[Token(Token = "0x4001D28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public bool loaded;

	[Token(Token = "0x4001D29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private GrabbableHolder ammoHolder;

	[Token(Token = "0x4001D2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[SerializeField]
	private FlareGrabbable flare;

	[Token(Token = "0x4001D2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private HapticSourceHands bhapticsLoad;

	[Token(Token = "0x4001D2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[SerializeField]
	private HapticSourceHands bhapticsFire;

	[Token(Token = "0x4001D2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private VRTransformGuide guide;

	[Token(Token = "0x4001D2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private PlaneBody plane;

	[Token(Token = "0x4001D2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private bool awaitAutoload;

	[Token(Token = "0x4001D30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x139")]
	private bool awaitFlareLoad;

	[Token(Token = "0x4001D31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13A")]
	private bool animBarrelOpen;

	[Token(Token = "0x4001D32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13B")]
	private bool animBarrelClose;

	[Token(Token = "0x4001D33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private bool animLockOpen;

	[Token(Token = "0x4001D34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13D")]
	private bool animLockClose;

	[Token(Token = "0x17000172")]
	public override AllowSticky AllowStickyGrip
	{
		[Token(Token = "0x6001B0C")]
		[Address(RVA = "0x13090D8", Offset = "0x13090D8", VA = "0x13090D8", Slot = "4")]
		get
		{
			return default(AllowSticky);
		}
	}

	[Token(Token = "0x17000173")]
	private bool CanLoad
	{
		[Token(Token = "0x6001B0D")]
		[Address(RVA = "0x13090E0", Offset = "0x13090E0", VA = "0x13090E0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001B0E")]
	[Address(RVA = "0x130916C", Offset = "0x130916C", VA = "0x130916C", Slot = "7")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6001B0F")]
	[Address(RVA = "0x13091CC", Offset = "0x13091CC", VA = "0x13091CC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001B10")]
	[Address(RVA = "0x1309234", Offset = "0x1309234", VA = "0x1309234")]
	public void RefreshAfterRespawn()
	{
	}

	[Token(Token = "0x6001B11")]
	[Address(RVA = "0x1309244", Offset = "0x1309244", VA = "0x1309244", Slot = "5")]
	public override void GrabBegin(Grabber hand, Collider grabPoint)
	{
	}

	[Token(Token = "0x6001B12")]
	[Address(RVA = "0x1309358", Offset = "0x1309358", VA = "0x1309358", Slot = "6")]
	public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
	{
	}

	[Token(Token = "0x6001B13")]
	[Address(RVA = "0x1309478", Offset = "0x1309478", VA = "0x1309478")]
	private void Fire()
	{
	}

	[Token(Token = "0x6001B14")]
	[Address(RVA = "0x1308EC4", Offset = "0x1308EC4", VA = "0x1308EC4")]
	public void Load(FlareGrabbable flare)
	{
	}

	[Token(Token = "0x6001B15")]
	[Address(RVA = "0x13096B4", Offset = "0x13096B4", VA = "0x13096B4")]
	private void AutoLoad()
	{
	}

	[Token(Token = "0x6001B16")]
	[Address(RVA = "0x13097EC", Offset = "0x13097EC", VA = "0x13097EC")]
	public void AutoLoadPointing()
	{
	}

	[Token(Token = "0x6001B17")]
	[Address(RVA = "0x13098CC", Offset = "0x13098CC", VA = "0x13098CC")]
	private void OpenBarrel()
	{
	}

	[Token(Token = "0x6001B18")]
	[Address(RVA = "0x13096A0", Offset = "0x13096A0", VA = "0x13096A0")]
	private void CloseBarrel()
	{
	}

	[Token(Token = "0x6001B19")]
	[Address(RVA = "0x13098E0", Offset = "0x13098E0", VA = "0x13098E0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001B1A")]
	[Address(RVA = "0x1309B10", Offset = "0x1309B10", VA = "0x1309B10")]
	private void Animate(Transform t, float destAngle, float speed, ref bool state)
	{
	}

	[Token(Token = "0x6001B1B")]
	[Address(RVA = "0x1309AEC", Offset = "0x1309AEC", VA = "0x1309AEC")]
	private void AnimOpen()
	{
	}

	[Token(Token = "0x6001B1C")]
	[Address(RVA = "0x1309AFC", Offset = "0x1309AFC", VA = "0x1309AFC")]
	private void AnimClose()
	{
	}

	[Token(Token = "0x6001B1D")]
	[Address(RVA = "0x1309AC4", Offset = "0x1309AC4", VA = "0x1309AC4")]
	private void AnimOpenLock()
	{
	}

	[Token(Token = "0x6001B1E")]
	[Address(RVA = "0x1309AD8", Offset = "0x1309AD8", VA = "0x1309AD8")]
	private void AnimCloseLock()
	{
	}

	[Token(Token = "0x6001B1F")]
	[Address(RVA = "0x1309BB8", Offset = "0x1309BB8", VA = "0x1309BB8", Slot = "10")]
	public void OnMove(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x6001B20")]
	[Address(RVA = "0x1309CE8", Offset = "0x1309CE8", VA = "0x1309CE8")]
	public FlareGun()
	{
	}

	[Token(Token = "0x6001B21")]
	[Address(RVA = "0x1309D08", Offset = "0x1309D08", VA = "0x1309D08")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92BBA4", Offset = "0x92BBA4")]
	private bool <AutoLoad>b__40_0()
	{
		return default(bool);
	}
}
[Token(Token = "0x20003FA")]
public class FlareMissile : Missile
{
	[Token(Token = "0x4001D35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float drag;

	[Token(Token = "0x4001D36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform particleHolder;

	[Token(Token = "0x4001D37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Vector3 velocity;

	[Token(Token = "0x4001D38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private FlareParticle particle;

	[Token(Token = "0x4001D39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private float gravityTime;

	[Token(Token = "0x4001D3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3 gravity;

	[Token(Token = "0x6001B22")]
	[Address(RVA = "0x1309D10", Offset = "0x1309D10", VA = "0x1309D10")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001B23")]
	[Address(RVA = "0x1308744", Offset = "0x1308744", VA = "0x1308744")]
	public void Setup(Vector3 position, Vector3 forward, Vector3 velocity, float movingSpeed, GameObject mp, bool _remote)
	{
	}

	[Token(Token = "0x6001B24")]
	[Address(RVA = "0x1309F54", Offset = "0x1309F54", VA = "0x1309F54", Slot = "7")]
	public override void Hide()
	{
	}

	[Token(Token = "0x6001B25")]
	[Address(RVA = "0x130A054", Offset = "0x130A054", VA = "0x130A054", Slot = "10")]
	protected override bool DetectCollision()
	{
		return default(bool);
	}

	[Token(Token = "0x6001B26")]
	[Address(RVA = "0x130A2F8", Offset = "0x130A2F8", VA = "0x130A2F8", Slot = "11")]
	protected override void Move()
	{
	}

	[Token(Token = "0x6001B27")]
	[Address(RVA = "0x130A384", Offset = "0x130A384", VA = "0x130A384", Slot = "12")]
	protected override void PrepareMove()
	{
	}

	[Token(Token = "0x6001B28")]
	[Address(RVA = "0x130A5A4", Offset = "0x130A5A4", VA = "0x130A5A4")]
	public FlareMissile()
	{
	}
}
[Token(Token = "0x20003FB")]
public class FlareParticle : FX_Effect
{
	[Token(Token = "0x4001D3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private ParticleSystem.MainModule psMain;

	[Token(Token = "0x6001B2A")]
	[Address(RVA = "0x130A610", Offset = "0x130A610", VA = "0x130A610", Slot = "5")]
	public override void Show(Vector3 pos, Vector3 sp)
	{
	}

	[Token(Token = "0x6001B2B")]
	[Address(RVA = "0x1309D14", Offset = "0x1309D14", VA = "0x1309D14")]
	public void Show(FlareMissile flare, float flightTime)
	{
	}

	[Token(Token = "0x6001B2C")]
	[Address(RVA = "0x1309F88", Offset = "0x1309F88", VA = "0x1309F88")]
	public void Detach()
	{
	}

	[Token(Token = "0x6001B2D")]
	[Address(RVA = "0x130A614", Offset = "0x130A614", VA = "0x130A614", Slot = "4")]
	protected override void Move()
	{
	}

	[Token(Token = "0x6001B2E")]
	[Address(RVA = "0x130A618", Offset = "0x130A618", VA = "0x130A618", Slot = "6")]
	public override void Hide()
	{
	}

	[Token(Token = "0x6001B2F")]
	[Address(RVA = "0x130A664", Offset = "0x130A664", VA = "0x130A664")]
	public FlareParticle()
	{
	}
}
[Token(Token = "0x20003FC")]
public class VRAltitudeGauge : VRGauge
{
	[Token(Token = "0x6001B30")]
	[Address(RVA = "0x13CB0FC", Offset = "0x13CB0FC", VA = "0x13CB0FC", Slot = "8")]
	protected override float GetValue()
	{
		return default(float);
	}

	[Token(Token = "0x6001B31")]
	[Address(RVA = "0x13CB28C", Offset = "0x13CB28C", VA = "0x13CB28C")]
	public VRAltitudeGauge()
	{
	}
}
[Token(Token = "0x20003FD")]
public class VRArmamentGauge : VRGauge
{
	[Token(Token = "0x4001D3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private MeshRenderer rend;

	[Token(Token = "0x4001D3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Material mat;

	[Token(Token = "0x4001D3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int propID;

	[Token(Token = "0x6001B32")]
	[Address(RVA = "0x13CB2E4", Offset = "0x13CB2E4", VA = "0x13CB2E4", Slot = "9")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6001B33")]
	[Address(RVA = "0x13CB380", Offset = "0x13CB380", VA = "0x13CB380", Slot = "10")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6001B34")]
	[Address(RVA = "0x13CB384", Offset = "0x13CB384", VA = "0x13CB384")]
	private void Init()
	{
	}

	[Token(Token = "0x6001B35")]
	[Address(RVA = "0x13CB434", Offset = "0x13CB434", VA = "0x13CB434", Slot = "4")]
	public override void PlaneChanged(PlaneBody p)
	{
	}

	[Token(Token = "0x6001B36")]
	[Address(RVA = "0x13CB4DC", Offset = "0x13CB4DC", VA = "0x13CB4DC", Slot = "6")]
	protected override void Repaint()
	{
	}

	[Token(Token = "0x6001B37")]
	[Address(RVA = "0x13CB51C", Offset = "0x13CB51C", VA = "0x13CB51C", Slot = "11")]
	protected virtual Vector2 GetMaterialOffset()
	{
		return default(Vector2);
	}

	[Token(Token = "0x6001B38")]
	[Address(RVA = "0x13CB534", Offset = "0x13CB534", VA = "0x13CB534", Slot = "8")]
	protected override float GetValue()
	{
		return default(float);
	}

	[Token(Token = "0x6001B39")]
	[Address(RVA = "0x13CB574", Offset = "0x13CB574", VA = "0x13CB574")]
	public VRArmamentGauge()
	{
	}
}
[Token(Token = "0x20003FE")]
public class VRArtificialHorizonGauge : VRGauge<Vector2>
{
	[Token(Token = "0x4001D3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float yawScaleToTextureScale;

	[Token(Token = "0x4001D40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float scale;

	[Token(Token = "0x4001D41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private MeshRenderer rend;

	[Token(Token = "0x4001D42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material mat;

	[Token(Token = "0x4001D43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int propID;

	[Token(Token = "0x4001D44")]
	private const float kMaxYaw = 50f;

	[Token(Token = "0x6001B3A")]
	[Address(RVA = "0x13CB578", Offset = "0x13CB578", VA = "0x13CB578")]
	private static float WrapAngle(float angle)
	{
		return default(float);
	}

	[Token(Token = "0x6001B3B")]
	[Address(RVA = "0x13CB5A0", Offset = "0x13CB5A0", VA = "0x13CB5A0", Slot = "8")]
	protected override Vector2 GetValue()
	{
		return default(Vector2);
	}

	[Token(Token = "0x6001B3C")]
	[Address(RVA = "0x13CB6DC", Offset = "0x13CB6DC", VA = "0x13CB6DC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001B3D")]
	[Address(RVA = "0x13CB764", Offset = "0x13CB764", VA = "0x13CB764", Slot = "6")]
	protected override void Repaint()
	{
	}

	[Token(Token = "0x6001B3E")]
	[Address(RVA = "0x13CB8C4", Offset = "0x13CB8C4", VA = "0x13CB8C4", Slot = "5")]
	protected override Vector2 DampValue(Vector2 target)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6001B3F")]
	[Address(RVA = "0x13CB988", Offset = "0x13CB988", VA = "0x13CB988", Slot = "7")]
	protected override Vector2 GetValueNorm()
	{
		return default(Vector2);
	}

	[Token(Token = "0x6001B40")]
	[Address(RVA = "0x13CB9C8", Offset = "0x13CB9C8", VA = "0x13CB9C8")]
	public VRArtificialHorizonGauge()
	{
	}
}
[Token(Token = "0x20003FF")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x91872C", Offset = "0x91872C")]
public class VRBombsGauge : VRArmamentGauge
{
	[Token(Token = "0x4001D45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Mesh labelBombs;

	[Token(Token = "0x4001D46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Mesh labelRockets;

	[Token(Token = "0x4001D47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Mesh labelTorpedoes;

	[Token(Token = "0x4001D48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private MeshFilter labelMf;

	[Token(Token = "0x4001D49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Renderer dropIndicator;

	[Token(Token = "0x4001D4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Material indicatorOff;

	[Token(Token = "0x4001D4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private Material indicatorRed;

	[Token(Token = "0x4001D4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private Material indicatorGreen;

	[Token(Token = "0x4001D4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private Material indicatorOrange;

	[Token(Token = "0x4001D4E")]
	private const float bayMax = 35f;

	[Token(Token = "0x4001D4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Material currentMaterial;

	[Token(Token = "0x6001B41")]
	[Address(RVA = "0x13CECC4", Offset = "0x13CECC4", VA = "0x13CECC4", Slot = "8")]
	protected override float GetValue()
	{
		return default(float);
	}

	[Token(Token = "0x6001B42")]
	[Address(RVA = "0x13CEE78", Offset = "0x13CEE78", VA = "0x13CEE78", Slot = "10")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6001B43")]
	[Address(RVA = "0x13CF028", Offset = "0x13CF028", VA = "0x13CF028", Slot = "4")]
	public override void PlaneChanged(PlaneBody p)
	{
	}

	[Token(Token = "0x6001B44")]
	[Address(RVA = "0x13CEE9C", Offset = "0x13CEE9C", VA = "0x13CEE9C")]
	private void Setup()
	{
	}

	[Token(Token = "0x6001B45")]
	[Address(RVA = "0x13CF1CC", Offset = "0x13CF1CC", VA = "0x13CF1CC", Slot = "6")]
	protected override void Repaint()
	{
	}

	[Token(Token = "0x6001B46")]
	[Address(RVA = "0x13CF04C", Offset = "0x13CF04C", VA = "0x13CF04C")]
	private void UpdateIndicator()
	{
	}

	[Token(Token = "0x6001B47")]
	[Address(RVA = "0x13CF1F0", Offset = "0x13CF1F0", VA = "0x13CF1F0")]
	public VRBombsGauge()
	{
	}
}
[Token(Token = "0x2000400")]
public class VRClimbGauge : VRGauge
{
	[Token(Token = "0x4001D50")]
	private const float FT2M = 0.3048f;

	[Token(Token = "0x4001D51")]
	private const float M2FT = 3.2809f;

	[Token(Token = "0x6001B48")]
	[Address(RVA = "0x13CFD38", Offset = "0x13CFD38", VA = "0x13CFD38", Slot = "8")]
	protected override float GetValue()
	{
		return default(float);
	}

	[Token(Token = "0x6001B49")]
	[Address(RVA = "0x13CFE84", Offset = "0x13CFE84", VA = "0x13CFE84", Slot = "4")]
	public override void PlaneChanged(PlaneBody p)
	{
	}

	[Token(Token = "0x6001B4A")]
	[Address(RVA = "0x13CFEEC", Offset = "0x13CFEEC", VA = "0x13CFEEC")]
	public VRClimbGauge()
	{
	}
}
[Token(Token = "0x2000401")]
public class VRClockGauge : MonoBehaviour
{
	[Token(Token = "0x4001D52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform minutePointer;

	[Token(Token = "0x4001D53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform hourPointer;

	[Token(Token = "0x4001D54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float updateMinute;

	[Token(Token = "0x6001B4B")]
	[Address(RVA = "0x13CFEF0", Offset = "0x13CFEF0", VA = "0x13CFEF0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001B4C")]
	[Address(RVA = "0x13CFFE0", Offset = "0x13CFFE0", VA = "0x13CFFE0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001B4D")]
	[Address(RVA = "0x13D00D0", Offset = "0x13D00D0", VA = "0x13D00D0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001B4E")]
	[Address(RVA = "0x13D023C", Offset = "0x13D023C", VA = "0x13D023C")]
	public void PlaneChanged(PlaneBody p)
	{
	}

	[Token(Token = "0x6001B4F")]
	[Address(RVA = "0x13D0110", Offset = "0x13D0110", VA = "0x13D0110")]
	private void Repaint()
	{
	}

	[Token(Token = "0x6001B50")]
	[Address(RVA = "0x13D0240", Offset = "0x13D0240", VA = "0x13D0240")]
	public VRClockGauge()
	{
	}
}
[Token(Token = "0x2000402")]
public class VRCompassGauge : VRGauge
{
	[Token(Token = "0x6001B51")]
	[Address(RVA = "0x13D2E18", Offset = "0x13D2E18", VA = "0x13D2E18", Slot = "8")]
	protected override float GetValue()
	{
		return default(float);
	}

	[Token(Token = "0x6001B52")]
	[Address(RVA = "0x13D2F08", Offset = "0x13D2F08", VA = "0x13D2F08")]
	private static float EulerY(Quaternion q1)
	{
		return default(float);
	}

	[Token(Token = "0x6001B53")]
	[Address(RVA = "0x13D3094", Offset = "0x13D3094", VA = "0x13D3094")]
	public VRCompassGauge()
	{
	}
}
[Token(Token = "0x2000403")]
public class VRDirectionalGyro : VRCompassGauge
{
	[Token(Token = "0x4001D55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private MeshRenderer rend;

	[Token(Token = "0x4001D56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Material mat;

	[Token(Token = "0x4001D57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int propID;

	[Token(Token = "0x6001B54")]
	[Address(RVA = "0x13D3F90", Offset = "0x13D3F90", VA = "0x13D3F90")]
	private void Start()
	{
	}

	[Token(Token = "0x6001B55")]
	[Address(RVA = "0x13D3FFC", Offset = "0x13D3FFC", VA = "0x13D3FFC", Slot = "6")]
	protected override void Repaint()
	{
	}

	[Token(Token = "0x6001B56")]
	[Address(RVA = "0x13D4028", Offset = "0x13D4028", VA = "0x13D4028")]
	public VRDirectionalGyro()
	{
	}
}
[Token(Token = "0x2000404")]
public class VREngineHeatGauge : VRGauge
{
	[Token(Token = "0x6001B57")]
	[Address(RVA = "0x13D402C", Offset = "0x13D402C", VA = "0x13D402C", Slot = "8")]
	protected override float GetValue()
	{
		return default(float);
	}

	[Token(Token = "0x6001B58")]
	[Address(RVA = "0x13D42A8", Offset = "0x13D42A8", VA = "0x13D42A8")]
	public VREngineHeatGauge()
	{
	}
}
[Token(Token = "0x2000405")]
public abstract class VRGauge : VRGauge<float>
{
	[Token(Token = "0x4001D58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	protected Transform target;

	[Token(Token = "0x4001D59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	protected Vector2 angleLimit;

	[Token(Token = "0x4001D5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	protected float direction;

	[Token(Token = "0x6001B59")]
	[Address(RVA = "0x13D557C", Offset = "0x13D557C", VA = "0x13D557C", Slot = "6")]
	protected override void Repaint()
	{
	}

	[Token(Token = "0x6001B5A")]
	[Address(RVA = "0x13D55D4", Offset = "0x13D55D4", VA = "0x13D55D4", Slot = "7")]
	protected override float GetValueNorm()
	{
		return default(float);
	}

	[Token(Token = "0x6001B5B")]
	[Address(RVA = "0x13D5640", Offset = "0x13D5640", VA = "0x13D5640", Slot = "5")]
	protected override float DampValue(float target)
	{
		return default(float);
	}

	[Token(Token = "0x6001B5C")]
	[Address(RVA = "0x13CB290", Offset = "0x13CB290", VA = "0x13CB290")]
	protected VRGauge()
	{
	}
}
[Token(Token = "0x2000406")]
public abstract class VRGauge<T> : MonoBehaviour
{
	[Token(Token = "0x4001D5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	protected float damper;

	[Token(Token = "0x4001D5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	protected bool normalize;

	[Token(Token = "0x4001D5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected T value;

	[Token(Token = "0x4001D5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected T valueVelocity;

	[Token(Token = "0x4001D5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected int restartAfterFrames;

	[Token(Token = "0x6001B5D")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001B5E")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001B5F")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001B60")]
	public virtual void PlaneChanged(PlaneBody p)
	{
	}

	[Token(Token = "0x6001B61")]
	protected abstract T DampValue(T target);

	[Token(Token = "0x6001B62")]
	protected abstract void Repaint();

	[Token(Token = "0x6001B63")]
	protected abstract T GetValueNorm();

	[Token(Token = "0x6001B64")]
	protected abstract T GetValue();

	[Token(Token = "0x6001B65")]
	protected VRGauge()
	{
	}
}
[Token(Token = "0x2000407")]
public class VRRocketsGauge : VRArmamentGauge
{
	[Token(Token = "0x4001D60")]
	private const float bayMax = 35f;

	[Token(Token = "0x6001B66")]
	[Address(RVA = "0x13DBB14", Offset = "0x13DBB14", VA = "0x13DBB14", Slot = "8")]
	protected override float GetValue()
	{
		return default(float);
	}

	[Token(Token = "0x6001B67")]
	[Address(RVA = "0x13DBC18", Offset = "0x13DBC18", VA = "0x13DBC18")]
	public VRRocketsGauge()
	{
	}
}
[Token(Token = "0x2000408")]
public class VRSpeedometer : VRGauge
{
	[Token(Token = "0x4001D61")]
	private const float MS2MPH = 2.2374146f;

	[Token(Token = "0x6001B68")]
	[Address(RVA = "0x13DD1B0", Offset = "0x13DD1B0", VA = "0x13DD1B0", Slot = "8")]
	protected override float GetValue()
	{
		return default(float);
	}

	[Token(Token = "0x6001B69")]
	[Address(RVA = "0x13DD2D0", Offset = "0x13DD2D0", VA = "0x13DD2D0")]
	public VRSpeedometer()
	{
	}
}
[Token(Token = "0x2000409")]
public class VRStallGauge : MonoBehaviour
{
	[Token(Token = "0x4001D62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Renderer rend;

	[Token(Token = "0x4001D63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Material matNoStall;

	[Token(Token = "0x4001D64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Material matStall;

	[Token(Token = "0x4001D65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool Stall;

	[Token(Token = "0x6001B6A")]
	[Address(RVA = "0xE16DAC", Offset = "0xE16DAC", VA = "0xE16DAC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6001B6B")]
	[Address(RVA = "0xE16FE4", Offset = "0xE16FE4", VA = "0xE16FE4")]
	public VRStallGauge()
	{
	}
}
[Token(Token = "0x200040A")]
public class VRTachometer : VRGauge
{
	[Token(Token = "0x4001D66")]
	private const float throttleMin = 0f;

	[Token(Token = "0x4001D67")]
	private const float throttleMax = 2f;

	[Token(Token = "0x4001D68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float rpm;

	[Token(Token = "0x6001B6C")]
	[Address(RVA = "0xE16FEC", Offset = "0xE16FEC", VA = "0xE16FEC", Slot = "8")]
	protected override float GetValue()
	{
		return default(float);
	}

	[Token(Token = "0x6001B6D")]
	[Address(RVA = "0xE17158", Offset = "0xE17158", VA = "0xE17158")]
	public VRTachometer()
	{
	}
}
[Token(Token = "0x200040B")]
public class VRVerticalCounterGauge : MonoBehaviour
{
	[Token(Token = "0x4001D69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float scale;

	[Token(Token = "0x4001D6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private Vector2 offset;

	[Token(Token = "0x4001D6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float damper;

	[Token(Token = "0x4001D6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private MeshRenderer[] digits;

	[Token(Token = "0x4001D6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material[] mat;

	[Token(Token = "0x4001D6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int propID;

	[Token(Token = "0x4001D6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float value;

	[Token(Token = "0x4001D70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float valueVelocity;

	[Token(Token = "0x4001D71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float[] values;

	[Token(Token = "0x4001D72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float[] valuesVelocity;

	[Token(Token = "0x6001B6E")]
	[Address(RVA = "0xE18F78", Offset = "0xE18F78", VA = "0xE18F78")]
	protected float GetValue()
	{
		return default(float);
	}

	[Token(Token = "0x6001B6F")]
	[Address(RVA = "0xE19058", Offset = "0xE19058", VA = "0xE19058")]
	private int GetDigit(float value, int digitIndex)
	{
		return default(int);
	}

	[Token(Token = "0x6001B70")]
	[Address(RVA = "0xE190D8", Offset = "0xE190D8", VA = "0xE190D8", Slot = "4")]
	protected virtual Vector2 GetMaterialOffset(int digitIndex)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6001B71")]
	[Address(RVA = "0xE191D4", Offset = "0xE191D4", VA = "0xE191D4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001B72")]
	[Address(RVA = "0xE194EC", Offset = "0xE194EC", VA = "0xE194EC", Slot = "5")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6001B73")]
	[Address(RVA = "0xE19564", Offset = "0xE19564", VA = "0xE19564", Slot = "6")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6001B74")]
	[Address(RVA = "0xE19420", Offset = "0xE19420", VA = "0xE19420")]
	protected void Repaint()
	{
	}

	[Token(Token = "0x6001B75")]
	[Address(RVA = "0xE196DC", Offset = "0xE196DC", VA = "0xE196DC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001B76")]
	[Address(RVA = "0xE197C4", Offset = "0xE197C4", VA = "0xE197C4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001B77")]
	[Address(RVA = "0xE198AC", Offset = "0xE198AC", VA = "0xE198AC", Slot = "7")]
	public virtual void PlaneChanged(PlaneBody p)
	{
	}

	[Token(Token = "0x6001B78")]
	[Address(RVA = "0xE199D4", Offset = "0xE199D4", VA = "0xE199D4")]
	public VRVerticalCounterGauge()
	{
	}
}
[Token(Token = "0x200040C")]
public interface IGrabbable
{
}
[Token(Token = "0x200040D")]
public class Grabbable : MonoBehaviour, IGrabbable
{
	[Token(Token = "0x200040E")]
	public enum AllowSticky
	{
		[Token(Token = "0x4001D89")]
		No,
		[Token(Token = "0x4001D8A")]
		YesOnDefault,
		[Token(Token = "0x4001D8B")]
		Yes
	}

	[Token(Token = "0x4001D73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool useGrabNotPinch;

	[Token(Token = "0x4001D74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool useBothGestures;

	[Token(Token = "0x4001D75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[HideInInspector]
	public bool grabbedWithGrab;

	[Token(Token = "0x4001D76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[SerializeField]
	protected bool m_allowOffhandGrab;

	[Token(Token = "0x4001D77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	protected bool m_snapPosition;

	[Token(Token = "0x4001D78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[SerializeField]
	protected bool m_snapOrientation;

	[Token(Token = "0x4001D79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected Transform m_snapOffset;

	[Token(Token = "0x4001D7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected Collider[] m_grabPoints;

	[Token(Token = "0x4001D7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 relativeAxisSeperate;

	[Token(Token = "0x4001D7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool useLimitsForSnapingOnly;

	[Token(Token = "0x4001D7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	public bool limitHandPositionMotion;

	[Token(Token = "0x4001D7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
	public bool limitHandRotationMotion;

	[Token(Token = "0x4001D7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector3 handPosMotionDirection;

	[Token(Token = "0x4001D80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Vector3 handRotMotionDirection;

	[Token(Token = "0x4001D81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector2 positionMotionBounds;

	[Token(Token = "0x4001D82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool allowUpsideDown;

	[Token(Token = "0x4001D83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform upsideDownSnap;

	[Token(Token = "0x4001D84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected bool m_grabbedKinematic;

	[Token(Token = "0x4001D85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected Collider m_grabbedCollider;

	[Token(Token = "0x4001D86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected Grabber m_grabbedBy;

	[Token(Token = "0x4001D87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected Rigidbody m_rigidbody;

	[Token(Token = "0x17000174")]
	public bool UseRelativeAxisSeparate
	{
		[Token(Token = "0x6001B79")]
		[Address(RVA = "0x1477C34", Offset = "0x1477C34", VA = "0x1477C34")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000175")]
	public bool UseRotationMotion
	{
		[Token(Token = "0x6001B7A")]
		[Address(RVA = "0x1477C64", Offset = "0x1477C64", VA = "0x1477C64")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000176")]
	public virtual AllowSticky AllowStickyGrip
	{
		[Token(Token = "0x6001B7B")]
		[Address(RVA = "0x1477C94", Offset = "0x1477C94", VA = "0x1477C94", Slot = "4")]
		get
		{
			return default(AllowSticky);
		}
	}

	[Token(Token = "0x17000177")]
	public bool allowOffhandGrab
	{
		[Token(Token = "0x6001B7C")]
		[Address(RVA = "0x1477C9C", Offset = "0x1477C9C", VA = "0x1477C9C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000178")]
	public bool isGrabbed
	{
		[Token(Token = "0x6001B7D")]
		[Address(RVA = "0x1477CA4", Offset = "0x1477CA4", VA = "0x1477CA4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000179")]
	public bool snapPosition
	{
		[Token(Token = "0x6001B7E")]
		[Address(RVA = "0x1477D10", Offset = "0x1477D10", VA = "0x1477D10")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700017A")]
	public bool snapOrientation
	{
		[Token(Token = "0x6001B7F")]
		[Address(RVA = "0x1477D18", Offset = "0x1477D18", VA = "0x1477D18")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700017B")]
	public Transform snapOffset
	{
		[Token(Token = "0x6001B80")]
		[Address(RVA = "0x1477D20", Offset = "0x1477D20", VA = "0x1477D20")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700017C")]
	public Grabber grabbedBy
	{
		[Token(Token = "0x6001B81")]
		[Address(RVA = "0x1477D28", Offset = "0x1477D28", VA = "0x1477D28")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700017D")]
	public Transform grabbedTransform
	{
		[Token(Token = "0x6001B82")]
		[Address(RVA = "0x1477D30", Offset = "0x1477D30", VA = "0x1477D30")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700017E")]
	public Rigidbody grabbedRigidbody
	{
		[Token(Token = "0x6001B83")]
		[Address(RVA = "0x1477D4C", Offset = "0x1477D4C", VA = "0x1477D4C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700017F")]
	public Collider[] grabPoints
	{
		[Token(Token = "0x6001B84")]
		[Address(RVA = "0x1477D68", Offset = "0x1477D68", VA = "0x1477D68")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001B85")]
	[Address(RVA = "0x1477D70", Offset = "0x1477D70", VA = "0x1477D70", Slot = "5")]
	public virtual void GrabBegin(Grabber hand, Collider grabPoint)
	{
	}

	[Token(Token = "0x6001B86")]
	[Address(RVA = "0x1477E1C", Offset = "0x1477E1C", VA = "0x1477E1C", Slot = "6")]
	public virtual void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
	{
	}

	[Token(Token = "0x6001B87")]
	[Address(RVA = "0x1477EAC", Offset = "0x1477EAC", VA = "0x1477EAC", Slot = "7")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6001B88")]
	[Address(RVA = "0x147807C", Offset = "0x147807C", VA = "0x147807C", Slot = "8")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6001B89")]
	[Address(RVA = "0x1478110", Offset = "0x1478110", VA = "0x1478110", Slot = "9")]
	public virtual void SetGrabber(Grabber g)
	{
	}

	[Token(Token = "0x6001B8A")]
	[Address(RVA = "0x1478118", Offset = "0x1478118", VA = "0x1478118")]
	public Grabbable()
	{
	}
}
[Token(Token = "0x200040F")]
public interface IGrabbableHolder
{
	[Token(Token = "0x17000180")]
	GrabbableHolder Holder
	{
		[Token(Token = "0x6001B8B")]
		get;
		[Token(Token = "0x6001B8C")]
		set;
	}
}
[Token(Token = "0x2000410")]
public class GrabbableHolder : MonoBehaviour
{
	[Token(Token = "0x2000411")]
	public enum Type
	{
		[Token(Token = "0x4001D98")]
		Flare,
		[Token(Token = "0x4001D99")]
		Bomb
	}

	[Token(Token = "0x2000412")]
	private class ItemData
	{
		[Token(Token = "0x4001D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IGrabbableHolder holder;

		[Token(Token = "0x4001D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Collider collider;

		[Token(Token = "0x4001D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject gameObject;

		[Token(Token = "0x4001D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool animate;

		[Token(Token = "0x4001D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool used;

		[Token(Token = "0x6001B99")]
		[Address(RVA = "0xE5B744", Offset = "0xE5B744", VA = "0xE5B744")]
		public ItemData(IGrabbableHolder item, GrabbableHolder invoker)
		{
		}

		[Token(Token = "0x6001B9A")]
		[Address(RVA = "0xE5B814", Offset = "0xE5B814", VA = "0xE5B814")]
		public ItemData(IGrabbableHolder item)
		{
		}
	}

	[Token(Token = "0x4001D8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Type type;

	[Token(Token = "0x4001D8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private int visibleItems;

	[Token(Token = "0x4001D8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TextMesh tmCount;

	[Token(Token = "0x4001D8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Grabbable prefab;

	[Token(Token = "0x4001D90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private bool animateRotation;

	[Token(Token = "0x4001D91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	[SerializeField]
	private bool animatePosition;

	[Token(Token = "0x4001D92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	[SerializeField]
	private bool rotateQueue;

	[Token(Token = "0x4001D93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x91C0C4", Offset = "0x91C0C4")]
	public Transform[] frontQueue;

	[Token(Token = "0x4001D94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ItemData[] items;

	[Token(Token = "0x4001D95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool anim;

	[Token(Token = "0x4001D96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int _count;

	[Token(Token = "0x17000181")]
	public int Count
	{
		[Token(Token = "0x6001B8D")]
		[Address(RVA = "0x140CDFC", Offset = "0x140CDFC", VA = "0x140CDFC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6001B8E")]
	[Address(RVA = "0x140CEA8", Offset = "0x140CEA8", VA = "0x140CEA8")]
	private bool IsVisible(int idx)
	{
		return default(bool);
	}

	[Token(Token = "0x6001B8F")]
	[Address(RVA = "0x140CEE4", Offset = "0x140CEE4", VA = "0x140CEE4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001B90")]
	[Address(RVA = "0x140D218", Offset = "0x140D218", VA = "0x140D218")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001B91")]
	[Address(RVA = "0x140D2CC", Offset = "0x140D2CC", VA = "0x140D2CC")]
	public void RefreshAfterRespawn()
	{
	}

	[Token(Token = "0x6001B92")]
	[Address(RVA = "0x140D4B4", Offset = "0x140D4B4", VA = "0x140D4B4")]
	public IGrabbableHolder Use()
	{
		return null;
	}

	[Token(Token = "0x6001B93")]
	[Address(RVA = "0x140D8CC", Offset = "0x140D8CC", VA = "0x140D8CC")]
	public void Reuse(IGrabbableHolder item)
	{
	}

	[Token(Token = "0x6001B94")]
	[Address(RVA = "0x140DAE4", Offset = "0x140DAE4", VA = "0x140DAE4")]
	public void Return(IGrabbableHolder item)
	{
	}

	[Token(Token = "0x6001B95")]
	[Address(RVA = "0x140D648", Offset = "0x140D648", VA = "0x140D648")]
	private void MoveForward(int fromIndex)
	{
	}

	[Token(Token = "0x6001B96")]
	[Address(RVA = "0x140DC78", Offset = "0x140DC78", VA = "0x140DC78")]
	private void MoveBackward(int endIdx)
	{
	}

	[Token(Token = "0x6001B97")]
	[Address(RVA = "0x140DEE8", Offset = "0x140DEE8", VA = "0x140DEE8")]
	private void Update()
	{
	}

	[Token(Token = "0x6001B98")]
	[Address(RVA = "0x140E5BC", Offset = "0x140E5BC", VA = "0x140E5BC")]
	public GrabbableHolder()
	{
	}
}
[Token(Token = "0x2000413")]
public class GrabbableListener : Grabbable, IGrabbableListener
{
	[Token(Token = "0x4001D9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91C0FC", Offset = "0x91C0FC")]
	private Action <onGrabBegin>k__BackingField;

	[Token(Token = "0x4001DA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91C10C", Offset = "0x91C10C")]
	private Action <onGrabEnd>k__BackingField;

	[Token(Token = "0x17000182")]
	public Action onGrabBegin
	{
		[Token(Token = "0x6001B9B")]
		[Address(RVA = "0x140E5D4", Offset = "0x140E5D4", VA = "0x140E5D4", Slot = "10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92BBB4", Offset = "0x92BBB4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001B9C")]
		[Address(RVA = "0x140E5DC", Offset = "0x140E5DC", VA = "0x140E5DC", Slot = "11")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92BBC4", Offset = "0x92BBC4")]
		set
		{
		}
	}

	[Token(Token = "0x17000183")]
	public Action onGrabEnd
	{
		[Token(Token = "0x6001B9D")]
		[Address(RVA = "0x140E5E4", Offset = "0x140E5E4", VA = "0x140E5E4", Slot = "12")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92BBD4", Offset = "0x92BBD4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001B9E")]
		[Address(RVA = "0x140E5EC", Offset = "0x140E5EC", VA = "0x140E5EC", Slot = "13")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92BBE4", Offset = "0x92BBE4")]
		set
		{
		}
	}

	[Token(Token = "0x6001B9F")]
	[Address(RVA = "0x140E5F4", Offset = "0x140E5F4", VA = "0x140E5F4", Slot = "5")]
	public override void GrabBegin(Grabber hand, Collider grabPoint)
	{
	}

	[Token(Token = "0x6001BA0")]
	[Address(RVA = "0x140E630", Offset = "0x140E630", VA = "0x140E630", Slot = "6")]
	public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
	{
	}

	[Token(Token = "0x6001BA1")]
	[Address(RVA = "0x140E66C", Offset = "0x140E66C", VA = "0x140E66C")]
	public GrabbableListener()
	{
	}
}
[Token(Token = "0x2000414")]
public enum HandType
{
	[Token(Token = "0x4001DA2")]
	Left,
	[Token(Token = "0x4001DA3")]
	Right,
	[Token(Token = "0x4001DA4")]
	Generic
}
[Token(Token = "0x2000415")]
public class Grabber : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000416")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x918740", Offset = "0x918740")]
	private sealed class <>c
	{
		[Token(Token = "0x4001DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x6001BDB")]
		[Address(RVA = "0xE5B944", Offset = "0xE5B944", VA = "0xE5B944")]
		public <>c()
		{
		}

		[Token(Token = "0x6001BDC")]
		[Address(RVA = "0xE5B94C", Offset = "0xE5B94C", VA = "0xE5B94C")]
		internal void <.cctor>b__70_0(PlaneBody p)
		{
		}

		[Token(Token = "0x6001BDD")]
		[Address(RVA = "0xE5BB44", Offset = "0xE5BB44", VA = "0xE5BB44")]
		internal void <.cctor>b__70_1(PlaneBody p)
		{
		}

		[Token(Token = "0x6001BDE")]
		[Address(RVA = "0xE5BD3C", Offset = "0xE5BD3C", VA = "0xE5BD3C")]
		internal void <.cctor>b__70_2(VRCockpit f, VRCockpit t)
		{
		}

		[Token(Token = "0x6001BDF")]
		[Address(RVA = "0xE5BF34", Offset = "0xE5BF34", VA = "0xE5BF34")]
		internal void <.cctor>b__70_3(VRCockpit f, VRCockpit t)
		{
		}

		[Token(Token = "0x6001BE0")]
		[Address(RVA = "0xE5C12C", Offset = "0xE5C12C", VA = "0xE5C12C")]
		internal void <.cctor>b__70_4()
		{
		}
	}

	[Token(Token = "0x4001DA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float grabBegin;

	[Token(Token = "0x4001DA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float grabEnd;

	[Token(Token = "0x4001DA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool m_parentHeldObject;

	[Token(Token = "0x4001DA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform m_gripTransform;

	[Token(Token = "0x4001DA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Collider[] m_grabVolumes;

	[Token(Token = "0x4001DAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private HandType hand;

	[Token(Token = "0x4001DAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Transform m_parentTransform;

	[Token(Token = "0x4001DAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private VRController controller;

	[Token(Token = "0x4001DAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform indexPoint;

	[Token(Token = "0x4001DAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector3 skeletonOffset;

	[Token(Token = "0x4001DAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91C17C", Offset = "0x91C17C")]
	private Grabber <OppositeHand>k__BackingField;

	[Token(Token = "0x4001DB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91C18C", Offset = "0x91C18C")]
	private HandGesture <Gesture>k__BackingField;

	[Token(Token = "0x4001DB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool grabLocked;

	[Token(Token = "0x4001DB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Quaternion initialRotation;

	[Token(Token = "0x4001DB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool controllerDefaultState;

	[Token(Token = "0x4001DB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
	private bool targetingStick;

	[Token(Token = "0x4001DB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Grabbable targetGrabbable;

	[Token(Token = "0x4001DB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Grabber left;

	[Token(Token = "0x4001DB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Grabber right;

	[Token(Token = "0x4001DB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Grabber generic;

	[Token(Token = "0x4001DB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static Grabber active;

	[Token(Token = "0x4001DBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected bool m_grabVolumeEnabled;

	[Token(Token = "0x4001DBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	protected Vector3 m_lastPos;

	[Token(Token = "0x4001DBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected Quaternion m_lastRot;

	[Token(Token = "0x4001DBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected Quaternion m_anchorOffsetRotation;

	[Token(Token = "0x4001DBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	protected Vector3 m_anchorOffsetPosition;

	[Token(Token = "0x4001DBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	protected float m_prevFlex;

	[Token(Token = "0x4001DC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	protected float m_prevPinch;

	[Token(Token = "0x4001DC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	protected Grabbable m_grabbedObj;

	[Token(Token = "0x4001DC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	protected Vector3 m_grabbedObjectPosOff;

	[Token(Token = "0x4001DC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	protected Quaternion m_grabbedObjectRotOff;

	[Token(Token = "0x4001DC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	protected Dictionary<Grabbable, int> m_grabCandidates;

	[Token(Token = "0x4001DC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	protected bool m_operatingWithoutOVRCameraRig;

	[Token(Token = "0x4001DC6")]
	private const int velocityLength = 10;

	[Token(Token = "0x4001DC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private Vector3[] velocityCache;

	[Token(Token = "0x4001DC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private int velocityCacheIndex;

	[Token(Token = "0x4001DC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private bool isVelocityCached;

	[Token(Token = "0x4001DCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private Vector3 lastVelocityCache;

	[Token(Token = "0x4001DCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private Vector3 lastVelocityLocalPos;

	[Token(Token = "0x4001DCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private bool awaitStickyGrip;

	[Token(Token = "0x4001DCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91C19C", Offset = "0x91C19C")]
	private float <LastReleaseTime>k__BackingField;

	[Token(Token = "0x4001DCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static XRInput.Button[] activationButtons;

	[Token(Token = "0x17000184")]
	public Grabber OppositeHand
	{
		[Token(Token = "0x6001BA2")]
		[Address(RVA = "0x140E674", Offset = "0x140E674", VA = "0x140E674")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92BBF4", Offset = "0x92BBF4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001BA3")]
		[Address(RVA = "0x140E67C", Offset = "0x140E67C", VA = "0x140E67C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92BC04", Offset = "0x92BC04")]
		private set
		{
		}
	}

	[Token(Token = "0x17000185")]
	public HandGesture Gesture
	{
		[Token(Token = "0x6001BA4")]
		[Address(RVA = "0x140E684", Offset = "0x140E684", VA = "0x140E684")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92BC14", Offset = "0x92BC14")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001BA5")]
		[Address(RVA = "0x140E68C", Offset = "0x140E68C", VA = "0x140E68C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92BC24", Offset = "0x92BC24")]
		private set
		{
		}
	}

	[Token(Token = "0x17000186")]
	public VRController Controller
	{
		[Token(Token = "0x6001BA6")]
		[Address(RVA = "0x140E694", Offset = "0x140E694", VA = "0x140E694")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000187")]
	public HandType Hand
	{
		[Token(Token = "0x6001BA7")]
		[Address(RVA = "0x140E69C", Offset = "0x140E69C", VA = "0x140E69C")]
		get
		{
			return default(HandType);
		}
	}

	[Token(Token = "0x17000188")]
	public bool IsConnected
	{
		[Token(Token = "0x6001BA8")]
		[Address(RVA = "0x140E6A4", Offset = "0x140E6A4", VA = "0x140E6A4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000189")]
	public float LastReleaseTime
	{
		[Token(Token = "0x6001BA9")]
		[Address(RVA = "0x140E70C", Offset = "0x140E70C", VA = "0x140E70C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92BC34", Offset = "0x92BC34")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001BAA")]
		[Address(RVA = "0x140E714", Offset = "0x140E714", VA = "0x140E714")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92BC44", Offset = "0x92BC44")]
		private set
		{
		}
	}

	[Token(Token = "0x1700018A")]
	public Grabbable grabbedObject
	{
		[Token(Token = "0x6001BAB")]
		[Address(RVA = "0x140E71C", Offset = "0x140E71C", VA = "0x140E71C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001BAC")]
	[Address(RVA = "0x140E724", Offset = "0x140E724", VA = "0x140E724")]
	private void OnUpdatedAnchors()
	{
	}

	[Token(Token = "0x6001BAD")]
	[Address(RVA = "0x140ECDC", Offset = "0x140ECDC", VA = "0x140ECDC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001BAE")]
	[Address(RVA = "0x140ED68", Offset = "0x140ED68", VA = "0x140ED68", Slot = "4")]
	protected virtual void OnTriggerExit(Collider otherCollider)
	{
	}

	[Token(Token = "0x6001BAF")]
	[Address(RVA = "0x140EED0", Offset = "0x140EED0", VA = "0x140EED0")]
	private void UpdateActiveController()
	{
	}

	[Token(Token = "0x6001BB0")]
	[Address(RVA = "0x140E980", Offset = "0x140E980", VA = "0x140E980")]
	protected void CheckForGrabOrRelease()
	{
	}

	[Token(Token = "0x6001BB1")]
	[Address(RVA = "0x140F010", Offset = "0x140F010", VA = "0x140F010")]
	protected void SetupOffsets()
	{
	}

	[Token(Token = "0x6001BB2")]
	[Address(RVA = "0x140F3FC", Offset = "0x140F3FC", VA = "0x140F3FC")]
	protected void GetTranslations(ref Vector3 pos, ref Quaternion rot)
	{
	}

	[Token(Token = "0x6001BB3")]
	[Address(RVA = "0x140F498", Offset = "0x140F498", VA = "0x140F498")]
	protected void GrabbableRelease(Vector3 linearVelocity, Vector3 angularVelocity)
	{
	}

	[Token(Token = "0x6001BB4")]
	[Address(RVA = "0x140F4F8", Offset = "0x140F4F8", VA = "0x140F4F8", Slot = "5")]
	protected virtual void GrabVolumeEnable(bool enabled)
	{
	}

	[Token(Token = "0x6001BB5")]
	[Address(RVA = "0x140F5E4", Offset = "0x140F5E4", VA = "0x140F5E4", Slot = "6")]
	protected virtual void OffhandGrabbed(Grabbable grabbable)
	{
	}

	[Token(Token = "0x6001BB6")]
	[Address(RVA = "0x140F6C4", Offset = "0x140F6C4", VA = "0x140F6C4", Slot = "7")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6001BB7")]
	[Address(RVA = "0x140F6FC", Offset = "0x140F6FC", VA = "0x140F6FC")]
	static Grabber()
	{
	}

	[Token(Token = "0x6001BB8")]
	[Address(RVA = "0x140FB3C", Offset = "0x140FB3C", VA = "0x140FB3C")]
	private void BeforePlaneChange()
	{
	}

	[Token(Token = "0x6001BB9")]
	[Address(RVA = "0x140FC90", Offset = "0x140FC90", VA = "0x140FC90")]
	private void AfterPlaneChange()
	{
	}

	[Token(Token = "0x6001BBA")]
	[Address(RVA = "0x140FCA4", Offset = "0x140FCA4", VA = "0x140FCA4", Slot = "8")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6001BBB")]
	[Address(RVA = "0x140FF68", Offset = "0x140FF68", VA = "0x140FF68")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001BBC")]
	[Address(RVA = "0x140FFF8", Offset = "0x140FFF8", VA = "0x140FFF8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001BBD")]
	[Address(RVA = "0x1410084", Offset = "0x1410084", VA = "0x1410084", Slot = "9")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6001BBE")]
	[Address(RVA = "0x14102BC", Offset = "0x14102BC", VA = "0x14102BC", Slot = "10")]
	protected virtual void OnTriggerEnter(Collider otherCollider)
	{
	}

	[Token(Token = "0x6001BBF")]
	[Address(RVA = "0x141046C", Offset = "0x141046C", VA = "0x141046C", Slot = "11")]
	protected virtual void GrabBegin(bool useGrabNotPinch)
	{
	}

	[Token(Token = "0x6001BC0")]
	[Address(RVA = "0x1410928", Offset = "0x1410928", VA = "0x1410928")]
	protected void StartGrab(bool useGrabNotPinch, Grabbable closestGrabbable, Collider closestGrabbableCollider)
	{
	}

	[Token(Token = "0x6001BC1")]
	[Address(RVA = "0x1410B40", Offset = "0x1410B40", VA = "0x1410B40")]
	public void ForceGrab(Grabbable grabbable)
	{
	}

	[Token(Token = "0x6001BC2")]
	[Address(RVA = "0x1410C04", Offset = "0x1410C04", VA = "0x1410C04", Slot = "12")]
	protected virtual void GrabEnd()
	{
	}

	[Token(Token = "0x6001BC3")]
	[Address(RVA = "0x1410E0C", Offset = "0x1410E0C", VA = "0x1410E0C", Slot = "13")]
	protected virtual void MoveGrabbedObject(Vector3 pos, Quaternion rot, bool forceTeleport = false)
	{
	}

	[Token(Token = "0x6001BC4")]
	[Address(RVA = "0x1411128", Offset = "0x1411128", VA = "0x1411128")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001BC5")]
	[Address(RVA = "0x1411144", Offset = "0x1411144", VA = "0x1411144")]
	private void ProcessTargeting()
	{
	}

	[Token(Token = "0x6001BC6")]
	[Address(RVA = "0x1411928", Offset = "0x1411928", VA = "0x1411928")]
	private Quaternion GetTargetRotationOffset(Grabbable grabbable)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6001BC7")]
	[Address(RVA = "0x1411670", Offset = "0x1411670", VA = "0x1411670")]
	public Quaternion GetTargetRotation(Grabbable grabbable)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6001BC8")]
	[Address(RVA = "0x14113F0", Offset = "0x14113F0", VA = "0x14113F0")]
	public Vector3 GetTargetPosition(Grabbable grabbable, bool worldSpace)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001BC9")]
	[Address(RVA = "0x141107C", Offset = "0x141107C", VA = "0x141107C")]
	protected void LimitMotion()
	{
	}

	[Token(Token = "0x6001BCA")]
	public static bool IsHolding<T>(out HandType hand) where T : IGrabbable
	{
		return default(bool);
	}

	[Token(Token = "0x6001BCB")]
	public static bool IsHolding<T>(out T obj) where T : IGrabbable
	{
		return default(bool);
	}

	[Token(Token = "0x6001BCC")]
	public static bool IsHolding<T>(out T obj, out HandType hand) where T : IGrabbable
	{
		return default(bool);
	}

	[Token(Token = "0x6001BCD")]
	public static bool IsHolding<T>(HandType hand, out T obj) where T : IGrabbable
	{
		return default(bool);
	}

	[Token(Token = "0x6001BCE")]
	public static bool IsHolding<T>(HandType hand) where T : IGrabbable
	{
		return default(bool);
	}

	[Token(Token = "0x6001BCF")]
	public static bool IsHolding<T>() where T : IGrabbable
	{
		return default(bool);
	}

	[Token(Token = "0x6001BD0")]
	[Address(RVA = "0x1411B6C", Offset = "0x1411B6C", VA = "0x1411B6C")]
	public static Grabber ClosestTo(Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x6001BD1")]
	[Address(RVA = "0x1411F6C", Offset = "0x1411F6C", VA = "0x1411F6C")]
	public static Grabber ClosestToPlane(Vector3 pos, Vector3 normal, out float dist, out float dot, out Vector3 point)
	{
		return null;
	}

	[Token(Token = "0x6001BD2")]
	[Address(RVA = "0x1412474", Offset = "0x1412474", VA = "0x1412474")]
	private static float DistanceFromPlane(Vector3 pos, Vector3 normal, Vector3 handPos, out float dot, out Vector3 point)
	{
		return default(float);
	}

	[Token(Token = "0x6001BD3")]
	[Address(RVA = "0x1410D50", Offset = "0x1410D50", VA = "0x1410D50")]
	public Vector3 GetVelocity()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001BD4")]
	[Address(RVA = "0x140FB78", Offset = "0x140FB78", VA = "0x140FB78")]
	public void ForceRelease(Grabbable grabbable)
	{
	}

	[Token(Token = "0x6001BD5")]
	[Address(RVA = "0x141265C", Offset = "0x141265C", VA = "0x141265C")]
	public void ForceRelease()
	{
	}

	[Token(Token = "0x6001BD6")]
	[Address(RVA = "0x14126E8", Offset = "0x14126E8", VA = "0x14126E8")]
	public void SetGenericGrabbable(Grabbable grabbable)
	{
	}

	[Token(Token = "0x6001BD7")]
	[Address(RVA = "0x14126FC", Offset = "0x14126FC", VA = "0x14126FC")]
	public static void ReleaseAll()
	{
	}

	[Token(Token = "0x6001BD8")]
	[Address(RVA = "0x14128F4", Offset = "0x14128F4", VA = "0x14128F4")]
	public Grabber()
	{
	}

	[Token(Token = "0x6001BD9")]
	[Address(RVA = "0x14129B0", Offset = "0x14129B0", VA = "0x14129B0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92BC54", Offset = "0x92BC54")]
	private void <Awake>b__73_0(OVRCameraRig r)
	{
	}
}
[Token(Token = "0x2000417")]
public class GunLock : MonoBehaviour
{
	[Token(Token = "0x4001DD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool moveHandle;

	[Token(Token = "0x4001DD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float moveMul;

	[Token(Token = "0x4001DD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 startPos;

	[Token(Token = "0x4001DD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float time;

	[Token(Token = "0x4001DD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastAngle;

	[Token(Token = "0x4001DD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Cannon cannon;

	[Token(Token = "0x6001BE1")]
	[Address(RVA = "0x1412D78", Offset = "0x1412D78", VA = "0x1412D78")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001BE2")]
	[Address(RVA = "0x1412DB4", Offset = "0x1412DB4", VA = "0x1412DB4")]
	private void Start()
	{
	}

	[Token(Token = "0x6001BE3")]
	[Address(RVA = "0x1412EE4", Offset = "0x1412EE4", VA = "0x1412EE4")]
	private void Update()
	{
	}

	[Token(Token = "0x6001BE4")]
	[Address(RVA = "0x14130E8", Offset = "0x14130E8", VA = "0x14130E8")]
	public void Hit()
	{
	}

	[Token(Token = "0x6001BE5")]
	[Address(RVA = "0x14131BC", Offset = "0x14131BC", VA = "0x14131BC")]
	private float GetGunTemp()
	{
		return default(float);
	}

	[Token(Token = "0x6001BE6")]
	[Address(RVA = "0x1413274", Offset = "0x1413274", VA = "0x1413274")]
	private void CoolGun()
	{
	}

	[Token(Token = "0x6001BE7")]
	[Address(RVA = "0x1413308", Offset = "0x1413308", VA = "0x1413308")]
	public GunLock()
	{
	}
}
[Token(Token = "0x2000418")]
public class GunShellEmitter : MonoBehaviour
{
	[Token(Token = "0x4001DD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float rightSpeed;

	[Token(Token = "0x4001DD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float upSpeed;

	[Token(Token = "0x4001DD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float rightMul;

	[Token(Token = "0x6001BE8")]
	[Address(RVA = "0x141331C", Offset = "0x141331C", VA = "0x141331C")]
	public void Emit(float forwardSpeed)
	{
	}

	[Token(Token = "0x6001BE9")]
	[Address(RVA = "0x1413510", Offset = "0x1413510", VA = "0x1413510")]
	public GunShellEmitter()
	{
	}
}
[Token(Token = "0x2000419")]
public class GunShellFX : FX_Effect
{
	[Token(Token = "0x4001DD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float showTime;

	[Token(Token = "0x4001DDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float forwardSpeed;

	[Token(Token = "0x4001DDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float rightSpeed;

	[Token(Token = "0x4001DDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float upSpeed;

	[Token(Token = "0x4001DDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float downForce;

	[Token(Token = "0x4001DDE")]
	private const float alignSpeed = 4f;

	[Token(Token = "0x6001BEA")]
	[Address(RVA = "0x1413520", Offset = "0x1413520", VA = "0x1413520", Slot = "4")]
	protected override void Move()
	{
	}

	[Token(Token = "0x6001BEB")]
	[Address(RVA = "0x141343C", Offset = "0x141343C", VA = "0x141343C")]
	public void Show(Vector3 pos, float forwardSpeed, float rightSpeed, float upSpeed, Transform p)
	{
	}

	[Token(Token = "0x6001BEC")]
	[Address(RVA = "0x1413664", Offset = "0x1413664", VA = "0x1413664")]
	public GunShellFX()
	{
	}
}
[Token(Token = "0x200041A")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x918750", Offset = "0x918750")]
public class HandGesture : MonoBehaviour
{
	[Token(Token = "0x4001DDF")]
	private const string ANIM_LAYER_NAME_POINT = "Point Layer";

	[Token(Token = "0x4001DE0")]
	private const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

	[Token(Token = "0x4001DE1")]
	private const string ANIM_LAYER_NAME_GRAB = "Grab Layer";

	[Token(Token = "0x4001DE2")]
	private const string ANIM_PARAM_NAME_FLEX = "Flex";

	[Token(Token = "0x4001DE3")]
	private const string ANIM_PARAM_NAME_POSE = "Pose";

	[Token(Token = "0x4001DE4")]
	private const string ANIM_PARAM_NAME_PINCH = "Pinch";

	[Token(Token = "0x4001DE5")]
	private const string ANIM_PARAM_NAME_GRAB = "Grab";

	[Token(Token = "0x4001DE6")]
	private const string ANIM_PARAM_NAME_NEARPOSE = "NearPose";

	[Token(Token = "0x4001DE7")]
	public const float THRESH_COLLISION_FLEX = 0.9f;

	[Token(Token = "0x4001DE8")]
	public const float INPUT_RATE_CHANGE = 12f;

	[Token(Token = "0x4001DE9")]
	public const float COLLIDER_SCALE_MIN = 0.01f;

	[Token(Token = "0x4001DEA")]
	public const float COLLIDER_SCALE_MAX = 1f;

	[Token(Token = "0x4001DEB")]
	public const float COLLIDER_SCALE_PER_SECOND = 1f;

	[Token(Token = "0x4001DEC")]
	public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

	[Token(Token = "0x4001DED")]
	public const float THUMB_DEBOUNCE_TIME = 0.15f;

	[Token(Token = "0x4001DEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private HandPose m_defaultGrabPose;

	[Token(Token = "0x4001DEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Animator m_animator;

	[Token(Token = "0x4001DF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform handCenter;

	[Token(Token = "0x4001DF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform thumbTip;

	[Token(Token = "0x4001DF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected Grabber m_grabber;

	[Token(Token = "0x4001DF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int m_animLayerIndexThumb;

	[Token(Token = "0x4001DF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int m_animLayerIndexPoint;

	[Token(Token = "0x4001DF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int m_animLayerIndexGrab;

	[Token(Token = "0x4001DF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int m_animParamIndexFlex;

	[Token(Token = "0x4001DF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int m_animParamIndexPose;

	[Token(Token = "0x4001DF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int m_animParamIndexGrab;

	[Token(Token = "0x4001DF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int m_animParamIndexNearPose;

	[Token(Token = "0x4001DFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool m_isPointing;

	[Token(Token = "0x4001DFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	private bool m_isGivingThumbsUp;

	[Token(Token = "0x4001DFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91C21C", Offset = "0x91C21C")]
	private float <PointBlend>k__BackingField;

	[Token(Token = "0x4001DFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91C22C", Offset = "0x91C22C")]
	private float <ThumbsUpBlend>k__BackingField;

	[Token(Token = "0x4001DFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91C23C", Offset = "0x91C23C")]
	private float <FlexBlend>k__BackingField;

	[Token(Token = "0x4001DFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91C24C", Offset = "0x91C24C")]
	private float <PointValue>k__BackingField;

	[Token(Token = "0x4001E00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float grabBlend;

	[Token(Token = "0x4001E01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float grabProgress;

	[Token(Token = "0x4001E02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float grabBlendVelocity;

	[Token(Token = "0x4001E03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float grabWeight;

	[Token(Token = "0x4001E04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float grabWeightProgress;

	[Token(Token = "0x4001E05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float grabDirectProgress;

	[Token(Token = "0x4001E06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float grabWeightVelocity;

	[Token(Token = "0x4001E07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float lastGrabWeight;

	[Token(Token = "0x4001E08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Grabbable lastNearGrab;

	[Token(Token = "0x4001E09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float handRightToThumbDirection;

	[Token(Token = "0x4001E0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Transform head;

	[Token(Token = "0x4001E0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private HandPoseType lastPoseType;

	[Token(Token = "0x4001E0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float lastFlex;

	[Token(Token = "0x4001E0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float lastPointWeight;

	[Token(Token = "0x4001E0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float lastThumbsWeight;

	[Token(Token = "0x4001E0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float lastPinch;

	[Token(Token = "0x4001E10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float lastGrab;

	[Token(Token = "0x1700018B")]
	public float PointBlend
	{
		[Token(Token = "0x6001BED")]
		[Address(RVA = "0x14164C4", Offset = "0x14164C4", VA = "0x14164C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92BC64", Offset = "0x92BC64")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001BEE")]
		[Address(RVA = "0x14164CC", Offset = "0x14164CC", VA = "0x14164CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92BC74", Offset = "0x92BC74")]
		protected set
		{
		}
	}

	[Token(Token = "0x1700018C")]
	public float ThumbsUpBlend
	{
		[Token(Token = "0x6001BEF")]
		[Address(RVA = "0x14164D4", Offset = "0x14164D4", VA = "0x14164D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92BC84", Offset = "0x92BC84")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001BF0")]
		[Address(RVA = "0x14164DC", Offset = "0x14164DC", VA = "0x14164DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92BC94", Offset = "0x92BC94")]
		protected set
		{
		}
	}

	[Token(Token = "0x1700018D")]
	public float FlexBlend
	{
		[Token(Token = "0x6001BF1")]
		[Address(RVA = "0x14164E4", Offset = "0x14164E4", VA = "0x14164E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92BCA4", Offset = "0x92BCA4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001BF2")]
		[Address(RVA = "0x14164EC", Offset = "0x14164EC", VA = "0x14164EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92BCB4", Offset = "0x92BCB4")]
		protected set
		{
		}
	}

	[Token(Token = "0x1700018E")]
	public float PointValue
	{
		[Token(Token = "0x6001BF3")]
		[Address(RVA = "0x14164F4", Offset = "0x14164F4", VA = "0x14164F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92BCC4", Offset = "0x92BCC4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001BF4")]
		[Address(RVA = "0x14164FC", Offset = "0x14164FC", VA = "0x14164FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92BCD4", Offset = "0x92BCD4")]
		protected set
		{
		}
	}

	[Token(Token = "0x1700018F")]
	public bool IsPointing
	{
		[Token(Token = "0x6001BF5")]
		[Address(RVA = "0x1416504", Offset = "0x1416504", VA = "0x1416504")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000190")]
	public bool IsNearGrab
	{
		[Token(Token = "0x6001BF6")]
		[Address(RVA = "0x14113C0", Offset = "0x14113C0", VA = "0x14113C0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000191")]
	public bool IsFarGrab
	{
		[Token(Token = "0x6001BF7")]
		[Address(RVA = "0x14113D8", Offset = "0x14113D8", VA = "0x14113D8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000192")]
	public Grabbable Target
	{
		[Token(Token = "0x6001BF8")]
		[Address(RVA = "0x1416538", Offset = "0x1416538", VA = "0x1416538")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001BF9")]
	[Address(RVA = "0x1416540", Offset = "0x1416540", VA = "0x1416540", Slot = "4")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6001BFA")]
	[Address(RVA = "0x14167C8", Offset = "0x14167C8", VA = "0x14167C8", Slot = "5")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6001BFB")]
	[Address(RVA = "0x14168B4", Offset = "0x14168B4", VA = "0x14168B4", Slot = "6")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6001BFC")]
	[Address(RVA = "0x1417378", Offset = "0x1417378", VA = "0x1417378")]
	public HandGestures.ThumbGesture FetchThumbGesture()
	{
		return default(HandGestures.ThumbGesture);
	}

	[Token(Token = "0x6001BFD")]
	[Address(RVA = "0x1416F18", Offset = "0x1416F18", VA = "0x1416F18")]
	private void UpdateCapTouchStates()
	{
	}

	[Token(Token = "0x6001BFE")]
	[Address(RVA = "0x1416A34", Offset = "0x1416A34", VA = "0x1416A34")]
	private void ProcessNearGrab()
	{
	}

	[Token(Token = "0x6001BFF")]
	[Address(RVA = "0x1417564", Offset = "0x1417564", VA = "0x1417564")]
	private Grabbable GetBestGrabbable(out float distance)
	{
		return null;
	}

	[Token(Token = "0x6001C00")]
	[Address(RVA = "0x141779C", Offset = "0x141779C", VA = "0x141779C")]
	private void UpdateGrabAnimator()
	{
	}

	[Token(Token = "0x6001C01")]
	[Address(RVA = "0x1417814", Offset = "0x1417814", VA = "0x1417814")]
	private void OnInputFocusLost()
	{
	}

	[Token(Token = "0x6001C02")]
	[Address(RVA = "0x141783C", Offset = "0x141783C", VA = "0x141783C")]
	private void OnInputFocusAcquired()
	{
	}

	[Token(Token = "0x6001C03")]
	[Address(RVA = "0x1417010", Offset = "0x1417010", VA = "0x1417010")]
	private float InputValueRateChange(bool isDown, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6001C04")]
	[Address(RVA = "0x1417064", Offset = "0x1417064", VA = "0x1417064")]
	private void UpdateAnimStates()
	{
	}

	[Token(Token = "0x6001C05")]
	[Address(RVA = "0x1417864", Offset = "0x1417864", VA = "0x1417864")]
	public HandGesture()
	{
	}
}
[Token(Token = "0x200041B")]
public class HandGestures
{
	[Token(Token = "0x200041C")]
	public struct ThumbGesture
	{
		[Token(Token = "0x200041D")]
		public enum Type
		{
			[Token(Token = "0x4001E18")]
			Neutral,
			[Token(Token = "0x4001E19")]
			Up,
			[Token(Token = "0x4001E1A")]
			Down
		}

		[Token(Token = "0x4001E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool isConfident;

		[Token(Token = "0x4001E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float confidence;

		[Token(Token = "0x4001E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float duration;

		[Token(Token = "0x4001E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Type gestureType;

		[Token(Token = "0x6001C0A")]
		[Address(RVA = "0xE5C420", Offset = "0xE5C420", VA = "0xE5C420", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}

	[Token(Token = "0x200041E")]
	private class ThumbGestureInternal
	{
		[Token(Token = "0x4001E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly HandType handType;

		[Token(Token = "0x4001E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public ThumbGesture gesture;

		[Token(Token = "0x4001E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float lastValidTime;

		[Token(Token = "0x4001E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float firstValidTime;

		[Token(Token = "0x4001E1F")]
		public const float kInvalidateAfterTime = 0.5f;

		[Token(Token = "0x6001C0B")]
		[Address(RVA = "0xE5C4FC", Offset = "0xE5C4FC", VA = "0xE5C4FC")]
		public ThumbGestureInternal(HandType handType)
		{
		}

		[Token(Token = "0x6001C0C")]
		[Address(RVA = "0xE5C528", Offset = "0xE5C528", VA = "0xE5C528")]
		public void Update()
		{
		}

		[Token(Token = "0x6001C0D")]
		[Address(RVA = "0xE5C6D4", Offset = "0xE5C6D4", VA = "0xE5C6D4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}

	[Token(Token = "0x4001E11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ThumbGestureInternal thumbLeft;

	[Token(Token = "0x4001E12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ThumbGestureInternal thumbRight;

	[Token(Token = "0x6001C06")]
	[Address(RVA = "0x1417888", Offset = "0x1417888", VA = "0x1417888")]
	public static void Update()
	{
	}

	[Token(Token = "0x6001C07")]
	[Address(RVA = "0x1417910", Offset = "0x1417910", VA = "0x1417910")]
	public static bool IsThumbGesture(out ThumbGesture gesture)
	{
		return default(bool);
	}

	[Token(Token = "0x6001C08")]
	[Address(RVA = "0x1417AF4", Offset = "0x1417AF4", VA = "0x1417AF4")]
	public HandGestures()
	{
	}
}
[Token(Token = "0x200041F")]
public class HandIK : MonoBehaviour
{
	[Token(Token = "0x2000420")]
	private class HandPhysics
	{
		[Token(Token = "0x2000421")]
		public struct MeshIntersectionData
		{
			[Token(Token = "0x4001E39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float3 edge0;

			[Token(Token = "0x4001E3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float3 edge1;

			[Token(Token = "0x4001E3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float3 normal;

			[Token(Token = "0x4001E3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float3 center;

			[Token(Token = "0x4001E3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float a00;

			[Token(Token = "0x4001E3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float a01;

			[Token(Token = "0x4001E3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float a11;

			[Token(Token = "0x4001E40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public float det;
		}

		[Token(Token = "0x2000422")]
		private struct MeshCache
		{
			[Token(Token = "0x4001E41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool ready;

			[Token(Token = "0x4001E42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
			public bool scheduled;

			[Token(Token = "0x4001E43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
			public bool created;

			[Token(Token = "0x4001E44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public JobHandle job;

			[Token(Token = "0x4001E45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Mesh mesh;

			[Token(Token = "0x4001E46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Mesh.MeshDataArray readonlyMeshDataArray;

			[Token(Token = "0x4001E47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public NativeArray<float3> verticesSorted;

			[Token(Token = "0x4001E48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public NativeArray<MeshIntersectionData> meshIntersectionData;

			[Token(Token = "0x6001C27")]
			[Address(RVA = "0x269CF98", Offset = "0x269CF98", VA = "0x269CF98")]
			public void Dispose()
			{
			}
		}

		[Token(Token = "0x2000423")]
		public struct Descriptor
		{
			[Token(Token = "0x4001E49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public quaternion q;

			[Token(Token = "0x4001E4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public quaternion qT;

			[Token(Token = "0x4001E4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float3 worldPos;

			[Token(Token = "0x4001E4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float3 handPos;

			[Token(Token = "0x4001E4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float3 up;
		}

		[Token(Token = "0x2000424")]
		public struct FingerData
		{
			[Token(Token = "0x4001E4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float3 flexpoint;

			[Token(Token = "0x4001E4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float3 endpoint;

			[Token(Token = "0x4001E50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float fingertipSize;
		}

		[Token(Token = "0x4001E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool ready;

		[Token(Token = "0x4001E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Descriptor worldDescriptor;

		[Token(Token = "0x4001E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float3[] ikResultRefArray;

		[Token(Token = "0x4001E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private NativeArray<float3> ikJobResult;

		[Token(Token = "0x4001E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private NativeArray<FingerData> fingersNativeArray;

		[Token(Token = "0x4001E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool ikJobScheduled;

		[Token(Token = "0x4001E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private MeshCache meshCache;

		[Token(Token = "0x4001E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private JobHandle job;

		[Token(Token = "0x6001C19")]
		[Address(RVA = "0xE5C918", Offset = "0xE5C918", VA = "0xE5C918")]
		public void Initialize(float3[] ikResult)
		{
		}

		[Token(Token = "0x6001C1A")]
		[Address(RVA = "0xE5C998", Offset = "0xE5C998", VA = "0xE5C998")]
		public void SetFingerData(int idx, FingerData fingerData)
		{
		}

		[Token(Token = "0x6001C1B")]
		[Address(RVA = "0xE5C9CC", Offset = "0xE5C9CC", VA = "0xE5C9CC")]
		public bool Prepare()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C1C")]
		[Address(RVA = "0xE5CA50", Offset = "0xE5CA50", VA = "0xE5CA50")]
		public void Update()
		{
		}

		[Token(Token = "0x6001C1D")]
		[Address(RVA = "0xE5CA54", Offset = "0xE5CA54", VA = "0xE5CA54")]
		public void LateUpdate()
		{
		}

		[Token(Token = "0x6001C1E")]
		[Address(RVA = "0xE5CBD8", Offset = "0xE5CBD8", VA = "0xE5CBD8")]
		public void ScheduleIKJob()
		{
		}

		[Token(Token = "0x6001C1F")]
		[Address(RVA = "0xE5CAC0", Offset = "0xE5CAC0", VA = "0xE5CAC0")]
		private void FinishIKJob(bool force = false)
		{
		}

		[Token(Token = "0x6001C20")]
		[Address(RVA = "0xE5CAA8", Offset = "0xE5CAA8", VA = "0xE5CAA8")]
		private void FinishMeshCacheJob()
		{
		}

		[Token(Token = "0x6001C21")]
		[Address(RVA = "0xE5CCC4", Offset = "0xE5CCC4", VA = "0xE5CCC4")]
		public bool CacheMesh(Mesh m)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C22")]
		[Address(RVA = "0xE5CD54", Offset = "0xE5CD54", VA = "0xE5CD54")]
		private void PrepareMeshCacheJob(Mesh m)
		{
		}

		[Token(Token = "0x6001C23")]
		[Address(RVA = "0xE5CF14", Offset = "0xE5CF14", VA = "0xE5CF14")]
		private int GetSizeofMeshVertexAttr(Mesh.MeshData meshData)
		{
			return default(int);
		}

		[Token(Token = "0x6001C24")]
		[Address(RVA = "0xE5D0C8", Offset = "0xE5D0C8", VA = "0xE5D0C8")]
		private int GetVertexAttrFormatByteSize(VertexAttributeFormat format)
		{
			return default(int);
		}

		[Token(Token = "0x6001C25")]
		[Address(RVA = "0xE5D0E8", Offset = "0xE5D0E8", VA = "0xE5D0E8")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001C26")]
		[Address(RVA = "0xE5D17C", Offset = "0xE5D17C", VA = "0xE5D17C")]
		public HandPhysics()
		{
		}
	}

	[Token(Token = "0x2000425")]
	[BurstCompile]
	private struct HandPhysicsFingerJob : IJob
	{
		[Token(Token = "0x4001E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float dt;

		[Token(Token = "0x4001E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public HandPhysics.Descriptor desc;

		[Token(Token = "0x4001E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[ReadOnly]
		public NativeArray<HandPhysics.FingerData> fingers;

		[Token(Token = "0x4001E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public NativeArray<float3> result;

		[Token(Token = "0x4001E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[ReadOnly]
		public NativeArray<float3> verticesSorted;

		[Token(Token = "0x4001E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[ReadOnly]
		public NativeArray<HandPhysics.MeshIntersectionData> meshIntersectionData;

		[Token(Token = "0x4001E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int resultDataLength;

		[Token(Token = "0x6001C28")]
		[Address(RVA = "0xE5D184", Offset = "0xE5D184", VA = "0xE5D184", Slot = "4")]
		public void Execute()
		{
		}

		[MethodImpl(256)]
		[Token(Token = "0x6001C29")]
		[Address(RVA = "0xE5D528", Offset = "0xE5D528", VA = "0xE5D528")]
		private float3 ClosestPointOnMesh(float3 source, float3 handSource, out float3 normal)
		{
			return default(float3);
		}

		[MethodImpl(256)]
		[Token(Token = "0x6001C2A")]
		[Address(RVA = "0xE5D7C0", Offset = "0xE5D7C0", VA = "0xE5D7C0")]
		private float3 ClosestPointOnTriangle(HandPhysics.MeshIntersectionData d, float3 v1, float3 sourcePosition)
		{
			return default(float3);
		}
	}

	[Token(Token = "0x2000426")]
	[BurstCompile]
	private struct MeshCacheJob : IJob
	{
		[Token(Token = "0x4001E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int sizeOfVertAttr;

		[Token(Token = "0x4001E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int trisCount;

		[Token(Token = "0x4001E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[ReadOnly]
		public Mesh.MeshData meshData;

		[Token(Token = "0x4001E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[WriteOnly]
		public NativeArray<float3> verticesSorted;

		[Token(Token = "0x4001E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[WriteOnly]
		public NativeArray<HandPhysics.MeshIntersectionData> meshIntersectionData;

		[Token(Token = "0x6001C2B")]
		[Address(RVA = "0xE5D9D8", Offset = "0xE5D9D8", VA = "0xE5D9D8", Slot = "4")]
		public void Execute()
		{
		}
	}

	[Token(Token = "0x4001E20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HandType hand;

	[Token(Token = "0x4001E21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private HandIKJoint wrist;

	[Token(Token = "0x4001E22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private HandIKJoint thumb;

	[Token(Token = "0x4001E23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private HandIKJoint index;

	[Token(Token = "0x4001E24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private HandIKJoint middle;

	[Token(Token = "0x4001E25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private HandIKJoint ring;

	[Token(Token = "0x4001E26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private HandIKJoint pinky;

	[Token(Token = "0x4001E27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private HandIKJoint sidePalmBone;

	[Token(Token = "0x4001E28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Transform handCenter;

	[Token(Token = "0x4001E29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private readonly HandPhysics physics;

	[Token(Token = "0x4001E2A")]
	private const int kFingers = 4;

	[Token(Token = "0x4001E2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool anyTarget;

	[Token(Token = "0x4001E2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int layerMask;

	[Token(Token = "0x4001E2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private RaycastHit[] hitBuffer;

	[Token(Token = "0x4001E2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private HandIKJoint[] fingers;

	[Token(Token = "0x4001E2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float3[] fingerTargetPosition;

	[Token(Token = "0x4001E30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Transform worldTransform;

	[Token(Token = "0x6001C0E")]
	[Address(RVA = "0x1417BA0", Offset = "0x1417BA0", VA = "0x1417BA0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001C0F")]
	[Address(RVA = "0x1417D0C", Offset = "0x1417D0C", VA = "0x1417D0C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001C10")]
	[Address(RVA = "0x14181F0", Offset = "0x14181F0", VA = "0x14181F0")]
	private void Update()
	{
	}

	[Token(Token = "0x6001C11")]
	[Address(RVA = "0x14187C4", Offset = "0x14187C4", VA = "0x14187C4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001C12")]
	[Address(RVA = "0x1418A14", Offset = "0x1418A14", VA = "0x1418A14")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001C13")]
	[Address(RVA = "0x141853C", Offset = "0x141853C", VA = "0x141853C")]
	private void SetupPhysics(MeshCollider collider)
	{
	}

	[Token(Token = "0x6001C14")]
	[Address(RVA = "0x14187B4", Offset = "0x14187B4", VA = "0x14187B4")]
	private void FallbackNone()
	{
	}

	[Token(Token = "0x6001C15")]
	[Address(RVA = "0x1418900", Offset = "0x1418900", VA = "0x1418900")]
	private void ApplyRestPose()
	{
	}

	[Token(Token = "0x6001C16")]
	[Address(RVA = "0x1418820", Offset = "0x1418820", VA = "0x1418820")]
	private void ApplyIKTarget()
	{
	}

	[Token(Token = "0x6001C17")]
	[Address(RVA = "0x1418294", Offset = "0x1418294", VA = "0x1418294")]
	private MeshCollider FindTarget()
	{
		return null;
	}

	[Token(Token = "0x6001C18")]
	[Address(RVA = "0x141930C", Offset = "0x141930C", VA = "0x141930C")]
	public HandIK()
	{
	}
}
[Token(Token = "0x2000427")]
public class HandIKJoint : MonoBehaviour
{
	[Token(Token = "0x4001E5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector2 angleLimitRight;

	[Token(Token = "0x4001E5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector2 angleLimitUp;

	[Token(Token = "0x4001E5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 rightDirection;

	[Token(Token = "0x4001E60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 upDirection;

	[Token(Token = "0x4001E61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private bool outputMetrics;

	[Token(Token = "0x4001E62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float fingertipSize;

	[Token(Token = "0x4001E63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float skinSize;

	[Token(Token = "0x4001E64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float lenMul;

	[Token(Token = "0x4001E65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float length;

	[Token(Token = "0x4001E66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float lenghtInverse;

	[Token(Token = "0x4001E67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public HandIKJoint middle;

	[Token(Token = "0x4001E68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public HandIKJoint distal;

	[Token(Token = "0x4001E69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[HideInInspector]
	public Transform middleT;

	[Token(Token = "0x4001E6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	public Transform distalT;

	[Token(Token = "0x4001E6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[HideInInspector]
	public Transform selfT;

	[Token(Token = "0x4001E6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[HideInInspector]
	public Transform flexT;

	[Token(Token = "0x4001E6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[HideInInspector]
	public Transform endpoint;

	[Token(Token = "0x4001E6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[HideInInspector]
	public Transform fixedEndpoint;

	[Token(Token = "0x4001E6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Transform parent;

	[Token(Token = "0x4001E70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Quaternion restRotation;

	[Token(Token = "0x4001E71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Quaternion middleRest;

	[Token(Token = "0x4001E72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Quaternion distalRest;

	[Token(Token = "0x4001E73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Vector3 forwardDirection;

	[Token(Token = "0x4001E74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private HandGesture gesture;

	[Token(Token = "0x4001E75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public float flexSideMul;

	[Token(Token = "0x4001E76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public float flex;

	[Token(Token = "0x4001E77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public bool sqrtPrecision;

	[Token(Token = "0x4001E78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x91C3CC", Offset = "0x91C3CC")]
	public float ax;

	[Token(Token = "0x4001E79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x91C3E4", Offset = "0x91C3E4")]
	public float ay;

	[Token(Token = "0x4001E7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x91C3FC", Offset = "0x91C3FC")]
	public float bx;

	[Token(Token = "0x4001E7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x91C414", Offset = "0x91C414")]
	public float by;

	[Token(Token = "0x4001E7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public float dMul;

	[Token(Token = "0x6001C2C")]
	[Address(RVA = "0x1417D78", Offset = "0x1417D78", VA = "0x1417D78")]
	public void InitBones(HandIK ik)
	{
	}

	[Token(Token = "0x6001C2D")]
	[Address(RVA = "0x141948C", Offset = "0x141948C", VA = "0x141948C")]
	private void UpdateLimits(bool reverse)
	{
	}

	[Token(Token = "0x6001C2E")]
	[Address(RVA = "0x14193B8", Offset = "0x14193B8", VA = "0x14193B8")]
	private void StraightenBone(Transform t)
	{
	}

	[Token(Token = "0x6001C2F")]
	[Address(RVA = "0x1418A30", Offset = "0x1418A30", VA = "0x1418A30")]
	public void SetPosition(Vector3 pos)
	{
	}

	[Token(Token = "0x6001C30")]
	[Address(RVA = "0x14197A4", Offset = "0x14197A4", VA = "0x14197A4")]
	private void UpdateDistal(float flex)
	{
	}

	[Token(Token = "0x6001C31")]
	[Address(RVA = "0x1419940", Offset = "0x1419940", VA = "0x1419940")]
	public HandIKJoint()
	{
	}
}
[Token(Token = "0x2000428")]
public enum HandPoseType
{
	[Token(Token = "0x4001E7E")]
	Default,
	[Token(Token = "0x4001E7F")]
	Generic,
	[Token(Token = "0x4001E80")]
	Controller,
	[Token(Token = "0x4001E81")]
	Gun,
	[Token(Token = "0x4001E82")]
	Bomb,
	[Token(Token = "0x4001E83")]
	Yoke,
	[Token(Token = "0x4001E84")]
	Throttle,
	[Token(Token = "0x4001E85")]
	Gear,
	[Token(Token = "0x4001E86")]
	Flaps
}
[Token(Token = "0x2000429")]
public class HandPose : MonoBehaviour
{
	[Token(Token = "0x4001E87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool allowPointing;

	[Token(Token = "0x4001E88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[SerializeField]
	private bool allowThumbsUp;

	[Token(Token = "0x4001E89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private HandPoseType poseType;

	[Token(Token = "0x17000193")]
	public bool AllowPointing
	{
		[Token(Token = "0x6001C32")]
		[Address(RVA = "0x14199A0", Offset = "0x14199A0", VA = "0x14199A0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000194")]
	public bool AllowThumbsUp
	{
		[Token(Token = "0x6001C33")]
		[Address(RVA = "0x14199A8", Offset = "0x14199A8", VA = "0x14199A8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000195")]
	public HandPoseType PoseType
	{
		[Token(Token = "0x6001C34")]
		[Address(RVA = "0x14199B0", Offset = "0x14199B0", VA = "0x14199B0")]
		get
		{
			return default(HandPoseType);
		}
	}

	[Token(Token = "0x6001C35")]
	[Address(RVA = "0x14199B8", Offset = "0x14199B8", VA = "0x14199B8")]
	public HandPose()
	{
	}
}
[Token(Token = "0x200042A")]
public static class HapticsController
{
	[Token(Token = "0x4001E8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool UseBufferedHaptics;

	[Token(Token = "0x4001E8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static IntPtr bufferPtr;

	[Token(Token = "0x4001E8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static float[] time;

	[Token(Token = "0x4001E8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static bool[] useHaptics;

	[Token(Token = "0x4001E8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static VibrationClip[] customClips;

	[Token(Token = "0x4001E8F")]
	private const int bufferSize = 256;

	[Token(Token = "0x4001E90")]
	public const float MAX_FREQ = 320f;

	[Token(Token = "0x6001C36")]
	[Address(RVA = "0x141D3FC", Offset = "0x141D3FC", VA = "0x141D3FC")]
	public static void Initialize()
	{
	}

	[Token(Token = "0x6001C37")]
	[Address(RVA = "0x141D4A0", Offset = "0x141D4A0", VA = "0x141D4A0")]
	public static void Dispose()
	{
	}

	[Token(Token = "0x6001C38")]
	[Address(RVA = "0x141D53C", Offset = "0x141D53C", VA = "0x141D53C")]
	public static void Update()
	{
	}

	[Token(Token = "0x6001C39")]
	[Address(RVA = "0x141D640", Offset = "0x141D640", VA = "0x141D640")]
	private static void UpdateHand(int idx)
	{
	}

	[Token(Token = "0x6001C3A")]
	[Address(RVA = "0x141D874", Offset = "0x141D874", VA = "0x141D874")]
	public static void Play(VibrationClip clip, VibrationClipData bufferedClip, HandType hand)
	{
	}

	[Token(Token = "0x6001C3B")]
	[Address(RVA = "0x141DB70", Offset = "0x141DB70", VA = "0x141DB70")]
	private static void SimpleHaptics(VibrationClip clip, VibrationClipData bufferedClip, HandType hand)
	{
	}

	[Token(Token = "0x6001C3C")]
	[Address(RVA = "0x141DDEC", Offset = "0x141DDEC", VA = "0x141DDEC")]
	public static void RegisterHaptics(float duration, HandType hand)
	{
	}

	[Token(Token = "0x6001C3D")]
	[Address(RVA = "0x141DC48", Offset = "0x141DC48", VA = "0x141DC48")]
	private static void LocalRegisterHaptics(float duration, HandType hand)
	{
	}

	[Token(Token = "0x6001C3E")]
	[Address(RVA = "0x141D964", Offset = "0x141D964", VA = "0x141D964")]
	private static void PushData(VibrationClip clip, VibrationClipData bufferedClip, HandType hand)
	{
	}
}
[Token(Token = "0x200042B")]
public class Headset
{
	[Token(Token = "0x200042C")]
	public enum Model
	{
		[Token(Token = "0x4001E93")]
		unknown,
		[Token(Token = "0x4001E94")]
		quest1,
		[Token(Token = "0x4001E95")]
		quest2,
		[Token(Token = "0x4001E96")]
		rift,
		[Token(Token = "0x4001E97")]
		htc,
		[Token(Token = "0x4001E98")]
		pico
	}

	[Token(Token = "0x4001E91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Model model;

	[Token(Token = "0x6001C40")]
	[Address(RVA = "0x141DF38", Offset = "0x141DF38", VA = "0x141DF38")]
	public static void Init()
	{
	}

	[Token(Token = "0x6001C41")]
	[Address(RVA = "0x141E114", Offset = "0x141E114", VA = "0x141E114")]
	public static bool IsQuest1()
	{
		return default(bool);
	}

	[Token(Token = "0x6001C42")]
	[Address(RVA = "0x141E168", Offset = "0x141E168", VA = "0x141E168")]
	public static bool IsQuest2()
	{
		return default(bool);
	}

	[Token(Token = "0x6001C43")]
	[Address(RVA = "0x141E1BC", Offset = "0x141E1BC", VA = "0x141E1BC")]
	public static bool IsRift()
	{
		return default(bool);
	}

	[Token(Token = "0x6001C44")]
	[Address(RVA = "0x141E210", Offset = "0x141E210", VA = "0x141E210")]
	public static bool IsHTC()
	{
		return default(bool);
	}

	[Token(Token = "0x6001C45")]
	[Address(RVA = "0x141E264", Offset = "0x141E264", VA = "0x141E264")]
	public static bool IsPico()
	{
		return default(bool);
	}

	[Token(Token = "0x6001C46")]
	[Address(RVA = "0x141E2B8", Offset = "0x141E2B8", VA = "0x141E2B8")]
	private static void DeviceConnected(InputDevice device)
	{
	}

	[Token(Token = "0x6001C47")]
	[Address(RVA = "0x141E3E8", Offset = "0x141E3E8", VA = "0x141E3E8")]
	public Headset()
	{
	}
}
[Token(Token = "0x200042D")]
public class HelpBook : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200042E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9187D0", Offset = "0x9187D0")]
	private sealed class <>c
	{
		[Token(Token = "0x4001EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x6001C55")]
		[Address(RVA = "0xE5E000", Offset = "0xE5E000", VA = "0xE5E000")]
		public <>c()
		{
		}

		[Token(Token = "0x6001C56")]
		[Address(RVA = "0xE5E008", Offset = "0xE5E008", VA = "0xE5E008")]
		internal void <.cctor>b__22_0()
		{
		}
	}

	[Token(Token = "0x4001E99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VRTapMotion paperTap;

	[Token(Token = "0x4001E9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VRTapMotion ribbonTap;

	[Token(Token = "0x4001E9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform openedPosition;

	[Token(Token = "0x4001E9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform openCloseButton;

	[Token(Token = "0x4001E9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Transform btnOpenPos;

	[Token(Token = "0x4001E9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Transform btnClosePos;

	[Token(Token = "0x4001E9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject visiblePart;

	[Token(Token = "0x4001EA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject[] pages;

	[Token(Token = "0x4001EA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TextMesh multiHelpTitle;

	[Token(Token = "0x4001EA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TextMesh multiHelpDescription;

	[Token(Token = "0x4001EA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TextMesh multiSpecialTaskDescription;

	[Token(Token = "0x4001EA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject multiSpecialTaskCompleted;

	[Token(Token = "0x4001EA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject multiSpecialTaskFailed;

	[Token(Token = "0x4001EA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject multiSpecialTaskCancelled;

	[Token(Token = "0x4001EA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int pageIndex;

	[Token(Token = "0x4001EA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Vector3 initPos;

	[Token(Token = "0x4001EA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Quaternion initRot;

	[Token(Token = "0x4001EAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private VRTapMotion tapMotion;

	[Token(Token = "0x4001EAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool opened;

	[Token(Token = "0x4001EAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	private static bool manualOpened;

	[Token(Token = "0x4001EAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int closeCounter_single;

	[Token(Token = "0x4001EAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int closeCounter_multi;

	[Token(Token = "0x6001C48")]
	[Address(RVA = "0x141E3F0", Offset = "0x141E3F0", VA = "0x141E3F0")]
	static HelpBook()
	{
	}

	[Token(Token = "0x6001C49")]
	[Address(RVA = "0x141E564", Offset = "0x141E564", VA = "0x141E564")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001C4A")]
	[Address(RVA = "0x141ED5C", Offset = "0x141ED5C", VA = "0x141ED5C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001C4B")]
	[Address(RVA = "0x141EBF8", Offset = "0x141EBF8", VA = "0x141EBF8")]
	private int GetFirstPageIndex()
	{
		return default(int);
	}

	[Token(Token = "0x6001C4C")]
	[Address(RVA = "0x141F220", Offset = "0x141F220", VA = "0x141F220")]
	private void ShowOrHide()
	{
	}

	[Token(Token = "0x6001C4D")]
	[Address(RVA = "0x141EF14", Offset = "0x141EF14", VA = "0x141EF14")]
	private void Open()
	{
	}

	[Token(Token = "0x6001C4E")]
	[Address(RVA = "0x141F088", Offset = "0x141F088", VA = "0x141F088")]
	private void Close()
	{
	}

	[Token(Token = "0x6001C4F")]
	[Address(RVA = "0x141F598", Offset = "0x141F598", VA = "0x141F598")]
	private void NextPage()
	{
	}

	[Token(Token = "0x6001C50")]
	[Address(RVA = "0x141F410", Offset = "0x141F410", VA = "0x141F410")]
	private void ShowPage()
	{
	}

	[Token(Token = "0x6001C51")]
	[Address(RVA = "0x141F654", Offset = "0x141F654", VA = "0x141F654")]
	public void ShowSpecialTaskPage()
	{
	}

	[Token(Token = "0x6001C52")]
	[Address(RVA = "0x141F6C8", Offset = "0x141F6C8", VA = "0x141F6C8")]
	private void Update()
	{
	}

	[Token(Token = "0x6001C53")]
	[Address(RVA = "0x141F838", Offset = "0x141F838", VA = "0x141F838")]
	public HelpBook()
	{
	}
}
[Token(Token = "0x200042F")]
public class HideIfMovedAway : MonoBehaviour
{
	[Token(Token = "0x4001EB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float range;

	[Token(Token = "0x4001EB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] objectsToHide;

	[Token(Token = "0x4001EB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool visible;

	[Token(Token = "0x4001EB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float rangeMin;

	[Token(Token = "0x4001EB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float rangeMax;

	[Token(Token = "0x4001EB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform target;

	[Token(Token = "0x6001C57")]
	[Address(RVA = "0x141F840", Offset = "0x141F840", VA = "0x141F840")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001C58")]
	[Address(RVA = "0x141F86C", Offset = "0x141F86C", VA = "0x141F86C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001C59")]
	[Address(RVA = "0x141F8D4", Offset = "0x141F8D4", VA = "0x141F8D4")]
	private void Hide()
	{
	}

	[Token(Token = "0x6001C5A")]
	[Address(RVA = "0x141F9B4", Offset = "0x141F9B4", VA = "0x141F9B4")]
	private void Show()
	{
	}

	[Token(Token = "0x6001C5B")]
	[Address(RVA = "0x141FA98", Offset = "0x141FA98", VA = "0x141FA98")]
	private void Update()
	{
	}

	[Token(Token = "0x6001C5C")]
	[Address(RVA = "0x141FB5C", Offset = "0x141FB5C", VA = "0x141FB5C")]
	public HideIfMovedAway()
	{
	}
}
[Token(Token = "0x2000430")]
public class HideInBase : MonoBehaviour
{
	[Token(Token = "0x4001EB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x91C48C", Offset = "0x91C48C")]
	public bool all;

	[Token(Token = "0x4001EB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool quest1;

	[Token(Token = "0x6001C5D")]
	[Address(RVA = "0x141FB80", Offset = "0x141FB80", VA = "0x141FB80")]
	private void Start()
	{
	}

	[Token(Token = "0x6001C5E")]
	[Address(RVA = "0x141FC44", Offset = "0x141FC44", VA = "0x141FC44")]
	private void Destroy()
	{
	}

	[Token(Token = "0x6001C5F")]
	[Address(RVA = "0x141FD00", Offset = "0x141FD00", VA = "0x141FD00")]
	public HideInBase()
	{
	}
}
[Token(Token = "0x2000431")]
public class HideInTakeOffLanding : MonoBehaviour
{
	[Token(Token = "0x6001C60")]
	[Address(RVA = "0x141FD10", Offset = "0x141FD10", VA = "0x141FD10")]
	private void Start()
	{
	}

	[Token(Token = "0x6001C61")]
	[Address(RVA = "0x141FE20", Offset = "0x141FE20", VA = "0x141FE20")]
	public HideInTakeOffLanding()
	{
	}
}
[Token(Token = "0x2000432")]
public interface IGrabbableListener
{
	[Token(Token = "0x17000196")]
	Action onGrabBegin
	{
		[Token(Token = "0x6001C62")]
		get;
		[Token(Token = "0x6001C63")]
		set;
	}

	[Token(Token = "0x17000197")]
	Action onGrabEnd
	{
		[Token(Token = "0x6001C64")]
		get;
		[Token(Token = "0x6001C65")]
		set;
	}
}
[Token(Token = "0x2000433")]
public interface ISelfGrabbable
{
	[Token(Token = "0x6001C66")]
	void OnMove(Vector3 pos, Quaternion rot);
}
[Token(Token = "0x2000434")]
public interface IVRCannonController : IGrabbable
{
}
[Token(Token = "0x2000435")]
public class JoystickHandGesture : HandGesture
{
	[Token(Token = "0x6001C67")]
	[Address(RVA = "0x17DDCDC", Offset = "0x17DDCDC", VA = "0x17DDCDC", Slot = "5")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x6001C68")]
	[Address(RVA = "0x17DDCE0", Offset = "0x17DDCE0", VA = "0x17DDCE0", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6001C69")]
	[Address(RVA = "0x17DDCE4", Offset = "0x17DDCE4", VA = "0x17DDCE4", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6001C6A")]
	[Address(RVA = "0x17DDCE8", Offset = "0x17DDCE8", VA = "0x17DDCE8")]
	public JoystickHandGesture()
	{
	}
}
[Token(Token = "0x2000436")]
public class JumpCameraPos : MonoBehaviour
{
	[Token(Token = "0x4001EB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool setSettingsFog;

	[Token(Token = "0x4001EB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool keepYRot;

	[Token(Token = "0x4001EBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int jumpCounter;

	[Token(Token = "0x4001EBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int activeCnt;

	[Token(Token = "0x4001EBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	private bool jumped;

	[Token(Token = "0x4001EBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform cameraPosParentBefore;

	[Token(Token = "0x4001EBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 cameraPosBefore;

	[Token(Token = "0x4001EBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Quaternion cameraRotBefore;

	[Token(Token = "0x4001EC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int activations;

	[Token(Token = "0x4001EC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool checkDeactivate;

	[Token(Token = "0x6001C6B")]
	[Address(RVA = "0x17ECC08", Offset = "0x17ECC08", VA = "0x17ECC08")]
	public static bool IsActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6001C6C")]
	[Address(RVA = "0x17ECC5C", Offset = "0x17ECC5C", VA = "0x17ECC5C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001C6D")]
	[Address(RVA = "0x17ECCB8", Offset = "0x17ECCB8", VA = "0x17ECCB8")]
	private void JumpCamera()
	{
	}

	[Token(Token = "0x6001C6E")]
	[Address(RVA = "0x17ECF90", Offset = "0x17ECF90", VA = "0x17ECF90")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001C6F")]
	[Address(RVA = "0x17ECFEC", Offset = "0x17ECFEC", VA = "0x17ECFEC")]
	private void MoveBackCamera()
	{
	}

	[Token(Token = "0x6001C70")]
	[Address(RVA = "0x17ED264", Offset = "0x17ED264", VA = "0x17ED264")]
	private void OnRecenteredPose()
	{
	}

	[Token(Token = "0x6001C71")]
	[Address(RVA = "0x17ED288", Offset = "0x17ED288", VA = "0x17ED288")]
	public void Activate()
	{
	}

	[Token(Token = "0x6001C72")]
	[Address(RVA = "0x17ED2F0", Offset = "0x17ED2F0", VA = "0x17ED2F0")]
	public void Deactivate()
	{
	}

	[Token(Token = "0x6001C73")]
	[Address(RVA = "0x17ED308", Offset = "0x17ED308", VA = "0x17ED308")]
	public void LateUpdate()
	{
	}

	[Token(Token = "0x6001C74")]
	[Address(RVA = "0x17ED3CC", Offset = "0x17ED3CC", VA = "0x17ED3CC")]
	public JumpCameraPos()
	{
	}
}
[Token(Token = "0x2000437")]
public class JumpCameraPosActivator : MonoBehaviour
{
	[Token(Token = "0x4001EC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public JumpCameraPos jumpCameraPos;

	[Token(Token = "0x6001C75")]
	[Address(RVA = "0x17ED3D4", Offset = "0x17ED3D4", VA = "0x17ED3D4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001C76")]
	[Address(RVA = "0x17ED460", Offset = "0x17ED460", VA = "0x17ED460")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001C77")]
	[Address(RVA = "0x17ED4F4", Offset = "0x17ED4F4", VA = "0x17ED4F4")]
	public JumpCameraPosActivator()
	{
	}
}
[Token(Token = "0x2000438")]
public class LandingGear : Grabbable, ISelfGrabbable
{
	[Token(Token = "0x4001EC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private float angleLimit;

	[Token(Token = "0x4001EC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private Transform dirParent;

	[Token(Token = "0x4001EC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private Transform joint;

	[Token(Token = "0x4001EC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private Transform centerPoint;

	[Token(Token = "0x4001EC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float maxAngle;

	[Token(Token = "0x4001EC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float currentValue;

	[Token(Token = "0x4001EC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float lastHapticsTime;

	[Token(Token = "0x4001ECA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float tighteningDist;

	[Token(Token = "0x4001ECB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool notifiedUp;

	[Token(Token = "0x4001ECC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
	private bool notifiedDown;

	[Token(Token = "0x4001ECD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private PlaneBody plane;

	[Token(Token = "0x4001ECE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private AudioSource audio;

	[Token(Token = "0x17000198")]
	public override AllowSticky AllowStickyGrip
	{
		[Token(Token = "0x6001C78")]
		[Address(RVA = "0x113680C", Offset = "0x113680C", VA = "0x113680C", Slot = "4")]
		get
		{
			return default(AllowSticky);
		}
	}

	[Token(Token = "0x6001C79")]
	[Address(RVA = "0x1136814", Offset = "0x1136814", VA = "0x1136814", Slot = "5")]
	public override void GrabBegin(Grabber hand, Collider grabPoint)
	{
	}

	[Token(Token = "0x6001C7A")]
	[Address(RVA = "0x11368A0", Offset = "0x11368A0", VA = "0x11368A0", Slot = "6")]
	public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
	{
	}

	[Token(Token = "0x6001C7B")]
	[Address(RVA = "0x11368A8", Offset = "0x11368A8", VA = "0x11368A8", Slot = "7")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6001C7C")]
	[Address(RVA = "0x1136934", Offset = "0x1136934", VA = "0x1136934")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001C7D")]
	[Address(RVA = "0x1136A98", Offset = "0x1136A98", VA = "0x1136A98")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001C7E")]
	[Address(RVA = "0x1136B3C", Offset = "0x1136B3C", VA = "0x1136B3C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001C7F")]
	[Address(RVA = "0x1136A90", Offset = "0x1136A90", VA = "0x1136A90")]
	private void GearUp()
	{
	}

	[Token(Token = "0x6001C80")]
	[Address(RVA = "0x1136A88", Offset = "0x1136A88", VA = "0x1136A88")]
	private void GearDown()
	{
	}

	[Token(Token = "0x6001C81")]
	[Address(RVA = "0x1136C10", Offset = "0x1136C10", VA = "0x1136C10")]
	private void SetValue(float n)
	{
	}

	[Token(Token = "0x6001C82")]
	[Address(RVA = "0x1136CEC", Offset = "0x1136CEC", VA = "0x1136CEC")]
	public void ToggleExternal()
	{
	}

	[Token(Token = "0x6001C83")]
	[Address(RVA = "0x1136D18", Offset = "0x1136D18", VA = "0x1136D18")]
	private void Toggle(float normX)
	{
	}

	[Token(Token = "0x6001C84")]
	[Address(RVA = "0x11372C8", Offset = "0x11372C8", VA = "0x11372C8", Slot = "10")]
	public void OnMove(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x6001C85")]
	[Address(RVA = "0x11374BC", Offset = "0x11374BC", VA = "0x11374BC")]
	public LandingGear()
	{
	}
}
[Token(Token = "0x2000439")]
public class MUI_ControllerRay : MonoBehaviour
{
	[Token(Token = "0x4001ECF")]
	private const float lineSectorLength = 0.1f;

	[Token(Token = "0x4001ED0")]
	private const float targetDistFromCollision = 0.04f;

	[Token(Token = "0x4001ED1")]
	private const float clippedScrollSpeed = 2f;

	[Token(Token = "0x4001ED2")]
	private const float clippedScrollStartDragDist = 0.1f;

	[Token(Token = "0x4001ED3")]
	private const float uiSliderScrollSpeed = 0.5f;

	[Token(Token = "0x4001ED4")]
	private const float uiScrollerScrollSpeed = 0.5f;

	[Token(Token = "0x4001ED5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HandType hand;

	[Token(Token = "0x4001ED6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maxDrawLength;

	[Token(Token = "0x4001ED7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxRaycastLength;

	[Token(Token = "0x4001ED8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject touchTarget;

	[Token(Token = "0x4001ED9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public LineRenderer lineRenderer;

	[Token(Token = "0x4001EDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material touchTargetPressedMaterial;

	[Token(Token = "0x4001EDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Gradient linePressedColor;

	[Token(Token = "0x4001EDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public MUI_Sound.UISfx soundEnterTarget;

	[Token(Token = "0x4001EDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool vibrateOnEnterTarget;

	[Token(Token = "0x4001EDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected XRInput.Button clickButton;

	[Token(Token = "0x4001EDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	protected XRInput.Axis2D scrollAxis;

	[Token(Token = "0x4001EE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected float curentDrawLength;

	[Token(Token = "0x4001EE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected GameObject currentRaycastObject;

	[Token(Token = "0x4001EE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected GameObject currentPressedObject;

	[Token(Token = "0x4001EE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected MUI_ClippedScroll currentDraggingScroll;

	[Token(Token = "0x4001EE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected Vector3 draggingScrollStartPos;

	[Token(Token = "0x4001EE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	protected bool draggingScrollStarted;

	[Token(Token = "0x4001EE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected float scrollingLastTime;

	[Token(Token = "0x4001EE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	protected Vector3 currentHitNormal;

	[Token(Token = "0x4001EE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Renderer touchTargetRenderer;

	[Token(Token = "0x4001EE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Material touchTargetMaterialOrg;

	[Token(Token = "0x4001EEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Gradient lineColorOrg;

	[Token(Token = "0x4001EEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected Vector3[] posBuffer;

	[Token(Token = "0x4001EEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool vrFocusLost;

	[Token(Token = "0x4001EED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static HandType rightOrGeneric;

	[Token(Token = "0x4001EEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	protected static HandType lastUsedHand;

	[Token(Token = "0x6001C86")]
	[Address(RVA = "0x11432AC", Offset = "0x11432AC", VA = "0x11432AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001C87")]
	[Address(RVA = "0x1143398", Offset = "0x1143398", VA = "0x1143398")]
	private void Start()
	{
	}

	[Token(Token = "0x6001C88")]
	[Address(RVA = "0x1143558", Offset = "0x1143558", VA = "0x1143558")]
	private void Update()
	{
	}

	[Token(Token = "0x6001C89")]
	[Address(RVA = "0x11457F4", Offset = "0x11457F4", VA = "0x11457F4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001C8A")]
	[Address(RVA = "0x11458E0", Offset = "0x11458E0", VA = "0x11458E0")]
	private void HandleVrFocusAcquired()
	{
	}

	[Token(Token = "0x6001C8B")]
	[Address(RVA = "0x11458E8", Offset = "0x11458E8", VA = "0x11458E8")]
	private void HandleVrFocusLost()
	{
	}

	[Token(Token = "0x6001C8C")]
	[Address(RVA = "0x11458F4", Offset = "0x11458F4", VA = "0x11458F4")]
	private bool IsActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6001C8D")]
	[Address(RVA = "0x1143584", Offset = "0x1143584", VA = "0x1143584")]
	private void UpdateActive()
	{
	}

	[Token(Token = "0x6001C8E")]
	[Address(RVA = "0x11437F8", Offset = "0x11437F8", VA = "0x11437F8")]
	private void CastRay()
	{
	}

	[Token(Token = "0x6001C8F")]
	[Address(RVA = "0x11455A0", Offset = "0x11455A0", VA = "0x11455A0")]
	private void UpdateLine()
	{
	}

	[Token(Token = "0x6001C90")]
	[Address(RVA = "0x1145978", Offset = "0x1145978", VA = "0x1145978")]
	public MUI_ControllerRay()
	{
	}
}
[Token(Token = "0x200043A")]
public class MUI_RayEffects : MonoBehaviour
{
	[Token(Token = "0x4001EEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool playSound;

	[Token(Token = "0x4001EF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool playVibration;

	[Token(Token = "0x6001C92")]
	[Address(RVA = "0x1359DCC", Offset = "0x1359DCC", VA = "0x1359DCC")]
	public MUI_RayEffects()
	{
	}
}
[Token(Token = "0x200043B")]
internal interface IMotionControllerInterface
{
	[Token(Token = "0x6001C93")]
	void Update(Telemetry telemetry);

	[Token(Token = "0x6001C94")]
	void Release();
}
[Token(Token = "0x200043C")]
public static class MotionController
{
	[Token(Token = "0x4001EF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string IP;

	[Token(Token = "0x4001EF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int port;

	[Token(Token = "0x4001EF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static string mmf;

	[Token(Token = "0x4001EF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static bool useMMF;

	[Token(Token = "0x4001EF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private static int rate;

	[Token(Token = "0x4001EF6")]
	private const int kMinRate = 10;

	[Token(Token = "0x4001EF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static IMotionControllerInterface controller;

	[Token(Token = "0x4001EF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static Telemetry telemetry;

	[Token(Token = "0x4001EF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static float[] posDT;

	[Token(Token = "0x4001EFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static Vector3[] positions;

	[Token(Token = "0x4001EFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static float initEulerY;

	[Token(Token = "0x4001EFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private static bool isPlaneInited;

	[Token(Token = "0x4001EFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static Vector3 accelerationDump;

	[Token(Token = "0x4001EFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public static Vector3 acceleration;

	[Token(Token = "0x4001EFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static Vector3 velocityDelta;

	[Token(Token = "0x4001F00")]
	public const float MAX_G = 8f;

	[Token(Token = "0x4001F01")]
	public const float MAX_G_RCP = 0.125f;

	[Token(Token = "0x6001C95")]
	[Address(RVA = "0xF803D4", Offset = "0xF803D4", VA = "0xF803D4")]
	public static void Initialize()
	{
	}

	[Token(Token = "0x6001C96")]
	[Address(RVA = "0xF804B8", Offset = "0xF804B8", VA = "0xF804B8")]
	private static void PlaneChanged(PlaneBody _)
	{
	}

	[Token(Token = "0x6001C97")]
	[Address(RVA = "0xF80550", Offset = "0xF80550", VA = "0xF80550")]
	public static void Update()
	{
	}

	[Token(Token = "0x6001C98")]
	[Address(RVA = "0xF80F38", Offset = "0xF80F38", VA = "0xF80F38")]
	public static void Release()
	{
	}

	[Token(Token = "0x6001C99")]
	[Address(RVA = "0xF80F3C", Offset = "0xF80F3C", VA = "0xF80F3C")]
	private static float WrapAngle(float angle)
	{
		return default(float);
	}

	[Token(Token = "0x6001C9A")]
	[Address(RVA = "0xF80E5C", Offset = "0xF80E5C", VA = "0xF80E5C")]
	private static Vector3 WrapAngle(Vector3 angles)
	{
		return default(Vector3);
	}
}
[Token(Token = "0x200043D")]
[ExecuteInEditMode]
public class MoveBlocker : MonoBehaviour
{
	[Token(Token = "0x4001F02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float height;

	[Token(Token = "0x4001F03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool generateMesh;

	[Token(Token = "0x4001F04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float uvDensity;

	[Token(Token = "0x4001F05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float splineDist;

	[Token(Token = "0x4001F06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float splineMaxPart;

	[Token(Token = "0x4001F07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float splineBreakPart;

	[Token(Token = "0x4001F08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float tileDensity;

	[Token(Token = "0x4001F09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float shaderAlphaDist;

	[Token(Token = "0x4001F0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float shaderAlphaMul;

	[Token(Token = "0x4001F0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float checkCameraCollisionRange;

	[Token(Token = "0x4001F0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool slideOnCollision;

	[Token(Token = "0x4001F0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool inCockpit;

	[Token(Token = "0x4001F0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector3 cockpitSize;

	[Token(Token = "0x4001F0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform cameraRig;

	[Token(Token = "0x4001F10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform camPosTr;

	[Token(Token = "0x4001F11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3[] nodes;

	[Token(Token = "0x4001F12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3[] points;

	[Token(Token = "0x4001F13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int nodesChecksum;

	[Token(Token = "0x4001F14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private PlaneBody planeBody;

	[Token(Token = "0x4001F15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private VRCockpit vrCockpit;

	[Token(Token = "0x4001F16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Vector3 prevCamPos;

	[Token(Token = "0x4001F17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static float startDelay;

	[Token(Token = "0x4001F18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static int lastJumpCounter;

	[Token(Token = "0x4001F19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static float delayAfterJump;

	[Token(Token = "0x4001F1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static float lastRecenteredTime;

	[Token(Token = "0x4001F1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private static int raycastMask;

	[Token(Token = "0x6001C9C")]
	[Address(RVA = "0xF81070", Offset = "0xF81070", VA = "0xF81070")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001C9D")]
	[Address(RVA = "0xF81270", Offset = "0xF81270", VA = "0xF81270")]
	private void Start()
	{
	}

	[Token(Token = "0x6001C9E")]
	[Address(RVA = "0xF81B7C", Offset = "0xF81B7C", VA = "0xF81B7C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001C9F")]
	[Address(RVA = "0xF81C6C", Offset = "0xF81C6C", VA = "0xF81C6C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001CA0")]
	[Address(RVA = "0xF81D5C", Offset = "0xF81D5C", VA = "0xF81D5C")]
	private void OnRecenteredPose()
	{
	}

	[Token(Token = "0x6001CA1")]
	[Address(RVA = "0xF81F18", Offset = "0xF81F18", VA = "0xF81F18")]
	private void RestoreCameraToActivePlane()
	{
	}

	[Token(Token = "0x6001CA2")]
	[Address(RVA = "0xF820D8", Offset = "0xF820D8", VA = "0xF820D8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001CA3")]
	[Address(RVA = "0xF82690", Offset = "0xF82690", VA = "0xF82690")]
	public static void UpdateMove(Transform camPosTr, Transform cameraRig)
	{
	}

	[Token(Token = "0x6001CA4")]
	[Address(RVA = "0xF8145C", Offset = "0xF8145C", VA = "0xF8145C")]
	private void FillNodes()
	{
	}

	[Token(Token = "0x6001CA5")]
	[Address(RVA = "0xF82C1C", Offset = "0xF82C1C", VA = "0xF82C1C")]
	public static Vector3 GetPointOnBezierCurve(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001CA6")]
	[Address(RVA = "0xF832DC", Offset = "0xF832DC", VA = "0xF832DC")]
	private void DrawInCockpitGizmo()
	{
	}

	[Token(Token = "0x6001CA7")]
	[Address(RVA = "0xF83330", Offset = "0xF83330", VA = "0xF83330")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6001CA8")]
	[Address(RVA = "0xF83748", Offset = "0xF83748", VA = "0xF83748")]
	private void UpdateRenderParams()
	{
	}

	[Token(Token = "0x6001CA9")]
	[Address(RVA = "0xF82D0C", Offset = "0xF82D0C", VA = "0xF82D0C")]
	private void GenerateMesh()
	{
	}

	[Token(Token = "0x6001CAA")]
	[Address(RVA = "0xF827B4", Offset = "0xF827B4", VA = "0xF827B4")]
	public static void ProcessMoveBlocker(Transform camPosTr, Transform cameraRig)
	{
	}

	[Token(Token = "0x6001CAB")]
	[Address(RVA = "0xF838BC", Offset = "0xF838BC", VA = "0xF838BC")]
	public static void SaveLastCameraPosition()
	{
	}

	[Token(Token = "0x6001CAC")]
	[Address(RVA = "0xF821A8", Offset = "0xF821A8", VA = "0xF821A8")]
	private void CheckCollisionInCockpit()
	{
	}

	[Token(Token = "0x6001CAD")]
	[Address(RVA = "0xF83984", Offset = "0xF83984", VA = "0xF83984")]
	public MoveBlocker()
	{
	}
}
[Token(Token = "0x200043E")]
public class MoveInBase : MonoBehaviour
{
	[Token(Token = "0x4001F1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool allowRotationSnap;

	[Token(Token = "0x4001F1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[SerializeField]
	private bool flyMode;

	[Token(Token = "0x4001F1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform cameraRig;

	[Token(Token = "0x4001F1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform centerEyeAnchor;

	[Token(Token = "0x4001F20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool turnExecuted;

	[Token(Token = "0x6001CAF")]
	[Address(RVA = "0xF83B84", Offset = "0xF83B84", VA = "0xF83B84")]
	private void Start()
	{
	}

	[Token(Token = "0x6001CB0")]
	[Address(RVA = "0xF83CE0", Offset = "0xF83CE0", VA = "0xF83CE0")]
	private void Update()
	{
	}

	[Token(Token = "0x6001CB1")]
	[Address(RVA = "0xF83F14", Offset = "0xF83F14", VA = "0xF83F14")]
	private void Turn(float y)
	{
	}

	[Token(Token = "0x6001CB2")]
	[Address(RVA = "0xF83FB0", Offset = "0xF83FB0", VA = "0xF83FB0")]
	private void Move(float x, float z)
	{
	}

	[Token(Token = "0x6001CB3")]
	[Address(RVA = "0xF84110", Offset = "0xF84110", VA = "0xF84110")]
	public MoveInBase()
	{
	}
}
[Token(Token = "0x200043F")]
public class MultiplePlayingAudio : MonoBehaviour
{
	[Token(Token = "0x4001F21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource audios;

	[Token(Token = "0x4001F22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AudioSource fadingAudio;

	[Token(Token = "0x4001F23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AudioSource[] audioArr;

	[Token(Token = "0x4001F24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float audiosPitch;

	[Token(Token = "0x4001F25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float audiosVolume;

	[Token(Token = "0x4001F26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float lastPlayedVolume;

	[Token(Token = "0x4001F27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool useAudioFade;

	[Token(Token = "0x4001F28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int audioIndex;

	[Token(Token = "0x4001F29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float audioTime;

	[Token(Token = "0x4001F2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private int count;

	[Token(Token = "0x4001F2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private float pitchVariance;

	[Token(Token = "0x4001F2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private float fadeSpeed;

	[Token(Token = "0x4001F2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	private float audioDuration;

	[Token(Token = "0x4001F2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91C564", Offset = "0x91C564")]
	private float <PitchFactor>k__BackingField;

	[Token(Token = "0x17000199")]
	public float PitchFactor
	{
		[Token(Token = "0x6001CB4")]
		[Address(RVA = "0xCAD7F0", Offset = "0xCAD7F0", VA = "0xCAD7F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92BCE4", Offset = "0x92BCE4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001CB5")]
		[Address(RVA = "0xCAD7F8", Offset = "0xCAD7F8", VA = "0xCAD7F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92BCF4", Offset = "0x92BCF4")]
		set
		{
		}
	}

	[Token(Token = "0x6001CB6")]
	[Address(RVA = "0xCAD800", Offset = "0xCAD800", VA = "0xCAD800")]
	private void Start()
	{
	}

	[Token(Token = "0x6001CB7")]
	[Address(RVA = "0xCAD80C", Offset = "0xCAD80C", VA = "0xCAD80C")]
	public void Setup(int count, float pitchVariance = 0.02f, float fadeSpeed = 4f)
	{
	}

	[Token(Token = "0x6001CB8")]
	[Address(RVA = "0xCADC14", Offset = "0xCADC14", VA = "0xCADC14")]
	public void Play()
	{
	}

	[Token(Token = "0x6001CB9")]
	[Address(RVA = "0xCADD94", Offset = "0xCADD94", VA = "0xCADD94")]
	private void PrepareNext()
	{
	}

	[Token(Token = "0x6001CBA")]
	[Address(RVA = "0xCADE4C", Offset = "0xCADE4C", VA = "0xCADE4C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001CBB")]
	[Address(RVA = "0xCAD9A0", Offset = "0xCAD9A0", VA = "0xCAD9A0")]
	private AudioSource CloneAudio()
	{
		return null;
	}

	[Token(Token = "0x6001CBC")]
	[Address(RVA = "0xCADF4C", Offset = "0xCADF4C", VA = "0xCADF4C")]
	public MultiplePlayingAudio()
	{
	}
}
[Token(Token = "0x2000440")]
public class ObserverModeInfo : MonoBehaviour
{
	[Token(Token = "0x4001F2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMesh labelText;

	[Token(Token = "0x4001F30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMesh playerText;

	[Token(Token = "0x4001F31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ObserverModeInfo activeInfo;

	[Token(Token = "0x6001CBD")]
	[Address(RVA = "0xCC1154", Offset = "0xCC1154", VA = "0xCC1154")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001CBE")]
	[Address(RVA = "0xCC14B8", Offset = "0xCC14B8", VA = "0xCC14B8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001CBF")]
	[Address(RVA = "0xCC1298", Offset = "0xCC1298", VA = "0xCC1298")]
	public void UpdatePlayer()
	{
	}

	[Token(Token = "0x6001CC0")]
	[Address(RVA = "0xCC155C", Offset = "0xCC155C", VA = "0xCC155C")]
	public ObserverModeInfo()
	{
	}
}
[Token(Token = "0x2000441")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x9187F0", Offset = "0x9187F0")]
public class PilotNeck : MonoBehaviour
{
	[Token(Token = "0x4001F32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform followTarget;

	[Token(Token = "0x4001F33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private readonly float mulAngle;

	[Token(Token = "0x4001F34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool adjustNeck;

	[Token(Token = "0x6001CC1")]
	[Address(RVA = "0x173B188", Offset = "0x173B188", VA = "0x173B188")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001CC2")]
	[Address(RVA = "0x173B1D8", Offset = "0x173B1D8", VA = "0x173B1D8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001CC3")]
	[Address(RVA = "0x173B384", Offset = "0x173B384", VA = "0x173B384")]
	public PilotNeck()
	{
	}
}
[Token(Token = "0x2000442")]
public static class PlanePicture
{
	[Token(Token = "0x2000443")]
	public class Data
	{
		[Token(Token = "0x4001F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RenderTexture texture;

		[Token(Token = "0x4001F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool dirty;

		[Token(Token = "0x6001CD2")]
		[Address(RVA = "0xD88A94", Offset = "0xD88A94", VA = "0xD88A94")]
		public Data()
		{
		}

		[Token(Token = "0x6001CD3")]
		[Address(RVA = "0xD88B6C", Offset = "0xD88B6C", VA = "0xD88B6C")]
		public void Release()
		{
		}
	}

	[Token(Token = "0x2000444")]
	private static class PlanePictureHelper
	{
		[Token(Token = "0x6001CD4")]
		[Address(RVA = "0xD88C3C", Offset = "0xD88C3C", VA = "0xD88C3C")]
		public static Vector3 SetupObjectToRenderView(PlaneBody planeBody, Camera cam)
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x4001F35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<PlayerPlane, Data> pictures;

	[Token(Token = "0x4001F36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Camera cam;

	[Token(Token = "0x4001F37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Renderer shadowRenderer;

	[Token(Token = "0x4001F38")]
	private const float angle = 135f;

	[Token(Token = "0x4001F39")]
	private const float fov = 15f;

	[Token(Token = "0x4001F3A")]
	private const float distanceMul = 0.2f;

	[Token(Token = "0x4001F3B")]
	private const float YOffset = -1000f;

	[Token(Token = "0x4001F3C")]
	private const float cameraOffsetY = 2f;

	[Token(Token = "0x4001F3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Color pictureSunColor;

	[Token(Token = "0x4001F3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static readonly Quaternion pictureSunDirection;

	[Token(Token = "0x4001F3F")]
	private const float pictureSunIntensity = 1.1f;

	[Token(Token = "0x6001CC4")]
	[Address(RVA = "0x11CFCD8", Offset = "0x11CFCD8", VA = "0x11CFCD8")]
	public static void Initialize()
	{
	}

	[Token(Token = "0x6001CC5")]
	[Address(RVA = "0x11D02E8", Offset = "0x11D02E8", VA = "0x11D02E8")]
	public static void Release()
	{
	}

	[Token(Token = "0x6001CC6")]
	[Address(RVA = "0x11D0500", Offset = "0x11D0500", VA = "0x11D0500")]
	public static void ReleasePictures()
	{
	}

	[Token(Token = "0x6001CC7")]
	[Address(RVA = "0x11D06C8", Offset = "0x11D06C8", VA = "0x11D06C8")]
	public static void Dispose(PlayerPlane playerPlane)
	{
	}

	[Token(Token = "0x6001CC8")]
	[Address(RVA = "0x11D07A4", Offset = "0x11D07A4", VA = "0x11D07A4")]
	public static Texture Get(PlaneBody planeBody)
	{
		return null;
	}

	[Token(Token = "0x6001CC9")]
	[Address(RVA = "0x11D0810", Offset = "0x11D0810", VA = "0x11D0810")]
	public static Texture Get(PlayerPlane playerPlane)
	{
		return null;
	}

	[Token(Token = "0x6001CCA")]
	[Address(RVA = "0x11D0ADC", Offset = "0x11D0ADC", VA = "0x11D0ADC")]
	public static Texture2D GetDefault(PlaneBody planeBody)
	{
		return null;
	}

	[Token(Token = "0x6001CCB")]
	[Address(RVA = "0x11D08F0", Offset = "0x11D08F0", VA = "0x11D08F0")]
	private static Texture Sync(PlayerPlane playerPlane, bool isPrefab = false)
	{
		return null;
	}

	[Token(Token = "0x6001CCC")]
	[Address(RVA = "0x11D0BA8", Offset = "0x11D0BA8", VA = "0x11D0BA8")]
	private static Texture Sync(PlaneBody planeBody)
	{
		return null;
	}

	[Token(Token = "0x6001CCD")]
	[Address(RVA = "0x11D12BC", Offset = "0x11D12BC", VA = "0x11D12BC")]
	public static void Sync(PlayerPlane playerPlane, PlaneBody planeBody)
	{
	}

	[Token(Token = "0x6001CCE")]
	[Address(RVA = "0x11D0C8C", Offset = "0x11D0C8C", VA = "0x11D0C8C")]
	public static Data Render(PlaneBody planeBody, [Optional] PlayerPlane playerPlane)
	{
		return null;
	}

	[Token(Token = "0x6001CCF")]
	[Address(RVA = "0x11D1398", Offset = "0x11D1398", VA = "0x11D1398")]
	public static void SetDirty(PlaneBody planeBody)
	{
	}

	[Token(Token = "0x6001CD0")]
	[Address(RVA = "0x11D1404", Offset = "0x11D1404", VA = "0x11D1404")]
	public static void SetDirty(PlayerPlane playerPlane)
	{
	}
}
[Token(Token = "0x2000445")]
public static class PlaneShopPictures
{
	[Token(Token = "0x4001F42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Material material;

	[Token(Token = "0x4001F43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Dictionary<GameObject, PlanePicture.Data> cache;

	[Token(Token = "0x6001CD5")]
	[Address(RVA = "0x11CF6E8", Offset = "0x11CF6E8", VA = "0x11CF6E8")]
	public static Texture Get(GameObject prefab)
	{
		return null;
	}

	[Token(Token = "0x6001CD6")]
	[Address(RVA = "0x11D1DCC", Offset = "0x11D1DCC", VA = "0x11D1DCC")]
	public static void Initialize()
	{
	}

	[Token(Token = "0x6001CD7")]
	[Address(RVA = "0x11D1E54", Offset = "0x11D1E54", VA = "0x11D1E54")]
	public static void Release()
	{
	}

	[Token(Token = "0x6001CD8")]
	[Address(RVA = "0x11D1ED0", Offset = "0x11D1ED0", VA = "0x11D1ED0")]
	public static void ReleasePictures()
	{
	}
}
[Token(Token = "0x2000446")]
public class PlayerCharacterController : MonoBehaviour
{
	[Token(Token = "0x4001F44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform motionForward;

	[Token(Token = "0x6001CD9")]
	[Address(RVA = "0x10C7FA0", Offset = "0x10C7FA0", VA = "0x10C7FA0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001CDA")]
	[Address(RVA = "0x10C7FA4", Offset = "0x10C7FA4", VA = "0x10C7FA4")]
	private void Update()
	{
	}

	[Token(Token = "0x6001CDB")]
	[Address(RVA = "0x10C8154", Offset = "0x10C8154", VA = "0x10C8154")]
	public PlayerCharacterController()
	{
	}
}
[Token(Token = "0x2000447")]
public class PlayerPilot : PlanePilot
{
	[Token(Token = "0x2000448")]
	public enum Descriptor
	{
		[Token(Token = "0x4001F5F")]
		Position,
		[Token(Token = "0x4001F60")]
		Angle
	}

	[Token(Token = "0x2000449")]
	public class BufferData
	{
		[Token(Token = "0x4001F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 value;

		[Token(Token = "0x4001F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float deltaTime;

		[Token(Token = "0x6001CED")]
		[Address(RVA = "0xD8B128", Offset = "0xD8B128", VA = "0xD8B128")]
		public void CopyFrom(BufferData source)
		{
		}

		[Token(Token = "0x6001CEE")]
		[Address(RVA = "0xD8B120", Offset = "0xD8B120", VA = "0xD8B120")]
		public BufferData()
		{
		}
	}

	[Token(Token = "0x200044A")]
	public class Buffer
	{
		[Token(Token = "0x4001F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Descriptor type;

		[Token(Token = "0x4001F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly bool useBezier;

		[Token(Token = "0x4001F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly BufferData[] data;

		[Token(Token = "0x4001F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int count;

		[Token(Token = "0x6001CEF")]
		[Address(RVA = "0xD8AF14", Offset = "0xD8AF14", VA = "0xD8AF14")]
		public Buffer(Buffer source)
		{
		}

		[Token(Token = "0x6001CF0")]
		[Address(RVA = "0xD8AF5C", Offset = "0xD8AF5C", VA = "0xD8AF5C")]
		public Buffer(Descriptor descriptor, bool useBezier)
		{
		}

		[Token(Token = "0x6001CF1")]
		[Address(RVA = "0xD8B020", Offset = "0xD8B020", VA = "0xD8B020")]
		public Buffer(Descriptor descriptor)
		{
		}

		[Token(Token = "0x6001CF2")]
		[Address(RVA = "0xD8AF88", Offset = "0xD8AF88", VA = "0xD8AF88")]
		public void CopyFrom(Buffer source)
		{
		}

		[Token(Token = "0x6001CF3")]
		[Address(RVA = "0xD8B154", Offset = "0xD8B154", VA = "0xD8B154")]
		public static Buffer[] CreateFrom(Buffer[] source)
		{
			return null;
		}
	}

	[Token(Token = "0x200044B")]
	private class Motion
	{
		[Token(Token = "0x4001F67")]
		private const int observations = 3;

		[Token(Token = "0x4001F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Buffer buffer;

		[Token(Token = "0x4001F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Vector3[] data;

		[Token(Token = "0x4001F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int idx;

		[Token(Token = "0x4001F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool notReady;

		[Token(Token = "0x1700019C")]
		public int BufferCount
		{
			[Token(Token = "0x6001CF4")]
			[Address(RVA = "0xD8B26C", Offset = "0xD8B26C", VA = "0xD8B26C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001CF5")]
		[Address(RVA = "0xD8B288", Offset = "0xD8B288", VA = "0xD8B288")]
		public Motion(Buffer buffer)
		{
		}

		[Token(Token = "0x6001CF6")]
		[Address(RVA = "0xD8B300", Offset = "0xD8B300", VA = "0xD8B300")]
		public void Track(Vector3 motion, bool forcePush)
		{
		}

		[Token(Token = "0x6001CF7")]
		[Address(RVA = "0xD8B4C4", Offset = "0xD8B4C4", VA = "0xD8B4C4")]
		private bool Distinct(Vector3 motion)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CF8")]
		[Address(RVA = "0xD8B498", Offset = "0xD8B498", VA = "0xD8B498")]
		private void Push(Vector3 motion)
		{
		}

		[Token(Token = "0x6001CF9")]
		[Address(RVA = "0xD8B658", Offset = "0xD8B658", VA = "0xD8B658")]
		public void PushBuffer(Vector3 motion)
		{
		}
	}

	[Token(Token = "0x4001F45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private PlayerPilotIK pilotIK;

	[Token(Token = "0x4001F46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isPlayer;

	[Token(Token = "0x4001F47")]
	private const float sendRate = 0.25f;

	[Token(Token = "0x4001F48")]
	private const float sendRateRcp = 4f;

	[Token(Token = "0x4001F49")]
	private const int MaxBuffer = 3;

	[Token(Token = "0x4001F4A")]
	private const int TrackedObjects = 6;

	[Token(Token = "0x4001F4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float lastSendTime;

	[Token(Token = "0x4001F4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float lastReceiveTime;

	[Token(Token = "0x4001F4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3[] targetDesc;

	[Token(Token = "0x4001F4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3[] currentDesc;

	[Token(Token = "0x4001F4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3[] tempDesc;

	[Token(Token = "0x4001F50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] bezierA;

	[Token(Token = "0x4001F51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3[] bezierB;

	[Token(Token = "0x4001F52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] previousDesc;

	[Token(Token = "0x4001F53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private readonly int[] runtimeMotionIndex;

	[Token(Token = "0x4001F54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private readonly float[][] runtimeMotionTime;

	[Token(Token = "0x4001F55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Motion headPosMotion;

	[Token(Token = "0x4001F56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Motion headRotMotion;

	[Token(Token = "0x4001F57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Motion leftPosMotion;

	[Token(Token = "0x4001F58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Motion leftRotMotion;

	[Token(Token = "0x4001F59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Motion rightPosMotion;

	[Token(Token = "0x4001F5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Motion rightRotMotion;

	[Token(Token = "0x4001F5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly Buffer[] netCache;

	[Token(Token = "0x4001F5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly Buffer[] sendBuffer;

	[Token(Token = "0x4001F5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private readonly Buffer[] runtimeBuffer;

	[Token(Token = "0x1700019A")]
	public Vector3 TargetHandLeft
	{
		[Token(Token = "0x6001CDC")]
		[Address(RVA = "0x10CA6FC", Offset = "0x10CA6FC", VA = "0x10CA6FC")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700019B")]
	public Vector3 TargetHandRight
	{
		[Token(Token = "0x6001CDD")]
		[Address(RVA = "0x10CA74C", Offset = "0x10CA74C", VA = "0x10CA74C")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x6001CDE")]
	[Address(RVA = "0x10CA79C", Offset = "0x10CA79C", VA = "0x10CA79C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001CDF")]
	[Address(RVA = "0x10CAE9C", Offset = "0x10CAE9C", VA = "0x10CAE9C")]
	public void SetAIMode(bool toggle)
	{
	}

	[Token(Token = "0x6001CE0")]
	[Address(RVA = "0x10CB1C0", Offset = "0x10CB1C0", VA = "0x10CB1C0")]
	public bool IsAIMode()
	{
		return default(bool);
	}

	[Token(Token = "0x6001CE1")]
	[Address(RVA = "0x10CA7F8", Offset = "0x10CA7F8", VA = "0x10CA7F8")]
	private void TrackMotions(bool forcePush = false)
	{
	}

	[Token(Token = "0x6001CE2")]
	[Address(RVA = "0x10CB1DC", Offset = "0x10CB1DC", VA = "0x10CB1DC")]
	private float GetMotionTarget(int idx)
	{
		return default(float);
	}

	[Token(Token = "0x6001CE3")]
	[Address(RVA = "0x10CB6CC", Offset = "0x10CB6CC", VA = "0x10CB6CC")]
	private void UpdateTrackedObjectLerp(int idx)
	{
	}

	[Token(Token = "0x6001CE4")]
	[Address(RVA = "0x10CAD08", Offset = "0x10CAD08", VA = "0x10CAD08")]
	private void MoveByPlayer()
	{
	}

	[Token(Token = "0x6001CE5")]
	[Address(RVA = "0x10CBA04", Offset = "0x10CBA04", VA = "0x10CBA04")]
	public void Flush()
	{
	}

	[Token(Token = "0x6001CE6")]
	[Address(RVA = "0x10CBAE4", Offset = "0x10CBAE4", VA = "0x10CBAE4")]
	public void PackData(out Buffer[] buffer)
	{
	}

	[Token(Token = "0x6001CE7")]
	[Address(RVA = "0x10CBB68", Offset = "0x10CBB68", VA = "0x10CBB68")]
	public void UnpackData(Buffer[] buffer)
	{
	}

	[Token(Token = "0x6001CE8")]
	[Address(RVA = "0x10CB97C", Offset = "0x10CB97C", VA = "0x10CB97C")]
	private Vector3 LerpAngle(Vector3 from, Vector3 to, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001CE9")]
	[Address(RVA = "0x10CB4C0", Offset = "0x10CB4C0", VA = "0x10CB4C0")]
	private void ProduceBezierPath(int bufferIndex)
	{
	}

	[Token(Token = "0x6001CEA")]
	[Address(RVA = "0x10CB860", Offset = "0x10CB860", VA = "0x10CB860")]
	private Vector3 BezierCurve(int idx, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001CEB")]
	[Address(RVA = "0x10CBE18", Offset = "0x10CBE18", VA = "0x10CBE18")]
	public PlayerPilot()
	{
	}
}
[Token(Token = "0x200044C")]
internal static class PlayerPilotBufferHelper
{
	[Token(Token = "0x6001CFA")]
	[Address(RVA = "0x10CBA88", Offset = "0x10CBA88", VA = "0x10CBA88")]
	public static void Clear(this PlayerPilot.Buffer[] buffer)
	{
	}

	[Token(Token = "0x6001CFB")]
	[Address(RVA = "0x10CBD84", Offset = "0x10CBD84", VA = "0x10CBD84")]
	public static void CopyFrom(this PlayerPilot.Buffer[] buffer, PlayerPilot.Buffer[] source)
	{
	}
}
[Token(Token = "0x200044D")]
public class PlayerPilotIK : MonoBehaviour
{
	[Token(Token = "0x4001F6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Vector3 offsetLeft;

	[Token(Token = "0x4001F6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private Vector3 offsetRight;

	[Token(Token = "0x4001F6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform head;

	[Token(Token = "0x4001F6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Transform leftHand;

	[Token(Token = "0x4001F70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Transform rightHand;

	[Token(Token = "0x4001F71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Transform aiHead;

	[Token(Token = "0x4001F72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Transform aiLeftHand;

	[Token(Token = "0x4001F73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Transform aiRightHand;

	[Token(Token = "0x4001F74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Animator animator;

	[Token(Token = "0x4001F75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public VRCockpit cockpit;

	[Token(Token = "0x4001F76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool aiDriven;

	[Token(Token = "0x4001F77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	private bool validLeft;

	[Token(Token = "0x4001F78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
	private bool validRight;

	[Token(Token = "0x4001F79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x73")]
	private bool validHead;

	[Token(Token = "0x1700019D")]
	public Vector3 LeftHandPosition
	{
		[Token(Token = "0x6001CFC")]
		[Address(RVA = "0x10CA714", Offset = "0x10CA714", VA = "0x10CA714")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700019E")]
	public Vector3 RightHandPosition
	{
		[Token(Token = "0x6001CFD")]
		[Address(RVA = "0x10CA764", Offset = "0x10CA764", VA = "0x10CA764")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x6001CFE")]
	[Address(RVA = "0x10CC7E4", Offset = "0x10CC7E4", VA = "0x10CC7E4")]
	private void OnAnimatorIK()
	{
	}

	[Token(Token = "0x6001CFF")]
	[Address(RVA = "0x10CD420", Offset = "0x10CD420", VA = "0x10CD420")]
	private Vector3 Offset(Vector3 pos, Quaternion rot, Vector3 offset)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001D00")]
	[Address(RVA = "0x10CD7F4", Offset = "0x10CD7F4", VA = "0x10CD7F4")]
	private float GetRotationBlend(Vector3 posLeft, Vector3 posRight, Vector3 headPos, Quaternion headRot)
	{
		return default(float);
	}

	[Token(Token = "0x6001D01")]
	[Address(RVA = "0x10CDA4C", Offset = "0x10CDA4C", VA = "0x10CDA4C")]
	private float Unwrap(float angle)
	{
		return default(float);
	}

	[Token(Token = "0x6001D02")]
	[Address(RVA = "0x10CD554", Offset = "0x10CD554", VA = "0x10CD554")]
	private void HeadDecomposition(Quaternion rot, out Quaternion rotY, out Quaternion rotZ)
	{
	}

	[Token(Token = "0x6001D03")]
	[Address(RVA = "0x10CAFE0", Offset = "0x10CAFE0", VA = "0x10CAFE0")]
	public void UpdateHeadTransform(Vector3 localPosition, Quaternion localRotation)
	{
	}

	[Token(Token = "0x6001D04")]
	[Address(RVA = "0x10CB080", Offset = "0x10CB080", VA = "0x10CB080")]
	public void UpdateLeftHand(Vector3 localPosition, Quaternion localRotation)
	{
	}

	[Token(Token = "0x6001D05")]
	[Address(RVA = "0x10CB120", Offset = "0x10CB120", VA = "0x10CB120")]
	public void UpdateRightHand(Vector3 localPosition, Quaternion localRotation)
	{
	}

	[Token(Token = "0x6001D06")]
	[Address(RVA = "0x10CDA98", Offset = "0x10CDA98", VA = "0x10CDA98")]
	public PlayerPilotIK()
	{
	}
}
[Token(Token = "0x200044E")]
public class RadioBox : MonoBehaviour
{
	[Token(Token = "0x4001F7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform switchPower;

	[Token(Token = "0x4001F7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform switchMic;

	[Token(Token = "0x4001F7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform switchChannel;

	[Token(Token = "0x4001F7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Renderer[] lamps;

	[Token(Token = "0x4001F7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool canSwitchChannels;

	[Token(Token = "0x6001D07")]
	[Address(RVA = "0x11878A4", Offset = "0x11878A4", VA = "0x11878A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001D08")]
	[Address(RVA = "0x11878A8", Offset = "0x11878A8", VA = "0x11878A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6001D09")]
	[Address(RVA = "0x1187D68", Offset = "0x1187D68", VA = "0x1187D68")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001D0A")]
	[Address(RVA = "0x1187E5C", Offset = "0x1187E5C", VA = "0x1187E5C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001D0B")]
	[Address(RVA = "0x1187F4C", Offset = "0x1187F4C", VA = "0x1187F4C")]
	private void OnVoiceChanged()
	{
	}

	[Token(Token = "0x6001D0C")]
	[Address(RVA = "0x1187F50", Offset = "0x1187F50", VA = "0x1187F50")]
	private void SwitchPower()
	{
	}

	[Token(Token = "0x6001D0D")]
	[Address(RVA = "0x11880E4", Offset = "0x11880E4", VA = "0x11880E4")]
	private bool IsPowerOn()
	{
		return default(bool);
	}

	[Token(Token = "0x6001D0E")]
	[Address(RVA = "0x1188188", Offset = "0x1188188", VA = "0x1188188")]
	private void SwitchMicrophone()
	{
	}

	[Token(Token = "0x6001D0F")]
	[Address(RVA = "0x118831C", Offset = "0x118831C", VA = "0x118831C")]
	private bool IsMicrophoneOn()
	{
		return default(bool);
	}

	[Token(Token = "0x6001D10")]
	[Address(RVA = "0x11883C0", Offset = "0x11883C0", VA = "0x11883C0")]
	private void SwitchSendToTarget()
	{
	}

	[Token(Token = "0x6001D11")]
	[Address(RVA = "0x118855C", Offset = "0x118855C", VA = "0x118855C")]
	private bool IsSendToAll()
	{
		return default(bool);
	}

	[Token(Token = "0x6001D12")]
	[Address(RVA = "0x11885F8", Offset = "0x11885F8", VA = "0x11885F8")]
	private void LampSet(int i, bool b)
	{
	}

	[Token(Token = "0x6001D13")]
	[Address(RVA = "0x11886A0", Offset = "0x11886A0", VA = "0x11886A0")]
	private void SwitchSet(Transform t, bool b)
	{
	}

	[Token(Token = "0x6001D14")]
	[Address(RVA = "0x1187BE8", Offset = "0x1187BE8", VA = "0x1187BE8")]
	private void UpdateState()
	{
	}

	[Token(Token = "0x6001D15")]
	[Address(RVA = "0x11886D4", Offset = "0x11886D4", VA = "0x11886D4")]
	private void Update()
	{
	}

	[Token(Token = "0x6001D16")]
	[Address(RVA = "0x118884C", Offset = "0x118884C", VA = "0x118884C")]
	public RadioBox()
	{
	}
}
[Token(Token = "0x200044F")]
public class RotationYoke : SteeringGrabbable
{
	[Token(Token = "0x4001F7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Transform mesh;

	[Token(Token = "0x4001F80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float limitH;

	[Token(Token = "0x4001F81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float limitV;

	[Token(Token = "0x4001F82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float2 steer;

	[Token(Token = "0x6001D17")]
	[Address(RVA = "0xDC4314", Offset = "0xDC4314", VA = "0xDC4314", Slot = "7")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6001D18")]
	[Address(RVA = "0xDC43F4", Offset = "0xDC43F4", VA = "0xDC43F4", Slot = "5")]
	public override void GrabBegin(Grabber hand, Collider grabPoint)
	{
	}

	[Token(Token = "0x6001D19")]
	[Address(RVA = "0xDC448C", Offset = "0xDC448C", VA = "0xDC448C", Slot = "6")]
	public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
	{
	}

	[Token(Token = "0x6001D1A")]
	[Address(RVA = "0xDC4494", Offset = "0xDC4494", VA = "0xDC4494", Slot = "12")]
	public override Vector2 GetSteering()
	{
		return default(Vector2);
	}

	[Token(Token = "0x6001D1B")]
	[Address(RVA = "0xDC44B4", Offset = "0xDC44B4", VA = "0xDC44B4", Slot = "13")]
	public override void OnMove(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x6001D1C")]
	[Address(RVA = "0xDC4708", Offset = "0xDC4708", VA = "0xDC4708")]
	public RotationYoke()
	{
	}
}
[Token(Token = "0x2000450")]
public class SetDirtyPlanePicture : MonoBehaviour
{
	[Token(Token = "0x4001F83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private FadeBetweenPoses fade;

	[Token(Token = "0x6001D1D")]
	[Address(RVA = "0x10A5684", Offset = "0x10A5684", VA = "0x10A5684")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001D1E")]
	[Address(RVA = "0x10A5744", Offset = "0x10A5744", VA = "0x10A5744")]
	private void Click()
	{
	}

	[Token(Token = "0x6001D1F")]
	[Address(RVA = "0x10A57E0", Offset = "0x10A57E0", VA = "0x10A57E0")]
	private void Sync()
	{
	}

	[Token(Token = "0x6001D20")]
	[Address(RVA = "0x10A5880", Offset = "0x10A5880", VA = "0x10A5880")]
	public SetDirtyPlanePicture()
	{
	}
}
[Token(Token = "0x2000451")]
public class SetPlaneCamera : MonoBehaviour
{
	[Token(Token = "0x6001D21")]
	[Address(RVA = "0x10A5888", Offset = "0x10A5888", VA = "0x10A5888")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001D22")]
	[Address(RVA = "0x10A5904", Offset = "0x10A5904", VA = "0x10A5904")]
	private void Start()
	{
	}

	[Token(Token = "0x6001D23")]
	[Address(RVA = "0x10A5980", Offset = "0x10A5980", VA = "0x10A5980")]
	public SetPlaneCamera()
	{
	}
}
[Token(Token = "0x2000452")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x918814", Offset = "0x918814")]
public static class SharedVR
{
	[Token(Token = "0x2000453")]
	public enum DeviceType
	{
		[Token(Token = "0x4001F90")]
		Any,
		[Token(Token = "0x4001F91")]
		LeftHand,
		[Token(Token = "0x4001F92")]
		RightHand,
		[Token(Token = "0x4001F93")]
		LeftFoot,
		[Token(Token = "0x4001F94")]
		RightFoot,
		[Token(Token = "0x4001F95")]
		LeftShoulder,
		[Token(Token = "0x4001F96")]
		RightShoulder,
		[Token(Token = "0x4001F97")]
		Waist,
		[Token(Token = "0x4001F98")]
		Chest,
		[Token(Token = "0x4001F99")]
		Head,
		[Token(Token = "0x4001F9A")]
		Gamepad,
		[Token(Token = "0x4001F9B")]
		Camera,
		[Token(Token = "0x4001F9C")]
		Keyboard,
		[Token(Token = "0x4001F9D")]
		Treadmill
	}

	[Token(Token = "0x2000454")]
	public enum VRControllerType
	{
		[Token(Token = "0x4001F9F")]
		OculusQuest,
		[Token(Token = "0x4001FA0")]
		OculusRift,
		[Token(Token = "0x4001FA1")]
		OculusTouch,
		[Token(Token = "0x4001FA2")]
		ViveWands,
		[Token(Token = "0x4001FA3")]
		ViveCosmos,
		[Token(Token = "0x4001FA4")]
		WMR,
		[Token(Token = "0x4001FA5")]
		ValveIndex,
		[Token(Token = "0x4001FA6")]
		Nolo,
		[Token(Token = "0x4001FA7")]
		HPReverb,
		[Token(Token = "0x4001FA8")]
		ViveFocus,
		[Token(Token = "0x4001FA9")]
		Pico,
		[Token(Token = "0x4001FAA")]
		PicoPhoenix,
		[Token(Token = "0x4001FAB")]
		Other
	}

	[Serializable]
	[Token(Token = "0x2000455")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x918828", Offset = "0x918828")]
	private sealed class <>c
	{
		[Token(Token = "0x4001FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action <>9__27_0;

		[Token(Token = "0x4001FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action <>9__27_1;

		[Token(Token = "0x4001FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Action <>9__27_2;

		[Token(Token = "0x4001FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Action <>9__27_3;

		[Token(Token = "0x4001FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static Action <>9__27_4;

		[Token(Token = "0x4001FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static Action <>9__27_5;

		[Token(Token = "0x4001FB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static Action <>9__27_6;

		[Token(Token = "0x4001FB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static Action <>9__41_0;

		[Token(Token = "0x4001FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static Action <>9__41_1;

		[Token(Token = "0x4001FB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static Action <>9__41_2;

		[Token(Token = "0x4001FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public static Action <>9__41_3;

		[Token(Token = "0x4001FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public static Action <>9__41_4;

		[Token(Token = "0x4001FB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public static Action <>9__41_5;

		[Token(Token = "0x4001FBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public static Action <>9__41_6;

		[Token(Token = "0x4001FBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public static Action <>9__41_7;

		[Token(Token = "0x4001FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public static Action <>9__42_0;

		[Token(Token = "0x6001D46")]
		[Address(RVA = "0xD90C34", Offset = "0xD90C34", VA = "0xD90C34")]
		public <>c()
		{
		}

		[Token(Token = "0x6001D47")]
		[Address(RVA = "0xD90C3C", Offset = "0xD90C3C", VA = "0xD90C3C")]
		internal void <Initialize>b__27_0()
		{
		}

		[Token(Token = "0x6001D48")]
		[Address(RVA = "0xD90CB0", Offset = "0xD90CB0", VA = "0xD90CB0")]
		internal void <Initialize>b__27_1()
		{
		}

		[Token(Token = "0x6001D49")]
		[Address(RVA = "0xD90D24", Offset = "0xD90D24", VA = "0xD90D24")]
		internal void <Initialize>b__27_2()
		{
		}

		[Token(Token = "0x6001D4A")]
		[Address(RVA = "0xD90D98", Offset = "0xD90D98", VA = "0xD90D98")]
		internal void <Initialize>b__27_3()
		{
		}

		[Token(Token = "0x6001D4B")]
		[Address(RVA = "0xD90E0C", Offset = "0xD90E0C", VA = "0xD90E0C")]
		internal void <Initialize>b__27_4()
		{
		}

		[Token(Token = "0x6001D4C")]
		[Address(RVA = "0xD90E80", Offset = "0xD90E80", VA = "0xD90E80")]
		internal void <Initialize>b__27_5()
		{
		}

		[Token(Token = "0x6001D4D")]
		[Address(RVA = "0xD90EF4", Offset = "0xD90EF4", VA = "0xD90EF4")]
		internal void <Initialize>b__27_6()
		{
		}

		[Token(Token = "0x6001D4E")]
		[Address(RVA = "0xD90F68", Offset = "0xD90F68", VA = "0xD90F68")]
		internal void <InitOculusSDK>b__41_0()
		{
		}

		[Token(Token = "0x6001D4F")]
		[Address(RVA = "0xD90FD8", Offset = "0xD90FD8", VA = "0xD90FD8")]
		internal void <InitOculusSDK>b__41_1()
		{
		}

		[Token(Token = "0x6001D50")]
		[Address(RVA = "0xD91048", Offset = "0xD91048", VA = "0xD91048")]
		internal void <InitOculusSDK>b__41_2()
		{
		}

		[Token(Token = "0x6001D51")]
		[Address(RVA = "0xD910B8", Offset = "0xD910B8", VA = "0xD910B8")]
		internal void <InitOculusSDK>b__41_3()
		{
		}

		[Token(Token = "0x6001D52")]
		[Address(RVA = "0xD91128", Offset = "0xD91128", VA = "0xD91128")]
		internal void <InitOculusSDK>b__41_4()
		{
		}

		[Token(Token = "0x6001D53")]
		[Address(RVA = "0xD91198", Offset = "0xD91198", VA = "0xD91198")]
		internal void <InitOculusSDK>b__41_5()
		{
		}

		[Token(Token = "0x6001D54")]
		[Address(RVA = "0xD91208", Offset = "0xD91208", VA = "0xD91208")]
		internal void <InitOculusSDK>b__41_6()
		{
		}

		[Token(Token = "0x6001D55")]
		[Address(RVA = "0xD91278", Offset = "0xD91278", VA = "0xD91278")]
		internal void <InitOculusSDK>b__41_7()
		{
		}

		[Token(Token = "0x6001D56")]
		[Address(RVA = "0xD912E8", Offset = "0xD912E8", VA = "0xD912E8")]
		internal void <OculusStart>b__42_0()
		{
		}
	}

	[Token(Token = "0x4001F8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static bool hasVRFocus;

	[Token(Token = "0x4001F8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private static bool hasInputFocus;

	[Token(Token = "0x4001F8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	private static bool isMounted;

	[Token(Token = "0x4001F8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static OVRInput.Controller[] OVRControllerDeviceMap;

	[Token(Token = "0x1700019F")]
	public static bool IsHMDPresent
	{
		[Token(Token = "0x6001D36")]
		[Address(RVA = "0x10A9A04", Offset = "0x10A9A04", VA = "0x10A9A04")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001A0")]
	public static VRControllerType ControllerType
	{
		[Token(Token = "0x6001D37")]
		[Address(RVA = "0x10A9AA8", Offset = "0x10A9AA8", VA = "0x10A9AA8")]
		get
		{
			return default(VRControllerType);
		}
	}

	[Token(Token = "0x170001A1")]
	public static float[] DisplayFrequencies
	{
		[Token(Token = "0x6001D38")]
		[Address(RVA = "0x10A9B94", Offset = "0x10A9B94", VA = "0x10A9B94")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000003")]
	public static event Action HMDMounted
	{
		[Token(Token = "0x6001D24")]
		[Address(RVA = "0x10A7DB4", Offset = "0x10A7DB4", VA = "0x10A7DB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92BD24", Offset = "0x92BD24")]
		add
		{
		}
		[Token(Token = "0x6001D25")]
		[Address(RVA = "0x10A7EA8", Offset = "0x10A7EA8", VA = "0x10A7EA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92BD34", Offset = "0x92BD34")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public static event Action HMDUnmounted
	{
		[Token(Token = "0x6001D26")]
		[Address(RVA = "0x10A7F9C", Offset = "0x10A7F9C", VA = "0x10A7F9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92BD44", Offset = "0x92BD44")]
		add
		{
		}
		[Token(Token = "0x6001D27")]
		[Address(RVA = "0x10A8094", Offset = "0x10A8094", VA = "0x10A8094")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92BD54", Offset = "0x92BD54")]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public static event Action FocusLost
	{
		[Token(Token = "0x6001D28")]
		[Address(RVA = "0x10A818C", Offset = "0x10A818C", VA = "0x10A818C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92BD64", Offset = "0x92BD64")]
		add
		{
		}
		[Token(Token = "0x6001D29")]
		[Address(RVA = "0x10A8284", Offset = "0x10A8284", VA = "0x10A8284")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92BD74", Offset = "0x92BD74")]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public static event Action FocusAquired
	{
		[Token(Token = "0x6001D2A")]
		[Address(RVA = "0x10A837C", Offset = "0x10A837C", VA = "0x10A837C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92BD84", Offset = "0x92BD84")]
		add
		{
		}
		[Token(Token = "0x6001D2B")]
		[Address(RVA = "0x10A8474", Offset = "0x10A8474", VA = "0x10A8474")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92BD94", Offset = "0x92BD94")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public static event Action TrackingLost
	{
		[Token(Token = "0x6001D2C")]
		[Address(RVA = "0x10A856C", Offset = "0x10A856C", VA = "0x10A856C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92BDA4", Offset = "0x92BDA4")]
		add
		{
		}
		[Token(Token = "0x6001D2D")]
		[Address(RVA = "0x10A8664", Offset = "0x10A8664", VA = "0x10A8664")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92BDB4", Offset = "0x92BDB4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public static event Action TrackingAcquired
	{
		[Token(Token = "0x6001D2E")]
		[Address(RVA = "0x10A875C", Offset = "0x10A875C", VA = "0x10A875C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92BDC4", Offset = "0x92BDC4")]
		add
		{
		}
		[Token(Token = "0x6001D2F")]
		[Address(RVA = "0x10A8854", Offset = "0x10A8854", VA = "0x10A8854")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92BDD4", Offset = "0x92BDD4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public static event Action RecenteredPose
	{
		[Token(Token = "0x6001D30")]
		[Address(RVA = "0x10A894C", Offset = "0x10A894C", VA = "0x10A894C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92BDE4", Offset = "0x92BDE4")]
		add
		{
		}
		[Token(Token = "0x6001D31")]
		[Address(RVA = "0x10A8A44", Offset = "0x10A8A44", VA = "0x10A8A44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92BDF4", Offset = "0x92BDF4")]
		remove
		{
		}
	}

	[Token(Token = "0x6001D32")]
	[Address(RVA = "0x10A8B3C", Offset = "0x10A8B3C", VA = "0x10A8B3C")]
	public static void Initialize()
	{
	}

	[Token(Token = "0x6001D33")]
	[Address(RVA = "0x10A9784", Offset = "0x10A9784", VA = "0x10A9784")]
	public static void Start()
	{
	}

	[Token(Token = "0x6001D34")]
	[Address(RVA = "0x10A99FC", Offset = "0x10A99FC", VA = "0x10A99FC")]
	public static void Release()
	{
	}

	[Token(Token = "0x6001D35")]
	[Address(RVA = "0x10A9A00", Offset = "0x10A9A00", VA = "0x10A9A00")]
	public static void Update()
	{
	}

	[Token(Token = "0x6001D39")]
	[Address(RVA = "0x10A9C84", Offset = "0x10A9C84", VA = "0x10A9C84")]
	public static void SetTargetFramerate(int rate)
	{
	}

	[Token(Token = "0x6001D3A")]
	[Address(RVA = "0x10A9D2C", Offset = "0x10A9D2C", VA = "0x10A9D2C")]
	public static void SetVibration(float duration, float frequency, float amplitude, Grabber grabber)
	{
	}

	[Token(Token = "0x6001D3B")]
	[Address(RVA = "0x10A9DC0", Offset = "0x10A9DC0", VA = "0x10A9DC0")]
	public static void SetVibration(float duration, float frequency, float amplitude, HandType hand)
	{
	}

	[Token(Token = "0x6001D3C")]
	[Address(RVA = "0x10A9E54", Offset = "0x10A9E54", VA = "0x10A9E54")]
	public static void SetVibration(float duration, float frequency, float amplitude, DeviceType deviceType)
	{
	}

	[Token(Token = "0x6001D3D")]
	[Address(RVA = "0x10A9194", Offset = "0x10A9194", VA = "0x10A9194")]
	private static void InitOculusSDK()
	{
	}

	[Token(Token = "0x6001D3E")]
	[Address(RVA = "0x10A9820", Offset = "0x10A9820", VA = "0x10A9820")]
	private static void OculusStart()
	{
	}

	[Token(Token = "0x6001D3F")]
	[Address(RVA = "0x10AA020", Offset = "0x10AA020", VA = "0x10AA020")]
	private static void OculusUpdate()
	{
	}

	[Token(Token = "0x6001D40")]
	[Address(RVA = "0x10A9778", Offset = "0x10A9778", VA = "0x10A9778")]
	private static void InitSteamVRSDK()
	{
	}

	[Token(Token = "0x6001D41")]
	[Address(RVA = "0x10A9780", Offset = "0x10A9780", VA = "0x10A9780")]
	private static void InitViveSDK()
	{
	}

	[Token(Token = "0x6001D42")]
	[Address(RVA = "0x10A977C", Offset = "0x10A977C", VA = "0x10A977C")]
	private static void InitWaveSDK()
	{
	}

	[Token(Token = "0x6001D43")]
	[Address(RVA = "0x10AA234", Offset = "0x10AA234", VA = "0x10AA234")]
	private static void WaveUpdate()
	{
	}
}
[Token(Token = "0x2000456")]
public interface ISteer
{
	[Token(Token = "0x6001D57")]
	Vector2 GetSteering();
}
[Token(Token = "0x2000457")]
public abstract class SteeringGrabbable : Grabbable, ISelfGrabbable, ISteer
{
	[Token(Token = "0x4001FBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public AnimationCurve adjustCurve;

	[Token(Token = "0x6001D58")]
	public abstract Vector2 GetSteering();

	[Token(Token = "0x6001D59")]
	public abstract void OnMove(Vector3 pos, Quaternion rot);

	[Token(Token = "0x6001D5A")]
	[Address(RVA = "0x10EAA44", Offset = "0x10EAA44", VA = "0x10EAA44", Slot = "5")]
	public override void GrabBegin(Grabber hand, Collider grabPoint)
	{
	}

	[Token(Token = "0x6001D5B")]
	[Address(RVA = "0x10EAB44", Offset = "0x10EAB44", VA = "0x10EAB44", Slot = "6")]
	public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
	{
	}

	[Token(Token = "0x6001D5C")]
	[Address(RVA = "0x10EAC6C", Offset = "0x10EAC6C", VA = "0x10EAC6C")]
	protected float2 SmoothSteering(float2 data)
	{
		return default(float2);
	}

	[Token(Token = "0x6001D5D")]
	[Address(RVA = "0x10EACFC", Offset = "0x10EACFC", VA = "0x10EACFC")]
	protected SteeringGrabbable()
	{
	}
}
[Token(Token = "0x2000458")]
public struct Telemetry
{
	[Token(Token = "0x4001FBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float _Roll;

	[Token(Token = "0x4001FBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float _Pitch;

	[Token(Token = "0x4001FC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float _Heave;

	[Token(Token = "0x4001FC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float _Yaw;

	[Token(Token = "0x4001FC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float _Sway;

	[Token(Token = "0x4001FC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float _Surge;

	[Token(Token = "0x4001FC4")]
	public const int Size = 24;

	[Token(Token = "0x4001FC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly Telemetry identity;

	[Token(Token = "0x6001D5E")]
	[Address(RVA = "0x21DBBD8", Offset = "0x21DBBD8", VA = "0x21DBBD8")]
	public Telemetry(float roll, float pitch, float heave, float yaw, float sway, float surge)
	{
	}

	[Token(Token = "0x6001D5F")]
	[Address(RVA = "0x21DBBE8", Offset = "0x21DBBE8", VA = "0x21DBBE8")]
	public static Telemetry Lerp(Telemetry from, Telemetry to, float t)
	{
		return default(Telemetry);
	}

	[Token(Token = "0x6001D60")]
	[Address(RVA = "0x21DBC28", Offset = "0x21DBC28", VA = "0x21DBC28", Slot = "3")]
	public override string ToString()
	{
		return null;
	}
}
[Token(Token = "0x2000459")]
public class TempTestGrab : MonoBehaviour
{
	[Token(Token = "0x6001D62")]
	[Address(RVA = "0x21DD6E0", Offset = "0x21DD6E0", VA = "0x21DD6E0")]
	public TempTestGrab()
	{
	}
}
[Token(Token = "0x200045A")]
public class TestPilotIK : MonoBehaviour
{
	[Token(Token = "0x6001D63")]
	[Address(RVA = "0xF06DCC", Offset = "0xF06DCC", VA = "0xF06DCC")]
	public TestPilotIK()
	{
	}
}
[Token(Token = "0x200045B")]
public class ThrottleControl : Grabbable, ISelfGrabbable
{
	[Serializable]
	[Token(Token = "0x200045C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x918838", Offset = "0x918838")]
	private sealed class <>c
	{
		[Token(Token = "0x4001FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static VibrationClip.DataProduce <>9__16_0;

		[Token(Token = "0x4001FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static VibrationClip.DataProduce <>9__16_1;

		[Token(Token = "0x4001FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static VibrationClip.DataProduce <>9__16_2;

		[Token(Token = "0x4001FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static VibrationClip.DataProduce <>9__16_3;

		[Token(Token = "0x4001FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static VibrationClip.DataProduce <>9__16_4;

		[Token(Token = "0x4001FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static VibrationClip.DataProduce <>9__16_5;

		[Token(Token = "0x4001FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static VibrationClip.DataProduce <>9__16_6;

		[Token(Token = "0x4001FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static VibrationClip.DataProduce <>9__16_7;

		[Token(Token = "0x4001FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static VibrationClip.DataProduce <>9__16_8;

		[Token(Token = "0x4001FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static VibrationClip.DataProduce <>9__16_9;

		[Token(Token = "0x6001D74")]
		[Address(RVA = "0x13755CC", Offset = "0x13755CC", VA = "0x13755CC")]
		public <>c()
		{
		}

		[Token(Token = "0x6001D75")]
		[Address(RVA = "0x13755D4", Offset = "0x13755D4", VA = "0x13755D4")]
		internal byte <Awake>b__16_0(float p)
		{
			return default(byte);
		}

		[Token(Token = "0x6001D76")]
		[Address(RVA = "0x13756CC", Offset = "0x13756CC", VA = "0x13756CC")]
		internal byte <Awake>b__16_1(float p)
		{
			return default(byte);
		}

		[Token(Token = "0x6001D77")]
		[Address(RVA = "0x13757C4", Offset = "0x13757C4", VA = "0x13757C4")]
		internal byte <Awake>b__16_2(float p)
		{
			return default(byte);
		}

		[Token(Token = "0x6001D78")]
		[Address(RVA = "0x13758BC", Offset = "0x13758BC", VA = "0x13758BC")]
		internal byte <Awake>b__16_3(float p)
		{
			return default(byte);
		}

		[Token(Token = "0x6001D79")]
		[Address(RVA = "0x13759B4", Offset = "0x13759B4", VA = "0x13759B4")]
		internal byte <Awake>b__16_4(float p)
		{
			return default(byte);
		}

		[Token(Token = "0x6001D7A")]
		[Address(RVA = "0x1375AA8", Offset = "0x1375AA8", VA = "0x1375AA8")]
		internal byte <Awake>b__16_5(float p)
		{
			return default(byte);
		}

		[Token(Token = "0x6001D7B")]
		[Address(RVA = "0x1375B48", Offset = "0x1375B48", VA = "0x1375B48")]
		internal byte <Awake>b__16_6(float p)
		{
			return default(byte);
		}

		[Token(Token = "0x6001D7C")]
		[Address(RVA = "0x1375BE8", Offset = "0x1375BE8", VA = "0x1375BE8")]
		internal byte <Awake>b__16_7(float p)
		{
			return default(byte);
		}

		[Token(Token = "0x6001D7D")]
		[Address(RVA = "0x1375C88", Offset = "0x1375C88", VA = "0x1375C88")]
		internal byte <Awake>b__16_8(float p)
		{
			return default(byte);
		}

		[Token(Token = "0x6001D7E")]
		[Address(RVA = "0x1375D28", Offset = "0x1375D28", VA = "0x1375D28")]
		internal byte <Awake>b__16_9(float p)
		{
			return default(byte);
		}
	}

	[Token(Token = "0x4001FC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private float angleLimit;

	[Token(Token = "0x4001FC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private Transform dirParent;

	[Token(Token = "0x4001FC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private Transform joint;

	[Token(Token = "0x4001FC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private HapticSourceHands bhaptics;

	[Token(Token = "0x4001FCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float maxAngle;

	[Token(Token = "0x4001FCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float maxAngleInv;

	[Token(Token = "0x4001FCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float lastHapticsTime;

	[Token(Token = "0x4001FCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float lastBHapticsTime;

	[Token(Token = "0x4001FCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float currentValue;

	[Token(Token = "0x4001FCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private PlaneBody plane;

	[Token(Token = "0x4001FD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ThrottleControl current;

	[Token(Token = "0x4001FD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static VibrationClip[] haptics;

	[Token(Token = "0x4001FD2")]
	private const float hapticsDuration = 0.5f;

	[Token(Token = "0x170001A2")]
	public override AllowSticky AllowStickyGrip
	{
		[Token(Token = "0x6001D64")]
		[Address(RVA = "0xF0CF18", Offset = "0xF0CF18", VA = "0xF0CF18", Slot = "4")]
		get
		{
			return default(AllowSticky);
		}
	}

	[Token(Token = "0x6001D65")]
	[Address(RVA = "0xF0CF20", Offset = "0xF0CF20", VA = "0xF0CF20", Slot = "5")]
	public override void GrabBegin(Grabber hand, Collider grabPoint)
	{
	}

	[Token(Token = "0x6001D66")]
	[Address(RVA = "0xF0CFAC", Offset = "0xF0CFAC", VA = "0xF0CFAC", Slot = "7")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6001D67")]
	[Address(RVA = "0xF0DAC0", Offset = "0xF0DAC0", VA = "0xF0DAC0")]
	private static void PlaneChanged(PlaneBody pb)
	{
	}

	[Token(Token = "0x6001D68")]
	[Address(RVA = "0xF0DBCC", Offset = "0xF0DBCC", VA = "0xF0DBCC")]
	private void Update()
	{
	}

	[Token(Token = "0x6001D69")]
	[Address(RVA = "0xF0DF18", Offset = "0xF0DF18", VA = "0xF0DF18")]
	private void UpdateOtherSources()
	{
	}

	[Token(Token = "0x6001D6A")]
	[Address(RVA = "0xF0E260", Offset = "0xF0E260", VA = "0xF0E260")]
	private void UpdateFromPilot()
	{
	}

	[Token(Token = "0x6001D6B")]
	[Address(RVA = "0xF0E1C8", Offset = "0xF0E1C8", VA = "0xF0E1C8")]
	private void UpdateFromJoystick()
	{
	}

	[Token(Token = "0x6001D6C")]
	[Address(RVA = "0xF0E0A4", Offset = "0xF0E0A4", VA = "0xF0E0A4")]
	private void UpdateFromNet()
	{
	}

	[Token(Token = "0x6001D6D")]
	[Address(RVA = "0xF0E65C", Offset = "0xF0E65C", VA = "0xF0E65C")]
	private void SetValue(float n)
	{
	}

	[Token(Token = "0x6001D6E")]
	[Address(RVA = "0xF0E3BC", Offset = "0xF0E3BC", VA = "0xF0E3BC", Slot = "10")]
	public void OnMove(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x6001D6F")]
	[Address(RVA = "0xF0E738", Offset = "0xF0E738", VA = "0xF0E738")]
	private void HapticsFeedback(float n)
	{
	}

	[Token(Token = "0x6001D70")]
	[Address(RVA = "0xF0DC74", Offset = "0xF0DC74", VA = "0xF0DC74")]
	private void BhapticsFeedback()
	{
	}

	[Token(Token = "0x6001D71")]
	[Address(RVA = "0xF0E968", Offset = "0xF0E968", VA = "0xF0E968")]
	public static float GetValue()
	{
		return default(float);
	}

	[Token(Token = "0x6001D72")]
	[Address(RVA = "0xF0EA34", Offset = "0xF0EA34", VA = "0xF0EA34")]
	public ThrottleControl()
	{
	}
}
[Token(Token = "0x200045D")]
public enum UserDestinationType
{
	[Token(Token = "0x4001FDF")]
	None,
	[Token(Token = "0x4001FE0")]
	GeneralMultiplayer,
	[Token(Token = "0x4001FE1")]
	DM,
	[Token(Token = "0x4001FE2")]
	TDM,
	[Token(Token = "0x4001FE3")]
	Coop,
	[Token(Token = "0x4001FE4")]
	LastMan,
	[Token(Token = "0x4001FE5")]
	FlareDM,
	[Token(Token = "0x4001FE6")]
	CHLNG
}
[Token(Token = "0x200045E")]
public enum MultiplayerLobbyType
{
	[Token(Token = "0x4001FE8")]
	None,
	[Token(Token = "0x4001FE9")]
	Public,
	[Token(Token = "0x4001FEA")]
	Private
}
[Token(Token = "0x200045F")]
public struct UserInvitationData
{
	[Token(Token = "0x4001FEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string roomId;

	[Token(Token = "0x4001FEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string server;

	[Token(Token = "0x4001FED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public MultiplayerLobbyType lobbyType;
}
[Token(Token = "0x2000460")]
public static class UserDestination
{
	[Token(Token = "0x2000461")]
	public delegate void RoomIdCallback(string roomId);

	[Token(Token = "0x2000462")]
	private abstract class UserDestinationWrapper
	{
		[Serializable]
		[Token(Token = "0x2000463")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x918848", Offset = "0x918848")]
		private sealed class <>c
		{
			[Token(Token = "0x4001FF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001FF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__1_0;

			[Token(Token = "0x6001DA5")]
			[Address(RVA = "0x269DD88", Offset = "0x269DD88", VA = "0x269DD88")]
			public <>c()
			{
			}

			[Token(Token = "0x6001DA6")]
			[Address(RVA = "0x269DD90", Offset = "0x269DD90", VA = "0x269DD90")]
			internal void <HandleInviteLaunch>b__1_0()
			{
			}
		}

		[Token(Token = "0x6001D9D")]
		[Address(RVA = "0x11B59C0", Offset = "0x11B59C0", VA = "0x11B59C0", Slot = "4")]
		public virtual void Initialize()
		{
		}

		[Token(Token = "0x6001D9E")]
		[Address(RVA = "0x11B607C", Offset = "0x11B607C", VA = "0x11B607C", Slot = "5")]
		protected virtual void HandleInviteLaunch()
		{
		}

		[Token(Token = "0x6001D9F")]
		public abstract void FetchCurrentParty(RoomIdCallback callback);

		[Token(Token = "0x6001DA0")]
		public abstract void Set(UserDestinationType destination, [Optional] string data, int count = 0, int maxCount = 0, float duration = 0f);

		[Token(Token = "0x6001DA1")]
		public abstract bool IsInvitationUIAvailable();

		[Token(Token = "0x6001DA2")]
		public abstract void ShowInvitationUI();

		[Token(Token = "0x6001DA3")]
		[Address(RVA = "0x11B5648", Offset = "0x11B5648", VA = "0x11B5648")]
		protected UserDestinationWrapper()
		{
		}
	}

	[Token(Token = "0x2000464")]
	private class UserDestinationFallback : UserDestinationWrapper
	{
		[Token(Token = "0x6001DA7")]
		[Address(RVA = "0x11B5624", Offset = "0x11B5624", VA = "0x11B5624", Slot = "4")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6001DA8")]
		[Address(RVA = "0x11B5628", Offset = "0x11B5628", VA = "0x11B5628", Slot = "6")]
		public override void FetchCurrentParty(RoomIdCallback callback)
		{
		}

		[Token(Token = "0x6001DA9")]
		[Address(RVA = "0x11B562C", Offset = "0x11B562C", VA = "0x11B562C", Slot = "7")]
		public override void Set(UserDestinationType destination, [Optional] string data, int count = 0, int maxCount = 0, float duration = 0f)
		{
		}

		[Token(Token = "0x6001DAA")]
		[Address(RVA = "0x11B5630", Offset = "0x11B5630", VA = "0x11B5630", Slot = "8")]
		public override bool IsInvitationUIAvailable()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DAB")]
		[Address(RVA = "0x11B5638", Offset = "0x11B5638", VA = "0x11B5638", Slot = "9")]
		public override void ShowInvitationUI()
		{
		}

		[Token(Token = "0x6001DAC")]
		[Address(RVA = "0x11B563C", Offset = "0x11B563C", VA = "0x11B563C", Slot = "5")]
		protected override void HandleInviteLaunch()
		{
		}

		[Token(Token = "0x6001DAD")]
		[Address(RVA = "0x11B5640", Offset = "0x11B5640", VA = "0x11B5640")]
		public UserDestinationFallback()
		{
		}
	}

	[Token(Token = "0x2000465")]
	private class UserDestinationOculus : UserDestinationWrapper
	{
		[Token(Token = "0x2000466")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x918858", Offset = "0x918858")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4001FF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public UserDestinationOculus <>4__this;

			[Token(Token = "0x4001FFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public RoomIdCallback callback;

			[Token(Token = "0x6001DBC")]
			[Address(RVA = "0x269D7FC", Offset = "0x269D7FC", VA = "0x269D7FC")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x6001DBD")]
			[Address(RVA = "0x269D804", Offset = "0x269D804", VA = "0x269D804")]
			internal void <FetchCurrentParty>g__Request|0()
			{
			}

			[Token(Token = "0x6001DBE")]
			[Address(RVA = "0x269D90C", Offset = "0x269D90C", VA = "0x269D90C")]
			internal void <FetchCurrentParty>b__1(Message<Oculus.Platform.Models.Party> msg)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000467")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x918868", Offset = "0x918868")]
		private sealed class <>c
		{
			[Token(Token = "0x4001FFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001FFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Message.Callback <>9__5_0;

			[Token(Token = "0x4001FFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Message<Oculus.Platform.Models.User>.Callback <>9__12_1;

			[Token(Token = "0x6001DC0")]
			[Address(RVA = "0x269D27C", Offset = "0x269D27C", VA = "0x269D27C")]
			public <>c()
			{
			}

			[Token(Token = "0x6001DC1")]
			[Address(RVA = "0x269D284", Offset = "0x269D284", VA = "0x269D284")]
			internal void <ShowInvitationUI>b__5_0(Message msg)
			{
			}

			[Token(Token = "0x6001DC2")]
			[Address(RVA = "0x269D3A4", Offset = "0x269D3A4", VA = "0x269D3A4")]
			internal void <Set>b__12_1(Message<Oculus.Platform.Models.User> msg2)
			{
			}
		}

		[Token(Token = "0x4001FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool retryParty;

		[Token(Token = "0x4001FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ulong LoggedInUserID;

		[Token(Token = "0x6001DAE")]
		[Address(RVA = "0x11B5650", Offset = "0x11B5650", VA = "0x11B5650", Slot = "4")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6001DAF")]
		[Address(RVA = "0x11B59F8", Offset = "0x11B59F8", VA = "0x11B59F8", Slot = "6")]
		public override void FetchCurrentParty(RoomIdCallback callback)
		{
		}

		[Token(Token = "0x6001DB0")]
		[Address(RVA = "0x11B5A78", Offset = "0x11B5A78", VA = "0x11B5A78", Slot = "8")]
		public override bool IsInvitationUIAvailable()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DB1")]
		[Address(RVA = "0x11B5A80", Offset = "0x11B5A80", VA = "0x11B5A80", Slot = "9")]
		public override void ShowInvitationUI()
		{
		}

		[Token(Token = "0x6001DB2")]
		[Address(RVA = "0x11B5C04", Offset = "0x11B5C04", VA = "0x11B5C04", Slot = "5")]
		protected override void HandleInviteLaunch()
		{
		}

		[Token(Token = "0x6001DB3")]
		[Address(RVA = "0x11B6468", Offset = "0x11B6468", VA = "0x11B6468")]
		private void HandlePartyUpdate(Message<PartyUpdateNotification> msg)
		{
		}

		[Token(Token = "0x6001DB4")]
		[Address(RVA = "0x11B6770", Offset = "0x11B6770", VA = "0x11B6770")]
		private void HandleLaunchIntentChanged(Message<string> msg)
		{
		}

		[Token(Token = "0x6001DB5")]
		[Address(RVA = "0x11B6880", Offset = "0x11B6880", VA = "0x11B6880")]
		private void HandleGroupPresenceJoin(Message<GroupPresenceJoinIntent> msg)
		{
		}

		[Token(Token = "0x6001DB6")]
		[Address(RVA = "0x11B6C40", Offset = "0x11B6C40", VA = "0x11B6C40")]
		private void HandleGroupPresenceInvitationsSent(Message<LaunchInvitePanelFlowResult> msg)
		{
		}

		[Token(Token = "0x6001DB7")]
		[Address(RVA = "0x11B6DE0", Offset = "0x11B6DE0", VA = "0x11B6DE0")]
		private void HandleGroupPresenceLeaveIntentReceived(Message<GroupPresenceLeaveIntent> msg)
		{
		}

		[Token(Token = "0x6001DB8")]
		[Address(RVA = "0x11B7078", Offset = "0x11B7078", VA = "0x11B7078", Slot = "7")]
		public override void Set(UserDestinationType destination, [Optional] string data, int count = 0, int maxCount = 0, float duration = 0f)
		{
		}

		[Token(Token = "0x6001DB9")]
		[Address(RVA = "0x11B7694", Offset = "0x11B7694", VA = "0x11B7694")]
		public UserDestinationOculus()
		{
		}

		[Token(Token = "0x6001DBA")]
		[Address(RVA = "0x11B769C", Offset = "0x11B769C", VA = "0x11B769C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92BE44", Offset = "0x92BE44")]
		private void <Initialize>b__2_0(Message<Oculus.Platform.Models.User> msg)
		{
		}

		[Token(Token = "0x6001DBB")]
		[Address(RVA = "0x11B77E4", Offset = "0x11B77E4", VA = "0x11B77E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92BE54", Offset = "0x92BE54")]
		private void <Set>b__12_0(Message msg)
		{
		}
	}

	[Token(Token = "0x2000468")]
	private class UserDestinationSteam : UserDestinationFallback
	{
		[Token(Token = "0x6001DC3")]
		[Address(RVA = "0x11B7A2C", Offset = "0x11B7A2C", VA = "0x11B7A2C")]
		public UserDestinationSteam()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000469")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x918878", Offset = "0x918878")]
	private sealed class <>c
	{
		[Token(Token = "0x4001FFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x6001DC5")]
		[Address(RVA = "0x11B5180", Offset = "0x11B5180", VA = "0x11B5180")]
		public <>c()
		{
		}

		[Token(Token = "0x6001DC6")]
		[Address(RVA = "0x11B5188", Offset = "0x11B5188", VA = "0x11B5188")]
		internal void <.cctor>b__14_0()
		{
		}

		[Token(Token = "0x6001DC7")]
		[Address(RVA = "0x11B51FC", Offset = "0x11B51FC", VA = "0x11B51FC")]
		internal void <.cctor>b__14_1()
		{
		}
	}

	[Token(Token = "0x4001FEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string gameInvite;

	[Token(Token = "0x4001FEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string partyId;

	[Token(Token = "0x4001FF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static UserDestinationType inviteDestination;

	[Token(Token = "0x4001FF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly string[] destinationName;

	[Token(Token = "0x4001FF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static readonly UserDestinationWrapper wrapper;

	[Token(Token = "0x1400000A")]
	public static event Action PartyJoined
	{
		[Token(Token = "0x6001D7F")]
		[Address(RVA = "0x13C5BDC", Offset = "0x13C5BDC", VA = "0x13C5BDC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92BE04", Offset = "0x92BE04")]
		add
		{
		}
		[Token(Token = "0x6001D80")]
		[Address(RVA = "0x13C5CD4", Offset = "0x13C5CD4", VA = "0x13C5CD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92BE14", Offset = "0x92BE14")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public static event Action PartyLeft
	{
		[Token(Token = "0x6001D81")]
		[Address(RVA = "0x13C5DCC", Offset = "0x13C5DCC", VA = "0x13C5DCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92BE24", Offset = "0x92BE24")]
		add
		{
		}
		[Token(Token = "0x6001D82")]
		[Address(RVA = "0x13C5EC4", Offset = "0x13C5EC4", VA = "0x13C5EC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92BE34", Offset = "0x92BE34")]
		remove
		{
		}
	}

	[Token(Token = "0x6001D83")]
	[Address(RVA = "0x13C5FBC", Offset = "0x13C5FBC", VA = "0x13C5FBC")]
	static UserDestination()
	{
	}

	[Token(Token = "0x6001D84")]
	[Address(RVA = "0x13C6450", Offset = "0x13C6450", VA = "0x13C6450")]
	public static void Log(string txt)
	{
	}

	[Token(Token = "0x6001D85")]
	[Address(RVA = "0x13C64E0", Offset = "0x13C64E0", VA = "0x13C64E0")]
	public static void Initialize()
	{
	}

	[Token(Token = "0x6001D86")]
	[Address(RVA = "0x13C6554", Offset = "0x13C6554", VA = "0x13C6554")]
	public static void FetchCurrentParty(RoomIdCallback callback)
	{
	}

	[Token(Token = "0x6001D87")]
	[Address(RVA = "0x13C65D0", Offset = "0x13C65D0", VA = "0x13C65D0")]
	public static void Set(UserDestinationType destination, [Optional] string data, int count = 0, int maxCount = 0, float duration = 0f)
	{
	}

	[Token(Token = "0x6001D88")]
	[Address(RVA = "0x13C6684", Offset = "0x13C6684", VA = "0x13C6684")]
	public static UserDestinationType Get()
	{
		return default(UserDestinationType);
	}

	[Token(Token = "0x6001D89")]
	[Address(RVA = "0x13C66E8", Offset = "0x13C66E8", VA = "0x13C66E8")]
	public static bool IsInvitationUIAvailable()
	{
		return default(bool);
	}

	[Token(Token = "0x6001D8A")]
	[Address(RVA = "0x13C675C", Offset = "0x13C675C", VA = "0x13C675C")]
	public static void ShowInvitationUI()
	{
	}

	[Token(Token = "0x6001D8B")]
	[Address(RVA = "0x13C67D0", Offset = "0x13C67D0", VA = "0x13C67D0")]
	public static string GetInvitation()
	{
		return null;
	}

	[Token(Token = "0x6001D8C")]
	[Address(RVA = "0x13C6834", Offset = "0x13C6834", VA = "0x13C6834")]
	public static bool HasInvitation()
	{
		return default(bool);
	}

	[Token(Token = "0x6001D8D")]
	[Address(RVA = "0x13C6924", Offset = "0x13C6924", VA = "0x13C6924")]
	public static void UseInvitation()
	{
	}

	[Token(Token = "0x6001D8E")]
	[Address(RVA = "0x13C69C0", Offset = "0x13C69C0", VA = "0x13C69C0")]
	public static string GetPartyId()
	{
		return null;
	}

	[Token(Token = "0x6001D8F")]
	[Address(RVA = "0x13C6A24", Offset = "0x13C6A24", VA = "0x13C6A24")]
	public static bool HasParty()
	{
		return default(bool);
	}

	[Token(Token = "0x6001D90")]
	[Address(RVA = "0x13C6B14", Offset = "0x13C6B14", VA = "0x13C6B14")]
	public static bool HasInvitationOrParty()
	{
		return default(bool);
	}

	[Token(Token = "0x6001D91")]
	[Address(RVA = "0x13C6B9C", Offset = "0x13C6B9C", VA = "0x13C6B9C")]
	public static bool DoesRequireLaunch()
	{
		return default(bool);
	}

	[Token(Token = "0x6001D92")]
	[Address(RVA = "0x13C6CC4", Offset = "0x13C6CC4", VA = "0x13C6CC4")]
	public static void OnJoinedRoom(string loungeId)
	{
	}

	[Token(Token = "0x6001D93")]
	[Address(RVA = "0x13C6F50", Offset = "0x13C6F50", VA = "0x13C6F50")]
	public static void ParseInvitation(string invitation, out UserInvitationData res)
	{
	}

	[Token(Token = "0x6001D94")]
	[Address(RVA = "0x13C709C", Offset = "0x13C709C", VA = "0x13C709C")]
	public static void PrepareMissionDestination()
	{
	}

	[Token(Token = "0x6001D95")]
	[Address(RVA = "0x13C7460", Offset = "0x13C7460", VA = "0x13C7460")]
	private static bool IsCompetitive(UserDestinationType d)
	{
		return default(bool);
	}

	[Token(Token = "0x6001D96")]
	[Address(RVA = "0x13C7484", Offset = "0x13C7484", VA = "0x13C7484")]
	private static bool IsAnyLobby(UserDestinationType d)
	{
		return default(bool);
	}

	[Token(Token = "0x6001D97")]
	[Address(RVA = "0x13C7490", Offset = "0x13C7490", VA = "0x13C7490")]
	private static bool TryParse(string name, out UserDestinationType t)
	{
		return default(bool);
	}

	[Token(Token = "0x6001D98")]
	[Address(RVA = "0x13C758C", Offset = "0x13C758C", VA = "0x13C758C")]
	private static string GetLocalizedDestination(UserDestinationType dst)
	{
		return null;
	}
}
[Token(Token = "0x200046A")]
public class EditorPlaneShooting : MonoBehaviour
{
	[Token(Token = "0x4001FFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject[] planes;

	[Token(Token = "0x4002000")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int idx;

	[Token(Token = "0x4002001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 planeOffset;

	[Token(Token = "0x4002002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MultiplayerSync.SyncState mSync;

	[Token(Token = "0x6001DC8")]
	[Address(RVA = "0xDA003C", Offset = "0xDA003C", VA = "0xDA003C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001DC9")]
	[Address(RVA = "0xDA0270", Offset = "0xDA0270", VA = "0xDA0270")]
	private void Start()
	{
	}

	[Token(Token = "0x6001DCA")]
	[Address(RVA = "0xDA04EC", Offset = "0xDA04EC", VA = "0xDA04EC")]
	private void Update()
	{
	}

	[Token(Token = "0x6001DCB")]
	[Address(RVA = "0xDA0664", Offset = "0xDA0664", VA = "0xDA0664")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001DCC")]
	[Address(RVA = "0xDA027C", Offset = "0xDA027C", VA = "0xDA027C")]
	private void ChangePlane(int old, int next)
	{
	}

	[Token(Token = "0x6001DCD")]
	[Address(RVA = "0xDA06CC", Offset = "0xDA06CC", VA = "0xDA06CC")]
	public EditorPlaneShooting()
	{
	}
}
[Token(Token = "0x200046B")]
public class VR2DAxisMotion : Grabbable, ISelfGrabbable, IGrabbableListener
{
	[Token(Token = "0x4002003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x91C724", Offset = "0x91C724")]
	protected Transform parent;

	[Token(Token = "0x4002004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	protected Transform center;

	[Token(Token = "0x4002005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	protected Transform pivot;

	[Token(Token = "0x4002006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private Vector3 right;

	[Token(Token = "0x4002007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[SerializeField]
	private Vector3 up;

	[Token(Token = "0x4002008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private Vector2 rightLimit;

	[Token(Token = "0x4002009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private Vector2 upLimit;

	[Token(Token = "0x400200A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private AnimationCurve upCurve;

	[Token(Token = "0x400200B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private AnimationCurve bottomCurve;

	[Token(Token = "0x400200C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x91C7F0", Offset = "0x91C7F0")]
	private bool backOnRelease;

	[Token(Token = "0x400200D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	[SerializeField]
	private float backSpeed;

	[Token(Token = "0x400200E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private float damper;

	[Token(Token = "0x400200F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private bool animBack;

	[Token(Token = "0x4002010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xED")]
	private bool multiAnimatePivot;

	[Token(Token = "0x4002011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Vector3 multiTargetPivotAngle;

	[Token(Token = "0x4002012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91C85C", Offset = "0x91C85C")]
	private Action <onGrabBegin>k__BackingField;

	[Token(Token = "0x4002013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91C86C", Offset = "0x91C86C")]
	private Action <onGrabEnd>k__BackingField;

	[Token(Token = "0x170001A3")]
	public Action onGrabBegin
	{
		[Token(Token = "0x6001DCE")]
		[Address(RVA = "0x13C9BF8", Offset = "0x13C9BF8", VA = "0x13C9BF8", Slot = "11")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92BE64", Offset = "0x92BE64")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001DCF")]
		[Address(RVA = "0x13C9C00", Offset = "0x13C9C00", VA = "0x13C9C00", Slot = "12")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92BE74", Offset = "0x92BE74")]
		set
		{
		}
	}

	[Token(Token = "0x170001A4")]
	public Action onGrabEnd
	{
		[Token(Token = "0x6001DD0")]
		[Address(RVA = "0x13C9C08", Offset = "0x13C9C08", VA = "0x13C9C08", Slot = "13")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92BE84", Offset = "0x92BE84")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001DD1")]
		[Address(RVA = "0x13C9C10", Offset = "0x13C9C10", VA = "0x13C9C10", Slot = "14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92BE94", Offset = "0x92BE94")]
		set
		{
		}
	}

	[Token(Token = "0x6001DD2")]
	[Address(RVA = "0x13C9C18", Offset = "0x13C9C18", VA = "0x13C9C18")]
	public Transform GetPivot()
	{
		return null;
	}

	[Token(Token = "0x6001DD3")]
	[Address(RVA = "0x13C9C20", Offset = "0x13C9C20", VA = "0x13C9C20", Slot = "7")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6001DD4")]
	[Address(RVA = "0x13C9DE8", Offset = "0x13C9DE8", VA = "0x13C9DE8")]
	private void Update()
	{
	}

	[Token(Token = "0x6001DD5")]
	[Address(RVA = "0x13CA0B8", Offset = "0x13CA0B8", VA = "0x13CA0B8", Slot = "5")]
	public override void GrabBegin(Grabber hand, Collider grabPoint)
	{
	}

	[Token(Token = "0x6001DD6")]
	[Address(RVA = "0x13CA0F8", Offset = "0x13CA0F8", VA = "0x13CA0F8", Slot = "6")]
	public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
	{
	}

	[Token(Token = "0x6001DD7")]
	[Address(RVA = "0x13CA13C", Offset = "0x13CA13C", VA = "0x13CA13C", Slot = "15")]
	public virtual void OnMove(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x6001DD8")]
	[Address(RVA = "0x13CA540", Offset = "0x13CA540", VA = "0x13CA540")]
	private float Sqrt(float x)
	{
		return default(float);
	}

	[Token(Token = "0x6001DD9")]
	[Address(RVA = "0x13CA558", Offset = "0x13CA558", VA = "0x13CA558")]
	public void MultiSetTargetPivotAngle(Vector3 pivotAngle)
	{
	}

	[Token(Token = "0x6001DDA")]
	[Address(RVA = "0x13CA56C", Offset = "0x13CA56C", VA = "0x13CA56C")]
	public VR2DAxisMotion()
	{
	}
}
[Token(Token = "0x200046C")]
public class VRAAGun : MonoBehaviour
{
	[Token(Token = "0x4002014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform horizontal;

	[Token(Token = "0x4002015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform vertical;

	[Token(Token = "0x4002016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform crank;

	[Token(Token = "0x4002017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Vector2 horizontalLimit;

	[Token(Token = "0x4002018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Vector2 verticalLimit;

	[Token(Token = "0x4002019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Transform[] guns;

	[Token(Token = "0x400201A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Cannon cannon;

	[Token(Token = "0x400201B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private VRSeat seat;

	[Token(Token = "0x400201C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private float horizontalSpeed;

	[Token(Token = "0x400201D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SerializeField]
	private float verticalSpeed;

	[Token(Token = "0x400201E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private float horizontalSmooth;

	[Token(Token = "0x400201F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SerializeField]
	private float verticalSmooth;

	[Token(Token = "0x4002020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private float crankReduction;

	[Token(Token = "0x4002021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[SerializeField]
	private float gunRecoilOffset;

	[Token(Token = "0x4002022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private float gunRecoilTime;

	[Token(Token = "0x4002023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private AnimationCurve gunRecoil;

	[Token(Token = "0x4002024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private float fireDelay;

	[Token(Token = "0x4002025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[SerializeField]
	private float loadTime;

	[Token(Token = "0x4002026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float manualCrankSpin;

	[Token(Token = "0x4002027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float horizontalDamp;

	[Token(Token = "0x4002028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float verticalDamp;

	[Token(Token = "0x4002029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float horizontalAngle;

	[Token(Token = "0x400202A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float verticalAngle;

	[Token(Token = "0x400202B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3[] gunPositions;

	[Token(Token = "0x400202C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float[] gunLoadTime;

	[Token(Token = "0x400202D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float[] gunAnim;

	[Token(Token = "0x400202E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private int fireIdx;

	[Token(Token = "0x400202F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float fireNext;

	[Token(Token = "0x6001DDB")]
	[Address(RVA = "0x13CA588", Offset = "0x13CA588", VA = "0x13CA588")]
	private void Start()
	{
	}

	[Token(Token = "0x6001DDC")]
	[Address(RVA = "0x13CA710", Offset = "0x13CA710", VA = "0x13CA710")]
	private void Update()
	{
	}

	[Token(Token = "0x6001DDD")]
	[Address(RVA = "0x13CAD70", Offset = "0x13CAD70", VA = "0x13CAD70")]
	private void Fire()
	{
	}

	[Token(Token = "0x6001DDE")]
	[Address(RVA = "0x13CAA68", Offset = "0x13CAA68", VA = "0x13CAA68")]
	private void AnimateGuns()
	{
	}

	[Token(Token = "0x6001DDF")]
	[Address(RVA = "0x13CABB4", Offset = "0x13CABB4", VA = "0x13CABB4")]
	private Vector3 Rotate(float val, ref float currentAngle, float speed, ref float damp, float smooth, Vector2 limits)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001DE0")]
	[Address(RVA = "0x13CAECC", Offset = "0x13CAECC", VA = "0x13CAECC")]
	public void RotateCrank(float rotDelta)
	{
	}

	[Token(Token = "0x6001DE1")]
	[Address(RVA = "0x13CAED4", Offset = "0x13CAED4", VA = "0x13CAED4")]
	public VRAAGun()
	{
	}
}
[Token(Token = "0x200046D")]
public class VRAAGunCrank : Grabbable, ISelfGrabbable
{
	[Token(Token = "0x4002030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private Transform center;

	[Token(Token = "0x4002031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private Transform crank;

	[Token(Token = "0x4002032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private VRAAGun gun;

	[Token(Token = "0x4002033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private float degreesOffset;

	[Token(Token = "0x6001DE2")]
	[Address(RVA = "0x13CAEF8", Offset = "0x13CAEF8", VA = "0x13CAEF8", Slot = "10")]
	public void OnMove(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x6001DE3")]
	[Address(RVA = "0x13CB0C0", Offset = "0x13CB0C0", VA = "0x13CB0C0", Slot = "6")]
	public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
	{
	}

	[Token(Token = "0x6001DE4")]
	[Address(RVA = "0x13CB0F4", Offset = "0x13CB0F4", VA = "0x13CB0F4")]
	public VRAAGunCrank()
	{
	}
}
[Token(Token = "0x200046E")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x918888", Offset = "0x918888")]
public class VRAudioListener : MonoBehaviour
{
	[Token(Token = "0x4002034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform source;

	[Token(Token = "0x6001DE5")]
	[Address(RVA = "0x13CBA1C", Offset = "0x13CBA1C", VA = "0x13CBA1C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001DE6")]
	[Address(RVA = "0x13CBB9C", Offset = "0x13CBB9C", VA = "0x13CBB9C")]
	private void Init()
	{
	}

	[Token(Token = "0x6001DE7")]
	[Address(RVA = "0x13CBCC8", Offset = "0x13CBCC8", VA = "0x13CBCC8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001DE8")]
	[Address(RVA = "0x13CBDAC", Offset = "0x13CBDAC", VA = "0x13CBDAC")]
	public VRAudioListener()
	{
	}
}
[Token(Token = "0x200046F")]
public class VRBomb : Grabbable, ISelfGrabbable, IGrabbableHolder
{
	[Token(Token = "0x4002035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private VRTransformGuide guide;

	[Token(Token = "0x4002036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91C9DC", Offset = "0x91C9DC")]
	private GrabbableHolder <Holder>k__BackingField;

	[Token(Token = "0x4002037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 throwVelocity;

	[Token(Token = "0x4002038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private bool willThrow;

	[Token(Token = "0x170001A5")]
	public GrabbableHolder Holder
	{
		[Token(Token = "0x6001DE9")]
		[Address(RVA = "0x13CBDB4", Offset = "0x13CBDB4", VA = "0x13CBDB4", Slot = "11")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92BEA4", Offset = "0x92BEA4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001DEA")]
		[Address(RVA = "0x13CBDBC", Offset = "0x13CBDBC", VA = "0x13CBDBC", Slot = "12")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92BEB4", Offset = "0x92BEB4")]
		set
		{
		}
	}

	[Token(Token = "0x6001DEB")]
	[Address(RVA = "0x13CBDC4", Offset = "0x13CBDC4", VA = "0x13CBDC4", Slot = "7")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6001DEC")]
	[Address(RVA = "0x13CBE24", Offset = "0x13CBE24", VA = "0x13CBE24", Slot = "5")]
	public override void GrabBegin(Grabber hand, Collider grabPoint)
	{
	}

	[Token(Token = "0x6001DED")]
	[Address(RVA = "0x13CC068", Offset = "0x13CC068", VA = "0x13CC068", Slot = "6")]
	public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
	{
	}

	[Token(Token = "0x6001DEE")]
	[Address(RVA = "0x13CC3B4", Offset = "0x13CC3B4", VA = "0x13CC3B4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001DEF")]
	[Address(RVA = "0x13CCBF8", Offset = "0x13CCBF8", VA = "0x13CCBF8")]
	public static void ThrowRemote(PlaneBody plane, Vector3 offsetPosition, Vector3 forward, Vector3 velocity, bool haveTarget, Vector3 targetPos)
	{
	}

	[Token(Token = "0x6001DF0")]
	[Address(RVA = "0x13CCD9C", Offset = "0x13CCD9C", VA = "0x13CCD9C", Slot = "10")]
	public void OnMove(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x6001DF1")]
	[Address(RVA = "0x13CCE4C", Offset = "0x13CCE4C", VA = "0x13CCE4C")]
	public VRBomb()
	{
	}
}
[Token(Token = "0x2000470")]
public class VRBombCrosshair : MonoBehaviour
{
	[Token(Token = "0x4002039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private VRBombMissile bombPrefab;

	[Token(Token = "0x400203A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Material crosshairMaterial;

	[Token(Token = "0x400203B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PlaneBody plane;

	[Token(Token = "0x400203C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float currentSpeed;

	[Token(Token = "0x400203D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float dampVelocity;

	[Token(Token = "0x400203E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool fadeIn;

	[Token(Token = "0x400203F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool fadeOut;

	[Token(Token = "0x4002040")]
	private const float dampTime = 2f;

	[Token(Token = "0x4002041")]
	private const float kDiveMinSpeedMs = 20f;

	[Token(Token = "0x4002042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float diveLeanCos;

	[Token(Token = "0x4002043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static VRBombCrosshair instance;

	[Token(Token = "0x170001A6")]
	public static bool IsValid
	{
		[Token(Token = "0x6001DF6")]
		[Address(RVA = "0x13CBEE8", Offset = "0x13CBEE8", VA = "0x13CBEE8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001DF2")]
	[Address(RVA = "0x13CCE54", Offset = "0x13CCE54", VA = "0x13CCE54")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001DF3")]
	[Address(RVA = "0x13CBF6C", Offset = "0x13CBF6C", VA = "0x13CBF6C")]
	public static void Show()
	{
	}

	[Token(Token = "0x6001DF4")]
	[Address(RVA = "0x13CC348", Offset = "0x13CC348", VA = "0x13CC348")]
	public static void Hide()
	{
	}

	[Token(Token = "0x6001DF5")]
	[Address(RVA = "0x13CCFD4", Offset = "0x13CCFD4", VA = "0x13CCFD4")]
	public static void SetVisible(bool visibility)
	{
	}

	[Token(Token = "0x6001DF7")]
	[Address(RVA = "0x13CC94C", Offset = "0x13CC94C", VA = "0x13CC94C")]
	public static Vector3 GetPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001DF8")]
	[Address(RVA = "0x13CD438", Offset = "0x13CD438", VA = "0x13CD438")]
	public static bool IsDiveMode()
	{
		return default(bool);
	}

	[Token(Token = "0x6001DF9")]
	[Address(RVA = "0x13CD59C", Offset = "0x13CD59C", VA = "0x13CD59C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001DFA")]
	[Address(RVA = "0x13CD7A8", Offset = "0x13CD7A8", VA = "0x13CD7A8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001DFB")]
	[Address(RVA = "0x13CD8F8", Offset = "0x13CD8F8", VA = "0x13CD8F8")]
	private void PlaneChanged(PlaneBody pb)
	{
	}

	[Token(Token = "0x6001DFC")]
	[Address(RVA = "0x13CD7CC", Offset = "0x13CD7CC", VA = "0x13CD7CC")]
	private void Fade()
	{
	}

	[Token(Token = "0x6001DFD")]
	[Address(RVA = "0x13CD064", Offset = "0x13CD064", VA = "0x13CD064")]
	private Vector3 GetPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001DFE")]
	[Address(RVA = "0x13CD608", Offset = "0x13CD608", VA = "0x13CD608")]
	private void UpdatePos()
	{
	}

	[Token(Token = "0x6001DFF")]
	[Address(RVA = "0x13CD9D8", Offset = "0x13CD9D8", VA = "0x13CD9D8")]
	public VRBombCrosshair()
	{
	}
}
[Token(Token = "0x2000471")]
public class VRBombMissile : Missile
{
	[Token(Token = "0x4002044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float drag;

	[Token(Token = "0x4002045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public float angularDrag;

	[Token(Token = "0x4002046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public float terminalSpeed;

	[Token(Token = "0x4002047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	protected Quaternion angularVelocity;

	[Token(Token = "0x4002048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	protected Quaternion initialAngularVelocity;

	[Token(Token = "0x4002049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private Vector3 trajectory;

	[Token(Token = "0x400204A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Vector3 targetPos;

	[Token(Token = "0x400204B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Vector3 gravity;

	[Token(Token = "0x400204C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static Quaternion down;

	[Token(Token = "0x400204D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private float bumTime;

	[Token(Token = "0x6001E00")]
	[Address(RVA = "0x13CC9A0", Offset = "0x13CC9A0", VA = "0x13CC9A0")]
	public void Setup(Vector3 position, Vector3 forward, Vector3 velocity, bool haveTarget, Vector3 _targetPos, bool _remote)
	{
	}

	[Token(Token = "0x6001E01")]
	[Address(RVA = "0x13CD9E0", Offset = "0x13CD9E0", VA = "0x13CD9E0", Slot = "11")]
	protected override void Move()
	{
	}

	[Token(Token = "0x6001E02")]
	[Address(RVA = "0x13CDAB8", Offset = "0x13CDAB8", VA = "0x13CDAB8", Slot = "12")]
	protected override void PrepareMove()
	{
	}

	[Token(Token = "0x6001E03")]
	[Address(RVA = "0x13CDFB0", Offset = "0x13CDFB0", VA = "0x13CDFB0")]
	public VRBombMissile()
	{
	}
}
[Token(Token = "0x2000472")]
public class VRBombRelease : Grabbable, ISelfGrabbable
{
	[Token(Token = "0x400204E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private float angleLimit;

	[Token(Token = "0x400204F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private Transform dirParent;

	[Token(Token = "0x4002050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private Transform joint;

	[Token(Token = "0x4002051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private Transform centerPoint;

	[Token(Token = "0x4002052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private MultiplePlayingAudio mpa;

	[Token(Token = "0x4002053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float currentValue;

	[Token(Token = "0x4002054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float maxAngle;

	[Token(Token = "0x4002055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float maxAngleInv;

	[Token(Token = "0x4002056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float lastTriggerTime;

	[Token(Token = "0x4002057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float tighteningDist;

	[Token(Token = "0x4002058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private bool lastDiveMode;

	[Token(Token = "0x4002059")]
	private const float kTriggerDelay = 0.25f;

	[Token(Token = "0x400205A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool eventRegistered;

	[Token(Token = "0x400205B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static VRBombRelease current;

	[Token(Token = "0x170001A7")]
	public override AllowSticky AllowStickyGrip
	{
		[Token(Token = "0x6001E05")]
		[Address(RVA = "0x13CE04C", Offset = "0x13CE04C", VA = "0x13CE04C", Slot = "4")]
		get
		{
			return default(AllowSticky);
		}
	}

	[Token(Token = "0x6001E06")]
	[Address(RVA = "0x13CE054", Offset = "0x13CE054", VA = "0x13CE054", Slot = "7")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6001E07")]
	[Address(RVA = "0x13CE214", Offset = "0x13CE214", VA = "0x13CE214")]
	private static void PlaneChanged(PlaneBody pb)
	{
	}

	[Token(Token = "0x6001E08")]
	[Address(RVA = "0x13CE3C8", Offset = "0x13CE3C8", VA = "0x13CE3C8")]
	public static void ToggleCurrent(bool toggle)
	{
	}

	[Token(Token = "0x6001E09")]
	[Address(RVA = "0x13CE4A0", Offset = "0x13CE4A0", VA = "0x13CE4A0")]
	public static float GetValue()
	{
		return default(float);
	}

	[Token(Token = "0x6001E0A")]
	[Address(RVA = "0x13CE56C", Offset = "0x13CE56C", VA = "0x13CE56C", Slot = "5")]
	public override void GrabBegin(Grabber hand, Collider grabPoint)
	{
	}

	[Token(Token = "0x6001E0B")]
	[Address(RVA = "0x13CE594", Offset = "0x13CE594", VA = "0x13CE594", Slot = "6")]
	public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
	{
	}

	[Token(Token = "0x6001E0C")]
	[Address(RVA = "0x13CE5AC", Offset = "0x13CE5AC", VA = "0x13CE5AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6001E0D")]
	[Address(RVA = "0x13CE67C", Offset = "0x13CE67C", VA = "0x13CE67C")]
	private void UpdateFromNet()
	{
	}

	[Token(Token = "0x6001E0E")]
	[Address(RVA = "0x13CE7A0", Offset = "0x13CE7A0", VA = "0x13CE7A0")]
	private void ReleaseToZero()
	{
	}

	[Token(Token = "0x6001E0F")]
	[Address(RVA = "0x13CE80C", Offset = "0x13CE80C", VA = "0x13CE80C")]
	private void SetValue(float n)
	{
	}

	[Token(Token = "0x6001E10")]
	[Address(RVA = "0x13CE8F0", Offset = "0x13CE8F0", VA = "0x13CE8F0")]
	private void Tightening(float n)
	{
	}

	[Token(Token = "0x6001E11")]
	[Address(RVA = "0x13CEA8C", Offset = "0x13CEA8C", VA = "0x13CEA8C", Slot = "10")]
	public void OnMove(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x6001E12")]
	[Address(RVA = "0x13CEBD8", Offset = "0x13CEBD8", VA = "0x13CEBD8")]
	private void TriggerBomb()
	{
	}

	[Token(Token = "0x6001E13")]
	[Address(RVA = "0x13CECBC", Offset = "0x13CECBC", VA = "0x13CECBC")]
	public VRBombRelease()
	{
	}
}
[Token(Token = "0x2000473")]
public class VRCannon : MonoBehaviour
{
	[Token(Token = "0x400205C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject listenerObject;

	[Token(Token = "0x400205D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Cannon cannon;

	[Token(Token = "0x400205E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Cannon planeCannon;

	[Token(Token = "0x6001E14")]
	[Address(RVA = "0x13CF1F4", Offset = "0x13CF1F4", VA = "0x13CF1F4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001E15")]
	[Address(RVA = "0x13CF540", Offset = "0x13CF540", VA = "0x13CF540")]
	public Cannon GetCannon()
	{
		return null;
	}

	[Token(Token = "0x6001E16")]
	[Address(RVA = "0x13CF548", Offset = "0x13CF548", VA = "0x13CF548")]
	public void Begin()
	{
	}

	[Token(Token = "0x6001E17")]
	[Address(RVA = "0x13CF5E8", Offset = "0x13CF5E8", VA = "0x13CF5E8")]
	public void End()
	{
	}

	[Token(Token = "0x6001E18")]
	[Address(RVA = "0x13CF6E0", Offset = "0x13CF6E0", VA = "0x13CF6E0")]
	public VRCannon()
	{
	}
}
[Token(Token = "0x2000474")]
public enum CenterPoseFlag
{
	[Token(Token = "0x4002060")]
	Default = 0,
	[Token(Token = "0x4002061")]
	ResetRotation = 1,
	[Token(Token = "0x4002062")]
	InsidePlane = 2,
	[Token(Token = "0x4002063")]
	MainMenu = 4,
	[Token(Token = "0x4002064")]
	Seat = 8
}
[Token(Token = "0x2000475")]
public static class VRCenterPose
{
	[Token(Token = "0x4002065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool awaitRecenter;

	[Token(Token = "0x4002066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	private static bool awaitDelay;

	[Token(Token = "0x4002067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
	private static bool awaitInitialize;

	[Token(Token = "0x4002068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
	private static bool resetRotation;

	[Token(Token = "0x4002069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static bool resetInPlane;

	[Token(Token = "0x400206A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
	private static bool resetSeat;

	[Token(Token = "0x400206B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static float centerTime;

	[Token(Token = "0x400206C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static float delayTime;

	[Token(Token = "0x400206D")]
	private const float blinkTime = 0.1f;

	[Token(Token = "0x400206E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Vector3 resetOffset;

	[Token(Token = "0x400206F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private static Quaternion rotationOffset;

	[Token(Token = "0x4002070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private static bool wasReset;

	[Token(Token = "0x4002071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	private static bool wasInsidePlane;

	[Token(Token = "0x4002072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
	private static bool wasMainMenu;

	[Token(Token = "0x6001E19")]
	[Address(RVA = "0x13CF6E8", Offset = "0x13CF6E8", VA = "0x13CF6E8")]
	public static void UserRequest()
	{
	}

	[Token(Token = "0x6001E1A")]
	[Address(RVA = "0x13CF6F4", Offset = "0x13CF6F4", VA = "0x13CF6F4")]
	public static void Center(CenterPoseFlag flag = CenterPoseFlag.Default, float delay = 0f)
	{
	}

	[Token(Token = "0x6001E1B")]
	[Address(RVA = "0x13CF830", Offset = "0x13CF830", VA = "0x13CF830")]
	public static void FinishImmedietaly()
	{
	}

	[Token(Token = "0x6001E1C")]
	[Address(RVA = "0x13CFB0C", Offset = "0x13CFB0C", VA = "0x13CFB0C")]
	public static void Update()
	{
	}

	[Token(Token = "0x6001E1D")]
	[Address(RVA = "0x13CFC10", Offset = "0x13CFC10", VA = "0x13CFC10")]
	private static void Prepare()
	{
	}

	[Token(Token = "0x6001E1E")]
	[Address(RVA = "0x13CF880", Offset = "0x13CF880", VA = "0x13CF880")]
	private static void Recenter()
	{
	}
}
[Token(Token = "0x2000476")]
public enum CockpitType
{
	[Token(Token = "0x4002074")]
	Pilot,
	[Token(Token = "0x4002075")]
	Gunner,
	[Token(Token = "0x4002076")]
	Num
}
[Token(Token = "0x2000477")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x91889C", Offset = "0x91889C")]
public class VRCockpit : MonoBehaviour
{
	[Token(Token = "0x4002077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private CockpitType type;

	[Token(Token = "0x4002078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VRCockpitNotepad notepad;

	[Token(Token = "0x4002079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform head;

	[Token(Token = "0x400207A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GrabbableHolder flareHolder;

	[Token(Token = "0x400207B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GrabbableHolder bombHolder;

	[Token(Token = "0x400207C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Bounds cockpitBounds;

	[Token(Token = "0x400207D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private VRCockpitItem[] sideItems;

	[Token(Token = "0x400207E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Grabbable[] grabbables;

	[Token(Token = "0x400207F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private GameObject[] NPCObjects;

	[Token(Token = "0x4002080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private MonoBehaviour[] playerComponents;

	[Token(Token = "0x4002081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public CannonAI cannonAI;

	[Token(Token = "0x4002082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private VRCannon vrCannon;

	[Token(Token = "0x4002083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Vector3 cannonBarrelDefaultRot;

	[Token(Token = "0x4002084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public VRCockpitInstruments instruments;

	[Token(Token = "0x4002085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool currentHandSideState;

	[Token(Token = "0x4002086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91CAFC", Offset = "0x91CAFC")]
	private VRPlane <VRPlane>k__BackingField;

	[Token(Token = "0x4002087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91CB0C", Offset = "0x91CB0C")]
	private PlayerPilot <PlayerPilot>k__BackingField;

	[Token(Token = "0x4002088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91CB1C", Offset = "0x91CB1C")]
	private static VRCockpit <Current>k__BackingField;

	[Token(Token = "0x170001A8")]
	public CockpitType CockpitType
	{
		[Token(Token = "0x6001E1F")]
		[Address(RVA = "0x13D0248", Offset = "0x13D0248", VA = "0x13D0248")]
		get
		{
			return default(CockpitType);
		}
	}

	[Token(Token = "0x170001A9")]
	public VRPlane VRPlane
	{
		[Token(Token = "0x6001E20")]
		[Address(RVA = "0x13D0250", Offset = "0x13D0250", VA = "0x13D0250")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92BEC4", Offset = "0x92BEC4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001E21")]
		[Address(RVA = "0x13D0258", Offset = "0x13D0258", VA = "0x13D0258")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92BED4", Offset = "0x92BED4")]
		private set
		{
		}
	}

	[Token(Token = "0x170001AA")]
	public PlayerPilot PlayerPilot
	{
		[Token(Token = "0x6001E22")]
		[Address(RVA = "0x13D0260", Offset = "0x13D0260", VA = "0x13D0260")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92BEE4", Offset = "0x92BEE4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001E23")]
		[Address(RVA = "0x13D0268", Offset = "0x13D0268", VA = "0x13D0268")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92BEF4", Offset = "0x92BEF4")]
		private set
		{
		}
	}

	[Token(Token = "0x170001AB")]
	public Vector3 Size
	{
		[Token(Token = "0x6001E24")]
		[Address(RVA = "0x13D0270", Offset = "0x13D0270", VA = "0x13D0270")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170001AC")]
	public static VRCockpit Current
	{
		[Token(Token = "0x6001E25")]
		[Address(RVA = "0x13D027C", Offset = "0x13D027C", VA = "0x13D027C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92BF04", Offset = "0x92BF04")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001E26")]
		[Address(RVA = "0x13D02C8", Offset = "0x13D02C8", VA = "0x13D02C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92BF14", Offset = "0x92BF14")]
		private set
		{
		}
	}

	[Token(Token = "0x6001E27")]
	[Address(RVA = "0x13D0318", Offset = "0x13D0318", VA = "0x13D0318")]
	public static void SetCurrent(VRPlane caller, VRCockpit cockpit)
	{
	}

	[Token(Token = "0x6001E28")]
	[Address(RVA = "0x13D0F40", Offset = "0x13D0F40", VA = "0x13D0F40")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001E29")]
	[Address(RVA = "0x13D0A50", Offset = "0x13D0A50", VA = "0x13D0A50")]
	public void ToggleNPCObjects(bool toggle)
	{
	}

	[Token(Token = "0x6001E2A")]
	[Address(RVA = "0x13D0ACC", Offset = "0x13D0ACC", VA = "0x13D0ACC")]
	public void ToggleComponents(bool toggle)
	{
	}

	[Token(Token = "0x6001E2B")]
	[Address(RVA = "0x13D0B48", Offset = "0x13D0B48", VA = "0x13D0B48")]
	private void UpdateHandSide()
	{
	}

	[Token(Token = "0x6001E2C")]
	[Address(RVA = "0x13D1124", Offset = "0x13D1124", VA = "0x13D1124")]
	private void Update()
	{
	}

	[Token(Token = "0x6001E2D")]
	[Address(RVA = "0x13D1044", Offset = "0x13D1044", VA = "0x13D1044")]
	public void SetHandSide(HandType hand)
	{
	}

	[Token(Token = "0x6001E2E")]
	[Address(RVA = "0x13D14B8", Offset = "0x13D14B8", VA = "0x13D14B8")]
	public Transform GetHead()
	{
		return null;
	}

	[Token(Token = "0x6001E2F")]
	[Address(RVA = "0x13CC254", Offset = "0x13CC254", VA = "0x13CC254")]
	public bool IsPointInside(Vector3 point)
	{
		return default(bool);
	}

	[Token(Token = "0x6001E30")]
	[Address(RVA = "0x13D14C0", Offset = "0x13D14C0", VA = "0x13D14C0")]
	public VRCockpit()
	{
	}
}
[Token(Token = "0x2000478")]
public class VRCockpitInstruments : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000479")]
	public class Instrument
	{
		[Token(Token = "0x400209B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MeshRenderer[] renderers;

		[Token(Token = "0x6001E32")]
		[Address(RVA = "0x11B7A34", Offset = "0x11B7A34", VA = "0x11B7A34")]
		public Instrument()
		{
		}
	}

	[Token(Token = "0x4002089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Instrument yoke;

	[Token(Token = "0x400208A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Instrument yokeTrigger;

	[Token(Token = "0x400208B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Instrument yokeRocketButton;

	[Token(Token = "0x400208C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Instrument yokeButtonA;

	[Token(Token = "0x400208D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Instrument throttle;

	[Token(Token = "0x400208E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Instrument flaps;

	[Token(Token = "0x400208F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Instrument bombRelease;

	[Token(Token = "0x4002090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Instrument gunsight;

	[Token(Token = "0x4002091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Instrument speedIndicator;

	[Token(Token = "0x4002092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Instrument altitudeIndicator;

	[Token(Token = "0x4002093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Instrument climbIndicator;

	[Token(Token = "0x4002094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Instrument timeIndicator;

	[Token(Token = "0x4002095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Instrument compassIndicator;

	[Token(Token = "0x4002096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Instrument rpmIndicator;

	[Token(Token = "0x4002097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Instrument headingIndicator;

	[Token(Token = "0x4002098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Instrument bombReleaseLamp;

	[Token(Token = "0x4002099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Instrument bombCounter;

	[Token(Token = "0x400209A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Instrument boostIndicator;

	[Token(Token = "0x6001E31")]
	[Address(RVA = "0x13D14D0", Offset = "0x13D14D0", VA = "0x13D14D0")]
	public VRCockpitInstruments()
	{
	}
}
[Token(Token = "0x200047A")]
public class VRCockpitItem : MonoBehaviour
{
	[Token(Token = "0x200047B")]
	public enum Side
	{
		[Token(Token = "0x40020A7")]
		Left,
		[Token(Token = "0x40020A8")]
		Right
	}

	[Serializable]
	[Token(Token = "0x200047C")]
	public class Pair
	{
		[Token(Token = "0x40020A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform child;

		[Token(Token = "0x40020AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x6001E39")]
		[Address(RVA = "0x11B7A3C", Offset = "0x11B7A3C", VA = "0x11B7A3C")]
		public Pair()
		{
		}
	}

	[Token(Token = "0x400209C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Side side;

	[Token(Token = "0x400209D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private Vector3 mirrorAxisPos;

	[Token(Token = "0x400209E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Vector3 mirrorAxisRot;

	[Token(Token = "0x400209F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private bool inverseRotation;

	[Token(Token = "0x40020A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	[SerializeField]
	private bool parentSpaceRotation;

	[Token(Token = "0x40020A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
	[SerializeField]
	private bool scaleNegate;

	[Token(Token = "0x40020A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Transform targetLeft;

	[Token(Token = "0x40020A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Transform targetRight;

	[Token(Token = "0x40020A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private VRCockpitItem[] children;

	[Token(Token = "0x40020A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Side baseSide;

	[Token(Token = "0x6001E33")]
	[Address(RVA = "0x13D1128", Offset = "0x13D1128", VA = "0x13D1128")]
	public void Swap(HandType hand)
	{
	}

	[Token(Token = "0x6001E34")]
	[Address(RVA = "0x13D151C", Offset = "0x13D151C", VA = "0x13D151C")]
	private void SwapChildren(HandType hand)
	{
	}

	[Token(Token = "0x6001E35")]
	[Address(RVA = "0x13D14F8", Offset = "0x13D14F8", VA = "0x13D14F8")]
	private void SwapLocal()
	{
	}

	[Token(Token = "0x6001E36")]
	[Address(RVA = "0x13D1594", Offset = "0x13D1594", VA = "0x13D1594")]
	private void SwapLocal(Transform target)
	{
	}

	[Token(Token = "0x6001E37")]
	[Address(RVA = "0x13D14D8", Offset = "0x13D14D8", VA = "0x13D14D8")]
	private Vector3 Multiply2Inv(Vector3 v, Vector3 w)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001E38")]
	[Address(RVA = "0x13D1614", Offset = "0x13D1614", VA = "0x13D1614")]
	public VRCockpitItem()
	{
	}
}
[Token(Token = "0x200047D")]
public class VRCockpitNotepad : MonoBehaviour
{
	[Token(Token = "0x40020AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextMesh tmTasks;

	[Token(Token = "0x40020AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Renderer symbolPrefab;

	[Token(Token = "0x40020AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Renderer linePrefab;

	[Token(Token = "0x40020AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float symbolOffsetY;

	[Token(Token = "0x40020AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float lineOffsetY;

	[Token(Token = "0x40020B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float[] symbolScale;

	[Token(Token = "0x40020B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private MUI_setup_LineBreak breaker;

	[Token(Token = "0x40020B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private TextMesh tmMultiLog;

	[Token(Token = "0x40020B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private TextMesh tmMultiTimer;

	[Token(Token = "0x40020B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private TextMesh tmMultiCoOpRespawns;

	[Token(Token = "0x40020B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Transform multiPlayersListPos;

	[Token(Token = "0x40020B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private GameObject uiGroup;

	[Token(Token = "0x40020B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private GameObject multiDisconnectedMsgGroup;

	[Token(Token = "0x40020B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private VRTapMotion multiDisconnectedMsgCloseTap;

	[Token(Token = "0x40020B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private GameObject adjustYokeInfo;

	[Token(Token = "0x40020BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool created;

	[Token(Token = "0x40020BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Vector3 symbolDefaultScale;

	[Token(Token = "0x40020BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Renderer[] symbols;

	[Token(Token = "0x40020BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Renderer[] objectiveLines;

	[Token(Token = "0x40020BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int[] cacheLines;

	[Token(Token = "0x40020BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int[] tmpCacheLines;

	[Token(Token = "0x40020C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static VRCockpitNotepad instance;

	[Token(Token = "0x6001E3A")]
	[Address(RVA = "0x13D1624", Offset = "0x13D1624", VA = "0x13D1624")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001E3B")]
	[Address(RVA = "0x13D1B18", Offset = "0x13D1B18", VA = "0x13D1B18")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001E3C")]
	[Address(RVA = "0x13D0BDC", Offset = "0x13D0BDC", VA = "0x13D0BDC")]
	public void SetActive()
	{
	}

	[Token(Token = "0x6001E3D")]
	[Address(RVA = "0x13D19F4", Offset = "0x13D19F4", VA = "0x13D19F4")]
	private void Create()
	{
	}

	[Token(Token = "0x6001E3E")]
	[Address(RVA = "0x13D1C74", Offset = "0x13D1C74", VA = "0x13D1C74")]
	private void UpdateObjectives()
	{
	}

	[Token(Token = "0x6001E3F")]
	[Address(RVA = "0x13D23FC", Offset = "0x13D23FC", VA = "0x13D23FC")]
	private void TextChanged()
	{
	}

	[Token(Token = "0x6001E40")]
	[Address(RVA = "0x13D2130", Offset = "0x13D2130", VA = "0x13D2130")]
	private void CreateSymbols()
	{
	}

	[Token(Token = "0x6001E41")]
	[Address(RVA = "0x13D22A4", Offset = "0x13D22A4", VA = "0x13D22A4")]
	private void CreateLines()
	{
	}

	[Token(Token = "0x6001E42")]
	[Address(RVA = "0x13D2864", Offset = "0x13D2864", VA = "0x13D2864")]
	private int CountLines(string str, int[] cache)
	{
		return default(int);
	}

	[Token(Token = "0x6001E43")]
	[Address(RVA = "0x13D1A2C", Offset = "0x13D1A2C", VA = "0x13D1A2C")]
	public void ShowMultiDisconnectedMsg(bool show)
	{
	}

	[Token(Token = "0x6001E44")]
	[Address(RVA = "0x13D2954", Offset = "0x13D2954", VA = "0x13D2954")]
	private void CloseMultiDisconnectedMsg()
	{
	}

	[Token(Token = "0x6001E45")]
	[Address(RVA = "0x13D2A10", Offset = "0x13D2A10", VA = "0x13D2A10")]
	public static void ShowYokeInfo()
	{
	}

	[Token(Token = "0x6001E46")]
	[Address(RVA = "0x13D2B14", Offset = "0x13D2B14", VA = "0x13D2B14")]
	public static void HideYokeInfo()
	{
	}

	[Token(Token = "0x6001E47")]
	[Address(RVA = "0x13D2C20", Offset = "0x13D2C20", VA = "0x13D2C20")]
	public static void SetText(string textTranslated)
	{
	}

	[Token(Token = "0x6001E48")]
	[Address(RVA = "0x13D2D30", Offset = "0x13D2D30", VA = "0x13D2D30")]
	public VRCockpitNotepad()
	{
	}
}
[Token(Token = "0x200047E")]
public class VRController : MonoBehaviour
{
	[Token(Token = "0x40020C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private VRControllerRay ray;

	[Token(Token = "0x170001AD")]
	public VRControllerRay Ray
	{
		[Token(Token = "0x6001E49")]
		[Address(RVA = "0x13D3098", Offset = "0x13D3098", VA = "0x13D3098")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001E4A")]
	[Address(RVA = "0x13D30A0", Offset = "0x13D30A0", VA = "0x13D30A0")]
	public void Show(bool toggleRay = true)
	{
	}

	[Token(Token = "0x6001E4B")]
	[Address(RVA = "0x13D3248", Offset = "0x13D3248", VA = "0x13D3248")]
	public void Hide()
	{
	}

	[Token(Token = "0x6001E4C")]
	[Address(RVA = "0x13D3270", Offset = "0x13D3270", VA = "0x13D3270")]
	public static void ShowAll(bool toggleRay = true)
	{
	}

	[Token(Token = "0x6001E4D")]
	[Address(RVA = "0x13D34F4", Offset = "0x13D34F4", VA = "0x13D34F4")]
	public static void HideAll()
	{
	}

	[Token(Token = "0x6001E4E")]
	[Address(RVA = "0x13D36F8", Offset = "0x13D36F8", VA = "0x13D36F8")]
	public VRController()
	{
	}
}
[Token(Token = "0x200047F")]
public class VRControllerRay : MonoBehaviour
{
	[Token(Token = "0x40020C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float maxDrawLength;

	[Token(Token = "0x40020C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float maxRaycastLength;

	[Token(Token = "0x40020C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private HandType hand;

	[Token(Token = "0x40020C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private MUI_ControllerRay ray;

	[Token(Token = "0x6001E4F")]
	[Address(RVA = "0x13D3F44", Offset = "0x13D3F44", VA = "0x13D3F44")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001E50")]
	[Address(RVA = "0x13D30F4", Offset = "0x13D30F4", VA = "0x13D30F4")]
	public void Show([Optional] Transform target)
	{
	}

	[Token(Token = "0x6001E51")]
	[Address(RVA = "0x13D3218", Offset = "0x13D3218", VA = "0x13D3218")]
	public void Hide()
	{
	}

	[Token(Token = "0x6001E52")]
	[Address(RVA = "0x13D3F88", Offset = "0x13D3F88", VA = "0x13D3F88")]
	public VRControllerRay()
	{
	}
}
[Token(Token = "0x2000480")]
public class VRFlapsController : Grabbable, ISelfGrabbable
{
	[Token(Token = "0x40020C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private float angleLimit;

	[Token(Token = "0x40020C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private Transform dirParent;

	[Token(Token = "0x40020C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private Transform joint;

	[Token(Token = "0x40020C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private Transform centerPoint;

	[Token(Token = "0x40020CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private int flapDegreeSteps;

	[Token(Token = "0x40020CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float maxAngle;

	[Token(Token = "0x40020CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float currentValue;

	[Token(Token = "0x40020CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float tighteningDist;

	[Token(Token = "0x40020CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float currentDampValue;

	[Token(Token = "0x40020CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float targetValue;

	[Token(Token = "0x40020D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float targetValueVelocity;

	[Token(Token = "0x40020D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float leverDamp;

	[Token(Token = "0x40020D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float leverDampVelocity;

	[Token(Token = "0x40020D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private bool isSmoothing;

	[Token(Token = "0x40020D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5")]
	private bool wasHandMove;

	[Token(Token = "0x40020D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD6")]
	private bool shouldPlayAudioOut;

	[Token(Token = "0x40020D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private PlaneBody plane;

	[Token(Token = "0x40020D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private AudioSource audio;

	[Token(Token = "0x40020D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float audioVolume;

	[Token(Token = "0x40020D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static VRFlapsController current;

	[Token(Token = "0x40020DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool setPlaneChanged;

	[Token(Token = "0x170001AE")]
	public override AllowSticky AllowStickyGrip
	{
		[Token(Token = "0x6001E53")]
		[Address(RVA = "0x13D42AC", Offset = "0x13D42AC", VA = "0x13D42AC", Slot = "4")]
		get
		{
			return default(AllowSticky);
		}
	}

	[Token(Token = "0x6001E54")]
	[Address(RVA = "0x13D42B4", Offset = "0x13D42B4", VA = "0x13D42B4", Slot = "5")]
	public override void GrabBegin(Grabber hand, Collider grabPoint)
	{
	}

	[Token(Token = "0x6001E55")]
	[Address(RVA = "0x13D4348", Offset = "0x13D4348", VA = "0x13D4348", Slot = "6")]
	public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
	{
	}

	[Token(Token = "0x6001E56")]
	[Address(RVA = "0x13D449C", Offset = "0x13D449C", VA = "0x13D449C", Slot = "7")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6001E57")]
	[Address(RVA = "0x13D4740", Offset = "0x13D4740", VA = "0x13D4740")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001E58")]
	[Address(RVA = "0x13D4840", Offset = "0x13D4840", VA = "0x13D4840")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001E59")]
	[Address(RVA = "0x13D4630", Offset = "0x13D4630", VA = "0x13D4630")]
	private static void PlaneChanged(PlaneBody pb)
	{
	}

	[Token(Token = "0x6001E5A")]
	[Address(RVA = "0x13D48E0", Offset = "0x13D48E0", VA = "0x13D48E0")]
	public static float GetValue()
	{
		return default(float);
	}

	[Token(Token = "0x6001E5B")]
	[Address(RVA = "0x13D4988", Offset = "0x13D4988", VA = "0x13D4988")]
	private void Update()
	{
	}

	[Token(Token = "0x6001E5C")]
	[Address(RVA = "0x13D4D90", Offset = "0x13D4D90", VA = "0x13D4D90")]
	private void UpdateOtherSources()
	{
	}

	[Token(Token = "0x6001E5D")]
	[Address(RVA = "0x13D5100", Offset = "0x13D5100", VA = "0x13D5100")]
	private void UpdateFromPilot()
	{
	}

	[Token(Token = "0x6001E5E")]
	[Address(RVA = "0x13D5034", Offset = "0x13D5034", VA = "0x13D5034")]
	private void UpdateFromJoystick()
	{
	}

	[Token(Token = "0x6001E5F")]
	[Address(RVA = "0x13D4F1C", Offset = "0x13D4F1C", VA = "0x13D4F1C")]
	private void UpdateFromNet()
	{
	}

	[Token(Token = "0x6001E60")]
	[Address(RVA = "0x13D49D0", Offset = "0x13D49D0", VA = "0x13D49D0")]
	private void UpdateLeverToSteps()
	{
	}

	[Token(Token = "0x6001E61")]
	[Address(RVA = "0x13D4A48", Offset = "0x13D4A48", VA = "0x13D4A48")]
	private void UpdatePlaneFlaps()
	{
	}

	[Token(Token = "0x6001E62")]
	[Address(RVA = "0x13D5488", Offset = "0x13D5488", VA = "0x13D5488")]
	private void SetValue(float n)
	{
	}

	[Token(Token = "0x6001E63")]
	[Address(RVA = "0x13D438C", Offset = "0x13D438C", VA = "0x13D438C")]
	private float RoundStep(float val)
	{
		return default(float);
	}

	[Token(Token = "0x6001E64")]
	[Address(RVA = "0x13D52A8", Offset = "0x13D52A8", VA = "0x13D52A8", Slot = "10")]
	public void OnMove(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x6001E65")]
	[Address(RVA = "0x13D5564", Offset = "0x13D5564", VA = "0x13D5564")]
	public VRFlapsController()
	{
	}
}
[Token(Token = "0x2000481")]
public class VRGunNest : MonoBehaviour
{
	[Token(Token = "0x40020DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float nestRotateSpeed;

	[Token(Token = "0x40020DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float armRotateSpeed;

	[Token(Token = "0x40020DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform arm;

	[Token(Token = "0x40020DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Vector2 armLimits;

	[Token(Token = "0x40020DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector2 move;

	[Token(Token = "0x40020E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector2 vel;

	[Token(Token = "0x6001E66")]
	[Address(RVA = "0x13D5660", Offset = "0x13D5660", VA = "0x13D5660")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001E67")]
	[Address(RVA = "0x13D586C", Offset = "0x13D586C", VA = "0x13D586C")]
	public VRGunNest()
	{
	}
}
[Token(Token = "0x2000482")]
public class VRGunsight : MonoBehaviour
{
	[Token(Token = "0x40020E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool useOptics;

	[Token(Token = "0x40020E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Material bombMaterial;

	[Token(Token = "0x40020E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Color color20mm;

	[Token(Token = "0x40020E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material mat;

	[Token(Token = "0x40020E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material diveMat;

	[Token(Token = "0x40020E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int propID;

	[Token(Token = "0x40020E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int texID;

	[Token(Token = "0x40020E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int colorID;

	[Token(Token = "0x40020E9")]
	private const float SCALE = 1.25f;

	[Token(Token = "0x40020EA")]
	private const float kCrosshairGeometryScale = 2f;

	[Token(Token = "0x40020EB")]
	private const float kSightDistance = 100f;

	[Token(Token = "0x40020EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float scaleY;

	[Token(Token = "0x40020ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform sight;

	[Token(Token = "0x40020EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Renderer rend;

	[Token(Token = "0x40020EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Color clrCrosshair;

	[Token(Token = "0x40020F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Color clrDive;

	[Token(Token = "0x40020F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool bombMode;

	[Token(Token = "0x40020F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
	private bool bombModeTarget;

	[Token(Token = "0x40020F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
	private bool animBombMode;

	[Token(Token = "0x40020F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float animTarget;

	[Token(Token = "0x40020F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float animVal;

	[Token(Token = "0x40020F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float animVelocity;

	[Token(Token = "0x40020F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static VRGunsight instance;

	[Token(Token = "0x6001E68")]
	[Address(RVA = "0x13D587C", Offset = "0x13D587C", VA = "0x13D587C")]
	public void SetCurrent()
	{
	}

	[Token(Token = "0x6001E69")]
	[Address(RVA = "0x13D58CC", Offset = "0x13D58CC", VA = "0x13D58CC")]
	public static Vector3 ProjectDistance(float dist)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001E6A")]
	[Address(RVA = "0x13D5990", Offset = "0x13D5990", VA = "0x13D5990")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001E6B")]
	[Address(RVA = "0x13D5B90", Offset = "0x13D5B90", VA = "0x13D5B90")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001E6C")]
	[Address(RVA = "0x13D5C40", Offset = "0x13D5C40", VA = "0x13D5C40")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001E6D")]
	[Address(RVA = "0x13D5C6C", Offset = "0x13D5C6C", VA = "0x13D5C6C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001E6E")]
	[Address(RVA = "0x13D5F48", Offset = "0x13D5F48", VA = "0x13D5F48")]
	private void UpdateCrosshairMaterial()
	{
	}

	[Token(Token = "0x6001E6F")]
	[Address(RVA = "0x13D5CA0", Offset = "0x13D5CA0", VA = "0x13D5CA0")]
	private void DetectDiveMode()
	{
	}

	[Token(Token = "0x6001E70")]
	[Address(RVA = "0x13D5DC8", Offset = "0x13D5DC8", VA = "0x13D5DC8")]
	private void Animate()
	{
	}

	[Token(Token = "0x6001E71")]
	[Address(RVA = "0x13D6040", Offset = "0x13D6040", VA = "0x13D6040")]
	public VRGunsight()
	{
	}
}
[Token(Token = "0x2000483")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x9188B0", Offset = "0x9188B0")]
public class VRHeadHook : MonoBehaviour
{
	[Token(Token = "0x40020F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform centerEye;

	[Token(Token = "0x40020F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform renderSpace;

	[Token(Token = "0x40020FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform worldSpace;

	[Token(Token = "0x40020FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private TextMesh tm;

	[Token(Token = "0x40020FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static VRHeadHook instance;

	[Token(Token = "0x40020FD")]
	public const float kEyeHeight = 1.8f;

	[Token(Token = "0x40020FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Transform movingSurface;

	[Token(Token = "0x40020FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Vector3 move;

	[Token(Token = "0x4002100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public static Vector3 rawMove;

	[Token(Token = "0x6001E72")]
	[Address(RVA = "0x13D6050", Offset = "0x13D6050", VA = "0x13D6050")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001E73")]
	[Address(RVA = "0x13D60B8", Offset = "0x13D60B8", VA = "0x13D60B8")]
	private void Start()
	{
	}

	[Token(Token = "0x6001E74")]
	[Address(RVA = "0x13D6190", Offset = "0x13D6190", VA = "0x13D6190")]
	private void Update()
	{
	}

	[Token(Token = "0x6001E75")]
	[Address(RVA = "0x13D6234", Offset = "0x13D6234", VA = "0x13D6234")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001E76")]
	[Address(RVA = "0x13D63A0", Offset = "0x13D63A0", VA = "0x13D63A0")]
	public static Vector3 TranslateMove(Vector3 v)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001E77")]
	[Address(RVA = "0x13D64D0", Offset = "0x13D64D0", VA = "0x13D64D0")]
	public static Transform GetRenderSpace()
	{
		return null;
	}

	[Token(Token = "0x6001E78")]
	[Address(RVA = "0x13CBC58", Offset = "0x13CBC58", VA = "0x13CBC58")]
	public static Transform GetCenterEye()
	{
		return null;
	}

	[Token(Token = "0x6001E79")]
	[Address(RVA = "0x13CBB2C", Offset = "0x13CBB2C", VA = "0x13CBB2C")]
	public static Transform GetLocalPivot()
	{
		return null;
	}

	[Token(Token = "0x6001E7A")]
	[Address(RVA = "0x13D6540", Offset = "0x13D6540", VA = "0x13D6540")]
	public static Transform GetWorldPivot()
	{
		return null;
	}

	[Token(Token = "0x6001E7B")]
	[Address(RVA = "0x13D65B0", Offset = "0x13D65B0", VA = "0x13D65B0")]
	public static TextMesh GetText()
	{
		return null;
	}

	[Token(Token = "0x6001E7C")]
	[Address(RVA = "0x13D6620", Offset = "0x13D6620", VA = "0x13D6620")]
	public VRHeadHook()
	{
	}
}
[Token(Token = "0x2000484")]
public class VRHitDetect : MonoBehaviour
{
	[Token(Token = "0x4002101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float forceThreshold;

	[Token(Token = "0x4002102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float timeBetween;

	[Token(Token = "0x4002103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool haptics;

	[Token(Token = "0x4002104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float hapticsDuration;

	[Token(Token = "0x4002105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private HapticSourceHands bhaptics;

	[Token(Token = "0x4002106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private UnityEvent interact;

	[Token(Token = "0x4002107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Grabber hitHand;

	[Token(Token = "0x4002108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector2 lastTime;

	[Token(Token = "0x6001E7E")]
	[Address(RVA = "0x13D662C", Offset = "0x13D662C", VA = "0x13D662C")]
	public void Interact(Grabber hand)
	{
	}

	[Token(Token = "0x6001E7F")]
	[Address(RVA = "0x13D6750", Offset = "0x13D6750", VA = "0x13D6750")]
	private float GetLastTime(Grabber hand)
	{
		return default(float);
	}

	[Token(Token = "0x6001E80")]
	[Address(RVA = "0x13D6818", Offset = "0x13D6818", VA = "0x13D6818")]
	private void SetLastTime(Grabber hand)
	{
	}

	[Token(Token = "0x6001E81")]
	[Address(RVA = "0x13D695C", Offset = "0x13D695C", VA = "0x13D695C")]
	public VRHitDetect()
	{
	}
}
[Token(Token = "0x2000485")]
public static class VRJoystickActions
{
	[Token(Token = "0x4002109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GrabbableHolder bombbay;

	[Token(Token = "0x400210A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static VRBomb bomb;

	[Token(Token = "0x400210B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static FlareGun gun;

	[Token(Token = "0x400210C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static Vector3 gunOffset;

	[Token(Token = "0x6001E82")]
	[Address(RVA = "0x13D6978", Offset = "0x13D6978", VA = "0x13D6978")]
	public static void Initialize()
	{
	}

	[Token(Token = "0x6001E83")]
	[Address(RVA = "0x13D6BB8", Offset = "0x13D6BB8", VA = "0x13D6BB8")]
	public static void Update()
	{
	}

	[Token(Token = "0x6001E84")]
	[Address(RVA = "0x13D798C", Offset = "0x13D798C", VA = "0x13D798C")]
	private static void Reset()
	{
	}

	[Token(Token = "0x6001E85")]
	[Address(RVA = "0x13D7A04", Offset = "0x13D7A04", VA = "0x13D7A04")]
	private static void PlaneChanged(PlaneBody pb)
	{
	}

	[Token(Token = "0x6001E86")]
	[Address(RVA = "0x13D7B08", Offset = "0x13D7B08", VA = "0x13D7B08")]
	private static void SeatChanged(VRCockpit from, VRCockpit to)
	{
	}

	[Token(Token = "0x6001E87")]
	[Address(RVA = "0x13D6FD4", Offset = "0x13D6FD4", VA = "0x13D6FD4")]
	private static void ToggleGun()
	{
	}

	[Token(Token = "0x6001E88")]
	[Address(RVA = "0x13D7F20", Offset = "0x13D7F20", VA = "0x13D7F20")]
	private static void ReturnGun()
	{
	}

	[Token(Token = "0x6001E89")]
	[Address(RVA = "0x13D7C20", Offset = "0x13D7C20", VA = "0x13D7C20")]
	private static void GrabGun()
	{
	}

	[Token(Token = "0x6001E8A")]
	[Address(RVA = "0x13D72D8", Offset = "0x13D72D8", VA = "0x13D72D8")]
	private static void MoveGun()
	{
	}

	[Token(Token = "0x6001E8B")]
	[Address(RVA = "0x13D7104", Offset = "0x13D7104", VA = "0x13D7104")]
	private static void ToggleBomb()
	{
	}

	[Token(Token = "0x6001E8C")]
	[Address(RVA = "0x13D7FF4", Offset = "0x13D7FF4", VA = "0x13D7FF4")]
	private static void ReturnBomb(bool drop = false)
	{
	}

	[Token(Token = "0x6001E8D")]
	[Address(RVA = "0x13D8194", Offset = "0x13D8194", VA = "0x13D8194")]
	private static void GrabBomb()
	{
	}

	[Token(Token = "0x6001E8E")]
	[Address(RVA = "0x13D756C", Offset = "0x13D756C", VA = "0x13D756C")]
	private static void MoveBomb()
	{
	}
}
[Token(Token = "0x2000486")]
public class VRLeverSwitch : MonoBehaviour
{
	[Token(Token = "0x400210D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform lever;

	[Token(Token = "0x400210E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float switchDelay;

	[Token(Token = "0x400210F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float switchDistance;

	[Token(Token = "0x4002110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float switchAngle;

	[Token(Token = "0x4002111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RendererStateListener rendererListener;

	[Token(Token = "0x4002112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject target;

	[Token(Token = "0x4002113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private string funtionName;

	[Token(Token = "0x4002114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 forward;

	[Token(Token = "0x4002115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 position;

	[Token(Token = "0x4002116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool state;

	[Token(Token = "0x4002117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float switchTime;

	[Token(Token = "0x4002118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float prevSign;

	[Token(Token = "0x4002119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool inSight;

	[Token(Token = "0x6001E90")]
	[Address(RVA = "0x13D8430", Offset = "0x13D8430", VA = "0x13D8430")]
	public void Toggle(bool toggle)
	{
	}

	[Token(Token = "0x6001E91")]
	[Address(RVA = "0x13D8438", Offset = "0x13D8438", VA = "0x13D8438")]
	private void SwitchChanged(bool toggle)
	{
	}

	[Token(Token = "0x6001E92")]
	[Address(RVA = "0x13D8524", Offset = "0x13D8524", VA = "0x13D8524")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001E93")]
	[Address(RVA = "0x13D8628", Offset = "0x13D8628", VA = "0x13D8628")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001E94")]
	[Address(RVA = "0x13D8804", Offset = "0x13D8804", VA = "0x13D8804")]
	private void DetectMotion(Transform pointer)
	{
	}

	[Token(Token = "0x6001E95")]
	[Address(RVA = "0x13D8970", Offset = "0x13D8970", VA = "0x13D8970")]
	public VRLeverSwitch()
	{
	}

	[Token(Token = "0x6001E96")]
	[Address(RVA = "0x13D898C", Offset = "0x13D898C", VA = "0x13D898C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92BF24", Offset = "0x92BF24")]
	private void <Awake>b__15_0(bool state)
	{
	}

	[Token(Token = "0x6001E97")]
	[Address(RVA = "0x13D8958", Offset = "0x13D8958", VA = "0x13D8958")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92BF34", Offset = "0x92BF34")]
	internal static float <DetectMotion>g__Sqrt|17_0(float x)
	{
		return default(float);
	}
}
[Token(Token = "0x2000487")]
public class VRMachinegun : VR2DAxisMotion, IVRCannonController, IGrabbable
{
	[Token(Token = "0x6001E98")]
	[Address(RVA = "0x13D8998", Offset = "0x13D8998", VA = "0x13D8998", Slot = "5")]
	public override void GrabBegin(Grabber hand, Collider grabPoint)
	{
	}

	[Token(Token = "0x6001E99")]
	[Address(RVA = "0x13D8A24", Offset = "0x13D8A24", VA = "0x13D8A24", Slot = "6")]
	public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
	{
	}

	[Token(Token = "0x6001E9A")]
	[Address(RVA = "0x13D8AE0", Offset = "0x13D8AE0", VA = "0x13D8AE0")]
	public VRMachinegun()
	{
	}
}
[Token(Token = "0x2000488")]
public class VRPlane : MonoBehaviour
{
	[Token(Token = "0x2000489")]
	private class Seat
	{
		[Token(Token = "0x400212D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public VRCockpit cockpit;

		[Token(Token = "0x400212E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VRCockpit next;

		[Token(Token = "0x400212F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int index;

		[Token(Token = "0x6001EB8")]
		[Address(RVA = "0x11B7A44", Offset = "0x11B7A44", VA = "0x11B7A44")]
		public Seat()
		{
		}
	}

	[Token(Token = "0x200048A")]
	public delegate void SeatChanged(VRCockpit from, VRCockpit to);

	[Token(Token = "0x400211A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject[] listLow;

	[Token(Token = "0x400211B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject[] listVR;

	[Token(Token = "0x400211C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject[] listBase;

	[Token(Token = "0x400211D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SkinnedMeshRenderer smr;

	[Token(Token = "0x400211E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Mesh meshLow;

	[Token(Token = "0x400211F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Mesh meshVR;

	[Token(Token = "0x4002120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform[] bonesLow;

	[Token(Token = "0x4002121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform[] bonesVR;

	[Token(Token = "0x4002122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static VRPlane lastPlane;

	[Token(Token = "0x4002123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private VRCockpit[][] cockpits;

	[Token(Token = "0x4002124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int totalSeats;

	[Token(Token = "0x4002125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Seat seat;

	[Token(Token = "0x4002126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool waitSeatChange;

	[Token(Token = "0x4002127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	private bool isPlayer;

	[Token(Token = "0x4002128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float changeSeatTime;

	[Token(Token = "0x4002129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float afterChangeTime;

	[Token(Token = "0x400212A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private bool toggleMRCcockpit;

	[Token(Token = "0x400212B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static SeatChanged seatChanged;

	[Token(Token = "0x400212C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static SeatChanged beforeSeatChanged;

	[Token(Token = "0x6001E9B")]
	[Address(RVA = "0x13CE3AC", Offset = "0x13CE3AC", VA = "0x13CE3AC")]
	public VRCockpit GetCockpit()
	{
		return null;
	}

	[Token(Token = "0x6001E9C")]
	[Address(RVA = "0x13D8AFC", Offset = "0x13D8AFC", VA = "0x13D8AFC")]
	static VRPlane()
	{
	}

	[Token(Token = "0x6001E9D")]
	[Address(RVA = "0x13D8C3C", Offset = "0x13D8C3C", VA = "0x13D8C3C")]
	private static void PlaneChanged(PlaneBody p)
	{
	}

	[Token(Token = "0x6001E9E")]
	[Address(RVA = "0x13D9488", Offset = "0x13D9488", VA = "0x13D9488")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001E9F")]
	[Address(RVA = "0x13D94D0", Offset = "0x13D94D0", VA = "0x13D94D0")]
	private void LoadCockpits()
	{
	}

	[Token(Token = "0x6001EA0")]
	[Address(RVA = "0x13D981C", Offset = "0x13D981C", VA = "0x13D981C")]
	public static int GetGunnersCount(GameObject prefab)
	{
		return default(int);
	}

	[Token(Token = "0x6001EA1")]
	[Address(RVA = "0x13D911C", Offset = "0x13D911C", VA = "0x13D911C")]
	private void SetDefaultCockpit()
	{
	}

	[Token(Token = "0x6001EA2")]
	[Address(RVA = "0x13D5258", Offset = "0x13D5258", VA = "0x13D5258")]
	public VRCockpit GetPilotCockpit()
	{
		return null;
	}

	[Token(Token = "0x6001EA3")]
	[Address(RVA = "0x13D9980", Offset = "0x13D9980", VA = "0x13D9980")]
	public VRCockpit GetGunnerCockpit(int gidx)
	{
		return null;
	}

	[Token(Token = "0x6001EA4")]
	[Address(RVA = "0x13D99E0", Offset = "0x13D99E0", VA = "0x13D99E0")]
	private void BeginChangePlaneSeat(bool immediate = false)
	{
	}

	[Token(Token = "0x6001EA5")]
	[Address(RVA = "0x13D9B4C", Offset = "0x13D9B4C", VA = "0x13D9B4C")]
	private VRCockpit BindCockpitWithSeatIndex()
	{
		return null;
	}

	[Token(Token = "0x6001EA6")]
	[Address(RVA = "0x13D9BE8", Offset = "0x13D9BE8", VA = "0x13D9BE8")]
	private int MultiplayerGetNextFreeSeatIdx(bool next, bool setSeatInPlayer)
	{
		return default(int);
	}

	[Token(Token = "0x6001EA7")]
	[Address(RVA = "0x13DA208", Offset = "0x13DA208", VA = "0x13DA208")]
	public bool HaveFreeSeats()
	{
		return default(bool);
	}

	[Token(Token = "0x6001EA8")]
	[Address(RVA = "0x13DA358", Offset = "0x13DA358", VA = "0x13DA358")]
	private void TryGetNextSeat()
	{
	}

	[Token(Token = "0x6001EA9")]
	[Address(RVA = "0x13DA484", Offset = "0x13DA484", VA = "0x13DA484")]
	private void TryGetPreviousSeat()
	{
	}

	[Token(Token = "0x6001EAA")]
	[Address(RVA = "0x13DA5A0", Offset = "0x13DA5A0", VA = "0x13DA5A0")]
	private int GunnerIdx2SeatIdx(int gidx)
	{
		return default(int);
	}

	[Token(Token = "0x6001EAB")]
	[Address(RVA = "0x13DA194", Offset = "0x13DA194", VA = "0x13DA194")]
	private int SeatIdx2GunnerIdx(int sidx)
	{
		return default(int);
	}

	[Token(Token = "0x6001EAC")]
	[Address(RVA = "0x13DA5E0", Offset = "0x13DA5E0", VA = "0x13DA5E0")]
	public void ChangePlaneGunnerIdx(int idx, bool immediate)
	{
	}

	[Token(Token = "0x6001EAD")]
	[Address(RVA = "0x13DA678", Offset = "0x13DA678", VA = "0x13DA678")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001EAE")]
	[Address(RVA = "0x13DADA4", Offset = "0x13DADA4", VA = "0x13DADA4")]
	private void Start()
	{
	}

	[Token(Token = "0x6001EAF")]
	[Address(RVA = "0x13DB034", Offset = "0x13DB034", VA = "0x13DB034")]
	public void RefreshAfterRespawn()
	{
	}

	[Token(Token = "0x6001EB0")]
	[Address(RVA = "0x13DADF8", Offset = "0x13DADF8", VA = "0x13DADF8")]
	private void ToggleThingsInsideCockpit(PlaneBody pb)
	{
	}

	[Token(Token = "0x6001EB1")]
	[Address(RVA = "0x13D92F8", Offset = "0x13D92F8", VA = "0x13D92F8")]
	private void ToggleAllNPC(bool toggle)
	{
	}

	[Token(Token = "0x6001EB2")]
	[Address(RVA = "0x13D93C0", Offset = "0x13D93C0", VA = "0x13D93C0")]
	private void ToggleAllComponents(bool toggle)
	{
	}

	[Token(Token = "0x6001EB3")]
	[Address(RVA = "0x13D8E90", Offset = "0x13D8E90", VA = "0x13D8E90")]
	private void ToggleLowCockpit(bool toggle)
	{
	}

	[Token(Token = "0x6001EB4")]
	[Address(RVA = "0x13DA808", Offset = "0x13DA808", VA = "0x13DA808")]
	private void ToggleMRCCockpit(bool toggle)
	{
	}

	[Token(Token = "0x6001EB5")]
	[Address(RVA = "0x13DB2B0", Offset = "0x13DB2B0", VA = "0x13DB2B0")]
	public void ToggleFullStationaryVR(bool toggle)
	{
	}

	[Token(Token = "0x6001EB6")]
	[Address(RVA = "0x13DB3C8", Offset = "0x13DB3C8", VA = "0x13DB3C8")]
	public Transform GetHead()
	{
		return null;
	}

	[Token(Token = "0x6001EB7")]
	[Address(RVA = "0x13DB3F0", Offset = "0x13DB3F0", VA = "0x13DB3F0")]
	public VRPlane()
	{
	}
}
[Token(Token = "0x200048B")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x9188C4", Offset = "0x9188C4")]
public class VRPlayerEngineAudio : MonoBehaviour
{
	[Token(Token = "0x4002130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource audios;

	[Token(Token = "0x4002131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform target;

	[Token(Token = "0x4002132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform rotationTarget;

	[Token(Token = "0x4002133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private PlaneBody lastPlane;

	[Token(Token = "0x4002134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 audioOffset;

	[Token(Token = "0x6001EBD")]
	[Address(RVA = "0x13DB478", Offset = "0x13DB478", VA = "0x13DB478")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001EBE")]
	[Address(RVA = "0x13DB574", Offset = "0x13DB574", VA = "0x13DB574")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001EBF")]
	[Address(RVA = "0x13DB664", Offset = "0x13DB664", VA = "0x13DB664")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001EC0")]
	[Address(RVA = "0x13DB668", Offset = "0x13DB668", VA = "0x13DB668")]
	private void UpdatePos()
	{
	}

	[Token(Token = "0x6001EC1")]
	[Address(RVA = "0x13DB7B0", Offset = "0x13DB7B0", VA = "0x13DB7B0")]
	private void PlaneChanged(PlaneBody pb)
	{
	}

	[Token(Token = "0x6001EC2")]
	[Address(RVA = "0x13DBB0C", Offset = "0x13DBB0C", VA = "0x13DBB0C")]
	public VRPlayerEngineAudio()
	{
	}
}
[Token(Token = "0x200048C")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x9188D8", Offset = "0x9188D8")]
public class VRSDKCondition : MonoBehaviour
{
	[Token(Token = "0x4002135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VRSDK sdk;

	[Token(Token = "0x4002136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool destroyIfNotShow;

	[Token(Token = "0x6001EC3")]
	[Address(RVA = "0x13DBC1C", Offset = "0x13DBC1C", VA = "0x13DBC1C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001EC4")]
	[Address(RVA = "0x13DBE4C", Offset = "0x13DBE4C", VA = "0x13DBE4C")]
	public VRSDKCondition()
	{
	}
}
[Token(Token = "0x200048D")]
public class VRSeat : MonoBehaviour
{
	[Token(Token = "0x200048E")]
	public delegate void SeatAction();

	[Token(Token = "0x4002137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float enterRadius;

	[Token(Token = "0x4002138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform t;

	[Token(Token = "0x4002139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform player;

	[Token(Token = "0x400213A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool hadSeat;

	[Token(Token = "0x400213B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float fadeTime;

	[Token(Token = "0x400213C")]
	private const float blinkTime = 0.1f;

	[Token(Token = "0x400213D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91CF0C", Offset = "0x91CF0C")]
	private static VRSeat <Current>k__BackingField;

	[Token(Token = "0x400213E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91CF1C", Offset = "0x91CF1C")]
	private static bool <HaveSeat>k__BackingField;

	[Token(Token = "0x400213F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91CF2C", Offset = "0x91CF2C")]
	private bool <IsOccupied>k__BackingField;

	[Token(Token = "0x4002140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static Vector3 lastWorldPosition;

	[Token(Token = "0x4002141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static Vector3 lastLocalPosition;

	[Token(Token = "0x4002142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static Quaternion lastWorldRotation;

	[Token(Token = "0x4002143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private static Quaternion lastLocalRotation;

	[Token(Token = "0x4002144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static Transform lastParent;

	[Token(Token = "0x4002145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public SeatAction onSeat;

	[Token(Token = "0x4002146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SeatAction onLeave;

	[Token(Token = "0x170001AF")]
	public static VRSeat Current
	{
		[Token(Token = "0x6001EC5")]
		[Address(RVA = "0x13DBE54", Offset = "0x13DBE54", VA = "0x13DBE54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92BF44", Offset = "0x92BF44")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001EC6")]
		[Address(RVA = "0x13DBEA0", Offset = "0x13DBEA0", VA = "0x13DBEA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92BF54", Offset = "0x92BF54")]
		private set
		{
		}
	}

	[Token(Token = "0x170001B0")]
	public static bool HaveSeat
	{
		[Token(Token = "0x6001EC7")]
		[Address(RVA = "0x13DBEF0", Offset = "0x13DBEF0", VA = "0x13DBEF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92BF64", Offset = "0x92BF64")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001EC8")]
		[Address(RVA = "0x13DBF3C", Offset = "0x13DBF3C", VA = "0x13DBF3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92BF74", Offset = "0x92BF74")]
		private set
		{
		}
	}

	[Token(Token = "0x170001B1")]
	public bool IsOccupied
	{
		[Token(Token = "0x6001EC9")]
		[Address(RVA = "0x13DBF90", Offset = "0x13DBF90", VA = "0x13DBF90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92BF84", Offset = "0x92BF84")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001ECA")]
		[Address(RVA = "0x13DBF98", Offset = "0x13DBF98", VA = "0x13DBF98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92BF94", Offset = "0x92BF94")]
		private set
		{
		}
	}

	[Token(Token = "0x6001ECB")]
	[Address(RVA = "0x13DBFA4", Offset = "0x13DBFA4", VA = "0x13DBFA4")]
	private void Start()
	{
	}

	[Token(Token = "0x6001ECC")]
	[Address(RVA = "0x13DC018", Offset = "0x13DC018", VA = "0x13DC018")]
	private void Update()
	{
	}

	[Token(Token = "0x6001ECD")]
	[Address(RVA = "0x13DC160", Offset = "0x13DC160", VA = "0x13DC160")]
	private void ProcessSeatEnter()
	{
	}

	[Token(Token = "0x6001ECE")]
	[Address(RVA = "0x13DC848", Offset = "0x13DC848", VA = "0x13DC848")]
	private void FadeOut()
	{
	}

	[Token(Token = "0x6001ECF")]
	[Address(RVA = "0x13DC940", Offset = "0x13DC940", VA = "0x13DC940")]
	private void FadeIn()
	{
	}

	[Token(Token = "0x6001ED0")]
	[Address(RVA = "0x13DC774", Offset = "0x13DC774", VA = "0x13DC774")]
	public void Seat(VRSeat seat)
	{
	}

	[Token(Token = "0x6001ED1")]
	[Address(RVA = "0x13DC45C", Offset = "0x13DC45C", VA = "0x13DC45C")]
	private void FinishSeat()
	{
	}

	[Token(Token = "0x6001ED2")]
	[Address(RVA = "0x13DC6CC", Offset = "0x13DC6CC", VA = "0x13DC6CC")]
	public void Leave()
	{
	}

	[Token(Token = "0x6001ED3")]
	[Address(RVA = "0x13DC2B8", Offset = "0x13DC2B8", VA = "0x13DC2B8")]
	private void FinishLeave()
	{
	}

	[Token(Token = "0x6001ED4")]
	[Address(RVA = "0x13DC9FC", Offset = "0x13DC9FC", VA = "0x13DC9FC")]
	public VRSeat()
	{
	}
}
[Token(Token = "0x200048F")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x9188EC", Offset = "0x9188EC")]
internal class VRSetup : MonoBehaviour
{
	[Token(Token = "0x4002147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool autoCenterOnLoad;

	[Token(Token = "0x4002148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[SerializeField]
	private bool resetRotationOnload;

	[Token(Token = "0x4002149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[SerializeField]
	private bool mainMenuOnce;

	[Token(Token = "0x400214A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	private bool valid;

	[Token(Token = "0x400214B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool created;

	[Token(Token = "0x400214C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool do_not_start;

	[Token(Token = "0x6001ED9")]
	[Address(RVA = "0x13DCA0C", Offset = "0x13DCA0C", VA = "0x13DCA0C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001EDA")]
	[Address(RVA = "0x13DCDE0", Offset = "0x13DCDE0", VA = "0x13DCDE0")]
	private void Start()
	{
	}

	[Token(Token = "0x6001EDB")]
	[Address(RVA = "0x13DCE74", Offset = "0x13DCE74", VA = "0x13DCE74")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001EDC")]
	[Address(RVA = "0x13DD01C", Offset = "0x13DD01C", VA = "0x13DD01C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001EDD")]
	[Address(RVA = "0x13DD114", Offset = "0x13DD114", VA = "0x13DD114")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001EDE")]
	[Address(RVA = "0x13DD1A4", Offset = "0x13DD1A4", VA = "0x13DD1A4")]
	public VRSetup()
	{
	}
}
[Token(Token = "0x2000490")]
public class VRStairs : MonoBehaviour
{
	[Token(Token = "0x400214D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Vector2 size;

	[Token(Token = "0x400214E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool inside;

	[Token(Token = "0x400214F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Bounds stairBounds;

	[Token(Token = "0x6001EE0")]
	[Address(RVA = "0x13DD2D4", Offset = "0x13DD2D4", VA = "0x13DD2D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001EE1")]
	[Address(RVA = "0x13DD454", Offset = "0x13DD454", VA = "0x13DD454")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001EE2")]
	[Address(RVA = "0x13DD31C", Offset = "0x13DD31C", VA = "0x13DD31C")]
	private Bounds GetBoundingBox()
	{
		return default(Bounds);
	}

	[Token(Token = "0x6001EE3")]
	[Address(RVA = "0x13DD5CC", Offset = "0x13DD5CC", VA = "0x13DD5CC")]
	public VRStairs()
	{
	}
}
[Token(Token = "0x2000491")]
public class VRTapMotion : MonoBehaviour
{
	[Token(Token = "0x2000492")]
	public delegate void Tap();

	[Token(Token = "0x4002150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Vector2 boxSize;

	[Token(Token = "0x4002151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float tapDetectDistance;

	[Token(Token = "0x4002152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float timeBetweenTaps;

	[Token(Token = "0x4002153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float hapticsDuration;

	[Token(Token = "0x4002154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x91CFBC", Offset = "0x91CFBC")]
	[SerializeField]
	private float hapticsIntensity;

	[Token(Token = "0x4002155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RendererStateListener rendererListener;

	[Token(Token = "0x4002156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool wasDown;

	[Token(Token = "0x4002157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool inSight;

	[Token(Token = "0x4002158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float lastClick;

	[Token(Token = "0x4002159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Grabber hitHand;

	[Token(Token = "0x400215A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float tapDetectDistanceSq;

	[Token(Token = "0x400215B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Tap onTap;

	[Token(Token = "0x6001EE4")]
	[Address(RVA = "0xE1716C", Offset = "0xE1716C", VA = "0xE1716C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001EE5")]
	[Address(RVA = "0xE1727C", Offset = "0xE1727C", VA = "0xE1727C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001EE6")]
	[Address(RVA = "0xE1756C", Offset = "0xE1756C", VA = "0xE1756C")]
	public VRTapMotion()
	{
	}

	[Token(Token = "0x6001EE7")]
	[Address(RVA = "0xE17580", Offset = "0xE17580", VA = "0xE17580")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92BFA4", Offset = "0x92BFA4")]
	private void <Awake>b__13_0(bool state)
	{
	}
}
[Token(Token = "0x2000493")]
public class VRTestCalibrate : MonoBehaviour
{
	[Token(Token = "0x400215C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Material mat;

	[Token(Token = "0x400215D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MUI_Slider[] sliders;

	[Token(Token = "0x400215E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string[] props;

	[Token(Token = "0x400215F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector2[] range;

	[Token(Token = "0x6001EEC")]
	[Address(RVA = "0xE1758C", Offset = "0xE1758C", VA = "0xE1758C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001EED")]
	[Address(RVA = "0xE1779C", Offset = "0xE1779C", VA = "0xE1779C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001EEE")]
	[Address(RVA = "0xE1794C", Offset = "0xE1794C", VA = "0xE1794C")]
	public VRTestCalibrate()
	{
	}
}
[Token(Token = "0x2000494")]
public class VRTransformGuide : MonoBehaviour
{
	[Token(Token = "0x2000495")]
	public delegate bool SlidePermission();

	[Token(Token = "0x4002160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float distanceToStartRotate;

	[Token(Token = "0x4002161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float distanceToStartLineup;

	[Token(Token = "0x4002162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x91D03C", Offset = "0x91D03C")]
	[SerializeField]
	private float nearThreshold;

	[Token(Token = "0x4002163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform targetDetached;

	[Token(Token = "0x4002164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform targetAttached;

	[Token(Token = "0x4002165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform detachedRotation;

	[Token(Token = "0x4002166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private bool backOnGrabEnd;

	[Token(Token = "0x4002167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private float backTime;

	[Token(Token = "0x4002168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Action onSlideEnd;

	[Token(Token = "0x4002169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Action onSlideStart;

	[Token(Token = "0x400216A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Action onReachAttached;

	[Token(Token = "0x400216B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public SlidePermission canSlide;

	[Token(Token = "0x400216C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float slideSpeed;

	[Token(Token = "0x400216D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Grabber hand;

	[Token(Token = "0x400216E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool anim;

	[Token(Token = "0x400216F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	private bool animInside;

	[Token(Token = "0x4002170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
	private bool guided;

	[Token(Token = "0x4002171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7B")]
	private bool animBack;

	[Token(Token = "0x4002172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private bool force;

	[Token(Token = "0x4002173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Grabbable target;

	[Token(Token = "0x4002174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float backStep;

	[Token(Token = "0x4002175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Vector3 backFromPos;

	[Token(Token = "0x4002176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Vector3 targetPos;

	[Token(Token = "0x4002177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private Quaternion backFromRotation;

	[Token(Token = "0x6001EEF")]
	[Address(RVA = "0xE17B38", Offset = "0xE17B38", VA = "0xE17B38")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001EF0")]
	[Address(RVA = "0xE17B8C", Offset = "0xE17B8C", VA = "0xE17B8C")]
	public bool Toggle(bool condition)
	{
		return default(bool);
	}

	[Token(Token = "0x6001EF1")]
	[Address(RVA = "0xE17BC4", Offset = "0xE17BC4", VA = "0xE17BC4")]
	public void SetTarget(Grabbable grabbable)
	{
	}

	[Token(Token = "0x6001EF2")]
	[Address(RVA = "0xE17BCC", Offset = "0xE17BCC", VA = "0xE17BCC")]
	public void SetHand(Grabber hand)
	{
	}

	[Token(Token = "0x6001EF3")]
	[Address(RVA = "0xE17BD4", Offset = "0xE17BD4", VA = "0xE17BD4")]
	public void SetPositions(Transform attached, Transform detached, Transform detachedRotation)
	{
	}

	[Token(Token = "0x6001EF4")]
	[Address(RVA = "0xE17BE0", Offset = "0xE17BE0", VA = "0xE17BE0")]
	public void ForceGuide()
	{
	}

	[Token(Token = "0x6001EF5")]
	[Address(RVA = "0xE17BEC", Offset = "0xE17BEC", VA = "0xE17BEC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001EF6")]
	[Address(RVA = "0xE1886C", Offset = "0xE1886C", VA = "0xE1886C")]
	public void UpdatePosition()
	{
	}

	[Token(Token = "0x6001EF7")]
	[Address(RVA = "0xE18E8C", Offset = "0xE18E8C", VA = "0xE18E8C")]
	public void OnGrabEnd()
	{
	}

	[Token(Token = "0x6001EF8")]
	[Address(RVA = "0xE17C40", Offset = "0xE17C40", VA = "0xE17C40")]
	private void OnForcedGuide()
	{
	}

	[Token(Token = "0x6001EF9")]
	[Address(RVA = "0xE1887C", Offset = "0xE1887C", VA = "0xE1887C")]
	private void Guide()
	{
	}

	[Token(Token = "0x6001EFA")]
	[Address(RVA = "0xE181F8", Offset = "0xE181F8", VA = "0xE181F8")]
	private void AnimateSlide()
	{
	}

	[Token(Token = "0x6001EFB")]
	[Address(RVA = "0xE18388", Offset = "0xE18388", VA = "0xE18388")]
	private void AnimateBack()
	{
	}

	[Token(Token = "0x6001EFC")]
	[Address(RVA = "0xE18F50", Offset = "0xE18F50", VA = "0xE18F50")]
	public VRTransformGuide()
	{
	}
}
[Token(Token = "0x2000496")]
public class VR_tap : MonoBehaviour
{
	[Token(Token = "0x4002178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public new GameObject gameObject;

	[Token(Token = "0x4002179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string callFunction;

	[Token(Token = "0x6001F01")]
	[Address(RVA = "0xE199E4", Offset = "0xE199E4", VA = "0xE199E4")]
	private void Start()
	{
	}

	[Token(Token = "0x6001F02")]
	[Address(RVA = "0xE19A94", Offset = "0xE19A94", VA = "0xE19A94")]
	private void Tap()
	{
	}

	[Token(Token = "0x6001F03")]
	[Address(RVA = "0xE19AB8", Offset = "0xE19AB8", VA = "0xE19AB8")]
	public VR_tap()
	{
	}
}
[Token(Token = "0x2000497")]
public class VibrationClip
{
	[Token(Token = "0x2000498")]
	public delegate byte DataProduce(float progress);

	[Token(Token = "0x400217A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public VibrationClipData clipData;

	[Token(Token = "0x400217B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public readonly float duration;

	[Token(Token = "0x400217C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float amplitude;

	[Token(Token = "0x400217D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float playbackTime;

	[Token(Token = "0x400217E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private readonly float baseAmplitude;

	[Token(Token = "0x400217F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public readonly int desiredFrequency;

	[Token(Token = "0x4002180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int rate;

	[Token(Token = "0x4002181")]
	private const int maxSize = 256;

	[Token(Token = "0x4002182")]
	private const float baseFrequency = 500f;

	[Token(Token = "0x4002183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly byte[] primeBuffer;

	[Token(Token = "0x4002184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly byte[] buffer;

	[Token(Token = "0x6001F04")]
	[Address(RVA = "0xE1B39C", Offset = "0xE1B39C", VA = "0xE1B39C")]
	public VibrationClip(int desiredFrequency, float amplitude, float duration, [Optional] DataProduce dataProduction)
	{
	}

	[Token(Token = "0x6001F05")]
	[Address(RVA = "0xE1B710", Offset = "0xE1B710", VA = "0xE1B710")]
	private void Resize()
	{
	}

	[Token(Token = "0x6001F06")]
	[Address(RVA = "0xE1B714", Offset = "0xE1B714", VA = "0xE1B714")]
	public void SetAmplitude(float amplitude)
	{
	}

	[Token(Token = "0x6001F07")]
	[Address(RVA = "0xE1B7C0", Offset = "0xE1B7C0", VA = "0xE1B7C0")]
	private void ModifyPermamentAmplitude(float amplitude)
	{
	}

	[Token(Token = "0x6001F08")]
	[Address(RVA = "0xE1B87C", Offset = "0xE1B87C", VA = "0xE1B87C")]
	public void Refresh()
	{
	}

	[Token(Token = "0x6001F09")]
	[Address(RVA = "0xE1B880", Offset = "0xE1B880", VA = "0xE1B880")]
	public void Play(HandType hand)
	{
	}

	[Token(Token = "0x6001F0A")]
	[Address(RVA = "0xE1B984", Offset = "0xE1B984", VA = "0xE1B984")]
	public float Sample(float dt)
	{
		return default(float);
	}
}
[Token(Token = "0x2000499")]
public class VibrationClipData
{
	[Token(Token = "0x4002185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91D09C", Offset = "0x91D09C")]
	private int <Count>k__BackingField;

	[Token(Token = "0x4002186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91D0AC", Offset = "0x91D0AC")]
	private byte[] <Samples>k__BackingField;

	[Token(Token = "0x170001B2")]
	public int Count
	{
		[Token(Token = "0x6001F0F")]
		[Address(RVA = "0xE1BA14", Offset = "0xE1BA14", VA = "0xE1BA14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92BFB4", Offset = "0x92BFB4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001F10")]
		[Address(RVA = "0xE1BA1C", Offset = "0xE1BA1C", VA = "0xE1BA1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92BFC4", Offset = "0x92BFC4")]
		private set
		{
		}
	}

	[Token(Token = "0x170001B3")]
	public byte[] Samples
	{
		[Token(Token = "0x6001F11")]
		[Address(RVA = "0xE1BA24", Offset = "0xE1BA24", VA = "0xE1BA24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92BFD4", Offset = "0x92BFD4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001F12")]
		[Address(RVA = "0xE1BA2C", Offset = "0xE1BA2C", VA = "0xE1BA2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92BFE4", Offset = "0x92BFE4")]
		private set
		{
		}
	}

	[Token(Token = "0x6001F13")]
	[Address(RVA = "0xE1B93C", Offset = "0xE1B93C", VA = "0xE1B93C")]
	public VibrationClipData(byte[] samples, int samplesCount)
	{
	}

	[Token(Token = "0x6001F14")]
	[Address(RVA = "0xE1BA34", Offset = "0xE1BA34", VA = "0xE1BA34")]
	public void Reset()
	{
	}
}
[Token(Token = "0x200049A")]
public class VirtualYoke : SteeringGrabbable
{
	[Token(Token = "0x4002187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Rigidbody rbVertical;

	[Token(Token = "0x4002188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public HingeJoint joint;

	[Token(Token = "0x4002189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public ConfigurableJoint jointVertical;

	[Token(Token = "0x400218A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Transform verticalCenter;

	[Token(Token = "0x400218B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Vector2 limits;

	[Token(Token = "0x400218C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float rotLimit;

	[Token(Token = "0x400218D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float rotLimitInv;

	[Token(Token = "0x6001F15")]
	[Address(RVA = "0xE1F8C4", Offset = "0xE1F8C4", VA = "0xE1F8C4", Slot = "7")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6001F16")]
	[Address(RVA = "0xE1FA34", Offset = "0xE1FA34", VA = "0xE1FA34", Slot = "5")]
	public override void GrabBegin(Grabber hand, Collider grabPoint)
	{
	}

	[Token(Token = "0x6001F17")]
	[Address(RVA = "0xE1FA6C", Offset = "0xE1FA6C", VA = "0xE1FA6C", Slot = "6")]
	public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
	{
	}

	[Token(Token = "0x6001F18")]
	[Address(RVA = "0xE1FAA4", Offset = "0xE1FAA4", VA = "0xE1FAA4", Slot = "12")]
	public override Vector2 GetSteering()
	{
		return default(Vector2);
	}

	[Token(Token = "0x6001F19")]
	[Address(RVA = "0xE1FB30", Offset = "0xE1FB30", VA = "0xE1FB30", Slot = "13")]
	public override void OnMove(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x6001F1A")]
	[Address(RVA = "0xE1FB84", Offset = "0xE1FB84", VA = "0xE1FB84")]
	private void MovePos(Vector3 pos)
	{
	}

	[Token(Token = "0x6001F1B")]
	[Address(RVA = "0xE1FC5C", Offset = "0xE1FC5C", VA = "0xE1FC5C")]
	private void MoveRot(Quaternion rot)
	{
	}

	[Token(Token = "0x6001F1C")]
	[Address(RVA = "0xE1FD98", Offset = "0xE1FD98", VA = "0xE1FD98")]
	public VirtualYoke()
	{
	}
}
[Token(Token = "0x200049B")]
public static class XRInput
{
	[Token(Token = "0x200049C")]
	public enum RawButton
	{
		[Token(Token = "0x400219A")]
		None,
		[Token(Token = "0x400219B")]
		A,
		[Token(Token = "0x400219C")]
		B,
		[Token(Token = "0x400219D")]
		X,
		[Token(Token = "0x400219E")]
		Y,
		[Token(Token = "0x400219F")]
		Start,
		[Token(Token = "0x40021A0")]
		Menu,
		[Token(Token = "0x40021A1")]
		LGrip,
		[Token(Token = "0x40021A2")]
		LTrigger,
		[Token(Token = "0x40021A3")]
		LThumbstick,
		[Token(Token = "0x40021A4")]
		RGrip,
		[Token(Token = "0x40021A5")]
		RTrigger,
		[Token(Token = "0x40021A6")]
		RThumbstick
	}

	[Token(Token = "0x200049D")]
	public enum Button
	{
		[Token(Token = "0x40021A8")]
		None,
		[Token(Token = "0x40021A9")]
		A,
		[Token(Token = "0x40021AA")]
		B,
		[Token(Token = "0x40021AB")]
		X,
		[Token(Token = "0x40021AC")]
		Y,
		[Token(Token = "0x40021AD")]
		Start,
		[Token(Token = "0x40021AE")]
		Menu,
		[Token(Token = "0x40021AF")]
		Grip,
		[Token(Token = "0x40021B0")]
		Trigger,
		[Token(Token = "0x40021B1")]
		Thumbstick
	}

	[Token(Token = "0x200049E")]
	public enum Axis2D
	{
		[Token(Token = "0x40021B3")]
		None,
		[Token(Token = "0x40021B4")]
		Joystick,
		[Token(Token = "0x40021B5")]
		Touchpad,
		[Token(Token = "0x40021B6")]
		JoystickUI
	}

	[Token(Token = "0x200049F")]
	public enum Axis1D
	{
		[Token(Token = "0x40021B8")]
		None,
		[Token(Token = "0x40021B9")]
		Grip,
		[Token(Token = "0x40021BA")]
		Trigger
	}

	[Token(Token = "0x400218E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Button[] RawToButton;

	[Token(Token = "0x400218F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Button[] Axis1DToButton;

	[Token(Token = "0x4002190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool shouldOpenMenu;

	[Token(Token = "0x4002191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private static bool shouldRecenter;

	[Token(Token = "0x4002192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static OVRInput.RawButton[] OVRButtonRawMap;

	[Token(Token = "0x4002193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static OVRInput.RawButton[] OVRButtonLeftMap;

	[Token(Token = "0x4002194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static OVRInput.RawButton[] OVRButtonRightMap;

	[Token(Token = "0x4002195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static OVRInput.RawAxis2D[] OVRAxis2DLeftMap;

	[Token(Token = "0x4002196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static OVRInput.RawAxis2D[] OVRAxis2DRightMap;

	[Token(Token = "0x4002197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static OVRInput.RawAxis1D[] OVRAxis1DLeftMap;

	[Token(Token = "0x4002198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static OVRInput.RawAxis1D[] OVRAxis1DRightMap;

	[Token(Token = "0x170001B4")]
	public static bool ShouldOpenMenu
	{
		[Token(Token = "0x6001F2F")]
		[Address(RVA = "0x1262C74", Offset = "0x1262C74", VA = "0x1262C74")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001B5")]
	public static bool ShouldRecenter
	{
		[Token(Token = "0x6001F31")]
		[Address(RVA = "0x1262D7C", Offset = "0x1262D7C", VA = "0x1262D7C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001F1D")]
	[Address(RVA = "0x1261BBC", Offset = "0x1261BBC", VA = "0x1261BBC")]
	public static float GetGrabValue(Grabber grabber)
	{
		return default(float);
	}

	[Token(Token = "0x6001F1E")]
	[Address(RVA = "0x1262034", Offset = "0x1262034", VA = "0x1262034")]
	public static float GetPointValue(Grabber grabber)
	{
		return default(float);
	}

	[Token(Token = "0x6001F1F")]
	[Address(RVA = "0x12620A4", Offset = "0x12620A4", VA = "0x12620A4")]
	public static bool IsPointing(Grabber grabber)
	{
		return default(bool);
	}

	[Token(Token = "0x6001F20")]
	[Address(RVA = "0x1262170", Offset = "0x1262170", VA = "0x1262170")]
	public static bool IsThumbUp(Grabber grabber)
	{
		return default(bool);
	}

	[Token(Token = "0x6001F21")]
	[Address(RVA = "0x126223C", Offset = "0x126223C", VA = "0x126223C")]
	private static bool GetTouchState(Grabber grabber, Button button)
	{
		return default(bool);
	}

	[Token(Token = "0x6001F22")]
	[Address(RVA = "0x1262244", Offset = "0x1262244", VA = "0x1262244")]
	public static bool GetDown(Button button, HandType hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6001F23")]
	[Address(RVA = "0x1261CB0", Offset = "0x1261CB0", VA = "0x1261CB0")]
	public static bool Get(Button button, HandType hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6001F24")]
	[Address(RVA = "0x1262438", Offset = "0x1262438", VA = "0x1262438")]
	public static bool GetUp(Button button, HandType hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6001F25")]
	[Address(RVA = "0x126262C", Offset = "0x126262C", VA = "0x126262C")]
	public static bool GetDown(RawButton button)
	{
		return default(bool);
	}

	[Token(Token = "0x6001F26")]
	[Address(RVA = "0x126273C", Offset = "0x126273C", VA = "0x126273C")]
	public static bool Get(RawButton button)
	{
		return default(bool);
	}

	[Token(Token = "0x6001F27")]
	[Address(RVA = "0x126284C", Offset = "0x126284C", VA = "0x126284C")]
	public static bool GetUp(RawButton button)
	{
		return default(bool);
	}

	[Token(Token = "0x6001F28")]
	[Address(RVA = "0x126295C", Offset = "0x126295C", VA = "0x126295C")]
	public static Vector2 Get(Axis2D axis, HandType hand)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6001F29")]
	[Address(RVA = "0x1261EA4", Offset = "0x1261EA4", VA = "0x1261EA4")]
	public static float Get(Axis1D axis, HandType hand)
	{
		return default(float);
	}

	[Token(Token = "0x6001F2A")]
	[Address(RVA = "0x1262AEC", Offset = "0x1262AEC", VA = "0x1262AEC")]
	public static void Initialize()
	{
	}

	[Token(Token = "0x6001F2B")]
	[Address(RVA = "0x1262B48", Offset = "0x1262B48", VA = "0x1262B48")]
	public static void Update()
	{
	}

	[Token(Token = "0x6001F2C")]
	[Address(RVA = "0x1262B4C", Offset = "0x1262B4C", VA = "0x1262B4C")]
	public static bool IsConnected(Grabber grabber)
	{
		return default(bool);
	}

	[Token(Token = "0x6001F2D")]
	[Address(RVA = "0x1262BB8", Offset = "0x1262BB8", VA = "0x1262BB8")]
	public static bool IsConnected(HandType hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6001F2E")]
	[Address(RVA = "0x1262C70", Offset = "0x1262C70", VA = "0x1262C70")]
	private static void SteamVRDeviceConnected(int index, bool connected)
	{
	}

	[Token(Token = "0x6001F30")]
	[Address(RVA = "0x1262CD8", Offset = "0x1262CD8", VA = "0x1262CD8")]
	public static bool UseOpenMenuEvent()
	{
		return default(bool);
	}

	[Token(Token = "0x6001F32")]
	[Address(RVA = "0x1262DE0", Offset = "0x1262DE0", VA = "0x1262DE0")]
	public static bool UseRecenterEvent()
	{
		return default(bool);
	}
}
[Token(Token = "0x20004A0")]
public static class XRSystem
{
	[Token(Token = "0x40021BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static XRLoader loader;

	[Token(Token = "0x6001F34")]
	[Address(RVA = "0x1263380", Offset = "0x1263380", VA = "0x1263380")]
	public static void Initialize()
	{
	}

	[Token(Token = "0x6001F35")]
	[Address(RVA = "0x12639E4", Offset = "0x12639E4", VA = "0x12639E4")]
	public static void Release()
	{
	}
}
[Token(Token = "0x20004A1")]
public class Yoke : SteeringGrabbable, IVRCannonController, IGrabbable
{
	[Serializable]
	[Token(Token = "0x20004A2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x918900", Offset = "0x918900")]
	private sealed class <>c
	{
		[Token(Token = "0x40021D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40021D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static VibrationClip.DataProduce <>9__29_0;

		[Token(Token = "0x6001F51")]
		[Address(RVA = "0x11B98C8", Offset = "0x11B98C8", VA = "0x11B98C8")]
		public <>c()
		{
		}

		[Token(Token = "0x6001F52")]
		[Address(RVA = "0x11B98D0", Offset = "0x11B98D0", VA = "0x11B98D0")]
		internal byte <Awake>b__29_0(float p)
		{
			return default(byte);
		}
	}

	[Token(Token = "0x40021BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Transform dirParent;

	[Token(Token = "0x40021BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform joint;

	[Token(Token = "0x40021BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Transform centerPivot;

	[Token(Token = "0x40021BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Transform adjustableRod;

	[Token(Token = "0x40021C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Vector2 angles;

	[Token(Token = "0x40021C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Transform trigger;

	[Token(Token = "0x40021C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Vector2 triggerAngles;

	[Token(Token = "0x40021C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public MeshRenderer rendIconA;

	[Token(Token = "0x40021C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public MeshRenderer rendIconB;

	[Token(Token = "0x40021C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Material iconBomb;

	[Token(Token = "0x40021C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Material iconRocket;

	[Token(Token = "0x40021C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Material iconTorpedo;

	[Token(Token = "0x40021C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private float maxAngleX;

	[Token(Token = "0x40021C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private float maxAngleZ;

	[Token(Token = "0x40021CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private float maxAngleXInv;

	[Token(Token = "0x40021CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private float maxAngleZInv;

	[Token(Token = "0x40021CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Vector2 remoteTargetValue;

	[Token(Token = "0x40021CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Vector2 currentValue;

	[Token(Token = "0x40021CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private Vector2 springBackVelocity;

	[Token(Token = "0x40021CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Yoke current;

	[Token(Token = "0x40021D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static VibrationClip shotClip;

	[Token(Token = "0x40021D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool isSetup;

	[Token(Token = "0x40021D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static int skipInputFrame;

	[Token(Token = "0x40021D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Vector2 defaultPosition;

	[Token(Token = "0x40021D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private Vector2 lastOffset;

	[Token(Token = "0x40021D5")]
	private const float YOffset = 0.025f;

	[Token(Token = "0x170001B6")]
	public override AllowSticky AllowStickyGrip
	{
		[Token(Token = "0x6001F37")]
		[Address(RVA = "0x1263BD0", Offset = "0x1263BD0", VA = "0x1263BD0", Slot = "4")]
		get
		{
			return default(AllowSticky);
		}
	}

	[Token(Token = "0x6001F38")]
	[Address(RVA = "0x1263BD8", Offset = "0x1263BD8", VA = "0x1263BD8")]
	public static void ShootHaptics()
	{
	}

	[Token(Token = "0x6001F39")]
	[Address(RVA = "0x1263D3C", Offset = "0x1263D3C", VA = "0x1263D3C", Slot = "7")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6001F3A")]
	[Address(RVA = "0x1263FE8", Offset = "0x1263FE8", VA = "0x1263FE8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001F3B")]
	[Address(RVA = "0x1264084", Offset = "0x1264084", VA = "0x1264084")]
	private void Start()
	{
	}

	[Token(Token = "0x6001F3C")]
	[Address(RVA = "0x1264408", Offset = "0x1264408", VA = "0x1264408", Slot = "6")]
	public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
	{
	}

	[Token(Token = "0x6001F3D")]
	[Address(RVA = "0x126443C", Offset = "0x126443C", VA = "0x126443C")]
	public void SetCurrent()
	{
	}

	[Token(Token = "0x6001F3E")]
	[Address(RVA = "0x12644A4", Offset = "0x12644A4", VA = "0x12644A4", Slot = "13")]
	public override void OnMove(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x6001F3F")]
	[Address(RVA = "0x126469C", Offset = "0x126469C", VA = "0x126469C")]
	private void SetValue(Vector2 val)
	{
	}

	[Token(Token = "0x6001F40")]
	[Address(RVA = "0x1264630", Offset = "0x1264630", VA = "0x1264630")]
	private void SetValue(float x, float y)
	{
	}

	[Token(Token = "0x6001F41")]
	[Address(RVA = "0x12646A0", Offset = "0x12646A0", VA = "0x12646A0")]
	public void GetValue(out float x, out float y)
	{
	}

	[Token(Token = "0x6001F42")]
	[Address(RVA = "0x1264708", Offset = "0x1264708", VA = "0x1264708", Slot = "12")]
	public override Vector2 GetSteering()
	{
		return default(Vector2);
	}

	[Token(Token = "0x6001F43")]
	[Address(RVA = "0x1264764", Offset = "0x1264764", VA = "0x1264764")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001F44")]
	[Address(RVA = "0x1264BB8", Offset = "0x1264BB8", VA = "0x1264BB8")]
	private void SavePreferedOffset()
	{
	}

	[Token(Token = "0x6001F45")]
	[Address(RVA = "0x12642BC", Offset = "0x12642BC", VA = "0x12642BC")]
	private void LoadPreferedOffset()
	{
	}

	[Token(Token = "0x6001F46")]
	[Address(RVA = "0x1264E20", Offset = "0x1264E20", VA = "0x1264E20")]
	private void UpdateSelf()
	{
	}

	[Token(Token = "0x6001F47")]
	[Address(RVA = "0x1264C94", Offset = "0x1264C94", VA = "0x1264C94")]
	private void UpdateOtherSources()
	{
	}

	[Token(Token = "0x6001F48")]
	[Address(RVA = "0x12653D0", Offset = "0x12653D0", VA = "0x12653D0")]
	private void UpdateFromPilot()
	{
	}

	[Token(Token = "0x6001F49")]
	[Address(RVA = "0x12651BC", Offset = "0x12651BC", VA = "0x12651BC")]
	private void UpdateFromJoystick()
	{
	}

	[Token(Token = "0x6001F4A")]
	[Address(RVA = "0x126503C", Offset = "0x126503C", VA = "0x126503C")]
	private void UpdateFromNet()
	{
	}

	[Token(Token = "0x6001F4B")]
	[Address(RVA = "0x1265568", Offset = "0x1265568", VA = "0x1265568")]
	public static void EnableSetup()
	{
	}

	[Token(Token = "0x6001F4C")]
	[Address(RVA = "0x1264EEC", Offset = "0x1264EEC", VA = "0x1264EEC")]
	public static void DisableSetup()
	{
	}

	[Token(Token = "0x6001F4D")]
	[Address(RVA = "0x1265650", Offset = "0x1265650", VA = "0x1265650")]
	public static bool HasActiveSetup()
	{
		return default(bool);
	}

	[Token(Token = "0x6001F4E")]
	[Address(RVA = "0x12656B4", Offset = "0x12656B4", VA = "0x12656B4")]
	public Yoke()
	{
	}
}
[Token(Token = "0x20004A3")]
public class SuperBasicController : GenericNetworkBehaviour
{
	[Token(Token = "0x40021D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x91D0BC", Offset = "0x91D0BC")]
	public float turnSpeed;

	[Token(Token = "0x40021D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x91D0D8", Offset = "0x91D0D8")]
	public float moveSpeed;

	[Token(Token = "0x40021DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 targRotDelta;

	[Token(Token = "0x40021DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 targPosDelta;

	[Token(Token = "0x40021DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Animator animator;

	[Token(Token = "0x40021DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SimpleSyncAnimator syncAnimator;

	[Token(Token = "0x40021DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private SimpleSyncTransform syncTransform;

	[Token(Token = "0x40021DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Rigidbody rb;

	[Token(Token = "0x40021E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Rigidbody2D rb2d;

	[Token(Token = "0x40021E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool triggerJump;

	[Token(Token = "0x40021E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	private bool triggerFade;

	[Token(Token = "0x40021E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
	private bool triggerTurnLeft;

	[Token(Token = "0x40021E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x73")]
	private bool triggerUpperBodyRun;

	[Token(Token = "0x40021E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private bool triggerUpperBodyIdle;

	[Token(Token = "0x40021E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
	private bool triggerTeleport;

	[Token(Token = "0x40021E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x76")]
	private bool freakingOut;

	[Token(Token = "0x40021E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float appliedDeltaT;

	[Token(Token = "0x6001F53")]
	[Address(RVA = "0x10EC1AC", Offset = "0x10EC1AC", VA = "0x10EC1AC", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6001F54")]
	[Address(RVA = "0x10EC29C", Offset = "0x10EC29C", VA = "0x10EC29C")]
	public void TransferOwner()
	{
	}

	[Token(Token = "0x6001F55")]
	[Address(RVA = "0x10EC33C", Offset = "0x10EC33C", VA = "0x10EC33C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001F56")]
	[Address(RVA = "0x10EC590", Offset = "0x10EC590", VA = "0x10EC590")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6001F57")]
	[Address(RVA = "0x10ECE14", Offset = "0x10ECE14", VA = "0x10ECE14")]
	private void OnAnimatorMove()
	{
	}

	[Token(Token = "0x6001F58")]
	[Address(RVA = "0x10ECD7C", Offset = "0x10ECD7C", VA = "0x10ECD7C")]
	private void Move(Vector3 move, Vector3 turn)
	{
	}

	[Token(Token = "0x6001F59")]
	[Address(RVA = "0x10EC450", Offset = "0x10EC450", VA = "0x10EC450")]
	private void Interpolate(float t)
	{
	}

	[Token(Token = "0x6001F5A")]
	[Address(RVA = "0x10ECF7C", Offset = "0x10ECF7C", VA = "0x10ECF7C")]
	public SuperBasicController()
	{
	}
}
[Token(Token = "0x20004A4")]
public class JoinLeave : MonoBehaviour
{
	[Token(Token = "0x40021E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public KeyCode join;

	[Token(Token = "0x40021EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public KeyCode leave;

	[Token(Token = "0x6001F5B")]
	[Address(RVA = "0x17DD03C", Offset = "0x17DD03C", VA = "0x17DD03C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001F5C")]
	[Address(RVA = "0x17DD040", Offset = "0x17DD040", VA = "0x17DD040")]
	public JoinLeave()
	{
	}
}
[Token(Token = "0x20004A5")]
public class MLAPISampleLauncher : MonoBehaviour
{
	[Token(Token = "0x40021EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public KeyCode startHost;

	[Token(Token = "0x40021EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public KeyCode startServer;

	[Token(Token = "0x40021ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public KeyCode startClient;

	[Token(Token = "0x40021EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public KeyCode shiftStop;

	[Token(Token = "0x6001F5D")]
	[Address(RVA = "0x1140754", Offset = "0x1140754", VA = "0x1140754")]
	public MLAPISampleLauncher()
	{
	}
}
namespace emotitron
{
	[Serializable]
	[Token(Token = "0x20004A6")]
	public class TransitionInfo
	{
		[Token(Token = "0x40021EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int index;

		[Token(Token = "0x40021F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int hash;

		[Token(Token = "0x40021F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int state;

		[Token(Token = "0x40021F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int destination;

		[Token(Token = "0x40021F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float duration;

		[Token(Token = "0x40021F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float offset;

		[Token(Token = "0x40021F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool durationIsFixed;

		[Token(Token = "0x6001F5E")]
		[Address(RVA = "0xEC2F3C", Offset = "0xEC2F3C", VA = "0xEC2F3C")]
		public TransitionInfo(int index, int hash, int state, int destination, float duration, float offset, bool durationIsFixed)
		{
		}
	}
}
namespace emotitron.Debugging
{
	[Token(Token = "0x20004A7")]
	public class UIConsole : MonoBehaviour
	{
		[Token(Token = "0x40021F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int maxSize;

		[Token(Token = "0x40021F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool logToDebug;

		[Token(Token = "0x40021F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly StringBuilder strb;

		[Token(Token = "0x40021F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static UIConsole single;

		[Token(Token = "0x40021FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Text uitext;

		[Token(Token = "0x6001F5F")]
		[Address(RVA = "0xECFC38", Offset = "0xECFC38", VA = "0xECFC38")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001F60")]
		[Address(RVA = "0xECFD04", Offset = "0xECFD04", VA = "0xECFD04")]
		public static void Log(string str)
		{
		}

		[Token(Token = "0x6001F61")]
		[Address(RVA = "0xECFF94", Offset = "0xECFF94", VA = "0xECFF94")]
		public static void Refresh()
		{
		}

		[Token(Token = "0x6001F62")]
		[Address(RVA = "0xED0178", Offset = "0xED0178", VA = "0xED0178")]
		public static void Clear()
		{
		}

		[Token(Token = "0x6001F63")]
		[Address(RVA = "0xED0294", Offset = "0xED0294", VA = "0xED0294")]
		public UIConsole()
		{
		}
	}
}
namespace emotitron.Utilities
{
	[Token(Token = "0x20004A8")]
	public static class BitArrayExt
	{
		[Token(Token = "0x6001F65")]
		[Address(RVA = "0xC22314", Offset = "0xC22314", VA = "0xC22314")]
		public static StringBuilder PrintMask(this BitArray ba, int hiliteBit = -1)
		{
			return null;
		}

		[Token(Token = "0x6001F66")]
		[Address(RVA = "0xC2231C", Offset = "0xC2231C", VA = "0xC2231C")]
		public static int CountTrue(this BitArray ba)
		{
			return default(int);
		}

		[Token(Token = "0x6001F67")]
		[Address(RVA = "0xC2238C", Offset = "0xC2238C", VA = "0xC2238C")]
		public static int CountFalse(this BitArray ba)
		{
			return default(int);
		}

		[Token(Token = "0x6001F68")]
		[Address(RVA = "0xC22400", Offset = "0xC22400", VA = "0xC22400")]
		public static int CountValidRange(this BitArray ba, int start, int lookahead)
		{
			return default(int);
		}

		[Token(Token = "0x6001F69")]
		[Address(RVA = "0xC22474", Offset = "0xC22474", VA = "0xC22474")]
		public static void ClearBitsBefore(this BitArray ba, int start, int count)
		{
		}
	}
	[Token(Token = "0x20004A9")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x918920", Offset = "0x918920")]
	public class FastBitMask128
	{
		[Token(Token = "0x40021FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ulong seg1;

		[Token(Token = "0x40021FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ulong seg2;

		[Token(Token = "0x40021FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int bitcount;

		[Token(Token = "0x40021FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int seg1bitcount;

		[Token(Token = "0x40021FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int seg2bitcount;

		[Token(Token = "0x4002200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ulong alltrue1;

		[Token(Token = "0x4002201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ulong alltrue2;

		[Token(Token = "0x170001B7")]
		public bool Item
		{
			[Token(Token = "0x6001F6C")]
			[Address(RVA = "0x1307364", Offset = "0x1307364", VA = "0x1307364")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F6D")]
			[Address(RVA = "0x130738C", Offset = "0x130738C", VA = "0x130738C")]
			set
			{
			}
		}

		[Token(Token = "0x170001B8")]
		public bool AllAreFalse
		{
			[Token(Token = "0x6001F74")]
			[Address(RVA = "0x13074F0", Offset = "0x13074F0", VA = "0x13074F0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001B9")]
		public bool AllAreTrue
		{
			[Token(Token = "0x6001F75")]
			[Address(RVA = "0x1307510", Offset = "0x1307510", VA = "0x1307510")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001F6A")]
		[Address(RVA = "0x13072A8", Offset = "0x13072A8", VA = "0x13072A8")]
		public FastBitMask128(int bitcount)
		{
		}

		[Token(Token = "0x6001F6B")]
		[Address(RVA = "0x130732C", Offset = "0x130732C", VA = "0x130732C")]
		private FastBitMask128(ulong seg1, ulong seg2)
		{
		}

		[Token(Token = "0x6001F6E")]
		[Address(RVA = "0x13073F8", Offset = "0x13073F8", VA = "0x13073F8")]
		public bool Get(int bit)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F6F")]
		[Address(RVA = "0x1307420", Offset = "0x1307420", VA = "0x1307420")]
		public void Set(int bit, bool value)
		{
		}

		[Token(Token = "0x6001F70")]
		[Address(RVA = "0x130748C", Offset = "0x130748C", VA = "0x130748C")]
		public void SetTrue(int bit)
		{
		}

		[Token(Token = "0x6001F71")]
		[Address(RVA = "0x13074B4", Offset = "0x13074B4", VA = "0x13074B4")]
		public void SetFalse(int bit)
		{
		}

		[Token(Token = "0x6001F72")]
		[Address(RVA = "0x13074DC", Offset = "0x13074DC", VA = "0x13074DC")]
		public void SetAllTrue()
		{
		}

		[Token(Token = "0x6001F73")]
		[Address(RVA = "0x13074E8", Offset = "0x13074E8", VA = "0x13074E8")]
		public void SetAllFalse()
		{
		}

		[Token(Token = "0x6001F76")]
		[Address(RVA = "0x130753C", Offset = "0x130753C", VA = "0x130753C")]
		public int CountTrue()
		{
			return default(int);
		}

		[Token(Token = "0x6001F77")]
		[Address(RVA = "0x13075BC", Offset = "0x13075BC", VA = "0x13075BC")]
		public int CountFalse()
		{
			return default(int);
		}

		[Token(Token = "0x6001F78")]
		[Address(RVA = "0x1307644", Offset = "0x1307644", VA = "0x1307644")]
		public void ClearBitsBefore(int start, int count)
		{
		}

		[Token(Token = "0x6001F79")]
		[Address(RVA = "0x1307708", Offset = "0x1307708", VA = "0x1307708")]
		public int CountValidRange(int start, int lookahead)
		{
			return default(int);
		}
	}
	[Token(Token = "0x20004AA")]
	public static class FastBitMaskExt
	{
		[Token(Token = "0x6001F7A")]
		[Address(RVA = "0x1307760", Offset = "0x1307760", VA = "0x1307760")]
		public static StringBuilder PrintMask(this BitArray ba, int hiliteBit = -1)
		{
			return null;
		}
	}
	[Token(Token = "0x20004AB")]
	public static class BoundsTools
	{
		[Token(Token = "0x20004AC")]
		public enum BoundsType
		{
			[Token(Token = "0x400220A")]
			Both,
			[Token(Token = "0x400220B")]
			MeshRenderer,
			[Token(Token = "0x400220C")]
			Collider,
			[Token(Token = "0x400220D")]
			Manual
		}

		[Token(Token = "0x4002202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly List<MeshFilter> meshFilters;

		[Token(Token = "0x4002203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly List<MeshRenderer> meshRenderers;

		[Token(Token = "0x4002204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly List<Collider> colliders;

		[Token(Token = "0x4002205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly List<Collider> validColliders;

		[Token(Token = "0x4002206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static readonly List<SpriteRenderer> spriteRenderers;

		[Token(Token = "0x4002207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static readonly List<Collider2D> colliders2D;

		[Token(Token = "0x4002208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static readonly List<Collider2D> validColliders2D;

		[Token(Token = "0x6001F7B")]
		[Address(RVA = "0xC23D30", Offset = "0xC23D30", VA = "0xC23D30")]
		public static Bounds CollectMyBounds(GameObject go, BoundsType factorIn, out int numOfBoundsFound, bool includeChildren = true, bool includeInactive = false)
		{
			return default(Bounds);
		}

		[Token(Token = "0x6001F7C")]
		[Address(RVA = "0xC24C3C", Offset = "0xC24C3C", VA = "0xC24C3C")]
		public static Bounds CollectMyBounds(GameObject go, BoundsType factorIn, bool includeChildren = true)
		{
			return default(Bounds);
		}
	}
	[Token(Token = "0x20004AD")]
	[ExecuteInEditMode]
	public class TogglePhysics2dDefine : MonoBehaviour
	{
		[Token(Token = "0x400220E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool disablePhysics2D;

		[Token(Token = "0x400220F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool setOnAwake;

		[Token(Token = "0x6001F7E")]
		[Address(RVA = "0xF10894", Offset = "0xF10894", VA = "0xF10894")]
		public TogglePhysics2dDefine()
		{
		}
	}
	[Token(Token = "0x20004AE")]
	public class CatmulRom
	{
		[Token(Token = "0x6001F7F")]
		[Address(RVA = "0x103BAA4", Offset = "0x103BAA4", VA = "0x103BAA4")]
		public static float CatmullRomLerp(float pre, float start, float end, float post, float t)
		{
			return default(float);
		}

		[Token(Token = "0x6001F80")]
		[Address(RVA = "0x103BB50", Offset = "0x103BB50", VA = "0x103BB50")]
		public static float CatmullRomLerp(float pre, float start, float end, float t)
		{
			return default(float);
		}

		[Token(Token = "0x6001F81")]
		[Address(RVA = "0x103BC04", Offset = "0x103BC04", VA = "0x103BC04")]
		public static Vector3 CatmullRomLerp(Vector2 pre, Vector2 start, Vector2 end, Vector2 post, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001F82")]
		[Address(RVA = "0x103BCBC", Offset = "0x103BCBC", VA = "0x103BCBC")]
		public static Vector3 CatmullRomLerp(Vector2 pre, Vector2 start, Vector2 end, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001F83")]
		[Address(RVA = "0x103BD74", Offset = "0x103BD74", VA = "0x103BD74")]
		public static Vector3 CatmullRomLerp(Vector3 pre, Vector3 start, Vector3 end, Vector3 post, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001F84")]
		[Address(RVA = "0x103BEC4", Offset = "0x103BEC4", VA = "0x103BEC4")]
		public static Vector3 CatmullRomLerp(Vector3 pre, Vector3 start, Vector3 end, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001F85")]
		[Address(RVA = "0x103C014", Offset = "0x103C014", VA = "0x103C014")]
		public CatmulRom()
		{
		}
	}
	[Token(Token = "0x20004AF")]
	public static class PrefabUtils
	{
		[Token(Token = "0x6001F86")]
		public static T AddComponentToPrefab<T>(this GameObject prefab) where T : Component
		{
			return null;
		}
	}
}
namespace emotitron.Utilities.SmartVars
{
	[Token(Token = "0x20004B0")]
	public enum SmartVarTypeCode
	{
		[Token(Token = "0x4002211")]
		None,
		[Token(Token = "0x4002212")]
		Int,
		[Token(Token = "0x4002213")]
		Uint,
		[Token(Token = "0x4002214")]
		Bool,
		[Token(Token = "0x4002215")]
		Float,
		[Token(Token = "0x4002216")]
		Byte,
		[Token(Token = "0x4002217")]
		Short,
		[Token(Token = "0x4002218")]
		UShort,
		[Token(Token = "0x4002219")]
		Char
	}
	[Serializable]
	[StructLayout(2)]
	[Token(Token = "0x20004B1")]
	public struct SmartVar
	{
		[Token(Token = "0x400221A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SmartVarTypeCode TypeCode;

		[Token(Token = "0x400221B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int Int;

		[Token(Token = "0x400221C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint UInt;

		[Token(Token = "0x400221D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public bool Bool;

		[Token(Token = "0x400221E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float Float;

		[Token(Token = "0x400221F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public byte Byte8;

		[Token(Token = "0x4002220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public short Short;

		[Token(Token = "0x4002221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ushort UShort;

		[Token(Token = "0x4002222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public char Char;

		[Token(Token = "0x4002223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly SmartVar None;

		[Token(Token = "0x6001F87")]
		[Address(RVA = "0x10B2528", Offset = "0x10B2528", VA = "0x10B2528")]
		public static implicit operator SmartVar(int v)
		{
			return default(SmartVar);
		}

		[Token(Token = "0x6001F88")]
		[Address(RVA = "0x10B2658", Offset = "0x10B2658", VA = "0x10B2658")]
		public static implicit operator SmartVar(uint v)
		{
			return default(SmartVar);
		}

		[Token(Token = "0x6001F89")]
		[Address(RVA = "0x10B26BC", Offset = "0x10B26BC", VA = "0x10B26BC")]
		public static implicit operator SmartVar(float v)
		{
			return default(SmartVar);
		}

		[Token(Token = "0x6001F8A")]
		[Address(RVA = "0x10B26CC", Offset = "0x10B26CC", VA = "0x10B26CC")]
		public static implicit operator SmartVar(bool v)
		{
			return default(SmartVar);
		}

		[Token(Token = "0x6001F8B")]
		[Address(RVA = "0x10B9994", Offset = "0x10B9994", VA = "0x10B9994")]
		public static implicit operator SmartVar(byte v)
		{
			return default(SmartVar);
		}

		[Token(Token = "0x6001F8C")]
		[Address(RVA = "0x10B99A4", Offset = "0x10B99A4", VA = "0x10B99A4")]
		public static implicit operator SmartVar(short v)
		{
			return default(SmartVar);
		}

		[Token(Token = "0x6001F8D")]
		[Address(RVA = "0x10B99B4", Offset = "0x10B99B4", VA = "0x10B99B4")]
		public static implicit operator SmartVar(ushort v)
		{
			return default(SmartVar);
		}

		[Token(Token = "0x6001F8E")]
		[Address(RVA = "0x10B99C4", Offset = "0x10B99C4", VA = "0x10B99C4")]
		public static implicit operator SmartVar(char v)
		{
			return default(SmartVar);
		}

		[Token(Token = "0x6001F8F")]
		[Address(RVA = "0x10B2478", Offset = "0x10B2478", VA = "0x10B2478")]
		public static implicit operator int(SmartVar v)
		{
			return default(int);
		}

		[Token(Token = "0x6001F90")]
		[Address(RVA = "0x10B99D4", Offset = "0x10B99D4", VA = "0x10B99D4")]
		public static implicit operator uint(SmartVar v)
		{
			return default(uint);
		}

		[Token(Token = "0x6001F91")]
		[Address(RVA = "0x10B2538", Offset = "0x10B2538", VA = "0x10B2538")]
		public static implicit operator float(SmartVar v)
		{
			return default(float);
		}

		[Token(Token = "0x6001F92")]
		[Address(RVA = "0x10B2668", Offset = "0x10B2668", VA = "0x10B2668")]
		public static implicit operator bool(SmartVar v)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F93")]
		[Address(RVA = "0x10B9A24", Offset = "0x10B9A24", VA = "0x10B9A24")]
		public static implicit operator byte(SmartVar v)
		{
			return default(byte);
		}

		[Token(Token = "0x6001F94")]
		[Address(RVA = "0x10B9A74", Offset = "0x10B9A74", VA = "0x10B9A74")]
		public static implicit operator short(SmartVar v)
		{
			return default(short);
		}

		[Token(Token = "0x6001F95")]
		[Address(RVA = "0x10B9AC4", Offset = "0x10B9AC4", VA = "0x10B9AC4")]
		public static implicit operator ushort(SmartVar v)
		{
			return default(ushort);
		}

		[Token(Token = "0x6001F96")]
		[Address(RVA = "0x10B9B14", Offset = "0x10B9B14", VA = "0x10B9B14")]
		public static implicit operator char(SmartVar v)
		{
			return default(char);
		}

		[Token(Token = "0x6001F97")]
		[Address(RVA = "0x10B9B64", Offset = "0x10B9B64", VA = "0x10B9B64")]
		public SmartVar Copy()
		{
			return default(SmartVar);
		}

		[Token(Token = "0x6001F98")]
		[Address(RVA = "0x10B9B6C", Offset = "0x10B9B6C", VA = "0x10B9B6C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
}
namespace emotitron.Utilities.Networking
{
	[Token(Token = "0x20004B2")]
	public class AutoDestroyUnspawned : MonoBehaviour
	{
		[Token(Token = "0x6001F9A")]
		[Address(RVA = "0xC19D70", Offset = "0xC19D70", VA = "0xC19D70")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x92C064", Offset = "0x92C064")]
		public static void DestroyUnspawned()
		{
		}

		[Token(Token = "0x6001F9B")]
		[Address(RVA = "0xC19ECC", Offset = "0xC19ECC", VA = "0xC19ECC")]
		public AutoDestroyUnspawned()
		{
		}
	}
	[Token(Token = "0x20004B3")]
	public class AutoDestroyWrongNetLib : MonoBehaviour
	{
		[Token(Token = "0x20004B4")]
		public enum NetLib
		{
			[Token(Token = "0x4002226")]
			UNET,
			[Token(Token = "0x4002227")]
			PUN,
			[Token(Token = "0x4002228")]
			PUN2,
			[Token(Token = "0x4002229")]
			PUNAndPUN2
		}

		[Token(Token = "0x4002224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public NetLib netLib;

		[Token(Token = "0x6001F9C")]
		[Address(RVA = "0xC19ED4", Offset = "0xC19ED4", VA = "0xC19ED4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001F9D")]
		[Address(RVA = "0xC19F60", Offset = "0xC19F60", VA = "0xC19F60")]
		public AutoDestroyWrongNetLib()
		{
		}
	}
	[Token(Token = "0x20004B5")]
	public enum Authority
	{
		[Token(Token = "0x400222B")]
		Auto,
		[Token(Token = "0x400222C")]
		Master,
		[Token(Token = "0x400222D")]
		Owner
	}
	[Token(Token = "0x20004B6")]
	public enum Architecture
	{
		[Token(Token = "0x400222F")]
		ServerClient,
		[Token(Token = "0x4002230")]
		MasterRelay,
		[Token(Token = "0x4002231")]
		P2P
	}
	[Token(Token = "0x20004B7")]
	public class GenericSpawnPoint : MonoBehaviour
	{
		[Token(Token = "0x4002232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x91D100", Offset = "0x91D100")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91D100", Offset = "0x91D100")]
		public LayerMask layerMask;

		[Token(Token = "0x4002233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float blockedCheckRadius;

		[Token(Token = "0x4002234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly List<GenericSpawnPoint> spawns;

		[Token(Token = "0x4002235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int lastPicked;

		[Token(Token = "0x4002236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly Collider[] reusable;

		[Token(Token = "0x170001BA")]
		public bool IsBlocked
		{
			[Token(Token = "0x6001FA0")]
			[Address(RVA = "0x147676C", Offset = "0x147676C", VA = "0x147676C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001F9E")]
		[Address(RVA = "0x1476654", Offset = "0x1476654", VA = "0x1476654")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001F9F")]
		[Address(RVA = "0x14766E0", Offset = "0x14766E0", VA = "0x14766E0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001FA1")]
		[Address(RVA = "0x1476844", Offset = "0x1476844", VA = "0x1476844")]
		public static Transform GetRandomSpawnPoint(bool avoidCollision = true)
		{
			return null;
		}

		[Token(Token = "0x6001FA2")]
		[Address(RVA = "0x1476A7C", Offset = "0x1476A7C", VA = "0x1476A7C")]
		public static Transform GetNextSpawnPoint(bool avoidCollision = true)
		{
			return null;
		}

		[Token(Token = "0x6001FA3")]
		[Address(RVA = "0x1476C80", Offset = "0x1476C80", VA = "0x1476C80")]
		public static Transform GetSpawnPointFromValue(int value)
		{
			return null;
		}

		[Token(Token = "0x6001FA4")]
		[Address(RVA = "0x1476D84", Offset = "0x1476D84", VA = "0x1476D84")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001FA5")]
		[Address(RVA = "0x1476DD4", Offset = "0x1476DD4", VA = "0x1476DD4")]
		public GenericSpawnPoint()
		{
		}
	}
	[Token(Token = "0x20004B8")]
	public enum NetworkLibrary
	{
		[Token(Token = "0x4002238")]
		UNET,
		[Token(Token = "0x4002239")]
		PUN,
		[Token(Token = "0x400223A")]
		PUN2,
		[Token(Token = "0x400223B")]
		MLAPI,
		[Token(Token = "0x400223C")]
		MIRROR
	}
	[Token(Token = "0x20004B9")]
	public class MasterNetAdapter : IConnectionCallbacks, IInRoomCallbacks, IMatchmakingCallbacks
	{
		[Token(Token = "0x20004BA")]
		public interface IConnectionEvents
		{
			[Token(Token = "0x6001FCB")]
			void OnClientConnect(object connObj, int connId);

			[Token(Token = "0x6001FCC")]
			void OnClientDisconnect(object connObj, int connId);

			[Token(Token = "0x6001FCD")]
			void OnServerConnect(object connObj, int connId);

			[Token(Token = "0x6001FCE")]
			void OnServerDisconnect(object connObj, int connId);
		}

		[Token(Token = "0x20004BB")]
		public interface IOnClientConnect
		{
			[Token(Token = "0x6001FCF")]
			void OnClientConnect(object connObj, int connId);
		}

		[Token(Token = "0x20004BC")]
		public delegate void OnClientConnectCallback(object connObj, int connId);

		[Token(Token = "0x20004BD")]
		public interface IOnClientDisconnect
		{
			[Token(Token = "0x6001FD4")]
			void OnClientDisconnect(object connObj, int connId);
		}

		[Token(Token = "0x20004BE")]
		public delegate void OnClientDisconnectCallback(object connObj, int connId);

		[Token(Token = "0x20004BF")]
		public interface IOnServerConnect
		{
			[Token(Token = "0x6001FD9")]
			void OnServerConnect(object connObj, int connId);
		}

		[Token(Token = "0x20004C0")]
		public delegate void OnServerConnectCallback(object connObj, int connId);

		[Token(Token = "0x20004C1")]
		public interface IOnServerDisconnect
		{
			[Token(Token = "0x6001FDE")]
			void OnServerDisconnect(object connObj, int connId);
		}

		[Token(Token = "0x20004C2")]
		public delegate void OnServerDisconnectCallback(object connObj, int connId);

		[Token(Token = "0x400223D")]
		public const string ADAPTER_NAME = "PUN2";

		[Token(Token = "0x400223E")]
		public const NetworkLibrary NET_LIB = NetworkLibrary.PUN2;

		[Token(Token = "0x400223F")]
		public const Authority DEFAULT_AUTHORITY_MODEL = Authority.Owner;

		[Token(Token = "0x4002240")]
		public const int BITS_FOR_NETID = 32;

		[Token(Token = "0x4002241")]
		public const int BITS_FOR_CLIENTID = 32;

		[Token(Token = "0x4002242")]
		public const int WRITE_SIZE_BITS = 13;

		[Token(Token = "0x4002243")]
		public const int MAX_BUFFER_BYTES = 1020;

		[Token(Token = "0x4002244")]
		public const int MAX_BUFFER_BITS = 8160;

		[Token(Token = "0x4002245")]
		public const Architecture ARCHITECTURE = Architecture.MasterRelay;

		[Token(Token = "0x4002246")]
		public const int SVR_CONN_TO_SELF_ID = 0;

		[Token(Token = "0x4002247")]
		public const int CLNT_CONN_TO_SVR_ID = -1;

		[Token(Token = "0x4002248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static MasterNetAdapter single;

		[Token(Token = "0x4002249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static int overflowBitPos;

		[Token(Token = "0x400224A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static ICollection<object> connections;

		[Token(Token = "0x400224B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static List<IConnectionEvents> iConnectionEvents;

		[Token(Token = "0x400224C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static List<IOnClientConnect> iOnClientConnect;

		[Token(Token = "0x400224D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static OnClientConnectCallback onClientConnectCallback;

		[Token(Token = "0x400224E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static List<IOnClientDisconnect> iOnClientDisconnect;

		[Token(Token = "0x400224F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static OnClientDisconnectCallback onClientDisconnectCallback;

		[Token(Token = "0x4002250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static List<IOnServerConnect> iOnServerConnect;

		[Token(Token = "0x4002251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static OnServerConnectCallback onServerConnectCallback;

		[Token(Token = "0x4002252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static List<IOnServerDisconnect> iOnServerDisconnect;

		[Token(Token = "0x4002253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public static OnServerDisconnectCallback onServerDisconnectCallback;

		[Token(Token = "0x4002254")]
		public const byte LowestMsgTypeId = 0;

		[Token(Token = "0x4002255")]
		public const byte HighestMsgTypeId = 199;

		[Token(Token = "0x170001BB")]
		public static int MyId
		{
			[Token(Token = "0x6001FA7")]
			[Address(RVA = "0x1361454", Offset = "0x1361454", VA = "0x1361454")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001BC")]
		public static int MasterConnId
		{
			[Token(Token = "0x6001FA8")]
			[Address(RVA = "0x13614C0", Offset = "0x13614C0", VA = "0x13614C0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001BD")]
		public static bool Connected
		{
			[Token(Token = "0x6001FAC")]
			[Address(RVA = "0x1361958", Offset = "0x1361958", VA = "0x1361958")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001BE")]
		public static bool ReadyToSend
		{
			[Token(Token = "0x6001FAD")]
			[Address(RVA = "0x13619B4", Offset = "0x13619B4", VA = "0x13619B4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001BF")]
		public static bool ServerIsActive
		{
			[Token(Token = "0x6001FAE")]
			[Address(RVA = "0x1361A44", Offset = "0x1361A44", VA = "0x1361A44")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001C0")]
		public static bool ClientIsActive
		{
			[Token(Token = "0x6001FAF")]
			[Address(RVA = "0x1361AA0", Offset = "0x1361AA0", VA = "0x1361AA0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001C1")]
		public static bool ClientIsReady
		{
			[Token(Token = "0x6001FB0")]
			[Address(RVA = "0x1361AFC", Offset = "0x1361AFC", VA = "0x1361AFC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001C2")]
		public static bool NetworkIsActive
		{
			[Token(Token = "0x6001FB1")]
			[Address(RVA = "0x1361B58", Offset = "0x1361B58", VA = "0x1361B58")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001C3")]
		public static int MaxConnections
		{
			[Token(Token = "0x6001FB2")]
			[Address(RVA = "0x1361BE8", Offset = "0x1361BE8", VA = "0x1361BE8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001FA9")]
		[Address(RVA = "0x1361558", Offset = "0x1361558", VA = "0x1361558")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x92C078", Offset = "0x92C078")]
		private static void ForceAwake()
		{
		}

		[Token(Token = "0x6001FAA")]
		[Address(RVA = "0x1361704", Offset = "0x1361704", VA = "0x1361704")]
		public static void DispatchIncomingMessages()
		{
		}

		[Token(Token = "0x6001FAB")]
		[Address(RVA = "0x1361800", Offset = "0x1361800", VA = "0x1361800")]
		public static void RegisterCallbackInterfaces(UnityEngine.Object obj, bool register = true)
		{
		}

		[Token(Token = "0x6001FB3")]
		[Address(RVA = "0x1361C54", Offset = "0x1361C54", VA = "0x1361C54")]
		public static void RegisterDefaultSerializeMsgIds()
		{
		}

		[Token(Token = "0x6001FB4")]
		[Address(RVA = "0x1361C58", Offset = "0x1361C58", VA = "0x1361C58", Slot = "10")]
		public void OnPlayerEnteredRoom(Photon.Realtime.Player newPlayer)
		{
		}

		[Token(Token = "0x6001FB5")]
		[Address(RVA = "0x13624D0", Offset = "0x13624D0", VA = "0x13624D0", Slot = "11")]
		public void OnPlayerLeftRoom(Photon.Realtime.Player otherPlayer)
		{
		}

		[Token(Token = "0x6001FB6")]
		[Address(RVA = "0x1362D90", Offset = "0x1362D90", VA = "0x1362D90", Slot = "12")]
		public void OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
		{
		}

		[Token(Token = "0x6001FB7")]
		[Address(RVA = "0x1362D94", Offset = "0x1362D94", VA = "0x1362D94", Slot = "13")]
		public void OnPlayerPropertiesUpdate(Photon.Realtime.Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
		{
		}

		[Token(Token = "0x6001FB8")]
		[Address(RVA = "0x1362D98", Offset = "0x1362D98", VA = "0x1362D98", Slot = "14")]
		public void OnMasterClientSwitched(Photon.Realtime.Player newMasterClient)
		{
		}

		[Token(Token = "0x6001FB9")]
		[Address(RVA = "0x1362D9C", Offset = "0x1362D9C", VA = "0x1362D9C", Slot = "15")]
		public void OnFriendListUpdate(List<FriendInfo> friendList)
		{
		}

		[Token(Token = "0x6001FBA")]
		[Address(RVA = "0x1362DA0", Offset = "0x1362DA0", VA = "0x1362DA0", Slot = "16")]
		public void OnCreatedRoom()
		{
		}

		[Token(Token = "0x6001FBB")]
		[Address(RVA = "0x1362DA4", Offset = "0x1362DA4", VA = "0x1362DA4", Slot = "17")]
		public void OnCreateRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x6001FBC")]
		[Address(RVA = "0x1362DA8", Offset = "0x1362DA8", VA = "0x1362DA8", Slot = "18")]
		public void OnJoinedRoom()
		{
		}

		[Token(Token = "0x6001FBD")]
		[Address(RVA = "0x13632CC", Offset = "0x13632CC", VA = "0x13632CC", Slot = "19")]
		public void OnJoinRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x6001FBE")]
		[Address(RVA = "0x13632D0", Offset = "0x13632D0", VA = "0x13632D0", Slot = "20")]
		public void OnJoinRandomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x6001FBF")]
		[Address(RVA = "0x13632D4", Offset = "0x13632D4", VA = "0x13632D4", Slot = "21")]
		public void OnLeftRoom()
		{
		}

		[Token(Token = "0x6001FC0")]
		[Address(RVA = "0x13637FC", Offset = "0x13637FC", VA = "0x13637FC", Slot = "4")]
		public void OnConnected()
		{
		}

		[Token(Token = "0x6001FC1")]
		[Address(RVA = "0x1363800", Offset = "0x1363800", VA = "0x1363800", Slot = "5")]
		public void OnConnectedToMaster()
		{
		}

		[Token(Token = "0x6001FC2")]
		[Address(RVA = "0x1363804", Offset = "0x1363804", VA = "0x1363804", Slot = "6")]
		public void OnDisconnected(DisconnectCause cause)
		{
		}

		[Token(Token = "0x6001FC3")]
		[Address(RVA = "0x1363808", Offset = "0x1363808", VA = "0x1363808", Slot = "7")]
		public void OnRegionListReceived(RegionHandler regionHandler)
		{
		}

		[Token(Token = "0x6001FC4")]
		[Address(RVA = "0x136380C", Offset = "0x136380C", VA = "0x136380C", Slot = "8")]
		public void OnCustomAuthenticationResponse(Dictionary<string, object> data)
		{
		}

		[Token(Token = "0x6001FC5")]
		[Address(RVA = "0x1363810", Offset = "0x1363810", VA = "0x1363810", Slot = "9")]
		public void OnCustomAuthenticationFailed(string debugMessage)
		{
		}

		[Token(Token = "0x6001FC6")]
		[Address(RVA = "0x1361614", Offset = "0x1361614", VA = "0x1361614")]
		private static void RegisterNetworkCallbacks()
		{
		}

		[Token(Token = "0x6001FC7")]
		[Address(RVA = "0x1363814", Offset = "0x1363814", VA = "0x1363814")]
		public static GameObject Spawn(GameObject prefab, Vector3 position, Quaternion rotation, Transform parent)
		{
			return null;
		}

		[Token(Token = "0x6001FC8")]
		[Address(RVA = "0x1363928", Offset = "0x1363928", VA = "0x1363928")]
		public static void UnSpawn(GameObject obj)
		{
		}

		[Token(Token = "0x6001FC9")]
		[Address(RVA = "0x136160C", Offset = "0x136160C", VA = "0x136160C")]
		public MasterNetAdapter()
		{
		}
	}
	[Token(Token = "0x20004C3")]
	public interface IOnNetSerialize
	{
		[Token(Token = "0x6001FE3")]
		SerializationFlags OnNetSerialize(int frameId, byte[] buffer, ref int bitposition);
	}
	[Token(Token = "0x20004C4")]
	public interface IOnNetDeserialize
	{
		[Token(Token = "0x6001FE4")]
		void OnNetDeserialize(int sourceFrameId, int originFrameId, int localFrameId, byte[] buffer, ref int bitposition);
	}
	[Token(Token = "0x20004C5")]
	public interface INetEvents
	{
		[Token(Token = "0x6001FE5")]
		void OnStart();

		[Token(Token = "0x6001FE6")]
		void OnStartLocalPlayer();

		[Token(Token = "0x6001FE7")]
		void OnNetworkDestroy();

		[Token(Token = "0x6001FE8")]
		void OnConnect(ServerClient svrclnt);
	}
	[Token(Token = "0x20004C6")]
	public enum ServerClient
	{
		[Token(Token = "0x4002257")]
		Server,
		[Token(Token = "0x4002258")]
		Client,
		[Token(Token = "0x4002259")]
		Master
	}
	[Token(Token = "0x20004C7")]
	public interface IOnConnect
	{
		[Token(Token = "0x6001FE9")]
		void OnConnect(ServerClient svrclnt);
	}
	[Token(Token = "0x20004C8")]
	public interface IOnStart
	{
		[Token(Token = "0x6001FEA")]
		void OnStart();
	}
	[Token(Token = "0x20004C9")]
	public interface IOnStartLocalPlayer
	{
		[Token(Token = "0x6001FEB")]
		void OnStartLocalPlayer();
	}
	[Token(Token = "0x20004CA")]
	public interface IOnNetworkDestroy
	{
		[Token(Token = "0x6001FEC")]
		void OnNetworkDestroy();
	}
	[Token(Token = "0x20004CB")]
	public interface IOnJoinRoom
	{
		[Token(Token = "0x6001FED")]
		void OnJoinRoom();
	}
	[Token(Token = "0x20004CC")]
	public interface IOnJoinRoomFailed
	{
		[Token(Token = "0x6001FEE")]
		void OnJoinRoomFailed();
	}
	[Token(Token = "0x20004CD")]
	public static class NetMsgCallbacks
	{
		[Token(Token = "0x20004CE")]
		public delegate void ByteBufferCallback(object conn, int connId, byte[] buffer);

		[Token(Token = "0x20004CF")]
		private class CallbackLists
		{
			[Token(Token = "0x400225C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<ByteBufferCallback> bufferCallbacks;

			[Token(Token = "0x6001FFC")]
			[Address(RVA = "0xD83D20", Offset = "0xD83D20", VA = "0xD83D20")]
			public CallbackLists()
			{
			}
		}

		[Token(Token = "0x400225A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<int, CallbackLists> callbacks;

		[Token(Token = "0x400225B")]
		public const byte DEF_MSG_ID = 111;

		[Token(Token = "0x6001FEF")]
		[Address(RVA = "0xCB2DD8", Offset = "0xCB2DD8", VA = "0xCB2DD8")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x92C08C", Offset = "0x92C08C")]
		private static void RegisterOnEventListener()
		{
		}

		[Token(Token = "0x6001FF0")]
		[Address(RVA = "0xCB2ED4", Offset = "0xCB2ED4", VA = "0xCB2ED4")]
		public static void OnEvent(EventData photonEvent)
		{
		}

		[Token(Token = "0x6001FF1")]
		[Address(RVA = "0xCB3210", Offset = "0xCB3210", VA = "0xCB3210")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92C0A0", Offset = "0x92C0A0")]
		public static void RegisterCallback(byte msgid, ByteBufferCallback callback, bool asServer)
		{
		}

		[Token(Token = "0x6001FF2")]
		[Address(RVA = "0xCB1AE4", Offset = "0xCB1AE4", VA = "0xCB1AE4")]
		public static void RegisterCallback(ByteBufferCallback callback)
		{
		}

		[Token(Token = "0x6001FF3")]
		[Address(RVA = "0xCB34A4", Offset = "0xCB34A4", VA = "0xCB34A4")]
		public static void RegisterCallback(byte msgid, ByteBufferCallback callback)
		{
		}

		[Token(Token = "0x6001FF4")]
		[Address(RVA = "0xCB3738", Offset = "0xCB3738", VA = "0xCB3738")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92C0D8", Offset = "0x92C0D8")]
		public static void UnregisterCallback(byte msgid, ByteBufferCallback callback, bool asServer)
		{
		}

		[Token(Token = "0x6001FF5")]
		[Address(RVA = "0xCB38C4", Offset = "0xCB38C4", VA = "0xCB38C4")]
		public static void UnregisterCallback(ByteBufferCallback callback)
		{
		}

		[Token(Token = "0x6001FF6")]
		[Address(RVA = "0xCB3928", Offset = "0xCB3928", VA = "0xCB3928")]
		public static void UnregisterCallback(byte msgid, ByteBufferCallback callback)
		{
		}
	}
	[Token(Token = "0x20004D0")]
	public enum ReceiveGroup
	{
		[Token(Token = "0x400225E")]
		Others,
		[Token(Token = "0x400225F")]
		All,
		[Token(Token = "0x4002260")]
		Master
	}
	[Token(Token = "0x20004D1")]
	public enum SerializationFlags
	{
		[Token(Token = "0x4002262")]
		None = 0,
		[Token(Token = "0x4002263")]
		HasContent = 1,
		[Token(Token = "0x4002264")]
		Force = 2,
		[Token(Token = "0x4002265")]
		ForceReliable = 4,
		[Token(Token = "0x4002266")]
		SendToSelf = 8
	}
	[Token(Token = "0x20004D2")]
	public static class NetMsgSends
	{
		[Token(Token = "0x4002267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static byte[] reusableBuffer;

		[Token(Token = "0x4002268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static byte[] reusableNetObjBuffer;

		[Token(Token = "0x4002269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static ByteArraySlice slice;

		[Token(Token = "0x400226A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static bool unreliableCapable;

		[Token(Token = "0x400226B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static RaiseEventOptions[] opts;

		[Token(Token = "0x170001C4")]
		public static bool ReadyToSend
		{
			[Token(Token = "0x6001FFF")]
			[Address(RVA = "0xCB23F0", Offset = "0xCB23F0", VA = "0xCB23F0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001C5")]
		public static bool AmActiveServer
		{
			[Token(Token = "0x6002000")]
			[Address(RVA = "0xCB3EDC", Offset = "0xCB3EDC", VA = "0xCB3EDC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001FFD")]
		[Address(RVA = "0xCB3B3C", Offset = "0xCB3B3C", VA = "0xCB3B3C")]
		public static void Send(this byte[] buffer, int bitposition, UnityEngine.Object refObj, SerializationFlags flags, bool flush = false)
		{
		}

		[Token(Token = "0x6001FFE")]
		[Address(RVA = "0xCB3E18", Offset = "0xCB3E18", VA = "0xCB3E18")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x92C120", Offset = "0x92C120")]
		private static void CacheSettings()
		{
		}

		[Token(Token = "0x6002001")]
		[Address(RVA = "0xCB3BCC", Offset = "0xCB3BCC", VA = "0xCB3BCC")]
		public static void Send(this byte[] buffer, int bitposition, UnityEngine.Object refObj, ReceiveGroup rcvGrp, bool sendReliable = false, bool flush = false)
		{
		}
	}
	[Token(Token = "0x20004D3")]
	public static class UnifiedNetTools
	{
		[Token(Token = "0x6002003")]
		public static T FindComponentByNetId<T>(this ulong netid) where T : class
		{
			return null;
		}

		[Token(Token = "0x6002004")]
		[Address(RVA = "0xED312C", Offset = "0xED312C", VA = "0xED312C")]
		public static GameObject FindGameObjectByNetId(this ulong netid)
		{
			return null;
		}
	}
}
namespace emotitron.Utilities.GUIUtilities
{
	[Token(Token = "0x20004D4")]
	public abstract class SettingsScriptableObjectBase : ScriptableObject
	{
		[Token(Token = "0x6002005")]
		public abstract void Initialize();

		[Token(Token = "0x6002006")]
		[Address(RVA = "0x10A5990", Offset = "0x10A5990", VA = "0x10A5990")]
		protected SettingsScriptableObjectBase()
		{
		}
	}
	[Token(Token = "0x20004D5")]
	public abstract class SettingsScriptableObject<T> : SettingsScriptableObjectBase where T : SettingsScriptableObjectBase
	{
		[Token(Token = "0x400226C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string AssetName;

		[Token(Token = "0x400226D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Action OnSingletonReady;

		[Token(Token = "0x400226E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static T single;

		[Token(Token = "0x170001C6")]
		public static T Single
		{
			[Token(Token = "0x6002007")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002008")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6002009")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x600200A")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x600200B")]
		protected SettingsScriptableObject()
		{
		}
	}
}
namespace emotitron.Utilities.FileIO
{
	[Token(Token = "0x20004D6")]
	public static class ScriptIO
	{
		[Token(Token = "0x600200D")]
		[Address(RVA = "0xDC610C", Offset = "0xDC610C", VA = "0xDC610C")]
		public static string ReadLine(this string filename, int linenumber)
		{
			return null;
		}

		[Token(Token = "0x600200E")]
		public static string ExtractFieldName<T>(this string line)
		{
			return null;
		}

		[Token(Token = "0x600200F")]
		public static bool DoesFieldExistInLine<T>(this string fieldname, string filepath, int linenumber)
		{
			return default(bool);
		}
	}
}
namespace emotitron.Utilities.Example
{
	[Token(Token = "0x20004D7")]
	public class AddPlayerOnP : MonoBehaviour
	{
		[Token(Token = "0x6002010")]
		[Address(RVA = "0x1844378", Offset = "0x1844378", VA = "0x1844378")]
		private void Update()
		{
		}

		[Token(Token = "0x6002011")]
		[Address(RVA = "0x184437C", Offset = "0x184437C", VA = "0x184437C")]
		public AddPlayerOnP()
		{
		}
	}
	[Token(Token = "0x20004D8")]
	public class BasicController : MonoBehaviour
	{
		[Token(Token = "0x20004D9")]
		public enum Timing
		{
			[Token(Token = "0x400228A")]
			Auto,
			[Token(Token = "0x400228B")]
			Fixed,
			[Token(Token = "0x400228C")]
			Update,
			[Token(Token = "0x400228D")]
			LateUpdate
		}

		[Token(Token = "0x400226F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private PhotonView pv;

		[Token(Token = "0x4002270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Rigidbody rb;

		[Token(Token = "0x4002271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Rigidbody2D rb2D;

		[Token(Token = "0x4002272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public TransformCrusher TransformCrusherRef;

		[Token(Token = "0x4002273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TransformCrusher tc;

		[Token(Token = "0x4002274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Timing timing;

		[Token(Token = "0x4002275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool moveRelative;

		[Token(Token = "0x4002276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x91D170", Offset = "0x91D170")]
		public KeyCode moveLeft;

		[Token(Token = "0x4002277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public KeyCode moveRight;

		[Token(Token = "0x4002278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public KeyCode moveFwd;

		[Token(Token = "0x4002279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public KeyCode moveBwd;

		[Token(Token = "0x400227A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public KeyCode moveUp;

		[Token(Token = "0x400227B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public KeyCode moveDn;

		[Token(Token = "0x400227C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x91D180", Offset = "0x91D180")]
		public KeyCode pitchPos;

		[Token(Token = "0x400227D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public KeyCode pitchNeg;

		[Token(Token = "0x400227E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public KeyCode yawPos;

		[Token(Token = "0x400227F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public KeyCode yawNeg;

		[Token(Token = "0x4002280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public KeyCode rollPos;

		[Token(Token = "0x4002281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public KeyCode rollNeg;

		[Token(Token = "0x4002282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x91D190", Offset = "0x91D190")]
		public bool clampToCrusher;

		[Token(Token = "0x4002283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float moveSpeed;

		[Token(Token = "0x4002284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float turnSpeed;

		[Token(Token = "0x4002285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float moveForce;

		[Token(Token = "0x4002286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float turnForce;

		[Token(Token = "0x4002287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float scaleSpeed;

		[Token(Token = "0x4002288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool isMine;

		[Token(Token = "0x170001C7")]
		private bool IsMine
		{
			[Token(Token = "0x6002013")]
			[Address(RVA = "0xC1DD6C", Offset = "0xC1DD6C", VA = "0xC1DD6C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002012")]
		[Address(RVA = "0xC1DCD0", Offset = "0xC1DCD0", VA = "0xC1DCD0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002014")]
		[Address(RVA = "0xC1DE00", Offset = "0xC1DE00", VA = "0xC1DE00")]
		private void Start()
		{
		}

		[Token(Token = "0x6002015")]
		[Address(RVA = "0xC1DF98", Offset = "0xC1DF98", VA = "0xC1DF98")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6002016")]
		[Address(RVA = "0xC1E7A8", Offset = "0xC1E7A8", VA = "0xC1E7A8")]
		private void Update()
		{
		}

		[Token(Token = "0x6002017")]
		[Address(RVA = "0xC1E838", Offset = "0xC1E838", VA = "0xC1E838")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6002018")]
		[Address(RVA = "0xC1E84C", Offset = "0xC1E84C", VA = "0xC1E84C")]
		private void SumKeys(out Vector3 move, out Vector3 turn)
		{
		}

		[Token(Token = "0x6002019")]
		[Address(RVA = "0xC1E028", Offset = "0xC1E028", VA = "0xC1E028")]
		private void Apply()
		{
		}

		[Token(Token = "0x600201A")]
		[Address(RVA = "0xC1EB30", Offset = "0xC1EB30", VA = "0xC1EB30")]
		public BasicController()
		{
		}
	}
	[Token(Token = "0x20004DA")]
	public class PUNSampleLauncher : MonoBehaviourPunCallbacks
	{
		[Token(Token = "0x400228E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91D1A0", Offset = "0x91D1A0")]
		public GameObject playerPrefab;

		[Token(Token = "0x400228F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool autoSpawnPlayer;

		[Token(Token = "0x4002290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public KeyCode spawnPlayerKey;

		[Token(Token = "0x4002291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public KeyCode unspawnPlayerKey;

		[Token(Token = "0x4002292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static GameObject localPlayer;

		[Token(Token = "0x600201B")]
		[Address(RVA = "0xF49D5C", Offset = "0xF49D5C", VA = "0xF49D5C")]
		public static void AddPhotonView(GameObject prefab)
		{
		}

		[Token(Token = "0x600201C")]
		[Address(RVA = "0xF49E20", Offset = "0xF49E20", VA = "0xF49E20")]
		private void Awake()
		{
		}

		[Token(Token = "0x600201D")]
		[Address(RVA = "0xF49F40", Offset = "0xF49F40", VA = "0xF49F40")]
		private void Start()
		{
		}

		[Token(Token = "0x600201E")]
		[Address(RVA = "0xF49FD0", Offset = "0xF49FD0", VA = "0xF49FD0", Slot = "45")]
		public override void OnConnectedToMaster()
		{
		}

		[Token(Token = "0x600201F")]
		[Address(RVA = "0xF4A08C", Offset = "0xF4A08C", VA = "0xF4A08C", Slot = "36")]
		public override void OnJoinedLobby()
		{
		}

		[Token(Token = "0x6002020")]
		[Address(RVA = "0xF4A094", Offset = "0xF4A094", VA = "0xF4A094", Slot = "41")]
		public override void OnJoinedRoom()
		{
		}

		[Token(Token = "0x6002021")]
		[Address(RVA = "0xF4A70C", Offset = "0xF4A70C", VA = "0xF4A70C")]
		public void Update()
		{
		}

		[Token(Token = "0x6002022")]
		[Address(RVA = "0xF49F44", Offset = "0xF49F44", VA = "0xF49F44")]
		public void Connect()
		{
		}

		[Token(Token = "0x6002023")]
		[Address(RVA = "0xF49FD4", Offset = "0xF49FD4", VA = "0xF49FD4")]
		private void JoinOrCreateRoom()
		{
		}

		[Token(Token = "0x6002024")]
		[Address(RVA = "0xF4A3DC", Offset = "0xF4A3DC", VA = "0xF4A3DC")]
		private void SpawnLocalPlayer()
		{
		}

		[Token(Token = "0x6002025")]
		[Address(RVA = "0xF4A75C", Offset = "0xF4A75C", VA = "0xF4A75C")]
		private void UnspawnLocalPlayer()
		{
		}

		[Token(Token = "0x6002026")]
		[Address(RVA = "0xF4A84C", Offset = "0xF4A84C", VA = "0xF4A84C")]
		public PUNSampleLauncher()
		{
		}
	}
	[Token(Token = "0x20004DB")]
	public class SimpleMover : MonoBehaviour
	{
		[Token(Token = "0x20004DC")]
		public enum TType
		{
			[Token(Token = "0x40022A2")]
			Position,
			[Token(Token = "0x40022A3")]
			Rotation,
			[Token(Token = "0x40022A4")]
			Scale
		}

		[Token(Token = "0x20004DD")]
		public enum Axis
		{
			[Token(Token = "0x40022A6")]
			X = 1,
			[Token(Token = "0x40022A7")]
			Y,
			[Token(Token = "0x40022A8")]
			XY,
			[Token(Token = "0x40022A9")]
			Z,
			[Token(Token = "0x40022AA")]
			XZ,
			[Token(Token = "0x40022AB")]
			YZ,
			[Token(Token = "0x40022AC")]
			XYZ
		}

		[Token(Token = "0x4002293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private PhotonView pv;

		[Token(Token = "0x4002294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TransformCrusher tc;

		[Token(Token = "0x4002295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TType changeWhat;

		[Token(Token = "0x4002296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 addVector;

		[Token(Token = "0x4002297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool local;

		[Token(Token = "0x4002298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool clampToCrusher;

		[Token(Token = "0x4002299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		public bool oscillate;

		[Token(Token = "0x400229A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Axis oscillateAxis;

		[Token(Token = "0x400229B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float oscillateStart;

		[Token(Token = "0x400229C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float oscillateEnd;

		[Token(Token = "0x400229D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float oscillateRange;

		[Token(Token = "0x400229E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float oscillateHalfRange;

		[Token(Token = "0x400229F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float oscillateRate;

		[Token(Token = "0x40022A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Rigidbody rb;

		[Token(Token = "0x6002027")]
		[Address(RVA = "0x10AEC14", Offset = "0x10AEC14", VA = "0x10AEC14")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002028")]
		[Address(RVA = "0x10AED3C", Offset = "0x10AED3C", VA = "0x10AED3C")]
		private void Start()
		{
		}

		[Token(Token = "0x6002029")]
		[Address(RVA = "0x10AEDA4", Offset = "0x10AEDA4", VA = "0x10AEDA4")]
		private void Update()
		{
		}

		[Token(Token = "0x600202A")]
		[Address(RVA = "0x10AF278", Offset = "0x10AF278", VA = "0x10AF278")]
		public SimpleMover()
		{
		}
	}
}
namespace emotitron.Utilities.CallbackUtils
{
	[Token(Token = "0x20004DE")]
	public static class CallbackUtilities
	{
		[Token(Token = "0x600202B")]
		public static void RegisterInterface<T>(List<T> i, object c, bool register) where T : class
		{
		}
	}
}
namespace emotitron.SyncAnimInternal
{
	[Token(Token = "0x20004DF")]
	public enum ParameterInterpolation
	{
		[Token(Token = "0x40022AE")]
		Default,
		[Token(Token = "0x40022AF")]
		Hold,
		[Token(Token = "0x40022B0")]
		Lerp,
		[Token(Token = "0x40022B1")]
		Advance
	}
	[Token(Token = "0x20004E0")]
	public enum ParameterMissingHold
	{
		[Token(Token = "0x40022B3")]
		Default,
		[Token(Token = "0x40022B4")]
		Hold
	}
	[Token(Token = "0x20004E1")]
	public enum ParameterExtrapolation
	{
		[Token(Token = "0x40022B6")]
		Default,
		[Token(Token = "0x40022B7")]
		Hold,
		[Token(Token = "0x40022B8")]
		Lerp
	}
	[Serializable]
	[Token(Token = "0x20004E2")]
	public class ParameterDefaults
	{
		[Token(Token = "0x40022B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ParameterInterpolation interpolateFloats;

		[Token(Token = "0x40022BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public ParameterInterpolation interpolateInts;

		[Token(Token = "0x40022BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ParameterExtrapolation extrapolateFloats;

		[Token(Token = "0x40022BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ParameterExtrapolation extrapolateInts;

		[Token(Token = "0x40022BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ParameterExtrapolation extrapolateBools;

		[Token(Token = "0x40022BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public ParameterExtrapolation extrapolateTriggers;

		[Token(Token = "0x40022BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool includeFloats;

		[Token(Token = "0x40022C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool includeInts;

		[Token(Token = "0x40022C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool includeBools;

		[Token(Token = "0x40022C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
		public bool includeTriggers;

		[Token(Token = "0x40022C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public SmartVar defaultFloat;

		[Token(Token = "0x40022C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public SmartVar defaultInt;

		[Token(Token = "0x40022C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public SmartVar defaultBool;

		[Token(Token = "0x40022C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public SmartVar defaultTrigger;

		[Token(Token = "0x600202C")]
		[Address(RVA = "0x1738768", Offset = "0x1738768", VA = "0x1738768")]
		public ParameterDefaults()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004E3")]
	public class ParameterSettings
	{
		[Token(Token = "0x40022C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int hash;

		[Token(Token = "0x40022C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public AnimatorControllerParameterType paramType;

		[Token(Token = "0x40022C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool include;

		[Token(Token = "0x40022CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ParameterInterpolation interpolate;

		[Token(Token = "0x40022CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ParameterExtrapolation extrapolate;

		[Token(Token = "0x40022CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public SmartVar defaultValue;

		[Token(Token = "0x40022CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public LiteFloatCrusher fcrusher;

		[Token(Token = "0x40022CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public LiteIntCrusher icrusher;

		[Token(Token = "0x40022CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly List<int> rebuiltHashes;

		[Token(Token = "0x40022D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly List<ParameterSettings> rebuiltSettings;

		[Token(Token = "0x600202D")]
		[Address(RVA = "0x1738828", Offset = "0x1738828", VA = "0x1738828")]
		public ParameterSettings(int hash, ParameterDefaults defs, ref int paramCount, AnimatorControllerParameterType paramType)
		{
		}

		[Token(Token = "0x600202E")]
		[Address(RVA = "0x1738A48", Offset = "0x1738A48", VA = "0x1738A48")]
		public static List<string> RebuildParamSettings(Animator a, ref ParameterSettings[] paraSettings, ref int paramCount, ParameterDefaults defs)
		{
			return null;
		}

		[Token(Token = "0x600202F")]
		[Address(RVA = "0x1738D24", Offset = "0x1738D24", VA = "0x1738D24")]
		private static int GetHashIndex(ParameterSettings[] ps, int lookfor)
		{
			return default(int);
		}
	}
}
namespace emotitron.Networking
{
	[Token(Token = "0x20004E4")]
	public enum Realm
	{
		[Token(Token = "0x40022D2")]
		Primary = 1,
		[Token(Token = "0x40022D3")]
		Ghost,
		[Token(Token = "0x40022D4")]
		Both
	}
	[Token(Token = "0x20004E5")]
	public enum Replication
	{
		[Token(Token = "0x40022D6")]
		OwnerSend = 1,
		[Token(Token = "0x40022D7")]
		MasterSend
	}
	[Token(Token = "0x20004E6")]
	public enum Interpolation
	{
		[Token(Token = "0x40022D9")]
		None,
		[Token(Token = "0x40022DA")]
		Linear,
		[Token(Token = "0x40022DB")]
		CatmullRom
	}
	[Token(Token = "0x20004E7")]
	public interface ISyncAnimator
	{
	}
	[Token(Token = "0x20004E8")]
	public interface ISyncTransform
	{
	}
	[Token(Token = "0x20004E9")]
	public interface IApplyOrder
	{
		[Token(Token = "0x170001C8")]
		int ApplyOrder
		{
			[Token(Token = "0x6002031")]
			get;
		}
	}
	[Token(Token = "0x20004EA")]
	public interface IOnSnapshot
	{
		[Token(Token = "0x6002032")]
		void OnSnapshot(int newTargetFrameId, bool isActingAuthority, bool initialize);
	}
	[Token(Token = "0x20004EB")]
	public interface IOnInterpolate
	{
		[Token(Token = "0x6002033")]
		void OnInterpolate(float t);
	}
	[Token(Token = "0x20004EC")]
	public interface IOnQuantize
	{
		[Token(Token = "0x6002034")]
		void OnQuantize(int frameId, Realm realm);
	}
	[Token(Token = "0x20004ED")]
	public interface IOnCaptureCurrentValues
	{
		[Token(Token = "0x6002035")]
		void OnCaptureCurrentValues(int frameId, bool amActingAuthority, Realm realm);
	}
	[Token(Token = "0x20004EE")]
	public interface IOnAuthorityChanged
	{
		[Token(Token = "0x6002036")]
		void OnAuthorityChanged(bool isMine);
	}
	[Token(Token = "0x20004EF")]
	public class NetMasterLite : MonoBehaviour
	{
		[Token(Token = "0x20004F0")]
		public interface IOnIncrementFrame
		{
			[Token(Token = "0x6002048")]
			void OnIncrementFrame(int newFrameId, int newSubFrameId, int previousFrameId, int prevSubFrameId);
		}

		[Token(Token = "0x20004F1")]
		public interface IOnPreSimulate
		{
			[Token(Token = "0x6002049")]
			void OnPreSimulate(int frameId, int subFrameId);
		}

		[Token(Token = "0x20004F2")]
		public interface IOnPostSimulate
		{
			[Token(Token = "0x600204A")]
			void OnPostSimulate(int frameId, int subFrameId);
		}

		[Token(Token = "0x40022DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static NetMasterLite single;

		[Token(Token = "0x40022DD")]
		public const int NET_FRAME_COUNT = 60;

		[Token(Token = "0x40022DE")]
		public const int NET_FRAME_BITS = 6;

		[Token(Token = "0x40022DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91D1D8", Offset = "0x91D1D8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x91D1D8", Offset = "0x91D1D8")]
		public int _sendEveryX;

		[Token(Token = "0x40022E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static int sendEveryX;

		[Token(Token = "0x40022E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float lastFixedDeltaTimeTick;

		[Token(Token = "0x40022E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static int _currFrameId;

		[Token(Token = "0x40022E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static int _currSubFrameId;

		[Token(Token = "0x40022E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static int _prevFrameId;

		[Token(Token = "0x40022E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static int _prevSubFrameId;

		[Token(Token = "0x40022E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static List<IOnIncrementFrame> iOnIncrementFrame;

		[Token(Token = "0x40022E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static List<IOnPreSimulate> iOnPreSimulate;

		[Token(Token = "0x40022E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static List<IOnPostSimulate> iOnPostSimulate;

		[Token(Token = "0x40022E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool simulationHasRun;

		[Token(Token = "0x170001C9")]
		public static int CurrentFrameId
		{
			[Token(Token = "0x6002037")]
			[Address(RVA = "0xCB163C", Offset = "0xCB163C", VA = "0xCB163C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001CA")]
		public static int CurrentSubFrameId
		{
			[Token(Token = "0x6002038")]
			[Address(RVA = "0xCB16A0", Offset = "0xCB16A0", VA = "0xCB16A0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001CB")]
		public static int PreviousFrameId
		{
			[Token(Token = "0x6002039")]
			[Address(RVA = "0xCB1704", Offset = "0xCB1704", VA = "0xCB1704")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001CC")]
		public static int PreviousSubFrameId
		{
			[Token(Token = "0x600203A")]
			[Address(RVA = "0xCB1768", Offset = "0xCB1768", VA = "0xCB1768")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x600203B")]
		[Address(RVA = "0xCB17CC", Offset = "0xCB17CC", VA = "0xCB17CC")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x92C194", Offset = "0x92C194")]
		public static void EnsureExistsInScene()
		{
		}

		[Token(Token = "0x600203C")]
		[Address(RVA = "0xCB1B48", Offset = "0xCB1B48", VA = "0xCB1B48")]
		public static void OnIncrementFrameTrigger()
		{
		}

		[Token(Token = "0x600203D")]
		[Address(RVA = "0xCB1D0C", Offset = "0xCB1D0C", VA = "0xCB1D0C")]
		public static void OnPreSimulateTrigger()
		{
		}

		[Token(Token = "0x600203E")]
		[Address(RVA = "0xCB1EB0", Offset = "0xCB1EB0", VA = "0xCB1EB0")]
		public static void OnPostSimulateTrigger()
		{
		}

		[Token(Token = "0x600203F")]
		[Address(RVA = "0xCB2054", Offset = "0xCB2054", VA = "0xCB2054")]
		public static void RegisterCallbackInterfaces(object c, bool register = true)
		{
		}

		[Token(Token = "0x6002040")]
		[Address(RVA = "0xCB211C", Offset = "0xCB211C", VA = "0xCB211C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002041")]
		[Address(RVA = "0xCB2310", Offset = "0xCB2310", VA = "0xCB2310")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6002042")]
		[Address(RVA = "0xCB24D8", Offset = "0xCB24D8", VA = "0xCB24D8")]
		private void Update()
		{
		}

		[Token(Token = "0x6002043")]
		[Address(RVA = "0xCB2458", Offset = "0xCB2458", VA = "0xCB2458")]
		private void PostSimulate()
		{
		}

		[Token(Token = "0x6002044")]
		[Address(RVA = "0xCB26EC", Offset = "0xCB26EC", VA = "0xCB26EC")]
		private void SerializeAndSend()
		{
		}

		[Token(Token = "0x6002045")]
		[Address(RVA = "0xCB2784", Offset = "0xCB2784", VA = "0xCB2784")]
		private void IncrementFrameId()
		{
		}

		[Token(Token = "0x6002046")]
		[Address(RVA = "0xCB2CA0", Offset = "0xCB2CA0", VA = "0xCB2CA0")]
		public NetMasterLite()
		{
		}
	}
	[Token(Token = "0x20004F3")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9189B8", Offset = "0x9189B8")]
	public class NetObjectLite : MonoBehaviour
	{
		[Token(Token = "0x40022EA")]
		private const int BITS_FOR_DATA_SIZE = 8;

		[Token(Token = "0x40022EB")]
		public const int MAX_ORDER_VAL = 9;

		[Token(Token = "0x40022EC")]
		public const int MIN_BUFF_CNT = 1;

		[Token(Token = "0x40022ED")]
		public const int TARG_BUFF_CNT = 2;

		[Token(Token = "0x40022EE")]
		public const int MAX_BUFF_CNT = 3;

		[Token(Token = "0x40022EF")]
		public const int TICKS_BEFORE_SHRINK_BUFFER = 8;

		[Token(Token = "0x40022F0")]
		public const int TICKS_BEFORE_GROW_BUFFER = 4;

		[Token(Token = "0x40022F1")]
		public const int FRAME_CNT = 60;

		[Token(Token = "0x40022F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Dictionary<uint, NetObjectLite> netObjLookup;

		[Token(Token = "0x40022F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static List<NetObjectLite> activeNetObjs;

		[Token(Token = "0x40022F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FastBitMask128 validFrames;

		[NonSerialized]
		[Token(Token = "0x40022F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NetObjAdapter noa;

		[NonSerialized]
		[Token(Token = "0x40022F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int currTargFrameId;

		[Token(Token = "0x40022F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static List<Component> reusableFindsyncObjects;

		[Token(Token = "0x40022F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly List<IOnNetSerialize> iOnNetSerialize;

		[Token(Token = "0x40022F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly List<IOnNetDeserialize> iOnNetDeserialize;

		[Token(Token = "0x40022FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly List<IOnSnapshot> iOnSnapshot;

		[Token(Token = "0x40022FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly List<IOnQuantize> iOnQuantize;

		[Token(Token = "0x40022FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly List<IOnInterpolate> iOnInterpolate;

		[Token(Token = "0x40022FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly List<IOnCaptureCurrentValues> iOnCaptureCurrentValues;

		[Token(Token = "0x40022FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private readonly List<IOnAuthorityChanged> iOnAuthorityChanged;

		[NonSerialized]
		[Token(Token = "0x40022FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Authority authority;

		[Token(Token = "0x4002300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91D22C", Offset = "0x91D22C")]
		private bool skipWhenEmpty;

		[Token(Token = "0x4002301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public int assumedController;

		[Token(Token = "0x4002302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private bool processedInitialBacklog;

		[Token(Token = "0x4002303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float firstDeserializeTime;

		[Token(Token = "0x4002304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private bool hadInitialSnapshot;

		[Token(Token = "0x4002305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int numOfSequentialFramesWithTooSmallBuffer;

		[Token(Token = "0x4002306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int numOfSequentialFramesWithTooLargeBuffer;

		[Token(Token = "0x4002307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool frameArrivedTooLate;

		[Token(Token = "0x600204B")]
		[Address(RVA = "0xCB4D44", Offset = "0xCB4D44", VA = "0xCB4D44")]
		private void CollectInterfaces()
		{
		}

		[Token(Token = "0x600204C")]
		[Address(RVA = "0xCB4D48", Offset = "0xCB4D48", VA = "0xCB4D48")]
		private void CollectAndReorderInterfaces()
		{
		}

		[Token(Token = "0x600204D")]
		private void AddInterfaceToList<T>(Component comp, List<T> list) where T : class
		{
		}

		[Token(Token = "0x600204E")]
		[Address(RVA = "0xCB5044", Offset = "0xCB5044", VA = "0xCB5044")]
		protected void Awake()
		{
		}

		[Token(Token = "0x600204F")]
		[Address(RVA = "0xCB512C", Offset = "0xCB512C", VA = "0xCB512C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002050")]
		[Address(RVA = "0xCB51B8", Offset = "0xCB51B8", VA = "0xCB51B8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002051")]
		[Address(RVA = "0xCB529C", Offset = "0xCB529C", VA = "0xCB529C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002052")]
		[Address(RVA = "0xCB4A0C", Offset = "0xCB4A0C", VA = "0xCB4A0C")]
		public void OnChangeAuthority(bool isMine)
		{
		}

		[Token(Token = "0x6002053")]
		[Address(RVA = "0xCB5380", Offset = "0xCB5380", VA = "0xCB5380")]
		public SerializationFlags SendInitialization(out byte[] buffer, out int bytecount)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6002054")]
		[Address(RVA = "0xCB5538", Offset = "0xCB5538", VA = "0xCB5538")]
		public void ReceiveInitialization(byte[] buffer, int bytecount)
		{
		}

		[Token(Token = "0x6002055")]
		[Address(RVA = "0xCB290C", Offset = "0xCB290C", VA = "0xCB290C")]
		public static void SerializeAllNetObjs(int frameId)
		{
		}

		[Token(Token = "0x6002056")]
		[Address(RVA = "0xCB5928", Offset = "0xCB5928", VA = "0xCB5928")]
		public static void Deserialize(object conn, int connId, byte[] buffer)
		{
		}

		[Token(Token = "0x6002057")]
		[Address(RVA = "0xCB2B80", Offset = "0xCB2B80", VA = "0xCB2B80")]
		public static void SnapshotAllNetObjs(int frameId)
		{
		}

		[Token(Token = "0x6002058")]
		[Address(RVA = "0xCB25BC", Offset = "0xCB25BC", VA = "0xCB25BC")]
		public static void InterpolateAllNetObjs(float t)
		{
		}

		[Token(Token = "0x6002059")]
		[Address(RVA = "0xCB567C", Offset = "0xCB567C", VA = "0xCB567C")]
		public void OnCaptureCurrentValues(int frameId)
		{
		}

		[Token(Token = "0x600205A")]
		[Address(RVA = "0xCB57D0", Offset = "0xCB57D0", VA = "0xCB57D0")]
		public SerializationFlags OnSerialize(int frameId, byte[] buffer, ref int bitposition)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x600205B")]
		[Address(RVA = "0xCB5A78", Offset = "0xCB5A78", VA = "0xCB5A78")]
		public void OnDeserialize(int sourceFrameId, int originFrameId, int localframeId, byte[] buffer, ref int bitposition)
		{
		}

		[Token(Token = "0x600205C")]
		[Address(RVA = "0xCB5C9C", Offset = "0xCB5C9C", VA = "0xCB5C9C")]
		public void OnSnapshot(int frameId)
		{
		}

		[Token(Token = "0x600205D")]
		[Address(RVA = "0xCB5ED8", Offset = "0xCB5ED8", VA = "0xCB5ED8")]
		public void OnInterpolate(float t)
		{
		}

		[Token(Token = "0x600205E")]
		[Address(RVA = "0xCB6008", Offset = "0xCB6008", VA = "0xCB6008")]
		public NetObjectLite()
		{
		}
	}
	[Token(Token = "0x20004F4")]
	public abstract class FrameBase
	{
		[Token(Token = "0x4002308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int frameId;

		[Token(Token = "0x4002309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool hasChanged;

		[Token(Token = "0x6002060")]
		[Address(RVA = "0x1465CE4", Offset = "0x1465CE4", VA = "0x1465CE4")]
		public FrameBase(int frameId)
		{
		}

		[Token(Token = "0x6002061")]
		public abstract void Reset();

		[Token(Token = "0x6002062")]
		public abstract void CopyFrom(FrameBase sourceFrame);

		[Token(Token = "0x6002063")]
		public abstract bool Compare(FrameBase frame, FrameBase holdframe);
	}
	[Token(Token = "0x20004F5")]
	public abstract class SyncObject : MonoBehaviour
	{
		[Token(Token = "0x400230A")]
		public const int VersionMajor = 1;

		[Token(Token = "0x400230B")]
		public const int VersionMinor = 0;

		[Token(Token = "0x400230C")]
		public const int VersionRevision = 14;

		[Token(Token = "0x400230D")]
		public const int Build = 1014;

		[Token(Token = "0x400230E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x91D278", Offset = "0x91D278")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91D278", Offset = "0x91D278")]
		protected int _applyOrder;

		[Token(Token = "0x400230F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[HideInInspector]
		[SerializeField]
		protected int prefabInstanceId;

		[Token(Token = "0x4002310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected NetObjAdapter noa;

		[Token(Token = "0x4002311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected NetObjectLite netObj;

		[Token(Token = "0x4002312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected bool hasInitialization;

		[Token(Token = "0x4002313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Authority authority;

		[Token(Token = "0x170001CD")]
		public int ApplyOrder
		{
			[Token(Token = "0x6002064")]
			[Address(RVA = "0x10ECF90", Offset = "0x10ECF90", VA = "0x10ECF90", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001CE")]
		public NetObjectLite NetObj
		{
			[Token(Token = "0x6002065")]
			[Address(RVA = "0x10ECF98", Offset = "0x10ECF98", VA = "0x10ECF98")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002066")]
		[Address(RVA = "0x10ECFA0", Offset = "0x10ECFA0", VA = "0x10ECFA0", Slot = "5")]
		protected virtual void Reset()
		{
		}

		[Token(Token = "0x6002067")]
		[Address(RVA = "0x10ED12C", Offset = "0x10ED12C", VA = "0x10ED12C", Slot = "6")]
		protected virtual void OnValidate()
		{
		}

		[Token(Token = "0x6002068")]
		[Address(RVA = "0x10ED130", Offset = "0x10ED130", VA = "0x10ED130", Slot = "7")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6002069")]
		[Address(RVA = "0x10ECFA4", Offset = "0x10ECFA4", VA = "0x10ECFA4")]
		private void EnsureRequiredComponents()
		{
		}

		[Token(Token = "0x600206A")]
		private static T GetParentComponent<T>(Transform transform) where T : Component
		{
			return null;
		}

		[Token(Token = "0x600206B")]
		[Address(RVA = "0x10ED178", Offset = "0x10ED178", VA = "0x10ED178", Slot = "8")]
		public virtual bool AmActingAuthority(bool asServer)
		{
			return default(bool);
		}

		[Token(Token = "0x600206C")]
		[Address(RVA = "0x10ED1D8", Offset = "0x10ED1D8", VA = "0x10ED1D8")]
		protected SyncObject()
		{
		}
	}
	[Token(Token = "0x20004F6")]
	public abstract class SyncObject<TFrame> : SyncObject, IOnSnapshot, IOnAuthorityChanged where TFrame : FrameBase
	{
		[Token(Token = "0x4002314")]
		public const int FRAME_CNT = 60;

		[NonSerialized]
		[Token(Token = "0x4002315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly TFrame[] frames;

		[Token(Token = "0x4002316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x91D314", Offset = "0x91D314")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91D314", Offset = "0x91D314")]
		public int keyframeRate;

		[Token(Token = "0x4002317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected TFrame pre2F;

		[Token(Token = "0x4002318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected TFrame pre1F;

		[Token(Token = "0x4002319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected TFrame snapF;

		[Token(Token = "0x400231A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected TFrame targF;

		[Token(Token = "0x400231B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected TFrame nextF;

		[Token(Token = "0x400231C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected bool hadInitialSnapshot;

		[Token(Token = "0x600206D")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600206E")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x600206F")]
		public virtual void OnAuthorityChanged(bool isMine)
		{
		}

		[Token(Token = "0x6002070")]
		public virtual void OnSnapshot(int frameId, bool isActingAuthority, bool initialize)
		{
		}

		[Token(Token = "0x6002071")]
		protected virtual void ConstructMissingFrame(int frameId)
		{
		}

		[Token(Token = "0x6002072")]
		protected abstract void Interpolate(TFrame targ, TFrame start, TFrame end, float t);

		[Token(Token = "0x6002073")]
		protected abstract void Extrapolate();

		[Token(Token = "0x6002074")]
		protected SyncObject()
		{
		}
	}
	[Token(Token = "0x20004F7")]
	[DisallowMultipleComponent]
	public class SimpleSyncAnimator : SyncObject<SimpleSyncAnimator.Frame>, ISyncAnimator, IOnNetSerialize, IOnNetDeserialize, IOnSnapshot, IApplyOrder, IOnInterpolate, IOnCaptureCurrentValues
	{
		[Token(Token = "0x20004F8")]
		public class Frame : FrameBase
		{
			[Token(Token = "0x400233F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SimpleSyncAnimator syncAnimator;

			[Token(Token = "0x4002340")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SmartVar[] parameters;

			[Token(Token = "0x4002341")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int?[] stateHashes;

			[Token(Token = "0x4002342")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool[] layerIsInTransition;

			[Token(Token = "0x4002343")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float[] normalizedTime;

			[Token(Token = "0x4002344")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public float?[] layerWeights;

			[Token(Token = "0x4002345")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Queue<AnimPassThru> passThrus;

			[Token(Token = "0x60020A9")]
			[Address(RVA = "0x136EA7C", Offset = "0x136EA7C", VA = "0x136EA7C")]
			public Frame(SimpleSyncAnimator syncAnimator, int frameId)
			{
			}

			[Token(Token = "0x60020AA")]
			[Address(RVA = "0x136EC48", Offset = "0x136EC48", VA = "0x136EC48", Slot = "6")]
			public override bool Compare(FrameBase frame, FrameBase holdframe)
			{
				return default(bool);
			}

			[Token(Token = "0x60020AB")]
			[Address(RVA = "0x136EC88", Offset = "0x136EC88", VA = "0x136EC88", Slot = "5")]
			public override void CopyFrom(FrameBase sourceFrame)
			{
			}

			[Token(Token = "0x60020AC")]
			[Address(RVA = "0x136EE94", Offset = "0x136EE94", VA = "0x136EE94", Slot = "4")]
			public override void Reset()
			{
			}
		}

		[Token(Token = "0x400231D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<int, Dictionary<int, int>> masterSharedTriggHashes;

		[Token(Token = "0x400231E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<int, List<int>> masterSharedTriggIndexes;

		[Token(Token = "0x400231F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public List<int> sharedTriggIndexes;

		[Token(Token = "0x4002320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Dictionary<int, int> sharedTriggHashes;

		[Token(Token = "0x4002321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Dictionary<int, Dictionary<int, int>> masterSharedStateHashes;

		[Token(Token = "0x4002322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Dictionary<int, List<int>> masterSharedStateIndexes;

		[Token(Token = "0x4002323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[HideInInspector]
		public List<int> sharedStateIndexes;

		[Token(Token = "0x4002324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Dictionary<int, int> sharedStateHashes;

		[Token(Token = "0x4002325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91D38C", Offset = "0x91D38C")]
		public Animator animator;

		[Token(Token = "0x4002326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91D3C4", Offset = "0x91D3C4")]
		public bool autoRootMotion;

		[Token(Token = "0x4002327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		[HideInInspector]
		public bool syncPassThrus;

		[Token(Token = "0x4002328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[HideInInspector]
		public NormalizedFloatCompression passthruNormTimeCompress;

		[Token(Token = "0x4002329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[HideInInspector]
		public bool syncStates;

		[Token(Token = "0x400232A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[HideInInspector]
		public NormalizedFloatCompression normalizedTimeCompress;

		[Token(Token = "0x400232B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[HideInInspector]
		public bool syncLayers;

		[Token(Token = "0x400232C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
		[HideInInspector]
		public bool syncLayerWeights;

		[Token(Token = "0x400232D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[HideInInspector]
		public NormalizedFloatCompression layerWeightCompress;

		[NonSerialized]
		[Token(Token = "0x400232E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public int layerCount;

		[Token(Token = "0x400232F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[HideInInspector]
		public bool syncParams;

		[Token(Token = "0x4002330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBD")]
		[HideInInspector]
		public bool useGlobalParamSettings;

		[Token(Token = "0x4002331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static Dictionary<int, ParameterDefaults> masterSharedParamDefaults;

		[Token(Token = "0x4002332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[HideInInspector]
		public ParameterDefaults sharedParamDefaults;

		[Token(Token = "0x4002333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static Dictionary<int, ParameterSettings[]> masterSharedParamSettings;

		[Token(Token = "0x4002334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[HideInInspector]
		public ParameterSettings[] sharedParamSettings;

		[Token(Token = "0x4002335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[HideInInspector]
		public int paramCount;

		[Token(Token = "0x4002336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private int bitsForTriggerIndex;

		[Token(Token = "0x4002337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private int bitsForStateIndex;

		[Token(Token = "0x4002338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private int bitsForLayerIndex;

		[Token(Token = "0x4002339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool defaultRootMotion;

		[Token(Token = "0x400233A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private int[] lastAnimationHash;

		[Token(Token = "0x400233B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private uint[] lastLayerWeight;

		[Token(Token = "0x400233C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private SmartVar[] lastSentParams;

		[Token(Token = "0x400233D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Frame currentFrame;

		[Token(Token = "0x400233E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private readonly Queue<AnimPassThru> passThruQueue;

		[Token(Token = "0x6002075")]
		[Address(RVA = "0x10AF298", Offset = "0x10AF298", VA = "0x10AF298", Slot = "5")]
		protected override void Reset()
		{
		}

		[Token(Token = "0x6002076")]
		[Address(RVA = "0x10AF344", Offset = "0x10AF344", VA = "0x10AF344", Slot = "7")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002077")]
		[Address(RVA = "0x10B0098", Offset = "0x10B0098", VA = "0x10B0098")]
		private void Start()
		{
		}

		[Token(Token = "0x6002078")]
		[Address(RVA = "0x10B0190", Offset = "0x10B0190", VA = "0x10B0190", Slot = "12")]
		public override void OnAuthorityChanged(bool isMine)
		{
		}

		[Token(Token = "0x6002079")]
		[Address(RVA = "0x10B00D0", Offset = "0x10B00D0", VA = "0x10B00D0")]
		private void AutoRootMotion(bool isMine)
		{
		}

		[Token(Token = "0x600207A")]
		[Address(RVA = "0x10AF460", Offset = "0x10AF460", VA = "0x10AF460")]
		private void Initialize()
		{
		}

		[Token(Token = "0x600207B")]
		[Address(RVA = "0x10AF700", Offset = "0x10AF700", VA = "0x10AF700")]
		private void ConnectSharedCaches()
		{
		}

		[Token(Token = "0x600207C")]
		[Address(RVA = "0x10B01FC", Offset = "0x10B01FC", VA = "0x10B01FC", Slot = "17")]
		public SerializationFlags OnNetSerialize(int frameId, byte[] buffer, ref int bitposition)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x600207D")]
		[Address(RVA = "0x10B0430", Offset = "0x10B0430", VA = "0x10B0430", Slot = "18")]
		public void OnNetDeserialize(int sourceFrameId, int originFrameId, int localFrameId, byte[] buffer, ref int bitposition)
		{
		}

		[Token(Token = "0x600207E")]
		[Address(RVA = "0x10B0618", Offset = "0x10B0618", VA = "0x10B0618", Slot = "22")]
		public virtual void OnCaptureCurrentValues(int frameId, bool amActingAuthority, Realm realm)
		{
		}

		[Token(Token = "0x600207F")]
		[Address(RVA = "0x10B0358", Offset = "0x10B0358", VA = "0x10B0358")]
		private SerializationFlags WriteAllToBuffer(Frame frame, byte[] buffer, ref int bitposition, bool isKeyframe)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6002080")]
		[Address(RVA = "0x10B054C", Offset = "0x10B054C", VA = "0x10B054C")]
		private void ReadAllFromBuffer(Frame frame, byte[] buffer, ref int bitposition, bool isKeyframe)
		{
		}

		[Token(Token = "0x6002081")]
		[Address(RVA = "0x10B0FEC", Offset = "0x10B0FEC", VA = "0x10B0FEC")]
		private SerializationFlags WriteParameters(Frame frame, byte[] buffer, ref int bitposition, bool isKeyframe)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6002082")]
		[Address(RVA = "0x10B06B8", Offset = "0x10B06B8", VA = "0x10B06B8")]
		private void CaptureParameters(Frame frame)
		{
		}

		[Token(Token = "0x6002083")]
		[Address(RVA = "0x10B1D88", Offset = "0x10B1D88", VA = "0x10B1D88")]
		private void ReadParameters(Frame frame, byte[] buffer, ref int bitposition, bool isKeyframe)
		{
		}

		[Token(Token = "0x6002084")]
		[Address(RVA = "0x10B26DC", Offset = "0x10B26DC", VA = "0x10B26DC")]
		private void CompleteTargetParameters()
		{
		}

		[Token(Token = "0x6002085")]
		[Address(RVA = "0x10B27B0", Offset = "0x10B27B0", VA = "0x10B27B0")]
		private void InterpolateParams(float t)
		{
		}

		[Token(Token = "0x6002086")]
		[Address(RVA = "0x10B2BE0", Offset = "0x10B2BE0", VA = "0x10B2BE0")]
		private void ExtrapolateParams(Frame prev, Frame targ, Frame newtarg)
		{
		}

		[Token(Token = "0x6002087")]
		[Address(RVA = "0x10B2F08", Offset = "0x10B2F08", VA = "0x10B2F08")]
		private void EnqueuePassthrough(PassThruType type, int hash, int layer, float ntime, float otime, float duration, LocalApplyTiming localApplyTiming)
		{
		}

		[Token(Token = "0x6002088")]
		[Address(RVA = "0x10B3100", Offset = "0x10B3100", VA = "0x10B3100")]
		public void SetTrigger(string triggerName, LocalApplyTiming localApplyTiming = LocalApplyTiming.OnSend)
		{
		}

		[Token(Token = "0x6002089")]
		[Address(RVA = "0x10B314C", Offset = "0x10B314C", VA = "0x10B314C")]
		public void SetTrigger(int hash, LocalApplyTiming localApplyTiming = LocalApplyTiming.OnSend)
		{
		}

		[Token(Token = "0x600208A")]
		[Address(RVA = "0x10B316C", Offset = "0x10B316C", VA = "0x10B316C")]
		public void ResetTrigger(string triggerName, LocalApplyTiming localApplyTiming = LocalApplyTiming.OnSend)
		{
		}

		[Token(Token = "0x600208B")]
		[Address(RVA = "0x10B31B8", Offset = "0x10B31B8", VA = "0x10B31B8")]
		public void ResetTrigger(int hash, LocalApplyTiming localApplyTiming = LocalApplyTiming.OnSend)
		{
		}

		[Token(Token = "0x600208C")]
		[Address(RVA = "0x10B31D8", Offset = "0x10B31D8", VA = "0x10B31D8")]
		public void Play(string stateName, int layer = -1, float normalizedTime = 0f, LocalApplyTiming localApplyTiming = LocalApplyTiming.OnSend)
		{
		}

		[Token(Token = "0x600208D")]
		[Address(RVA = "0x10B323C", Offset = "0x10B323C", VA = "0x10B323C")]
		public void Play(int hash, int layer = -1, float normalizedTime = 0f, LocalApplyTiming localApplyTiming = LocalApplyTiming.OnSend)
		{
		}

		[Token(Token = "0x600208E")]
		[Address(RVA = "0x10B3258", Offset = "0x10B3258", VA = "0x10B3258")]
		public void PlayInFixedTime(string stateName, int layer = -1, float fixedTime = 0f, LocalApplyTiming localApplyTiming = LocalApplyTiming.OnSend)
		{
		}

		[Token(Token = "0x600208F")]
		[Address(RVA = "0x10B32BC", Offset = "0x10B32BC", VA = "0x10B32BC")]
		public void PlayInFixedTime(int hash, int layer = -1, float fixedTime = 0f, LocalApplyTiming localApplyTiming = LocalApplyTiming.OnSend)
		{
		}

		[Token(Token = "0x6002090")]
		[Address(RVA = "0x10B32DC", Offset = "0x10B32DC", VA = "0x10B32DC")]
		public void CrossFade(string stateName, float duration, int layer = -1, float normalizedTime = 0f, LocalApplyTiming localApplyTiming = LocalApplyTiming.OnSend)
		{
		}

		[Token(Token = "0x6002091")]
		[Address(RVA = "0x10B3344", Offset = "0x10B3344", VA = "0x10B3344")]
		public void CrossFade(int hash, float duration, int layer = -1, float normalizedTime = 0f, LocalApplyTiming localApplyTiming = LocalApplyTiming.OnSend)
		{
		}

		[Token(Token = "0x6002092")]
		[Address(RVA = "0x10B3368", Offset = "0x10B3368", VA = "0x10B3368")]
		public void CrossFadeInFixedTime(string stateName, float duration, int layer = -1, float fixedTime = 0f, LocalApplyTiming localApplyTiming = LocalApplyTiming.OnSend)
		{
		}

		[Token(Token = "0x6002093")]
		[Address(RVA = "0x10B33D0", Offset = "0x10B33D0", VA = "0x10B33D0")]
		public void CrossFadeInFixedTime(int hash, float duration, int layer = -1, float fixedTime = 0f, LocalApplyTiming localApplyTiming = LocalApplyTiming.OnSend)
		{
		}

		[Token(Token = "0x6002094")]
		[Address(RVA = "0x10B33EC", Offset = "0x10B33EC", VA = "0x10B33EC")]
		private void ExecutePassThruQueue(Frame frame)
		{
		}

		[Token(Token = "0x6002095")]
		[Address(RVA = "0x10B3028", Offset = "0x10B3028", VA = "0x10B3028")]
		private void ExecutePassThru(AnimPassThru pt)
		{
		}

		[Token(Token = "0x6002096")]
		[Address(RVA = "0x10B0CB4", Offset = "0x10B0CB4", VA = "0x10B0CB4")]
		private SerializationFlags WritePassThrus(Frame frame, byte[] buffer, ref int bitposition, bool isKeyframe)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6002097")]
		[Address(RVA = "0x10B08A8", Offset = "0x10B08A8", VA = "0x10B08A8")]
		private void CapturePassThrus(Frame frame)
		{
		}

		[Token(Token = "0x6002098")]
		[Address(RVA = "0x10B1A34", Offset = "0x10B1A34", VA = "0x10B1A34")]
		private void ReadPassThrus(Frame frame, byte[] buffer, ref int bitposition, bool isKeyframe)
		{
		}

		[Token(Token = "0x6002099")]
		[Address(RVA = "0x10B0998", Offset = "0x10B0998", VA = "0x10B0998")]
		private void CaptureStates(Frame frame)
		{
		}

		[Token(Token = "0x600209A")]
		[Address(RVA = "0x10B1490", Offset = "0x10B1490", VA = "0x10B1490")]
		private SerializationFlags WriteStates(Frame frame, byte[] buffer, ref int bitposition, bool isKeyframe)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x600209B")]
		[Address(RVA = "0x10B206C", Offset = "0x10B206C", VA = "0x10B206C")]
		private void ReadStates(Frame frame, byte[] buffer, ref int bitposition, bool isKeyframe)
		{
		}

		[Token(Token = "0x600209C")]
		[Address(RVA = "0x10B34C0", Offset = "0x10B34C0", VA = "0x10B34C0")]
		private void ApplyState()
		{
		}

		[Token(Token = "0x600209D")]
		[Address(RVA = "0x10B0BCC", Offset = "0x10B0BCC", VA = "0x10B0BCC")]
		private void CaptureLayerWeights(Frame frame)
		{
		}

		[Token(Token = "0x600209E")]
		[Address(RVA = "0x10B17D8", Offset = "0x10B17D8", VA = "0x10B17D8")]
		private SerializationFlags WriteLayerWeights(Frame frame, byte[] buffer, ref int bitposition, bool isKeyframe)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x600209F")]
		[Address(RVA = "0x10B22B8", Offset = "0x10B22B8", VA = "0x10B22B8")]
		private void ReadLayerWeights(Frame frame, byte[] buffer, ref int bitposition, bool isKeyframe)
		{
		}

		[Token(Token = "0x60020A0")]
		[Address(RVA = "0x10B3658", Offset = "0x10B3658", VA = "0x10B3658")]
		private void ApplyLayerWeights()
		{
		}

		[Token(Token = "0x60020A1")]
		[Address(RVA = "0x10B377C", Offset = "0x10B377C", VA = "0x10B377C", Slot = "13")]
		public override void OnSnapshot(int newTargetFrameId, bool isActingAuthority, bool initialize)
		{
		}

		[Token(Token = "0x60020A2")]
		[Address(RVA = "0x10B3890", Offset = "0x10B3890", VA = "0x10B3890", Slot = "20")]
		public void OnInterpolate(float t)
		{
		}

		[Token(Token = "0x60020A3")]
		[Address(RVA = "0x10B38F4", Offset = "0x10B38F4", VA = "0x10B38F4", Slot = "15")]
		protected override void Interpolate(Frame targFrame, Frame startFrame, Frame endFrame, float t)
		{
		}

		[Token(Token = "0x60020A4")]
		[Address(RVA = "0x10B3AFC", Offset = "0x10B3AFC", VA = "0x10B3AFC", Slot = "16")]
		protected override void Extrapolate()
		{
		}

		[Token(Token = "0x60020A5")]
		[Address(RVA = "0x10B3B28", Offset = "0x10B3B28", VA = "0x10B3B28")]
		private void ExtrapolateState()
		{
		}

		[Token(Token = "0x60020A6")]
		[Address(RVA = "0x10B3960", Offset = "0x10B3960", VA = "0x10B3960")]
		private void InterpolateState(Frame targFrame, Frame strFrame, Frame endFrame, float t)
		{
		}

		[Token(Token = "0x60020A7")]
		[Address(RVA = "0x10B3B9C", Offset = "0x10B3B9C", VA = "0x10B3B9C")]
		public SimpleSyncAnimator()
		{
		}
	}
	[Token(Token = "0x20004F9")]
	[DisallowMultipleComponent]
	public class SimpleSyncTransform : SyncObject<SimpleSyncTransform.Frame>, ISyncTransform, IOnNetSerialize, IOnNetDeserialize, IApplyOrder, IOnSnapshot, IOnInterpolate, IOnCaptureCurrentValues, IOnAuthorityChanged
	{
		[Token(Token = "0x20004FA")]
		public class Frame : FrameBase
		{
			[Token(Token = "0x4002356")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
			public bool hasTeleported;

			[Token(Token = "0x4002357")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Matrix m;

			[Token(Token = "0x4002358")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CompressedMatrix cm;

			[Token(Token = "0x4002359")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SimpleSyncTransform owner;

			[Token(Token = "0x60020BC")]
			[Address(RVA = "0x136EF40", Offset = "0x136EF40", VA = "0x136EF40")]
			public Frame(SimpleSyncTransform sst, int frameId)
			{
			}

			[Token(Token = "0x60020BD")]
			[Address(RVA = "0x136F014", Offset = "0x136F014", VA = "0x136F014", Slot = "5")]
			public override void CopyFrom(FrameBase sourceFrame)
			{
			}

			[Token(Token = "0x60020BE")]
			[Address(RVA = "0x136F0C4", Offset = "0x136F0C4", VA = "0x136F0C4", Slot = "6")]
			public override bool Compare(FrameBase frame, FrameBase holdframe)
			{
				return default(bool);
			}

			[Token(Token = "0x60020BF")]
			[Address(RVA = "0x136F104", Offset = "0x136F104", VA = "0x136F104")]
			public bool FastCompareCompressed(Frame other)
			{
				return default(bool);
			}

			[Token(Token = "0x60020C0")]
			[Address(RVA = "0x136F12C", Offset = "0x136F12C", VA = "0x136F12C")]
			public bool FastCompareUncompressed(Frame other)
			{
				return default(bool);
			}

			[Token(Token = "0x60020C1")]
			[Address(RVA = "0x136F210", Offset = "0x136F210", VA = "0x136F210", Slot = "4")]
			public override void Reset()
			{
			}

			[Token(Token = "0x60020C2")]
			[Address(RVA = "0x136F218", Offset = "0x136F218", VA = "0x136F218", Slot = "3")]
			public override string ToString()
			{
				return null;
			}
		}

		[Token(Token = "0x4002346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91D4BC", Offset = "0x91D4BC")]
		public float teleportThreshold;

		[Token(Token = "0x4002347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float teleportThresholdSqrMag;

		[Token(Token = "0x4002348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91D4F4", Offset = "0x91D4F4")]
		public bool teleportExtrapolate;

		[Token(Token = "0x4002349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91D52C", Offset = "0x91D52C")]
		public Interpolation interpolation;

		[Token(Token = "0x400234A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91D564", Offset = "0x91D564")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x91D564", Offset = "0x91D564")]
		public float extrapolateRatio;

		[Token(Token = "0x400234B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected int extrapolationCount;

		[Token(Token = "0x400234C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91D5B8", Offset = "0x91D5B8")]
		public bool autoKinematic;

		[Token(Token = "0x400234D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Dictionary<int, TransformCrusher> masterSharedCrushers;

		[Token(Token = "0x400234E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public TransformCrusher transformCrusher;

		[Token(Token = "0x400234F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool hasTeleported;

		[Token(Token = "0x4002350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Rigidbody rb;

		[Token(Token = "0x4002351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Rigidbody2D rb2d;

		[Token(Token = "0x4002352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private bool rbDefaultKinematic;

		[Token(Token = "0x4002353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private RigidbodyInterpolation rbDefaultInterp;

		[Token(Token = "0x4002354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private RigidbodyInterpolation2D rb2dDefaultInterp;

		[Token(Token = "0x4002355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Frame prevSentFrame;

		[Token(Token = "0x170001CF")]
		public bool HasTeleported
		{
			[Token(Token = "0x60020AD")]
			[Address(RVA = "0x10B3EB4", Offset = "0x10B3EB4", VA = "0x10B3EB4")]
			set
			{
			}
		}

		[Token(Token = "0x60020AE")]
		[Address(RVA = "0x10B3EC0", Offset = "0x10B3EC0", VA = "0x10B3EC0", Slot = "5")]
		protected override void Reset()
		{
		}

		[Token(Token = "0x60020AF")]
		[Address(RVA = "0x10B3FC4", Offset = "0x10B3FC4", VA = "0x10B3FC4", Slot = "7")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60020B0")]
		[Address(RVA = "0x10B4210", Offset = "0x10B4210", VA = "0x10B4210")]
		private void ConnectSharedCaches()
		{
		}

		[Token(Token = "0x60020B1")]
		[Address(RVA = "0x10B42D0", Offset = "0x10B42D0", VA = "0x10B42D0")]
		private void Start()
		{
		}

		[Token(Token = "0x60020B2")]
		[Address(RVA = "0x10B44D4", Offset = "0x10B44D4", VA = "0x10B44D4", Slot = "12")]
		public override void OnAuthorityChanged(bool isMine)
		{
		}

		[Token(Token = "0x60020B3")]
		[Address(RVA = "0x10B4368", Offset = "0x10B4368", VA = "0x10B4368")]
		public void ApplyAutoKinematic(bool isMine)
		{
		}

		[Token(Token = "0x60020B4")]
		[Address(RVA = "0x10B4540", Offset = "0x10B4540", VA = "0x10B4540", Slot = "17")]
		public SerializationFlags OnNetSerialize(int frameId, byte[] buffer, ref int bitposition)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x60020B5")]
		[Address(RVA = "0x10B4738", Offset = "0x10B4738", VA = "0x10B4738", Slot = "18")]
		public void OnNetDeserialize(int sourceFrameId, int originFrameId, int localFrameId, byte[] buffer, ref int bitposition)
		{
		}

		[Token(Token = "0x60020B6")]
		[Address(RVA = "0x10B4954", Offset = "0x10B4954", VA = "0x10B4954", Slot = "22")]
		public virtual void OnCaptureCurrentValues(int frameId, bool amActingAuthority, Realm realm)
		{
		}

		[Token(Token = "0x60020B7")]
		[Address(RVA = "0x10B4A54", Offset = "0x10B4A54", VA = "0x10B4A54", Slot = "13")]
		public override void OnSnapshot(int newTargetFrameId, bool isActingAuthority, bool initialize)
		{
		}

		[Token(Token = "0x60020B8")]
		[Address(RVA = "0x10B4C18", Offset = "0x10B4C18", VA = "0x10B4C18", Slot = "20")]
		public void OnInterpolate(float t)
		{
		}

		[Token(Token = "0x60020B9")]
		[Address(RVA = "0x10B4E94", Offset = "0x10B4E94", VA = "0x10B4E94", Slot = "15")]
		protected override void Interpolate(Frame targ, Frame start, Frame end, float t)
		{
		}

		[Token(Token = "0x60020BA")]
		[Address(RVA = "0x10B4F3C", Offset = "0x10B4F3C", VA = "0x10B4F3C", Slot = "16")]
		protected override void Extrapolate()
		{
		}

		[Token(Token = "0x60020BB")]
		[Address(RVA = "0x10B5008", Offset = "0x10B5008", VA = "0x10B5008")]
		public SimpleSyncTransform()
		{
		}
	}
	[Token(Token = "0x20004FB")]
	public enum LocalApplyTiming
	{
		[Token(Token = "0x400235B")]
		Never,
		[Token(Token = "0x400235C")]
		Immediately,
		[Token(Token = "0x400235D")]
		OnSend
	}
	[Token(Token = "0x20004FC")]
	public enum PassThruType
	{
		[Token(Token = "0x400235F")]
		SetTrigger,
		[Token(Token = "0x4002360")]
		ResetTrigger,
		[Token(Token = "0x4002361")]
		Play,
		[Token(Token = "0x4002362")]
		PlayFixed,
		[Token(Token = "0x4002363")]
		CrossFade,
		[Token(Token = "0x4002364")]
		CrossFadeFixed
	}
	[Token(Token = "0x20004FD")]
	public struct AnimPassThru
	{
		[Token(Token = "0x4002365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public PassThruType passThruType;

		[Token(Token = "0x4002366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int hash;

		[Token(Token = "0x4002367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float normlTime;

		[Token(Token = "0x4002368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float fixedTime;

		[Token(Token = "0x4002369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float duration;

		[Token(Token = "0x400236A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int layer;

		[Token(Token = "0x400236B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LocalApplyTiming localApplyTiming;

		[Token(Token = "0x60020C3")]
		[Address(RVA = "0x184F3D8", Offset = "0x184F3D8", VA = "0x184F3D8")]
		public AnimPassThru(PassThruType triggerType, int hash, int layer, float normTime, float fixedTime, float duration, LocalApplyTiming localApplyTiming = LocalApplyTiming.OnSend)
		{
		}
	}
	[Token(Token = "0x20004FE")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x918A38", Offset = "0x918A38")]
	public abstract class GenericNetworkBehaviour : MonoBehaviour
	{
		[Token(Token = "0x400236C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected NetObjectLite netObj;

		[Token(Token = "0x400236D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected PhotonView pv;

		[Token(Token = "0x170001D0")]
		public bool IsMine
		{
			[Token(Token = "0x60020C5")]
			[Address(RVA = "0x147644C", Offset = "0x147644C", VA = "0x147644C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001D1")]
		public int NetId
		{
			[Token(Token = "0x60020C6")]
			[Address(RVA = "0x1476468", Offset = "0x1476468", VA = "0x1476468")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001D2")]
		public static bool UsingPUN
		{
			[Token(Token = "0x60020C7")]
			[Address(RVA = "0x14764F0", Offset = "0x14764F0", VA = "0x14764F0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001D3")]
		public bool AsServer
		{
			[Token(Token = "0x60020C8")]
			[Address(RVA = "0x14764F8", Offset = "0x14764F8", VA = "0x14764F8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001D4")]
		public bool AmServer
		{
			[Token(Token = "0x60020C9")]
			[Address(RVA = "0x1476500", Offset = "0x1476500", VA = "0x1476500")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001D5")]
		public bool AmClient
		{
			[Token(Token = "0x60020CA")]
			[Address(RVA = "0x147655C", Offset = "0x147655C", VA = "0x147655C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001D6")]
		public bool AmConnectedAndReady
		{
			[Token(Token = "0x60020CB")]
			[Address(RVA = "0x14765F0", Offset = "0x14765F0", VA = "0x14765F0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60020C4")]
		[Address(RVA = "0x1476348", Offset = "0x1476348", VA = "0x1476348", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60020CC")]
		[Address(RVA = "0x147664C", Offset = "0x147664C", VA = "0x147664C")]
		protected GenericNetworkBehaviour()
		{
		}
	}
	[Token(Token = "0x20004FF")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x918A98", Offset = "0x918A98")]
	[DisallowMultipleComponent]
	public class NetObjAdapter : MonoBehaviourPunCallbacks, IPunOwnershipCallbacks
	{
		[Token(Token = "0x400236E")]
		public const string ADAPTER_NAME = "PUN2";

		[Token(Token = "0x400236F")]
		public const int CONN_TO_SELF_ID = 0;

		[Token(Token = "0x4002370")]
		public const int CONN_NULL = -1;

		[Token(Token = "0x4002371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PhotonView pv;

		[Token(Token = "0x4002372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private NetObjectLite netObj;

		[Token(Token = "0x4002373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEngine.Object identityObject;

		[Token(Token = "0x4002374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly List<IOnConnect> iOnConnect;

		[Token(Token = "0x4002375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly List<IOnStartLocalPlayer> iOnStartLocalPlayer;

		[Token(Token = "0x4002376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly List<IOnNetworkDestroy> iOnNetworkDestroy;

		[Token(Token = "0x4002377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly List<IOnStart> iOnStart;

		[Token(Token = "0x4002378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly List<IOnNetSerialize> iOnNetSerialize;

		[Token(Token = "0x4002379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private readonly List<IOnNetDeserialize> iOnNetDeserialize;

		[Token(Token = "0x170001D7")]
		public bool IsLocalPlayer
		{
			[Token(Token = "0x60020CD")]
			[Address(RVA = "0xCB40D0", Offset = "0xCB40D0", VA = "0xCB40D0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001D8")]
		public bool IsMine
		{
			[Token(Token = "0x60020CE")]
			[Address(RVA = "0xCB40EC", Offset = "0xCB40EC", VA = "0xCB40EC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001D9")]
		public bool IsMasterOwned
		{
			[Token(Token = "0x60020CF")]
			[Address(RVA = "0xCB4108", Offset = "0xCB4108", VA = "0xCB4108")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001DA")]
		public ulong NetId
		{
			[Token(Token = "0x60020D0")]
			[Address(RVA = "0xCB4134", Offset = "0xCB4134", VA = "0xCB4134")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x170001DB")]
		public int ClientId
		{
			[Token(Token = "0x60020D1")]
			[Address(RVA = "0xCB4150", Offset = "0xCB4150", VA = "0xCB4150")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001DC")]
		public int ConnId
		{
			[Token(Token = "0x60020D2")]
			[Address(RVA = "0xCB417C", Offset = "0xCB417C", VA = "0xCB417C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60020D3")]
		[Address(RVA = "0xCB41D0", Offset = "0xCB41D0", VA = "0xCB41D0")]
		public void CollectCallbackInterfaces()
		{
		}

		[Token(Token = "0x60020D4")]
		[Address(RVA = "0xCB42EC", Offset = "0xCB42EC", VA = "0xCB42EC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60020D5")]
		[Address(RVA = "0xCB436C", Offset = "0xCB436C", VA = "0xCB436C")]
		private void Start()
		{
		}

		[Token(Token = "0x60020D6")]
		[Address(RVA = "0xCB46A8", Offset = "0xCB46A8", VA = "0xCB46A8", Slot = "45")]
		public override void OnConnectedToMaster()
		{
		}

		[Token(Token = "0x60020D7")]
		[Address(RVA = "0xCB4838", Offset = "0xCB4838", VA = "0xCB4838", Slot = "32")]
		public override void OnMasterClientSwitched(Photon.Realtime.Player newMasterClient)
		{
		}

		[Token(Token = "0x60020D8")]
		[Address(RVA = "0xCB483C", Offset = "0xCB483C", VA = "0xCB483C", Slot = "41")]
		public override void OnJoinedRoom()
		{
		}

		[Token(Token = "0x60020D9")]
		[Address(RVA = "0xCB4840", Offset = "0xCB4840", VA = "0xCB4840", Slot = "38")]
		public override void OnDisconnected(DisconnectCause cause)
		{
		}

		[Token(Token = "0x60020DA")]
		[Address(RVA = "0xCB49C8", Offset = "0xCB49C8", VA = "0xCB49C8", Slot = "54")]
		public void OnOwnershipRequest(PhotonView targetView, Photon.Realtime.Player requestingPlayer)
		{
		}

		[Token(Token = "0x60020DB")]
		[Address(RVA = "0xCB49CC", Offset = "0xCB49CC", VA = "0xCB49CC", Slot = "55")]
		public void OnOwnershipTransfered(PhotonView targetView, Photon.Realtime.Player previousOwner)
		{
		}

		[Token(Token = "0x60020DC")]
		[Address(RVA = "0xCB4B8C", Offset = "0xCB4B8C", VA = "0xCB4B8C")]
		public NetObjAdapter()
		{
		}
	}
}
namespace emotitron.Compression
{
	[Serializable]
	[Token(Token = "0x2000500")]
	public abstract class LiteCrusher
	{
		[Token(Token = "0x400237A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		protected int bits;

		[Token(Token = "0x60020DD")]
		[Address(RVA = "0x113DC84", Offset = "0x113DC84", VA = "0x113DC84")]
		public static int GetBitsForMaxValue(uint maxvalue)
		{
			return default(int);
		}

		[Token(Token = "0x60020DE")]
		[Address(RVA = "0x113DCA8", Offset = "0x113DCA8", VA = "0x113DCA8")]
		protected LiteCrusher()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000501")]
	public abstract class LiteCrusher<T> : LiteCrusher where T : struct
	{
		[Token(Token = "0x60020DF")]
		public abstract ulong Encode(T val);

		[Token(Token = "0x60020E0")]
		public abstract T Decode(uint val);

		[Token(Token = "0x60020E1")]
		public abstract ulong WriteValue(T val, byte[] buffer, ref int bitposition);

		[Token(Token = "0x60020E2")]
		public abstract void WriteCValue(uint val, byte[] buffer, ref int bitposition);

		[Token(Token = "0x60020E3")]
		public abstract T ReadValue(byte[] buffer, ref int bitposition);

		[Token(Token = "0x60020E4")]
		protected LiteCrusher()
		{
		}
	}
	[Token(Token = "0x2000502")]
	public enum LiteFloatCompressType
	{
		[Token(Token = "0x400237C")]
		Bits2 = 2,
		[Token(Token = "0x400237D")]
		Bits3 = 3,
		[Token(Token = "0x400237E")]
		Bits4 = 4,
		[Token(Token = "0x400237F")]
		Bits5 = 5,
		[Token(Token = "0x4002380")]
		Bits6 = 6,
		[Token(Token = "0x4002381")]
		Bits7 = 7,
		[Token(Token = "0x4002382")]
		Bits8 = 8,
		[Token(Token = "0x4002383")]
		Bits9 = 9,
		[Token(Token = "0x4002384")]
		Bits10 = 10,
		[Token(Token = "0x4002385")]
		Bits12 = 12,
		[Token(Token = "0x4002386")]
		Bits14 = 14,
		[Token(Token = "0x4002387")]
		Half16 = 16,
		[Token(Token = "0x4002388")]
		Full32 = 32
	}
	[Serializable]
	[Token(Token = "0x2000503")]
	public class LiteFloatCrusher : LiteCrusher<float>
	{
		[Token(Token = "0x4002389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		protected float min;

		[Token(Token = "0x400238A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected float max;

		[Token(Token = "0x400238B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		public LiteFloatCompressType compressType;

		[Token(Token = "0x400238C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool accurateCenter;

		[Token(Token = "0x400238D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float encoder;

		[Token(Token = "0x400238E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float decoder;

		[Token(Token = "0x400238F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ulong maxCVal;

		[Token(Token = "0x60020E5")]
		[Address(RVA = "0x113DCB0", Offset = "0x113DCB0", VA = "0x113DCB0")]
		public LiteFloatCrusher()
		{
		}

		[Token(Token = "0x60020E6")]
		[Address(RVA = "0x113DDAC", Offset = "0x113DDAC", VA = "0x113DDAC")]
		public LiteFloatCrusher(LiteFloatCompressType compressType, float min, float max, bool accurateCenter)
		{
		}

		[Token(Token = "0x60020E7")]
		[Address(RVA = "0x113DD44", Offset = "0x113DD44", VA = "0x113DD44")]
		public static void Recalculate(LiteFloatCompressType compressType, float min, float max, bool accurateCenter, ref int bits, ref float encoder, ref float decoder, ref ulong maxCVal)
		{
		}

		[Token(Token = "0x60020E8")]
		[Address(RVA = "0x113DEA0", Offset = "0x113DEA0", VA = "0x113DEA0", Slot = "4")]
		public override ulong Encode(float val)
		{
			return default(ulong);
		}

		[Token(Token = "0x60020E9")]
		[Address(RVA = "0x113DF7C", Offset = "0x113DF7C", VA = "0x113DF7C", Slot = "5")]
		public override float Decode(uint cval)
		{
			return default(float);
		}

		[Token(Token = "0x60020EA")]
		[Address(RVA = "0x113E05C", Offset = "0x113E05C", VA = "0x113E05C", Slot = "6")]
		public override ulong WriteValue(float val, byte[] buffer, ref int bitposition)
		{
			return default(ulong);
		}

		[Token(Token = "0x60020EB")]
		[Address(RVA = "0x113E14C", Offset = "0x113E14C", VA = "0x113E14C", Slot = "7")]
		public override void WriteCValue(uint cval, byte[] buffer, ref int bitposition)
		{
		}

		[Token(Token = "0x60020EC")]
		[Address(RVA = "0x113E174", Offset = "0x113E174", VA = "0x113E174", Slot = "8")]
		public override float ReadValue(byte[] buffer, ref int bitposition)
		{
			return default(float);
		}

		[Token(Token = "0x60020ED")]
		[Address(RVA = "0x113E260", Offset = "0x113E260", VA = "0x113E260", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000504")]
	public enum LiteIntCompressType
	{
		[Token(Token = "0x4002391")]
		PackSigned,
		[Token(Token = "0x4002392")]
		PackUnsigned,
		[Token(Token = "0x4002393")]
		Range
	}
	[Serializable]
	[Token(Token = "0x2000505")]
	public class LiteIntCrusher : LiteCrusher<int>
	{
		[Token(Token = "0x4002394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		public LiteIntCompressType compressType;

		[Token(Token = "0x4002395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected int min;

		[Token(Token = "0x4002396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		protected int max;

		[Token(Token = "0x4002397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int smallest;

		[Token(Token = "0x4002398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private int biggest;

		[Token(Token = "0x60020EE")]
		[Address(RVA = "0x113E5C4", Offset = "0x113E5C4", VA = "0x113E5C4")]
		public LiteIntCrusher()
		{
		}

		[Token(Token = "0x60020EF")]
		[Address(RVA = "0x113E668", Offset = "0x113E668", VA = "0x113E668")]
		public LiteIntCrusher(LiteIntCompressType comType = LiteIntCompressType.PackSigned, int min = -128, int max = 127)
		{
		}

		[Token(Token = "0x60020F0")]
		[Address(RVA = "0x113E718", Offset = "0x113E718", VA = "0x113E718", Slot = "6")]
		public override ulong WriteValue(int val, byte[] buffer, ref int bitposition)
		{
			return default(ulong);
		}

		[Token(Token = "0x60020F1")]
		[Address(RVA = "0x113E7BC", Offset = "0x113E7BC", VA = "0x113E7BC", Slot = "7")]
		public override void WriteCValue(uint cval, byte[] buffer, ref int bitposition)
		{
		}

		[Token(Token = "0x60020F2")]
		[Address(RVA = "0x113E80C", Offset = "0x113E80C", VA = "0x113E80C", Slot = "8")]
		public override int ReadValue(byte[] buffer, ref int bitposition)
		{
			return default(int);
		}

		[Token(Token = "0x60020F3")]
		[Address(RVA = "0x113E8AC", Offset = "0x113E8AC", VA = "0x113E8AC", Slot = "4")]
		public override ulong Encode(int value)
		{
			return default(ulong);
		}

		[Token(Token = "0x60020F4")]
		[Address(RVA = "0x113E8CC", Offset = "0x113E8CC", VA = "0x113E8CC", Slot = "5")]
		public override int Decode(uint cvalue)
		{
			return default(int);
		}

		[Token(Token = "0x60020F5")]
		[Address(RVA = "0x113E628", Offset = "0x113E628", VA = "0x113E628")]
		public static void Recalculate(int min, int max, ref int smallest, ref int biggest, ref int bits)
		{
		}

		[Token(Token = "0x60020F6")]
		[Address(RVA = "0x113E8D8", Offset = "0x113E8D8", VA = "0x113E8D8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000506")]
	public enum NormalizedFloatCompression
	{
		[Token(Token = "0x400239A")]
		Bits2 = 2,
		[Token(Token = "0x400239B")]
		Bits3 = 3,
		[Token(Token = "0x400239C")]
		Bits4 = 4,
		[Token(Token = "0x400239D")]
		Bits5 = 5,
		[Token(Token = "0x400239E")]
		Bits6 = 6,
		[Token(Token = "0x400239F")]
		Bits7 = 7,
		[Token(Token = "0x40023A0")]
		Bits8 = 8,
		[Token(Token = "0x40023A1")]
		Bits9 = 9,
		[Token(Token = "0x40023A2")]
		Bits10 = 10,
		[Token(Token = "0x40023A3")]
		Bits12 = 12,
		[Token(Token = "0x40023A4")]
		Bits14 = 14,
		[Token(Token = "0x40023A5")]
		Half16 = 16,
		[Token(Token = "0x40023A6")]
		Full32 = 32
	}
	[Token(Token = "0x2000507")]
	public static class NormCompress
	{
		[Token(Token = "0x2000508")]
		public struct NormCompressCodec
		{
			[Token(Token = "0x40023C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public readonly int bits;

			[Token(Token = "0x40023C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public readonly float encoder;

			[Token(Token = "0x40023CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public readonly float decoder;

			[Token(Token = "0x60020FB")]
			[Address(RVA = "0xD83EDC", Offset = "0xD83EDC", VA = "0xD83EDC")]
			public NormCompressCodec(int bits, float encoder, float decoder)
			{
			}
		}

		[Token(Token = "0x40023A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static NormCompressCodec[] codecForBit;

		[Token(Token = "0x40023A8")]
		private const float NORM_COMP_ENCODE15 = 32767f;

		[Token(Token = "0x40023A9")]
		private const float NORM_COMP_DECODE15 = 3.051851E-05f;

		[Token(Token = "0x40023AA")]
		private const float NORM_COMP_ENCODE14 = 16383f;

		[Token(Token = "0x40023AB")]
		private const float NORM_COMP_DECODE14 = 6.103888E-05f;

		[Token(Token = "0x40023AC")]
		private const float NORM_COMP_ENCODE13 = 8191f;

		[Token(Token = "0x40023AD")]
		private const float NORM_COMP_DECODE13 = 0.00012208521f;

		[Token(Token = "0x40023AE")]
		private const float NORM_COMP_ENCODE12 = 4095f;

		[Token(Token = "0x40023AF")]
		private const float NORM_COMP_DECODE12 = 0.00024420026f;

		[Token(Token = "0x40023B0")]
		private const float NORM_COMP_ENCODE11 = 2047f;

		[Token(Token = "0x40023B1")]
		private const float NORM_COMP_DECODE11 = 0.0004885198f;

		[Token(Token = "0x40023B2")]
		private const float NORM_COMP_ENCODE10 = 1023f;

		[Token(Token = "0x40023B3")]
		private const float NORM_COMP_DECODE10 = 0.0009775171f;

		[Token(Token = "0x40023B4")]
		private const float NORM_COMP_ENCODE9 = 511f;

		[Token(Token = "0x40023B5")]
		private const float NORM_COMP_DECODE9 = 0.0019569471f;

		[Token(Token = "0x40023B6")]
		private const float NORM_COMP_ENCODE8 = 255f;

		[Token(Token = "0x40023B7")]
		private const float NORM_COMP_DECODE8 = 0.003921569f;

		[Token(Token = "0x40023B8")]
		private const float NORM_COMP_ENCODE7 = 127f;

		[Token(Token = "0x40023B9")]
		private const float NORM_COMP_DECODE7 = 0.003921569f;

		[Token(Token = "0x40023BA")]
		private const float NORM_COMP_ENCODE6 = 63f;

		[Token(Token = "0x40023BB")]
		private const float NORM_COMP_DECODE6 = 1f / 63f;

		[Token(Token = "0x40023BC")]
		private const float NORM_COMP_ENCODE5 = 31f;

		[Token(Token = "0x40023BD")]
		private const float NORM_COMP_DECODE5 = 1f / 31f;

		[Token(Token = "0x40023BE")]
		private const float NORM_COMP_ENCODE4 = 15f;

		[Token(Token = "0x40023BF")]
		private const float NORM_COMP_DECODE4 = 1f / 15f;

		[Token(Token = "0x40023C0")]
		private const float NORM_COMP_ENCODE3 = 7f;

		[Token(Token = "0x40023C1")]
		private const float NORM_COMP_DECODE3 = 1f / 7f;

		[Token(Token = "0x40023C2")]
		private const float NORM_COMP_ENCODE2 = 3f;

		[Token(Token = "0x40023C3")]
		private const float NORM_COMP_DECODE2 = 1f / 3f;

		[Token(Token = "0x40023C4")]
		private const float NORM_COMP_ENCODE1 = 1f;

		[Token(Token = "0x40023C5")]
		private const float NORM_COMP_DECODE1 = 1f;

		[Token(Token = "0x40023C6")]
		private const float NORM_COMP_ENCODE0 = 0f;

		[Token(Token = "0x40023C7")]
		private const float NORM_COMP_DECODE0 = 0f;

		[Token(Token = "0x60020F7")]
		[Address(RVA = "0xCC0A6C", Offset = "0xCC0A6C", VA = "0xCC0A6C")]
		static NormCompress()
		{
		}

		[Token(Token = "0x60020F8")]
		[Address(RVA = "0xCC0BB0", Offset = "0xCC0BB0", VA = "0xCC0BB0")]
		public static uint CompressNorm(this float value, int bits)
		{
			return default(uint);
		}

		[Token(Token = "0x60020F9")]
		[Address(RVA = "0xCC0D1C", Offset = "0xCC0D1C", VA = "0xCC0D1C")]
		public static uint WriteNorm(this byte[] buffer, float value, ref int bitposition, int bits)
		{
			return default(uint);
		}

		[Token(Token = "0x60020FA")]
		[Address(RVA = "0xCC0EB4", Offset = "0xCC0EB4", VA = "0xCC0EB4")]
		public static float ReadNorm(this byte[] buffer, ref int bitposition, int bits)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000509")]
	public interface IOnElementCrusherChange
	{
		[Token(Token = "0x60020FC")]
		void OnCrusherChange(ElementCrusher ec);
	}
	[Serializable]
	[Token(Token = "0x200050A")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x918B18", Offset = "0x918B18")]
	public class ElementCrusher : Crusher<ElementCrusher>, IEquatable<ElementCrusher>, ICrusherCopy<ElementCrusher>
	{
		[Token(Token = "0x200050B")]
		public enum UniformAxes
		{
			[Token(Token = "0x40023F3")]
			NonUniform = 0,
			[Token(Token = "0x40023F4")]
			XY = 3,
			[Token(Token = "0x40023F5")]
			XZ = 5,
			[Token(Token = "0x40023F6")]
			YZ = 6,
			[Token(Token = "0x40023F7")]
			XYZ = 7
		}

		[Token(Token = "0x200050C")]
		public enum StaticTRSType
		{
			[Token(Token = "0x40023F9")]
			Position,
			[Token(Token = "0x40023FA")]
			Euler,
			[Token(Token = "0x40023FB")]
			Quaternion,
			[Token(Token = "0x40023FC")]
			Scale,
			[Token(Token = "0x40023FD")]
			Generic
		}

		[Token(Token = "0x40023CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Dictionary<int, ElementCrusher> staticElementCrushers;

		[Token(Token = "0x40023CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly CompressedElement reusableCE;

		[Token(Token = "0x40023CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static ElementCrusher defaultUncompressedElementCrusher;

		[Token(Token = "0x40023CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static ElementCrusher defaultUncompressedPosCrusher;

		[Token(Token = "0x40023CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static ElementCrusher defaultUncompressedSclCrusher;

		[Token(Token = "0x40023D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static ElementCrusher defaultHalfFloatElementCrusher;

		[Token(Token = "0x40023D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static ElementCrusher defaultHalfFloatPosCrusher;

		[Token(Token = "0x40023D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static ElementCrusher defaultHalfFloatSclCrusher;

		[Token(Token = "0x40023D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool hideFieldName;

		[Token(Token = "0x40023D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private TRSType _trsType;

		[Token(Token = "0x40023D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public Transform defaultTransform;

		[Token(Token = "0x40023D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public UniformAxes uniformAxes;

		[Token(Token = "0x40023D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private FloatCrusher _xcrusher;

		[Token(Token = "0x40023D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private FloatCrusher _ycrusher;

		[Token(Token = "0x40023D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private FloatCrusher _zcrusher;

		[Token(Token = "0x40023DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private FloatCrusher _ucrusher;

		[Token(Token = "0x40023DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private QuatCrusher _qcrusher;

		[Token(Token = "0x40023DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		public bool local;

		[Token(Token = "0x40023DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		[SerializeField]
		private bool useWorldBounds;

		[Token(Token = "0x40023DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		[HideInInspector]
		[WorldBoundsSelectAttribute]
		private int boundsGroupId;

		[Token(Token = "0x40023DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		public bool enableTRSTypeSelector;

		[Token(Token = "0x40023E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		[SerializeField]
		public bool enableLocalSelector;

		[NonSerialized]
		[Token(Token = "0x40023E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
		private bool cached;

		[NonSerialized]
		[Token(Token = "0x40023E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6B")]
		private bool cache_xEnabled;

		[NonSerialized]
		[Token(Token = "0x40023E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool cache_yEnabled;

		[NonSerialized]
		[Token(Token = "0x40023E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
		private bool cache_zEnabled;

		[NonSerialized]
		[Token(Token = "0x40023E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6E")]
		private bool cache_uEnabled;

		[NonSerialized]
		[Token(Token = "0x40023E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6F")]
		private bool cache_qEnabled;

		[NonSerialized]
		[Token(Token = "0x40023E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool cache_isUniformScale;

		[NonSerialized]
		[Token(Token = "0x40023E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private readonly int[] cache_xBits;

		[NonSerialized]
		[Token(Token = "0x40023E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private readonly int[] cache_yBits;

		[NonSerialized]
		[Token(Token = "0x40023EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private readonly int[] cache_zBits;

		[NonSerialized]
		[Token(Token = "0x40023EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private readonly int[] cache_uBits;

		[NonSerialized]
		[Token(Token = "0x40023EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private readonly int[] cache_TotalBits;

		[Token(Token = "0x40023ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public ReadOnlyCollection<int> Cached_TotalBits;

		[NonSerialized]
		[Token(Token = "0x40023EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int cache_qBits;

		[NonSerialized]
		[Token(Token = "0x40023EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private bool cache_mustCorrectRotationX;

		[Token(Token = "0x40023F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Bounds bounds;

		[Token(Token = "0x40023F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static ulong[] reusableArray64;

		[Token(Token = "0x170001DD")]
		public TRSType TRSType
		{
			[Token(Token = "0x6002100")]
			[Address(RVA = "0xDAA05C", Offset = "0xDAA05C", VA = "0xDAA05C")]
			get
			{
				return default(TRSType);
			}
			[Token(Token = "0x6002101")]
			[Address(RVA = "0xDAA064", Offset = "0xDAA064", VA = "0xDAA064")]
			set
			{
			}
		}

		[Token(Token = "0x170001DE")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x932D48", Offset = "0x932D48")]
		public FloatCrusher xcrusher
		{
			[Token(Token = "0x6002102")]
			[Address(RVA = "0xDAA0A0", Offset = "0xDAA0A0", VA = "0xDAA0A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002103")]
			[Address(RVA = "0xDAA0A8", Offset = "0xDAA0A8", VA = "0xDAA0A8")]
			set
			{
			}
		}

		[Token(Token = "0x170001DF")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x932D80", Offset = "0x932D80")]
		public FloatCrusher ycrusher
		{
			[Token(Token = "0x6002104")]
			[Address(RVA = "0xDAA0AC", Offset = "0xDAA0AC", VA = "0xDAA0AC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002105")]
			[Address(RVA = "0xDAA0B4", Offset = "0xDAA0B4", VA = "0xDAA0B4")]
			set
			{
			}
		}

		[Token(Token = "0x170001E0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x932DB8", Offset = "0x932DB8")]
		public FloatCrusher zcrusher
		{
			[Token(Token = "0x6002106")]
			[Address(RVA = "0xDAA0B8", Offset = "0xDAA0B8", VA = "0xDAA0B8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002107")]
			[Address(RVA = "0xDAA0C0", Offset = "0xDAA0C0", VA = "0xDAA0C0")]
			set
			{
			}
		}

		[Token(Token = "0x170001E1")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x932DF0", Offset = "0x932DF0")]
		public FloatCrusher ucrusher
		{
			[Token(Token = "0x6002108")]
			[Address(RVA = "0xDAA0C4", Offset = "0xDAA0C4", VA = "0xDAA0C4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002109")]
			[Address(RVA = "0xDAA0CC", Offset = "0xDAA0CC", VA = "0xDAA0CC")]
			set
			{
			}
		}

		[Token(Token = "0x170001E2")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x932E28", Offset = "0x932E28")]
		public QuatCrusher qcrusher
		{
			[Token(Token = "0x600210A")]
			[Address(RVA = "0xDAA0D0", Offset = "0xDAA0D0", VA = "0xDAA0D0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600210B")]
			[Address(RVA = "0xDAA0D8", Offset = "0xDAA0D8", VA = "0xDAA0D8")]
			set
			{
			}
		}

		[Token(Token = "0x170001E3")]
		public FloatCrusher XCrusher
		{
			[Token(Token = "0x600210C")]
			[Address(RVA = "0xDAA0DC", Offset = "0xDAA0DC", VA = "0xDAA0DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600210D")]
			[Address(RVA = "0xDA95B8", Offset = "0xDA95B8", VA = "0xDA95B8")]
			set
			{
			}
		}

		[Token(Token = "0x170001E4")]
		public FloatCrusher YCrusher
		{
			[Token(Token = "0x600210E")]
			[Address(RVA = "0xDAA51C", Offset = "0xDAA51C", VA = "0xDAA51C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600210F")]
			[Address(RVA = "0xDA9714", Offset = "0xDA9714", VA = "0xDA9714")]
			set
			{
			}
		}

		[Token(Token = "0x170001E5")]
		public FloatCrusher ZCrusher
		{
			[Token(Token = "0x6002110")]
			[Address(RVA = "0xDAA524", Offset = "0xDAA524", VA = "0xDAA524")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002111")]
			[Address(RVA = "0xDA9870", Offset = "0xDA9870", VA = "0xDA9870")]
			set
			{
			}
		}

		[Token(Token = "0x170001E6")]
		public FloatCrusher UCrusher
		{
			[Token(Token = "0x6002112")]
			[Address(RVA = "0xDAA52C", Offset = "0xDAA52C", VA = "0xDAA52C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002113")]
			[Address(RVA = "0xDA9F00", Offset = "0xDA9F00", VA = "0xDA9F00")]
			set
			{
			}
		}

		[Token(Token = "0x170001E7")]
		public QuatCrusher QCrusher
		{
			[Token(Token = "0x6002114")]
			[Address(RVA = "0xDAA534", Offset = "0xDAA534", VA = "0xDAA534")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002115")]
			[Address(RVA = "0xDA9D20", Offset = "0xDA9D20", VA = "0xDA9D20")]
			set
			{
			}
		}

		[Token(Token = "0x170001E8")]
		[SerializeField]
		public bool UseWorldBounds
		{
			[Token(Token = "0x6002118")]
			[Address(RVA = "0xDAA544", Offset = "0xDAA544", VA = "0xDAA544")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002119")]
			[Address(RVA = "0xDAA54C", Offset = "0xDAA54C", VA = "0xDAA54C")]
			set
			{
			}
		}

		[Token(Token = "0x170001E9")]
		public int BoundsGroupId
		{
			[Token(Token = "0x600211A")]
			[Address(RVA = "0xDAA894", Offset = "0xDAA894", VA = "0xDAA894")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600211B")]
			[Address(RVA = "0xDAA89C", Offset = "0xDAA89C", VA = "0xDAA89C")]
			set
			{
			}
		}

		[Token(Token = "0x170001EA")]
		public Bounds Bounds
		{
			[Token(Token = "0x6002120")]
			[Address(RVA = "0xDAB148", Offset = "0xDAB148", VA = "0xDAB148")]
			get
			{
				return default(Bounds);
			}
			[Token(Token = "0x6002121")]
			[Address(RVA = "0xDAB1D8", Offset = "0xDAB1D8", VA = "0xDAB1D8")]
			set
			{
			}
		}

		[Token(Token = "0x170001EB")]
		public bool Enabled
		{
			[Token(Token = "0x6002126")]
			[Address(RVA = "0xDAB364", Offset = "0xDAB364", VA = "0xDAB364")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002127")]
			[Address(RVA = "0xDAB404", Offset = "0xDAB404", VA = "0xDAB404")]
			set
			{
			}
		}

		[Token(Token = "0x170001EC")]
		public FloatCrusher Item
		{
			[Token(Token = "0x6002128")]
			[Address(RVA = "0xDAB4B4", Offset = "0xDAB4B4", VA = "0xDAB4B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60020FD")]
		[Address(RVA = "0xDA9360", Offset = "0xDA9360", VA = "0xDA9360")]
		public static ElementCrusher GetStaticPositionCrusher(Bounds bounds, int resolution)
		{
			return null;
		}

		[Token(Token = "0x60020FE")]
		[Address(RVA = "0xDA9C48", Offset = "0xDA9C48", VA = "0xDA9C48")]
		public static ElementCrusher GetStaticQuatCrusher(int minBits)
		{
			return null;
		}

		[Token(Token = "0x60020FF")]
		[Address(RVA = "0xDA99CC", Offset = "0xDA99CC", VA = "0xDA99CC")]
		public static ElementCrusher CheckAgainstStatics(ElementCrusher ec, bool CheckAgainstFloatCrushersAsWell = true)
		{
			return null;
		}

		[Token(Token = "0x6002116")]
		[Address(RVA = "0xDAA53C", Offset = "0xDAA53C", VA = "0xDAA53C")]
		public void OnCrusherChange(QuatCrusher crusher)
		{
		}

		[Token(Token = "0x6002117")]
		[Address(RVA = "0xDAA540", Offset = "0xDAA540", VA = "0xDAA540")]
		public void OnCrusherChange(FloatCrusher crusher)
		{
		}

		[Token(Token = "0x600211C")]
		[Address(RVA = "0xDAA8AC", Offset = "0xDAA8AC", VA = "0xDAA8AC")]
		private void OnWorldBoundsReady()
		{
		}

		[Token(Token = "0x600211D")]
		[Address(RVA = "0xDAA8D0", Offset = "0xDAA8D0", VA = "0xDAA8D0")]
		public void ApplyWorldCrusherSettings()
		{
		}

		[Token(Token = "0x600211E")]
		[Address(RVA = "0xDAA558", Offset = "0xDAA558", VA = "0xDAA558")]
		public void ApplyWorldCrusherSettings(bool newUseBounds, int newBndsGrpId)
		{
		}

		[Token(Token = "0x600211F")]
		[Address(RVA = "0xDAB024", Offset = "0xDAB024", VA = "0xDAB024")]
		private WorldBoundsGroup GetUsedWorldBounds()
		{
			return null;
		}

		[Token(Token = "0x6002122")]
		[Address(RVA = "0xDAB2B0", Offset = "0xDAB2B0", VA = "0xDAB2B0", Slot = "7")]
		public override void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6002123")]
		[Address(RVA = "0xDAB2B4", Offset = "0xDAB2B4", VA = "0xDAB2B4", Slot = "6")]
		public override void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6002124")]
		[Address(RVA = "0xDAA0E4", Offset = "0xDAA0E4", VA = "0xDAA0E4")]
		public void CacheValues()
		{
		}

		[Token(Token = "0x6002125")]
		[Address(RVA = "0xDAB2B8", Offset = "0xDAB2B8", VA = "0xDAB2B8")]
		private void NullUnusedCrushers()
		{
		}

		[Token(Token = "0x6002129")]
		[Address(RVA = "0xDAB5B0", Offset = "0xDAB5B0", VA = "0xDAB5B0")]
		public ElementCrusher()
		{
		}

		[Token(Token = "0x600212A")]
		[Address(RVA = "0xDA94EC", Offset = "0xDA94EC", VA = "0xDA94EC")]
		internal ElementCrusher(StaticTRSType staticTrsType)
		{
		}

		[Token(Token = "0x600212B")]
		[Address(RVA = "0xDAB674", Offset = "0xDAB674", VA = "0xDAB674")]
		public ElementCrusher(bool enableTRSTypeSelector = true)
		{
		}

		[Token(Token = "0x600212C")]
		[Address(RVA = "0xDAB758", Offset = "0xDAB758", VA = "0xDAB758")]
		public ElementCrusher(TRSType trsType, bool enableTRSTypeSelector = true)
		{
		}

		[Token(Token = "0x600212D")]
		[Address(RVA = "0xDAAD08", Offset = "0xDAAD08", VA = "0xDAAD08")]
		public void Defaults(TRSType trs)
		{
		}

		[Token(Token = "0x600212E")]
		[Address(RVA = "0xDAB83C", Offset = "0xDAB83C", VA = "0xDAB83C")]
		public void Write(CompressedElement nonalloc, Transform trans, byte[] bytes, ref int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x600212F")]
		[Address(RVA = "0xDABC5C", Offset = "0xDABC5C", VA = "0xDABC5C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92C1D8", Offset = "0x92C1D8")]
		public CompressedElement Write(Transform trans, byte[] bytes, ref int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x6002130")]
		[Address(RVA = "0xDAC080", Offset = "0xDAC080", VA = "0xDAC080")]
		public void Write(CompressedElement ce, byte[] buffer, ref int bitposition, IncludedAxes ia = IncludedAxes.XYZ, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x6002131")]
		[Address(RVA = "0xDAC1BC", Offset = "0xDAC1BC", VA = "0xDAC1BC")]
		public void Write(CompressedElement ce, uint[] buffer, ref int bitposition, IncludedAxes ia = IncludedAxes.XYZ, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x6002132")]
		[Address(RVA = "0xDAC2F8", Offset = "0xDAC2F8", VA = "0xDAC2F8")]
		public void Write(CompressedElement ce, ulong[] buffer, ref int bitposition, IncludedAxes ia = IncludedAxes.XYZ, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x6002133")]
		[Address(RVA = "0xDAC434", Offset = "0xDAC434", VA = "0xDAC434")]
		public void Write(CompressedElement nonalloc, Vector3 v3, byte[] bytes, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x6002134")]
		[Address(RVA = "0xDAC45C", Offset = "0xDAC45C", VA = "0xDAC45C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92C1E8", Offset = "0x92C1E8")]
		public CompressedElement Write(Vector3 v3, byte[] bytes, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x6002135")]
		[Address(RVA = "0xDAB964", Offset = "0xDAB964", VA = "0xDAB964")]
		public void Write(CompressedElement nonalloc, Vector3 v3, byte[] bytes, ref int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x6002136")]
		[Address(RVA = "0xDABD6C", Offset = "0xDABD6C", VA = "0xDABD6C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92C1F8", Offset = "0x92C1F8")]
		public CompressedElement Write(Vector3 v3, byte[] bytes, ref int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x6002137")]
		[Address(RVA = "0xDABBBC", Offset = "0xDABBBC", VA = "0xDABBBC")]
		public void Write(CompressedElement nonalloc, Quaternion quat, byte[] bytes, ref int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x6002138")]
		[Address(RVA = "0xDABFA8", Offset = "0xDABFA8", VA = "0xDABFA8")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92C208", Offset = "0x92C208")]
		public CompressedElement Write(Quaternion quat, byte[] bytes, ref int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x6002139")]
		[Address(RVA = "0xDAC484", Offset = "0xDAC484", VA = "0xDAC484")]
		public void Write(CompressedElement nonalloc, Transform trans, ulong[] buffer, ref int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x600213A")]
		[Address(RVA = "0xDAC5AC", Offset = "0xDAC5AC", VA = "0xDAC5AC")]
		public void Write(CompressedElement nonalloc, Vector3 v3, ulong[] buffer, ref int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x600213B")]
		[Address(RVA = "0xDAC804", Offset = "0xDAC804", VA = "0xDAC804")]
		public void Write(CompressedElement nonalloc, Quaternion quat, ulong[] bytes, ref int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x600213C")]
		[Address(RVA = "0xDAC8A4", Offset = "0xDAC8A4", VA = "0xDAC8A4")]
		public void Read(CompressedElement nonalloc, byte[] bytes, IncludedAxes ia = IncludedAxes.XYZ, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x600213D")]
		[Address(RVA = "0xDACB60", Offset = "0xDACB60", VA = "0xDACB60")]
		public CompressedElement Read(byte[] buffer, IncludedAxes ia = IncludedAxes.XYZ, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x600213E")]
		[Address(RVA = "0xDAC8D0", Offset = "0xDAC8D0", VA = "0xDAC8D0")]
		public void Read(CompressedElement nonalloc, byte[] bytes, ref int bitposition, IncludedAxes ia = IncludedAxes.XYZ, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x600213F")]
		[Address(RVA = "0xDACC0C", Offset = "0xDACC0C", VA = "0xDACC0C")]
		public CompressedElement Read(byte[] bytes, ref int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x6002140")]
		[Address(RVA = "0xDACCA8", Offset = "0xDACCA8", VA = "0xDACCA8")]
		public void Read(CompressedElement nonalloc, ulong[] buffer, ref int bitposition, IncludedAxes ia = IncludedAxes.XYZ, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x6002141")]
		[Address(RVA = "0xDACF38", Offset = "0xDACF38", VA = "0xDACF38")]
		public void Read(CompressedElement nonalloc, uint[] buffer, ref int bitposition, IncludedAxes ia = IncludedAxes.XYZ, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x6002142")]
		[Address(RVA = "0xDAD1C8", Offset = "0xDAD1C8", VA = "0xDAD1C8")]
		public Element ReadAndDecompress(byte[] bytes, ref int bitposition, IncludedAxes ia = IncludedAxes.XYZ, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(Element);
		}

		[Token(Token = "0x6002143")]
		[Address(RVA = "0xDAD3E4", Offset = "0xDAD3E4", VA = "0xDAD3E4")]
		public void Write(CompressedElement nonalloc, Transform trans, ref ulong buffer, ref int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x6002144")]
		[Address(RVA = "0xDAD70C", Offset = "0xDAD70C", VA = "0xDAD70C")]
		public void Write(Transform trans, ref ulong buffer, ref int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x6002145")]
		[Address(RVA = "0xDAD99C", Offset = "0xDAD99C", VA = "0xDAD99C")]
		public void Write(CompressedElement nonalloc, Vector3 v3, ref ulong buffer, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x6002146")]
		[Address(RVA = "0xDAD9C4", Offset = "0xDAD9C4", VA = "0xDAD9C4")]
		public void Write(Vector3 v3, ref ulong buffer, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x6002147")]
		[Address(RVA = "0xDAD50C", Offset = "0xDAD50C", VA = "0xDAD50C")]
		public void Write(CompressedElement nonalloc, Vector3 v3, ref ulong buffer, ref int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x6002148")]
		[Address(RVA = "0xDAD81C", Offset = "0xDAD81C", VA = "0xDAD81C")]
		public void Write(Vector3 v3, ref ulong buffer, ref int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x6002149")]
		[Address(RVA = "0xDAD9EC", Offset = "0xDAD9EC", VA = "0xDAD9EC")]
		public void Write(CompressedElement nonalloc, Quaternion quat, ref ulong buffer)
		{
		}

		[Token(Token = "0x600214A")]
		[Address(RVA = "0xDADA10", Offset = "0xDADA10", VA = "0xDADA10")]
		public void Write(Quaternion quat, ref ulong buffer)
		{
		}

		[Token(Token = "0x600214B")]
		[Address(RVA = "0xDAD65C", Offset = "0xDAD65C", VA = "0xDAD65C")]
		public void Write(CompressedElement nonalloc, Quaternion quat, ref ulong buffer, ref int bitposition)
		{
		}

		[Token(Token = "0x600214C")]
		[Address(RVA = "0xDAD8F8", Offset = "0xDAD8F8", VA = "0xDAD8F8")]
		public void Write(Quaternion quat, ref ulong buffer, ref int bitposition)
		{
		}

		[Token(Token = "0x600214D")]
		[Address(RVA = "0xDADA34", Offset = "0xDADA34", VA = "0xDADA34")]
		public CompressedElement Write(CompressedElement ce, ref ulong buffer, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x600214E")]
		[Address(RVA = "0xDADA5C", Offset = "0xDADA5C", VA = "0xDADA5C")]
		public CompressedElement Write(CompressedElement ce, ref ulong buffer, ref int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x600214F")]
		[Address(RVA = "0xDADBC0", Offset = "0xDADBC0", VA = "0xDADBC0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92C218", Offset = "0x92C218")]
		public void Write(CompressedElement ce, ref Bitstream bitstream, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x6002150")]
		[Address(RVA = "0xDADCC0", Offset = "0xDADCC0", VA = "0xDADCC0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92C250", Offset = "0x92C250")]
		public Element Read(ref Bitstream buffer, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(Element);
		}

		[Token(Token = "0x6002151")]
		[Address(RVA = "0xDADE90", Offset = "0xDADE90", VA = "0xDADE90")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92C288", Offset = "0x92C288")]
		public void Read(CompressedElement nonalloc, ref Bitstream bitstream, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x6002152")]
		[Address(RVA = "0xDAE0EC", Offset = "0xDAE0EC", VA = "0xDAE0EC")]
		public Element Read(ulong buffer, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(Element);
		}

		[Token(Token = "0x6002153")]
		[Address(RVA = "0xDAE24C", Offset = "0xDAE24C", VA = "0xDAE24C")]
		public Element Read(ulong buffer, ref int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(Element);
		}

		[Token(Token = "0x6002154")]
		[Address(RVA = "0xDAE3A8", Offset = "0xDAE3A8", VA = "0xDAE3A8")]
		public void Read(CompressedElement nonalloc, ulong buffer, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x6002155")]
		[Address(RVA = "0xDAE3D0", Offset = "0xDAE3D0", VA = "0xDAE3D0")]
		public void Read(CompressedElement nonalloc, ulong buffer, ref int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x6002156")]
		[Address(RVA = "0xDAE644", Offset = "0xDAE644", VA = "0xDAE644")]
		public void Read(CompressedElement nonalloc, ulong frag0, ulong frag1 = 0uL, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x6002157")]
		[Address(RVA = "0xDAE748", Offset = "0xDAE748", VA = "0xDAE748")]
		public CompressedElement Read(ulong frag0, ulong frag1 = 0uL, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x6002158")]
		[Address(RVA = "0xDAE7EC", Offset = "0xDAE7EC", VA = "0xDAE7EC")]
		public void Compress(CompressedElement nonalloc, Transform trans)
		{
		}

		[Token(Token = "0x6002159")]
		[Address(RVA = "0xDAEC28", Offset = "0xDAEC28", VA = "0xDAEC28")]
		public CompressedElement Compress(Transform trans)
		{
			return null;
		}

		[Token(Token = "0x600215A")]
		[Address(RVA = "0xDAECB4", Offset = "0xDAECB4", VA = "0xDAECB4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92C2C0", Offset = "0x92C2C0")]
		public void CompressAndWrite(Transform trans, ref Bitstream bitstream)
		{
		}

		[Token(Token = "0x600215B")]
		[Address(RVA = "0xDAF0BC", Offset = "0xDAF0BC", VA = "0xDAF0BC")]
		public void CompressAndWrite(Transform trans, byte[] buffer, ref int bitposition)
		{
		}

		[Token(Token = "0x600215C")]
		[Address(RVA = "0xDAF4EC", Offset = "0xDAF4EC", VA = "0xDAF4EC")]
		public void Compress(CompressedElement nonalloc, Element e)
		{
		}

		[Token(Token = "0x600215D")]
		[Address(RVA = "0xDAF510", Offset = "0xDAF510", VA = "0xDAF510")]
		public CompressedElement Compress(Element e)
		{
			return null;
		}

		[Token(Token = "0x600215E")]
		[Address(RVA = "0xDAF5F8", Offset = "0xDAF5F8", VA = "0xDAF5F8")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92C2F8", Offset = "0x92C2F8")]
		public void CompressAndWrite(Element e, ref Bitstream bitstream)
		{
		}

		[Token(Token = "0x600215F")]
		[Address(RVA = "0xDAF620", Offset = "0xDAF620", VA = "0xDAF620")]
		public void CompressAndWrite(Element e, byte[] buffer, ref int bitposition)
		{
		}

		[Token(Token = "0x6002160")]
		[Address(RVA = "0xDAF650", Offset = "0xDAF650", VA = "0xDAF650")]
		public void Compress(CompressedElement nonalloc, Rigidbody rb, IncludedAxes ia = IncludedAxes.XYZ)
		{
		}

		[Token(Token = "0x6002161")]
		[Address(RVA = "0xDAE8F8", Offset = "0xDAE8F8", VA = "0xDAE8F8")]
		public void Compress(CompressedElement nonalloc, Vector3 v, IncludedAxes ia = IncludedAxes.XYZ)
		{
		}

		[Token(Token = "0x6002162")]
		[Address(RVA = "0xDAFAA8", Offset = "0xDAFAA8", VA = "0xDAFAA8")]
		public CompressedElement Compress(Vector3 v)
		{
			return null;
		}

		[Token(Token = "0x6002163")]
		[Address(RVA = "0xDAEDBC", Offset = "0xDAEDBC", VA = "0xDAEDBC")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92C330", Offset = "0x92C330")]
		public void CompressAndWrite(Vector3 v, ref Bitstream bitstream, IncludedAxes ia = IncludedAxes.XYZ)
		{
		}

		[Token(Token = "0x6002164")]
		[Address(RVA = "0xDAF1DC", Offset = "0xDAF1DC", VA = "0xDAF1DC")]
		public void CompressAndWrite(Vector3 v, byte[] buffer, ref int bitposition, IncludedAxes ia = IncludedAxes.XYZ)
		{
		}

		[Token(Token = "0x6002165")]
		[Address(RVA = "0xDAEB84", Offset = "0xDAEB84", VA = "0xDAEB84")]
		public void Compress(CompressedElement nonalloc, Quaternion quat)
		{
		}

		[Token(Token = "0x6002166")]
		[Address(RVA = "0xDAFB50", Offset = "0xDAFB50", VA = "0xDAFB50")]
		public CompressedElement Compress(Quaternion quat)
		{
			return null;
		}

		[Token(Token = "0x6002167")]
		[Address(RVA = "0xDAF01C", Offset = "0xDAF01C", VA = "0xDAF01C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92C368", Offset = "0x92C368")]
		public void CompressAndWrite(Quaternion quat, ref Bitstream bitstream)
		{
		}

		[Token(Token = "0x6002168")]
		[Address(RVA = "0xDAF438", Offset = "0xDAF438", VA = "0xDAF438")]
		public void CompressAndWrite(Quaternion quat, byte[] buffer, ref int bitposition)
		{
		}

		[Token(Token = "0x6002169")]
		[Address(RVA = "0xDAD2A4", Offset = "0xDAD2A4", VA = "0xDAD2A4")]
		public Element Decompress(CompressedElement compressed)
		{
			return default(Element);
		}

		[Token(Token = "0x600216A")]
		[Address(RVA = "0xDAFBFC", Offset = "0xDAFBFC", VA = "0xDAFBFC")]
		public Element Decompress(ulong cval, IncludedAxes ia = IncludedAxes.XYZ)
		{
			return default(Element);
		}

		[Token(Token = "0x600216B")]
		[Address(RVA = "0xDAFD54", Offset = "0xDAFD54", VA = "0xDAFD54")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92C3A0", Offset = "0x92C3A0")]
		public void Apply(Rigidbody rb, CompressedElement ce, IncludedAxes ia = IncludedAxes.XYZ)
		{
		}

		[Token(Token = "0x600216C")]
		[Address(RVA = "0xDAFDA8", Offset = "0xDAFDA8", VA = "0xDAFDA8")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92C3D8", Offset = "0x92C3D8")]
		public void Apply(Rigidbody rb, Element e, IncludedAxes ia = IncludedAxes.XYZ)
		{
		}

		[Token(Token = "0x600216D")]
		[Address(RVA = "0xDB0140", Offset = "0xDB0140", VA = "0xDB0140")]
		public void Move(Rigidbody rb, CompressedElement ce, IncludedAxes ia = IncludedAxes.XYZ)
		{
		}

		[Token(Token = "0x600216E")]
		[Address(RVA = "0xDB0194", Offset = "0xDB0194", VA = "0xDB0194")]
		public void Move(Rigidbody rb, Element e, IncludedAxes ia = IncludedAxes.XYZ)
		{
		}

		[Token(Token = "0x600216F")]
		[Address(RVA = "0xDB0568", Offset = "0xDB0568", VA = "0xDB0568")]
		public void Set(Rigidbody rb, CompressedElement ce, IncludedAxes ia = IncludedAxes.XYZ)
		{
		}

		[Token(Token = "0x6002170")]
		[Address(RVA = "0xDB0968", Offset = "0xDB0968", VA = "0xDB0968")]
		public void Set(Rigidbody2D rb, CompressedElement ce, IncludedAxes ia = IncludedAxes.XYZ)
		{
		}

		[Token(Token = "0x6002171")]
		[Address(RVA = "0xDB05BC", Offset = "0xDB05BC", VA = "0xDB05BC")]
		public void Set(Rigidbody rb, Element e, IncludedAxes ia = IncludedAxes.XYZ)
		{
		}

		[Token(Token = "0x6002172")]
		[Address(RVA = "0xDB09BC", Offset = "0xDB09BC", VA = "0xDB09BC")]
		public void Set(Rigidbody2D rb2d, Element e, IncludedAxes ia = IncludedAxes.XYZ)
		{
		}

		[Token(Token = "0x6002173")]
		[Address(RVA = "0xDB0D38", Offset = "0xDB0D38", VA = "0xDB0D38")]
		public void Apply(Transform trans, CompressedElement ce, IncludedAxes ia = IncludedAxes.XYZ)
		{
		}

		[Token(Token = "0x6002174")]
		[Address(RVA = "0xDB0D8C", Offset = "0xDB0D8C", VA = "0xDB0D8C")]
		public void Apply(Transform trans, Element e, IncludedAxes ia = IncludedAxes.XYZ)
		{
		}

		[Token(Token = "0x6002175")]
		[Address(RVA = "0xDB1330", Offset = "0xDB1330", VA = "0xDB1330")]
		public Vector3 Clamp(Vector3 v3)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002176")]
		[Address(RVA = "0xDB14F8", Offset = "0xDB14F8", VA = "0xDB14F8")]
		public BitCullingLevel FindBestBitCullLevel(CompressedElement a, CompressedElement b, BitCullingLevel maxCulling)
		{
			return default(BitCullingLevel);
		}

		[Token(Token = "0x6002177")]
		[Address(RVA = "0xDB16A8", Offset = "0xDB16A8", VA = "0xDB16A8")]
		private bool TestMatchingUpper(uint a, uint b, int lowerbits)
		{
			return default(bool);
		}

		[Token(Token = "0x6002178")]
		[Address(RVA = "0xDB15CC", Offset = "0xDB15CC", VA = "0xDB15CC")]
		public bool TestMatchingUpper(CompressedElement a, CompressedElement b, BitCullingLevel bcl)
		{
			return default(bool);
		}

		[Token(Token = "0x6002179")]
		[Address(RVA = "0xDB16C0", Offset = "0xDB16C0", VA = "0xDB16C0")]
		public int TallyBits(BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(int);
		}

		[Token(Token = "0x600217A")]
		[Address(RVA = "0xDB1858", Offset = "0xDB1858", VA = "0xDB1858", Slot = "9")]
		public void CopyFrom(ElementCrusher src)
		{
		}

		[Token(Token = "0x600217B")]
		[Address(RVA = "0xDB199C", Offset = "0xDB199C", VA = "0xDB199C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600217C")]
		[Address(RVA = "0xDB1A5C", Offset = "0xDB1A5C", VA = "0xDB1A5C", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600217D")]
		[Address(RVA = "0xDB1AE8", Offset = "0xDB1AE8", VA = "0xDB1AE8", Slot = "8")]
		public bool Equals(ElementCrusher other)
		{
			return default(bool);
		}

		[Token(Token = "0x600217E")]
		[Address(RVA = "0xDB1D6C", Offset = "0xDB1D6C", VA = "0xDB1D6C", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x600217F")]
		[Address(RVA = "0xDB1F18", Offset = "0xDB1F18", VA = "0xDB1F18")]
		public static bool operator ==(ElementCrusher crusher1, ElementCrusher crusher2)
		{
			return default(bool);
		}

		[Token(Token = "0x6002180")]
		[Address(RVA = "0xDB1CF0", Offset = "0xDB1CF0", VA = "0xDB1CF0")]
		public static bool operator !=(ElementCrusher crusher1, ElementCrusher crusher2)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200050D")]
	public static class FloatCrusherExtensions
	{
		[Token(Token = "0x6002182")]
		[Address(RVA = "0x130B7C4", Offset = "0x130B7C4", VA = "0x130B7C4")]
		public static CompressedFloat Write(this FloatCrusher fc, float f, ref ulong buffer, ref int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(CompressedFloat);
		}

		[Token(Token = "0x6002183")]
		[Address(RVA = "0x130B858", Offset = "0x130B858", VA = "0x130B858")]
		public static CompressedFloat Write(this FloatCrusher fc, float f, ref uint buffer, ref int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(CompressedFloat);
		}

		[Token(Token = "0x6002184")]
		[Address(RVA = "0x130B8EC", Offset = "0x130B8EC", VA = "0x130B8EC")]
		public static CompressedFloat Write(this FloatCrusher fc, float f, ref ushort buffer, ref int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(CompressedFloat);
		}

		[Token(Token = "0x6002185")]
		[Address(RVA = "0x130B980", Offset = "0x130B980", VA = "0x130B980")]
		public static CompressedFloat Write(this FloatCrusher fc, float f, ref byte buffer, ref int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(CompressedFloat);
		}

		[Token(Token = "0x6002186")]
		[Address(RVA = "0x130BA14", Offset = "0x130BA14", VA = "0x130BA14")]
		public static CompressedFloat Write(this FloatCrusher fc, CompressedFloat c, ref ulong buffer, ref int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(CompressedFloat);
		}

		[Token(Token = "0x6002187")]
		[Address(RVA = "0x130BA84", Offset = "0x130BA84", VA = "0x130BA84")]
		public static float ReadAndDecompress(this FloatCrusher fc, ulong buffer, ref int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(float);
		}

		[Token(Token = "0x6002188")]
		[Address(RVA = "0x130BAF0", Offset = "0x130BAF0", VA = "0x130BAF0")]
		public static CompressedFloat Read(this FloatCrusher fc, ulong buffer, ref int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(CompressedFloat);
		}

		[Token(Token = "0x6002189")]
		[Address(RVA = "0x130BB74", Offset = "0x130BB74", VA = "0x130BB74")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92C480", Offset = "0x92C480")]
		public static CompressedFloat Read(this FloatCrusher fc, ref ulong buffer, ref int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(CompressedFloat);
		}

		[Token(Token = "0x600218A")]
		[Address(RVA = "0x130BC14", Offset = "0x130BC14", VA = "0x130BC14")]
		public static CompressedFloat Write(this FloatCrusher fc, CompressedFloat c, byte[] buffer, ref int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(CompressedFloat);
		}

		[Token(Token = "0x600218B")]
		[Address(RVA = "0x130BC84", Offset = "0x130BC84", VA = "0x130BC84")]
		public static CompressedFloat Write(this FloatCrusher fc, CompressedFloat c, uint[] buffer, ref int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(CompressedFloat);
		}

		[Token(Token = "0x600218C")]
		[Address(RVA = "0x130BCF4", Offset = "0x130BCF4", VA = "0x130BCF4")]
		public static CompressedFloat Write(this FloatCrusher fc, CompressedFloat c, ulong[] buffer, ref int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(CompressedFloat);
		}

		[Token(Token = "0x600218D")]
		[Address(RVA = "0x130BD64", Offset = "0x130BD64", VA = "0x130BD64")]
		public static CompressedFloat Write(this FloatCrusher fc, uint c, byte[] buffer, ref int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(CompressedFloat);
		}

		[Token(Token = "0x600218E")]
		[Address(RVA = "0x130BDF0", Offset = "0x130BDF0", VA = "0x130BDF0")]
		public static CompressedFloat Write(this FloatCrusher fc, uint c, uint[] buffer, ref int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(CompressedFloat);
		}

		[Token(Token = "0x600218F")]
		[Address(RVA = "0x130BE7C", Offset = "0x130BE7C", VA = "0x130BE7C")]
		public static CompressedFloat Write(this FloatCrusher fc, uint c, ulong[] buffer, ref int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(CompressedFloat);
		}

		[Token(Token = "0x6002190")]
		[Address(RVA = "0x130BF08", Offset = "0x130BF08", VA = "0x130BF08")]
		public static CompressedFloat Write(this FloatCrusher fc, float f, byte[] buffer, ref int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(CompressedFloat);
		}

		[Token(Token = "0x6002191")]
		[Address(RVA = "0x130BFB8", Offset = "0x130BFB8", VA = "0x130BFB8")]
		public static CompressedFloat Write(this FloatCrusher fc, float f, uint[] buffer, ref int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(CompressedFloat);
		}

		[Token(Token = "0x6002192")]
		[Address(RVA = "0x130C06C", Offset = "0x130C06C", VA = "0x130C06C")]
		public static CompressedFloat Write(this FloatCrusher fc, float f, ulong[] buffer, ref int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(CompressedFloat);
		}

		[Token(Token = "0x6002193")]
		[Address(RVA = "0x130C120", Offset = "0x130C120", VA = "0x130C120")]
		public static CompressedFloat Read(this FloatCrusher fc, byte[] buffer, ref int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(CompressedFloat);
		}

		[Token(Token = "0x6002194")]
		[Address(RVA = "0x130C1A4", Offset = "0x130C1A4", VA = "0x130C1A4")]
		public static CompressedFloat Read(this FloatCrusher fc, uint[] buffer, ref int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(CompressedFloat);
		}

		[Token(Token = "0x6002195")]
		[Address(RVA = "0x130C228", Offset = "0x130C228", VA = "0x130C228")]
		public static CompressedFloat Read(this FloatCrusher fc, ulong[] buffer, ref int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(CompressedFloat);
		}

		[Token(Token = "0x6002196")]
		[Address(RVA = "0x130C2AC", Offset = "0x130C2AC", VA = "0x130C2AC")]
		public static float ReadAndDecompress(this FloatCrusher fc, byte[] buffer, ref int bitposition)
		{
			return default(float);
		}

		[Token(Token = "0x6002197")]
		[Address(RVA = "0x130C310", Offset = "0x130C310", VA = "0x130C310")]
		public static float ReadAndDecompress(this FloatCrusher fc, uint[] buffer, ref int bitposition)
		{
			return default(float);
		}

		[Token(Token = "0x6002198")]
		[Address(RVA = "0x130C374", Offset = "0x130C374", VA = "0x130C374")]
		public static float ReadAndDecompress(this FloatCrusher fc, ulong[] buffer, ref int bitposition)
		{
			return default(float);
		}
	}
	[Token(Token = "0x200050E")]
	public static class TransformExtensions
	{
	}
	[Token(Token = "0x200050F")]
	public enum CompressLevel
	{
		[Token(Token = "0x40023FF")]
		SetBits = -1,
		[Token(Token = "0x4002400")]
		Disabled = 0,
		[Token(Token = "0x4002401")]
		uint16Low = 16,
		[Token(Token = "0x4002402")]
		uint32Med = 32,
		[Token(Token = "0x4002403")]
		uint64Hi = 64
	}
	[Serializable]
	[Token(Token = "0x2000510")]
	public class QuatCrusher : Crusher<QuatCrusher>, IEquatable<QuatCrusher>, ICrusherCopy<QuatCrusher>
	{
		[Token(Token = "0x4002404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool QC_ISPRO;

		[Token(Token = "0x4002405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x91D7C8", Offset = "0x91D7C8")]
		private int bits;

		[Token(Token = "0x4002406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		public CompressLevel _compressLevel;

		[Token(Token = "0x4002407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public Transform transform;

		[Token(Token = "0x4002408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public bool local;

		[Token(Token = "0x4002409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[HideInInspector]
		public bool isStandalone;

		[Token(Token = "0x400240A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		[SerializeField]
		public bool showEnableToggle;

		[Token(Token = "0x400240B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
		[SerializeField]
		private bool enabled;

		[Token(Token = "0x400240C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private QuatCompress.Cache cache;

		[NonSerialized]
		[Token(Token = "0x400240D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private bool initialized;

		[Token(Token = "0x170001ED")]
		public int Bits
		{
			[Token(Token = "0x6002199")]
			[Address(RVA = "0x117F7C0", Offset = "0x117F7C0", VA = "0x117F7C0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600219A")]
			[Address(RVA = "0x117F8B4", Offset = "0x117F8B4", VA = "0x117F8B4")]
			set
			{
			}
		}

		[Token(Token = "0x170001EE")]
		public CompressLevel CompressLevel
		{
			[Token(Token = "0x600219B")]
			[Address(RVA = "0x117FAD4", Offset = "0x117FAD4", VA = "0x117FAD4")]
			get
			{
				return default(CompressLevel);
			}
			[Token(Token = "0x600219C")]
			[Address(RVA = "0x117F9B8", Offset = "0x117F9B8", VA = "0x117F9B8")]
			set
			{
			}
		}

		[Token(Token = "0x170001EF")]
		[SerializeField]
		public bool Enabled
		{
			[Token(Token = "0x600219D")]
			[Address(RVA = "0x117FADC", Offset = "0x117FADC", VA = "0x117FADC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600219E")]
			[Address(RVA = "0x117FAE4", Offset = "0x117FAE4", VA = "0x117FAE4")]
			set
			{
			}
		}

		[Token(Token = "0x600219F")]
		[Address(RVA = "0x117FB5C", Offset = "0x117FB5C", VA = "0x117FB5C")]
		public QuatCrusher()
		{
		}

		[Token(Token = "0x60021A0")]
		[Address(RVA = "0x117FBC0", Offset = "0x117FBC0", VA = "0x117FBC0")]
		public QuatCrusher(int bits, bool showEnableToggle = false, bool isStandalone = true)
		{
		}

		[Token(Token = "0x60021A1")]
		[Address(RVA = "0x117FCC8", Offset = "0x117FCC8", VA = "0x117FCC8")]
		public QuatCrusher(bool showEnableToggle = false, bool isStandalone = true)
		{
		}

		[Token(Token = "0x60021A2")]
		[Address(RVA = "0x117FD94", Offset = "0x117FD94", VA = "0x117FD94")]
		public QuatCrusher(CompressLevel compressLevel, bool showEnableToggle = false, bool isStandalone = true)
		{
		}

		[Token(Token = "0x60021A3")]
		[Address(RVA = "0x117FE1C", Offset = "0x117FE1C", VA = "0x117FE1C")]
		public void Initialize()
		{
		}

		[Token(Token = "0x60021A4")]
		[Address(RVA = "0x117FECC", Offset = "0x117FECC", VA = "0x117FECC", Slot = "7")]
		public override void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x60021A5")]
		[Address(RVA = "0x117FED0", Offset = "0x117FED0", VA = "0x117FED0", Slot = "6")]
		public override void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x60021A6")]
		[Address(RVA = "0x117F884", Offset = "0x117F884", VA = "0x117F884")]
		public static int RoundBitsToBestPreset(int bits)
		{
			return default(int);
		}

		[Token(Token = "0x60021A7")]
		[Address(RVA = "0x117FF30", Offset = "0x117FF30", VA = "0x117FF30")]
		public ulong Compress()
		{
			return default(ulong);
		}

		[Token(Token = "0x60021A8")]
		[Address(RVA = "0x1180084", Offset = "0x1180084", VA = "0x1180084")]
		public ulong Compress(Quaternion quat)
		{
			return default(ulong);
		}

		[Token(Token = "0x60021A9")]
		[Address(RVA = "0x1180154", Offset = "0x1180154", VA = "0x1180154")]
		public Quaternion Decompress(ulong compressed)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60021AA")]
		[Address(RVA = "0x1180204", Offset = "0x1180204", VA = "0x1180204")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92C5BC", Offset = "0x92C5BC")]
		public ulong Write(Quaternion quat, ref Bitstream bitstream)
		{
			return default(ulong);
		}

		[Token(Token = "0x60021AB")]
		[Address(RVA = "0x1180244", Offset = "0x1180244", VA = "0x1180244")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92C5F4", Offset = "0x92C5F4")]
		public ulong Write(CompressedElement ce, ref Bitstream bitstream)
		{
			return default(ulong);
		}

		[Token(Token = "0x60021AC")]
		[Address(RVA = "0x1180284", Offset = "0x1180284", VA = "0x1180284")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92C62C", Offset = "0x92C62C")]
		public ulong Write(ulong cQuat, ref Bitstream bitstream)
		{
			return default(ulong);
		}

		[Token(Token = "0x60021AD")]
		[Address(RVA = "0x11802B8", Offset = "0x11802B8", VA = "0x11802B8")]
		public ulong Write(Quaternion quat, byte[] buffer, ref int bitposition)
		{
			return default(ulong);
		}

		[Token(Token = "0x60021AE")]
		[Address(RVA = "0x1180308", Offset = "0x1180308", VA = "0x1180308")]
		public ulong Write(Quaternion quat, uint[] buffer, ref int bitposition)
		{
			return default(ulong);
		}

		[Token(Token = "0x60021AF")]
		[Address(RVA = "0x1180358", Offset = "0x1180358", VA = "0x1180358")]
		public ulong Write(Quaternion quat, ulong[] buffer, ref int bitposition)
		{
			return default(ulong);
		}

		[Token(Token = "0x60021B0")]
		[Address(RVA = "0x11803A8", Offset = "0x11803A8", VA = "0x11803A8")]
		public ulong Write(ulong c, byte[] buffer, ref int bitposition)
		{
			return default(ulong);
		}

		[Token(Token = "0x60021B1")]
		[Address(RVA = "0x11803E0", Offset = "0x11803E0", VA = "0x11803E0")]
		public ulong Write(ulong c, uint[] buffer, ref int bitposition)
		{
			return default(ulong);
		}

		[Token(Token = "0x60021B2")]
		[Address(RVA = "0x1180418", Offset = "0x1180418", VA = "0x1180418")]
		public ulong Write(ulong c, ulong[] buffer, ref int bitposition)
		{
			return default(ulong);
		}

		[Token(Token = "0x60021B3")]
		[Address(RVA = "0x1180450", Offset = "0x1180450", VA = "0x1180450")]
		public Quaternion Read(byte[] buffer, ref int bitposition)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60021B4")]
		[Address(RVA = "0x118048C", Offset = "0x118048C", VA = "0x118048C")]
		public Quaternion Read(uint[] buffer, ref int bitposition)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60021B5")]
		[Address(RVA = "0x11804C8", Offset = "0x11804C8", VA = "0x11804C8")]
		public Quaternion Read(ulong[] buffer, ref int bitposition)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60021B6")]
		[Address(RVA = "0x1180504", Offset = "0x1180504", VA = "0x1180504")]
		public ulong Write(Quaternion quat, ref ulong buffer, ref int bitposition)
		{
			return default(ulong);
		}

		[Token(Token = "0x60021B7")]
		[Address(RVA = "0x1180550", Offset = "0x1180550", VA = "0x1180550")]
		public Quaternion Read(ref ulong buffer, ref int bitposition)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60021B8")]
		[Address(RVA = "0x118058C", Offset = "0x118058C", VA = "0x118058C", Slot = "9")]
		public void CopyFrom(QuatCrusher source)
		{
		}

		[Token(Token = "0x60021B9")]
		[Address(RVA = "0x11805B8", Offset = "0x11805B8", VA = "0x11805B8", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60021BA")]
		[Address(RVA = "0x1180644", Offset = "0x1180644", VA = "0x1180644", Slot = "8")]
		public bool Equals(QuatCrusher other)
		{
			return default(bool);
		}

		[Token(Token = "0x60021BB")]
		[Address(RVA = "0x1180784", Offset = "0x1180784", VA = "0x1180784", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60021BC")]
		[Address(RVA = "0x11807F4", Offset = "0x11807F4", VA = "0x11807F4")]
		public static bool operator ==(QuatCrusher crusher1, QuatCrusher crusher2)
		{
			return default(bool);
		}

		[Token(Token = "0x60021BD")]
		[Address(RVA = "0x1180708", Offset = "0x1180708", VA = "0x1180708")]
		public static bool operator !=(QuatCrusher crusher1, QuatCrusher crusher2)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x2000511")]
	public class RigidbodyCrusher : TransformCrusher, ICrusherCopy<RigidbodyCrusher>
	{
		[Token(Token = "0x400240E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private ElementCrusher velCrusher;

		[Token(Token = "0x400240F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private ElementCrusher angCrusher;

		[NonSerialized]
		[Token(Token = "0x4002410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private readonly int[] cached_vBits;

		[NonSerialized]
		[Token(Token = "0x4002411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private readonly int[] cached_aBits;

		[Token(Token = "0x170001F0")]
		public ElementCrusher VelocityCrusher
		{
			[Token(Token = "0x60021BF")]
			[Address(RVA = "0xDBC588", Offset = "0xDBC588", VA = "0xDBC588")]
			get
			{
				return null;
			}
			[Token(Token = "0x60021C0")]
			[Address(RVA = "0xDBC590", Offset = "0xDBC590", VA = "0xDBC590")]
			set
			{
			}
		}

		[Token(Token = "0x170001F1")]
		public ElementCrusher AngVelocityCrusher
		{
			[Token(Token = "0x60021C1")]
			[Address(RVA = "0xDBC778", Offset = "0xDBC778", VA = "0xDBC778")]
			get
			{
				return null;
			}
			[Token(Token = "0x60021C2")]
			[Address(RVA = "0xDBC780", Offset = "0xDBC780", VA = "0xDBC780")]
			set
			{
			}
		}

		[Token(Token = "0x60021C3")]
		[Address(RVA = "0xDBC968", Offset = "0xDBC968", VA = "0xDBC968", Slot = "8")]
		protected override void ConstructDefault(bool isStatic = false)
		{
		}

		[Token(Token = "0x60021C4")]
		[Address(RVA = "0xDBCA74", Offset = "0xDBCA74", VA = "0xDBCA74")]
		public RigidbodyCrusher()
		{
		}

		[Token(Token = "0x60021C5")]
		[Address(RVA = "0xDBCB6C", Offset = "0xDBCB6C", VA = "0xDBCB6C")]
		public RigidbodyCrusher(bool isStatic = false)
		{
		}

		[Token(Token = "0x60021C6")]
		[Address(RVA = "0xDBCC24", Offset = "0xDBCC24", VA = "0xDBCC24", Slot = "9")]
		public override void CacheValues()
		{
		}

		[Token(Token = "0x60021C7")]
		[Address(RVA = "0xDBCE1C", Offset = "0xDBCE1C", VA = "0xDBCE1C")]
		public void Write(CompressedMatrixRB cmRB, byte[] buffer, ref int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60021C8")]
		[Address(RVA = "0xDBD010", Offset = "0xDBD010", VA = "0xDBD010")]
		public void Write(CompressedMatrixRB cmRB, uint[] buffer, ref int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60021C9")]
		[Address(RVA = "0xDBD204", Offset = "0xDBD204", VA = "0xDBD204")]
		public void Write(CompressedMatrixRB cmRB, ulong[] buffer, ref int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60021CA")]
		[Address(RVA = "0xDBD3F8", Offset = "0xDBD3F8", VA = "0xDBD3F8")]
		public new MatrixRB ReadAndDecompress(ulong[] array, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x60021CB")]
		[Address(RVA = "0xDBD4C4", Offset = "0xDBD4C4", VA = "0xDBD4C4")]
		public new MatrixRB ReadAndDecompress(uint[] array, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x60021CC")]
		[Address(RVA = "0xDBD590", Offset = "0xDBD590", VA = "0xDBD590")]
		public new MatrixRB ReadAndDecompress(byte[] array, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x60021CD")]
		[Address(RVA = "0xDBD65C", Offset = "0xDBD65C", VA = "0xDBD65C")]
		public void ReadAndDecompress(MatrixRB nonalloc, ulong[] array, ref int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60021CE")]
		[Address(RVA = "0xDBD8F8", Offset = "0xDBD8F8", VA = "0xDBD8F8")]
		public void ReadAndDecompress(MatrixRB nonalloc, uint[] array, ref int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60021CF")]
		[Address(RVA = "0xDBDB94", Offset = "0xDBDB94", VA = "0xDBDB94")]
		public void ReadAndDecompress(MatrixRB nonalloc, byte[] array, ref int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60021D0")]
		[Address(RVA = "0xDBD420", Offset = "0xDBD420", VA = "0xDBD420")]
		public new MatrixRB ReadAndDecompress(ulong[] array, ref int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x60021D1")]
		[Address(RVA = "0xDBD4EC", Offset = "0xDBD4EC", VA = "0xDBD4EC")]
		public new MatrixRB ReadAndDecompress(uint[] array, ref int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x60021D2")]
		[Address(RVA = "0xDBD5B8", Offset = "0xDBD5B8", VA = "0xDBD5B8")]
		public new MatrixRB ReadAndDecompress(byte[] array, ref int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x60021D3")]
		[Address(RVA = "0xDBDC48", Offset = "0xDBDC48", VA = "0xDBDC48")]
		public void Read(CompressedMatrixRB nonalloc, byte[] array, ref int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60021D4")]
		[Address(RVA = "0xDBDE30", Offset = "0xDBDE30", VA = "0xDBDE30")]
		public new CompressedMatrixRB Read(ulong[] array, ref int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x60021D5")]
		[Address(RVA = "0xDBDED4", Offset = "0xDBDED4", VA = "0xDBDED4")]
		public new CompressedMatrixRB Read(uint[] array, ref int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x60021D6")]
		[Address(RVA = "0xDBDF78", Offset = "0xDBDF78", VA = "0xDBDF78")]
		public new CompressedMatrixRB Read(byte[] array, ref int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x60021D7")]
		[Address(RVA = "0xDBE01C", Offset = "0xDBE01C", VA = "0xDBE01C")]
		public new CompressedMatrixRB Read(ulong[] array, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x60021D8")]
		[Address(RVA = "0xDBE0C0", Offset = "0xDBE0C0", VA = "0xDBE0C0")]
		public new CompressedMatrixRB Read(uint[] array, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x60021D9")]
		[Address(RVA = "0xDBE164", Offset = "0xDBE164", VA = "0xDBE164")]
		public new CompressedMatrixRB Read(byte[] array, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x60021DA")]
		[Address(RVA = "0xDBD710", Offset = "0xDBD710", VA = "0xDBD710")]
		public void Read(CompressedMatrixRB nonalloc, ulong[] buffer, ref int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60021DB")]
		[Address(RVA = "0xDBD9AC", Offset = "0xDBD9AC", VA = "0xDBD9AC")]
		public void Read(CompressedMatrixRB nonalloc, uint[] buffer, ref int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60021DC")]
		[Address(RVA = "0xDBE208", Offset = "0xDBE208", VA = "0xDBE208")]
		public new int TallyBits(BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(int);
		}

		[Token(Token = "0x60021DD")]
		[Address(RVA = "0xDBE320", Offset = "0xDBE320", VA = "0xDBE320", Slot = "11")]
		public void CopyFrom(RigidbodyCrusher source)
		{
		}

		[Token(Token = "0x60021DE")]
		[Address(RVA = "0xDBE3B8", Offset = "0xDBE3B8", VA = "0xDBE3B8", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60021DF")]
		[Address(RVA = "0xDBE444", Offset = "0xDBE444", VA = "0xDBE444")]
		public bool Equals(RigidbodyCrusher other)
		{
			return default(bool);
		}

		[Token(Token = "0x60021E0")]
		[Address(RVA = "0xDBE4EC", Offset = "0xDBE4EC", VA = "0xDBE4EC", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60021E1")]
		[Address(RVA = "0xDBE644", Offset = "0xDBE644", VA = "0xDBE644")]
		public static bool operator ==(RigidbodyCrusher crusher1, RigidbodyCrusher crusher2)
		{
			return default(bool);
		}

		[Token(Token = "0x60021E2")]
		[Address(RVA = "0xDBE650", Offset = "0xDBE650", VA = "0xDBE650")]
		public static bool operator !=(RigidbodyCrusher crusher1, RigidbodyCrusher crusher2)
		{
			return default(bool);
		}
	}
	[StructLayout(2)]
	[Token(Token = "0x2000512")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x918B60", Offset = "0x918B60")]
	public class CompressedElement : IEquatable<CompressedElement>
	{
		[Token(Token = "0x4002412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static CompressedElement reusable;

		[Token(Token = "0x4002413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CompressedFloat cx;

		[Token(Token = "0x4002414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CompressedFloat cy;

		[Token(Token = "0x4002415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public CompressedFloat cz;

		[Token(Token = "0x4002416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CompressedFloat cUniform;

		[Token(Token = "0x4002417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CompressedQuat cQuat;

		[Token(Token = "0x4002418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ElementCrusher crusher;

		[Token(Token = "0x4002419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly ulong[] reusableArray64;

		[Token(Token = "0x400241A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly uint[] reusableArray32;

		[Token(Token = "0x400241B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly byte[] reusableArray8;

		[Token(Token = "0x400241C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x91D88C", Offset = "0x91D88C")]
		public static readonly CompressedElement Empty;

		[Token(Token = "0x400241D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static CompressedElement uppers;

		[Token(Token = "0x400241E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static CompressedElement lowers;

		[Token(Token = "0x170001F2")]
		public uint Item
		{
			[Token(Token = "0x60021FF")]
			[Address(RVA = "0x1043280", Offset = "0x1043280", VA = "0x1043280")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x60021E3")]
		[Address(RVA = "0x1041FD0", Offset = "0x1041FD0", VA = "0x1041FD0")]
		public void Clear()
		{
		}

		[Token(Token = "0x60021E4")]
		[Address(RVA = "0x1042058", Offset = "0x1042058", VA = "0x1042058")]
		public ulong[] AsArray64(BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x60021E5")]
		[Address(RVA = "0x10421CC", Offset = "0x10421CC", VA = "0x10421CC")]
		public void AsArray64(ulong[] nonalloc, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60021E6")]
		[Address(RVA = "0x10422D8", Offset = "0x10422D8", VA = "0x10422D8")]
		public uint[] AsArray32(BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x60021E7")]
		[Address(RVA = "0x104244C", Offset = "0x104244C", VA = "0x104244C")]
		public void AsArray32(uint[] nonalloc, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60021E8")]
		[Address(RVA = "0x1042558", Offset = "0x1042558", VA = "0x1042558")]
		public byte[] AsArray8(BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x60021E9")]
		[Address(RVA = "0x10426CC", Offset = "0x10426CC", VA = "0x10426CC")]
		public void AsArray8(byte[] nonalloc, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60021EA")]
		[Address(RVA = "0x10427D8", Offset = "0x10427D8", VA = "0x10427D8")]
		public static explicit operator ulong(CompressedElement ce)
		{
			return default(ulong);
		}

		[Token(Token = "0x60021EB")]
		[Address(RVA = "0x104281C", Offset = "0x104281C", VA = "0x104281C")]
		public static explicit operator uint(CompressedElement ce)
		{
			return default(uint);
		}

		[Token(Token = "0x60021EC")]
		[Address(RVA = "0x1042860", Offset = "0x1042860", VA = "0x1042860")]
		public static explicit operator ushort(CompressedElement ce)
		{
			return default(ushort);
		}

		[Token(Token = "0x60021ED")]
		[Address(RVA = "0x10428A4", Offset = "0x10428A4", VA = "0x10428A4")]
		public static explicit operator byte(CompressedElement ce)
		{
			return default(byte);
		}

		[Token(Token = "0x60021EE")]
		[Address(RVA = "0x10428E8", Offset = "0x10428E8", VA = "0x10428E8")]
		public static explicit operator ulong[](CompressedElement ce)
		{
			return null;
		}

		[Token(Token = "0x60021EF")]
		[Address(RVA = "0x1042970", Offset = "0x1042970", VA = "0x1042970")]
		public static explicit operator uint[](CompressedElement ce)
		{
			return null;
		}

		[Token(Token = "0x60021F0")]
		[Address(RVA = "0x10429F8", Offset = "0x10429F8", VA = "0x10429F8")]
		public static explicit operator byte[](CompressedElement ce)
		{
			return null;
		}

		[Token(Token = "0x60021F1")]
		[Address(RVA = "0x1042A80", Offset = "0x1042A80", VA = "0x1042A80")]
		public static explicit operator Element(CompressedElement ce)
		{
			return default(Element);
		}

		[Token(Token = "0x60021F2")]
		[Address(RVA = "0x1042B14", Offset = "0x1042B14", VA = "0x1042B14")]
		public static explicit operator Vector3(CompressedElement ce)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60021F3")]
		[Address(RVA = "0x1042BE4", Offset = "0x1042BE4", VA = "0x1042BE4")]
		public static explicit operator Quaternion(CompressedElement ce)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60021F4")]
		[Address(RVA = "0x1042DA8", Offset = "0x1042DA8", VA = "0x1042DA8")]
		public CompressedElement()
		{
		}

		[Token(Token = "0x60021F5")]
		[Address(RVA = "0x1042DB0", Offset = "0x1042DB0", VA = "0x1042DB0")]
		public CompressedElement(ElementCrusher crusher, CompressedFloat cx, CompressedFloat cy, CompressedFloat cz)
		{
		}

		[Token(Token = "0x60021F6")]
		[Address(RVA = "0x1042E18", Offset = "0x1042E18", VA = "0x1042E18")]
		public CompressedElement(ElementCrusher crusher, uint cx, uint cy, uint cz)
		{
		}

		[Token(Token = "0x60021F7")]
		[Address(RVA = "0x1042F34", Offset = "0x1042F34", VA = "0x1042F34")]
		public CompressedElement(ElementCrusher crusher, uint cUniform)
		{
		}

		[Token(Token = "0x60021F8")]
		[Address(RVA = "0x1043000", Offset = "0x1043000", VA = "0x1043000")]
		public CompressedElement(ElementCrusher crusher, ulong cQuat)
		{
		}

		[Token(Token = "0x60021F9")]
		[Address(RVA = "0x10430CC", Offset = "0x10430CC", VA = "0x10430CC")]
		public void Set(ElementCrusher crusher, CompressedFloat cx, CompressedFloat cy, CompressedFloat cz)
		{
		}

		[Token(Token = "0x60021FA")]
		[Address(RVA = "0x10430E0", Offset = "0x10430E0", VA = "0x10430E0")]
		public void Set(ElementCrusher crusher, uint cx, uint cy, uint cz)
		{
		}

		[Token(Token = "0x60021FB")]
		[Address(RVA = "0x1043180", Offset = "0x1043180", VA = "0x1043180")]
		public void Set(ElementCrusher crusher, uint cUniform)
		{
		}

		[Token(Token = "0x60021FC")]
		[Address(RVA = "0x10431CC", Offset = "0x10431CC", VA = "0x10431CC")]
		public void Set(ElementCrusher crusher, ulong cQuat)
		{
		}

		[Token(Token = "0x60021FD")]
		[Address(RVA = "0x1043218", Offset = "0x1043218", VA = "0x1043218")]
		public void CopyTo(CompressedElement copyTarget)
		{
		}

		[Token(Token = "0x60021FE")]
		[Address(RVA = "0x104324C", Offset = "0x104324C", VA = "0x104324C")]
		public void CopyFrom(CompressedElement copySource)
		{
		}

		[Token(Token = "0x6002200")]
		[Address(RVA = "0x10432A8", Offset = "0x10432A8", VA = "0x10432A8")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92C664", Offset = "0x92C664")]
		public Bitstream ExtractBitstream(BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(Bitstream);
		}

		[Token(Token = "0x6002201")]
		[Address(RVA = "0x1043308", Offset = "0x1043308", VA = "0x1043308")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92C69C", Offset = "0x92C69C")]
		public Bitstream ExtractBitstream(ElementCrusher crusher, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(Bitstream);
		}

		[Token(Token = "0x6002202")]
		[Address(RVA = "0x104336C", Offset = "0x104336C", VA = "0x104336C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92C6D4", Offset = "0x92C6D4")]
		public void ExtractBitstream(ElementCrusher crusher, ref Bitstream bitstream, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x6002203")]
		[Address(RVA = "0x1043394", Offset = "0x1043394", VA = "0x1043394")]
		public uint GetUInt(int axis)
		{
			return default(uint);
		}

		[Token(Token = "0x6002204")]
		[Address(RVA = "0x1042AC4", Offset = "0x1042AC4", VA = "0x1042AC4")]
		public Element Decompress()
		{
			return default(Element);
		}

		[Token(Token = "0x6002205")]
		[Address(RVA = "0x10433BC", Offset = "0x10433BC", VA = "0x10433BC")]
		public void Serialize(byte[] buffer, ref int bitposition, IncludedAxes ia, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x6002206")]
		[Address(RVA = "0x10433F0", Offset = "0x10433F0", VA = "0x10433F0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92C70C", Offset = "0x92C70C")]
		public static bool Compare(CompressedElement a, CompressedElement b)
		{
			return default(bool);
		}

		[Token(Token = "0x6002207")]
		[Address(RVA = "0x10434A0", Offset = "0x10434A0", VA = "0x10434A0")]
		public static int HighestDifferentBit(uint a, uint b)
		{
			return default(int);
		}

		[Token(Token = "0x6002208")]
		[Address(RVA = "0x10434D0", Offset = "0x10434D0", VA = "0x10434D0")]
		public static void Extrapolate(ElementCrusher crusher, CompressedElement target, CompressedElement curr, CompressedElement prev, int divisor = 2)
		{
		}

		[Token(Token = "0x6002209")]
		[Address(RVA = "0x1043548", Offset = "0x1043548", VA = "0x1043548")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92C744", Offset = "0x92C744")]
		public static CompressedElement Extrapolate(ElementCrusher crusher, CompressedElement curr, CompressedElement prev, int divisor = 2)
		{
			return null;
		}

		[Token(Token = "0x600220A")]
		[Address(RVA = "0x1043628", Offset = "0x1043628", VA = "0x1043628")]
		public static void Extrapolate(CompressedElement target, CompressedElement curr, CompressedElement prev, int divisor = 2)
		{
		}

		[Token(Token = "0x600220B")]
		[Address(RVA = "0x1043698", Offset = "0x1043698", VA = "0x1043698")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92C754", Offset = "0x92C754")]
		public static CompressedElement Extrapolate(CompressedElement curr, CompressedElement prev, int divisor = 2)
		{
			return null;
		}

		[Token(Token = "0x600220C")]
		[Address(RVA = "0x1043774", Offset = "0x1043774", VA = "0x1043774")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92C764", Offset = "0x92C764")]
		public static void Extrapolate(ElementCrusher crusher, CompressedElement target, CompressedElement curr, CompressedElement prev, float amount = 0.5f)
		{
		}

		[Token(Token = "0x600220D")]
		[Address(RVA = "0x10438A0", Offset = "0x10438A0", VA = "0x10438A0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92C774", Offset = "0x92C774")]
		public static CompressedElement Extrapolate(ElementCrusher crusher, CompressedElement curr, CompressedElement prev, float amount = 0.5f)
		{
			return null;
		}

		[Token(Token = "0x600220E")]
		[Address(RVA = "0x1043A08", Offset = "0x1043A08", VA = "0x1043A08")]
		public static void Extrapolate(CompressedElement target, CompressedElement curr, CompressedElement prev, float amount = 0.5f)
		{
		}

		[Token(Token = "0x600220F")]
		[Address(RVA = "0x1043B34", Offset = "0x1043B34", VA = "0x1043B34")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92C784", Offset = "0x92C784")]
		public static CompressedElement Extrapolate(CompressedElement curr, CompressedElement prev, float amount = 0.5f)
		{
			return null;
		}

		[Token(Token = "0x6002210")]
		[Address(RVA = "0x1043C9C", Offset = "0x1043C9C", VA = "0x1043C9C")]
		public static BitCullingLevel GetGuessableBitCullLevel(CompressedElement a, CompressedElement b, BitCullingLevel maxCullLvl)
		{
			return default(BitCullingLevel);
		}

		[Token(Token = "0x6002211")]
		[Address(RVA = "0x1043EE8", Offset = "0x1043EE8", VA = "0x1043EE8")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92C794", Offset = "0x92C794")]
		public static BitCullingLevel GetGuessableBitCullLevel(CompressedElement oldComp, CompressedElement newComp, ElementCrusher ec, BitCullingLevel maxCullLvl)
		{
			return default(BitCullingLevel);
		}

		[Token(Token = "0x6002212")]
		[Address(RVA = "0x1044134", Offset = "0x1044134", VA = "0x1044134")]
		public static BitCullingLevel FindBestBitCullLevel(CompressedElement a, CompressedElement b, BitCullingLevel maxCulling)
		{
			return default(BitCullingLevel);
		}

		[Token(Token = "0x6002213")]
		[Address(RVA = "0x1044474", Offset = "0x1044474", VA = "0x1044474")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92C7A4", Offset = "0x92C7A4")]
		public static BitCullingLevel FindBestBitCullLevel(CompressedElement a, CompressedElement b, ElementCrusher ec, BitCullingLevel maxCulling)
		{
			return default(BitCullingLevel);
		}

		[Token(Token = "0x6002214")]
		[Address(RVA = "0x1044760", Offset = "0x1044760", VA = "0x1044760")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92C7B4", Offset = "0x92C7B4")]
		public static BitCullingLevel FindBestBitCullLevel(CompressedElement a, CompressedElement b, FloatCrusher[] ec, BitCullingLevel maxCulling)
		{
			return default(BitCullingLevel);
		}

		[Token(Token = "0x6002215")]
		[Address(RVA = "0x1044A20", Offset = "0x1044A20", VA = "0x1044A20")]
		private static bool TestMatchingUpper(uint a, uint b, int lowerbits)
		{
			return default(bool);
		}

		[Token(Token = "0x6002216")]
		[Address(RVA = "0x1044304", Offset = "0x1044304", VA = "0x1044304")]
		public static bool TestMatchingUpper(CompressedElement a, CompressedElement b, BitCullingLevel bcl)
		{
			return default(bool);
		}

		[Token(Token = "0x6002217")]
		[Address(RVA = "0x10445CC", Offset = "0x10445CC", VA = "0x10445CC")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92C7C4", Offset = "0x92C7C4")]
		public static bool TestMatchingUpper(CompressedElement a, CompressedElement b, ElementCrusher ec, BitCullingLevel bcl)
		{
			return default(bool);
		}

		[Token(Token = "0x6002218")]
		[Address(RVA = "0x1044884", Offset = "0x1044884", VA = "0x1044884")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92C7D4", Offset = "0x92C7D4")]
		public static bool TestMatchingUpper(CompressedElement a, CompressedElement b, FloatCrusher[] ec, BitCullingLevel bcl)
		{
			return default(bool);
		}

		[Token(Token = "0x6002219")]
		[Address(RVA = "0x1044A38", Offset = "0x1044A38", VA = "0x1044A38", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600221A")]
		[Address(RVA = "0x104501C", Offset = "0x104501C", VA = "0x104501C")]
		public static bool operator ==(CompressedElement a, CompressedElement b)
		{
			return default(bool);
		}

		[Token(Token = "0x600221B")]
		[Address(RVA = "0x1045078", Offset = "0x1045078", VA = "0x1045078")]
		public static bool operator !=(CompressedElement a, CompressedElement b)
		{
			return default(bool);
		}

		[Token(Token = "0x600221C")]
		[Address(RVA = "0x10450D4", Offset = "0x10450D4", VA = "0x10450D4", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600221D")]
		[Address(RVA = "0x1043450", Offset = "0x1043450", VA = "0x1043450", Slot = "4")]
		public bool Equals(CompressedElement other)
		{
			return default(bool);
		}

		[Token(Token = "0x600221E")]
		[Address(RVA = "0x104519C", Offset = "0x104519C", VA = "0x104519C", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000513")]
	public static class CompressedElementExt
	{
		[Token(Token = "0x400241F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static uint[] reusableInts;

		[Token(Token = "0x6002220")]
		[Address(RVA = "0x12C55D0", Offset = "0x12C55D0", VA = "0x12C55D0")]
		public static StringBuilder AppendSB(this StringBuilder strb, CompressedElement ce)
		{
			return null;
		}

		[Token(Token = "0x6002221")]
		[Address(RVA = "0x12C58EC", Offset = "0x12C58EC", VA = "0x12C58EC")]
		public static void GetChangeAmount(uint[] results, CompressedElement a, CompressedElement b)
		{
		}

		[Token(Token = "0x6002222")]
		[Address(RVA = "0x12C59DC", Offset = "0x12C59DC", VA = "0x12C59DC")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92C7F4", Offset = "0x92C7F4")]
		public static uint[] GetChangeAmount(CompressedElement a, CompressedElement b)
		{
			return null;
		}

		[Token(Token = "0x6002223")]
		[Address(RVA = "0x12C5B28", Offset = "0x12C5B28", VA = "0x12C5B28")]
		public static void GuessUpperBits(this CompressedElement newcpos, ElementCrusher ec, CompressedElement oldcpos, BitCullingLevel bcl)
		{
		}

		[Token(Token = "0x6002224")]
		[Address(RVA = "0x12C5C8C", Offset = "0x12C5C8C", VA = "0x12C5C8C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92C814", Offset = "0x92C814")]
		public static CompressedElement GuessUpperBits(this CompressedElement newcpos, CompressedElement oldcpos, ElementCrusher ec, BitCullingLevel bcl)
		{
			return null;
		}

		[Token(Token = "0x6002225")]
		[Address(RVA = "0x12C5E2C", Offset = "0x12C5E2C", VA = "0x12C5E2C")]
		public static void OverwriteUpperBits(this CompressedElement low, CompressedElement uppers, BitCullingLevel bcl)
		{
		}

		[Token(Token = "0x6002226")]
		[Address(RVA = "0x12C5F10", Offset = "0x12C5F10", VA = "0x12C5F10")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92C85C", Offset = "0x92C85C")]
		public static CompressedElement OverwriteUpperBits(this CompressedElement low, CompressedElement up, ElementCrusher ec, BitCullingLevel bcl)
		{
			return null;
		}

		[Token(Token = "0x6002227")]
		[Address(RVA = "0x12C6054", Offset = "0x12C6054", VA = "0x12C6054")]
		public static void ZeroLowerBits(this CompressedElement fullpos, CompressedElement target, BitCullingLevel bcl)
		{
		}

		[Token(Token = "0x6002228")]
		[Address(RVA = "0x12C6128", Offset = "0x12C6128", VA = "0x12C6128")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92C8A4", Offset = "0x92C8A4")]
		public static CompressedElement ZeroLowerBits(this CompressedElement fullpos, ElementCrusher ec, BitCullingLevel bcl)
		{
			return null;
		}

		[Token(Token = "0x6002229")]
		[Address(RVA = "0x12C6258", Offset = "0x12C6258", VA = "0x12C6258")]
		public static void ZeroUpperBits(this CompressedElement fullpos, CompressedElement target, BitCullingLevel bcl)
		{
		}

		[Token(Token = "0x600222A")]
		[Address(RVA = "0x12C632C", Offset = "0x12C632C", VA = "0x12C632C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92C8EC", Offset = "0x92C8EC")]
		public static CompressedElement ZeroUpperBits(this CompressedElement fullpos, ElementCrusher ec, BitCullingLevel bcl)
		{
			return null;
		}
	}
	[Token(Token = "0x2000514")]
	public class CompressedMatrix : IEquatable<CompressedMatrix>
	{
		[Token(Token = "0x4002420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CompressedElement cPos;

		[Token(Token = "0x4002421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CompressedElement cRot;

		[Token(Token = "0x4002422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CompressedElement cScl;

		[Token(Token = "0x4002423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TransformCrusher crusher;

		[Token(Token = "0x4002424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static CompressedMatrix reusable;

		[Token(Token = "0x4002425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		protected static readonly ulong[] reusableArray64;

		[Token(Token = "0x4002426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected static readonly uint[] reusableArray32;

		[Token(Token = "0x4002427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected static readonly byte[] reusableArray8;

		[Token(Token = "0x600222C")]
		[Address(RVA = "0x12C64C8", Offset = "0x12C64C8", VA = "0x12C64C8")]
		public CompressedMatrix()
		{
		}

		[Token(Token = "0x600222D")]
		[Address(RVA = "0x12C6564", Offset = "0x12C6564", VA = "0x12C6564")]
		public CompressedMatrix(TransformCrusher crusher)
		{
		}

		[Token(Token = "0x600222E")]
		[Address(RVA = "0x12C660C", Offset = "0x12C660C", VA = "0x12C660C")]
		public CompressedMatrix(TransformCrusher crusher, CompressedElement cPos, CompressedElement cRot, CompressedElement cScl)
		{
		}

		[Token(Token = "0x600222F")]
		[Address(RVA = "0x12C66D4", Offset = "0x12C66D4", VA = "0x12C66D4")]
		public CompressedMatrix(TransformCrusher crusher, ref CompressedElement cPos, ref CompressedElement cRot, ref CompressedElement cScl, int pBits, int rBits, int sBits)
		{
		}

		[Token(Token = "0x6002230")]
		[Address(RVA = "0x12C67B0", Offset = "0x12C67B0", VA = "0x12C67B0")]
		public void CopyTo(CompressedMatrix copyTarget)
		{
		}

		[Token(Token = "0x6002231")]
		[Address(RVA = "0x12C6810", Offset = "0x12C6810", VA = "0x12C6810")]
		public void CopyFrom(CompressedMatrix copySource)
		{
		}

		[Token(Token = "0x6002232")]
		[Address(RVA = "0x12C6870", Offset = "0x12C6870", VA = "0x12C6870")]
		public void Clear()
		{
		}

		[Token(Token = "0x6002233")]
		[Address(RVA = "0x12C68C0", Offset = "0x12C68C0", VA = "0x12C68C0")]
		public ulong[] AsArray64(BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x6002234")]
		[Address(RVA = "0x12C6990", Offset = "0x12C6990", VA = "0x12C6990")]
		public void AsArray64(ulong[] nonalloc, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x6002235")]
		[Address(RVA = "0x12C69F0", Offset = "0x12C69F0", VA = "0x12C69F0")]
		public uint[] AsArray32(BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x6002236")]
		[Address(RVA = "0x12C6AC0", Offset = "0x12C6AC0", VA = "0x12C6AC0")]
		public void AsArray32(uint[] nonalloc, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x6002237")]
		[Address(RVA = "0x12C6B20", Offset = "0x12C6B20", VA = "0x12C6B20")]
		public byte[] AsArray8(BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x6002238")]
		[Address(RVA = "0x12C6BF0", Offset = "0x12C6BF0", VA = "0x12C6BF0")]
		public void AsArray8(byte[] nonalloc, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x6002239")]
		[Address(RVA = "0x12C6C50", Offset = "0x12C6C50", VA = "0x12C6C50")]
		public static explicit operator ulong(CompressedMatrix cm)
		{
			return default(ulong);
		}

		[Token(Token = "0x600223A")]
		[Address(RVA = "0x12C6C9C", Offset = "0x12C6C9C", VA = "0x12C6C9C")]
		public static explicit operator uint(CompressedMatrix cm)
		{
			return default(uint);
		}

		[Token(Token = "0x600223B")]
		[Address(RVA = "0x12C6CE8", Offset = "0x12C6CE8", VA = "0x12C6CE8")]
		public static explicit operator ushort(CompressedMatrix cm)
		{
			return default(ushort);
		}

		[Token(Token = "0x600223C")]
		[Address(RVA = "0x12C6D34", Offset = "0x12C6D34", VA = "0x12C6D34")]
		public static explicit operator byte(CompressedMatrix cm)
		{
			return default(byte);
		}

		[Token(Token = "0x600223D")]
		[Address(RVA = "0x12C6D80", Offset = "0x12C6D80", VA = "0x12C6D80")]
		public static explicit operator ulong[](CompressedMatrix cm)
		{
			return null;
		}

		[Token(Token = "0x600223E")]
		[Address(RVA = "0x12C6D98", Offset = "0x12C6D98", VA = "0x12C6D98")]
		public static explicit operator uint[](CompressedMatrix cm)
		{
			return null;
		}

		[Token(Token = "0x600223F")]
		[Address(RVA = "0x12C6DB0", Offset = "0x12C6DB0", VA = "0x12C6DB0")]
		public static explicit operator byte[](CompressedMatrix cm)
		{
			return null;
		}

		[Token(Token = "0x6002240")]
		[Address(RVA = "0x12C6DC8", Offset = "0x12C6DC8", VA = "0x12C6DC8")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92C924", Offset = "0x92C924")]
		public Bitstream ExtractBitstream(BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(Bitstream);
		}

		[Token(Token = "0x6002241")]
		[Address(RVA = "0x12C6E28", Offset = "0x12C6E28", VA = "0x12C6E28")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92C95C", Offset = "0x92C95C")]
		public void ExtractBitstream(ref Bitstream bitstream, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x6002242")]
		[Address(RVA = "0x12C6E54", Offset = "0x12C6E54", VA = "0x12C6E54")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92C994", Offset = "0x92C994")]
		public void Read(ref Bitstream bitstream, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x6002243")]
		[Address(RVA = "0x12C6F4C", Offset = "0x12C6F4C", VA = "0x12C6F4C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92C9CC", Offset = "0x92C9CC")]
		public void Read(TransformCrusher crusher, ref Bitstream bitstream, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x6002244")]
		[Address(RVA = "0x12C7050", Offset = "0x12C7050", VA = "0x12C7050")]
		public void Decompress(Matrix nonalloc)
		{
		}

		[Token(Token = "0x6002245")]
		[Address(RVA = "0x12C7104", Offset = "0x12C7104", VA = "0x12C7104")]
		public Matrix Decompress()
		{
			return null;
		}

		[Token(Token = "0x6002246")]
		[Address(RVA = "0x12C719C", Offset = "0x12C719C", VA = "0x12C719C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92CA04", Offset = "0x92CA04")]
		public void Apply()
		{
		}

		[Token(Token = "0x6002247")]
		[Address(RVA = "0x12C7230", Offset = "0x12C7230", VA = "0x12C7230")]
		public void Apply(Transform t)
		{
		}

		[Token(Token = "0x6002248")]
		[Address(RVA = "0x12C72D8", Offset = "0x12C72D8", VA = "0x12C72D8")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92CA3C", Offset = "0x92CA3C")]
		public void Apply(Rigidbody rb)
		{
		}

		[Token(Token = "0x6002249")]
		[Address(RVA = "0x12C7380", Offset = "0x12C7380", VA = "0x12C7380")]
		public void Set(Rigidbody rb)
		{
		}

		[Token(Token = "0x600224A")]
		[Address(RVA = "0x12C7428", Offset = "0x12C7428", VA = "0x12C7428")]
		public void Move(Rigidbody rb)
		{
		}

		[Token(Token = "0x600224B")]
		[Address(RVA = "0x12C74D0", Offset = "0x12C74D0", VA = "0x12C74D0")]
		public static bool operator ==(CompressedMatrix a, CompressedMatrix b)
		{
			return default(bool);
		}

		[Token(Token = "0x600224C")]
		[Address(RVA = "0x12C7554", Offset = "0x12C7554", VA = "0x12C7554")]
		public static bool operator !=(CompressedMatrix a, CompressedMatrix b)
		{
			return default(bool);
		}

		[Token(Token = "0x600224D")]
		[Address(RVA = "0x12C757C", Offset = "0x12C757C", VA = "0x12C757C", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600224E")]
		[Address(RVA = "0x12C74DC", Offset = "0x12C74DC", VA = "0x12C74DC", Slot = "4")]
		public bool Equals(CompressedMatrix other)
		{
			return default(bool);
		}

		[Token(Token = "0x600224F")]
		[Address(RVA = "0x12C7608", Offset = "0x12C7608", VA = "0x12C7608", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000515")]
	public class CompressedMatrixRB : CompressedMatrix
	{
		[Token(Token = "0x4002428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public CompressedElement cVel;

		[Token(Token = "0x4002429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public CompressedElement cAng;

		[Token(Token = "0x400242A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public new static CompressedMatrixRB reusable;

		[Token(Token = "0x6002251")]
		[Address(RVA = "0x12C77CC", Offset = "0x12C77CC", VA = "0x12C77CC")]
		public CompressedMatrixRB()
		{
		}

		[Token(Token = "0x6002252")]
		[Address(RVA = "0x12C7878", Offset = "0x12C7878", VA = "0x12C7878")]
		public CompressedMatrixRB(RigidbodyCrusher crusher)
		{
		}

		[Token(Token = "0x6002253")]
		[Address(RVA = "0x12C7930", Offset = "0x12C7930", VA = "0x12C7930")]
		public void CopyTo(CompressedMatrixRB copyTarget)
		{
		}

		[Token(Token = "0x6002254")]
		[Address(RVA = "0x12C79B8", Offset = "0x12C79B8", VA = "0x12C79B8")]
		public void CopyFrom(CompressedMatrixRB copySource)
		{
		}

		[Token(Token = "0x6002255")]
		[Address(RVA = "0x12C7A40", Offset = "0x12C7A40", VA = "0x12C7A40")]
		public new void Clear()
		{
		}
	}
	[Token(Token = "0x2000516")]
	public struct CompressedQuat
	{
		[Token(Token = "0x400242B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly QuatCrusher crusher;

		[Token(Token = "0x400242C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly ulong cvalue;

		[Token(Token = "0x6002257")]
		[Address(RVA = "0x12C7B0C", Offset = "0x12C7B0C", VA = "0x12C7B0C")]
		public CompressedQuat(QuatCrusher crusher, ulong cvalue)
		{
		}

		[Token(Token = "0x6002258")]
		[Address(RVA = "0x12C7B14", Offset = "0x12C7B14", VA = "0x12C7B14")]
		public CompressedQuat(QuatCrusher crusher, uint cvalue)
		{
		}

		[Token(Token = "0x6002259")]
		[Address(RVA = "0x12C7B20", Offset = "0x12C7B20", VA = "0x12C7B20")]
		public CompressedQuat(QuatCrusher crusher, ushort cvalue)
		{
		}

		[Token(Token = "0x600225A")]
		[Address(RVA = "0x12C7B2C", Offset = "0x12C7B2C", VA = "0x12C7B2C")]
		public CompressedQuat(QuatCrusher crusher, byte cvalue)
		{
		}

		[Token(Token = "0x600225B")]
		[Address(RVA = "0x12C7B38", Offset = "0x12C7B38", VA = "0x12C7B38")]
		public static implicit operator ulong(CompressedQuat cv)
		{
			return default(ulong);
		}

		[Token(Token = "0x600225C")]
		[Address(RVA = "0x12C7B40", Offset = "0x12C7B40", VA = "0x12C7B40")]
		public static explicit operator uint(CompressedQuat cv)
		{
			return default(uint);
		}

		[Token(Token = "0x600225D")]
		[Address(RVA = "0x12C7B48", Offset = "0x12C7B48", VA = "0x12C7B48")]
		public static explicit operator ushort(CompressedQuat cv)
		{
			return default(ushort);
		}

		[Token(Token = "0x600225E")]
		[Address(RVA = "0x12C7B50", Offset = "0x12C7B50", VA = "0x12C7B50")]
		public static explicit operator byte(CompressedQuat cv)
		{
			return default(byte);
		}

		[Token(Token = "0x600225F")]
		[Address(RVA = "0x12C7B58", Offset = "0x12C7B58", VA = "0x12C7B58")]
		public Quaternion Decompress()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6002260")]
		[Address(RVA = "0x12C7B7C", Offset = "0x12C7B7C", VA = "0x12C7B7C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[StructLayout(2)]
	[Token(Token = "0x2000517")]
	public struct Element : IEquatable<Element>
	{
		[Token(Token = "0x2000518")]
		public enum VectorType
		{
			[Token(Token = "0x4002431")]
			Vector3 = 1,
			[Token(Token = "0x4002432")]
			Quaternion
		}

		[Token(Token = "0x400242D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VectorType vectorType;

		[Token(Token = "0x400242E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Vector3 v;

		[Token(Token = "0x400242F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Quaternion quat;

		[Token(Token = "0x6002261")]
		[Address(RVA = "0xDA8C58", Offset = "0xDA8C58", VA = "0xDA8C58")]
		public Element(Vector3 v)
		{
		}

		[Token(Token = "0x6002262")]
		[Address(RVA = "0xDA8C70", Offset = "0xDA8C70", VA = "0xDA8C70")]
		public Element(Quaternion quat)
		{
		}

		[Token(Token = "0x6002263")]
		[Address(RVA = "0xDA8C84", Offset = "0xDA8C84", VA = "0xDA8C84")]
		public static explicit operator Quaternion(Element e)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6002264")]
		[Address(RVA = "0xDA8CB8", Offset = "0xDA8CB8", VA = "0xDA8CB8")]
		public static explicit operator Vector3(Element e)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002265")]
		[Address(RVA = "0xDA8CEC", Offset = "0xDA8CEC", VA = "0xDA8CEC")]
		public static Element Slerp(Element a, Element b, float t)
		{
			return default(Element);
		}

		[Token(Token = "0x6002266")]
		[Address(RVA = "0xDA8E5C", Offset = "0xDA8E5C", VA = "0xDA8E5C")]
		public static Element SlerpUnclamped(Element a, Element b, float t)
		{
			return default(Element);
		}

		[Token(Token = "0x6002267")]
		[Address(RVA = "0xDA8FA0", Offset = "0xDA8FA0", VA = "0xDA8FA0")]
		public static bool operator ==(Element a, Element b)
		{
			return default(bool);
		}

		[Token(Token = "0x6002268")]
		[Address(RVA = "0xDA902C", Offset = "0xDA902C", VA = "0xDA902C")]
		public static bool operator !=(Element a, Element b)
		{
			return default(bool);
		}

		[Token(Token = "0x6002269")]
		[Address(RVA = "0xDA90A4", Offset = "0xDA90A4", VA = "0xDA90A4", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600226A")]
		[Address(RVA = "0xDA9140", Offset = "0xDA9140", VA = "0xDA9140", Slot = "4")]
		public bool Equals(Element other)
		{
			return default(bool);
		}

		[Token(Token = "0x600226B")]
		[Address(RVA = "0xDA91C4", Offset = "0xDA91C4", VA = "0xDA91C4")]
		public static bool Equals(Vector3 a, Vector3 b)
		{
			return default(bool);
		}

		[Token(Token = "0x600226C")]
		[Address(RVA = "0xDA91EC", Offset = "0xDA91EC", VA = "0xDA91EC")]
		public static bool Equals(Quaternion a, Quaternion b)
		{
			return default(bool);
		}

		[Token(Token = "0x600226D")]
		[Address(RVA = "0xDA8E30", Offset = "0xDA8E30", VA = "0xDA8E30")]
		public static implicit operator Element(Quaternion q)
		{
			return default(Element);
		}

		[Token(Token = "0x600226E")]
		[Address(RVA = "0xDA8E44", Offset = "0xDA8E44", VA = "0xDA8E44")]
		public static implicit operator Element(Vector3 v)
		{
			return default(Element);
		}

		[Token(Token = "0x600226F")]
		[Address(RVA = "0xDA921C", Offset = "0xDA921C", VA = "0xDA921C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6002270")]
		[Address(RVA = "0xDA92E8", Offset = "0xDA92E8", VA = "0xDA92E8", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000519")]
	public enum IncludedAxes
	{
		[Token(Token = "0x4002434")]
		None = 0,
		[Token(Token = "0x4002435")]
		X = 1,
		[Token(Token = "0x4002436")]
		Y = 2,
		[Token(Token = "0x4002437")]
		XY = 3,
		[Token(Token = "0x4002438")]
		Z = 4,
		[Token(Token = "0x4002439")]
		XZ = 5,
		[Token(Token = "0x400243A")]
		YZ = 6,
		[Token(Token = "0x400243B")]
		XYZ = 7,
		[Token(Token = "0x400243C")]
		Uniform = 15
	}
	[Token(Token = "0x200051A")]
	public static class IncludeAxisExtensions
	{
		[Token(Token = "0x6002271")]
		[Address(RVA = "0x13A9E40", Offset = "0x13A9E40", VA = "0x13A9E40")]
		public static float SqrMagnitude(this Vector3 v, IncludedAxes ia)
		{
			return default(float);
		}

		[Token(Token = "0x6002272")]
		[Address(RVA = "0x13A9E74", Offset = "0x13A9E74", VA = "0x13A9E74")]
		public static float Magnitude(this Vector3 v, IncludedAxes ia)
		{
			return default(float);
		}

		[Token(Token = "0x6002273")]
		[Address(RVA = "0x13A9EBC", Offset = "0x13A9EBC", VA = "0x13A9EBC")]
		public static Vector3 Lerp(this GameObject go, Vector3 start, Vector3 end, IncludedAxes ia, float t, bool localPosition = false)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002274")]
		[Address(RVA = "0x13AA05C", Offset = "0x13AA05C", VA = "0x13AA05C")]
		public static void SetPosition(this GameObject go, Vector3 pos, IncludedAxes ia, bool localPosition = false)
		{
		}
	}
	[Token(Token = "0x200051B")]
	public class XYZSwitchMaskAttribute : PropertyAttribute
	{
		[Token(Token = "0x6002275")]
		[Address(RVA = "0x1263AF0", Offset = "0x1263AF0", VA = "0x1263AF0")]
		public XYZSwitchMaskAttribute()
		{
		}
	}
	[Token(Token = "0x200051C")]
	public class Matrix
	{
		[Token(Token = "0x400243D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TransformCrusher crusher;

		[Token(Token = "0x400243E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 position;

		[Token(Token = "0x400243F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Element rotation;

		[Token(Token = "0x4002440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 scale;

		[Token(Token = "0x4002441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Matrix reusable;

		[Token(Token = "0x6002276")]
		[Address(RVA = "0x1363B9C", Offset = "0x1363B9C", VA = "0x1363B9C")]
		public Matrix()
		{
		}

		[Token(Token = "0x6002277")]
		[Address(RVA = "0x1363BA4", Offset = "0x1363BA4", VA = "0x1363BA4")]
		public Matrix(TransformCrusher crusher)
		{
		}

		[Token(Token = "0x6002278")]
		[Address(RVA = "0x1363BD0", Offset = "0x1363BD0", VA = "0x1363BD0")]
		public Matrix(TransformCrusher crusher, Vector3 position, Element rotation, Vector3 scale)
		{
		}

		[Token(Token = "0x6002279")]
		[Address(RVA = "0x1363C58", Offset = "0x1363C58", VA = "0x1363C58")]
		public Matrix(TransformCrusher crusher, Transform transform)
		{
		}

		[Token(Token = "0x600227A")]
		[Address(RVA = "0x1363F9C", Offset = "0x1363F9C", VA = "0x1363F9C")]
		public void Set(TransformCrusher crusher, Vector3 position, Element rotation, Vector3 scale)
		{
		}

		[Token(Token = "0x600227B")]
		[Address(RVA = "0x1363FC4", Offset = "0x1363FC4", VA = "0x1363FC4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92CAB4", Offset = "0x92CAB4")]
		public void Set(TransformCrusher crusher, Transform transform)
		{
		}

		[Token(Token = "0x600227C")]
		[Address(RVA = "0x1363FC8", Offset = "0x1363FC8", VA = "0x1363FC8")]
		public void Capture(TransformCrusher crusher, Transform transform)
		{
		}

		[Token(Token = "0x600227D")]
		[Address(RVA = "0x1364148", Offset = "0x1364148", VA = "0x1364148")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92CAEC", Offset = "0x92CAEC")]
		public void Set(Transform transform)
		{
		}

		[Token(Token = "0x600227E")]
		[Address(RVA = "0x136414C", Offset = "0x136414C", VA = "0x136414C")]
		public void Capture(Transform transform)
		{
		}

		[Token(Token = "0x600227F")]
		[Address(RVA = "0x13642D4", Offset = "0x13642D4", VA = "0x13642D4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92CB24", Offset = "0x92CB24")]
		public void Set(TransformCrusher crusher, Rigidbody rb)
		{
		}

		[Token(Token = "0x6002280")]
		[Address(RVA = "0x13642D8", Offset = "0x13642D8", VA = "0x13642D8")]
		public void Capture(TransformCrusher crusher, Rigidbody rb)
		{
		}

		[Token(Token = "0x6002281")]
		[Address(RVA = "0x136447C", Offset = "0x136447C", VA = "0x136447C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92CB5C", Offset = "0x92CB5C")]
		public void Set(Rigidbody rb)
		{
		}

		[Token(Token = "0x6002282")]
		[Address(RVA = "0x1364480", Offset = "0x1364480", VA = "0x1364480")]
		public void Capture(Rigidbody rb)
		{
		}

		[Token(Token = "0x6002283")]
		[Address(RVA = "0x136462C", Offset = "0x136462C", VA = "0x136462C")]
		public void Clear()
		{
		}

		[Token(Token = "0x6002284")]
		[Address(RVA = "0x1364634", Offset = "0x1364634", VA = "0x1364634")]
		public void Compress(CompressedMatrix nonalloc)
		{
		}

		[Token(Token = "0x6002285")]
		[Address(RVA = "0x1364654", Offset = "0x1364654", VA = "0x1364654")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92CB94", Offset = "0x92CB94")]
		public Bitstream Compress()
		{
			return default(Bitstream);
		}

		[Token(Token = "0x6002286")]
		[Address(RVA = "0x13646A4", Offset = "0x13646A4", VA = "0x13646A4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92CBCC", Offset = "0x92CBCC")]
		public void Apply()
		{
		}

		[Token(Token = "0x6002287")]
		[Address(RVA = "0x13646C4", Offset = "0x13646C4", VA = "0x13646C4")]
		public void Apply(Transform t)
		{
		}

		[Token(Token = "0x6002288")]
		[Address(RVA = "0x13647B4", Offset = "0x13647B4", VA = "0x13647B4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92CC04", Offset = "0x92CC04")]
		public void Apply(Rigidbody rb)
		{
		}

		[Token(Token = "0x6002289")]
		[Address(RVA = "0x13648A4", Offset = "0x13648A4", VA = "0x13648A4")]
		public static Matrix Lerp(Matrix target, Matrix start, Matrix end, float t)
		{
			return null;
		}

		[Token(Token = "0x600228A")]
		[Address(RVA = "0x1364C0C", Offset = "0x1364C0C", VA = "0x1364C0C")]
		public static Matrix LerpUnclamped(Matrix target, Matrix start, Matrix end, float t)
		{
			return null;
		}

		[Token(Token = "0x600228B")]
		[Address(RVA = "0x1364F48", Offset = "0x1364F48", VA = "0x1364F48")]
		public static Matrix CatmullRomLerpUnclamped(Matrix target, Matrix pre, Matrix start, Matrix end, Matrix post, float t)
		{
			return null;
		}

		[Token(Token = "0x600228C")]
		[Address(RVA = "0x13652B8", Offset = "0x13652B8", VA = "0x13652B8")]
		public static Matrix CatmullRomLerpUnclamped(Matrix target, Matrix pre, Matrix start, Matrix end, float t)
		{
			return null;
		}

		[Token(Token = "0x600228D")]
		[Address(RVA = "0x1365600", Offset = "0x1365600", VA = "0x1365600", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200051D")]
	public static class MatrixExtensions
	{
		[Token(Token = "0x600228F")]
		[Address(RVA = "0x1365948", Offset = "0x1365948", VA = "0x1365948")]
		public static void CopyFrom(this Matrix target, Matrix src)
		{
		}
	}
	[Token(Token = "0x200051E")]
	public class MatrixRB : Matrix
	{
		[Token(Token = "0x4002442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector3 velocity;

		[Token(Token = "0x4002443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Vector3 angularVelocity;

		[Token(Token = "0x4002444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public new static readonly MatrixRB reusable;

		[Token(Token = "0x6002290")]
		[Address(RVA = "0x136599C", Offset = "0x136599C", VA = "0x136599C")]
		public MatrixRB()
		{
		}

		[Token(Token = "0x6002291")]
		[Address(RVA = "0x1365A00", Offset = "0x1365A00", VA = "0x1365A00")]
		public MatrixRB(TransformCrusher crusher)
		{
		}

		[Token(Token = "0x6002292")]
		[Address(RVA = "0x1365A78", Offset = "0x1365A78", VA = "0x1365A78")]
		public MatrixRB(TransformCrusher crusher, Vector3 position, Element rotation, Vector3 scale)
		{
		}

		[Token(Token = "0x6002293")]
		[Address(RVA = "0x1365B44", Offset = "0x1365B44", VA = "0x1365B44")]
		public MatrixRB(TransformCrusher crusher, Transform transform)
		{
		}
	}
	[Token(Token = "0x200051F")]
	public interface IHasTransformCrusher
	{
		[Token(Token = "0x170001F3")]
		TransformCrusher TC
		{
			[Token(Token = "0x6002295")]
			get;
		}
	}
	[Serializable]
	[Token(Token = "0x2000520")]
	public class TransformCrusher : Crusher<TransformCrusher>, ICrusherCopy<TransformCrusher>
	{
		[Token(Token = "0x4002445")]
		public const int VersionMajor = 3;

		[Token(Token = "0x4002446")]
		public const int VersionMinor = 5;

		[Token(Token = "0x4002447")]
		public const int VersionRevision = 3;

		[Token(Token = "0x4002448")]
		public const int Build = 3503;

		[Token(Token = "0x4002449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Dictionary<int, TransformCrusher> staticTransformCrushers;

		[Token(Token = "0x400244A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91D8C4", Offset = "0x91D8C4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x91D8C4", Offset = "0x91D8C4")]
		[HideInInspector]
		public Transform defaultTransform;

		[Token(Token = "0x400244B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected ElementCrusher posCrusher;

		[Token(Token = "0x400244C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected ElementCrusher rotCrusher;

		[Token(Token = "0x400244D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		protected ElementCrusher sclCrusher;

		[NonSerialized]
		[Token(Token = "0x400244E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected readonly int[] cached_pBits;

		[NonSerialized]
		[Token(Token = "0x400244F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected readonly int[] cached_rBits;

		[NonSerialized]
		[Token(Token = "0x4002450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected readonly int[] cached_sBits;

		[NonSerialized]
		[Token(Token = "0x4002451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected readonly int[] _cached_total;

		[Token(Token = "0x4002452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public ReadOnlyCollection<int> cached_total;

		[Token(Token = "0x4002453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected bool cached;

		[Token(Token = "0x4002454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static ulong[] reusableArray64;

		[Token(Token = "0x4002455")]
		private const string transformMissingError = "The 'defaultTransform' is null and has not be set in the inspector. For non-editor usages of TransformCrusher you need to pass the target transform to this method.";

		[Token(Token = "0x170001F4")]
		public ElementCrusher PosCrusher
		{
			[Token(Token = "0x6002297")]
			[Address(RVA = "0xF16A60", Offset = "0xF16A60", VA = "0xF16A60")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002298")]
			[Address(RVA = "0xF16A68", Offset = "0xF16A68", VA = "0xF16A68")]
			set
			{
			}
		}

		[Token(Token = "0x170001F5")]
		public ElementCrusher RotCrusher
		{
			[Token(Token = "0x6002299")]
			[Address(RVA = "0xF16C50", Offset = "0xF16C50", VA = "0xF16C50")]
			get
			{
				return null;
			}
			[Token(Token = "0x600229A")]
			[Address(RVA = "0xF16C58", Offset = "0xF16C58", VA = "0xF16C58")]
			set
			{
			}
		}

		[Token(Token = "0x170001F6")]
		public ElementCrusher SclCrusher
		{
			[Token(Token = "0x600229B")]
			[Address(RVA = "0xF16E40", Offset = "0xF16E40", VA = "0xF16E40")]
			get
			{
				return null;
			}
			[Token(Token = "0x600229C")]
			[Address(RVA = "0xF16E48", Offset = "0xF16E48", VA = "0xF16E48")]
			set
			{
			}
		}

		[Token(Token = "0x6002296")]
		[Address(RVA = "0xF1688C", Offset = "0xF1688C", VA = "0xF1688C")]
		public static TransformCrusher CheckAgainstStatics(TransformCrusher tc, bool CheckElementCrusherAsWell = true)
		{
			return null;
		}

		[Token(Token = "0x600229D")]
		[Address(RVA = "0xF17030", Offset = "0xF17030", VA = "0xF17030")]
		public void OnCrusherChange(ElementCrusher crusher)
		{
		}

		[Token(Token = "0x600229E")]
		[Address(RVA = "0xF1703C", Offset = "0xF1703C", VA = "0xF1703C")]
		public TransformCrusher()
		{
		}

		[Token(Token = "0x600229F")]
		[Address(RVA = "0xF170F0", Offset = "0xF170F0", VA = "0xF170F0")]
		public TransformCrusher(bool isStatic = false)
		{
		}

		[Token(Token = "0x60022A0")]
		[Address(RVA = "0xF171B0", Offset = "0xF171B0", VA = "0xF171B0", Slot = "8")]
		protected virtual void ConstructDefault(bool isStatic = false)
		{
		}

		[Token(Token = "0x60022A1")]
		[Address(RVA = "0xF173D0", Offset = "0xF173D0", VA = "0xF173D0", Slot = "7")]
		public override void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x60022A2")]
		[Address(RVA = "0xF173D4", Offset = "0xF173D4", VA = "0xF173D4", Slot = "6")]
		public override void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x60022A3")]
		[Address(RVA = "0xF173E0", Offset = "0xF173E0", VA = "0xF173E0", Slot = "9")]
		public virtual void CacheValues()
		{
		}

		[Token(Token = "0x60022A4")]
		[Address(RVA = "0xF17670", Offset = "0xF17670", VA = "0xF17670")]
		public void Write(CompressedMatrix cm, byte[] buffer, ref int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60022A5")]
		[Address(RVA = "0xF177CC", Offset = "0xF177CC", VA = "0xF177CC")]
		public void Write(CompressedMatrix cm, uint[] buffer, ref int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60022A6")]
		[Address(RVA = "0xF17928", Offset = "0xF17928", VA = "0xF17928")]
		public void Write(CompressedMatrix cm, ulong[] buffer, ref int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60022A7")]
		[Address(RVA = "0xF17A84", Offset = "0xF17A84", VA = "0xF17A84")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92CC4C", Offset = "0x92CC4C")]
		public Bitstream Write(byte[] buffer, ref int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(Bitstream);
		}

		[Token(Token = "0x60022A8")]
		[Address(RVA = "0xF17B60", Offset = "0xF17B60", VA = "0xF17B60")]
		public void Write(CompressedMatrix nonalloc, Transform transform, byte[] buffer, ref int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60022A9")]
		[Address(RVA = "0xF17CC8", Offset = "0xF17CC8", VA = "0xF17CC8")]
		public void Write(Transform transform, byte[] buffer, ref int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60022AA")]
		[Address(RVA = "0xF17D64", Offset = "0xF17D64", VA = "0xF17D64")]
		public Matrix ReadAndDecompress(ulong[] array, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x60022AB")]
		[Address(RVA = "0xF17E30", Offset = "0xF17E30", VA = "0xF17E30")]
		public Matrix ReadAndDecompress(uint[] array, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x60022AC")]
		[Address(RVA = "0xF17EFC", Offset = "0xF17EFC", VA = "0xF17EFC")]
		public Matrix ReadAndDecompress(byte[] array, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x60022AD")]
		[Address(RVA = "0xF17FC8", Offset = "0xF17FC8", VA = "0xF17FC8")]
		public void ReadAndDecompress(Matrix nonalloc, ulong[] array, ref int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60022AE")]
		[Address(RVA = "0xF1846C", Offset = "0xF1846C", VA = "0xF1846C")]
		public void ReadAndDecompress(Matrix nonalloc, uint[] array, ref int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60022AF")]
		[Address(RVA = "0xF18674", Offset = "0xF18674", VA = "0xF18674")]
		public void ReadAndDecompress(Matrix nonalloc, byte[] array, ref int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60022B0")]
		[Address(RVA = "0xF17D8C", Offset = "0xF17D8C", VA = "0xF17D8C")]
		public Matrix ReadAndDecompress(ulong[] array, ref int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x60022B1")]
		[Address(RVA = "0xF17E58", Offset = "0xF17E58", VA = "0xF17E58")]
		public Matrix ReadAndDecompress(uint[] array, ref int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x60022B2")]
		[Address(RVA = "0xF17F24", Offset = "0xF17F24", VA = "0xF17F24")]
		public Matrix ReadAndDecompress(byte[] array, ref int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x60022B3")]
		[Address(RVA = "0xF18724", Offset = "0xF18724", VA = "0xF18724")]
		public void Read(CompressedMatrix nonalloc, byte[] array, ref int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60022B4")]
		[Address(RVA = "0xF1887C", Offset = "0xF1887C", VA = "0xF1887C")]
		public CompressedMatrix Read(ulong[] array, ref int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x60022B5")]
		[Address(RVA = "0xF18920", Offset = "0xF18920", VA = "0xF18920")]
		public CompressedMatrix Read(uint[] array, ref int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x60022B6")]
		[Address(RVA = "0xF189C4", Offset = "0xF189C4", VA = "0xF189C4")]
		public CompressedMatrix Read(byte[] array, ref int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x60022B7")]
		[Address(RVA = "0xF18A68", Offset = "0xF18A68", VA = "0xF18A68")]
		public CompressedMatrix Read(ulong[] array, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x60022B8")]
		[Address(RVA = "0xF18B0C", Offset = "0xF18B0C", VA = "0xF18B0C")]
		public CompressedMatrix Read(uint[] array, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x60022B9")]
		[Address(RVA = "0xF18BB0", Offset = "0xF18BB0", VA = "0xF18BB0")]
		public CompressedMatrix Read(byte[] array, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x60022BA")]
		[Address(RVA = "0xF18078", Offset = "0xF18078", VA = "0xF18078")]
		public void Read(CompressedMatrix nonalloc, ulong[] buffer, ref int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60022BB")]
		[Address(RVA = "0xF1851C", Offset = "0xF1851C", VA = "0xF1851C")]
		public void Read(CompressedMatrix nonalloc, uint[] buffer, ref int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60022BC")]
		[Address(RVA = "0xF18C54", Offset = "0xF18C54", VA = "0xF18C54")]
		public void Write(CompressedMatrix nonalloc, Transform transform, ref ulong buffer, ref int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60022BD")]
		[Address(RVA = "0xF18DBC", Offset = "0xF18DBC", VA = "0xF18DBC")]
		public void Write(Transform transform, ref ulong buffer, ref int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60022BE")]
		[Address(RVA = "0xF18F00", Offset = "0xF18F00", VA = "0xF18F00")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92CC84", Offset = "0x92CC84")]
		public void Write(CompressedMatrix cm, ref Bitstream bitstream, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60022BF")]
		[Address(RVA = "0xF19028", Offset = "0xF19028", VA = "0xF19028")]
		public void Write(CompressedMatrix cm, ref ulong buffer, ref int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60022C0")]
		[Address(RVA = "0xF19160", Offset = "0xF19160", VA = "0xF19160")]
		public void Write(CompressedMatrix nonalloc, Transform transform, ref ulong bitstream, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60022C1")]
		[Address(RVA = "0xF193EC", Offset = "0xF193EC", VA = "0xF193EC")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92CCBC", Offset = "0x92CCBC")]
		public void Write(CompressedMatrix nonalloc, Transform transform, ref Bitstream bitstream, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60022C2")]
		[Address(RVA = "0xF19540", Offset = "0xF19540", VA = "0xF19540")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92CCF4", Offset = "0x92CCF4")]
		public void Write(Transform transform, ref Bitstream bitstream, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60022C3")]
		[Address(RVA = "0xF19760", Offset = "0xF19760", VA = "0xF19760")]
		public void ReadAndDecompress(Matrix nonalloc, ulong buffer, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60022C4")]
		[Address(RVA = "0xF19838", Offset = "0xF19838", VA = "0xF19838")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92CD2C", Offset = "0x92CD2C")]
		public Matrix ReadAndDecompress(ulong buffer, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x60022C5")]
		[Address(RVA = "0xF19788", Offset = "0xF19788", VA = "0xF19788")]
		public void ReadAndDecompress(Matrix nonalloc, ulong buffer, ref int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60022C6")]
		[Address(RVA = "0xF19860", Offset = "0xF19860", VA = "0xF19860")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92CD64", Offset = "0x92CD64")]
		public Matrix ReadAndDecompress(ulong buffer, ref int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x60022C7")]
		[Address(RVA = "0xF19D30", Offset = "0xF19D30", VA = "0xF19D30")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92CD9C", Offset = "0x92CD9C")]
		public void ReadAndDecompress(Matrix nonalloc, ref Bitstream bitstream, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60022C8")]
		[Address(RVA = "0xF19F14", Offset = "0xF19F14", VA = "0xF19F14")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92CDD4", Offset = "0x92CDD4")]
		public Matrix ReadAndDecompress(ref Bitstream bitstream, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x60022C9")]
		[Address(RVA = "0xF19FAC", Offset = "0xF19FAC", VA = "0xF19FAC")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92CE0C", Offset = "0x92CE0C")]
		public void ReadAndApply(Transform target, ref Bitstream bitstream, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60022CA")]
		[Address(RVA = "0xF1A150", Offset = "0xF1A150", VA = "0xF1A150")]
		public void ReadAndApply(Transform target, byte[] buffer, ref int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60022CB")]
		[Address(RVA = "0xF1A200", Offset = "0xF1A200", VA = "0xF1A200")]
		public void Read(CompressedMatrix nonalloc, ulong frag0, ulong frag1 = 0uL, ulong frag2 = 0uL, ulong frag3 = 0uL, ulong frag4 = 0uL, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60022CC")]
		[Address(RVA = "0xF1A37C", Offset = "0xF1A37C", VA = "0xF1A37C")]
		public void ReadAndDecompress(Matrix nonalloc, ulong frag0, ulong frag1 = 0uL, ulong frag2 = 0uL, ulong frag3 = 0uL, ulong frag4 = 0uL, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60022CD")]
		[Address(RVA = "0xF1A45C", Offset = "0xF1A45C", VA = "0xF1A45C")]
		public CompressedMatrix Read(ulong frag0, ulong frag1 = 0uL, ulong frag2 = 0uL, ulong frag3 = 0uL, uint frag4 = 0u, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x60022CE")]
		[Address(RVA = "0xF19DD8", Offset = "0xF19DD8", VA = "0xF19DD8")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92CE44", Offset = "0x92CE44")]
		public void Read(CompressedMatrix nonalloc, ref Bitstream bitstream, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60022CF")]
		[Address(RVA = "0xF1A528", Offset = "0xF1A528", VA = "0xF1A528")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92CE7C", Offset = "0x92CE7C")]
		public Bitstream Read(ref Bitstream bitstream, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(Bitstream);
		}

		[Token(Token = "0x60022D0")]
		[Address(RVA = "0xF1A5F8", Offset = "0xF1A5F8", VA = "0xF1A5F8")]
		public void Read(CompressedMatrix nonalloc, ulong buffer, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60022D1")]
		[Address(RVA = "0xF19908", Offset = "0xF19908", VA = "0xF19908")]
		public void Read(CompressedMatrix nonalloc, ulong buffer, ref int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60022D2")]
		[Address(RVA = "0xF1A620", Offset = "0xF1A620", VA = "0xF1A620")]
		public CompressedMatrix Read(ulong buffer, ref int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x60022D3")]
		[Address(RVA = "0xF1A6C4", Offset = "0xF1A6C4", VA = "0xF1A6C4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92CEB4", Offset = "0x92CEB4")]
		public void Compress(CompressedMatrix nonalloc)
		{
		}

		[Token(Token = "0x60022D4")]
		[Address(RVA = "0xF1A6CC", Offset = "0xF1A6CC", VA = "0xF1A6CC")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92CEEC", Offset = "0x92CEEC")]
		public CompressedMatrix Compress()
		{
			return null;
		}

		[Token(Token = "0x60022D5")]
		[Address(RVA = "0xF1A760", Offset = "0xF1A760", VA = "0xF1A760")]
		public void Compress(CompressedMatrix nonalloc, Matrix matrix)
		{
		}

		[Token(Token = "0x60022D6")]
		[Address(RVA = "0xF1A8D8", Offset = "0xF1A8D8", VA = "0xF1A8D8")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92CF24", Offset = "0x92CF24")]
		public Bitstream Compress(Matrix matrix)
		{
			return default(Bitstream);
		}

		[Token(Token = "0x60022D7")]
		[Address(RVA = "0xF192B4", Offset = "0xF192B4", VA = "0xF192B4")]
		public void Compress(CompressedMatrix nonalloc, Transform transform)
		{
		}

		[Token(Token = "0x60022D8")]
		[Address(RVA = "0xF1A6D4", Offset = "0xF1A6D4", VA = "0xF1A6D4")]
		public CompressedMatrix Compress(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x60022D9")]
		[Address(RVA = "0xF1A998", Offset = "0xF1A998", VA = "0xF1A998")]
		public CompressedMatrix Compress(Rigidbody rb)
		{
			return null;
		}

		[Token(Token = "0x60022DA")]
		[Address(RVA = "0xF1AA24", Offset = "0xF1AA24", VA = "0xF1AA24")]
		public void Compress(CompressedMatrix nonalloc, Rigidbody rb)
		{
		}

		[Token(Token = "0x60022DB")]
		[Address(RVA = "0xF1ADAC", Offset = "0xF1ADAC", VA = "0xF1ADAC")]
		public CompressedMatrix Compress(Rigidbody2D rb2d)
		{
			return null;
		}

		[Token(Token = "0x60022DC")]
		[Address(RVA = "0xF1AE38", Offset = "0xF1AE38", VA = "0xF1AE38")]
		public void Compress(CompressedMatrix nonalloc, Rigidbody2D rb2d)
		{
		}

		[Token(Token = "0x60022DD")]
		[Address(RVA = "0xF1B1C4", Offset = "0xF1B1C4", VA = "0xF1B1C4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92CF5C", Offset = "0x92CF5C")]
		public void CompressAndWrite(ref Bitstream bitstream)
		{
		}

		[Token(Token = "0x60022DE")]
		[Address(RVA = "0xF1B2B0", Offset = "0xF1B2B0", VA = "0xF1B2B0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92CF94", Offset = "0x92CF94")]
		public void CompressAndWrite(Matrix matrix, ref Bitstream bitstream)
		{
		}

		[Token(Token = "0x60022DF")]
		[Address(RVA = "0xF1B3E4", Offset = "0xF1B3E4", VA = "0xF1B3E4")]
		public void CompressAndWrite(Matrix matrix, byte[] buffer, ref int bitposition)
		{
		}

		[Token(Token = "0x60022E0")]
		[Address(RVA = "0xF1B528", Offset = "0xF1B528", VA = "0xF1B528")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92CFCC", Offset = "0x92CFCC")]
		public void CompressAndWrite(Transform transform, ref Bitstream bitstream)
		{
		}

		[Token(Token = "0x60022E1")]
		[Address(RVA = "0xF1B624", Offset = "0xF1B624", VA = "0xF1B624")]
		public void CompressAndWrite(Transform transform, byte[] buffer, ref int bitposition)
		{
		}

		[Token(Token = "0x60022E2")]
		[Address(RVA = "0xF1B730", Offset = "0xF1B730", VA = "0xF1B730")]
		public void CompressAndWrite(Rigidbody rb, byte[] buffer, ref int bitposition)
		{
		}

		[Token(Token = "0x60022E3")]
		[Address(RVA = "0xF1B968", Offset = "0xF1B968", VA = "0xF1B968")]
		public void Decompress(Matrix nonalloc, ulong[] buffer, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60022E4")]
		[Address(RVA = "0xF1BA1C", Offset = "0xF1BA1C", VA = "0xF1BA1C")]
		public void Decompress(Matrix nonalloc, uint[] buffer, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60022E5")]
		[Address(RVA = "0xF1BAD0", Offset = "0xF1BAD0", VA = "0xF1BAD0")]
		public void Decompress(Matrix nonalloc, ulong compressed, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60022E6")]
		[Address(RVA = "0xF1BB84", Offset = "0xF1BB84", VA = "0xF1BB84")]
		public Matrix Decompress(ulong[] buffer, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x60022E7")]
		[Address(RVA = "0xF1BC74", Offset = "0xF1BC74", VA = "0xF1BC74")]
		public Matrix Decompress(uint[] buffer, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x60022E8")]
		[Address(RVA = "0xF1BD64", Offset = "0xF1BD64", VA = "0xF1BD64")]
		public Matrix Decompress(byte[] buffer, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x60022E9")]
		[Address(RVA = "0xF1BE54", Offset = "0xF1BE54", VA = "0xF1BE54")]
		public Matrix Decompress(ulong compressed, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x60022EA")]
		[Address(RVA = "0xF181D0", Offset = "0xF181D0", VA = "0xF181D0")]
		public void Decompress(Matrix nonalloc, CompressedMatrix compMatrix)
		{
		}

		[Token(Token = "0x60022EB")]
		[Address(RVA = "0xF19A54", Offset = "0xF19A54", VA = "0xF19A54")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92D004", Offset = "0x92D004")]
		public Matrix Decompress(CompressedMatrix compMatrix)
		{
			return null;
		}

		[Token(Token = "0x60022EC")]
		[Address(RVA = "0xF1BF44", Offset = "0xF1BF44", VA = "0xF1BF44")]
		public void Set(Rigidbody rb, CompressedMatrix cmatrix)
		{
		}

		[Token(Token = "0x60022ED")]
		[Address(RVA = "0xF1C054", Offset = "0xF1C054", VA = "0xF1C054")]
		public void Set(Rigidbody rb, Matrix matrix)
		{
		}

		[Token(Token = "0x60022EE")]
		[Address(RVA = "0xF1C1F0", Offset = "0xF1C1F0", VA = "0xF1C1F0")]
		public void Set(Rigidbody rb, ulong frag0, ulong frag1 = 0uL, ulong frag2 = 0uL, ulong frag3 = 0uL, ulong frag4 = 0uL)
		{
		}

		[Token(Token = "0x60022EF")]
		[Address(RVA = "0xF1C2C4", Offset = "0xF1C2C4", VA = "0xF1C2C4")]
		public void Set(Rigidbody rb, ulong[] buffer, ref int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60022F0")]
		[Address(RVA = "0xF1C374", Offset = "0xF1C374", VA = "0xF1C374")]
		public void Set(Rigidbody rb, byte[] buffer, ref int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60022F1")]
		[Address(RVA = "0xF1C424", Offset = "0xF1C424", VA = "0xF1C424")]
		public void Set(Rigidbody2D rb2d, Matrix matrix)
		{
		}

		[Token(Token = "0x60022F2")]
		[Address(RVA = "0xF1C5C0", Offset = "0xF1C5C0", VA = "0xF1C5C0")]
		public void Set(Rigidbody2D rb2d, CompressedMatrix cmatrix)
		{
		}

		[Token(Token = "0x60022F3")]
		[Address(RVA = "0xF1C6D0", Offset = "0xF1C6D0", VA = "0xF1C6D0")]
		public void Move(Rigidbody rb, CompressedMatrix cmatrix)
		{
		}

		[Token(Token = "0x60022F4")]
		[Address(RVA = "0xF1C7F4", Offset = "0xF1C7F4", VA = "0xF1C7F4")]
		public void Move(Rigidbody rb, Matrix matrix)
		{
		}

		[Token(Token = "0x60022F5")]
		[Address(RVA = "0xF1C990", Offset = "0xF1C990", VA = "0xF1C990")]
		public void Move(Rigidbody rb, ulong frag0, ulong frag1 = 0uL, ulong frag2 = 0uL, ulong frag3 = 0uL, ulong frag4 = 0uL)
		{
		}

		[Token(Token = "0x60022F6")]
		[Address(RVA = "0xF1CA64", Offset = "0xF1CA64", VA = "0xF1CA64")]
		public void Move(Rigidbody rb, ulong[] buffer, ref int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60022F7")]
		[Address(RVA = "0xF1CB14", Offset = "0xF1CB14", VA = "0xF1CB14")]
		public void Move(Rigidbody rb, byte[] buffer, ref int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60022F8")]
		[Address(RVA = "0xF1CBC4", Offset = "0xF1CBC4", VA = "0xF1CBC4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92D03C", Offset = "0x92D03C")]
		public void Apply(Rigidbody rb, CompressedMatrix cmatrix)
		{
		}

		[Token(Token = "0x60022F9")]
		[Address(RVA = "0xF1CCD4", Offset = "0xF1CCD4", VA = "0xF1CCD4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92D074", Offset = "0x92D074")]
		public void Apply(Rigidbody rb, Matrix matrix)
		{
		}

		[Token(Token = "0x60022FA")]
		[Address(RVA = "0xF1CE70", Offset = "0xF1CE70", VA = "0xF1CE70")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92D0AC", Offset = "0x92D0AC")]
		public void Apply(ulong cvalue)
		{
		}

		[Token(Token = "0x60022FB")]
		[Address(RVA = "0xF1CE80", Offset = "0xF1CE80", VA = "0xF1CE80")]
		public void Apply(Transform t, ulong cvalue)
		{
		}

		[Token(Token = "0x60022FC")]
		[Address(RVA = "0xF1D0A4", Offset = "0xF1D0A4", VA = "0xF1D0A4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92D0E4", Offset = "0x92D0E4")]
		public void Apply(ulong u0, ulong u1, ulong u2, ulong u3, uint u4)
		{
		}

		[Token(Token = "0x60022FD")]
		[Address(RVA = "0xF1D0C8", Offset = "0xF1D0C8", VA = "0xF1D0C8")]
		public void Apply(Transform t, ulong frag0, ulong frag1 = 0uL, ulong frag2 = 0uL, ulong frag3 = 0uL, ulong frag4 = 0uL)
		{
		}

		[Token(Token = "0x60022FE")]
		[Address(RVA = "0xF1D19C", Offset = "0xF1D19C", VA = "0xF1D19C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92D11C", Offset = "0x92D11C")]
		public void Apply(CompressedMatrix cmatrix)
		{
		}

		[Token(Token = "0x60022FF")]
		[Address(RVA = "0xF1A054", Offset = "0xF1A054", VA = "0xF1A054")]
		public void Apply(Transform t, CompressedMatrix cmatrix)
		{
		}

		[Token(Token = "0x6002300")]
		[Address(RVA = "0xF1D1AC", Offset = "0xF1D1AC", VA = "0xF1D1AC")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92D154", Offset = "0x92D154")]
		public void Apply(Matrix matrix)
		{
		}

		[Token(Token = "0x6002301")]
		[Address(RVA = "0xF1CF1C", Offset = "0xF1CF1C", VA = "0xF1CF1C")]
		public void Apply(Transform transform, Matrix matrix)
		{
		}

		[Token(Token = "0x6002302")]
		[Address(RVA = "0xF1D1BC", Offset = "0xF1D1BC", VA = "0xF1D1BC")]
		public void Capture(Rigidbody rb, CompressedMatrix cm, Matrix m)
		{
		}

		[Token(Token = "0x6002303")]
		[Address(RVA = "0xF1D200", Offset = "0xF1D200", VA = "0xF1D200")]
		public void Capture(Rigidbody2D rb2d, CompressedMatrix cm, Matrix m)
		{
		}

		[Token(Token = "0x6002304")]
		[Address(RVA = "0xF1D244", Offset = "0xF1D244", VA = "0xF1D244")]
		public void Capture(Transform tr, CompressedMatrix cm, Matrix m)
		{
		}

		[Token(Token = "0x6002305")]
		[Address(RVA = "0xF1D380", Offset = "0xF1D380", VA = "0xF1D380")]
		public int TallyBits(BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(int);
		}

		[Token(Token = "0x6002306")]
		[Address(RVA = "0xF1D4D0", Offset = "0xF1D4D0", VA = "0xF1D4D0", Slot = "10")]
		public void CopyFrom(TransformCrusher source)
		{
		}

		[Token(Token = "0x6002307")]
		[Address(RVA = "0xF1D540", Offset = "0xF1D540", VA = "0xF1D540", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6002308")]
		[Address(RVA = "0xF1D5CC", Offset = "0xF1D5CC", VA = "0xF1D5CC")]
		public bool Equals(TransformCrusher other)
		{
			return default(bool);
		}

		[Token(Token = "0x6002309")]
		[Address(RVA = "0xF1D860", Offset = "0xF1D860", VA = "0xF1D860", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x600230A")]
		[Address(RVA = "0xF1D9B8", Offset = "0xF1D9B8", VA = "0xF1D9B8")]
		public static bool operator ==(TransformCrusher crusher1, TransformCrusher crusher2)
		{
			return default(bool);
		}

		[Token(Token = "0x600230B")]
		[Address(RVA = "0xF1D7E4", Offset = "0xF1D7E4", VA = "0xF1D7E4")]
		public static bool operator !=(TransformCrusher crusher1, TransformCrusher crusher2)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000521")]
	public enum FactorBoundsOn
	{
		[Token(Token = "0x4002457")]
		EnableDisable,
		[Token(Token = "0x4002458")]
		AwakeDestroy
	}
	[Token(Token = "0x2000522")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x918BC8", Offset = "0x918BC8")]
	[ExecuteInEditMode]
	public class WorldBounds : MonoBehaviour
	{
		[Token(Token = "0x4002459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[HideInInspector]
		private Bounds manualBounds;

		[Token(Token = "0x400245A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91D99C", Offset = "0x91D99C")]
		[WorldBoundsSelectAttribute]
		[SerializeField]
		[HideInInspector]
		public int worldBoundsGrp;

		[Token(Token = "0x400245B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		[HideInInspector]
		private bool includeChildren;

		[Token(Token = "0x400245C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91DA40", Offset = "0x91DA40")]
		[HideInInspector]
		private BoundsTools.BoundsType factorIn;

		[Token(Token = "0x400245D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[HideInInspector]
		public Bounds myBounds;

		[Token(Token = "0x400245E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[HideInInspector]
		public int myBoundsCount;

		[Token(Token = "0x400245F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Action OnWorldBoundsChange;

		[Token(Token = "0x170001F7")]
		public Bounds ManualBounds
		{
			[Token(Token = "0x600230D")]
			[Address(RVA = "0x1260548", Offset = "0x1260548", VA = "0x1260548")]
			get
			{
				return default(Bounds);
			}
			[Token(Token = "0x600230E")]
			[Address(RVA = "0x126055C", Offset = "0x126055C", VA = "0x126055C")]
			set
			{
			}
		}

		[Token(Token = "0x170001F8")]
		public BoundsTools.BoundsType FactorIn
		{
			[Token(Token = "0x600230F")]
			[Address(RVA = "0x12608B4", Offset = "0x12608B4", VA = "0x12608B4")]
			get
			{
				return default(BoundsTools.BoundsType);
			}
			[Token(Token = "0x6002310")]
			[Address(RVA = "0x12608BC", Offset = "0x12608BC", VA = "0x12608BC")]
			set
			{
			}
		}

		[Token(Token = "0x6002311")]
		[Address(RVA = "0x12608C4", Offset = "0x12608C4", VA = "0x12608C4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002312")]
		[Address(RVA = "0x1260570", Offset = "0x1260570", VA = "0x1260570")]
		public void CollectMyBounds()
		{
		}

		[Token(Token = "0x6002313")]
		[Address(RVA = "0x1260D38", Offset = "0x1260D38", VA = "0x1260D38")]
		private void Start()
		{
		}

		[Token(Token = "0x6002314")]
		[Address(RVA = "0x1260D3C", Offset = "0x1260D3C", VA = "0x1260D3C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002315")]
		[Address(RVA = "0x1260F34", Offset = "0x1260F34", VA = "0x1260F34")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002316")]
		[Address(RVA = "0x1260F3C", Offset = "0x1260F3C", VA = "0x1260F3C")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6002317")]
		[Address(RVA = "0x1260D44", Offset = "0x1260D44", VA = "0x1260D44")]
		public void FactorInBounds(bool b)
		{
		}

		[Token(Token = "0x6002318")]
		[Address(RVA = "0x126109C", Offset = "0x126109C", VA = "0x126109C")]
		public WorldBounds()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000523")]
	public class WorldBoundsGroup
	{
		[Token(Token = "0x4002460")]
		public const string defaultName = "Default";

		[Token(Token = "0x4002461")]
		public const string newAddName = "Unnamed";

		[Token(Token = "0x4002462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[NonSerialized]
		[Token(Token = "0x4002463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action OnWorldBoundChanged;

		[Token(Token = "0x4002464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ElementCrusher crusher;

		[NonSerialized]
		[Token(Token = "0x4002465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly List<WorldBounds> activeWorldBounds;

		[NonSerialized]
		[Token(Token = "0x4002466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Bounds _combinedWorldBounds;

		[Token(Token = "0x170001F9")]
		public int ActiveBoundsObjCount
		{
			[Token(Token = "0x6002319")]
			[Address(RVA = "0x1261114", Offset = "0x1261114", VA = "0x1261114")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x600231A")]
		[Address(RVA = "0x1261160", Offset = "0x1261160", VA = "0x1261160")]
		public static ElementCrusher GetUncompressedCrusher()
		{
			return null;
		}

		[Token(Token = "0x600231B")]
		[Address(RVA = "0x12612E8", Offset = "0x12612E8", VA = "0x12612E8")]
		public void ResetActiveBounds()
		{
		}

		[Token(Token = "0x600231C")]
		[Address(RVA = "0x1260ADC", Offset = "0x1260ADC", VA = "0x1260ADC")]
		public void RecalculateWorldCombinedBounds()
		{
		}

		[Token(Token = "0x600231D")]
		[Address(RVA = "0x12608C8", Offset = "0x12608C8", VA = "0x12608C8")]
		public WorldBoundsGroup()
		{
		}
	}
	[Token(Token = "0x2000524")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x918C14", Offset = "0x918C14")]
	public class WorldBoundsSO : SettingsScriptableObject<WorldBoundsSO>
	{
		[Token(Token = "0x4002467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public List<WorldBoundsGroup> worldBoundsGroups;

		[Token(Token = "0x4002468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ElementCrusher defaultWorldBoundsCrusher;

		[Token(Token = "0x600231E")]
		[Address(RVA = "0x126133C", Offset = "0x126133C", VA = "0x126133C")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x92D18C", Offset = "0x92D18C")]
		private static void Bootstrap()
		{
		}

		[Token(Token = "0x600231F")]
		[Address(RVA = "0x1261470", Offset = "0x1261470", VA = "0x1261470", Slot = "5")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002320")]
		[Address(RVA = "0x1261530", Offset = "0x1261530", VA = "0x1261530", Slot = "4")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6002321")]
		[Address(RVA = "0x1260964", Offset = "0x1260964", VA = "0x1260964")]
		public static void RemoveWorldBoundsFromAll(WorldBounds wb)
		{
		}

		[Token(Token = "0x6002322")]
		[Address(RVA = "0x1261724", Offset = "0x1261724", VA = "0x1261724")]
		public static int TallyBits(ref int index, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(int);
		}

		[Token(Token = "0x6002323")]
		[Address(RVA = "0x1261898", Offset = "0x1261898", VA = "0x1261898")]
		public WorldBoundsSO()
		{
		}
	}
	[Token(Token = "0x2000525")]
	public class WorldBoundsSelectAttributeAttribute : PropertyAttribute
	{
		[Token(Token = "0x6002324")]
		[Address(RVA = "0x1261950", Offset = "0x1261950", VA = "0x1261950")]
		public WorldBoundsSelectAttributeAttribute()
		{
		}
	}
}
namespace PublicKeyConvert
{
	[Token(Token = "0x2000526")]
	public class PEMKeyLoader
	{
		[Token(Token = "0x4002469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static byte[] SeqOID;

		[Token(Token = "0x6002325")]
		[Address(RVA = "0xF49000", Offset = "0xF49000", VA = "0xF49000")]
		private static bool CompareBytearrays(byte[] a, byte[] b)
		{
			return default(bool);
		}

		[Token(Token = "0x6002326")]
		[Address(RVA = "0xF4907C", Offset = "0xF4907C", VA = "0xF4907C")]
		public static RSACryptoServiceProvider CryptoServiceProviderFromPublicKeyInfo(byte[] x509key)
		{
			return null;
		}

		[Token(Token = "0x6002327")]
		[Address(RVA = "0xF495D0", Offset = "0xF495D0", VA = "0xF495D0")]
		public static RSACryptoServiceProvider CryptoServiceProviderFromPublicKeyInfo(string base64EncodedKey)
		{
			return null;
		}

		[Token(Token = "0x6002328")]
		[Address(RVA = "0xF496EC", Offset = "0xF496EC", VA = "0xF496EC")]
		public PEMKeyLoader()
		{
		}
	}
}
namespace Viveport
{
	[Token(Token = "0x2000527")]
	public class MainThreadDispatcher : MonoBehaviour
	{
		[Token(Token = "0x2000528")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x918C24", Offset = "0x918C24")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x400246C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MainThreadDispatcher <>4__this;

			[Token(Token = "0x400246D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public IEnumerator action;

			[Token(Token = "0x600233B")]
			[Address(RVA = "0xE692F0", Offset = "0xE692F0", VA = "0xE692F0")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x600233C")]
			[Address(RVA = "0xE692F8", Offset = "0xE692F8", VA = "0xE692F8")]
			internal void <Enqueue>b__0()
			{
			}
		}

		[Token(Token = "0x2000529")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x918C34", Offset = "0x918C34")]
		private sealed class <ActionWrapper>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400246E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400246F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002470")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action action;

			[Token(Token = "0x170001FA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002340")]
				[Address(RVA = "0xE693B0", Offset = "0xE693B0", VA = "0xE693B0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001FB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002342")]
				[Address(RVA = "0xE693F8", Offset = "0xE693F8", VA = "0xE693F8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600233D")]
			[Address(RVA = "0xE6931C", Offset = "0xE6931C", VA = "0xE6931C")]
			[DebuggerHidden]
			public <ActionWrapper>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x600233E")]
			[Address(RVA = "0xE69348", Offset = "0xE69348", VA = "0xE69348", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600233F")]
			[Address(RVA = "0xE6934C", Offset = "0xE6934C", VA = "0xE6934C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002341")]
			[Address(RVA = "0xE693B8", Offset = "0xE693B8", VA = "0xE693B8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200052A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x918C44", Offset = "0x918C44")]
		private sealed class <ActionWrapper>d__13<T1> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002471")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4002472")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4002473")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T1> action;

			[Token(Token = "0x4002474")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 param1;

			[Token(Token = "0x170001FC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002346")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001FD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002348")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002343")]
			[DebuggerHidden]
			public <ActionWrapper>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6002344")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002345")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002347")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200052B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x918C54", Offset = "0x918C54")]
		private sealed class <ActionWrapper>d__14<T1, T2> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002475")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4002476")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4002477")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T1, T2> action;

			[Token(Token = "0x4002478")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 param1;

			[Token(Token = "0x4002479")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T2 param2;

			[Token(Token = "0x170001FE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600234C")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001FF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600234E")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002349")]
			[DebuggerHidden]
			public <ActionWrapper>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x600234A")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600234B")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600234D")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200052C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x918C64", Offset = "0x918C64")]
		private sealed class <ActionWrapper>d__15<T1, T2, T3> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400247A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x400247B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x400247C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T1, T2, T3> action;

			[Token(Token = "0x400247D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 param1;

			[Token(Token = "0x400247E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T2 param2;

			[Token(Token = "0x400247F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T3 param3;

			[Token(Token = "0x17000200")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002352")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000201")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002354")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600234F")]
			[DebuggerHidden]
			public <ActionWrapper>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6002350")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002351")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002353")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200052D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x918C74", Offset = "0x918C74")]
		private sealed class <ActionWrapper>d__16<T1, T2, T3, T4> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002480")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4002481")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4002482")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T1, T2, T3, T4> action;

			[Token(Token = "0x4002483")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 param1;

			[Token(Token = "0x4002484")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T2 param2;

			[Token(Token = "0x4002485")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T3 param3;

			[Token(Token = "0x4002486")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T4 param4;

			[Token(Token = "0x17000202")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002358")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000203")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600235A")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002355")]
			[DebuggerHidden]
			public <ActionWrapper>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x6002356")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002357")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002359")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400246A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Queue<Action> actions;

		[Token(Token = "0x400246B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static MainThreadDispatcher instance;

		[Token(Token = "0x600232A")]
		[Address(RVA = "0x13608C8", Offset = "0x13608C8", VA = "0x13608C8")]
		private void Awake()
		{
		}

		[Token(Token = "0x600232B")]
		[Address(RVA = "0x13609E4", Offset = "0x13609E4", VA = "0x13609E4")]
		public void Update()
		{
		}

		[Token(Token = "0x600232C")]
		[Address(RVA = "0x1360BA4", Offset = "0x1360BA4", VA = "0x1360BA4")]
		public static MainThreadDispatcher Instance()
		{
			return null;
		}

		[Token(Token = "0x600232D")]
		[Address(RVA = "0x1360CB8", Offset = "0x1360CB8", VA = "0x1360CB8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600232E")]
		[Address(RVA = "0x1360D1C", Offset = "0x1360D1C", VA = "0x1360D1C")]
		public void Enqueue(IEnumerator action)
		{
		}

		[Token(Token = "0x600232F")]
		[Address(RVA = "0x1360EF4", Offset = "0x1360EF4", VA = "0x1360EF4")]
		public void Enqueue(Action action)
		{
		}

		[Token(Token = "0x6002330")]
		public void Enqueue<T1>(Action<T1> action, T1 param1)
		{
		}

		[Token(Token = "0x6002331")]
		public void Enqueue<T1, T2>(Action<T1, T2> action, T1 param1, T2 param2)
		{
		}

		[Token(Token = "0x6002332")]
		public void Enqueue<T1, T2, T3>(Action<T1, T2, T3> action, T1 param1, T2 param2, T3 param3)
		{
		}

		[Token(Token = "0x6002333")]
		public void Enqueue<T1, T2, T3, T4>(Action<T1, T2, T3, T4> action, T1 param1, T2 param2, T3 param3, T4 param4)
		{
		}

		[Token(Token = "0x6002334")]
		[Address(RVA = "0x1360F1C", Offset = "0x1360F1C", VA = "0x1360F1C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92D1A0", Offset = "0x92D1A0")]
		private IEnumerator ActionWrapper(Action action)
		{
			return null;
		}

		[Token(Token = "0x6002335")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92D200", Offset = "0x92D200")]
		private IEnumerator ActionWrapper<T1>(Action<T1> action, T1 param1)
		{
			return null;
		}

		[Token(Token = "0x6002336")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92D260", Offset = "0x92D260")]
		private IEnumerator ActionWrapper<T1, T2>(Action<T1, T2> action, T1 param1, T2 param2)
		{
			return null;
		}

		[Token(Token = "0x6002337")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92D2C0", Offset = "0x92D2C0")]
		private IEnumerator ActionWrapper<T1, T2, T3>(Action<T1, T2, T3> action, T1 param1, T2 param2, T3 param3)
		{
			return null;
		}

		[Token(Token = "0x6002338")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92D320", Offset = "0x92D320")]
		private IEnumerator ActionWrapper<T1, T2, T3, T4>(Action<T1, T2, T3, T4> action, T1 param1, T2 param2, T3 param3, T4 param4)
		{
			return null;
		}

		[Token(Token = "0x6002339")]
		[Address(RVA = "0x1360F88", Offset = "0x1360F88", VA = "0x1360F88")]
		public MainThreadDispatcher()
		{
		}
	}
	[Token(Token = "0x200052E")]
	public enum Locale
	{
		[Token(Token = "0x4002488")]
		US,
		[Token(Token = "0x4002489")]
		DE,
		[Token(Token = "0x400248A")]
		JP,
		[Token(Token = "0x400248B")]
		KR,
		[Token(Token = "0x400248C")]
		RU,
		[Token(Token = "0x400248D")]
		CN,
		[Token(Token = "0x400248E")]
		TW,
		[Token(Token = "0x400248F")]
		FR
	}
	[Token(Token = "0x200052F")]
	public delegate void StatusCallback(int nResult);
	[Token(Token = "0x2000530")]
	public delegate void StatusCallback2(int nResult, string message);
	[Token(Token = "0x2000531")]
	public delegate void QueryRuntimeModeCallback(int nResult, int emu);
	[Token(Token = "0x2000532")]
	public class Leaderboard
	{
		[Token(Token = "0x4002490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91DACC", Offset = "0x91DACC")]
		private int <Rank>k__BackingField;

		[Token(Token = "0x4002491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91DADC", Offset = "0x91DADC")]
		private int <Score>k__BackingField;

		[Token(Token = "0x4002492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91DAEC", Offset = "0x91DAEC")]
		private string <UserName>k__BackingField;

		[Token(Token = "0x17000204")]
		public int Rank
		{
			[Token(Token = "0x6002367")]
			[Address(RVA = "0x113A478", Offset = "0x113A478", VA = "0x113A478")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92D510", Offset = "0x92D510")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002368")]
			[Address(RVA = "0x113A480", Offset = "0x113A480", VA = "0x113A480")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92D520", Offset = "0x92D520")]
			set
			{
			}
		}

		[Token(Token = "0x17000205")]
		public int Score
		{
			[Token(Token = "0x6002369")]
			[Address(RVA = "0x113A488", Offset = "0x113A488", VA = "0x113A488")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92D530", Offset = "0x92D530")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600236A")]
			[Address(RVA = "0x113A490", Offset = "0x113A490", VA = "0x113A490")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92D540", Offset = "0x92D540")]
			set
			{
			}
		}

		[Token(Token = "0x17000206")]
		public string UserName
		{
			[Token(Token = "0x600236B")]
			[Address(RVA = "0x113A498", Offset = "0x113A498", VA = "0x113A498")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92D550", Offset = "0x92D550")]
			get
			{
				return null;
			}
			[Token(Token = "0x600236C")]
			[Address(RVA = "0x113A4A0", Offset = "0x113A4A0", VA = "0x113A4A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92D560", Offset = "0x92D560")]
			set
			{
			}
		}

		[Token(Token = "0x600236D")]
		[Address(RVA = "0x113A4A8", Offset = "0x113A4A8", VA = "0x113A4A8")]
		public Leaderboard()
		{
		}
	}
	[Token(Token = "0x2000533")]
	public class SubscriptionStatus
	{
		[Token(Token = "0x2000534")]
		public enum Platform
		{
			[Token(Token = "0x4002496")]
			Windows,
			[Token(Token = "0x4002497")]
			Android
		}

		[Token(Token = "0x2000535")]
		public enum TransactionType
		{
			[Token(Token = "0x4002499")]
			Unknown,
			[Token(Token = "0x400249A")]
			Paid,
			[Token(Token = "0x400249B")]
			Redeem,
			[Token(Token = "0x400249C")]
			FreeTrial
		}

		[Token(Token = "0x4002493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91DAFC", Offset = "0x91DAFC")]
		private List<Platform> <Platforms>k__BackingField;

		[Token(Token = "0x4002494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91DB0C", Offset = "0x91DB0C")]
		private TransactionType <Type>k__BackingField;

		[Token(Token = "0x17000207")]
		public List<Platform> Platforms
		{
			[Token(Token = "0x600236E")]
			[Address(RVA = "0x10EBFA8", Offset = "0x10EBFA8", VA = "0x10EBFA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92D570", Offset = "0x92D570")]
			get
			{
				return null;
			}
			[Token(Token = "0x600236F")]
			[Address(RVA = "0x10EBFB0", Offset = "0x10EBFB0", VA = "0x10EBFB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92D580", Offset = "0x92D580")]
			set
			{
			}
		}

		[Token(Token = "0x17000208")]
		public TransactionType Type
		{
			[Token(Token = "0x6002370")]
			[Address(RVA = "0x10EBFB8", Offset = "0x10EBFB8", VA = "0x10EBFB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92D590", Offset = "0x92D590")]
			get
			{
				return default(TransactionType);
			}
			[Token(Token = "0x6002371")]
			[Address(RVA = "0x10EBFC0", Offset = "0x10EBFC0", VA = "0x10EBFC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92D5A0", Offset = "0x92D5A0")]
			set
			{
			}
		}

		[Token(Token = "0x6002372")]
		[Address(RVA = "0x10EBB08", Offset = "0x10EBB08", VA = "0x10EBB08")]
		public SubscriptionStatus()
		{
		}
	}
	[Token(Token = "0x2000536")]
	public class Api
	{
		[Token(Token = "0x2000537")]
		public abstract class LicenseChecker
		{
			[Token(Token = "0x600237B")]
			public abstract void OnSuccess(long issueTime, long expirationTime, int latestVersion, bool updateRequired);

			[Token(Token = "0x600237C")]
			public abstract void OnFailure(int errorCode, string errorMessage);

			[Token(Token = "0x600237D")]
			[Address(RVA = "0xBDB368", Offset = "0xBDB368", VA = "0xBDB368")]
			protected LicenseChecker()
			{
			}
		}

		[Token(Token = "0x400249D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static readonly List<GetLicenseCallback> InternalGetLicenseCallbacks;

		[Token(Token = "0x400249E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal static readonly List<Viveport.Internal.StatusCallback> InternalStatusCallbacks;

		[Token(Token = "0x400249F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal static readonly List<Viveport.Internal.QueryRuntimeModeCallback> InternalQueryRunTimeCallbacks;

		[Token(Token = "0x40024A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal static readonly List<Viveport.Internal.StatusCallback2> InternalStatusCallback2s;

		[Token(Token = "0x40024A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal static readonly List<LicenseChecker> InternalLicenseCheckers;

		[Token(Token = "0x40024A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static Viveport.Internal.StatusCallback initIl2cppCallback;

		[Token(Token = "0x40024A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Viveport.Internal.StatusCallback shutdownIl2cppCallback;

		[Token(Token = "0x40024A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static Viveport.Internal.QueryRuntimeModeCallback queryRuntimeModeIl2cppCallback;

		[Token(Token = "0x40024A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static readonly string VERSION;

		[Token(Token = "0x40024A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static string _appId;

		[Token(Token = "0x40024A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static string _appKey;

		[Token(Token = "0x6002373")]
		[Address(RVA = "0xC16CDC", Offset = "0xC16CDC", VA = "0xC16CDC")]
		public static void GetLicense(LicenseChecker checker, string appId, string appKey)
		{
		}

		[Token(Token = "0x6002374")]
		[Address(RVA = "0xC16BEC", Offset = "0xC16BEC", VA = "0xC16BEC")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x92D5B0", Offset = "0x92D5B0")]
		private static void InitIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x6002375")]
		[Address(RVA = "0xC16F6C", Offset = "0xC16F6C", VA = "0xC16F6C")]
		public static int Init(StatusCallback callback, string appId)
		{
			return default(int);
		}

		[Token(Token = "0x6002376")]
		[Address(RVA = "0xC16C64", Offset = "0xC16C64", VA = "0xC16C64")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x92D610", Offset = "0x92D610")]
		private static void ShutdownIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x6002377")]
		[Address(RVA = "0xC17290", Offset = "0xC17290", VA = "0xC17290")]
		public static int Shutdown(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x6002378")]
		[Address(RVA = "0xC17530", Offset = "0xC17530", VA = "0xC17530")]
		public static string Version()
		{
			return null;
		}

		[Token(Token = "0x6002379")]
		[Address(RVA = "0xC176F8", Offset = "0xC176F8", VA = "0xC176F8")]
		public Api()
		{
		}
	}
	[Token(Token = "0x2000538")]
	public class User
	{
		[Token(Token = "0x40024A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Viveport.Internal.StatusCallback isReadyIl2cppCallback;

		[Token(Token = "0x600237E")]
		[Address(RVA = "0xED6D2C", Offset = "0xED6D2C", VA = "0xED6D2C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x92D670", Offset = "0x92D670")]
		private static void IsReadyIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x600237F")]
		[Address(RVA = "0xED6D8C", Offset = "0xED6D8C", VA = "0xED6D8C")]
		public static int IsReady(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x6002380")]
		[Address(RVA = "0xED7074", Offset = "0xED7074", VA = "0xED7074")]
		public static string GetUserId()
		{
			return null;
		}

		[Token(Token = "0x6002381")]
		[Address(RVA = "0xED718C", Offset = "0xED718C", VA = "0xED718C")]
		public static string GetUserName()
		{
			return null;
		}

		[Token(Token = "0x6002382")]
		[Address(RVA = "0xED72A4", Offset = "0xED72A4", VA = "0xED72A4")]
		public static string GetUserAvatarUrl()
		{
			return null;
		}

		[Token(Token = "0x6002383")]
		[Address(RVA = "0xED73BC", Offset = "0xED73BC", VA = "0xED73BC")]
		public User()
		{
		}
	}
	[Token(Token = "0x2000539")]
	public class UserStats
	{
		[Token(Token = "0x200053A")]
		public enum LeaderBoardRequestType
		{
			[Token(Token = "0x40024AF")]
			GlobalData,
			[Token(Token = "0x40024B0")]
			GlobalDataAroundUser,
			[Token(Token = "0x40024B1")]
			LocalData,
			[Token(Token = "0x40024B2")]
			LocalDataAroundUser
		}

		[Token(Token = "0x200053B")]
		public enum LeaderBoardTimeRange
		{
			[Token(Token = "0x40024B4")]
			AllTime,
			[Token(Token = "0x40024B5")]
			Daily,
			[Token(Token = "0x40024B6")]
			Weekly,
			[Token(Token = "0x40024B7")]
			Monthly
		}

		[Token(Token = "0x200053C")]
		public enum LeaderBoardSortMethod
		{
			[Token(Token = "0x40024B9")]
			None,
			[Token(Token = "0x40024BA")]
			Ascending,
			[Token(Token = "0x40024BB")]
			Descending
		}

		[Token(Token = "0x200053D")]
		public enum LeaderBoardDiaplayType
		{
			[Token(Token = "0x40024BD")]
			None,
			[Token(Token = "0x40024BE")]
			Numeric,
			[Token(Token = "0x40024BF")]
			TimeSeconds,
			[Token(Token = "0x40024C0")]
			TimeMilliSeconds
		}

		[Token(Token = "0x200053E")]
		public enum LeaderBoardScoreMethod
		{
			[Token(Token = "0x40024C2")]
			None,
			[Token(Token = "0x40024C3")]
			KeepBest,
			[Token(Token = "0x40024C4")]
			ForceUpdate
		}

		[Token(Token = "0x200053F")]
		public enum AchievementDisplayAttribute
		{
			[Token(Token = "0x40024C6")]
			Name,
			[Token(Token = "0x40024C7")]
			Desc,
			[Token(Token = "0x40024C8")]
			Hidden
		}

		[Token(Token = "0x40024A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Viveport.Internal.StatusCallback isReadyIl2cppCallback;

		[Token(Token = "0x40024AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Viveport.Internal.StatusCallback downloadStatsIl2cppCallback;

		[Token(Token = "0x40024AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Viveport.Internal.StatusCallback uploadStatsIl2cppCallback;

		[Token(Token = "0x40024AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Viveport.Internal.StatusCallback downloadLeaderboardScoresIl2cppCallback;

		[Token(Token = "0x40024AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static Viveport.Internal.StatusCallback uploadLeaderboardScoreIl2cppCallback;

		[Token(Token = "0x6002384")]
		[Address(RVA = "0x13C7674", Offset = "0x13C7674", VA = "0x13C7674")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x92D6D0", Offset = "0x92D6D0")]
		private static void IsReadyIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x6002385")]
		[Address(RVA = "0x13C7854", Offset = "0x13C7854", VA = "0x13C7854")]
		public static int IsReady(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x6002386")]
		[Address(RVA = "0x13C76D4", Offset = "0x13C76D4", VA = "0x13C76D4")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x92D730", Offset = "0x92D730")]
		private static void DownloadStatsIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x6002387")]
		[Address(RVA = "0x13C7B3C", Offset = "0x13C7B3C", VA = "0x13C7B3C")]
		public static int DownloadStats(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x6002388")]
		[Address(RVA = "0x13C7E24", Offset = "0x13C7E24", VA = "0x13C7E24")]
		public static int GetStat(string name, int defaultValue)
		{
			return default(int);
		}

		[Token(Token = "0x6002389")]
		[Address(RVA = "0x13C7F74", Offset = "0x13C7F74", VA = "0x13C7F74")]
		public static float GetStat(string name, float defaultValue)
		{
			return default(float);
		}

		[Token(Token = "0x600238A")]
		[Address(RVA = "0x13C80CC", Offset = "0x13C80CC", VA = "0x13C80CC")]
		public static void SetStat(string name, int value)
		{
		}

		[Token(Token = "0x600238B")]
		[Address(RVA = "0x13C821C", Offset = "0x13C821C", VA = "0x13C821C")]
		public static void SetStat(string name, float value)
		{
		}

		[Token(Token = "0x600238C")]
		[Address(RVA = "0x13C7734", Offset = "0x13C7734", VA = "0x13C7734")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x92D790", Offset = "0x92D790")]
		private static void UploadStatsIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x600238D")]
		[Address(RVA = "0x13C8374", Offset = "0x13C8374", VA = "0x13C8374")]
		public static int UploadStats(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x600238E")]
		[Address(RVA = "0x13C865C", Offset = "0x13C865C", VA = "0x13C865C")]
		public static bool GetAchievement(string pchName)
		{
			return default(bool);
		}

		[Token(Token = "0x600238F")]
		[Address(RVA = "0x13C874C", Offset = "0x13C874C", VA = "0x13C874C")]
		public static int GetAchievementUnlockTime(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x6002390")]
		[Address(RVA = "0x13C883C", Offset = "0x13C883C", VA = "0x13C883C")]
		public static string GetAchievementIcon(string pchName)
		{
			return null;
		}

		[Token(Token = "0x6002391")]
		[Address(RVA = "0x13C892C", Offset = "0x13C892C", VA = "0x13C892C")]
		public static string GetAchievementDisplayAttribute(string pchName, AchievementDisplayAttribute attr)
		{
			return null;
		}

		[Token(Token = "0x6002392")]
		[Address(RVA = "0x13C8A7C", Offset = "0x13C8A7C", VA = "0x13C8A7C")]
		public static string GetAchievementDisplayAttribute(string pchName, AchievementDisplayAttribute attr, Locale locale)
		{
			return null;
		}

		[Token(Token = "0x6002393")]
		[Address(RVA = "0x13C8C0C", Offset = "0x13C8C0C", VA = "0x13C8C0C")]
		public static int SetAchievement(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x6002394")]
		[Address(RVA = "0x13C8CFC", Offset = "0x13C8CFC", VA = "0x13C8CFC")]
		public static int ClearAchievement(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x6002395")]
		[Address(RVA = "0x13C7794", Offset = "0x13C7794", VA = "0x13C7794")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x92D7F0", Offset = "0x92D7F0")]
		private static void DownloadLeaderboardScoresIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x6002396")]
		[Address(RVA = "0x13C8DEC", Offset = "0x13C8DEC", VA = "0x13C8DEC")]
		public static int DownloadLeaderboardScores(StatusCallback callback, string pchLeaderboardName, LeaderBoardRequestType eLeaderboardDataRequest, LeaderBoardTimeRange eLeaderboardDataTimeRange, int nRangeStart, int nRangeEnd)
		{
			return default(int);
		}

		[Token(Token = "0x6002397")]
		[Address(RVA = "0x13C77F4", Offset = "0x13C77F4", VA = "0x13C77F4")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x92D850", Offset = "0x92D850")]
		private static void UploadLeaderboardScoreIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x6002398")]
		[Address(RVA = "0x13C9278", Offset = "0x13C9278", VA = "0x13C9278")]
		public static int UploadLeaderboardScore(StatusCallback callback, string pchLeaderboardName, int nScore)
		{
			return default(int);
		}

		[Token(Token = "0x6002399")]
		[Address(RVA = "0x13C960C", Offset = "0x13C960C", VA = "0x13C960C")]
		public static Leaderboard GetLeaderboardScore(int index)
		{
			return null;
		}

		[Token(Token = "0x600239A")]
		[Address(RVA = "0x13C98A0", Offset = "0x13C98A0", VA = "0x13C98A0")]
		public static int GetLeaderboardScoreCount()
		{
			return default(int);
		}

		[Token(Token = "0x600239B")]
		[Address(RVA = "0x13C99B8", Offset = "0x13C99B8", VA = "0x13C99B8")]
		public static LeaderBoardSortMethod GetLeaderboardSortMethod()
		{
			return default(LeaderBoardSortMethod);
		}

		[Token(Token = "0x600239C")]
		[Address(RVA = "0x13C9AD0", Offset = "0x13C9AD0", VA = "0x13C9AD0")]
		public static LeaderBoardDiaplayType GetLeaderboardDisplayType()
		{
			return default(LeaderBoardDiaplayType);
		}

		[Token(Token = "0x600239D")]
		[Address(RVA = "0x13C9BE8", Offset = "0x13C9BE8", VA = "0x13C9BE8")]
		public UserStats()
		{
		}
	}
	[Token(Token = "0x2000540")]
	public class ArcadeLeaderboard
	{
		[Token(Token = "0x600239E")]
		[Address(RVA = "0xC17DC0", Offset = "0xC17DC0", VA = "0xC17DC0")]
		public ArcadeLeaderboard()
		{
		}
	}
	[Token(Token = "0x2000541")]
	public class IAPurchase
	{
		[Token(Token = "0x2000542")]
		private class IAPHandler : BaseHandler
		{
			[Token(Token = "0x40024D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static IAPurchaseListener listener;

			[Token(Token = "0x60023BA")]
			[Address(RVA = "0xE5ED48", Offset = "0xE5ED48", VA = "0xE5ED48")]
			public IAPHandler(IAPurchaseListener cb)
			{
			}

			[Token(Token = "0x60023BB")]
			[Address(RVA = "0xE5EDB0", Offset = "0xE5EDB0", VA = "0xE5EDB0")]
			public IAPurchaseCallback getIsReadyHandler()
			{
				return null;
			}

			[Token(Token = "0x60023BC")]
			[Address(RVA = "0xE5EE20", Offset = "0xE5EE20", VA = "0xE5EE20", Slot = "4")]
			protected override void IsReadyHandler(int code, string message)
			{
			}

			[Token(Token = "0x60023BD")]
			[Address(RVA = "0xE5F33C", Offset = "0xE5F33C", VA = "0xE5F33C")]
			public IAPurchaseCallback getRequestHandler()
			{
				return null;
			}

			[Token(Token = "0x60023BE")]
			[Address(RVA = "0xE5F3AC", Offset = "0xE5F3AC", VA = "0xE5F3AC", Slot = "5")]
			protected override void RequestHandler(int code, string message)
			{
			}

			[Token(Token = "0x60023BF")]
			[Address(RVA = "0xE5F8C8", Offset = "0xE5F8C8", VA = "0xE5F8C8")]
			public IAPurchaseCallback getPurchaseHandler()
			{
				return null;
			}

			[Token(Token = "0x60023C0")]
			[Address(RVA = "0xE5F938", Offset = "0xE5F938", VA = "0xE5F938", Slot = "6")]
			protected override void PurchaseHandler(int code, string message)
			{
			}

			[Token(Token = "0x60023C1")]
			[Address(RVA = "0xE5FEE4", Offset = "0xE5FEE4", VA = "0xE5FEE4")]
			public IAPurchaseCallback getQueryHandler()
			{
				return null;
			}

			[Token(Token = "0x60023C2")]
			[Address(RVA = "0xE5FF54", Offset = "0xE5FF54", VA = "0xE5FF54", Slot = "7")]
			protected override void QueryHandler(int code, string message)
			{
			}

			[Token(Token = "0x60023C3")]
			[Address(RVA = "0xE60948", Offset = "0xE60948", VA = "0xE60948")]
			public IAPurchaseCallback getQueryListHandler()
			{
				return null;
			}

			[Token(Token = "0x60023C4")]
			[Address(RVA = "0xE609B8", Offset = "0xE609B8", VA = "0xE609B8", Slot = "8")]
			protected override void QueryListHandler(int code, string message)
			{
			}

			[Token(Token = "0x60023C5")]
			[Address(RVA = "0xE6196C", Offset = "0xE6196C", VA = "0xE6196C")]
			public IAPurchaseCallback getBalanceHandler()
			{
				return null;
			}

			[Token(Token = "0x60023C6")]
			[Address(RVA = "0xE619DC", Offset = "0xE619DC", VA = "0xE619DC", Slot = "9")]
			protected override void BalanceHandler(int code, string message)
			{
			}

			[Token(Token = "0x60023C7")]
			[Address(RVA = "0xE61F94", Offset = "0xE61F94", VA = "0xE61F94")]
			public IAPurchaseCallback getRequestSubscriptionHandler()
			{
				return null;
			}

			[Token(Token = "0x60023C8")]
			[Address(RVA = "0xE62004", Offset = "0xE62004", VA = "0xE62004", Slot = "10")]
			protected override void RequestSubscriptionHandler(int code, string message)
			{
			}

			[Token(Token = "0x60023C9")]
			[Address(RVA = "0xE62514", Offset = "0xE62514", VA = "0xE62514")]
			public IAPurchaseCallback getRequestSubscriptionWithPlanIDHandler()
			{
				return null;
			}

			[Token(Token = "0x60023CA")]
			[Address(RVA = "0xE62584", Offset = "0xE62584", VA = "0xE62584", Slot = "11")]
			protected override void RequestSubscriptionWithPlanIDHandler(int code, string message)
			{
			}

			[Token(Token = "0x60023CB")]
			[Address(RVA = "0xE62A94", Offset = "0xE62A94", VA = "0xE62A94")]
			public IAPurchaseCallback getSubscribeHandler()
			{
				return null;
			}

			[Token(Token = "0x60023CC")]
			[Address(RVA = "0xE62B04", Offset = "0xE62B04", VA = "0xE62B04", Slot = "12")]
			protected override void SubscribeHandler(int code, string message)
			{
			}

			[Token(Token = "0x60023CD")]
			[Address(RVA = "0xE63238", Offset = "0xE63238", VA = "0xE63238")]
			public IAPurchaseCallback getQuerySubscriptionHandler()
			{
				return null;
			}

			[Token(Token = "0x60023CE")]
			[Address(RVA = "0xE632A8", Offset = "0xE632A8", VA = "0xE632A8", Slot = "13")]
			protected override void QuerySubscriptionHandler(int code, string message)
			{
			}

			[Token(Token = "0x60023CF")]
			[Address(RVA = "0xE637D8", Offset = "0xE637D8", VA = "0xE637D8")]
			public IAPurchaseCallback getQuerySubscriptionListHandler()
			{
				return null;
			}

			[Token(Token = "0x60023D0")]
			[Address(RVA = "0xE63848", Offset = "0xE63848", VA = "0xE63848", Slot = "14")]
			protected override void QuerySubscriptionListHandler(int code, string message)
			{
			}

			[Token(Token = "0x60023D1")]
			[Address(RVA = "0xE63D78", Offset = "0xE63D78", VA = "0xE63D78")]
			public IAPurchaseCallback getCancelSubscriptionHandler()
			{
				return null;
			}

			[Token(Token = "0x60023D2")]
			[Address(RVA = "0xE63DE8", Offset = "0xE63DE8", VA = "0xE63DE8", Slot = "15")]
			protected override void CancelSubscriptionHandler(int code, string message)
			{
			}
		}

		[Token(Token = "0x2000543")]
		private abstract class BaseHandler
		{
			[Token(Token = "0x60023D3")]
			protected abstract void IsReadyHandler(int code, string message);

			[Token(Token = "0x60023D4")]
			protected abstract void RequestHandler(int code, string message);

			[Token(Token = "0x60023D5")]
			protected abstract void PurchaseHandler(int code, string message);

			[Token(Token = "0x60023D6")]
			protected abstract void QueryHandler(int code, string message);

			[Token(Token = "0x60023D7")]
			protected abstract void QueryListHandler(int code, string message);

			[Token(Token = "0x60023D8")]
			protected abstract void BalanceHandler(int code, string message);

			[Token(Token = "0x60023D9")]
			protected abstract void RequestSubscriptionHandler(int code, string message);

			[Token(Token = "0x60023DA")]
			protected abstract void RequestSubscriptionWithPlanIDHandler(int code, string message);

			[Token(Token = "0x60023DB")]
			protected abstract void SubscribeHandler(int code, string message);

			[Token(Token = "0x60023DC")]
			protected abstract void QuerySubscriptionHandler(int code, string message);

			[Token(Token = "0x60023DD")]
			protected abstract void QuerySubscriptionListHandler(int code, string message);

			[Token(Token = "0x60023DE")]
			protected abstract void CancelSubscriptionHandler(int code, string message);

			[Token(Token = "0x60023DF")]
			[Address(RVA = "0xE5ED40", Offset = "0xE5ED40", VA = "0xE5ED40")]
			protected BaseHandler()
			{
			}
		}

		[Token(Token = "0x2000544")]
		public class IAPurchaseListener
		{
			[Token(Token = "0x60023E0")]
			[Address(RVA = "0xE641D8", Offset = "0xE641D8", VA = "0xE641D8", Slot = "4")]
			public virtual void OnSuccess(string pchCurrencyName)
			{
			}

			[Token(Token = "0x60023E1")]
			[Address(RVA = "0xE641DC", Offset = "0xE641DC", VA = "0xE641DC", Slot = "5")]
			public virtual void OnRequestSuccess(string pchPurchaseId)
			{
			}

			[Token(Token = "0x60023E2")]
			[Address(RVA = "0xE641E0", Offset = "0xE641E0", VA = "0xE641E0", Slot = "6")]
			public virtual void OnPurchaseSuccess(string pchPurchaseId)
			{
			}

			[Token(Token = "0x60023E3")]
			[Address(RVA = "0xE641E4", Offset = "0xE641E4", VA = "0xE641E4", Slot = "7")]
			public virtual void OnQuerySuccess(QueryResponse response)
			{
			}

			[Token(Token = "0x60023E4")]
			[Address(RVA = "0xE641E8", Offset = "0xE641E8", VA = "0xE641E8", Slot = "8")]
			public virtual void OnQuerySuccess(QueryListResponse response)
			{
			}

			[Token(Token = "0x60023E5")]
			[Address(RVA = "0xE641EC", Offset = "0xE641EC", VA = "0xE641EC", Slot = "9")]
			public virtual void OnBalanceSuccess(string pchBalance)
			{
			}

			[Token(Token = "0x60023E6")]
			[Address(RVA = "0xE641F0", Offset = "0xE641F0", VA = "0xE641F0", Slot = "10")]
			public virtual void OnFailure(int nCode, string pchMessage)
			{
			}

			[Token(Token = "0x60023E7")]
			[Address(RVA = "0xE641F4", Offset = "0xE641F4", VA = "0xE641F4", Slot = "11")]
			public virtual void OnRequestSubscriptionSuccess(string pchSubscriptionId)
			{
			}

			[Token(Token = "0x60023E8")]
			[Address(RVA = "0xE641F8", Offset = "0xE641F8", VA = "0xE641F8", Slot = "12")]
			public virtual void OnRequestSubscriptionWithPlanIDSuccess(string pchSubscriptionId)
			{
			}

			[Token(Token = "0x60023E9")]
			[Address(RVA = "0xE641FC", Offset = "0xE641FC", VA = "0xE641FC", Slot = "13")]
			public virtual void OnSubscribeSuccess(string pchSubscriptionId)
			{
			}

			[Token(Token = "0x60023EA")]
			[Address(RVA = "0xE64200", Offset = "0xE64200", VA = "0xE64200", Slot = "14")]
			public virtual void OnQuerySubscriptionSuccess(Subscription[] subscriptionlist)
			{
			}

			[Token(Token = "0x60023EB")]
			[Address(RVA = "0xE64204", Offset = "0xE64204", VA = "0xE64204", Slot = "15")]
			public virtual void OnQuerySubscriptionListSuccess(Subscription[] subscriptionlist)
			{
			}

			[Token(Token = "0x60023EC")]
			[Address(RVA = "0xE64208", Offset = "0xE64208", VA = "0xE64208", Slot = "16")]
			public virtual void OnCancelSubscriptionSuccess(bool bCanceled)
			{
			}

			[Token(Token = "0x60023ED")]
			[Address(RVA = "0xE6420C", Offset = "0xE6420C", VA = "0xE6420C")]
			public IAPurchaseListener()
			{
			}
		}

		[Token(Token = "0x2000545")]
		public class QueryResponse
		{
			[Token(Token = "0x40024D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91DB1C", Offset = "0x91DB1C")]
			private string <order_id>k__BackingField;

			[Token(Token = "0x40024D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91DB2C", Offset = "0x91DB2C")]
			private string <purchase_id>k__BackingField;

			[Token(Token = "0x40024D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91DB3C", Offset = "0x91DB3C")]
			private string <status>k__BackingField;

			[Token(Token = "0x40024DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91DB4C", Offset = "0x91DB4C")]
			private string <price>k__BackingField;

			[Token(Token = "0x40024DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91DB5C", Offset = "0x91DB5C")]
			private string <currency>k__BackingField;

			[Token(Token = "0x40024DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91DB6C", Offset = "0x91DB6C")]
			private long <paid_timestamp>k__BackingField;

			[Token(Token = "0x17000209")]
			public string order_id
			{
				[Token(Token = "0x60023EE")]
				[Address(RVA = "0xE64244", Offset = "0xE64244", VA = "0xE64244")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92DD90", Offset = "0x92DD90")]
				get
				{
					return null;
				}
				[Token(Token = "0x60023EF")]
				[Address(RVA = "0xE6424C", Offset = "0xE6424C", VA = "0xE6424C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92DDA0", Offset = "0x92DDA0")]
				set
				{
				}
			}

			[Token(Token = "0x1700020A")]
			public string purchase_id
			{
				[Token(Token = "0x60023F0")]
				[Address(RVA = "0xE64254", Offset = "0xE64254", VA = "0xE64254")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92DDB0", Offset = "0x92DDB0")]
				get
				{
					return null;
				}
				[Token(Token = "0x60023F1")]
				[Address(RVA = "0xE6425C", Offset = "0xE6425C", VA = "0xE6425C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92DDC0", Offset = "0x92DDC0")]
				set
				{
				}
			}

			[Token(Token = "0x1700020B")]
			public string status
			{
				[Token(Token = "0x60023F2")]
				[Address(RVA = "0xE64264", Offset = "0xE64264", VA = "0xE64264")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92DDD0", Offset = "0x92DDD0")]
				get
				{
					return null;
				}
				[Token(Token = "0x60023F3")]
				[Address(RVA = "0xE6426C", Offset = "0xE6426C", VA = "0xE6426C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92DDE0", Offset = "0x92DDE0")]
				set
				{
				}
			}

			[Token(Token = "0x1700020C")]
			public string price
			{
				[Token(Token = "0x60023F4")]
				[Address(RVA = "0xE64274", Offset = "0xE64274", VA = "0xE64274")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92DDF0", Offset = "0x92DDF0")]
				get
				{
					return null;
				}
				[Token(Token = "0x60023F5")]
				[Address(RVA = "0xE6427C", Offset = "0xE6427C", VA = "0xE6427C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92DE00", Offset = "0x92DE00")]
				set
				{
				}
			}

			[Token(Token = "0x1700020D")]
			public string currency
			{
				[Token(Token = "0x60023F6")]
				[Address(RVA = "0xE64284", Offset = "0xE64284", VA = "0xE64284")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92DE10", Offset = "0x92DE10")]
				get
				{
					return null;
				}
				[Token(Token = "0x60023F7")]
				[Address(RVA = "0xE6428C", Offset = "0xE6428C", VA = "0xE6428C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92DE20", Offset = "0x92DE20")]
				set
				{
				}
			}

			[Token(Token = "0x1700020E")]
			public long paid_timestamp
			{
				[Token(Token = "0x60023F8")]
				[Address(RVA = "0xE64294", Offset = "0xE64294", VA = "0xE64294")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92DE30", Offset = "0x92DE30")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x60023F9")]
				[Address(RVA = "0xE6429C", Offset = "0xE6429C", VA = "0xE6429C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92DE40", Offset = "0x92DE40")]
				set
				{
				}
			}

			[Token(Token = "0x60023FA")]
			[Address(RVA = "0xE60940", Offset = "0xE60940", VA = "0xE60940")]
			public QueryResponse()
			{
			}
		}

		[Token(Token = "0x2000546")]
		public class QueryResponse2
		{
			[Token(Token = "0x40024DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91DB7C", Offset = "0x91DB7C")]
			private string <order_id>k__BackingField;

			[Token(Token = "0x40024DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91DB8C", Offset = "0x91DB8C")]
			private string <app_id>k__BackingField;

			[Token(Token = "0x40024DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91DB9C", Offset = "0x91DB9C")]
			private string <purchase_id>k__BackingField;

			[Token(Token = "0x40024E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91DBAC", Offset = "0x91DBAC")]
			private string <user_data>k__BackingField;

			[Token(Token = "0x40024E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91DBBC", Offset = "0x91DBBC")]
			private string <price>k__BackingField;

			[Token(Token = "0x40024E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91DBCC", Offset = "0x91DBCC")]
			private string <currency>k__BackingField;

			[Token(Token = "0x40024E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91DBDC", Offset = "0x91DBDC")]
			private long <paid_timestamp>k__BackingField;

			[Token(Token = "0x1700020F")]
			public string order_id
			{
				[Token(Token = "0x60023FB")]
				[Address(RVA = "0xE642A4", Offset = "0xE642A4", VA = "0xE642A4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92DE50", Offset = "0x92DE50")]
				get
				{
					return null;
				}
				[Token(Token = "0x60023FC")]
				[Address(RVA = "0xE642AC", Offset = "0xE642AC", VA = "0xE642AC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92DE60", Offset = "0x92DE60")]
				set
				{
				}
			}

			[Token(Token = "0x17000210")]
			public string app_id
			{
				[Token(Token = "0x60023FD")]
				[Address(RVA = "0xE642B4", Offset = "0xE642B4", VA = "0xE642B4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92DE70", Offset = "0x92DE70")]
				get
				{
					return null;
				}
				[Token(Token = "0x60023FE")]
				[Address(RVA = "0xE642BC", Offset = "0xE642BC", VA = "0xE642BC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92DE80", Offset = "0x92DE80")]
				set
				{
				}
			}

			[Token(Token = "0x17000211")]
			public string purchase_id
			{
				[Token(Token = "0x60023FF")]
				[Address(RVA = "0xE642C4", Offset = "0xE642C4", VA = "0xE642C4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92DE90", Offset = "0x92DE90")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002400")]
				[Address(RVA = "0xE642CC", Offset = "0xE642CC", VA = "0xE642CC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92DEA0", Offset = "0x92DEA0")]
				set
				{
				}
			}

			[Token(Token = "0x17000212")]
			public string user_data
			{
				[Token(Token = "0x6002401")]
				[Address(RVA = "0xE642D4", Offset = "0xE642D4", VA = "0xE642D4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92DEB0", Offset = "0x92DEB0")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002402")]
				[Address(RVA = "0xE642DC", Offset = "0xE642DC", VA = "0xE642DC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92DEC0", Offset = "0x92DEC0")]
				set
				{
				}
			}

			[Token(Token = "0x17000213")]
			public string price
			{
				[Token(Token = "0x6002403")]
				[Address(RVA = "0xE642E4", Offset = "0xE642E4", VA = "0xE642E4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92DED0", Offset = "0x92DED0")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002404")]
				[Address(RVA = "0xE642EC", Offset = "0xE642EC", VA = "0xE642EC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92DEE0", Offset = "0x92DEE0")]
				set
				{
				}
			}

			[Token(Token = "0x17000214")]
			public string currency
			{
				[Token(Token = "0x6002405")]
				[Address(RVA = "0xE642F4", Offset = "0xE642F4", VA = "0xE642F4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92DEF0", Offset = "0x92DEF0")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002406")]
				[Address(RVA = "0xE642FC", Offset = "0xE642FC", VA = "0xE642FC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92DF00", Offset = "0x92DF00")]
				set
				{
				}
			}

			[Token(Token = "0x17000215")]
			public long paid_timestamp
			{
				[Token(Token = "0x6002407")]
				[Address(RVA = "0xE64304", Offset = "0xE64304", VA = "0xE64304")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92DF10", Offset = "0x92DF10")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x6002408")]
				[Address(RVA = "0xE6430C", Offset = "0xE6430C", VA = "0xE6430C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92DF20", Offset = "0x92DF20")]
				set
				{
				}
			}

			[Token(Token = "0x6002409")]
			[Address(RVA = "0xE6195C", Offset = "0xE6195C", VA = "0xE6195C")]
			public QueryResponse2()
			{
			}
		}

		[Token(Token = "0x2000547")]
		public class QueryListResponse
		{
			[Token(Token = "0x40024E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91DBEC", Offset = "0x91DBEC")]
			private int <total>k__BackingField;

			[Token(Token = "0x40024E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91DBFC", Offset = "0x91DBFC")]
			private int <from>k__BackingField;

			[Token(Token = "0x40024E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91DC0C", Offset = "0x91DC0C")]
			private int <to>k__BackingField;

			[Token(Token = "0x40024E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<QueryResponse2> purchaseList;

			[Token(Token = "0x17000216")]
			public int total
			{
				[Token(Token = "0x600240A")]
				[Address(RVA = "0xE64214", Offset = "0xE64214", VA = "0xE64214")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92DF30", Offset = "0x92DF30")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x600240B")]
				[Address(RVA = "0xE6421C", Offset = "0xE6421C", VA = "0xE6421C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92DF40", Offset = "0x92DF40")]
				set
				{
				}
			}

			[Token(Token = "0x17000217")]
			public int from
			{
				[Token(Token = "0x600240C")]
				[Address(RVA = "0xE64224", Offset = "0xE64224", VA = "0xE64224")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92DF50", Offset = "0x92DF50")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x600240D")]
				[Address(RVA = "0xE6422C", Offset = "0xE6422C", VA = "0xE6422C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92DF60", Offset = "0x92DF60")]
				set
				{
				}
			}

			[Token(Token = "0x17000218")]
			public int to
			{
				[Token(Token = "0x600240E")]
				[Address(RVA = "0xE64234", Offset = "0xE64234", VA = "0xE64234")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92DF70", Offset = "0x92DF70")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x600240F")]
				[Address(RVA = "0xE6423C", Offset = "0xE6423C", VA = "0xE6423C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92DF80", Offset = "0x92DF80")]
				set
				{
				}
			}

			[Token(Token = "0x6002410")]
			[Address(RVA = "0xE61964", Offset = "0xE61964", VA = "0xE61964")]
			public QueryListResponse()
			{
			}
		}

		[Token(Token = "0x2000548")]
		public class StatusDetailTransaction
		{
			[Token(Token = "0x40024E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91DC1C", Offset = "0x91DC1C")]
			private long <create_time>k__BackingField;

			[Token(Token = "0x40024E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91DC2C", Offset = "0x91DC2C")]
			private string <payment_method>k__BackingField;

			[Token(Token = "0x40024EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91DC3C", Offset = "0x91DC3C")]
			private string <status>k__BackingField;

			[Token(Token = "0x17000219")]
			public long create_time
			{
				[Token(Token = "0x6002411")]
				[Address(RVA = "0xE64384", Offset = "0xE64384", VA = "0xE64384")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92DF90", Offset = "0x92DF90")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x6002412")]
				[Address(RVA = "0xE6438C", Offset = "0xE6438C", VA = "0xE6438C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92DFA0", Offset = "0x92DFA0")]
				set
				{
				}
			}

			[Token(Token = "0x1700021A")]
			public string payment_method
			{
				[Token(Token = "0x6002413")]
				[Address(RVA = "0xE64394", Offset = "0xE64394", VA = "0xE64394")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92DFB0", Offset = "0x92DFB0")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002414")]
				[Address(RVA = "0xE6439C", Offset = "0xE6439C", VA = "0xE6439C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92DFC0", Offset = "0x92DFC0")]
				set
				{
				}
			}

			[Token(Token = "0x1700021B")]
			public string status
			{
				[Token(Token = "0x6002415")]
				[Address(RVA = "0xE643A4", Offset = "0xE643A4", VA = "0xE643A4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92DFD0", Offset = "0x92DFD0")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002416")]
				[Address(RVA = "0xE643AC", Offset = "0xE643AC", VA = "0xE643AC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92DFE0", Offset = "0x92DFE0")]
				set
				{
				}
			}

			[Token(Token = "0x6002417")]
			[Address(RVA = "0xE643B4", Offset = "0xE643B4", VA = "0xE643B4")]
			public StatusDetailTransaction()
			{
			}
		}

		[Token(Token = "0x2000549")]
		public class StatusDetail
		{
			[Token(Token = "0x40024EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91DC4C", Offset = "0x91DC4C")]
			private long <date_next_charge>k__BackingField;

			[Token(Token = "0x40024EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91DC5C", Offset = "0x91DC5C")]
			private StatusDetailTransaction[] <transactions>k__BackingField;

			[Token(Token = "0x40024ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91DC6C", Offset = "0x91DC6C")]
			private string <cancel_reason>k__BackingField;

			[Token(Token = "0x1700021C")]
			public long date_next_charge
			{
				[Token(Token = "0x6002418")]
				[Address(RVA = "0xE6434C", Offset = "0xE6434C", VA = "0xE6434C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92DFF0", Offset = "0x92DFF0")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x6002419")]
				[Address(RVA = "0xE64354", Offset = "0xE64354", VA = "0xE64354")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92E000", Offset = "0x92E000")]
				set
				{
				}
			}

			[Token(Token = "0x1700021D")]
			public StatusDetailTransaction[] transactions
			{
				[Token(Token = "0x600241A")]
				[Address(RVA = "0xE6435C", Offset = "0xE6435C", VA = "0xE6435C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92E010", Offset = "0x92E010")]
				get
				{
					return null;
				}
				[Token(Token = "0x600241B")]
				[Address(RVA = "0xE64364", Offset = "0xE64364", VA = "0xE64364")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92E020", Offset = "0x92E020")]
				set
				{
				}
			}

			[Token(Token = "0x1700021E")]
			public string cancel_reason
			{
				[Token(Token = "0x600241C")]
				[Address(RVA = "0xE6436C", Offset = "0xE6436C", VA = "0xE6436C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92E030", Offset = "0x92E030")]
				get
				{
					return null;
				}
				[Token(Token = "0x600241D")]
				[Address(RVA = "0xE64374", Offset = "0xE64374", VA = "0xE64374")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92E040", Offset = "0x92E040")]
				set
				{
				}
			}

			[Token(Token = "0x600241E")]
			[Address(RVA = "0xE6437C", Offset = "0xE6437C", VA = "0xE6437C")]
			public StatusDetail()
			{
			}
		}

		[Token(Token = "0x200054A")]
		public class TimePeriod
		{
			[Token(Token = "0x40024EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91DC7C", Offset = "0x91DC7C")]
			private string <time_type>k__BackingField;

			[Token(Token = "0x40024EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91DC8C", Offset = "0x91DC8C")]
			private int <value>k__BackingField;

			[Token(Token = "0x1700021F")]
			public string time_type
			{
				[Token(Token = "0x600241F")]
				[Address(RVA = "0xE64494", Offset = "0xE64494", VA = "0xE64494")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92E050", Offset = "0x92E050")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002420")]
				[Address(RVA = "0xE6449C", Offset = "0xE6449C", VA = "0xE6449C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92E060", Offset = "0x92E060")]
				set
				{
				}
			}

			[Token(Token = "0x17000220")]
			public int value
			{
				[Token(Token = "0x6002421")]
				[Address(RVA = "0xE644A4", Offset = "0xE644A4", VA = "0xE644A4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92E070", Offset = "0x92E070")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6002422")]
				[Address(RVA = "0xE644AC", Offset = "0xE644AC", VA = "0xE644AC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92E080", Offset = "0x92E080")]
				set
				{
				}
			}

			[Token(Token = "0x6002423")]
			[Address(RVA = "0xE644B4", Offset = "0xE644B4", VA = "0xE644B4")]
			public TimePeriod()
			{
			}
		}

		[Token(Token = "0x200054B")]
		public class Subscription
		{
			[Token(Token = "0x40024F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91DC9C", Offset = "0x91DC9C")]
			private string <app_id>k__BackingField;

			[Token(Token = "0x40024F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91DCAC", Offset = "0x91DCAC")]
			private string <order_id>k__BackingField;

			[Token(Token = "0x40024F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91DCBC", Offset = "0x91DCBC")]
			private string <subscription_id>k__BackingField;

			[Token(Token = "0x40024F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91DCCC", Offset = "0x91DCCC")]
			private string <price>k__BackingField;

			[Token(Token = "0x40024F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91DCDC", Offset = "0x91DCDC")]
			private string <currency>k__BackingField;

			[Token(Token = "0x40024F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91DCEC", Offset = "0x91DCEC")]
			private long <subscribed_timestamp>k__BackingField;

			[Token(Token = "0x40024F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91DCFC", Offset = "0x91DCFC")]
			private TimePeriod <free_trial_period>k__BackingField;

			[Token(Token = "0x40024F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91DD0C", Offset = "0x91DD0C")]
			private TimePeriod <charge_period>k__BackingField;

			[Token(Token = "0x40024F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91DD1C", Offset = "0x91DD1C")]
			private int <number_of_charge_period>k__BackingField;

			[Token(Token = "0x40024F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91DD2C", Offset = "0x91DD2C")]
			private string <plan_id>k__BackingField;

			[Token(Token = "0x40024FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91DD3C", Offset = "0x91DD3C")]
			private string <plan_name>k__BackingField;

			[Token(Token = "0x40024FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91DD4C", Offset = "0x91DD4C")]
			private string <status>k__BackingField;

			[Token(Token = "0x40024FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91DD5C", Offset = "0x91DD5C")]
			private StatusDetail <status_detail>k__BackingField;

			[Token(Token = "0x17000221")]
			public string app_id
			{
				[Token(Token = "0x6002424")]
				[Address(RVA = "0xE643BC", Offset = "0xE643BC", VA = "0xE643BC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92E090", Offset = "0x92E090")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002425")]
				[Address(RVA = "0xE643C4", Offset = "0xE643C4", VA = "0xE643C4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92E0A0", Offset = "0x92E0A0")]
				set
				{
				}
			}

			[Token(Token = "0x17000222")]
			public string order_id
			{
				[Token(Token = "0x6002426")]
				[Address(RVA = "0xE643CC", Offset = "0xE643CC", VA = "0xE643CC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92E0B0", Offset = "0x92E0B0")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002427")]
				[Address(RVA = "0xE643D4", Offset = "0xE643D4", VA = "0xE643D4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92E0C0", Offset = "0x92E0C0")]
				set
				{
				}
			}

			[Token(Token = "0x17000223")]
			public string subscription_id
			{
				[Token(Token = "0x6002428")]
				[Address(RVA = "0xE643DC", Offset = "0xE643DC", VA = "0xE643DC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92E0D0", Offset = "0x92E0D0")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002429")]
				[Address(RVA = "0xE643E4", Offset = "0xE643E4", VA = "0xE643E4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92E0E0", Offset = "0x92E0E0")]
				set
				{
				}
			}

			[Token(Token = "0x17000224")]
			public string price
			{
				[Token(Token = "0x600242A")]
				[Address(RVA = "0xE643EC", Offset = "0xE643EC", VA = "0xE643EC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92E0F0", Offset = "0x92E0F0")]
				get
				{
					return null;
				}
				[Token(Token = "0x600242B")]
				[Address(RVA = "0xE643F4", Offset = "0xE643F4", VA = "0xE643F4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92E100", Offset = "0x92E100")]
				set
				{
				}
			}

			[Token(Token = "0x17000225")]
			public string currency
			{
				[Token(Token = "0x600242C")]
				[Address(RVA = "0xE643FC", Offset = "0xE643FC", VA = "0xE643FC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92E110", Offset = "0x92E110")]
				get
				{
					return null;
				}
				[Token(Token = "0x600242D")]
				[Address(RVA = "0xE64404", Offset = "0xE64404", VA = "0xE64404")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92E120", Offset = "0x92E120")]
				set
				{
				}
			}

			[Token(Token = "0x17000226")]
			public long subscribed_timestamp
			{
				[Token(Token = "0x600242E")]
				[Address(RVA = "0xE6440C", Offset = "0xE6440C", VA = "0xE6440C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92E130", Offset = "0x92E130")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x600242F")]
				[Address(RVA = "0xE64414", Offset = "0xE64414", VA = "0xE64414")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92E140", Offset = "0x92E140")]
				set
				{
				}
			}

			[Token(Token = "0x17000227")]
			public TimePeriod free_trial_period
			{
				[Token(Token = "0x6002430")]
				[Address(RVA = "0xE6441C", Offset = "0xE6441C", VA = "0xE6441C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92E150", Offset = "0x92E150")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002431")]
				[Address(RVA = "0xE64424", Offset = "0xE64424", VA = "0xE64424")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92E160", Offset = "0x92E160")]
				set
				{
				}
			}

			[Token(Token = "0x17000228")]
			public TimePeriod charge_period
			{
				[Token(Token = "0x6002432")]
				[Address(RVA = "0xE6442C", Offset = "0xE6442C", VA = "0xE6442C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92E170", Offset = "0x92E170")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002433")]
				[Address(RVA = "0xE64434", Offset = "0xE64434", VA = "0xE64434")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92E180", Offset = "0x92E180")]
				set
				{
				}
			}

			[Token(Token = "0x17000229")]
			public int number_of_charge_period
			{
				[Token(Token = "0x6002434")]
				[Address(RVA = "0xE6443C", Offset = "0xE6443C", VA = "0xE6443C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92E190", Offset = "0x92E190")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6002435")]
				[Address(RVA = "0xE64444", Offset = "0xE64444", VA = "0xE64444")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92E1A0", Offset = "0x92E1A0")]
				set
				{
				}
			}

			[Token(Token = "0x1700022A")]
			public string plan_id
			{
				[Token(Token = "0x6002436")]
				[Address(RVA = "0xE6444C", Offset = "0xE6444C", VA = "0xE6444C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92E1B0", Offset = "0x92E1B0")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002437")]
				[Address(RVA = "0xE64454", Offset = "0xE64454", VA = "0xE64454")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92E1C0", Offset = "0x92E1C0")]
				set
				{
				}
			}

			[Token(Token = "0x1700022B")]
			public string plan_name
			{
				[Token(Token = "0x6002438")]
				[Address(RVA = "0xE6445C", Offset = "0xE6445C", VA = "0xE6445C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92E1D0", Offset = "0x92E1D0")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002439")]
				[Address(RVA = "0xE64464", Offset = "0xE64464", VA = "0xE64464")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92E1E0", Offset = "0x92E1E0")]
				set
				{
				}
			}

			[Token(Token = "0x1700022C")]
			public string status
			{
				[Token(Token = "0x600243A")]
				[Address(RVA = "0xE6446C", Offset = "0xE6446C", VA = "0xE6446C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92E1F0", Offset = "0x92E1F0")]
				get
				{
					return null;
				}
				[Token(Token = "0x600243B")]
				[Address(RVA = "0xE64474", Offset = "0xE64474", VA = "0xE64474")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92E200", Offset = "0x92E200")]
				set
				{
				}
			}

			[Token(Token = "0x1700022D")]
			public StatusDetail status_detail
			{
				[Token(Token = "0x600243C")]
				[Address(RVA = "0xE6447C", Offset = "0xE6447C", VA = "0xE6447C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92E210", Offset = "0x92E210")]
				get
				{
					return null;
				}
				[Token(Token = "0x600243D")]
				[Address(RVA = "0xE64484", Offset = "0xE64484", VA = "0xE64484")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92E220", Offset = "0x92E220")]
				set
				{
				}
			}

			[Token(Token = "0x600243E")]
			[Address(RVA = "0xE6448C", Offset = "0xE6448C", VA = "0xE6448C")]
			public Subscription()
			{
			}
		}

		[Token(Token = "0x200054C")]
		public class QuerySubscritionResponse
		{
			[Token(Token = "0x40024FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91DD6C", Offset = "0x91DD6C")]
			private int <statusCode>k__BackingField;

			[Token(Token = "0x40024FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91DD7C", Offset = "0x91DD7C")]
			private string <message>k__BackingField;

			[Token(Token = "0x40024FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91DD8C", Offset = "0x91DD8C")]
			private List<Subscription> <subscriptions>k__BackingField;

			[Token(Token = "0x1700022E")]
			public int statusCode
			{
				[Token(Token = "0x600243F")]
				[Address(RVA = "0xE64314", Offset = "0xE64314", VA = "0xE64314")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92E230", Offset = "0x92E230")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6002440")]
				[Address(RVA = "0xE6431C", Offset = "0xE6431C", VA = "0xE6431C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92E240", Offset = "0x92E240")]
				set
				{
				}
			}

			[Token(Token = "0x1700022F")]
			public string message
			{
				[Token(Token = "0x6002441")]
				[Address(RVA = "0xE64324", Offset = "0xE64324", VA = "0xE64324")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92E250", Offset = "0x92E250")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002442")]
				[Address(RVA = "0xE6432C", Offset = "0xE6432C", VA = "0xE6432C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92E260", Offset = "0x92E260")]
				set
				{
				}
			}

			[Token(Token = "0x17000230")]
			public List<Subscription> subscriptions
			{
				[Token(Token = "0x6002443")]
				[Address(RVA = "0xE64334", Offset = "0xE64334", VA = "0xE64334")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92E270", Offset = "0x92E270")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002444")]
				[Address(RVA = "0xE6433C", Offset = "0xE6433C", VA = "0xE6433C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92E280", Offset = "0x92E280")]
				set
				{
				}
			}

			[Token(Token = "0x6002445")]
			[Address(RVA = "0xE64344", Offset = "0xE64344", VA = "0xE64344")]
			public QuerySubscritionResponse()
			{
			}
		}

		[Token(Token = "0x40024C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IAPurchaseCallback isReadyIl2cppCallback;

		[Token(Token = "0x40024CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IAPurchaseCallback request01Il2cppCallback;

		[Token(Token = "0x40024CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IAPurchaseCallback request02Il2cppCallback;

		[Token(Token = "0x40024CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IAPurchaseCallback purchaseIl2cppCallback;

		[Token(Token = "0x40024CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static IAPurchaseCallback query01Il2cppCallback;

		[Token(Token = "0x40024CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static IAPurchaseCallback query02Il2cppCallback;

		[Token(Token = "0x40024CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static IAPurchaseCallback getBalanceIl2cppCallback;

		[Token(Token = "0x40024D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static IAPurchaseCallback requestSubscriptionIl2cppCallback;

		[Token(Token = "0x40024D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static IAPurchaseCallback requestSubscriptionWithPlanIDIl2cppCallback;

		[Token(Token = "0x40024D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static IAPurchaseCallback subscribeIl2cppCallback;

		[Token(Token = "0x40024D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static IAPurchaseCallback querySubscriptionIl2cppCallback;

		[Token(Token = "0x40024D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private static IAPurchaseCallback querySubscriptionListIl2cppCallback;

		[Token(Token = "0x40024D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private static IAPurchaseCallback cancelSubscriptionIl2cppCallback;

		[Token(Token = "0x600239F")]
		[Address(RVA = "0x13A72FC", Offset = "0x13A72FC", VA = "0x13A72FC")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x92D8B0", Offset = "0x92D8B0")]
		private static void IsReadyIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x60023A0")]
		[Address(RVA = "0x13A7AB8", Offset = "0x13A7AB8", VA = "0x13A7AB8")]
		public static void IsReady(IAPurchaseListener listener, string pchAppKey)
		{
		}

		[Token(Token = "0x60023A1")]
		[Address(RVA = "0x13A7368", Offset = "0x13A7368", VA = "0x13A7368")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x92D910", Offset = "0x92D910")]
		private static void Request01Il2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x60023A2")]
		[Address(RVA = "0x13A7D14", Offset = "0x13A7D14", VA = "0x13A7D14")]
		public static void Request(IAPurchaseListener listener, string pchPrice)
		{
		}

		[Token(Token = "0x60023A3")]
		[Address(RVA = "0x13A73D4", Offset = "0x13A73D4", VA = "0x13A73D4")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x92D970", Offset = "0x92D970")]
		private static void Request02Il2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x60023A4")]
		[Address(RVA = "0x13A7F60", Offset = "0x13A7F60", VA = "0x13A7F60")]
		public static void Request(IAPurchaseListener listener, string pchPrice, string pchUserData)
		{
		}

		[Token(Token = "0x60023A5")]
		[Address(RVA = "0x13A7440", Offset = "0x13A7440", VA = "0x13A7440")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x92D9D0", Offset = "0x92D9D0")]
		private static void PurchaseIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x60023A6")]
		[Address(RVA = "0x13A81E0", Offset = "0x13A81E0", VA = "0x13A81E0")]
		public static void Purchase(IAPurchaseListener listener, string pchPurchaseId)
		{
		}

		[Token(Token = "0x60023A7")]
		[Address(RVA = "0x13A74AC", Offset = "0x13A74AC", VA = "0x13A74AC")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x92DA30", Offset = "0x92DA30")]
		private static void Query01Il2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x60023A8")]
		[Address(RVA = "0x13A842C", Offset = "0x13A842C", VA = "0x13A842C")]
		public static void Query(IAPurchaseListener listener, string pchPurchaseId)
		{
		}

		[Token(Token = "0x60023A9")]
		[Address(RVA = "0x13A7518", Offset = "0x13A7518", VA = "0x13A7518")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x92DA90", Offset = "0x92DA90")]
		private static void Query02Il2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x60023AA")]
		[Address(RVA = "0x13A8678", Offset = "0x13A8678", VA = "0x13A8678")]
		public static void Query(IAPurchaseListener listener)
		{
		}

		[Token(Token = "0x60023AB")]
		[Address(RVA = "0x13A7584", Offset = "0x13A7584", VA = "0x13A7584")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x92DAF0", Offset = "0x92DAF0")]
		private static void GetBalanceIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x60023AC")]
		[Address(RVA = "0x13A8880", Offset = "0x13A8880", VA = "0x13A8880")]
		public static void GetBalance(IAPurchaseListener listener)
		{
		}

		[Token(Token = "0x60023AD")]
		[Address(RVA = "0x13A75F0", Offset = "0x13A75F0", VA = "0x13A75F0")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x92DB50", Offset = "0x92DB50")]
		private static void RequestSubscriptionIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x60023AE")]
		[Address(RVA = "0x13A8A88", Offset = "0x13A8A88", VA = "0x13A8A88")]
		public static void RequestSubscription(IAPurchaseListener listener, string pchPrice, string pchFreeTrialType, int nFreeTrialValue, string pchChargePeriodType, int nChargePeriodValue, int nNumberOfChargePeriod, string pchPlanId)
		{
		}

		[Token(Token = "0x60023AF")]
		[Address(RVA = "0x13A765C", Offset = "0x13A765C", VA = "0x13A765C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x92DBB0", Offset = "0x92DBB0")]
		private static void RequestSubscriptionWithPlanIDIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x60023B0")]
		[Address(RVA = "0x13A8E94", Offset = "0x13A8E94", VA = "0x13A8E94")]
		public static void RequestSubscriptionWithPlanID(IAPurchaseListener listener, string pchPlanId)
		{
		}

		[Token(Token = "0x60023B1")]
		[Address(RVA = "0x13A76C8", Offset = "0x13A76C8", VA = "0x13A76C8")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x92DC10", Offset = "0x92DC10")]
		private static void SubscribeIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x60023B2")]
		[Address(RVA = "0x13A90E0", Offset = "0x13A90E0", VA = "0x13A90E0")]
		public static void Subscribe(IAPurchaseListener listener, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x60023B3")]
		[Address(RVA = "0x13A7734", Offset = "0x13A7734", VA = "0x13A7734")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x92DC70", Offset = "0x92DC70")]
		private static void QuerySubscriptionIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x60023B4")]
		[Address(RVA = "0x13A932C", Offset = "0x13A932C", VA = "0x13A932C")]
		public static void QuerySubscription(IAPurchaseListener listener, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x60023B5")]
		[Address(RVA = "0x13A77A0", Offset = "0x13A77A0", VA = "0x13A77A0")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x92DCD0", Offset = "0x92DCD0")]
		private static void QuerySubscriptionListIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x60023B6")]
		[Address(RVA = "0x13A9578", Offset = "0x13A9578", VA = "0x13A9578")]
		public static void QuerySubscriptionList(IAPurchaseListener listener)
		{
		}

		[Token(Token = "0x60023B7")]
		[Address(RVA = "0x13A780C", Offset = "0x13A780C", VA = "0x13A780C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x92DD30", Offset = "0x92DD30")]
		private static void CancelSubscriptionIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x60023B8")]
		[Address(RVA = "0x13A9780", Offset = "0x13A9780", VA = "0x13A9780")]
		public static void CancelSubscription(IAPurchaseListener listener, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x60023B9")]
		[Address(RVA = "0x13A99CC", Offset = "0x13A99CC", VA = "0x13A99CC")]
		public IAPurchase()
		{
		}
	}
	[Token(Token = "0x200054D")]
	public class DLC
	{
		[Token(Token = "0x6002446")]
		[Address(RVA = "0x102D4F4", Offset = "0x102D4F4", VA = "0x102D4F4")]
		public DLC()
		{
		}
	}
	[Token(Token = "0x200054E")]
	public class Subscription
	{
		[Token(Token = "0x4002500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Viveport.Internal.StatusCallback2 isReadyIl2cppCallback;

		[Token(Token = "0x6002447")]
		[Address(RVA = "0x10EB6C8", Offset = "0x10EB6C8", VA = "0x10EB6C8")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x92E290", Offset = "0x92E290")]
		private static void IsReadyIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6002448")]
		[Address(RVA = "0x10EB734", Offset = "0x10EB734", VA = "0x10EB734")]
		public static void IsReady(StatusCallback2 callback)
		{
		}

		[Token(Token = "0x6002449")]
		[Address(RVA = "0x10EBA00", Offset = "0x10EBA00", VA = "0x10EBA00")]
		public static SubscriptionStatus GetUserStatus()
		{
			return null;
		}

		[Token(Token = "0x600244A")]
		[Address(RVA = "0x10EBF98", Offset = "0x10EBF98", VA = "0x10EBF98")]
		public Subscription()
		{
		}
	}
	[Token(Token = "0x200054F")]
	public class Deeplink
	{
		[Token(Token = "0x2000550")]
		public abstract class DeeplinkChecker
		{
			[Token(Token = "0x6002453")]
			public abstract void OnSuccess();

			[Token(Token = "0x6002454")]
			public abstract void OnFailure(int errorCode, string errorMessage);

			[Token(Token = "0x6002455")]
			[Address(RVA = "0xBE66C8", Offset = "0xBE66C8", VA = "0xBE66C8")]
			protected DeeplinkChecker()
			{
			}
		}

		[Token(Token = "0x4002501")]
		private const int MaxIdLength = 256;

		[Token(Token = "0x4002502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Viveport.Internal.StatusCallback isReadyIl2cppCallback;

		[Token(Token = "0x4002503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Viveport.Internal.StatusCallback2 goToAppIl2cppCallback;

		[Token(Token = "0x4002504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Viveport.Internal.StatusCallback2 goToAppWithBranchNameIl2cppCallback;

		[Token(Token = "0x4002505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Viveport.Internal.StatusCallback2 goToStoreIl2cppCallback;

		[Token(Token = "0x4002506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static Viveport.Internal.StatusCallback2 goToAppOrGoToStoreIl2cppCallback;

		[Token(Token = "0x600244B")]
		[Address(RVA = "0xD92358", Offset = "0xD92358", VA = "0xD92358")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x92E2F0", Offset = "0x92E2F0")]
		private static void IsReadyIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x600244C")]
		[Address(RVA = "0xD923B8", Offset = "0xD923B8", VA = "0xD923B8")]
		public static void IsReady(StatusCallback callback)
		{
		}

		[Token(Token = "0x600244D")]
		[Address(RVA = "0xD9265C", Offset = "0xD9265C", VA = "0xD9265C")]
		public static void GoToApp(DeeplinkChecker checker, string appId, string launchData)
		{
		}

		[Token(Token = "0x600244E")]
		[Address(RVA = "0xD92888", Offset = "0xD92888", VA = "0xD92888")]
		public static void GoToApp(DeeplinkChecker checker, string appId, string launchData, string branchName)
		{
		}

		[Token(Token = "0x600244F")]
		[Address(RVA = "0xD9291C", Offset = "0xD9291C", VA = "0xD9291C")]
		public static void GoToStore(DeeplinkChecker checker, string appId = "")
		{
		}

		[Token(Token = "0x6002450")]
		[Address(RVA = "0xD92AE4", Offset = "0xD92AE4", VA = "0xD92AE4")]
		public static void GoToAppOrGoToStore(DeeplinkChecker checker, string appId, string launchData)
		{
		}

		[Token(Token = "0x6002451")]
		[Address(RVA = "0xD92D10", Offset = "0xD92D10", VA = "0xD92D10")]
		public static string GetAppLaunchData()
		{
			return null;
		}

		[Token(Token = "0x6002452")]
		[Address(RVA = "0xD92E08", Offset = "0xD92E08", VA = "0xD92E08")]
		public Deeplink()
		{
		}
	}
	[Token(Token = "0x2000551")]
	internal class Token
	{
		[Token(Token = "0x4002507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Viveport.Internal.StatusCallback isReadyIl2cppCallback;

		[Token(Token = "0x4002508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Viveport.Internal.StatusCallback2 getSessionTokenIl2cppCallback;

		[Token(Token = "0x6002456")]
		[Address(RVA = "0xF1089C", Offset = "0xF1089C", VA = "0xF1089C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x92E350", Offset = "0x92E350")]
		private static void IsReadyIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x6002457")]
		[Address(RVA = "0xF1096C", Offset = "0xF1096C", VA = "0xF1096C")]
		public static void IsReady(StatusCallback callback)
		{
		}

		[Token(Token = "0x6002458")]
		[Address(RVA = "0xF108FC", Offset = "0xF108FC", VA = "0xF108FC")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x92E3B0", Offset = "0x92E3B0")]
		private static void GetSessionTokenIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6002459")]
		[Address(RVA = "0xF10C48", Offset = "0xF10C48", VA = "0xF10C48")]
		public static void GetSessionToken(StatusCallback2 callback)
		{
		}

		[Token(Token = "0x600245A")]
		[Address(RVA = "0xF10F24", Offset = "0xF10F24", VA = "0xF10F24")]
		public Token()
		{
		}
	}
}
namespace Viveport.Internal
{
	[Token(Token = "0x2000552")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x918C84", Offset = "0x918C84")]
	internal delegate void GetLicenseCallback(string message, string signature);
	[Token(Token = "0x2000553")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x918C98", Offset = "0x918C98")]
	internal delegate void StatusCallback(int nResult);
	[Token(Token = "0x2000554")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x918CAC", Offset = "0x918CAC")]
	internal delegate void StatusCallback2(int nResult, string message);
	[Token(Token = "0x2000555")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x918CC0", Offset = "0x918CC0")]
	internal delegate void QueryRuntimeModeCallback(int nResult, int nMode);
	[Token(Token = "0x2000556")]
	internal enum ELeaderboardDataRequest
	{
		[Token(Token = "0x400250A")]
		k_ELeaderboardDataRequestGlobal,
		[Token(Token = "0x400250B")]
		k_ELeaderboardDataRequestGlobalAroundUser,
		[Token(Token = "0x400250C")]
		k_ELeaderboardDataRequestLocal,
		[Token(Token = "0x400250D")]
		k_ELeaderboardDataRequestLocaleAroundUser
	}
	[Token(Token = "0x2000557")]
	internal enum ELeaderboardDataTimeRange
	{
		[Token(Token = "0x400250F")]
		k_ELeaderboardDataScropeAllTime,
		[Token(Token = "0x4002510")]
		k_ELeaderboardDataScropeDaily,
		[Token(Token = "0x4002511")]
		k_ELeaderboardDataScropeWeekly,
		[Token(Token = "0x4002512")]
		k_ELeaderboardDataScropeMonthly
	}
	[Token(Token = "0x2000558")]
	internal enum ELeaderboardSortMethod
	{
		[Token(Token = "0x4002514")]
		k_ELeaderboardSortMethodNone,
		[Token(Token = "0x4002515")]
		k_ELeaderboardSortMethodAscending,
		[Token(Token = "0x4002516")]
		k_ELeaderboardSortMethodDescending
	}
	[Token(Token = "0x2000559")]
	internal enum ELeaderboardDisplayType
	{
		[Token(Token = "0x4002518")]
		k_ELeaderboardDisplayTypeNone,
		[Token(Token = "0x4002519")]
		k_ELeaderboardDisplayTypeNumeric,
		[Token(Token = "0x400251A")]
		k_ELeaderboardDisplayTypeTimeSeconds,
		[Token(Token = "0x400251B")]
		k_ELeaderboardDisplayTypeTimeMilliSeconds
	}
	[Token(Token = "0x200055A")]
	internal enum ELeaderboardUploadScoreMethod
	{
		[Token(Token = "0x400251D")]
		k_ELeaderboardUploadScoreMethodNone,
		[Token(Token = "0x400251E")]
		k_ELeaderboardUploadScoreMethodKeepBest,
		[Token(Token = "0x400251F")]
		k_ELeaderboardUploadScoreMethodForceUpdate
	}
	[Token(Token = "0x200055B")]
	internal enum ESubscriptionTransactionType
	{
		[Token(Token = "0x4002521")]
		UNKNOWN,
		[Token(Token = "0x4002522")]
		PAID,
		[Token(Token = "0x4002523")]
		REDEEM,
		[Token(Token = "0x4002524")]
		FREEE_TRIAL
	}
	[Token(Token = "0x200055C")]
	internal enum ELocale
	{
		[Token(Token = "0x4002526")]
		k_ELocaleUS,
		[Token(Token = "0x4002527")]
		k_ELocaleDE,
		[Token(Token = "0x4002528")]
		k_ELocaleJP,
		[Token(Token = "0x4002529")]
		k_ELocaleKR,
		[Token(Token = "0x400252A")]
		k_ELocaleRU,
		[Token(Token = "0x400252B")]
		k_ELocaleCN,
		[Token(Token = "0x400252C")]
		k_ELocaleTW,
		[Token(Token = "0x400252D")]
		k_ELocaleFR
	}
	[Token(Token = "0x200055D")]
	internal enum EAchievementDisplayAttribute
	{
		[Token(Token = "0x400252F")]
		k_EAchievementDisplayAttributeName,
		[Token(Token = "0x4002530")]
		k_EAchievementDisplayAttributeDesc,
		[Token(Token = "0x4002531")]
		k_EAchievementDisplayAttributeHidden
	}
	[Token(Token = "0x200055E")]
	internal struct LeaderboardEntry_t
	{
		[Token(Token = "0x4002532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal int m_nGlobalRank;

		[Token(Token = "0x4002533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal int m_nScore;

		[Token(Token = "0x4002534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal string m_pUserName;
	}
	[Token(Token = "0x200055F")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x918CD4", Offset = "0x918CD4")]
	internal delegate void IAPurchaseCallback(int code, string message);
	[Token(Token = "0x2000560")]
	internal struct IAPCurrency_t
	{
		[Token(Token = "0x4002535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal string m_pName;

		[Token(Token = "0x4002536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal string m_pSymbol;
	}
	[Token(Token = "0x2000561")]
	internal class Api
	{
		[Token(Token = "0x2000562")]
		internal class AndroidLicenseChecker : AndroidJavaProxy
		{
			[Token(Token = "0x4002537")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Viveport.Api.LicenseChecker checker;

			[Token(Token = "0x6002474")]
			[Address(RVA = "0xBDB370", Offset = "0xBDB370", VA = "0xBDB370")]
			internal AndroidLicenseChecker(Viveport.Api.LicenseChecker checker)
			{
			}

			[Token(Token = "0x6002475")]
			[Address(RVA = "0xBDB400", Offset = "0xBDB400", VA = "0xBDB400")]
			internal void onSuccess(long issueTime, long expirationTime, int latestVersion, bool updateRequired)
			{
			}

			[Token(Token = "0x6002476")]
			[Address(RVA = "0xBDB518", Offset = "0xBDB518", VA = "0xBDB518")]
			internal void onFailure(int errorCode, string errorMessage)
			{
			}
		}

		[Token(Token = "0x600246F")]
		[Address(RVA = "0xC17110", Offset = "0xC17110", VA = "0xC17110")]
		internal static int Init(StatusCallback callback, string pchAppKey)
		{
			return default(int);
		}

		[Token(Token = "0x6002470")]
		[Address(RVA = "0xC17414", Offset = "0xC17414", VA = "0xC17414")]
		internal static int Shutdown(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x6002471")]
		[Address(RVA = "0xC175E4", Offset = "0xC175E4", VA = "0xC175E4")]
		internal static string Version()
		{
			return null;
		}

		[Token(Token = "0x6002472")]
		[Address(RVA = "0xC16DD4", Offset = "0xC16DD4", VA = "0xC16DD4")]
		internal static void GetLicense(Viveport.Api.LicenseChecker checker, string appId, string appKey)
		{
		}

		[Token(Token = "0x6002473")]
		[Address(RVA = "0xC178F0", Offset = "0xC178F0", VA = "0xC178F0")]
		public Api()
		{
		}
	}
	[Token(Token = "0x2000563")]
	internal class User
	{
		[Token(Token = "0x6002477")]
		[Address(RVA = "0xED6F28", Offset = "0xED6F28", VA = "0xED6F28")]
		internal static int IsReady(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x6002478")]
		[Address(RVA = "0xED7098", Offset = "0xED7098", VA = "0xED7098")]
		internal static string GetUserId()
		{
			return null;
		}

		[Token(Token = "0x6002479")]
		[Address(RVA = "0xED71B0", Offset = "0xED71B0", VA = "0xED71B0")]
		internal static string GetUserName()
		{
			return null;
		}

		[Token(Token = "0x600247A")]
		[Address(RVA = "0xED72C8", Offset = "0xED72C8", VA = "0xED72C8")]
		internal static string GetUserAvatarUrl()
		{
			return null;
		}

		[Token(Token = "0x600247B")]
		[Address(RVA = "0xED73C4", Offset = "0xED73C4", VA = "0xED73C4")]
		public User()
		{
		}
	}
	[Token(Token = "0x2000564")]
	internal class UserStats
	{
		[Token(Token = "0x600247C")]
		[Address(RVA = "0x13C79F0", Offset = "0x13C79F0", VA = "0x13C79F0")]
		internal static int IsReady(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x600247D")]
		[Address(RVA = "0x13C7CD8", Offset = "0x13C7CD8", VA = "0x13C7CD8")]
		internal static int DownloadStats(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x600247E")]
		[Address(RVA = "0x13C8510", Offset = "0x13C8510", VA = "0x13C8510")]
		internal static int UploadStats(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x600247F")]
		[Address(RVA = "0x13C80D0", Offset = "0x13C80D0", VA = "0x13C80D0")]
		internal static int SetStat(string pchName, int nData)
		{
			return default(int);
		}

		[Token(Token = "0x6002480")]
		[Address(RVA = "0x13C8220", Offset = "0x13C8220", VA = "0x13C8220")]
		internal static int SetStat(string pchName, float fData)
		{
			return default(int);
		}

		[Token(Token = "0x6002481")]
		[Address(RVA = "0x13C7E28", Offset = "0x13C7E28", VA = "0x13C7E28")]
		internal static int GetStat(string pchName, int nData)
		{
			return default(int);
		}

		[Token(Token = "0x6002482")]
		[Address(RVA = "0x13C7F78", Offset = "0x13C7F78", VA = "0x13C7F78")]
		internal static float GetStat(string pchName, float fData)
		{
			return default(float);
		}

		[Token(Token = "0x6002483")]
		[Address(RVA = "0x13C8660", Offset = "0x13C8660", VA = "0x13C8660")]
		internal static bool GetAchievement(string pchName)
		{
			return default(bool);
		}

		[Token(Token = "0x6002484")]
		[Address(RVA = "0x13C8750", Offset = "0x13C8750", VA = "0x13C8750")]
		internal static int GetAchievementUnlockTime(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x6002485")]
		[Address(RVA = "0x13C8C10", Offset = "0x13C8C10", VA = "0x13C8C10")]
		internal static int SetAchievement(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x6002486")]
		[Address(RVA = "0x13C8D00", Offset = "0x13C8D00", VA = "0x13C8D00")]
		internal static int ClearAchievement(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x6002487")]
		[Address(RVA = "0x13C8930", Offset = "0x13C8930", VA = "0x13C8930")]
		internal static string GetAchievementDisplayAttribute(string pchName, EAchievementDisplayAttribute attr)
		{
			return null;
		}

		[Token(Token = "0x6002488")]
		[Address(RVA = "0x13C8A80", Offset = "0x13C8A80", VA = "0x13C8A80")]
		internal static string GetAchievementDisplayAttribute(string pchName, EAchievementDisplayAttribute attr, ELocale locale)
		{
			return null;
		}

		[Token(Token = "0x6002489")]
		[Address(RVA = "0x13C8840", Offset = "0x13C8840", VA = "0x13C8840")]
		internal static string GetAchievementIcon(string pchName)
		{
			return null;
		}

		[Token(Token = "0x600248A")]
		[Address(RVA = "0x13C8FC8", Offset = "0x13C8FC8", VA = "0x13C8FC8")]
		internal static int DownloadLeaderboardScores(StatusCallback callback, string pchLeaderboardName, ELeaderboardDataRequest nDataRequest, ELeaderboardDataTimeRange nTimeRange, int nRangeStart, int nRangeEnd)
		{
			return default(int);
		}

		[Token(Token = "0x600248B")]
		[Address(RVA = "0x13C942C", Offset = "0x13C942C", VA = "0x13C942C")]
		internal static int UploadLeaderboardScore(StatusCallback callback, string pchLeaderboardName, int nScores)
		{
			return default(int);
		}

		[Token(Token = "0x600248C")]
		[Address(RVA = "0x13C9610", Offset = "0x13C9610", VA = "0x13C9610")]
		internal static Leaderboard GetLeaderboardScore(int nIndex)
		{
			return null;
		}

		[Token(Token = "0x600248D")]
		[Address(RVA = "0x13C98A4", Offset = "0x13C98A4", VA = "0x13C98A4")]
		internal static int GetLeaderboardScoreCount()
		{
			return default(int);
		}

		[Token(Token = "0x600248E")]
		[Address(RVA = "0x13C99BC", Offset = "0x13C99BC", VA = "0x13C99BC")]
		internal static ELeaderboardSortMethod GetLeaderboardSortMethod()
		{
			return default(ELeaderboardSortMethod);
		}

		[Token(Token = "0x600248F")]
		[Address(RVA = "0x13C9AD4", Offset = "0x13C9AD4", VA = "0x13C9AD4")]
		internal static ELeaderboardDisplayType GetLeaderboardDisplayType()
		{
			return default(ELeaderboardDisplayType);
		}

		[Token(Token = "0x6002490")]
		[Address(RVA = "0x13C9BF0", Offset = "0x13C9BF0", VA = "0x13C9BF0")]
		public UserStats()
		{
		}
	}
	[Token(Token = "0x2000565")]
	internal class Deeplink
	{
		[Token(Token = "0x2000566")]
		internal class AndroidDeeplinkChecker : AndroidJavaProxy
		{
			[Token(Token = "0x4002538")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Viveport.Deeplink.DeeplinkChecker checker;

			[Token(Token = "0x6002497")]
			[Address(RVA = "0xBE66D0", Offset = "0xBE66D0", VA = "0xBE66D0")]
			internal AndroidDeeplinkChecker(Viveport.Deeplink.DeeplinkChecker checker)
			{
			}

			[Token(Token = "0x6002498")]
			[Address(RVA = "0xBE6760", Offset = "0xBE6760", VA = "0xBE6760")]
			internal void onSuccess()
			{
			}

			[Token(Token = "0x6002499")]
			[Address(RVA = "0xBE67F8", Offset = "0xBE67F8", VA = "0xBE67F8")]
			internal void onFailure(int errorCode, string errorMessage)
			{
			}
		}

		[Token(Token = "0x6002491")]
		[Address(RVA = "0xD92554", Offset = "0xD92554", VA = "0xD92554")]
		internal static void IsReady(StatusCallback callback)
		{
		}

		[Token(Token = "0x6002492")]
		[Address(RVA = "0xD926F0", Offset = "0xD926F0", VA = "0xD926F0")]
		internal static void GoToApp(Viveport.Deeplink.DeeplinkChecker checker, string appId, string launchData)
		{
		}

		[Token(Token = "0x6002493")]
		[Address(RVA = "0xD92978", Offset = "0xD92978", VA = "0xD92978")]
		internal static void GoToStore(Viveport.Deeplink.DeeplinkChecker checker, string appId)
		{
		}

		[Token(Token = "0x6002494")]
		[Address(RVA = "0xD92B78", Offset = "0xD92B78", VA = "0xD92B78")]
		internal static void GoToAppOrGoToStore(Viveport.Deeplink.DeeplinkChecker checker, string appId, string launchData)
		{
		}

		[Token(Token = "0x6002495")]
		[Address(RVA = "0xD92D14", Offset = "0xD92D14", VA = "0xD92D14")]
		internal static string GetAppLaunchData()
		{
			return null;
		}

		[Token(Token = "0x6002496")]
		[Address(RVA = "0xD92E10", Offset = "0xD92E10", VA = "0xD92E10")]
		public Deeplink()
		{
		}
	}
	[Token(Token = "0x2000567")]
	internal class IAPurchase
	{
		[Token(Token = "0x600249A")]
		[Address(RVA = "0x13A7BA8", Offset = "0x13A7BA8", VA = "0x13A7BA8")]
		internal static void IsReady(IAPurchaseCallback callback, string pchAppKey)
		{
		}

		[Token(Token = "0x600249B")]
		[Address(RVA = "0x13A7DF4", Offset = "0x13A7DF4", VA = "0x13A7DF4")]
		internal static void Request(IAPurchaseCallback callback, string pchPrice)
		{
		}

		[Token(Token = "0x600249C")]
		[Address(RVA = "0x13A8048", Offset = "0x13A8048", VA = "0x13A8048")]
		internal static void Request(IAPurchaseCallback callback, string pchPrice, string pchUserData)
		{
		}

		[Token(Token = "0x600249D")]
		[Address(RVA = "0x13A82C0", Offset = "0x13A82C0", VA = "0x13A82C0")]
		internal static void Purchase(IAPurchaseCallback callback, string pchPurchaseId)
		{
		}

		[Token(Token = "0x600249E")]
		[Address(RVA = "0x13A850C", Offset = "0x13A850C", VA = "0x13A850C")]
		internal static void Query(IAPurchaseCallback callback, string pchPurchaseId)
		{
		}

		[Token(Token = "0x600249F")]
		[Address(RVA = "0x13A8748", Offset = "0x13A8748", VA = "0x13A8748")]
		internal static void Query(IAPurchaseCallback callback)
		{
		}

		[Token(Token = "0x60024A0")]
		[Address(RVA = "0x13A8950", Offset = "0x13A8950", VA = "0x13A8950")]
		internal static void GetBalance(IAPurchaseCallback callback)
		{
		}

		[Token(Token = "0x60024A1")]
		[Address(RVA = "0x13A8BB0", Offset = "0x13A8BB0", VA = "0x13A8BB0")]
		internal static void RequestSubscription(IAPurchaseCallback callback, string pchPrice, string pchFreeTrialType, int nFreeTrialValue, string pchChargePeriodType, int nChargePeriodValue, int nNumberOfChargePeriod, string pchPlanId)
		{
		}

		[Token(Token = "0x60024A2")]
		[Address(RVA = "0x13A8F74", Offset = "0x13A8F74", VA = "0x13A8F74")]
		internal static void RequestSubscriptionWithPlanID(IAPurchaseCallback callback, string pchPlanId)
		{
		}

		[Token(Token = "0x60024A3")]
		[Address(RVA = "0x13A91C0", Offset = "0x13A91C0", VA = "0x13A91C0")]
		internal static void Subscribe(IAPurchaseCallback callback, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x60024A4")]
		[Address(RVA = "0x13A940C", Offset = "0x13A940C", VA = "0x13A940C")]
		internal static void QuerySubscription(IAPurchaseCallback callback, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x60024A5")]
		[Address(RVA = "0x13A9648", Offset = "0x13A9648", VA = "0x13A9648")]
		internal static void QuerySubscriptionList(IAPurchaseCallback callback)
		{
		}

		[Token(Token = "0x60024A6")]
		[Address(RVA = "0x13A9860", Offset = "0x13A9860", VA = "0x13A9860")]
		internal static void CancelSubscription(IAPurchaseCallback callback, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x60024A7")]
		[Address(RVA = "0x13A99D4", Offset = "0x13A99D4", VA = "0x13A99D4")]
		public IAPurchase()
		{
		}
	}
	[Token(Token = "0x2000568")]
	internal class Subscription
	{
		[Token(Token = "0x60024A8")]
		[Address(RVA = "0x10EB8C0", Offset = "0x10EB8C0", VA = "0x10EB8C0")]
		internal static int IsReady(StatusCallback2 callback)
		{
			return default(int);
		}

		[Token(Token = "0x60024A9")]
		[Address(RVA = "0x10EBB88", Offset = "0x10EBB88", VA = "0x10EBB88")]
		internal static bool IsWindowsSubscriber()
		{
			return default(bool);
		}

		[Token(Token = "0x60024AA")]
		[Address(RVA = "0x10EBC9C", Offset = "0x10EBC9C", VA = "0x10EBC9C")]
		internal static bool IsAndroidSubscriber()
		{
			return default(bool);
		}

		[Token(Token = "0x60024AB")]
		[Address(RVA = "0x10EBDB0", Offset = "0x10EBDB0", VA = "0x10EBDB0")]
		internal static ESubscriptionTransactionType GetTransactionType()
		{
			return default(ESubscriptionTransactionType);
		}

		[Token(Token = "0x60024AC")]
		[Address(RVA = "0x10EBFA0", Offset = "0x10EBFA0", VA = "0x10EBFA0")]
		public Subscription()
		{
		}
	}
	[Token(Token = "0x2000569")]
	internal class Token
	{
		[Token(Token = "0x60024AD")]
		[Address(RVA = "0xF10B08", Offset = "0xF10B08", VA = "0xF10B08")]
		internal static int IsReady(StatusCallback IsReadyCallback)
		{
			return default(int);
		}

		[Token(Token = "0x60024AE")]
		[Address(RVA = "0xF10DE4", Offset = "0xF10DE4", VA = "0xF10DE4")]
		internal static int GetSessionToken(StatusCallback2 GetSessionTokenCallback)
		{
			return default(int);
		}

		[Token(Token = "0x60024AF")]
		[Address(RVA = "0xF10F2C", Offset = "0xF10F2C", VA = "0xF10F2C")]
		public Token()
		{
		}
	}
	[Token(Token = "0x200056A")]
	internal class Android
	{
		[Token(Token = "0x4002539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AndroidJavaObject _api;

		[Token(Token = "0x400253A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static AndroidJavaObject _iAPurchase;

		[Token(Token = "0x400253B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static AndroidJavaClass _unityPlayer;

		[Token(Token = "0x400253C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static AndroidJavaObject _user;

		[Token(Token = "0x400253D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static AndroidJavaObject _userStats;

		[Token(Token = "0x400253E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static AndroidJavaObject _subscription;

		[Token(Token = "0x400253F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static AndroidJavaObject _sessionToken;

		[Token(Token = "0x4002540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static AndroidJavaObject _deeplink;

		[Token(Token = "0x17000231")]
		internal static AndroidJavaClass UnityPlayer
		{
			[Token(Token = "0x60024B7")]
			[Address(RVA = "0x18479EC", Offset = "0x18479EC", VA = "0x18479EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000232")]
		internal static AndroidJavaObject CurrentActivity
		{
			[Token(Token = "0x60024B8")]
			[Address(RVA = "0x1847A90", Offset = "0x1847A90", VA = "0x1847A90")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000233")]
		internal static AndroidJavaObject CurrentContext
		{
			[Token(Token = "0x60024B9")]
			[Address(RVA = "0x1847AF8", Offset = "0x1847AF8", VA = "0x1847AF8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024B0")]
		[Address(RVA = "0x18470F0", Offset = "0x18470F0", VA = "0x18470F0")]
		internal static AndroidJavaObject GetJavaAPI()
		{
			return null;
		}

		[Token(Token = "0x60024B1")]
		[Address(RVA = "0x184723C", Offset = "0x184723C", VA = "0x184723C")]
		internal static AndroidJavaObject GetJavaUser()
		{
			return null;
		}

		[Token(Token = "0x60024B2")]
		[Address(RVA = "0x1847384", Offset = "0x1847384", VA = "0x1847384")]
		internal static AndroidJavaObject GetJavaUserStats()
		{
			return null;
		}

		[Token(Token = "0x60024B3")]
		[Address(RVA = "0x18474CC", Offset = "0x18474CC", VA = "0x18474CC")]
		internal static AndroidJavaObject GetJavaIAPurchase()
		{
			return null;
		}

		[Token(Token = "0x60024B4")]
		[Address(RVA = "0x1847614", Offset = "0x1847614", VA = "0x1847614")]
		internal static AndroidJavaObject GetJavaSubscription()
		{
			return null;
		}

		[Token(Token = "0x60024B5")]
		[Address(RVA = "0x184775C", Offset = "0x184775C", VA = "0x184775C")]
		internal static AndroidJavaObject GetJavaSessionToken()
		{
			return null;
		}

		[Token(Token = "0x60024B6")]
		[Address(RVA = "0x18478A4", Offset = "0x18478A4", VA = "0x18478A4")]
		internal static AndroidJavaObject GetDeeplink()
		{
			return null;
		}

		[Token(Token = "0x60024BA")]
		[Address(RVA = "0x1847AFC", Offset = "0x1847AFC", VA = "0x1847AFC")]
		public Android()
		{
		}
	}
	[Token(Token = "0x200056B")]
	internal class AndroidPluginCallback : AndroidJavaProxy
	{
		[Token(Token = "0x4002541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IAPurchaseCallback callback;

		[Token(Token = "0x4002542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private StatusCallback statusCallback;

		[Token(Token = "0x4002543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private StatusCallback2 statusCallback2;

		[Token(Token = "0x60024BB")]
		[Address(RVA = "0x184B9EC", Offset = "0x184B9EC", VA = "0x184B9EC")]
		internal AndroidPluginCallback(IAPurchaseCallback callback)
		{
		}

		[Token(Token = "0x60024BC")]
		[Address(RVA = "0x184BA7C", Offset = "0x184BA7C", VA = "0x184BA7C")]
		internal AndroidPluginCallback(StatusCallback callback)
		{
		}

		[Token(Token = "0x60024BD")]
		[Address(RVA = "0x184BB0C", Offset = "0x184BB0C", VA = "0x184BB0C")]
		internal AndroidPluginCallback(StatusCallback2 callback)
		{
		}

		[Token(Token = "0x60024BE")]
		[Address(RVA = "0x184BB9C", Offset = "0x184BB9C", VA = "0x184BB9C")]
		internal void onResult(int statusCode, string result)
		{
		}
	}
}
namespace Viveport.Arcade
{
	[Token(Token = "0x200056C")]
	internal class Session
	{
		[Token(Token = "0x60024BF")]
		[Address(RVA = "0x10A567C", Offset = "0x10A567C", VA = "0x10A567C")]
		public Session()
		{
		}
	}
}
namespace Viveport.Core
{
	[Token(Token = "0x200056D")]
	public class Logger
	{
		[Token(Token = "0x4002544")]
		private const string LoggerTypeNameUnity = "UnityEngine.Debug";

		[Token(Token = "0x4002545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool _hasDetected;

		[Token(Token = "0x4002546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		private static bool _usingUnityLog;

		[Token(Token = "0x4002547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Type _unityLogType;

		[Token(Token = "0x60024C0")]
		[Address(RVA = "0x1140078", Offset = "0x1140078", VA = "0x1140078")]
		public static void Log(string message)
		{
		}

		[Token(Token = "0x60024C1")]
		[Address(RVA = "0x11404F0", Offset = "0x11404F0", VA = "0x11404F0")]
		private static void ConsoleLog(string message)
		{
		}

		[Token(Token = "0x60024C2")]
		[Address(RVA = "0x1140144", Offset = "0x1140144", VA = "0x1140144")]
		private static void UnityLog(string message)
		{
		}

		[Token(Token = "0x60024C3")]
		[Address(RVA = "0x1140594", Offset = "0x1140594", VA = "0x1140594")]
		private static Type GetType(string typeName)
		{
			return null;
		}

		[Token(Token = "0x60024C4")]
		[Address(RVA = "0x11406FC", Offset = "0x11406FC", VA = "0x11406FC")]
		public Logger()
		{
		}
	}
}
namespace LitJson
{
	[Token(Token = "0x200056E")]
	public enum JsonType
	{
		[Token(Token = "0x4002549")]
		None,
		[Token(Token = "0x400254A")]
		Object,
		[Token(Token = "0x400254B")]
		Array,
		[Token(Token = "0x400254C")]
		String,
		[Token(Token = "0x400254D")]
		Int,
		[Token(Token = "0x400254E")]
		Long,
		[Token(Token = "0x400254F")]
		Double,
		[Token(Token = "0x4002550")]
		Boolean
	}
	[Token(Token = "0x200056F")]
	public interface IJsonWrapper : IList, ICollection, IEnumerable, IOrderedDictionary, IDictionary
	{
		[Token(Token = "0x17000234")]
		bool IsArray
		{
			[Token(Token = "0x60024C6")]
			get;
		}

		[Token(Token = "0x17000235")]
		bool IsBoolean
		{
			[Token(Token = "0x60024C7")]
			get;
		}

		[Token(Token = "0x17000236")]
		bool IsDouble
		{
			[Token(Token = "0x60024C8")]
			get;
		}

		[Token(Token = "0x17000237")]
		bool IsInt
		{
			[Token(Token = "0x60024C9")]
			get;
		}

		[Token(Token = "0x17000238")]
		bool IsLong
		{
			[Token(Token = "0x60024CA")]
			get;
		}

		[Token(Token = "0x17000239")]
		bool IsObject
		{
			[Token(Token = "0x60024CB")]
			get;
		}

		[Token(Token = "0x1700023A")]
		bool IsString
		{
			[Token(Token = "0x60024CC")]
			get;
		}

		[Token(Token = "0x60024CD")]
		bool GetBoolean();

		[Token(Token = "0x60024CE")]
		double GetDouble();

		[Token(Token = "0x60024CF")]
		int GetInt();

		[Token(Token = "0x60024D0")]
		JsonType GetJsonType();

		[Token(Token = "0x60024D1")]
		long GetLong();

		[Token(Token = "0x60024D2")]
		string GetString();

		[Token(Token = "0x60024D3")]
		void SetBoolean(bool val);

		[Token(Token = "0x60024D4")]
		void SetDouble(double val);

		[Token(Token = "0x60024D5")]
		void SetInt(int val);

		[Token(Token = "0x60024D6")]
		void SetJsonType(JsonType type);

		[Token(Token = "0x60024D7")]
		void SetLong(long val);

		[Token(Token = "0x60024D8")]
		void SetString(string val);

		[Token(Token = "0x60024D9")]
		string ToJson();

		[Token(Token = "0x60024DA")]
		void ToJson(JsonWriter writer);
	}
	[Token(Token = "0x2000570")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x918CE8", Offset = "0x918CE8")]
	public class JsonData : IJsonWrapper, IList, ICollection, IEnumerable, IOrderedDictionary, IDictionary, IEquatable<JsonData>
	{
		[Token(Token = "0x4002551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IList<JsonData> inst_array;

		[Token(Token = "0x4002552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inst_boolean;

		[Token(Token = "0x4002553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private double inst_double;

		[Token(Token = "0x4002554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int inst_int;

		[Token(Token = "0x4002555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private long inst_long;

		[Token(Token = "0x4002556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private IDictionary<string, JsonData> inst_object;

		[Token(Token = "0x4002557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string inst_string;

		[Token(Token = "0x4002558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string json;

		[Token(Token = "0x4002559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private JsonType type;

		[Token(Token = "0x400255A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private IList<KeyValuePair<string, JsonData>> object_list;

		[Token(Token = "0x1700023B")]
		public int Count
		{
			[Token(Token = "0x60024DB")]
			[Address(RVA = "0x17DDCF0", Offset = "0x17DDCF0", VA = "0x17DDCF0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700023C")]
		public bool IsArray
		{
			[Token(Token = "0x60024DC")]
			[Address(RVA = "0x17DDE7C", Offset = "0x17DDE7C", VA = "0x17DDE7C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700023D")]
		public bool IsBoolean
		{
			[Token(Token = "0x60024DD")]
			[Address(RVA = "0x17DDE8C", Offset = "0x17DDE8C", VA = "0x17DDE8C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700023E")]
		public bool IsDouble
		{
			[Token(Token = "0x60024DE")]
			[Address(RVA = "0x17DDE9C", Offset = "0x17DDE9C", VA = "0x17DDE9C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700023F")]
		public bool IsInt
		{
			[Token(Token = "0x60024DF")]
			[Address(RVA = "0x17DDEAC", Offset = "0x17DDEAC", VA = "0x17DDEAC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000240")]
		public bool IsLong
		{
			[Token(Token = "0x60024E0")]
			[Address(RVA = "0x17DDEBC", Offset = "0x17DDEBC", VA = "0x17DDEBC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000241")]
		public bool IsObject
		{
			[Token(Token = "0x60024E1")]
			[Address(RVA = "0x17DDECC", Offset = "0x17DDECC", VA = "0x17DDECC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000242")]
		public bool IsString
		{
			[Token(Token = "0x60024E2")]
			[Address(RVA = "0x17DDEDC", Offset = "0x17DDEDC", VA = "0x17DDEDC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000243")]
		private int System.Collections.ICollection.Count
		{
			[Token(Token = "0x60024E3")]
			[Address(RVA = "0x17DDEEC", Offset = "0x17DDEEC", VA = "0x17DDEEC", Slot = "37")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000244")]
		private bool System.Collections.ICollection.IsSynchronized
		{
			[Token(Token = "0x60024E4")]
			[Address(RVA = "0x17DDEF0", Offset = "0x17DDEF0", VA = "0x17DDEF0", Slot = "39")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000245")]
		private object System.Collections.ICollection.SyncRoot
		{
			[Token(Token = "0x60024E5")]
			[Address(RVA = "0x17DDFA8", Offset = "0x17DDFA8", VA = "0x17DDFA8", Slot = "38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000246")]
		private bool System.Collections.IDictionary.IsFixedSize
		{
			[Token(Token = "0x60024E6")]
			[Address(RVA = "0x17DE060", Offset = "0x17DE060", VA = "0x17DE060", Slot = "54")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000247")]
		private bool System.Collections.IDictionary.IsReadOnly
		{
			[Token(Token = "0x60024E7")]
			[Address(RVA = "0x17DE2A0", Offset = "0x17DE2A0", VA = "0x17DE2A0", Slot = "53")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000248")]
		private ICollection System.Collections.IDictionary.Keys
		{
			[Token(Token = "0x60024E8")]
			[Address(RVA = "0x17DE358", Offset = "0x17DE358", VA = "0x17DE358", Slot = "48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000249")]
		private ICollection System.Collections.IDictionary.Values
		{
			[Token(Token = "0x60024E9")]
			[Address(RVA = "0x17DE720", Offset = "0x17DE720", VA = "0x17DE720", Slot = "49")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024A")]
		private bool LitJson.IJsonWrapper.IsArray
		{
			[Token(Token = "0x60024EA")]
			[Address(RVA = "0x17DEAE8", Offset = "0x17DEAE8", VA = "0x17DEAE8", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700024B")]
		private bool LitJson.IJsonWrapper.IsBoolean
		{
			[Token(Token = "0x60024EB")]
			[Address(RVA = "0x17DEAF8", Offset = "0x17DEAF8", VA = "0x17DEAF8", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700024C")]
		private bool LitJson.IJsonWrapper.IsDouble
		{
			[Token(Token = "0x60024EC")]
			[Address(RVA = "0x17DEB08", Offset = "0x17DEB08", VA = "0x17DEB08", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700024D")]
		private bool LitJson.IJsonWrapper.IsInt
		{
			[Token(Token = "0x60024ED")]
			[Address(RVA = "0x17DEB18", Offset = "0x17DEB18", VA = "0x17DEB18", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700024E")]
		private bool LitJson.IJsonWrapper.IsLong
		{
			[Token(Token = "0x60024EE")]
			[Address(RVA = "0x17DEB28", Offset = "0x17DEB28", VA = "0x17DEB28", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700024F")]
		private bool LitJson.IJsonWrapper.IsObject
		{
			[Token(Token = "0x60024EF")]
			[Address(RVA = "0x17DEB38", Offset = "0x17DEB38", VA = "0x17DEB38", Slot = "9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000250")]
		private bool LitJson.IJsonWrapper.IsString
		{
			[Token(Token = "0x60024F0")]
			[Address(RVA = "0x17DEB48", Offset = "0x17DEB48", VA = "0x17DEB48", Slot = "10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000251")]
		private bool System.Collections.IList.IsFixedSize
		{
			[Token(Token = "0x60024F1")]
			[Address(RVA = "0x17DEB58", Offset = "0x17DEB58", VA = "0x17DEB58", Slot = "31")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000252")]
		private bool System.Collections.IList.IsReadOnly
		{
			[Token(Token = "0x60024F2")]
			[Address(RVA = "0x17DED4C", Offset = "0x17DED4C", VA = "0x17DED4C", Slot = "30")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000253")]
		private object System.Collections.IDictionary.Item
		{
			[Token(Token = "0x60024F3")]
			[Address(RVA = "0x17DEE04", Offset = "0x17DEE04", VA = "0x17DEE04", Slot = "46")]
			get
			{
				return null;
			}
			[Token(Token = "0x60024F4")]
			[Address(RVA = "0x17DEEC8", Offset = "0x17DEEC8", VA = "0x17DEEC8", Slot = "47")]
			set
			{
			}
		}

		[Token(Token = "0x17000254")]
		private object System.Collections.Specialized.IOrderedDictionary.Item
		{
			[Token(Token = "0x60024F5")]
			[Address(RVA = "0x17DF404", Offset = "0x17DF404", VA = "0x17DF404", Slot = "41")]
			get
			{
				return null;
			}
			[Token(Token = "0x60024F6")]
			[Address(RVA = "0x17DF4DC", Offset = "0x17DF4DC", VA = "0x17DF4DC", Slot = "42")]
			set
			{
			}
		}

		[Token(Token = "0x17000255")]
		private object System.Collections.IList.Item
		{
			[Token(Token = "0x60024F7")]
			[Address(RVA = "0x17DF704", Offset = "0x17DF704", VA = "0x17DF704", Slot = "25")]
			get
			{
				return null;
			}
			[Token(Token = "0x60024F8")]
			[Address(RVA = "0x17DF7C8", Offset = "0x17DF7C8", VA = "0x17DF7C8", Slot = "26")]
			set
			{
			}
		}

		[Token(Token = "0x17000256")]
		public JsonData Item
		{
			[Token(Token = "0x60024F9")]
			[Address(RVA = "0x17DFACC", Offset = "0x17DFACC", VA = "0x17DFACC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60024FA")]
			[Address(RVA = "0x17DF03C", Offset = "0x17DF03C", VA = "0x17DF03C")]
			set
			{
			}
		}

		[Token(Token = "0x17000257")]
		public JsonData Item
		{
			[Token(Token = "0x60024FB")]
			[Address(RVA = "0x17DFB90", Offset = "0x17DFB90", VA = "0x17DFB90")]
			get
			{
				return null;
			}
			[Token(Token = "0x60024FC")]
			[Address(RVA = "0x17DF80C", Offset = "0x17DF80C", VA = "0x17DF80C")]
			set
			{
			}
		}

		[Token(Token = "0x60024FD")]
		[Address(RVA = "0x17DFD00", Offset = "0x17DFD00", VA = "0x17DFD00")]
		public JsonData()
		{
		}

		[Token(Token = "0x60024FE")]
		[Address(RVA = "0x17DFD08", Offset = "0x17DFD08", VA = "0x17DFD08")]
		public JsonData(bool boolean)
		{
		}

		[Token(Token = "0x60024FF")]
		[Address(RVA = "0x17DFD40", Offset = "0x17DFD40", VA = "0x17DFD40")]
		public JsonData(double number)
		{
		}

		[Token(Token = "0x6002500")]
		[Address(RVA = "0x17DFD7C", Offset = "0x17DFD7C", VA = "0x17DFD7C")]
		public JsonData(int number)
		{
		}

		[Token(Token = "0x6002501")]
		[Address(RVA = "0x17DFDB0", Offset = "0x17DFDB0", VA = "0x17DFDB0")]
		public JsonData(long number)
		{
		}

		[Token(Token = "0x6002502")]
		[Address(RVA = "0x17DFDE4", Offset = "0x17DFDE4", VA = "0x17DFDE4")]
		public JsonData(object obj)
		{
		}

		[Token(Token = "0x6002503")]
		[Address(RVA = "0x17E0004", Offset = "0x17E0004", VA = "0x17E0004")]
		public JsonData(string str)
		{
		}

		[Token(Token = "0x6002504")]
		[Address(RVA = "0x17E0038", Offset = "0x17E0038", VA = "0x17E0038")]
		public static implicit operator JsonData(bool data)
		{
			return null;
		}

		[Token(Token = "0x6002505")]
		[Address(RVA = "0x17E00A4", Offset = "0x17E00A4", VA = "0x17E00A4")]
		public static implicit operator JsonData(double data)
		{
			return null;
		}

		[Token(Token = "0x6002506")]
		[Address(RVA = "0x17E0114", Offset = "0x17E0114", VA = "0x17E0114")]
		public static implicit operator JsonData(int data)
		{
			return null;
		}

		[Token(Token = "0x6002507")]
		[Address(RVA = "0x17E017C", Offset = "0x17E017C", VA = "0x17E017C")]
		public static implicit operator JsonData(long data)
		{
			return null;
		}

		[Token(Token = "0x6002508")]
		[Address(RVA = "0x17E01E4", Offset = "0x17E01E4", VA = "0x17E01E4")]
		public static implicit operator JsonData(string data)
		{
			return null;
		}

		[Token(Token = "0x6002509")]
		[Address(RVA = "0x17E024C", Offset = "0x17E024C", VA = "0x17E024C")]
		public static explicit operator bool(JsonData data)
		{
			return default(bool);
		}

		[Token(Token = "0x600250A")]
		[Address(RVA = "0x17E02C4", Offset = "0x17E02C4", VA = "0x17E02C4")]
		public static explicit operator double(JsonData data)
		{
			return default(double);
		}

		[Token(Token = "0x600250B")]
		[Address(RVA = "0x17E033C", Offset = "0x17E033C", VA = "0x17E033C")]
		public static explicit operator int(JsonData data)
		{
			return default(int);
		}

		[Token(Token = "0x600250C")]
		[Address(RVA = "0x17E03B4", Offset = "0x17E03B4", VA = "0x17E03B4")]
		public static explicit operator long(JsonData data)
		{
			return default(long);
		}

		[Token(Token = "0x600250D")]
		[Address(RVA = "0x17E042C", Offset = "0x17E042C", VA = "0x17E042C")]
		public static explicit operator string(JsonData data)
		{
			return null;
		}

		[Token(Token = "0x600250E")]
		[Address(RVA = "0x17E04A4", Offset = "0x17E04A4", VA = "0x17E04A4", Slot = "36")]
		private void System.Collections.ICollection.CopyTo(Array array, int index)
		{
		}

		[Token(Token = "0x600250F")]
		[Address(RVA = "0x17E0570", Offset = "0x17E0570", VA = "0x17E0570", Slot = "51")]
		private void System.Collections.IDictionary.Add(object key, object value)
		{
		}

		[Token(Token = "0x6002510")]
		[Address(RVA = "0x17E0744", Offset = "0x17E0744", VA = "0x17E0744", Slot = "52")]
		private void System.Collections.IDictionary.Clear()
		{
		}

		[Token(Token = "0x6002511")]
		[Address(RVA = "0x17E0884", Offset = "0x17E0884", VA = "0x17E0884", Slot = "50")]
		private bool System.Collections.IDictionary.Contains(object key)
		{
			return default(bool);
		}

		[Token(Token = "0x6002512")]
		[Address(RVA = "0x17E094C", Offset = "0x17E094C", VA = "0x17E094C", Slot = "55")]
		private IDictionaryEnumerator System.Collections.IDictionary.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6002513")]
		[Address(RVA = "0x17E09F0", Offset = "0x17E09F0", VA = "0x17E09F0", Slot = "56")]
		private void System.Collections.IDictionary.Remove(object key)
		{
		}

		[Token(Token = "0x6002514")]
		[Address(RVA = "0x17E0CA0", Offset = "0x17E0CA0", VA = "0x17E0CA0", Slot = "40")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6002515")]
		[Address(RVA = "0x17E0D54", Offset = "0x17E0D54", VA = "0x17E0D54", Slot = "11")]
		private bool LitJson.IJsonWrapper.GetBoolean()
		{
			return default(bool);
		}

		[Token(Token = "0x6002516")]
		[Address(RVA = "0x17E0DBC", Offset = "0x17E0DBC", VA = "0x17E0DBC", Slot = "12")]
		private double LitJson.IJsonWrapper.GetDouble()
		{
			return default(double);
		}

		[Token(Token = "0x6002517")]
		[Address(RVA = "0x17E0E24", Offset = "0x17E0E24", VA = "0x17E0E24", Slot = "13")]
		private int LitJson.IJsonWrapper.GetInt()
		{
			return default(int);
		}

		[Token(Token = "0x6002518")]
		[Address(RVA = "0x17E0E8C", Offset = "0x17E0E8C", VA = "0x17E0E8C", Slot = "15")]
		private long LitJson.IJsonWrapper.GetLong()
		{
			return default(long);
		}

		[Token(Token = "0x6002519")]
		[Address(RVA = "0x17E0EF4", Offset = "0x17E0EF4", VA = "0x17E0EF4", Slot = "16")]
		private string LitJson.IJsonWrapper.GetString()
		{
			return null;
		}

		[Token(Token = "0x600251A")]
		[Address(RVA = "0x17E0F5C", Offset = "0x17E0F5C", VA = "0x17E0F5C", Slot = "17")]
		private void LitJson.IJsonWrapper.SetBoolean(bool val)
		{
		}

		[Token(Token = "0x600251B")]
		[Address(RVA = "0x17E0F74", Offset = "0x17E0F74", VA = "0x17E0F74", Slot = "18")]
		private void LitJson.IJsonWrapper.SetDouble(double val)
		{
		}

		[Token(Token = "0x600251C")]
		[Address(RVA = "0x17E0F88", Offset = "0x17E0F88", VA = "0x17E0F88", Slot = "19")]
		private void LitJson.IJsonWrapper.SetInt(int val)
		{
		}

		[Token(Token = "0x600251D")]
		[Address(RVA = "0x17E0F9C", Offset = "0x17E0F9C", VA = "0x17E0F9C", Slot = "21")]
		private void LitJson.IJsonWrapper.SetLong(long val)
		{
		}

		[Token(Token = "0x600251E")]
		[Address(RVA = "0x17E0FB0", Offset = "0x17E0FB0", VA = "0x17E0FB0", Slot = "22")]
		private void LitJson.IJsonWrapper.SetString(string val)
		{
		}

		[Token(Token = "0x600251F")]
		[Address(RVA = "0x17E0FC0", Offset = "0x17E0FC0", VA = "0x17E0FC0", Slot = "23")]
		private string LitJson.IJsonWrapper.ToJson()
		{
			return null;
		}

		[Token(Token = "0x6002520")]
		[Address(RVA = "0x17E1084", Offset = "0x17E1084", VA = "0x17E1084", Slot = "24")]
		private void LitJson.IJsonWrapper.ToJson(JsonWriter writer)
		{
		}

		[Token(Token = "0x6002521")]
		[Address(RVA = "0x17E10BC", Offset = "0x17E10BC", VA = "0x17E10BC", Slot = "27")]
		private int System.Collections.IList.Add(object value)
		{
			return default(int);
		}

		[Token(Token = "0x6002522")]
		[Address(RVA = "0x17E1198", Offset = "0x17E1198", VA = "0x17E1198", Slot = "29")]
		private void System.Collections.IList.Clear()
		{
		}

		[Token(Token = "0x6002523")]
		[Address(RVA = "0x17E1258", Offset = "0x17E1258", VA = "0x17E1258", Slot = "28")]
		private bool System.Collections.IList.Contains(object value)
		{
			return default(bool);
		}

		[Token(Token = "0x6002524")]
		[Address(RVA = "0x17E1320", Offset = "0x17E1320", VA = "0x17E1320", Slot = "32")]
		private int System.Collections.IList.IndexOf(object value)
		{
			return default(int);
		}

		[Token(Token = "0x6002525")]
		[Address(RVA = "0x17E13E8", Offset = "0x17E13E8", VA = "0x17E13E8", Slot = "33")]
		private void System.Collections.IList.Insert(int index, object value)
		{
		}

		[Token(Token = "0x6002526")]
		[Address(RVA = "0x17E14C0", Offset = "0x17E14C0", VA = "0x17E14C0", Slot = "34")]
		private void System.Collections.IList.Remove(object value)
		{
		}

		[Token(Token = "0x6002527")]
		[Address(RVA = "0x17E1590", Offset = "0x17E1590", VA = "0x17E1590", Slot = "35")]
		private void System.Collections.IList.RemoveAt(int index)
		{
		}

		[Token(Token = "0x6002528")]
		[Address(RVA = "0x17E1660", Offset = "0x17E1660", VA = "0x17E1660", Slot = "43")]
		private IDictionaryEnumerator System.Collections.Specialized.IOrderedDictionary.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6002529")]
		[Address(RVA = "0x17E1750", Offset = "0x17E1750", VA = "0x17E1750", Slot = "44")]
		private void System.Collections.Specialized.IOrderedDictionary.Insert(int idx, object key, object value)
		{
		}

		[Token(Token = "0x600252A")]
		[Address(RVA = "0x17E18B0", Offset = "0x17E18B0", VA = "0x17E18B0", Slot = "45")]
		private void System.Collections.Specialized.IOrderedDictionary.RemoveAt(int idx)
		{
		}

		[Token(Token = "0x600252B")]
		[Address(RVA = "0x17DDDA8", Offset = "0x17DDDA8", VA = "0x17DDDA8")]
		private ICollection EnsureCollection()
		{
			return null;
		}

		[Token(Token = "0x600252C")]
		[Address(RVA = "0x17DE118", Offset = "0x17DE118", VA = "0x17DE118")]
		private IDictionary EnsureDictionary()
		{
			return null;
		}

		[Token(Token = "0x600252D")]
		[Address(RVA = "0x17DEC10", Offset = "0x17DEC10", VA = "0x17DEC10")]
		private IList EnsureList()
		{
			return null;
		}

		[Token(Token = "0x600252E")]
		[Address(RVA = "0x17DEFA4", Offset = "0x17DEFA4", VA = "0x17DEFA4")]
		private JsonData ToJsonData(object obj)
		{
			return null;
		}

		[Token(Token = "0x600252F")]
		[Address(RVA = "0x17E1A80", Offset = "0x17E1A80", VA = "0x17E1A80")]
		private static void WriteJson(IJsonWrapper obj, JsonWriter writer)
		{
		}

		[Token(Token = "0x6002530")]
		[Address(RVA = "0x17E10C0", Offset = "0x17E10C0", VA = "0x17E10C0")]
		public int Add(object value)
		{
			return default(int);
		}

		[Token(Token = "0x6002531")]
		[Address(RVA = "0x17E2EF8", Offset = "0x17E2EF8", VA = "0x17E2EF8")]
		public void Clear()
		{
		}

		[Token(Token = "0x6002532")]
		[Address(RVA = "0x17E301C", Offset = "0x17E301C", VA = "0x17E301C", Slot = "57")]
		public bool Equals(JsonData x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002533")]
		[Address(RVA = "0x17E3108", Offset = "0x17E3108", VA = "0x17E3108", Slot = "14")]
		public JsonType GetJsonType()
		{
			return default(JsonType);
		}

		[Token(Token = "0x6002534")]
		[Address(RVA = "0x17E3110", Offset = "0x17E3110", VA = "0x17E3110", Slot = "20")]
		public void SetJsonType(JsonType type)
		{
		}

		[Token(Token = "0x6002535")]
		[Address(RVA = "0x17E0FC4", Offset = "0x17E0FC4", VA = "0x17E0FC4")]
		public string ToJson()
		{
			return null;
		}

		[Token(Token = "0x6002536")]
		[Address(RVA = "0x17E1088", Offset = "0x17E1088", VA = "0x17E1088")]
		public void ToJson(JsonWriter writer)
		{
		}

		[Token(Token = "0x6002537")]
		[Address(RVA = "0x17E32E4", Offset = "0x17E32E4", VA = "0x17E32E4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000571")]
	internal class OrderedDictionaryEnumerator : IDictionaryEnumerator, IEnumerator
	{
		[Token(Token = "0x400255B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IEnumerator<KeyValuePair<string, JsonData>> list_enumerator;

		[Token(Token = "0x17000258")]
		public object Current
		{
			[Token(Token = "0x6002538")]
			[Address(RVA = "0xCC1D38", Offset = "0xCC1D38", VA = "0xCC1D38", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000259")]
		public DictionaryEntry Entry
		{
			[Token(Token = "0x6002539")]
			[Address(RVA = "0xCC1DA0", Offset = "0xCC1DA0", VA = "0xCC1DA0", Slot = "6")]
			get
			{
				return default(DictionaryEntry);
			}
		}

		[Token(Token = "0x1700025A")]
		public object Key
		{
			[Token(Token = "0x600253A")]
			[Address(RVA = "0xCC1E94", Offset = "0xCC1E94", VA = "0xCC1E94", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025B")]
		public object Value
		{
			[Token(Token = "0x600253B")]
			[Address(RVA = "0xCC1F4C", Offset = "0xCC1F4C", VA = "0xCC1F4C", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600253C")]
		[Address(RVA = "0xCC200C", Offset = "0xCC200C", VA = "0xCC200C")]
		public OrderedDictionaryEnumerator(IEnumerator<KeyValuePair<string, JsonData>> enumerator)
		{
		}

		[Token(Token = "0x600253D")]
		[Address(RVA = "0xCC2038", Offset = "0xCC2038", VA = "0xCC2038", Slot = "7")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600253E")]
		[Address(RVA = "0xCC20E4", Offset = "0xCC20E4", VA = "0xCC20E4", Slot = "9")]
		public void Reset()
		{
		}
	}
	[Token(Token = "0x2000572")]
	public class JsonException : ApplicationException
	{
		[Token(Token = "0x600253F")]
		[Address(RVA = "0x17E33D8", Offset = "0x17E33D8", VA = "0x17E33D8")]
		public JsonException()
		{
		}

		[Token(Token = "0x6002540")]
		[Address(RVA = "0x17E33E0", Offset = "0x17E33E0", VA = "0x17E33E0")]
		internal JsonException(ParserToken token)
		{
		}

		[Token(Token = "0x6002541")]
		[Address(RVA = "0x17E3478", Offset = "0x17E3478", VA = "0x17E3478")]
		internal JsonException(ParserToken token, Exception inner_exception)
		{
		}

		[Token(Token = "0x6002542")]
		[Address(RVA = "0x17E3520", Offset = "0x17E3520", VA = "0x17E3520")]
		internal JsonException(int c)
		{
		}

		[Token(Token = "0x6002543")]
		[Address(RVA = "0x17E35B8", Offset = "0x17E35B8", VA = "0x17E35B8")]
		internal JsonException(int c, Exception inner_exception)
		{
		}

		[Token(Token = "0x6002544")]
		[Address(RVA = "0x17E3660", Offset = "0x17E3660", VA = "0x17E3660")]
		public JsonException(string message)
		{
		}

		[Token(Token = "0x6002545")]
		[Address(RVA = "0x17E3668", Offset = "0x17E3668", VA = "0x17E3668")]
		public JsonException(string message, Exception inner_exception)
		{
		}
	}
	[Token(Token = "0x2000573")]
	internal struct PropertyMetadata
	{
		[Token(Token = "0x400255C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MemberInfo Info;

		[Token(Token = "0x400255D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool IsField;

		[Token(Token = "0x400255E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Type Type;
	}
	[Token(Token = "0x2000574")]
	internal struct ArrayMetadata
	{
		[Token(Token = "0x400255F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Type element_type;

		[Token(Token = "0x4002560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private bool is_array;

		[Token(Token = "0x4002561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		private bool is_list;

		[Token(Token = "0x1700025C")]
		public Type ElementType
		{
			[Token(Token = "0x6002546")]
			[Address(RVA = "0xC19828", Offset = "0xC19828", VA = "0xC19828")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002547")]
			[Address(RVA = "0xC198F0", Offset = "0xC198F0", VA = "0xC198F0")]
			set
			{
			}
		}

		[Token(Token = "0x1700025D")]
		public bool IsArray
		{
			[Token(Token = "0x6002548")]
			[Address(RVA = "0xC198F8", Offset = "0xC198F8", VA = "0xC198F8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002549")]
			[Address(RVA = "0xC19900", Offset = "0xC19900", VA = "0xC19900")]
			set
			{
			}
		}

		[Token(Token = "0x1700025E")]
		public bool IsList
		{
			[Token(Token = "0x600254A")]
			[Address(RVA = "0xC1990C", Offset = "0xC1990C", VA = "0xC1990C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600254B")]
			[Address(RVA = "0xC19914", Offset = "0xC19914", VA = "0xC19914")]
			set
			{
			}
		}
	}
	[Token(Token = "0x2000575")]
	internal struct ObjectMetadata
	{
		[Token(Token = "0x4002562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Type element_type;

		[Token(Token = "0x4002563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private bool is_dictionary;

		[Token(Token = "0x4002564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IDictionary<string, PropertyMetadata> properties;

		[Token(Token = "0x1700025F")]
		public Type ElementType
		{
			[Token(Token = "0x600254C")]
			[Address(RVA = "0xCC1060", Offset = "0xCC1060", VA = "0xCC1060")]
			get
			{
				return null;
			}
			[Token(Token = "0x600254D")]
			[Address(RVA = "0xCC1128", Offset = "0xCC1128", VA = "0xCC1128")]
			set
			{
			}
		}

		[Token(Token = "0x17000260")]
		public bool IsDictionary
		{
			[Token(Token = "0x600254E")]
			[Address(RVA = "0xCC1130", Offset = "0xCC1130", VA = "0xCC1130")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600254F")]
			[Address(RVA = "0xCC1138", Offset = "0xCC1138", VA = "0xCC1138")]
			set
			{
			}
		}

		[Token(Token = "0x17000261")]
		public IDictionary<string, PropertyMetadata> Properties
		{
			[Token(Token = "0x6002550")]
			[Address(RVA = "0xCC1144", Offset = "0xCC1144", VA = "0xCC1144")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002551")]
			[Address(RVA = "0xCC114C", Offset = "0xCC114C", VA = "0xCC114C")]
			set
			{
			}
		}
	}
	[Token(Token = "0x2000576")]
	internal delegate void ExporterFunc(object obj, JsonWriter writer);
	[Token(Token = "0x2000577")]
	public delegate void ExporterFunc<T>(T obj, JsonWriter writer);
	[Token(Token = "0x2000578")]
	internal delegate object ImporterFunc(object input);
	[Token(Token = "0x2000579")]
	public delegate TValue ImporterFunc<TJson, TValue>(TJson input);
	[Token(Token = "0x200057A")]
	public delegate IJsonWrapper WrapperFactory();
	[Token(Token = "0x200057B")]
	public class JsonMapper
	{
		[Serializable]
		[Token(Token = "0x200057C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x918D20", Offset = "0x918D20")]
		private sealed class <>c
		{
			[Token(Token = "0x4002575")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002576")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static ExporterFunc <>9__23_0;

			[Token(Token = "0x4002577")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static ExporterFunc <>9__23_1;

			[Token(Token = "0x4002578")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static ExporterFunc <>9__23_2;

			[Token(Token = "0x4002579")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static ExporterFunc <>9__23_3;

			[Token(Token = "0x400257A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static ExporterFunc <>9__23_4;

			[Token(Token = "0x400257B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static ExporterFunc <>9__23_5;

			[Token(Token = "0x400257C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static ExporterFunc <>9__23_6;

			[Token(Token = "0x400257D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public static ExporterFunc <>9__23_7;

			[Token(Token = "0x400257E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public static ExporterFunc <>9__23_8;

			[Token(Token = "0x400257F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public static ExporterFunc <>9__23_9;

			[Token(Token = "0x4002580")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public static ImporterFunc <>9__24_0;

			[Token(Token = "0x4002581")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public static ImporterFunc <>9__24_1;

			[Token(Token = "0x4002582")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public static ImporterFunc <>9__24_2;

			[Token(Token = "0x4002583")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public static ImporterFunc <>9__24_3;

			[Token(Token = "0x4002584")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public static ImporterFunc <>9__24_4;

			[Token(Token = "0x4002585")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public static ImporterFunc <>9__24_5;

			[Token(Token = "0x4002586")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public static ImporterFunc <>9__24_6;

			[Token(Token = "0x4002587")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public static ImporterFunc <>9__24_7;

			[Token(Token = "0x4002588")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			public static ImporterFunc <>9__24_8;

			[Token(Token = "0x4002589")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			public static ImporterFunc <>9__24_9;

			[Token(Token = "0x400258A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			public static ImporterFunc <>9__24_10;

			[Token(Token = "0x400258B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			public static ImporterFunc <>9__24_11;

			[Token(Token = "0x400258C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public static ImporterFunc <>9__24_12;

			[Token(Token = "0x400258D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public static WrapperFactory <>9__29_0;

			[Token(Token = "0x400258E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			public static WrapperFactory <>9__30_0;

			[Token(Token = "0x400258F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			public static WrapperFactory <>9__31_0;

			[Token(Token = "0x6002581")]
			[Address(RVA = "0xE66238", Offset = "0xE66238", VA = "0xE66238")]
			public <>c()
			{
			}

			[Token(Token = "0x6002582")]
			[Address(RVA = "0xE66240", Offset = "0xE66240", VA = "0xE66240")]
			internal void <RegisterBaseExporters>b__23_0(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6002583")]
			[Address(RVA = "0xE66304", Offset = "0xE66304", VA = "0xE66304")]
			internal void <RegisterBaseExporters>b__23_1(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6002584")]
			[Address(RVA = "0xE663C8", Offset = "0xE663C8", VA = "0xE663C8")]
			internal void <RegisterBaseExporters>b__23_2(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6002585")]
			[Address(RVA = "0xE664CC", Offset = "0xE664CC", VA = "0xE664CC")]
			internal void <RegisterBaseExporters>b__23_3(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6002586")]
			[Address(RVA = "0xE66558", Offset = "0xE66558", VA = "0xE66558")]
			internal void <RegisterBaseExporters>b__23_4(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6002587")]
			[Address(RVA = "0xE6661C", Offset = "0xE6661C", VA = "0xE6661C")]
			internal void <RegisterBaseExporters>b__23_5(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6002588")]
			[Address(RVA = "0xE666E0", Offset = "0xE666E0", VA = "0xE666E0")]
			internal void <RegisterBaseExporters>b__23_6(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6002589")]
			[Address(RVA = "0xE667A4", Offset = "0xE667A4", VA = "0xE667A4")]
			internal void <RegisterBaseExporters>b__23_7(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x600258A")]
			[Address(RVA = "0xE66868", Offset = "0xE66868", VA = "0xE66868")]
			internal void <RegisterBaseExporters>b__23_8(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x600258B")]
			[Address(RVA = "0xE668F4", Offset = "0xE668F4", VA = "0xE668F4")]
			internal void <RegisterBaseExporters>b__23_9(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x600258C")]
			[Address(RVA = "0xE66984", Offset = "0xE66984", VA = "0xE66984")]
			internal object <RegisterBaseImporters>b__24_0(object input)
			{
				return null;
			}

			[Token(Token = "0x600258D")]
			[Address(RVA = "0xE66A5C", Offset = "0xE66A5C", VA = "0xE66A5C")]
			internal object <RegisterBaseImporters>b__24_1(object input)
			{
				return null;
			}

			[Token(Token = "0x600258E")]
			[Address(RVA = "0xE66B34", Offset = "0xE66B34", VA = "0xE66B34")]
			internal object <RegisterBaseImporters>b__24_2(object input)
			{
				return null;
			}

			[Token(Token = "0x600258F")]
			[Address(RVA = "0xE66C0C", Offset = "0xE66C0C", VA = "0xE66C0C")]
			internal object <RegisterBaseImporters>b__24_3(object input)
			{
				return null;
			}

			[Token(Token = "0x6002590")]
			[Address(RVA = "0xE66CE4", Offset = "0xE66CE4", VA = "0xE66CE4")]
			internal object <RegisterBaseImporters>b__24_4(object input)
			{
				return null;
			}

			[Token(Token = "0x6002591")]
			[Address(RVA = "0xE66DBC", Offset = "0xE66DBC", VA = "0xE66DBC")]
			internal object <RegisterBaseImporters>b__24_5(object input)
			{
				return null;
			}

			[Token(Token = "0x6002592")]
			[Address(RVA = "0xE66E94", Offset = "0xE66E94", VA = "0xE66E94")]
			internal object <RegisterBaseImporters>b__24_6(object input)
			{
				return null;
			}

			[Token(Token = "0x6002593")]
			[Address(RVA = "0xE66F68", Offset = "0xE66F68", VA = "0xE66F68")]
			internal object <RegisterBaseImporters>b__24_7(object input)
			{
				return null;
			}

			[Token(Token = "0x6002594")]
			[Address(RVA = "0xE67040", Offset = "0xE67040", VA = "0xE67040")]
			internal object <RegisterBaseImporters>b__24_8(object input)
			{
				return null;
			}

			[Token(Token = "0x6002595")]
			[Address(RVA = "0xE67114", Offset = "0xE67114", VA = "0xE67114")]
			internal object <RegisterBaseImporters>b__24_9(object input)
			{
				return null;
			}

			[Token(Token = "0x6002596")]
			[Address(RVA = "0xE671EC", Offset = "0xE671EC", VA = "0xE671EC")]
			internal object <RegisterBaseImporters>b__24_10(object input)
			{
				return null;
			}

			[Token(Token = "0x6002597")]
			[Address(RVA = "0xE672C4", Offset = "0xE672C4", VA = "0xE672C4")]
			internal object <RegisterBaseImporters>b__24_11(object input)
			{
				return null;
			}

			[Token(Token = "0x6002598")]
			[Address(RVA = "0xE67394", Offset = "0xE67394", VA = "0xE67394")]
			internal object <RegisterBaseImporters>b__24_12(object input)
			{
				return null;
			}

			[Token(Token = "0x6002599")]
			[Address(RVA = "0xE674A4", Offset = "0xE674A4", VA = "0xE674A4")]
			internal IJsonWrapper <ToObject>b__29_0()
			{
				return null;
			}

			[Token(Token = "0x600259A")]
			[Address(RVA = "0xE674FC", Offset = "0xE674FC", VA = "0xE674FC")]
			internal IJsonWrapper <ToObject>b__30_0()
			{
				return null;
			}

			[Token(Token = "0x600259B")]
			[Address(RVA = "0xE67554", Offset = "0xE67554", VA = "0xE67554")]
			internal IJsonWrapper <ToObject>b__31_0()
			{
				return null;
			}
		}

		[Token(Token = "0x200057D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x918D30", Offset = "0x918D30")]
		private sealed class <>c__DisplayClass37_0<T>
		{
			[Token(Token = "0x4002590")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ExporterFunc<T> exporter;

			[Token(Token = "0x600259C")]
			public <>c__DisplayClass37_0()
			{
			}

			[Token(Token = "0x600259D")]
			internal void <RegisterExporter>b__0(object obj, JsonWriter writer)
			{
			}
		}

		[Token(Token = "0x200057E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x918D40", Offset = "0x918D40")]
		private sealed class <>c__DisplayClass38_0<TJson, TValue>
		{
			[Token(Token = "0x4002591")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ImporterFunc<TJson, TValue> importer;

			[Token(Token = "0x600259E")]
			public <>c__DisplayClass38_0()
			{
			}

			[Token(Token = "0x600259F")]
			internal object <RegisterImporter>b__0(object input)
			{
				return null;
			}
		}

		[Token(Token = "0x4002565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int max_nesting_depth;

		[Token(Token = "0x4002566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IFormatProvider datetime_format;

		[Token(Token = "0x4002567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IDictionary<Type, ExporterFunc> base_exporters_table;

		[Token(Token = "0x4002568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IDictionary<Type, ExporterFunc> custom_exporters_table;

		[Token(Token = "0x4002569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static IDictionary<Type, IDictionary<Type, ImporterFunc>> base_importers_table;

		[Token(Token = "0x400256A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static IDictionary<Type, IDictionary<Type, ImporterFunc>> custom_importers_table;

		[Token(Token = "0x400256B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static IDictionary<Type, ArrayMetadata> array_metadata;

		[Token(Token = "0x400256C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static readonly object array_metadata_lock;

		[Token(Token = "0x400256D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static IDictionary<Type, IDictionary<Type, MethodInfo>> conv_ops;

		[Token(Token = "0x400256E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static readonly object conv_ops_lock;

		[Token(Token = "0x400256F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static IDictionary<Type, ObjectMetadata> object_metadata;

		[Token(Token = "0x4002570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private static readonly object object_metadata_lock;

		[Token(Token = "0x4002571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private static IDictionary<Type, IList<PropertyMetadata>> type_properties;

		[Token(Token = "0x4002572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private static readonly object type_properties_lock;

		[Token(Token = "0x4002573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private static JsonWriter static_writer;

		[Token(Token = "0x4002574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private static readonly object static_writer_lock;

		[Token(Token = "0x6002566")]
		[Address(RVA = "0x17E3670", Offset = "0x17E3670", VA = "0x17E3670")]
		static JsonMapper()
		{
		}

		[Token(Token = "0x6002567")]
		[Address(RVA = "0x17E57D8", Offset = "0x17E57D8", VA = "0x17E57D8")]
		private static void AddArrayMetadata(Type type)
		{
		}

		[Token(Token = "0x6002568")]
		[Address(RVA = "0x17E5CB0", Offset = "0x17E5CB0", VA = "0x17E5CB0")]
		private static void AddObjectMetadata(Type type)
		{
		}

		[Token(Token = "0x6002569")]
		[Address(RVA = "0x17E6450", Offset = "0x17E6450", VA = "0x17E6450")]
		private static void AddTypeProperties(Type type)
		{
		}

		[Token(Token = "0x600256A")]
		[Address(RVA = "0x17E69CC", Offset = "0x17E69CC", VA = "0x17E69CC")]
		private static MethodInfo GetConvOp(Type t1, Type t2)
		{
			return null;
		}

		[Token(Token = "0x600256B")]
		[Address(RVA = "0x17E7350", Offset = "0x17E7350", VA = "0x17E7350")]
		private static object ReadValue(Type inst_type, JsonReader reader)
		{
			return null;
		}

		[Token(Token = "0x600256C")]
		[Address(RVA = "0x17E8804", Offset = "0x17E8804", VA = "0x17E8804")]
		private static IJsonWrapper ReadValue(WrapperFactory factory, JsonReader reader)
		{
			return null;
		}

		[Token(Token = "0x600256D")]
		[Address(RVA = "0x17E3A80", Offset = "0x17E3A80", VA = "0x17E3A80")]
		private static void RegisterBaseExporters()
		{
		}

		[Token(Token = "0x600256E")]
		[Address(RVA = "0x17E4930", Offset = "0x17E4930", VA = "0x17E4930")]
		private static void RegisterBaseImporters()
		{
		}

		[Token(Token = "0x600256F")]
		[Address(RVA = "0x17E8EF4", Offset = "0x17E8EF4", VA = "0x17E8EF4")]
		private static void RegisterImporter(IDictionary<Type, IDictionary<Type, ImporterFunc>> table, Type json_type, Type value_type, ImporterFunc importer)
		{
		}

		[Token(Token = "0x6002570")]
		[Address(RVA = "0x17E9158", Offset = "0x17E9158", VA = "0x17E9158")]
		private static void WriteValue(object obj, JsonWriter writer, bool writer_is_private, int depth)
		{
		}

		[Token(Token = "0x6002571")]
		[Address(RVA = "0x17EA7D4", Offset = "0x17EA7D4", VA = "0x17EA7D4")]
		public static string ToJson(object obj)
		{
			return null;
		}

		[Token(Token = "0x6002572")]
		[Address(RVA = "0x17EAA44", Offset = "0x17EAA44", VA = "0x17EAA44")]
		public static void ToJson(object obj, JsonWriter writer)
		{
		}

		[Token(Token = "0x6002573")]
		[Address(RVA = "0x17EAABC", Offset = "0x17EAABC", VA = "0x17EAABC")]
		public static JsonData ToObject(JsonReader reader)
		{
			return null;
		}

		[Token(Token = "0x6002574")]
		[Address(RVA = "0x17EAC90", Offset = "0x17EAC90", VA = "0x17EAC90")]
		public static JsonData ToObject(TextReader reader)
		{
			return null;
		}

		[Token(Token = "0x6002575")]
		[Address(RVA = "0x17EAE28", Offset = "0x17EAE28", VA = "0x17EAE28")]
		public static JsonData ToObject(string json)
		{
			return null;
		}

		[Token(Token = "0x6002576")]
		public static T ToObject<T>(JsonReader reader)
		{
			return (T)null;
		}

		[Token(Token = "0x6002577")]
		public static T ToObject<T>(TextReader reader)
		{
			return (T)null;
		}

		[Token(Token = "0x6002578")]
		public static T ToObject<T>(string json)
		{
			return (T)null;
		}

		[Token(Token = "0x6002579")]
		[Address(RVA = "0x17EAC20", Offset = "0x17EAC20", VA = "0x17EAC20")]
		public static IJsonWrapper ToWrapper(WrapperFactory factory, JsonReader reader)
		{
			return null;
		}

		[Token(Token = "0x600257A")]
		[Address(RVA = "0x17EAF8C", Offset = "0x17EAF8C", VA = "0x17EAF8C")]
		public static IJsonWrapper ToWrapper(WrapperFactory factory, string json)
		{
			return null;
		}

		[Token(Token = "0x600257B")]
		public static void RegisterExporter<T>(ExporterFunc<T> exporter)
		{
		}

		[Token(Token = "0x600257C")]
		public static void RegisterImporter<TJson, TValue>(ImporterFunc<TJson, TValue> importer)
		{
		}

		[Token(Token = "0x600257D")]
		[Address(RVA = "0x17EB098", Offset = "0x17EB098", VA = "0x17EB098")]
		public static void UnregisterExporters()
		{
		}

		[Token(Token = "0x600257E")]
		[Address(RVA = "0x17EB178", Offset = "0x17EB178", VA = "0x17EB178")]
		public static void UnregisterImporters()
		{
		}

		[Token(Token = "0x600257F")]
		[Address(RVA = "0x17EB258", Offset = "0x17EB258", VA = "0x17EB258")]
		public JsonMapper()
		{
		}
	}
	[Token(Token = "0x200057F")]
	public enum JsonToken
	{
		[Token(Token = "0x4002593")]
		None,
		[Token(Token = "0x4002594")]
		ObjectStart,
		[Token(Token = "0x4002595")]
		PropertyName,
		[Token(Token = "0x4002596")]
		ObjectEnd,
		[Token(Token = "0x4002597")]
		ArrayStart,
		[Token(Token = "0x4002598")]
		ArrayEnd,
		[Token(Token = "0x4002599")]
		Int,
		[Token(Token = "0x400259A")]
		Long,
		[Token(Token = "0x400259B")]
		Double,
		[Token(Token = "0x400259C")]
		String,
		[Token(Token = "0x400259D")]
		Boolean,
		[Token(Token = "0x400259E")]
		Null
	}
	[Token(Token = "0x2000580")]
	public class JsonReader
	{
		[Token(Token = "0x400259F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IDictionary<int, IDictionary<int, int[]>> parse_table;

		[Token(Token = "0x40025A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Stack<int> automaton_stack;

		[Token(Token = "0x40025A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int current_input;

		[Token(Token = "0x40025A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int current_symbol;

		[Token(Token = "0x40025A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool end_of_json;

		[Token(Token = "0x40025A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool end_of_input;

		[Token(Token = "0x40025A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Lexer lexer;

		[Token(Token = "0x40025A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool parser_in_string;

		[Token(Token = "0x40025A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool parser_return;

		[Token(Token = "0x40025A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		private bool read_started;

		[Token(Token = "0x40025A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TextReader reader;

		[Token(Token = "0x40025AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool reader_is_owned;

		[Token(Token = "0x40025AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private object token_value;

		[Token(Token = "0x40025AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private JsonToken token;

		[Token(Token = "0x17000262")]
		public bool AllowComments
		{
			[Token(Token = "0x60025A0")]
			[Address(RVA = "0x17EB260", Offset = "0x17EB260", VA = "0x17EB260")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60025A1")]
			[Address(RVA = "0x17EB27C", Offset = "0x17EB27C", VA = "0x17EB27C")]
			set
			{
			}
		}

		[Token(Token = "0x17000263")]
		public bool AllowSingleQuotedStrings
		{
			[Token(Token = "0x60025A2")]
			[Address(RVA = "0x17EB29C", Offset = "0x17EB29C", VA = "0x17EB29C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60025A3")]
			[Address(RVA = "0x17EB2B8", Offset = "0x17EB2B8", VA = "0x17EB2B8")]
			set
			{
			}
		}

		[Token(Token = "0x17000264")]
		public bool EndOfInput
		{
			[Token(Token = "0x60025A4")]
			[Address(RVA = "0x17EB2D8", Offset = "0x17EB2D8", VA = "0x17EB2D8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000265")]
		public bool EndOfJson
		{
			[Token(Token = "0x60025A5")]
			[Address(RVA = "0x17EB2E0", Offset = "0x17EB2E0", VA = "0x17EB2E0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000266")]
		public JsonToken Token
		{
			[Token(Token = "0x60025A6")]
			[Address(RVA = "0x17EB2E8", Offset = "0x17EB2E8", VA = "0x17EB2E8")]
			get
			{
				return default(JsonToken);
			}
		}

		[Token(Token = "0x17000267")]
		public object Value
		{
			[Token(Token = "0x60025A7")]
			[Address(RVA = "0x17EB2F0", Offset = "0x17EB2F0", VA = "0x17EB2F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025A8")]
		[Address(RVA = "0x17EB2F8", Offset = "0x17EB2F8", VA = "0x17EB2F8")]
		static JsonReader()
		{
		}

		[Token(Token = "0x60025A9")]
		[Address(RVA = "0x17EB024", Offset = "0x17EB024", VA = "0x17EB024")]
		public JsonReader(string json_text)
		{
		}

		[Token(Token = "0x60025AA")]
		[Address(RVA = "0x17EAE20", Offset = "0x17EAE20", VA = "0x17EAE20")]
		public JsonReader(TextReader reader)
		{
		}

		[Token(Token = "0x60025AB")]
		[Address(RVA = "0x17EB9D8", Offset = "0x17EB9D8", VA = "0x17EB9D8")]
		private JsonReader(TextReader reader, bool owned)
		{
		}

		[Token(Token = "0x60025AC")]
		[Address(RVA = "0x17EB2FC", Offset = "0x17EB2FC", VA = "0x17EB2FC")]
		private static void PopulateParseTable()
		{
		}

		[Token(Token = "0x60025AD")]
		[Address(RVA = "0x17EBC7C", Offset = "0x17EBC7C", VA = "0x17EBC7C")]
		private static void TableAddCol(ParserToken row, int col, params int[] symbols)
		{
		}

		[Token(Token = "0x60025AE")]
		[Address(RVA = "0x17EBB4C", Offset = "0x17EBB4C", VA = "0x17EBB4C")]
		private static void TableAddRow(ParserToken rule)
		{
		}

		[Token(Token = "0x60025AF")]
		[Address(RVA = "0x17EBDF8", Offset = "0x17EBDF8", VA = "0x17EBDF8")]
		private void ProcessNumber(string number)
		{
		}

		[Token(Token = "0x60025B0")]
		[Address(RVA = "0x17EBF8C", Offset = "0x17EBF8C", VA = "0x17EBF8C")]
		private void ProcessSymbol()
		{
		}

		[Token(Token = "0x60025B1")]
		[Address(RVA = "0x17EC128", Offset = "0x17EC128", VA = "0x17EC128")]
		private bool ReadToken()
		{
			return default(bool);
		}

		[Token(Token = "0x60025B2")]
		[Address(RVA = "0x17EC18C", Offset = "0x17EC18C", VA = "0x17EC18C")]
		public void Close()
		{
		}

		[Token(Token = "0x60025B3")]
		[Address(RVA = "0x17E8380", Offset = "0x17E8380", VA = "0x17E8380")]
		public bool Read()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000581")]
	internal enum Condition
	{
		[Token(Token = "0x40025AE")]
		InArray,
		[Token(Token = "0x40025AF")]
		InObject,
		[Token(Token = "0x40025B0")]
		NotAProperty,
		[Token(Token = "0x40025B1")]
		Property,
		[Token(Token = "0x40025B2")]
		Value
	}
	[Token(Token = "0x2000582")]
	internal class WriterContext
	{
		[Token(Token = "0x40025B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Count;

		[Token(Token = "0x40025B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool InArray;

		[Token(Token = "0x40025B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		public bool InObject;

		[Token(Token = "0x40025B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		public bool ExpectingValue;

		[Token(Token = "0x40025B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int Padding;

		[Token(Token = "0x60025B4")]
		[Address(RVA = "0x1261BB4", Offset = "0x1261BB4", VA = "0x1261BB4")]
		public WriterContext()
		{
		}
	}
	[Token(Token = "0x2000583")]
	public class JsonWriter
	{
		[Token(Token = "0x40025B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static NumberFormatInfo number_format;

		[Token(Token = "0x40025B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private WriterContext context;

		[Token(Token = "0x40025BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Stack<WriterContext> ctx_stack;

		[Token(Token = "0x40025BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool has_reached_end;

		[Token(Token = "0x40025BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private char[] hex_seq;

		[Token(Token = "0x40025BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int indentation;

		[Token(Token = "0x40025BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int indent_value;

		[Token(Token = "0x40025BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private StringBuilder inst_string_builder;

		[Token(Token = "0x40025C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool pretty_print;

		[Token(Token = "0x40025C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool validate;

		[Token(Token = "0x40025C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TextWriter writer;

		[Token(Token = "0x17000268")]
		public int IndentValue
		{
			[Token(Token = "0x60025B5")]
			[Address(RVA = "0x17EC1DC", Offset = "0x17EC1DC", VA = "0x17EC1DC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60025B6")]
			[Address(RVA = "0x17EC1E4", Offset = "0x17EC1E4", VA = "0x17EC1E4")]
			set
			{
			}
		}

		[Token(Token = "0x17000269")]
		public bool PrettyPrint
		{
			[Token(Token = "0x60025B7")]
			[Address(RVA = "0x17EC1F8", Offset = "0x17EC1F8", VA = "0x17EC1F8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60025B8")]
			[Address(RVA = "0x17EC200", Offset = "0x17EC200", VA = "0x17EC200")]
			set
			{
			}
		}

		[Token(Token = "0x1700026A")]
		public TextWriter TextWriter
		{
			[Token(Token = "0x60025B9")]
			[Address(RVA = "0x17EC20C", Offset = "0x17EC20C", VA = "0x17EC20C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026B")]
		public bool Validate
		{
			[Token(Token = "0x60025BA")]
			[Address(RVA = "0x17EC214", Offset = "0x17EC214", VA = "0x17EC214")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60025BB")]
			[Address(RVA = "0x17EC21C", Offset = "0x17EC21C", VA = "0x17EC21C")]
			set
			{
			}
		}

		[Token(Token = "0x60025BC")]
		[Address(RVA = "0x17EC228", Offset = "0x17EC228", VA = "0x17EC228")]
		static JsonWriter()
		{
		}

		[Token(Token = "0x60025BD")]
		[Address(RVA = "0x17E39DC", Offset = "0x17E39DC", VA = "0x17E39DC")]
		public JsonWriter()
		{
		}

		[Token(Token = "0x60025BE")]
		[Address(RVA = "0x17EC37C", Offset = "0x17EC37C", VA = "0x17EC37C")]
		public JsonWriter(StringBuilder sb)
		{
		}

		[Token(Token = "0x60025BF")]
		[Address(RVA = "0x17E3268", Offset = "0x17E3268", VA = "0x17E3268")]
		public JsonWriter(TextWriter writer)
		{
		}

		[Token(Token = "0x60025C0")]
		[Address(RVA = "0x17EC3EC", Offset = "0x17EC3EC", VA = "0x17EC3EC")]
		private void DoValidation(Condition cond)
		{
		}

		[Token(Token = "0x60025C1")]
		[Address(RVA = "0x17EC27C", Offset = "0x17EC27C", VA = "0x17EC27C")]
		private void Init()
		{
		}

		[Token(Token = "0x60025C2")]
		[Address(RVA = "0x17EC5B0", Offset = "0x17EC5B0", VA = "0x17EC5B0")]
		private static void IntToHex(int n, char[] hex)
		{
		}

		[Token(Token = "0x60025C3")]
		[Address(RVA = "0x17EC638", Offset = "0x17EC638", VA = "0x17EC638")]
		private void Indent()
		{
		}

		[Token(Token = "0x60025C4")]
		[Address(RVA = "0x17EC650", Offset = "0x17EC650", VA = "0x17EC650")]
		private void Put(string str)
		{
		}

		[Token(Token = "0x60025C5")]
		[Address(RVA = "0x17EC6E8", Offset = "0x17EC6E8", VA = "0x17EC6E8")]
		private void PutNewline()
		{
		}

		[Token(Token = "0x60025C6")]
		[Address(RVA = "0x17EC6F0", Offset = "0x17EC6F0", VA = "0x17EC6F0")]
		private void PutNewline(bool add_comma)
		{
		}

		[Token(Token = "0x60025C7")]
		[Address(RVA = "0x17EC788", Offset = "0x17EC788", VA = "0x17EC788")]
		private void PutString(string str)
		{
		}

		[Token(Token = "0x60025C8")]
		[Address(RVA = "0x17ECA94", Offset = "0x17ECA94", VA = "0x17ECA94")]
		private void Unindent()
		{
		}

		[Token(Token = "0x60025C9")]
		[Address(RVA = "0x17ECAAC", Offset = "0x17ECAAC", VA = "0x17ECAAC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60025CA")]
		[Address(RVA = "0x17EA964", Offset = "0x17EA964", VA = "0x17EA964")]
		public void Reset()
		{
		}

		[Token(Token = "0x60025CB")]
		[Address(RVA = "0x17E2654", Offset = "0x17E2654", VA = "0x17E2654")]
		public void Write(bool boolean)
		{
		}

		[Token(Token = "0x60025CC")]
		[Address(RVA = "0x17ECB18", Offset = "0x17ECB18", VA = "0x17ECB18")]
		public void Write(decimal number)
		{
		}

		[Token(Token = "0x60025CD")]
		[Address(RVA = "0x17E26F8", Offset = "0x17E26F8", VA = "0x17E26F8")]
		public void Write(double number)
		{
		}

		[Token(Token = "0x60025CE")]
		[Address(RVA = "0x17E2848", Offset = "0x17E2848", VA = "0x17E2848")]
		public void Write(int number)
		{
		}

		[Token(Token = "0x60025CF")]
		[Address(RVA = "0x17E2930", Offset = "0x17E2930", VA = "0x17E2930")]
		public void Write(long number)
		{
		}

		[Token(Token = "0x60025D0")]
		[Address(RVA = "0x17E25BC", Offset = "0x17E25BC", VA = "0x17E25BC")]
		public void Write(string str)
		{
		}

		[Token(Token = "0x60025D1")]
		[Address(RVA = "0x17EA6EC", Offset = "0x17EA6EC", VA = "0x17EA6EC")]
		public void Write(ulong number)
		{
		}

		[Token(Token = "0x60025D2")]
		[Address(RVA = "0x17E2B00", Offset = "0x17E2B00", VA = "0x17E2B00")]
		public void WriteArrayEnd()
		{
		}

		[Token(Token = "0x60025D3")]
		[Address(RVA = "0x17E2A18", Offset = "0x17E2A18", VA = "0x17E2A18")]
		public void WriteArrayStart()
		{
		}

		[Token(Token = "0x60025D4")]
		[Address(RVA = "0x17E2E08", Offset = "0x17E2E08", VA = "0x17E2E08")]
		public void WriteObjectEnd()
		{
		}

		[Token(Token = "0x60025D5")]
		[Address(RVA = "0x17E2BF0", Offset = "0x17E2BF0", VA = "0x17E2BF0")]
		public void WriteObjectStart()
		{
		}

		[Token(Token = "0x60025D6")]
		[Address(RVA = "0x17E2CD8", Offset = "0x17E2CD8", VA = "0x17E2CD8")]
		public void WritePropertyName(string property_name)
		{
		}
	}
	[Token(Token = "0x2000584")]
	internal class FsmContext
	{
		[Token(Token = "0x40025C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool Return;

		[Token(Token = "0x40025C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int NextState;

		[Token(Token = "0x40025C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Lexer L;

		[Token(Token = "0x40025C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int StateStack;

		[Token(Token = "0x60025D7")]
		[Address(RVA = "0x1465D10", Offset = "0x1465D10", VA = "0x1465D10")]
		public FsmContext()
		{
		}
	}
	[Token(Token = "0x2000585")]
	internal class Lexer
	{
		[Token(Token = "0x2000586")]
		private delegate bool StateHandler(FsmContext ctx);

		[Token(Token = "0x40025C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int[] fsm_return_table;

		[Token(Token = "0x40025C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static StateHandler[] fsm_handler_table;

		[Token(Token = "0x40025C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool allow_comments;

		[Token(Token = "0x40025CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		private bool allow_single_quoted_strings;

		[Token(Token = "0x40025CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		private bool end_of_input;

		[Token(Token = "0x40025CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private FsmContext fsm_context;

		[Token(Token = "0x40025CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int input_buffer;

		[Token(Token = "0x40025CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int input_char;

		[Token(Token = "0x40025CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextReader reader;

		[Token(Token = "0x40025D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int state;

		[Token(Token = "0x40025D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private StringBuilder string_buffer;

		[Token(Token = "0x40025D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string string_value;

		[Token(Token = "0x40025D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int token;

		[Token(Token = "0x40025D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int unichar;

		[Token(Token = "0x1700026C")]
		public bool AllowComments
		{
			[Token(Token = "0x60025D8")]
			[Address(RVA = "0x113B170", Offset = "0x113B170", VA = "0x113B170")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60025D9")]
			[Address(RVA = "0x113B178", Offset = "0x113B178", VA = "0x113B178")]
			set
			{
			}
		}

		[Token(Token = "0x1700026D")]
		public bool AllowSingleQuotedStrings
		{
			[Token(Token = "0x60025DA")]
			[Address(RVA = "0x113B184", Offset = "0x113B184", VA = "0x113B184")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60025DB")]
			[Address(RVA = "0x113B18C", Offset = "0x113B18C", VA = "0x113B18C")]
			set
			{
			}
		}

		[Token(Token = "0x1700026E")]
		public bool EndOfInput
		{
			[Token(Token = "0x60025DC")]
			[Address(RVA = "0x113B198", Offset = "0x113B198", VA = "0x113B198")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700026F")]
		public int Token
		{
			[Token(Token = "0x60025DD")]
			[Address(RVA = "0x113B1A0", Offset = "0x113B1A0", VA = "0x113B1A0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000270")]
		public string StringValue
		{
			[Token(Token = "0x60025DE")]
			[Address(RVA = "0x113B1A8", Offset = "0x113B1A8", VA = "0x113B1A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025DF")]
		[Address(RVA = "0x113B1B0", Offset = "0x113B1B0", VA = "0x113B1B0")]
		static Lexer()
		{
		}

		[Token(Token = "0x60025E0")]
		[Address(RVA = "0x113BC6C", Offset = "0x113BC6C", VA = "0x113BC6C")]
		public Lexer(TextReader reader)
		{
		}

		[Token(Token = "0x60025E1")]
		[Address(RVA = "0x113BD38", Offset = "0x113BD38", VA = "0x113BD38")]
		private static int HexValue(int digit)
		{
			return default(int);
		}

		[Token(Token = "0x60025E2")]
		[Address(RVA = "0x113B1B4", Offset = "0x113B1B4", VA = "0x113B1B4")]
		private static void PopulateFsmTables()
		{
		}

		[Token(Token = "0x60025E3")]
		[Address(RVA = "0x113BDB4", Offset = "0x113BDB4", VA = "0x113BDB4")]
		private static char ProcessEscChar(int esc_char)
		{
			return default(char);
		}

		[Token(Token = "0x60025E4")]
		[Address(RVA = "0x113BEB0", Offset = "0x113BEB0", VA = "0x113BEB0")]
		private static bool State1(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60025E5")]
		[Address(RVA = "0x113C0C0", Offset = "0x113C0C0", VA = "0x113C0C0")]
		private static bool State2(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60025E6")]
		[Address(RVA = "0x113C168", Offset = "0x113C168", VA = "0x113C168")]
		private static bool State3(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60025E7")]
		[Address(RVA = "0x113C2A8", Offset = "0x113C2A8", VA = "0x113C2A8")]
		private static bool State4(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60025E8")]
		[Address(RVA = "0x113C3A8", Offset = "0x113C3A8", VA = "0x113C3A8")]
		private static bool State5(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60025E9")]
		[Address(RVA = "0x113C42C", Offset = "0x113C42C", VA = "0x113C42C")]
		private static bool State6(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60025EA")]
		[Address(RVA = "0x113C528", Offset = "0x113C528", VA = "0x113C528")]
		private static bool State7(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60025EB")]
		[Address(RVA = "0x113C5C0", Offset = "0x113C5C0", VA = "0x113C5C0")]
		private static bool State8(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60025EC")]
		[Address(RVA = "0x113C680", Offset = "0x113C680", VA = "0x113C680")]
		private static bool State9(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60025ED")]
		[Address(RVA = "0x113C6F0", Offset = "0x113C6F0", VA = "0x113C6F0")]
		private static bool State10(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60025EE")]
		[Address(RVA = "0x113C760", Offset = "0x113C760", VA = "0x113C760")]
		private static bool State11(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60025EF")]
		[Address(RVA = "0x113C7D0", Offset = "0x113C7D0", VA = "0x113C7D0")]
		private static bool State12(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60025F0")]
		[Address(RVA = "0x113C840", Offset = "0x113C840", VA = "0x113C840")]
		private static bool State13(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60025F1")]
		[Address(RVA = "0x113C8B0", Offset = "0x113C8B0", VA = "0x113C8B0")]
		private static bool State14(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60025F2")]
		[Address(RVA = "0x113C920", Offset = "0x113C920", VA = "0x113C920")]
		private static bool State15(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60025F3")]
		[Address(RVA = "0x113C990", Offset = "0x113C990", VA = "0x113C990")]
		private static bool State16(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60025F4")]
		[Address(RVA = "0x113CA00", Offset = "0x113CA00", VA = "0x113CA00")]
		private static bool State17(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60025F5")]
		[Address(RVA = "0x113CA70", Offset = "0x113CA70", VA = "0x113CA70")]
		private static bool State18(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60025F6")]
		[Address(RVA = "0x113CAE0", Offset = "0x113CAE0", VA = "0x113CAE0")]
		private static bool State19(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60025F7")]
		[Address(RVA = "0x113CB8C", Offset = "0x113CB8C", VA = "0x113CB8C")]
		private static bool State20(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60025F8")]
		[Address(RVA = "0x113CBFC", Offset = "0x113CBFC", VA = "0x113CBFC")]
		private static bool State21(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60025F9")]
		[Address(RVA = "0x113CD44", Offset = "0x113CD44", VA = "0x113CD44")]
		private static bool State22(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60025FA")]
		[Address(RVA = "0x113CED0", Offset = "0x113CED0", VA = "0x113CED0")]
		private static bool State23(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60025FB")]
		[Address(RVA = "0x113CF7C", Offset = "0x113CF7C", VA = "0x113CF7C")]
		private static bool State24(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60025FC")]
		[Address(RVA = "0x113CFF4", Offset = "0x113CFF4", VA = "0x113CFF4")]
		private static bool State25(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60025FD")]
		[Address(RVA = "0x113D074", Offset = "0x113D074", VA = "0x113D074")]
		private static bool State26(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60025FE")]
		[Address(RVA = "0x113D0E0", Offset = "0x113D0E0", VA = "0x113D0E0")]
		private static bool State27(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60025FF")]
		[Address(RVA = "0x113D14C", Offset = "0x113D14C", VA = "0x113D14C")]
		private static bool State28(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6002600")]
		[Address(RVA = "0x113C088", Offset = "0x113C088", VA = "0x113C088")]
		private bool GetChar()
		{
			return default(bool);
		}

		[Token(Token = "0x6002601")]
		[Address(RVA = "0x113D1C8", Offset = "0x113D1C8", VA = "0x113D1C8")]
		private int NextChar()
		{
			return default(int);
		}

		[Token(Token = "0x6002602")]
		[Address(RVA = "0x113D1FC", Offset = "0x113D1FC", VA = "0x113D1FC")]
		public bool NextToken()
		{
			return default(bool);
		}

		[Token(Token = "0x6002603")]
		[Address(RVA = "0x113C29C", Offset = "0x113C29C", VA = "0x113C29C")]
		private void UngetChar()
		{
		}
	}
	[Token(Token = "0x2000587")]
	internal enum ParserToken
	{
		[Token(Token = "0x40025D6")]
		None = 65536,
		[Token(Token = "0x40025D7")]
		Number,
		[Token(Token = "0x40025D8")]
		True,
		[Token(Token = "0x40025D9")]
		False,
		[Token(Token = "0x40025DA")]
		Null,
		[Token(Token = "0x40025DB")]
		CharSeq,
		[Token(Token = "0x40025DC")]
		Char,
		[Token(Token = "0x40025DD")]
		Text,
		[Token(Token = "0x40025DE")]
		Object,
		[Token(Token = "0x40025DF")]
		ObjectPrime,
		[Token(Token = "0x40025E0")]
		Pair,
		[Token(Token = "0x40025E1")]
		PairRest,
		[Token(Token = "0x40025E2")]
		Array,
		[Token(Token = "0x40025E3")]
		ArrayPrime,
		[Token(Token = "0x40025E4")]
		Value,
		[Token(Token = "0x40025E5")]
		ValueRest,
		[Token(Token = "0x40025E6")]
		String,
		[Token(Token = "0x40025E7")]
		End,
		[Token(Token = "0x40025E8")]
		Epsilon
	}
}
namespace SplineMesh
{
	[Serializable]
	[Token(Token = "0x2000588")]
	public class CubicBezierCurve
	{
		[Token(Token = "0x40025E9")]
		private const int STEP_COUNT = 30;

		[Token(Token = "0x40025EA")]
		private const float T_STEP = 1f / 30f;

		[Token(Token = "0x40025EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly List<CurveSample> samples;

		[Token(Token = "0x40025EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SplineNode n1;

		[Token(Token = "0x40025ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SplineNode n2;

		[Token(Token = "0x40025EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91DD9C", Offset = "0x91DD9C")]
		private float <Length>k__BackingField;

		[Token(Token = "0x40025EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEvent Changed;

		[Token(Token = "0x17000271")]
		public float Length
		{
			[Token(Token = "0x6002608")]
			[Address(RVA = "0x10228F8", Offset = "0x10228F8", VA = "0x10228F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92E410", Offset = "0x92E410")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002609")]
			[Address(RVA = "0x1022900", Offset = "0x1022900", VA = "0x1022900")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92E420", Offset = "0x92E420")]
			private set
			{
			}
		}

		[Token(Token = "0x600260A")]
		[Address(RVA = "0x1022908", Offset = "0x1022908", VA = "0x1022908")]
		public CubicBezierCurve(SplineNode n1, SplineNode n2)
		{
		}

		[Token(Token = "0x600260B")]
		[Address(RVA = "0x1022C58", Offset = "0x1022C58", VA = "0x1022C58")]
		public void ConnectStart(SplineNode n1)
		{
		}

		[Token(Token = "0x600260C")]
		[Address(RVA = "0x1022D34", Offset = "0x1022D34", VA = "0x1022D34")]
		public void ConnectEnd(SplineNode n2)
		{
		}

		[Token(Token = "0x600260D")]
		[Address(RVA = "0x1022E10", Offset = "0x1022E10", VA = "0x1022E10")]
		public Vector3 GetInverseDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600260E")]
		[Address(RVA = "0x1022E4C", Offset = "0x1022E4C", VA = "0x1022E4C")]
		private Vector3 GetLocation(float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600260F")]
		[Address(RVA = "0x1022F20", Offset = "0x1022F20", VA = "0x1022F20")]
		private Vector3 GetTangent(float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002610")]
		[Address(RVA = "0x1023018", Offset = "0x1023018", VA = "0x1023018")]
		private Vector3 GetUp(float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002611")]
		[Address(RVA = "0x1023080", Offset = "0x1023080", VA = "0x1023080")]
		private Vector2 GetScale(float t)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002612")]
		[Address(RVA = "0x10230CC", Offset = "0x10230CC", VA = "0x10230CC")]
		private float GetRoll(float t)
		{
			return default(float);
		}

		[Token(Token = "0x6002613")]
		[Address(RVA = "0x1022A60", Offset = "0x1022A60", VA = "0x1022A60")]
		private void ComputeSamples(object sender, EventArgs e)
		{
		}

		[Token(Token = "0x6002614")]
		[Address(RVA = "0x1023100", Offset = "0x1023100", VA = "0x1023100")]
		private CurveSample CreateSample(float distance, float time)
		{
			return default(CurveSample);
		}

		[Token(Token = "0x6002615")]
		[Address(RVA = "0x1023260", Offset = "0x1023260", VA = "0x1023260")]
		public CurveSample GetSample(float time)
		{
			return default(CurveSample);
		}

		[Token(Token = "0x6002616")]
		[Address(RVA = "0x102395C", Offset = "0x102395C", VA = "0x102395C")]
		public CurveSample GetSampleAtDistance(float d)
		{
			return default(CurveSample);
		}

		[Token(Token = "0x6002617")]
		[Address(RVA = "0x102364C", Offset = "0x102364C", VA = "0x102364C")]
		private static void AssertTimeInBounds(float time)
		{
		}

		[Token(Token = "0x6002618")]
		[Address(RVA = "0x1023DBC", Offset = "0x1023DBC", VA = "0x1023DBC")]
		public CurveSample GetProjectionSample(Vector3 pointToProject)
		{
			return default(CurveSample);
		}
	}
	[Token(Token = "0x2000589")]
	public struct CurveSample
	{
		[Token(Token = "0x40025F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly Vector3 location;

		[Token(Token = "0x40025F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly Vector3 tangent;

		[Token(Token = "0x40025F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly Vector3 up;

		[Token(Token = "0x40025F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly Vector2 scale;

		[Token(Token = "0x40025F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public readonly float roll;

		[Token(Token = "0x40025F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly float distanceInCurve;

		[Token(Token = "0x40025F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public readonly float timeInCurve;

		[Token(Token = "0x40025F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly CubicBezierCurve curve;

		[Token(Token = "0x40025F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Quaternion rotation;

		[Token(Token = "0x17000272")]
		public Quaternion Rotation
		{
			[Token(Token = "0x6002619")]
			[Address(RVA = "0x1024328", Offset = "0x1024328", VA = "0x1024328")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x600261A")]
		[Address(RVA = "0x10231F8", Offset = "0x10231F8", VA = "0x10231F8")]
		public CurveSample(Vector3 location, Vector3 tangent, Vector3 up, Vector2 scale, float roll, float distanceInCurve, float timeInCurve, CubicBezierCurve curve)
		{
		}

		[Token(Token = "0x600261B")]
		[Address(RVA = "0x1024464", Offset = "0x1024464", VA = "0x1024464", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600261C")]
		[Address(RVA = "0x1024660", Offset = "0x1024660", VA = "0x1024660", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x600261D")]
		[Address(RVA = "0x1023700", Offset = "0x1023700", VA = "0x1023700")]
		public static bool operator ==(CurveSample cs1, CurveSample cs2)
		{
			return default(bool);
		}

		[Token(Token = "0x600261E")]
		[Address(RVA = "0x10246D8", Offset = "0x10246D8", VA = "0x10246D8")]
		public static bool operator !=(CurveSample cs1, CurveSample cs2)
		{
			return default(bool);
		}

		[Token(Token = "0x600261F")]
		[Address(RVA = "0x1023784", Offset = "0x1023784", VA = "0x1023784")]
		public static CurveSample Lerp(CurveSample a, CurveSample b, float t)
		{
			return default(CurveSample);
		}

		[Token(Token = "0x6002620")]
		[Address(RVA = "0x1024760", Offset = "0x1024760", VA = "0x1024760")]
		public MeshVertex GetBent(MeshVertex vert)
		{
			return null;
		}
	}
	[Token(Token = "0x200058A")]
	[DisallowMultipleComponent]
	[ExecuteInEditMode]
	public class Spline : MonoBehaviour
	{
		[Token(Token = "0x40025F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<SplineNode> nodes;

		[Token(Token = "0x40025FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public List<CubicBezierCurve> curves;

		[Token(Token = "0x40025FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float Length;

		[Token(Token = "0x40025FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private bool isLoop;

		[Token(Token = "0x40025FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public UnityEvent CurveChanged;

		[Token(Token = "0x40025FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private SplineNode start;

		[Token(Token = "0x4002600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private SplineNode end;

		[Token(Token = "0x17000273")]
		public bool IsLoop
		{
			[Token(Token = "0x6002621")]
			[Address(RVA = "0x10E01A4", Offset = "0x10E01A4", VA = "0x10E01A4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002622")]
			[Address(RVA = "0x10E01AC", Offset = "0x10E01AC", VA = "0x10E01AC")]
			set
			{
			}
		}

		[Token(Token = "0x1400000C")]
		public event ListChangeHandler<SplineNode> NodeListChanged
		{
			[Token(Token = "0x6002623")]
			[Address(RVA = "0x10E03B8", Offset = "0x10E03B8", VA = "0x10E03B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92E430", Offset = "0x92E430")]
			add
			{
			}
			[Token(Token = "0x6002624")]
			[Address(RVA = "0x10E0458", Offset = "0x10E0458", VA = "0x10E0458")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92E440", Offset = "0x92E440")]
			remove
			{
			}
		}

		[Token(Token = "0x6002625")]
		[Address(RVA = "0x10E04F8", Offset = "0x10E04F8", VA = "0x10E04F8")]
		private void Reset()
		{
		}

		[Token(Token = "0x6002626")]
		[Address(RVA = "0x10E0AD8", Offset = "0x10E0AD8", VA = "0x10E0AD8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002627")]
		[Address(RVA = "0x10E0CFC", Offset = "0x10E0CFC", VA = "0x10E0CFC")]
		public ReadOnlyCollection<CubicBezierCurve> GetCurves()
		{
			return null;
		}

		[Token(Token = "0x6002628")]
		[Address(RVA = "0x10E0934", Offset = "0x10E0934", VA = "0x10E0934")]
		private void RaiseNodeListChanged(ListChangedEventArgs<SplineNode> args)
		{
		}

		[Token(Token = "0x6002629")]
		[Address(RVA = "0x10E09A8", Offset = "0x10E09A8", VA = "0x10E09A8")]
		private void UpdateAfterCurveChanged()
		{
		}

		[Token(Token = "0x600262A")]
		[Address(RVA = "0x10E0D50", Offset = "0x10E0D50", VA = "0x10E0D50")]
		public CurveSample GetSample(float t)
		{
			return default(CurveSample);
		}

		[Token(Token = "0x600262B")]
		[Address(RVA = "0x10E0F58", Offset = "0x10E0F58", VA = "0x10E0F58")]
		public CubicBezierCurve GetCurve(float t)
		{
			return null;
		}

		[Token(Token = "0x600262C")]
		[Address(RVA = "0x10E0E10", Offset = "0x10E0E10", VA = "0x10E0E10")]
		private int GetNodeIndexForTime(float t)
		{
			return default(int);
		}

		[Token(Token = "0x600262D")]
		[Address(RVA = "0x10E0ADC", Offset = "0x10E0ADC", VA = "0x10E0ADC")]
		public void RefreshCurves()
		{
		}

		[Token(Token = "0x600262E")]
		[Address(RVA = "0x10E0FDC", Offset = "0x10E0FDC", VA = "0x10E0FDC")]
		public CurveSample GetSampleAtDistance(float d)
		{
			return default(CurveSample);
		}

		[Token(Token = "0x600262F")]
		[Address(RVA = "0x10E06E8", Offset = "0x10E06E8", VA = "0x10E06E8")]
		public void AddNode(SplineNode node)
		{
		}

		[Token(Token = "0x6002630")]
		[Address(RVA = "0x10E1280", Offset = "0x10E1280", VA = "0x10E1280")]
		public void InsertNode(int index, SplineNode node)
		{
		}

		[Token(Token = "0x6002631")]
		[Address(RVA = "0x10E1580", Offset = "0x10E1580", VA = "0x10E1580")]
		public void RemoveNode(SplineNode node)
		{
		}

		[Token(Token = "0x6002632")]
		[Address(RVA = "0x10E01B8", Offset = "0x10E01B8", VA = "0x10E01B8")]
		private void updateLoopBinding()
		{
		}

		[Token(Token = "0x6002633")]
		[Address(RVA = "0x10E1A08", Offset = "0x10E1A08", VA = "0x10E1A08")]
		private void StartNodeChanged(object sender, EventArgs e)
		{
		}

		[Token(Token = "0x6002634")]
		[Address(RVA = "0x10E1F60", Offset = "0x10E1F60", VA = "0x10E1F60")]
		private void EndNodeChanged(object sender, EventArgs e)
		{
		}

		[Token(Token = "0x6002635")]
		[Address(RVA = "0x10E20AC", Offset = "0x10E20AC", VA = "0x10E20AC")]
		public CurveSample GetProjectionSample(Vector3 pointToProject)
		{
			return default(CurveSample);
		}

		[Token(Token = "0x6002636")]
		[Address(RVA = "0x10E2398", Offset = "0x10E2398", VA = "0x10E2398")]
		public Spline()
		{
		}
	}
	[Token(Token = "0x200058B")]
	public enum ListChangeType
	{
		[Token(Token = "0x4002602")]
		Add,
		[Token(Token = "0x4002603")]
		Insert,
		[Token(Token = "0x4002604")]
		Remove,
		[Token(Token = "0x4002605")]
		clear
	}
	[Token(Token = "0x200058C")]
	public class ListChangedEventArgs<T> : EventArgs
	{
		[Token(Token = "0x4002606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ListChangeType type;

		[Token(Token = "0x4002607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public List<T> newItems;

		[Token(Token = "0x4002608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public List<T> removedItems;

		[Token(Token = "0x4002609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int insertIndex;

		[Token(Token = "0x400260A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int removeIndex;

		[Token(Token = "0x6002637")]
		public ListChangedEventArgs()
		{
		}
	}
	[Token(Token = "0x200058D")]
	public delegate void ListChangeHandler<T2>(object sender, ListChangedEventArgs<T2> args);
	[Serializable]
	[Token(Token = "0x200058E")]
	public class SplineNode
	{
		[Token(Token = "0x400260B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Vector3 position;

		[Token(Token = "0x400260C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private Vector3 direction;

		[Token(Token = "0x400260D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Vector3 up;

		[Token(Token = "0x400260E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private Vector2 scale;

		[Token(Token = "0x400260F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float roll;

		[Token(Token = "0x17000274")]
		public Vector3 Position
		{
			[Token(Token = "0x600263C")]
			[Address(RVA = "0x10E4900", Offset = "0x10E4900", VA = "0x10E4900")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600263D")]
			[Address(RVA = "0x10E1B54", Offset = "0x10E1B54", VA = "0x10E1B54")]
			set
			{
			}
		}

		[Token(Token = "0x17000275")]
		public Vector3 Direction
		{
			[Token(Token = "0x600263E")]
			[Address(RVA = "0x10E490C", Offset = "0x10E490C", VA = "0x10E490C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600263F")]
			[Address(RVA = "0x10E1C30", Offset = "0x10E1C30", VA = "0x10E1C30")]
			set
			{
			}
		}

		[Token(Token = "0x17000276")]
		public Vector3 Up
		{
			[Token(Token = "0x6002640")]
			[Address(RVA = "0x10E4918", Offset = "0x10E4918", VA = "0x10E4918")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002641")]
			[Address(RVA = "0x10E1E84", Offset = "0x10E1E84", VA = "0x10E1E84")]
			set
			{
			}
		}

		[Token(Token = "0x17000277")]
		public Vector2 Scale
		{
			[Token(Token = "0x6002642")]
			[Address(RVA = "0x10E4924", Offset = "0x10E4924", VA = "0x10E4924")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6002643")]
			[Address(RVA = "0x10E1DC0", Offset = "0x10E1DC0", VA = "0x10E1DC0")]
			set
			{
			}
		}

		[Token(Token = "0x17000278")]
		public float Roll
		{
			[Token(Token = "0x6002644")]
			[Address(RVA = "0x10E492C", Offset = "0x10E492C", VA = "0x10E492C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002645")]
			[Address(RVA = "0x10E1D0C", Offset = "0x10E1D0C", VA = "0x10E1D0C")]
			set
			{
			}
		}

		[Token(Token = "0x1400000D")]
		[HideInInspector]
		public event EventHandler Changed
		{
			[Token(Token = "0x6002647")]
			[Address(RVA = "0x10E1968", Offset = "0x10E1968", VA = "0x10E1968")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92E450", Offset = "0x92E450")]
			add
			{
			}
			[Token(Token = "0x6002648")]
			[Address(RVA = "0x10E18C8", Offset = "0x10E18C8", VA = "0x10E18C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92E460", Offset = "0x92E460")]
			remove
			{
			}
		}

		[Token(Token = "0x6002646")]
		[Address(RVA = "0x10E0650", Offset = "0x10E0650", VA = "0x10E0650")]
		public SplineNode(Vector3 position, Vector3 direction)
		{
		}
	}
	[Token(Token = "0x200058F")]
	[DisallowMultipleComponent]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x918D88", Offset = "0x918D88")]
	public class SplineSmoother : MonoBehaviour
	{
		[Token(Token = "0x4002611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Spline spline;

		[Token(Token = "0x4002612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x91DE4C", Offset = "0x91DE4C")]
		public float curvature;

		[Token(Token = "0x17000279")]
		private Spline Spline
		{
			[Token(Token = "0x6002649")]
			[Address(RVA = "0x10E4934", Offset = "0x10E4934", VA = "0x10E4934")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600264A")]
		[Address(RVA = "0x10E49D4", Offset = "0x10E49D4", VA = "0x10E49D4")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x600264B")]
		[Address(RVA = "0x10E4AF0", Offset = "0x10E4AF0", VA = "0x10E4AF0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600264C")]
		[Address(RVA = "0x10E4CEC", Offset = "0x10E4CEC", VA = "0x10E4CEC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600264D")]
		[Address(RVA = "0x10E4EE0", Offset = "0x10E4EE0", VA = "0x10E4EE0")]
		private void Spline_NodeListChanged(object sender, ListChangedEventArgs<SplineNode> args)
		{
		}

		[Token(Token = "0x600264E")]
		[Address(RVA = "0x10E5198", Offset = "0x10E5198", VA = "0x10E5198")]
		private void OnNodeChanged(object sender, EventArgs e)
		{
		}

		[Token(Token = "0x600264F")]
		[Address(RVA = "0x10E5334", Offset = "0x10E5334", VA = "0x10E5334")]
		private void SmoothNode(SplineNode node)
		{
		}

		[Token(Token = "0x6002650")]
		[Address(RVA = "0x10E49D8", Offset = "0x10E49D8", VA = "0x10E49D8")]
		private void SmoothAll()
		{
		}

		[Token(Token = "0x6002651")]
		[Address(RVA = "0x10E55C8", Offset = "0x10E55C8", VA = "0x10E55C8")]
		public SplineSmoother()
		{
		}
	}
	[Token(Token = "0x2000590")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x918E08", Offset = "0x918E08")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x918E08", Offset = "0x918E08")]
	[ExecuteInEditMode]
	[DisallowMultipleComponent]
	public class ExtrusionSegment : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000591")]
		public class Vertex
		{
			[Token(Token = "0x400261F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector2 point;

			[Token(Token = "0x4002620")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector2 normal;

			[Token(Token = "0x4002621")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float uCoord;

			[Token(Token = "0x6002663")]
			[Address(RVA = "0xBE8AD0", Offset = "0xBE8AD0", VA = "0xBE8AD0")]
			public Vertex(Vector2 point, Vector2 normal, float uCoord)
			{
			}

			[Token(Token = "0x6002664")]
			[Address(RVA = "0xBE8B2C", Offset = "0xBE8B2C", VA = "0xBE8B2C")]
			public Vertex(Vertex other)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000592")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x918EBC", Offset = "0x918EBC")]
		private sealed class <>c
		{
			[Token(Token = "0x4002622")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002623")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<MeshVertex, Vector3> <>9__31_0;

			[Token(Token = "0x4002624")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<MeshVertex, Vector3> <>9__31_1;

			[Token(Token = "0x4002625")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<MeshVertex, Vector2> <>9__31_2;

			[Token(Token = "0x6002666")]
			[Address(RVA = "0xBE8A78", Offset = "0xBE8A78", VA = "0xBE8A78")]
			public <>c()
			{
			}

			[Token(Token = "0x6002667")]
			[Address(RVA = "0xBE8A80", Offset = "0xBE8A80", VA = "0xBE8A80")]
			internal Vector3 <Compute>b__31_0(MeshVertex b)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002668")]
			[Address(RVA = "0xBE8A9C", Offset = "0xBE8A9C", VA = "0xBE8A9C")]
			internal Vector3 <Compute>b__31_1(MeshVertex b)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002669")]
			[Address(RVA = "0xBE8AB8", Offset = "0xBE8AB8", VA = "0xBE8AB8")]
			internal Vector2 <Compute>b__31_2(MeshVertex b)
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x4002613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool isDirty;

		[Token(Token = "0x4002614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private MeshFilter mf;

		[Token(Token = "0x4002615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Mesh result;

		[Token(Token = "0x4002616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool useSpline;

		[Token(Token = "0x4002617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CubicBezierCurve curve;

		[Token(Token = "0x4002618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Spline spline;

		[Token(Token = "0x4002619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float intervalStart;

		[Token(Token = "0x400261A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float intervalEnd;

		[Token(Token = "0x400261B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Vertex> shapeVertices;

		[Token(Token = "0x400261C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float textureScale;

		[Token(Token = "0x400261D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float textureOffset;

		[Token(Token = "0x400261E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float sampleSpacing;

		[Token(Token = "0x1700027A")]
		public List<Vertex> ShapeVertices
		{
			[Token(Token = "0x6002652")]
			[Address(RVA = "0x12FDF3C", Offset = "0x12FDF3C", VA = "0x12FDF3C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002653")]
			[Address(RVA = "0x12FDF44", Offset = "0x12FDF44", VA = "0x12FDF44")]
			set
			{
			}
		}

		[Token(Token = "0x1700027B")]
		public float TextureScale
		{
			[Token(Token = "0x6002654")]
			[Address(RVA = "0x12FDF6C", Offset = "0x12FDF6C", VA = "0x12FDF6C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002655")]
			[Address(RVA = "0x12FDF74", Offset = "0x12FDF74", VA = "0x12FDF74")]
			set
			{
			}
		}

		[Token(Token = "0x1700027C")]
		public float TextureOffset
		{
			[Token(Token = "0x6002656")]
			[Address(RVA = "0x12FDF94", Offset = "0x12FDF94", VA = "0x12FDF94")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002657")]
			[Address(RVA = "0x12FDF9C", Offset = "0x12FDF9C", VA = "0x12FDF9C")]
			set
			{
			}
		}

		[Token(Token = "0x1700027D")]
		public float SampleSpacing
		{
			[Token(Token = "0x6002658")]
			[Address(RVA = "0x12FDFBC", Offset = "0x12FDFBC", VA = "0x12FDFBC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002659")]
			[Address(RVA = "0x12FDFC4", Offset = "0x12FDFC4", VA = "0x12FDFC4")]
			set
			{
			}
		}

		[Token(Token = "0x600265A")]
		[Address(RVA = "0x12FE054", Offset = "0x12FE054", VA = "0x12FE054")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600265B")]
		[Address(RVA = "0x12FE148", Offset = "0x12FE148", VA = "0x12FE148")]
		public void SetInterval(CubicBezierCurve curve)
		{
		}

		[Token(Token = "0x600265C")]
		[Address(RVA = "0x12FE294", Offset = "0x12FE294", VA = "0x12FE294")]
		public void SetInterval(Spline spline, float intervalStart, float intervalEnd = 0f)
		{
		}

		[Token(Token = "0x600265D")]
		[Address(RVA = "0x12FDF60", Offset = "0x12FDF60", VA = "0x12FDF60")]
		private void SetDirty()
		{
		}

		[Token(Token = "0x600265E")]
		[Address(RVA = "0x12FE580", Offset = "0x12FE580", VA = "0x12FE580")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600265F")]
		[Address(RVA = "0x12FE5AC", Offset = "0x12FE5AC", VA = "0x12FE5AC")]
		public void ComputeIfNeeded()
		{
		}

		[Token(Token = "0x6002660")]
		[Address(RVA = "0x12FEEA8", Offset = "0x12FEEA8", VA = "0x12FEEA8")]
		private List<CurveSample> GetPath()
		{
			return null;
		}

		[Token(Token = "0x6002661")]
		[Address(RVA = "0x12FE5D8", Offset = "0x12FE5D8", VA = "0x12FE5D8")]
		public void Compute()
		{
		}

		[Token(Token = "0x6002662")]
		[Address(RVA = "0x12FF0C4", Offset = "0x12FF0C4", VA = "0x12FF0C4")]
		public ExtrusionSegment()
		{
		}
	}
	[Token(Token = "0x2000593")]
	[DisallowMultipleComponent]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x918ECC", Offset = "0x918ECC")]
	public class MeshBender : MonoBehaviour
	{
		[Token(Token = "0x2000594")]
		public enum FillingMode
		{
			[Token(Token = "0x4002631")]
			Once,
			[Token(Token = "0x4002632")]
			Repeat,
			[Token(Token = "0x4002633")]
			StretchToInterval
		}

		[Serializable]
		[Token(Token = "0x2000595")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x918F4C", Offset = "0x918F4C")]
		private sealed class <>c
		{
			[Token(Token = "0x4002634")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002635")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<MeshVertex, Vector3> <>9__25_0;

			[Token(Token = "0x4002636")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<MeshVertex, Vector3> <>9__25_1;

			[Token(Token = "0x4002637")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<MeshVertex, Vector3> <>9__26_0;

			[Token(Token = "0x4002638")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<MeshVertex, Vector3> <>9__26_1;

			[Token(Token = "0x4002639")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<MeshVertex, Vector3> <>9__27_0;

			[Token(Token = "0x400263A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Func<MeshVertex, Vector3> <>9__27_1;

			[Token(Token = "0x600267B")]
			[Address(RVA = "0xE6A78C", Offset = "0xE6A78C", VA = "0xE6A78C")]
			public <>c()
			{
			}

			[Token(Token = "0x600267C")]
			[Address(RVA = "0xE6A794", Offset = "0xE6A794", VA = "0xE6A794")]
			internal Vector3 <FillOnce>b__25_0(MeshVertex b)
			{
				return default(Vector3);
			}

			[Token(Token = "0x600267D")]
			[Address(RVA = "0xE6A7B0", Offset = "0xE6A7B0", VA = "0xE6A7B0")]
			internal Vector3 <FillOnce>b__25_1(MeshVertex b)
			{
				return default(Vector3);
			}

			[Token(Token = "0x600267E")]
			[Address(RVA = "0xE6A7CC", Offset = "0xE6A7CC", VA = "0xE6A7CC")]
			internal Vector3 <FillRepeat>b__26_0(MeshVertex b)
			{
				return default(Vector3);
			}

			[Token(Token = "0x600267F")]
			[Address(RVA = "0xE6A7E8", Offset = "0xE6A7E8", VA = "0xE6A7E8")]
			internal Vector3 <FillRepeat>b__26_1(MeshVertex b)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002680")]
			[Address(RVA = "0xE6A804", Offset = "0xE6A804", VA = "0xE6A804")]
			internal Vector3 <FillStretch>b__27_0(MeshVertex b)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002681")]
			[Address(RVA = "0xE6A820", Offset = "0xE6A820", VA = "0xE6A820")]
			internal Vector3 <FillStretch>b__27_1(MeshVertex b)
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x4002626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool isDirty;

		[Token(Token = "0x4002627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Mesh result;

		[Token(Token = "0x4002628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool useSpline;

		[Token(Token = "0x4002629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Spline spline;

		[Token(Token = "0x400262A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float intervalStart;

		[Token(Token = "0x400262B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float intervalEnd;

		[Token(Token = "0x400262C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private CubicBezierCurve curve;

		[Token(Token = "0x400262D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Dictionary<float, CurveSample> sampleCache;

		[Token(Token = "0x400262E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private SourceMesh source;

		[Token(Token = "0x400262F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private FillingMode mode;

		[Token(Token = "0x1700027E")]
		public SourceMesh Source
		{
			[Token(Token = "0x600266A")]
			[Address(RVA = "0x1366AEC", Offset = "0x1366AEC", VA = "0x1366AEC")]
			get
			{
				return default(SourceMesh);
			}
			[Token(Token = "0x600266B")]
			[Address(RVA = "0x1366AFC", Offset = "0x1366AFC", VA = "0x1366AFC")]
			set
			{
			}
		}

		[Token(Token = "0x1700027F")]
		public FillingMode Mode
		{
			[Token(Token = "0x600266C")]
			[Address(RVA = "0x1366B84", Offset = "0x1366B84", VA = "0x1366B84")]
			get
			{
				return default(FillingMode);
			}
			[Token(Token = "0x600266D")]
			[Address(RVA = "0x1366B8C", Offset = "0x1366B8C", VA = "0x1366B8C")]
			set
			{
			}
		}

		[Token(Token = "0x600266E")]
		[Address(RVA = "0x1366BA8", Offset = "0x1366BA8", VA = "0x1366BA8")]
		public void SetInterval(CubicBezierCurve curve)
		{
		}

		[Token(Token = "0x600266F")]
		[Address(RVA = "0x1366CF8", Offset = "0x1366CF8", VA = "0x1366CF8")]
		public void SetInterval(Spline spline, float intervalStart, float intervalEnd = 0f)
		{
		}

		[Token(Token = "0x6002670")]
		[Address(RVA = "0x1366FE4", Offset = "0x1366FE4", VA = "0x1366FE4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002671")]
		[Address(RVA = "0x1367164", Offset = "0x1367164", VA = "0x1367164")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6002672")]
		[Address(RVA = "0x1367174", Offset = "0x1367174", VA = "0x1367174")]
		public void ComputeIfNeeded()
		{
		}

		[Token(Token = "0x6002673")]
		[Address(RVA = "0x1366B78", Offset = "0x1366B78", VA = "0x1366B78")]
		private void SetDirty()
		{
		}

		[Token(Token = "0x6002674")]
		[Address(RVA = "0x1367184", Offset = "0x1367184", VA = "0x1367184")]
		private void Compute()
		{
		}

		[Token(Token = "0x6002675")]
		[Address(RVA = "0x1368994", Offset = "0x1368994", VA = "0x1368994")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002676")]
		[Address(RVA = "0x13671B0", Offset = "0x13671B0", VA = "0x13671B0")]
		private void FillOnce()
		{
		}

		[Token(Token = "0x6002677")]
		[Address(RVA = "0x1367718", Offset = "0x1367718", VA = "0x1367718")]
		private void FillRepeat()
		{
		}

		[Token(Token = "0x6002678")]
		[Address(RVA = "0x1368080", Offset = "0x1368080", VA = "0x1368080")]
		private void FillStretch()
		{
		}

		[Token(Token = "0x6002679")]
		[Address(RVA = "0x1368DF8", Offset = "0x1368DF8", VA = "0x1368DF8")]
		public MeshBender()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000596")]
	public class MeshVertex
	{
		[Token(Token = "0x400263B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 position;

		[Token(Token = "0x400263C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 normal;

		[Token(Token = "0x400263D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector2 uv;

		[Token(Token = "0x6002682")]
		[Address(RVA = "0x11E236C", Offset = "0x11E236C", VA = "0x11E236C")]
		public MeshVertex(Vector3 position, Vector3 normal, Vector2 uv)
		{
		}

		[Token(Token = "0x6002683")]
		[Address(RVA = "0x11E23E0", Offset = "0x11E23E0", VA = "0x11E23E0")]
		public MeshVertex(Vector3 position, Vector3 normal)
		{
		}
	}
	[Token(Token = "0x2000597")]
	public struct SourceMesh
	{
		[Token(Token = "0x400263E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3 translation;

		[Token(Token = "0x400263F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private Quaternion rotation;

		[Token(Token = "0x4002640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Vector3 scale;

		[Token(Token = "0x4002641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91DE64", Offset = "0x91DE64")]
		private readonly Mesh <Mesh>k__BackingField;

		[Token(Token = "0x4002642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<MeshVertex> vertices;

		[Token(Token = "0x4002643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int[] triangles;

		[Token(Token = "0x4002644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float minX;

		[Token(Token = "0x4002645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float length;

		[Token(Token = "0x17000280")]
		internal readonly Mesh Mesh
		{
			[Token(Token = "0x6002684")]
			[Address(RVA = "0x10DD7E8", Offset = "0x10DD7E8", VA = "0x10DD7E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92E470", Offset = "0x92E470")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000281")]
		internal List<MeshVertex> Vertices
		{
			[Token(Token = "0x6002685")]
			[Address(RVA = "0x10DD7F0", Offset = "0x10DD7F0", VA = "0x10DD7F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000282")]
		internal int[] Triangles
		{
			[Token(Token = "0x6002686")]
			[Address(RVA = "0x10DDCF4", Offset = "0x10DDCF4", VA = "0x10DDCF4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000283")]
		internal float MinX
		{
			[Token(Token = "0x6002687")]
			[Address(RVA = "0x10DDD24", Offset = "0x10DDD24", VA = "0x10DDD24")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000284")]
		internal float Length
		{
			[Token(Token = "0x6002688")]
			[Address(RVA = "0x10DDD54", Offset = "0x10DDD54", VA = "0x10DDD54")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002689")]
		[Address(RVA = "0x10DDD84", Offset = "0x10DDD84", VA = "0x10DDD84")]
		private SourceMesh(Mesh mesh)
		{
		}

		[Token(Token = "0x600268A")]
		[Address(RVA = "0x10DDD9C", Offset = "0x10DDD9C", VA = "0x10DDD9C")]
		private SourceMesh(SourceMesh other)
		{
		}

		[Token(Token = "0x600268B")]
		[Address(RVA = "0x10DDDD8", Offset = "0x10DDDD8", VA = "0x10DDDD8")]
		public static SourceMesh Build(Mesh mesh)
		{
			return default(SourceMesh);
		}

		[Token(Token = "0x600268C")]
		[Address(RVA = "0x10DDDF0", Offset = "0x10DDDF0", VA = "0x10DDDF0")]
		public SourceMesh Translate(Vector3 translation)
		{
			return default(SourceMesh);
		}

		[Token(Token = "0x600268D")]
		[Address(RVA = "0x10DDE20", Offset = "0x10DDE20", VA = "0x10DDE20")]
		public SourceMesh Translate(float x, float y, float z)
		{
			return default(SourceMesh);
		}

		[Token(Token = "0x600268E")]
		[Address(RVA = "0x10DDE50", Offset = "0x10DDE50", VA = "0x10DDE50")]
		public SourceMesh Rotate(Quaternion rotation)
		{
			return default(SourceMesh);
		}

		[Token(Token = "0x600268F")]
		[Address(RVA = "0x10DDE88", Offset = "0x10DDE88", VA = "0x10DDE88")]
		public SourceMesh Scale(Vector3 scale)
		{
			return default(SourceMesh);
		}

		[Token(Token = "0x6002690")]
		[Address(RVA = "0x10DDEB8", Offset = "0x10DDEB8", VA = "0x10DDEB8")]
		public SourceMesh Scale(float x, float y, float z)
		{
			return default(SourceMesh);
		}

		[Token(Token = "0x6002691")]
		[Address(RVA = "0x10DD820", Offset = "0x10DD820", VA = "0x10DD820")]
		private void BuildData()
		{
		}

		[Token(Token = "0x6002692")]
		[Address(RVA = "0x10DDEE8", Offset = "0x10DDEE8", VA = "0x10DDEE8", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6002693")]
		[Address(RVA = "0x10DE0E4", Offset = "0x10DE0E4", VA = "0x10DE0E4", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6002694")]
		[Address(RVA = "0x10DE15C", Offset = "0x10DE15C", VA = "0x10DE15C")]
		public static bool operator ==(SourceMesh sm1, SourceMesh sm2)
		{
			return default(bool);
		}

		[Token(Token = "0x6002695")]
		[Address(RVA = "0x10DE1E0", Offset = "0x10DE1E0", VA = "0x10DE1E0")]
		public static bool operator !=(SourceMesh sm1, SourceMesh sm2)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000598")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x918F5C", Offset = "0x918F5C")]
	public class SplineExtrusion : MonoBehaviour
	{
		[Token(Token = "0x4002646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Spline spline;

		[Token(Token = "0x4002647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool toUpdate;

		[Token(Token = "0x4002648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject generated;

		[Token(Token = "0x4002649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<ExtrusionSegment.Vertex> shapeVertices;

		[Token(Token = "0x400264A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Material material;

		[Token(Token = "0x400264B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float textureScale;

		[Token(Token = "0x400264C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float sampleSpacing;

		[Token(Token = "0x6002696")]
		[Address(RVA = "0x10E3054", Offset = "0x10E3054", VA = "0x10E3054")]
		private void Reset()
		{
		}

		[Token(Token = "0x6002697")]
		[Address(RVA = "0x10E340C", Offset = "0x10E340C", VA = "0x10E340C")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6002698")]
		[Address(RVA = "0x10E31B8", Offset = "0x10E31B8", VA = "0x10E31B8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002699")]
		[Address(RVA = "0x10E3418", Offset = "0x10E3418", VA = "0x10E3418")]
		private void Update()
		{
		}

		[Token(Token = "0x600269A")]
		[Address(RVA = "0x10E3444", Offset = "0x10E3444", VA = "0x10E3444")]
		private void GenerateMesh()
		{
		}

		[Token(Token = "0x600269B")]
		[Address(RVA = "0x10E3A40", Offset = "0x10E3A40", VA = "0x10E3A40")]
		public void SetToUpdate()
		{
		}

		[Token(Token = "0x600269C")]
		[Address(RVA = "0x10E3A4C", Offset = "0x10E3A4C", VA = "0x10E3A4C")]
		public SplineExtrusion()
		{
		}

		[Token(Token = "0x600269D")]
		[Address(RVA = "0x10E3AD8", Offset = "0x10E3AD8", VA = "0x10E3AD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92E4A8", Offset = "0x92E4A8")]
		private void <OnEnable>b__9_0(object s, ListChangedEventArgs<SplineNode> e)
		{
		}
	}
	[Token(Token = "0x2000599")]
	[ExecuteInEditMode]
	[DisallowMultipleComponent]
	[SelectionBase]
	public class SplineMeshTiling : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200059A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x919014", Offset = "0x919014")]
		private sealed class <>c
		{
			[Token(Token = "0x400265A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400265B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Transform, GameObject> <>9__16_0;

			[Token(Token = "0x60026A6")]
			[Address(RVA = "0x136FC30", Offset = "0x136FC30", VA = "0x136FC30")]
			public <>c()
			{
			}

			[Token(Token = "0x60026A7")]
			[Address(RVA = "0x136FC38", Offset = "0x136FC38", VA = "0x136FC38")]
			internal GameObject <CreateMeshes>b__16_0(Transform child)
			{
				return null;
			}
		}

		[Token(Token = "0x400264D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GameObject generated;

		[Token(Token = "0x400264E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Spline spline;

		[Token(Token = "0x400264F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool toUpdate;

		[Token(Token = "0x4002650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91DE74", Offset = "0x91DE74")]
		public Mesh mesh;

		[Token(Token = "0x4002651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91DEAC", Offset = "0x91DEAC")]
		public Material material;

		[Token(Token = "0x4002652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91DEE4", Offset = "0x91DEE4")]
		public PhysicMaterial physicMaterial;

		[Token(Token = "0x4002653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91DF1C", Offset = "0x91DF1C")]
		public Vector3 translation;

		[Token(Token = "0x4002654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91DF54", Offset = "0x91DF54")]
		public Vector3 rotation;

		[Token(Token = "0x4002655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91DF8C", Offset = "0x91DF8C")]
		public Vector3 scale;

		[Token(Token = "0x4002656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91DFC4", Offset = "0x91DFC4")]
		public bool generateCollider;

		[Token(Token = "0x4002657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91DFFC", Offset = "0x91DFFC")]
		public bool updateInPlayMode;

		[Token(Token = "0x4002658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6E")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91E034", Offset = "0x91E034")]
		public bool curveSpace;

		[Token(Token = "0x4002659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91E06C", Offset = "0x91E06C")]
		public MeshBender.FillingMode mode;

		[Token(Token = "0x600269E")]
		[Address(RVA = "0x10E3AE4", Offset = "0x10E3AE4", VA = "0x10E3AE4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600269F")]
		[Address(RVA = "0x10E3D44", Offset = "0x10E3D44", VA = "0x10E3D44")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60026A0")]
		[Address(RVA = "0x10E3DC0", Offset = "0x10E3DC0", VA = "0x10E3DC0")]
		private void Update()
		{
		}

		[Token(Token = "0x60026A1")]
		[Address(RVA = "0x10E3E0C", Offset = "0x10E3E0C", VA = "0x10E3E0C")]
		public void CreateMeshes()
		{
		}

		[Token(Token = "0x60026A2")]
		[Address(RVA = "0x10E4504", Offset = "0x10E4504", VA = "0x10E4504")]
		private GameObject FindOrCreate(string name)
		{
			return null;
		}

		[Token(Token = "0x60026A3")]
		[Address(RVA = "0x10E48B0", Offset = "0x10E48B0", VA = "0x10E48B0")]
		public SplineMeshTiling()
		{
		}

		[Token(Token = "0x60026A4")]
		[Address(RVA = "0x10E48F4", Offset = "0x10E48F4", VA = "0x10E48F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92E4B8", Offset = "0x92E4B8")]
		private void <OnEnable>b__13_0(object s, ListChangedEventArgs<SplineNode> e)
		{
		}
	}
	[Token(Token = "0x200059B")]
	public static class CameraUtility
	{
		[Token(Token = "0x60026A8")]
		[Address(RVA = "0x102FCB4", Offset = "0x102FCB4", VA = "0x102FCB4")]
		public static bool IsOnScreen(Vector3 position)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200059C")]
	public class MeshUtility
	{
		[Token(Token = "0x60026A9")]
		[Address(RVA = "0x136D480", Offset = "0x136D480", VA = "0x136D480")]
		public static int[] GetReversedTriangles(Mesh mesh)
		{
			return null;
		}

		[Token(Token = "0x60026AA")]
		[Address(RVA = "0x1368A40", Offset = "0x1368A40", VA = "0x1368A40")]
		public static void Update(Mesh mesh, Mesh source, [Optional] IEnumerable<int> triangles, [Optional] IEnumerable<Vector3> vertices, [Optional] IEnumerable<Vector3> normals, [Optional] IEnumerable<Vector2> uv, [Optional] IEnumerable<Vector2> uv2, [Optional] IEnumerable<Vector2> uv3, [Optional] IEnumerable<Vector2> uv4, [Optional] IEnumerable<Vector2> uv5, [Optional] IEnumerable<Vector2> uv6, [Optional] IEnumerable<Vector2> uv7, [Optional] IEnumerable<Vector2> uv8)
		{
		}

		[Token(Token = "0x60026AB")]
		[Address(RVA = "0x136D57C", Offset = "0x136D57C", VA = "0x136D57C")]
		public MeshUtility()
		{
		}
	}
	[Token(Token = "0x200059D")]
	public static class UOUtility
	{
		[Token(Token = "0x60026AC")]
		[Address(RVA = "0xED2C5C", Offset = "0xED2C5C", VA = "0xED2C5C")]
		public static GameObject Create(string name, GameObject parent, params Type[] components)
		{
			return null;
		}

		[Token(Token = "0x60026AD")]
		[Address(RVA = "0xED2D84", Offset = "0xED2D84", VA = "0xED2D84")]
		public static GameObject Instantiate(GameObject prefab, Transform parent)
		{
			return null;
		}

		[Token(Token = "0x60026AE")]
		[Address(RVA = "0xED2E94", Offset = "0xED2E94", VA = "0xED2E94")]
		public static void Destroy(GameObject go)
		{
		}

		[Token(Token = "0x60026AF")]
		[Address(RVA = "0xED2F30", Offset = "0xED2F30", VA = "0xED2F30")]
		public static void Destroy(Component comp)
		{
		}

		[Token(Token = "0x60026B0")]
		[Address(RVA = "0xED2FCC", Offset = "0xED2FCC", VA = "0xED2FCC")]
		public static void DestroyChildren(GameObject go)
		{
		}
	}
}
namespace OrbCreationExtensions
{
	[Token(Token = "0x200059E")]
	public static class FloatExtensions
	{
		[Token(Token = "0x60026B1")]
		[Address(RVA = "0x130C424", Offset = "0x130C424", VA = "0x130C424")]
		public static string MakeString(this float aFloat)
		{
			return null;
		}

		[Token(Token = "0x60026B2")]
		[Address(RVA = "0x130C480", Offset = "0x130C480", VA = "0x130C480")]
		public static string MakeString(this float aFloat, int decimals)
		{
			return null;
		}

		[Token(Token = "0x60026B3")]
		[Address(RVA = "0x130C598", Offset = "0x130C598", VA = "0x130C598")]
		public static float To180Angle(this float f)
		{
			return default(float);
		}

		[Token(Token = "0x60026B4")]
		[Address(RVA = "0x130C5E4", Offset = "0x130C5E4", VA = "0x130C5E4")]
		public static float To360Angle(this float f)
		{
			return default(float);
		}

		[Token(Token = "0x60026B5")]
		[Address(RVA = "0x130C628", Offset = "0x130C628", VA = "0x130C628")]
		public static float RadToCompassAngle(this float rad)
		{
			return default(float);
		}

		[Token(Token = "0x60026B6")]
		[Address(RVA = "0x130C684", Offset = "0x130C684", VA = "0x130C684")]
		public static float DegreesToCompassAngle(this float angle)
		{
			return default(float);
		}

		[Token(Token = "0x60026B7")]
		[Address(RVA = "0x130C6D4", Offset = "0x130C6D4", VA = "0x130C6D4")]
		public static float Distance(this float f1, float f2)
		{
			return default(float);
		}

		[Token(Token = "0x60026B8")]
		[Address(RVA = "0x130C6DC", Offset = "0x130C6DC", VA = "0x130C6DC")]
		public static float RelativePositionBetweenAngles(this float angle, float from, float to)
		{
			return default(float);
		}

		[Token(Token = "0x60026B9")]
		[Address(RVA = "0x130C81C", Offset = "0x130C81C", VA = "0x130C81C")]
		public static float Round(this float f, int decimals)
		{
			return default(float);
		}
	}
	[Token(Token = "0x200059F")]
	public static class GameObjectExtensions
	{
		[Token(Token = "0x20005A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x919044", Offset = "0x919044")]
		private sealed class <SetUpLODLevelsWithLODSwitcherInBackground>d__32 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400265C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400265D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400265E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameObject go;

			[Token(Token = "0x400265F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float[] maxWeights;

			[Token(Token = "0x4002660")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float removeSmallParts;

			[Token(Token = "0x4002661")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public bool recalcNormals;

			[Token(Token = "0x4002662")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float[] lodScreenSizes;

			[Token(Token = "0x4002663")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Mesh <mesh>5__2;

			[Token(Token = "0x4002664")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private LODSwitcher <lodSwitcher>5__3;

			[Token(Token = "0x4002665")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Mesh <mesh0>5__4;

			[Token(Token = "0x4002666")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Mesh[] <lodMeshes>5__5;

			[Token(Token = "0x4002667")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private int <i>5__6;

			[Token(Token = "0x4002668")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private System.Collections.Hashtable <lodInfo>5__7;

			[Token(Token = "0x17000285")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60026E5")]
				[Address(RVA = "0xBECBA0", Offset = "0xBECBA0", VA = "0xBECBA0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000286")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60026E7")]
				[Address(RVA = "0xBECBE8", Offset = "0xBECBE8", VA = "0xBECBE8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60026E2")]
			[Address(RVA = "0xBEB88C", Offset = "0xBEB88C", VA = "0xBEB88C")]
			[DebuggerHidden]
			public <SetUpLODLevelsWithLODSwitcherInBackground>d__32(int <>1__state)
			{
			}

			[Token(Token = "0x60026E3")]
			[Address(RVA = "0xBEB8B8", Offset = "0xBEB8B8", VA = "0xBEB8B8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60026E4")]
			[Address(RVA = "0xBEB8BC", Offset = "0xBEB8BC", VA = "0xBEB8BC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60026E6")]
			[Address(RVA = "0xBECBA8", Offset = "0xBECBA8", VA = "0xBECBA8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005A1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x919054", Offset = "0x919054")]
		private sealed class <GetSimplifiedMeshInBackground>d__36 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002669")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400266A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400266B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameObject go;

			[Token(Token = "0x400266C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float maxWeight;

			[Token(Token = "0x400266D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float removeSmallParts;

			[Token(Token = "0x400266E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action<Mesh> result;

			[Token(Token = "0x400266F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool recalcNormals;

			[Token(Token = "0x4002670")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private System.Collections.Hashtable <lodInfo>5__2;

			[Token(Token = "0x17000287")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60026EB")]
				[Address(RVA = "0xBEB83C", Offset = "0xBEB83C", VA = "0xBEB83C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000288")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60026ED")]
				[Address(RVA = "0xBEB884", Offset = "0xBEB884", VA = "0xBEB884", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60026E8")]
			[Address(RVA = "0xBEA9DC", Offset = "0xBEA9DC", VA = "0xBEA9DC")]
			[DebuggerHidden]
			public <GetSimplifiedMeshInBackground>d__36(int <>1__state)
			{
			}

			[Token(Token = "0x60026E9")]
			[Address(RVA = "0xBEAA08", Offset = "0xBEAA08", VA = "0xBEAA08", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60026EA")]
			[Address(RVA = "0xBEAA0C", Offset = "0xBEAA0C", VA = "0xBEAA0C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60026EC")]
			[Address(RVA = "0xBEB844", Offset = "0xBEB844", VA = "0xBEB844", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x60026BA")]
		[Address(RVA = "0x146AE84", Offset = "0x146AE84", VA = "0x146AE84")]
		public static Bounds GetWorldBounds(this GameObject go)
		{
			return default(Bounds);
		}

		[Token(Token = "0x60026BB")]
		[Address(RVA = "0x146B084", Offset = "0x146B084", VA = "0x146B084")]
		public static Vector3[] GetBoundsCorners(this Bounds bounds)
		{
			return null;
		}

		[Token(Token = "0x60026BC")]
		[Address(RVA = "0x146B1A4", Offset = "0x146B1A4", VA = "0x146B1A4")]
		public static Vector3[] GetBoundsCenterAndCorners(this Bounds bounds)
		{
			return null;
		}

		[Token(Token = "0x60026BD")]
		[Address(RVA = "0x146B2E0", Offset = "0x146B2E0", VA = "0x146B2E0")]
		public static Vector3[] GetWorldBoundsCorners(this GameObject go)
		{
			return null;
		}

		[Token(Token = "0x60026BE")]
		[Address(RVA = "0x146B308", Offset = "0x146B308", VA = "0x146B308")]
		public static Vector3[] GetWorldBoundsCenterAndCorners(this GameObject go)
		{
			return null;
		}

		[Token(Token = "0x60026BF")]
		[Address(RVA = "0x146B330", Offset = "0x146B330", VA = "0x146B330")]
		public static float GetModelComplexity(this GameObject go)
		{
			return default(float);
		}

		[Token(Token = "0x60026C0")]
		[Address(RVA = "0x146B48C", Offset = "0x146B48C", VA = "0x146B48C")]
		public static string GetModelInfoString(this GameObject go)
		{
			return null;
		}

		[Token(Token = "0x60026C1")]
		[Address(RVA = "0x146B734", Offset = "0x146B734", VA = "0x146B734")]
		public static GameObject TopParent(this GameObject go)
		{
			return null;
		}

		[Token(Token = "0x60026C2")]
		[Address(RVA = "0x146B7F4", Offset = "0x146B7F4", VA = "0x146B7F4")]
		public static GameObject FindParentWithName(this GameObject go, string parentName)
		{
			return null;
		}

		[Token(Token = "0x60026C3")]
		[Address(RVA = "0x146B8DC", Offset = "0x146B8DC", VA = "0x146B8DC")]
		public static GameObject FindMutualParent(this GameObject go1, GameObject go2)
		{
			return null;
		}

		[Token(Token = "0x60026C4")]
		[Address(RVA = "0x146BA98", Offset = "0x146BA98", VA = "0x146BA98")]
		public static GameObject FindFirstChildWithName(this GameObject go, string childName)
		{
			return null;
		}

		[Token(Token = "0x60026C5")]
		[Address(RVA = "0x146BBB8", Offset = "0x146BBB8", VA = "0x146BBB8")]
		public static bool IsChildWithNameUnique(this GameObject go, string childName)
		{
			return default(bool);
		}

		[Token(Token = "0x60026C6")]
		[Address(RVA = "0x146BBE8", Offset = "0x146BBE8", VA = "0x146BBE8")]
		public static void CountChildrenWithName(this GameObject go, string childName, ref int total)
		{
		}

		[Token(Token = "0x60026C7")]
		[Address(RVA = "0x146BEC4", Offset = "0x146BEC4", VA = "0x146BEC4")]
		public static GameObject GetGameObjectNamed(this GameObject go, string aStr, GameObject parentGO)
		{
			return null;
		}

		[Token(Token = "0x60026C8")]
		[Address(RVA = "0x146BFC4", Offset = "0x146BFC4", VA = "0x146BFC4")]
		public static void DestroyChildren(this GameObject go, bool disabledOnly)
		{
		}

		[Token(Token = "0x60026C9")]
		public static T GetFirstComponentInParents<T>(this GameObject go) where T : Component
		{
			return null;
		}

		[Token(Token = "0x60026CA")]
		public static T GetFirstComponentInChildren<T>(this GameObject go) where T : Component
		{
			return null;
		}

		[Token(Token = "0x60026CB")]
		[Address(RVA = "0x146C3E8", Offset = "0x146C3E8", VA = "0x146C3E8")]
		public static Mesh[] GetMeshes(this GameObject aGo)
		{
			return null;
		}

		[Token(Token = "0x60026CC")]
		[Address(RVA = "0x146C3F0", Offset = "0x146C3F0", VA = "0x146C3F0")]
		public static Mesh[] GetMeshes(this GameObject aGo, bool includeDisabled)
		{
			return null;
		}

		[Token(Token = "0x60026CD")]
		[Address(RVA = "0x146C5F4", Offset = "0x146C5F4", VA = "0x146C5F4")]
		public static int GetTotalVertexCount(this GameObject aGo)
		{
			return default(int);
		}

		[Token(Token = "0x60026CE")]
		[Address(RVA = "0x146C7D8", Offset = "0x146C7D8", VA = "0x146C7D8")]
		public static Mesh Get1stSharedMesh(this GameObject aGo)
		{
			return null;
		}

		[Token(Token = "0x60026CF")]
		[Address(RVA = "0x146C9DC", Offset = "0x146C9DC", VA = "0x146C9DC")]
		public static void SetMeshes(this GameObject aGo, Mesh[] meshes)
		{
		}

		[Token(Token = "0x60026D0")]
		[Address(RVA = "0x146CF00", Offset = "0x146CF00", VA = "0x146CF00")]
		public static void SetMeshes(this GameObject aGo, Mesh[] meshes, int lodLevel)
		{
		}

		[Token(Token = "0x60026D1")]
		[Address(RVA = "0x146C9E8", Offset = "0x146C9E8", VA = "0x146C9E8")]
		public static void SetMeshes(this GameObject aGo, Mesh[] meshes, bool includeDisabled, int lodLevel)
		{
		}

		[Token(Token = "0x60026D2")]
		[Address(RVA = "0x146CF0C", Offset = "0x146CF0C", VA = "0x146CF0C")]
		public static Material[] GetMaterials(this GameObject aGo, bool includeDisabled)
		{
			return null;
		}

		[Token(Token = "0x60026D3")]
		[Address(RVA = "0x146D0D4", Offset = "0x146D0D4", VA = "0x146D0D4")]
		public static Mesh[] CombineMeshes(this GameObject aGO)
		{
			return null;
		}

		[Token(Token = "0x60026D4")]
		[Address(RVA = "0x146D12C", Offset = "0x146D12C", VA = "0x146D12C")]
		public static Mesh[] CombineMeshes(this GameObject aGO, string[] skipSubmeshNames)
		{
			return null;
		}

		[Token(Token = "0x60026D5")]
		[Address(RVA = "0x14711E4", Offset = "0x14711E4", VA = "0x14711E4")]
		private static int GiveUniqueNameIfNeeded(GameObject aGo, GameObject topGO, int uniqueId)
		{
			return default(int);
		}

		[Token(Token = "0x60026D6")]
		[Address(RVA = "0x14712C4", Offset = "0x14712C4", VA = "0x14712C4")]
		public static void SetUpLODLevels(this GameObject go)
		{
		}

		[Token(Token = "0x60026D7")]
		[Address(RVA = "0x14712CC", Offset = "0x14712CC", VA = "0x14712CC")]
		public static void SetUpLODLevels(this GameObject go, float maxWeight)
		{
		}

		[Token(Token = "0x60026D8")]
		[Address(RVA = "0x14713B8", Offset = "0x14713B8", VA = "0x14713B8")]
		public static void SetUpLODLevels(this GameObject go, float[] lodScreenSizes, float[] maxWeights)
		{
		}

		[Token(Token = "0x60026D9")]
		[Address(RVA = "0x14714B4", Offset = "0x14714B4", VA = "0x14714B4")]
		public static Mesh[] SetUpLODLevelsWithLODSwitcher(this GameObject go, float[] lodScreenSizes, float[] maxWeights, bool recalcNormals, float removeSmallParts = 1f, float protectNormals = 1f, float protectUvs = 1f, float protectSubMeshesAndSharpEdges = 1f, float smallTrianglesFirst = 1f, int nrOfSteps = 1)
		{
			return null;
		}

		[Token(Token = "0x60026DA")]
		[Address(RVA = "0x1471968", Offset = "0x1471968", VA = "0x1471968")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92E748", Offset = "0x92E748")]
		public static IEnumerator SetUpLODLevelsWithLODSwitcherInBackground(this GameObject go, float[] lodScreenSizes, float[] maxWeights, bool recalcNormals, float removeSmallParts = 1f, float protectNormals = 1f, float protectUvs = 1f, float protectSubMeshesAndSharpEdges = 1f, float smallTrianglesFirst = 1f)
		{
			return null;
		}

		[Token(Token = "0x60026DB")]
		[Address(RVA = "0x1471A0C", Offset = "0x1471A0C", VA = "0x1471A0C")]
		public static Mesh[] SetUpLODLevelsAndChildrenWithLODSwitcher(this GameObject go, float[] lodScreenSizes, float[] maxWeights, bool recalcNormals, float removeSmallParts, float protectNormals = 1f, float protectUvs = 1f, float protectSubMeshesAndSharpEdges = 1f, float smallTrianglesFirst = 1f, int nrOfSteps = 1)
		{
			return null;
		}

		[Token(Token = "0x60026DC")]
		[Address(RVA = "0x1472480", Offset = "0x1472480", VA = "0x1472480")]
		public static Mesh[] SetUpLODLevelsAndChildrenWithLODGroup(this GameObject go, float[] relativeTransitionHeights, float[] maxWeights, bool recalcNormals, float removeSmallParts, float protectNormals = 1f, float protectUvs = 1f, float protectSubMeshesAndSharpEdges = 1f, float smallTrianglesFirst = 1f, int nrOfSteps = 1)
		{
			return null;
		}

		[Token(Token = "0x60026DD")]
		[Address(RVA = "0x1473040", Offset = "0x1473040", VA = "0x1473040")]
		public static Mesh GetSimplifiedMesh(this GameObject go, float maxWeight, bool recalcNormals, float removeSmallParts, float protectNormals = 1f, float protectUvs = 1f, float protectSubMeshesAndSharpEdges = 1f, float smallTrianglesFirst = 1f, int nrOfSteps = 1)
		{
			return null;
		}

		[Token(Token = "0x60026DE")]
		[Address(RVA = "0x14733AC", Offset = "0x14733AC", VA = "0x14733AC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92E7E8", Offset = "0x92E7E8")]
		public static IEnumerator GetSimplifiedMeshInBackground(this GameObject go, float maxWeight, bool recalcNormals, float removeSmallParts, Action<Mesh> result)
		{
			return null;
		}

		[Token(Token = "0x60026DF")]
		[Address(RVA = "0x146F69C", Offset = "0x146F69C", VA = "0x146F69C")]
		private static bool MergeMeshInto(Mesh fromMesh, Transform[] fromBones, Material[] fromMaterials, List<Vector3> vertices, List<Vector3> normals, List<Vector2> uv1s, List<Vector2> uv2s, List<Vector2> uv3s, List<Vector2> uv4s, List<Color32> colors32, List<BoneWeight> boneWeights, List<Transform> bones, List<Matrix4x4> bindposes, Dictionary<Material, List<int>> subMeshes, bool usesNegativeScale, Vector4 lightmapScaleOffset, Transform fromTransform, Transform topTransform, string submeshName, string[] skipSubmeshNames)
		{
			return default(bool);
		}

		[Token(Token = "0x60026E0")]
		[Address(RVA = "0x1473448", Offset = "0x1473448", VA = "0x1473448")]
		private static Vector3 ApplyBindPose(Vector3 vertex, Transform bone, Matrix4x4 bindpose, float boneWeight)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60026E1")]
		[Address(RVA = "0x147355C", Offset = "0x147355C", VA = "0x147355C")]
		private static Vector3 UnApplyBindPose(Vector3 vertex, Transform bone, Matrix4x4 bindpose, float boneWeight)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x20005A2")]
	public static class MeshExtensions
	{
		[Token(Token = "0x20005A3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x919074", Offset = "0x919074")]
		private sealed class <MakeLODMeshInBackground>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002671")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002672")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002673")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float maxWeight;

			[Token(Token = "0x4002674")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float removeSmallParts;

			[Token(Token = "0x4002675")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Mesh mesh;

			[Token(Token = "0x4002676")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action<Mesh> result;

			[Token(Token = "0x4002677")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool recalcNormals;

			[Token(Token = "0x4002678")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private System.Collections.Hashtable <lodInfo>5__2;

			[Token(Token = "0x17000289")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002705")]
				[Address(RVA = "0xE6B528", Offset = "0xE6B528", VA = "0xE6B528", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700028A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002707")]
				[Address(RVA = "0xE6B570", Offset = "0xE6B570", VA = "0xE6B570", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002702")]
			[Address(RVA = "0xE6A83C", Offset = "0xE6A83C", VA = "0xE6A83C")]
			[DebuggerHidden]
			public <MakeLODMeshInBackground>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6002703")]
			[Address(RVA = "0xE6A868", Offset = "0xE6A868", VA = "0xE6A868", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002704")]
			[Address(RVA = "0xE6A86C", Offset = "0xE6A86C", VA = "0xE6A86C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002706")]
			[Address(RVA = "0xE6B530", Offset = "0xE6B530", VA = "0xE6B530", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x60026EE")]
		[Address(RVA = "0x1369F20", Offset = "0x1369F20", VA = "0x1369F20")]
		public static void RecalculateTangents(this Mesh mesh)
		{
		}

		[Token(Token = "0x60026EF")]
		[Address(RVA = "0x136A40C", Offset = "0x136A40C", VA = "0x136A40C")]
		public static Mesh ScaledRotatedTranslatedMesh(this Mesh mesh, Vector3 scale, Quaternion rotate, Vector3 translate)
		{
			return null;
		}

		[Token(Token = "0x60026F0")]
		[Address(RVA = "0x136A6A4", Offset = "0x136A6A4", VA = "0x136A6A4")]
		public static bool IsSkinnedMesh(this Mesh mesh)
		{
			return default(bool);
		}

		[Token(Token = "0x60026F1")]
		[Address(RVA = "0x136A70C", Offset = "0x136A70C", VA = "0x136A70C")]
		public static int GetTriangleCount(this Mesh orig)
		{
			return default(int);
		}

		[Token(Token = "0x60026F2")]
		[Address(RVA = "0x136A74C", Offset = "0x136A74C", VA = "0x136A74C")]
		public static Mesh MakeLODMesh(this Mesh orig, float aMaxWeight, bool recalcNormals, float removeSmallParts = 1f, float protectNormals = 1f, float protectUvs = 1f, float protectSubMeshesAndSharpEdges = 1f, float smallTrianglesFirst = 1f)
		{
			return null;
		}

		[Token(Token = "0x60026F3")]
		[Address(RVA = "0x136A75C", Offset = "0x136A75C", VA = "0x136A75C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92E948", Offset = "0x92E948")]
		public static IEnumerator MakeLODMeshInBackground(this Mesh mesh, float maxWeight, bool recalcNormals, float removeSmallParts, Action<Mesh> result)
		{
			return null;
		}

		[Token(Token = "0x60026F4")]
		[Address(RVA = "0x136A7F4", Offset = "0x136A7F4", VA = "0x136A7F4")]
		public static Mesh[] MakeLODMeshes(this Mesh mesh, float[] maxWeights, bool recalcNormals, float removeSmallParts = 1f, float protectNormals = 1f, float protectUvs = 1f, float protectSubMeshesAndSharpEdges = 1f, float smallTrianglesFirst = 1f, int nrOfSteps = 1)
		{
			return null;
		}

		[Token(Token = "0x60026F5")]
		[Address(RVA = "0x136AA00", Offset = "0x136AA00", VA = "0x136AA00")]
		public static Vector4 GetUvRange(this Mesh mesh)
		{
			return default(Vector4);
		}

		[Token(Token = "0x60026F6")]
		[Address(RVA = "0x136AAE8", Offset = "0x136AAE8", VA = "0x136AAE8")]
		public static bool CheckUvsWithin01Range(this Mesh mesh)
		{
			return default(bool);
		}

		[Token(Token = "0x60026F7")]
		[Address(RVA = "0x136AB80", Offset = "0x136AB80", VA = "0x136AB80")]
		public static void ClampUvs(this Mesh mesh)
		{
		}

		[Token(Token = "0x60026F8")]
		[Address(RVA = "0x136AC38", Offset = "0x136AC38", VA = "0x136AC38")]
		public static void WrapUvs(this Mesh mesh)
		{
		}

		[Token(Token = "0x60026F9")]
		[Address(RVA = "0x136AD34", Offset = "0x136AD34", VA = "0x136AD34")]
		public static void SetAtlasRectForSubmesh(this Mesh mesh, Rect atlasRect, int submeshIndex)
		{
		}

		[Token(Token = "0x60026FA")]
		[Address(RVA = "0x136B01C", Offset = "0x136B01C", VA = "0x136B01C")]
		public static void MergeSubmeshInto(this Mesh mesh, int from, int to)
		{
		}

		[Token(Token = "0x60026FB")]
		[Address(RVA = "0x136B25C", Offset = "0x136B25C", VA = "0x136B25C")]
		public static Mesh CopyAndRemoveSubmeshes(this Mesh orig, int[] submeshesToRemove)
		{
			return null;
		}

		[Token(Token = "0x60026FC")]
		[Address(RVA = "0x136BAD8", Offset = "0x136BAD8", VA = "0x136BAD8")]
		public static Mesh CopyAndRemoveHiddenTriangles(this Mesh orig, int subMeshIdx, Matrix4x4 localToWorldMatrix, Mesh[] hidingMeshes, int[] hidingSubMeshes, Matrix4x4[] hidingLocalToWorldMatrices, float maxRemoveDistance = 0.01f)
		{
			return null;
		}

		[Token(Token = "0x60026FD")]
		[Address(RVA = "0x136CBB0", Offset = "0x136CBB0", VA = "0x136CBB0")]
		private static bool IsTriangleHidden(Vector3 v0, Vector3 v1, Vector3 v2, float maxDistance, List<Vector3> triMinCorners, List<Vector3> triMaxCorners, List<Vector3> hidingVs, List<int> hidingTs)
		{
			return default(bool);
		}

		[Token(Token = "0x60026FE")]
		[Address(RVA = "0x136D098", Offset = "0x136D098", VA = "0x136D098")]
		private static bool IsHidden(Vector3 v, Vector3 n, float maxDistance, List<Vector3> hidingVs, List<int> hidingTs, List<int> trianglesToCheck)
		{
			return default(bool);
		}

		[Token(Token = "0x60026FF")]
		[Address(RVA = "0x136CDF0", Offset = "0x136CDF0", VA = "0x136CDF0")]
		private static List<int> GetTrianglesWithinRange(Vector3 v0, Vector3 v1, Vector3 v2, float maxDistance, List<Vector3> triMinCorners, List<Vector3> triMaxCorners)
		{
			return null;
		}

		[Token(Token = "0x6002700")]
		[Address(RVA = "0x136D3A0", Offset = "0x136D3A0", VA = "0x136D3A0")]
		public static float DistanceToPlane(Vector3 fromPos, Vector3 direction, Vector3 pointOnPlane, Vector3 normalPlane)
		{
			return default(float);
		}

		[Token(Token = "0x6002701")]
		[Address(RVA = "0x136CD90", Offset = "0x136CD90", VA = "0x136CD90")]
		public static Vector3 GetNormal(Vector3 v0, Vector3 v1, Vector3 v2)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x20005A4")]
	public static class RectExtensions
	{
		[Token(Token = "0x6002708")]
		[Address(RVA = "0x118F1D4", Offset = "0x118F1D4", VA = "0x118F1D4")]
		public static bool MouseInRect(this Rect rect, Vector2 point)
		{
			return default(bool);
		}

		[Token(Token = "0x6002709")]
		[Address(RVA = "0x118F20C", Offset = "0x118F20C", VA = "0x118F20C")]
		public static bool MouseInRect(this Rect rect)
		{
			return default(bool);
		}

		[Token(Token = "0x600270A")]
		[Address(RVA = "0x118F288", Offset = "0x118F288", VA = "0x118F288")]
		public static bool MouseInRect(this Rect rect, Rect parentRect, Vector2 point)
		{
			return default(bool);
		}

		[Token(Token = "0x600270B")]
		[Address(RVA = "0x118F33C", Offset = "0x118F33C", VA = "0x118F33C")]
		public static bool MouseInRect(this Rect rect, Rect parentRect)
		{
			return default(bool);
		}

		[Token(Token = "0x600270C")]
		[Address(RVA = "0x118F3D8", Offset = "0x118F3D8", VA = "0x118F3D8")]
		public static bool MouseInRect(this Rect rect, Rect parentRect1, Rect parentRect2, Vector2 point)
		{
			return default(bool);
		}

		[Token(Token = "0x600270D")]
		[Address(RVA = "0x118F4EC", Offset = "0x118F4EC", VA = "0x118F4EC")]
		public static bool MouseInRect(this Rect rect, Rect parentRect1, Rect parentRect2)
		{
			return default(bool);
		}

		[Token(Token = "0x600270E")]
		[Address(RVA = "0x118F598", Offset = "0x118F598", VA = "0x118F598")]
		public static Vector2 RelativeMousePosInRect(this Rect rect, Vector2 point)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600270F")]
		[Address(RVA = "0x118F66C", Offset = "0x118F66C", VA = "0x118F66C")]
		public static Vector2 RelativeMousePosInRect(this Rect rect)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002710")]
		[Address(RVA = "0x118F6D8", Offset = "0x118F6D8", VA = "0x118F6D8")]
		public static Rect RelativeRectInImage(this Rect r, Texture2D img)
		{
			return default(Rect);
		}

		[Token(Token = "0x6002711")]
		[Address(RVA = "0x118F80C", Offset = "0x118F80C", VA = "0x118F80C")]
		public static float MaxExtents(this Bounds b)
		{
			return default(float);
		}

		[Token(Token = "0x6002712")]
		[Address(RVA = "0x118F870", Offset = "0x118F870", VA = "0x118F870")]
		public static float MaxSize(this Bounds b)
		{
			return default(float);
		}

		[Token(Token = "0x6002713")]
		[Address(RVA = "0x118F8D4", Offset = "0x118F8D4", VA = "0x118F8D4")]
		public static float MinExtents(this Bounds b)
		{
			return default(float);
		}

		[Token(Token = "0x6002714")]
		[Address(RVA = "0x118F938", Offset = "0x118F938", VA = "0x118F938")]
		public static float MinSize(this Bounds b)
		{
			return default(float);
		}
	}
	[Token(Token = "0x20005A5")]
	public static class Texture2DExtensions
	{
		[Token(Token = "0x6002715")]
		[Address(RVA = "0xF0A8B0", Offset = "0xF0A8B0", VA = "0xF0A8B0")]
		public static Texture2D GetCopy(this Texture2D tex)
		{
			return null;
		}

		[Token(Token = "0x6002716")]
		[Address(RVA = "0xF0AA30", Offset = "0xF0AA30", VA = "0xF0AA30")]
		public static Texture2D GetCopy(this Texture2D tex, int x, int y, int w, int h)
		{
			return null;
		}

		[Token(Token = "0x6002717")]
		[Address(RVA = "0xF0AA98", Offset = "0xF0AA98", VA = "0xF0AA98")]
		public static Texture2D GetSection(this Texture2D tex, int x, int y, int w, int h)
		{
			return null;
		}

		[Token(Token = "0x6002718")]
		[Address(RVA = "0xF0A928", Offset = "0xF0A928", VA = "0xF0A928")]
		public static Texture2D GetCopy(this Texture2D tex, int x, int y, int w, int h, bool mipMaps)
		{
			return null;
		}

		[Token(Token = "0x6002719")]
		[Address(RVA = "0xF0AB84", Offset = "0xF0AB84", VA = "0xF0AB84")]
		public static Texture2D ScaledCopy(this Texture2D tex, int width, int height, bool mipMaps)
		{
			return null;
		}

		[Token(Token = "0x600271A")]
		[Address(RVA = "0xF0B16C", Offset = "0xF0B16C", VA = "0xF0B16C")]
		public static void CopyFrom(this Texture2D tex, Texture2D fromTex, int toX, int toY, int fromX, int fromY, int width, int height)
		{
		}

		[Token(Token = "0x600271B")]
		[Address(RVA = "0xF0B3FC", Offset = "0xF0B3FC", VA = "0xF0B3FC")]
		public static void Scale(this Texture2D tex, int width, int height)
		{
		}

		[Token(Token = "0x600271C")]
		[Address(RVA = "0xF0B2F0", Offset = "0xF0B2F0", VA = "0xF0B2F0")]
		public static void MakeFormatWritable(this Texture2D tex)
		{
		}

		[Token(Token = "0x600271D")]
		[Address(RVA = "0xF0AB00", Offset = "0xF0AB00", VA = "0xF0AB00")]
		public static TextureFormat GetWritableFormat(TextureFormat format)
		{
			return default(TextureFormat);
		}

		[Token(Token = "0x600271E")]
		[Address(RVA = "0xF0B55C", Offset = "0xF0B55C", VA = "0xF0B55C")]
		public static Color GetAverageColor(this Texture2D tex)
		{
			return default(Color);
		}

		[Token(Token = "0x600271F")]
		[Address(RVA = "0xF0B6D8", Offset = "0xF0B6D8", VA = "0xF0B6D8")]
		public static Color GetAverageColor(this Texture2D tex, Color useThisColorForAlpha)
		{
			return default(Color);
		}

		[Token(Token = "0x6002720")]
		[Address(RVA = "0xF0B8D8", Offset = "0xF0B8D8", VA = "0xF0B8D8")]
		public static bool IsReadable(this Texture2D tex)
		{
			return default(bool);
		}

		[Token(Token = "0x6002721")]
		[Address(RVA = "0xF0B99C", Offset = "0xF0B99C", VA = "0xF0B99C")]
		public static bool HasTransparency(this Texture2D tex)
		{
			return default(bool);
		}

		[Token(Token = "0x6002722")]
		[Address(RVA = "0xF0BAE8", Offset = "0xF0BAE8", VA = "0xF0BAE8")]
		public static bool IsNormalMap(this Texture2D aTexture)
		{
			return default(bool);
		}

		[Token(Token = "0x6002723")]
		[Address(RVA = "0xF0AD44", Offset = "0xF0AD44", VA = "0xF0AD44")]
		private static Color[] ScaledPixels(Color[] originalPixels, int oldWidth, int oldHeight, int width, int height)
		{
			return null;
		}

		[Token(Token = "0x6002724")]
		[Address(RVA = "0xF0BB48", Offset = "0xF0BB48", VA = "0xF0BB48")]
		public static Texture2D GetUnityNormalMap(this Texture2D tex)
		{
			return null;
		}

		[Token(Token = "0x6002725")]
		[Address(RVA = "0xF0BD98", Offset = "0xF0BD98", VA = "0xF0BD98")]
		public static Texture2D FromUnityNormalMap(this Texture2D tex)
		{
			return null;
		}

		[Token(Token = "0x6002726")]
		[Address(RVA = "0xF0BFF4", Offset = "0xF0BFF4", VA = "0xF0BFF4")]
		public static void Fill(this Texture2D tex, Color aColor)
		{
		}
	}
	[Token(Token = "0x20005A6")]
	public static class TransformExtensions
	{
		[Token(Token = "0x6002727")]
		[Address(RVA = "0xEC2778", Offset = "0xEC2778", VA = "0xEC2778")]
		public static bool IsPartOf(this Transform trans, Transform aTransform)
		{
			return default(bool);
		}

		[Token(Token = "0x6002728")]
		[Address(RVA = "0xEC28A0", Offset = "0xEC28A0", VA = "0xEC28A0")]
		public static Transform FindFirstChildWithName(this Transform trans, string childName)
		{
			return null;
		}

		[Token(Token = "0x6002729")]
		[Address(RVA = "0xEC2BD4", Offset = "0xEC2BD4", VA = "0xEC2BD4")]
		public static Transform FindFirstChildWhereNameContains(this Transform trans, string childName)
		{
			return null;
		}

		[Token(Token = "0x600272A")]
		public static T GetFirstComponentInParents<T>(this Transform trans) where T : MonoBehaviour
		{
			return null;
		}

		[Token(Token = "0x600272B")]
		[Address(RVA = "0xEC2F0C", Offset = "0xEC2F0C", VA = "0xEC2F0C")]
		public static Vector3 PointToWorldSpace(this Transform trans, Vector3 p)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600272C")]
		[Address(RVA = "0xEC2F24", Offset = "0xEC2F24", VA = "0xEC2F24")]
		public static Vector3 PointToLocalSpace(this Transform trans, Vector3 p)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x20005A7")]
	public static class Vector3Extensions
	{
		[Token(Token = "0x600272D")]
		[Address(RVA = "0xE1A0C8", Offset = "0xE1A0C8", VA = "0xE1A0C8")]
		public static string MakeString(this Vector3 v)
		{
			return null;
		}

		[Token(Token = "0x600272E")]
		[Address(RVA = "0xE1A2F0", Offset = "0xE1A2F0", VA = "0xE1A2F0")]
		public static string MakeString(this Vector3 v, int decimals)
		{
			return null;
		}

		[Token(Token = "0x600272F")]
		[Address(RVA = "0xE1A744", Offset = "0xE1A744", VA = "0xE1A744")]
		public static Vector3 Product(this Vector3 v1, Vector3 v2)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002730")]
		[Address(RVA = "0xE1A754", Offset = "0xE1A754", VA = "0xE1A754")]
		public static float Sum(this Vector3 v1)
		{
			return default(float);
		}

		[Token(Token = "0x6002731")]
		[Address(RVA = "0xE1A760", Offset = "0xE1A760", VA = "0xE1A760")]
		public static float InProduct(this Vector3 v1, Vector3 v2)
		{
			return default(float);
		}

		[Token(Token = "0x6002732")]
		[Address(RVA = "0xE1A778", Offset = "0xE1A778", VA = "0xE1A778")]
		public static Vector3 Abs(this Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002733")]
		[Address(RVA = "0xE1A788", Offset = "0xE1A788", VA = "0xE1A788")]
		public static Vector3 VectorMax(this Vector3 v1, Vector3 v2)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002734")]
		[Address(RVA = "0xE1A800", Offset = "0xE1A800", VA = "0xE1A800")]
		public static bool IsEqual(this Vector3 v1, Vector3 v2)
		{
			return default(bool);
		}

		[Token(Token = "0x6002735")]
		[Address(RVA = "0xE1A828", Offset = "0xE1A828", VA = "0xE1A828")]
		public static bool DiffBetween(this Vector3 v1, Vector3 v2, float from, float to)
		{
			return default(bool);
		}

		[Token(Token = "0x6002736")]
		[Address(RVA = "0xE1A874", Offset = "0xE1A874", VA = "0xE1A874")]
		public static bool IsDiffSmallEnough(this Vector3 v1, Vector3 v2, float maxDiff)
		{
			return default(bool);
		}

		[Token(Token = "0x6002737")]
		[Address(RVA = "0xE1A8C4", Offset = "0xE1A8C4", VA = "0xE1A8C4")]
		public static bool IsAllSmaller(this Vector3 v1, Vector3 v2)
		{
			return default(bool);
		}

		[Token(Token = "0x6002738")]
		[Address(RVA = "0xE1A8EC", Offset = "0xE1A8EC", VA = "0xE1A8EC")]
		public static Vector2 Barycentric(this Vector3 p, Vector3 a, Vector3 b, Vector3 c)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002739")]
		[Address(RVA = "0xE1A9BC", Offset = "0xE1A9BC", VA = "0xE1A9BC")]
		public static Vector3 To180Angle(this Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600273A")]
		[Address(RVA = "0xE1AA18", Offset = "0xE1AA18", VA = "0xE1AA18")]
		public static Vector3 To360Angle(this Vector3 v)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x20005A8")]
	public static class Vector2Extensions
	{
		[Token(Token = "0x600273B")]
		[Address(RVA = "0xE19AC0", Offset = "0xE19AC0", VA = "0xE19AC0")]
		public static string MakeString(this Vector2 v)
		{
			return null;
		}

		[Token(Token = "0x600273C")]
		[Address(RVA = "0xE19C78", Offset = "0xE19C78", VA = "0xE19C78")]
		public static string MakeString(this Vector2 v, int decimals)
		{
			return null;
		}

		[Token(Token = "0x600273D")]
		[Address(RVA = "0xE19FCC", Offset = "0xE19FCC", VA = "0xE19FCC")]
		public static Vector2 Product(this Vector2 v1, Vector2 v2)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600273E")]
		[Address(RVA = "0xE19FD8", Offset = "0xE19FD8", VA = "0xE19FD8")]
		public static float InProduct(this Vector2 v1, Vector2 v2)
		{
			return default(float);
		}

		[Token(Token = "0x600273F")]
		[Address(RVA = "0xE19FE8", Offset = "0xE19FE8", VA = "0xE19FE8")]
		public static Vector2 Abs(this Vector2 v)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002740")]
		[Address(RVA = "0xE19FF4", Offset = "0xE19FF4", VA = "0xE19FF4")]
		public static bool IsEqual(this Vector2 v1, Vector2 v2)
		{
			return default(bool);
		}

		[Token(Token = "0x6002741")]
		[Address(RVA = "0xE1A00C", Offset = "0xE1A00C", VA = "0xE1A00C")]
		public static bool DiffBetween(this Vector2 v1, Vector2 v2, float from, float to)
		{
			return default(bool);
		}

		[Token(Token = "0x6002742")]
		[Address(RVA = "0xE1A044", Offset = "0xE1A044", VA = "0xE1A044")]
		public static bool IsDiffSmallEnough(this Vector2 v1, Vector2 v2, float maxDiff)
		{
			return default(bool);
		}

		[Token(Token = "0x6002743")]
		[Address(RVA = "0xE1A07C", Offset = "0xE1A07C", VA = "0xE1A07C")]
		public static bool IsAllSmaller(this Vector2 v1, Vector2 v2)
		{
			return default(bool);
		}

		[Token(Token = "0x6002744")]
		[Address(RVA = "0xE1A094", Offset = "0xE1A094", VA = "0xE1A094")]
		public static bool IsBarycentricInTriangle(this Vector2 v)
		{
			return default(bool);
		}
	}
}
namespace Tutorials
{
	[Token(Token = "0x20005A9")]
	public class TutorialBombs : Tutorial
	{
		[Token(Token = "0x20005AA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9190D4", Offset = "0x9190D4")]
		private sealed class <FillBombs>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002687")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002688")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x17000296")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002761")]
				[Address(RVA = "0x1379980", Offset = "0x1379980", VA = "0x1379980", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000297")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002763")]
				[Address(RVA = "0x13799C8", Offset = "0x13799C8", VA = "0x13799C8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600275E")]
			[Address(RVA = "0x1379850", Offset = "0x1379850", VA = "0x1379850")]
			[DebuggerHidden]
			public <FillBombs>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x600275F")]
			[Address(RVA = "0x137987C", Offset = "0x137987C", VA = "0x137987C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002760")]
			[Address(RVA = "0x1379880", Offset = "0x1379880", VA = "0x1379880", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002762")]
			[Address(RVA = "0x1379988", Offset = "0x1379988", VA = "0x1379988", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005AB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9190E4", Offset = "0x9190E4")]
		private sealed class <NeutralizeBombsOnGround>d__23 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002689")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400268A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x17000298")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002767")]
				[Address(RVA = "0x1379B0C", Offset = "0x1379B0C", VA = "0x1379B0C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000299")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002769")]
				[Address(RVA = "0x1379B54", Offset = "0x1379B54", VA = "0x1379B54", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002764")]
			[Address(RVA = "0x13799D0", Offset = "0x13799D0", VA = "0x13799D0")]
			[DebuggerHidden]
			public <NeutralizeBombsOnGround>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x6002765")]
			[Address(RVA = "0x13799FC", Offset = "0x13799FC", VA = "0x13799FC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002766")]
			[Address(RVA = "0x1379A00", Offset = "0x1379A00", VA = "0x1379A00", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002768")]
			[Address(RVA = "0x1379B14", Offset = "0x1379B14", VA = "0x1379B14", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9190F4", Offset = "0x9190F4")]
		private sealed class <StepLogic>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400268B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400268C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400268D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TutorialBombs <>4__this;

			[Token(Token = "0x400268E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <bombs>5__2;

			[Token(Token = "0x400268F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <waitTime>5__3;

			[Token(Token = "0x1700029A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600276D")]
				[Address(RVA = "0x137A69C", Offset = "0x137A69C", VA = "0x137A69C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700029B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600276F")]
				[Address(RVA = "0x137A6E4", Offset = "0x137A6E4", VA = "0x137A6E4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600276A")]
			[Address(RVA = "0x1379B5C", Offset = "0x1379B5C", VA = "0x1379B5C")]
			[DebuggerHidden]
			public <StepLogic>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x600276B")]
			[Address(RVA = "0x1379B88", Offset = "0x1379B88", VA = "0x1379B88", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600276C")]
			[Address(RVA = "0x1379B8C", Offset = "0x1379B8C", VA = "0x1379B8C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600276E")]
			[Address(RVA = "0x137A6A4", Offset = "0x137A6A4", VA = "0x137A6A4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private new int totalSteps;

		[Token(Token = "0x400267A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private new int[] totalSubsteps;

		[Token(Token = "0x400267B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private List<Hull> targets;

		[Token(Token = "0x400267C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float lastRadioTime;

		[Token(Token = "0x400267D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private float ascendRadioTime;

		[Token(Token = "0x400267E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float farFromTargetTime;

		[Token(Token = "0x400267F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private float checkFarTargetTime;

		[Token(Token = "0x4002680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float checkAscendTime;

		[Token(Token = "0x4002681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private float diveRadioTime;

		[Token(Token = "0x4002682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float lastFlapsDownTime;

		[Token(Token = "0x4002683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private float lastFlapsUpTime;

		[Token(Token = "0x4002684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private bool wasReadyRadio;

		[Token(Token = "0x4002685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private float shootingTargetRadius;

		[Token(Token = "0x4002686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Transform shootingTargetCenter;

		[Token(Token = "0x1700028B")]
		protected override Vector3 CarrierPosition
		{
			[Token(Token = "0x6002745")]
			[Address(RVA = "0xECB980", Offset = "0xECB980", VA = "0xECB980", Slot = "4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700028C")]
		protected override Quaternion CarrierRotation
		{
			[Token(Token = "0x6002746")]
			[Address(RVA = "0xECB998", Offset = "0xECB998", VA = "0xECB998", Slot = "5")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x1700028D")]
		protected override bool ShouldSpawnCarrier
		{
			[Token(Token = "0x6002747")]
			[Address(RVA = "0xECB9B0", Offset = "0xECB9B0", VA = "0xECB9B0", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700028E")]
		private bool IsNoseUp
		{
			[Token(Token = "0x6002755")]
			[Address(RVA = "0xECC4C4", Offset = "0xECC4C4", VA = "0xECC4C4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700028F")]
		private bool IsDiving
		{
			[Token(Token = "0x6002756")]
			[Address(RVA = "0xECBD1C", Offset = "0xECBD1C", VA = "0xECBD1C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000290")]
		private bool EnemyAlive
		{
			[Token(Token = "0x6002757")]
			[Address(RVA = "0xECC534", Offset = "0xECC534", VA = "0xECC534")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000291")]
		private int Bombs
		{
			[Token(Token = "0x6002758")]
			[Address(RVA = "0xECC554", Offset = "0xECC554", VA = "0xECC554")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000292")]
		private bool FlapsUp
		{
			[Token(Token = "0x6002759")]
			[Address(RVA = "0xECC498", Offset = "0xECC498", VA = "0xECC498")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000293")]
		private bool FlapsDown
		{
			[Token(Token = "0x600275A")]
			[Address(RVA = "0xECC254", Offset = "0xECC254", VA = "0xECC254")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000294")]
		private bool HeightOK
		{
			[Token(Token = "0x600275B")]
			[Address(RVA = "0xECBE74", Offset = "0xECBE74", VA = "0xECBE74")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000295")]
		private bool NearTarget
		{
			[Token(Token = "0x600275C")]
			[Address(RVA = "0xECBFF8", Offset = "0xECBFF8", VA = "0xECBFF8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002748")]
		[Address(RVA = "0xECB9B8", Offset = "0xECB9B8", VA = "0xECB9B8", Slot = "11")]
		protected override void OverrideSteps(ref int steps, ref int[] substeps)
		{
		}

		[Token(Token = "0x6002749")]
		[Address(RVA = "0xECB9CC", Offset = "0xECB9CC", VA = "0xECB9CC", Slot = "10")]
		protected override void PlayerPlaneSpawned(PlaneBody pb)
		{
		}

		[Token(Token = "0x600274A")]
		[Address(RVA = "0xECBA28", Offset = "0xECBA28", VA = "0xECBA28")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92EE48", Offset = "0x92EE48")]
		private IEnumerator FillBombs()
		{
			return null;
		}

		[Token(Token = "0x600274B")]
		[Address(RVA = "0xECBA84", Offset = "0xECBA84", VA = "0xECBA84")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92EEA8", Offset = "0x92EEA8")]
		private IEnumerator NeutralizeBombsOnGround()
		{
			return null;
		}

		[Token(Token = "0x600274C")]
		[Address(RVA = "0xECBAE0", Offset = "0xECBAE0", VA = "0xECBAE0", Slot = "12")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92EF08", Offset = "0x92EF08")]
		protected override IEnumerator StepLogic()
		{
			return null;
		}

		[Token(Token = "0x600274D")]
		[Address(RVA = "0xECBB4C", Offset = "0xECBB4C", VA = "0xECBB4C")]
		private void UseRudderRadio()
		{
		}

		[Token(Token = "0x600274E")]
		[Address(RVA = "0xECBBE0", Offset = "0xECBBE0", VA = "0xECBBE0")]
		private bool DiveRadio()
		{
			return default(bool);
		}

		[Token(Token = "0x600274F")]
		[Address(RVA = "0xECBD24", Offset = "0xECBD24", VA = "0xECBD24")]
		private bool AscendRadio()
		{
			return default(bool);
		}

		[Token(Token = "0x6002750")]
		[Address(RVA = "0xECBEA8", Offset = "0xECBEA8", VA = "0xECBEA8")]
		private bool FarFromTarget()
		{
			return default(bool);
		}

		[Token(Token = "0x6002751")]
		[Address(RVA = "0xECC098", Offset = "0xECC098", VA = "0xECC098")]
		private void GetReadyRadio()
		{
		}

		[Token(Token = "0x6002752")]
		[Address(RVA = "0xECC12C", Offset = "0xECC12C", VA = "0xECC12C")]
		private bool FlapsDownRadio()
		{
			return default(bool);
		}

		[Token(Token = "0x6002753")]
		[Address(RVA = "0xECC280", Offset = "0xECC280", VA = "0xECC280")]
		private bool PullUpRadio()
		{
			return default(bool);
		}

		[Token(Token = "0x6002754")]
		[Address(RVA = "0xECC394", Offset = "0xECC394", VA = "0xECC394")]
		private bool FlapsUpRadio()
		{
			return default(bool);
		}

		[Token(Token = "0x600275D")]
		[Address(RVA = "0xECC5C4", Offset = "0xECC5C4", VA = "0xECC5C4")]
		public TutorialBombs()
		{
		}
	}
	[Token(Token = "0x20005AD")]
	public class TutorialBombsNaval : Tutorial
	{
		[Token(Token = "0x20005AE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x919104", Offset = "0x919104")]
		private sealed class <FillBombs>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400269C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400269D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x170002A2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002789")]
				[Address(RVA = "0x137A820", Offset = "0x137A820", VA = "0x137A820", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002A3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600278B")]
				[Address(RVA = "0x137A868", Offset = "0x137A868", VA = "0x137A868", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002786")]
			[Address(RVA = "0x137A6EC", Offset = "0x137A6EC", VA = "0x137A6EC")]
			[DebuggerHidden]
			public <FillBombs>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6002787")]
			[Address(RVA = "0x137A718", Offset = "0x137A718", VA = "0x137A718", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002788")]
			[Address(RVA = "0x137A71C", Offset = "0x137A71C", VA = "0x137A71C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600278A")]
			[Address(RVA = "0x137A828", Offset = "0x137A828", VA = "0x137A828", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005AF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x919114", Offset = "0x919114")]
		private sealed class <NeutralizeBombsOnGround>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400269E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400269F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x170002A4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600278F")]
				[Address(RVA = "0x137A9B8", Offset = "0x137A9B8", VA = "0x137A9B8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002A5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002791")]
				[Address(RVA = "0x137AA00", Offset = "0x137AA00", VA = "0x137AA00", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600278C")]
			[Address(RVA = "0x137A870", Offset = "0x137A870", VA = "0x137A870")]
			[DebuggerHidden]
			public <NeutralizeBombsOnGround>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x600278D")]
			[Address(RVA = "0x137A89C", Offset = "0x137A89C", VA = "0x137A89C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600278E")]
			[Address(RVA = "0x137A8A0", Offset = "0x137A8A0", VA = "0x137A8A0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002790")]
			[Address(RVA = "0x137A9C0", Offset = "0x137A9C0", VA = "0x137A9C0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x919124", Offset = "0x919124")]
		private sealed class <StepLogic>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40026A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40026A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40026A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TutorialBombsNaval <>4__this;

			[Token(Token = "0x40026A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <bombs>5__2;

			[Token(Token = "0x40026A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <count>5__3;

			[Token(Token = "0x40026A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Missile <missile>5__4;

			[Token(Token = "0x40026A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <countAfter>5__5;

			[Token(Token = "0x40026A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <waitTime>5__6;

			[Token(Token = "0x170002A6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002795")]
				[Address(RVA = "0x137B750", Offset = "0x137B750", VA = "0x137B750", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002A7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002797")]
				[Address(RVA = "0x137B798", Offset = "0x137B798", VA = "0x137B798", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002792")]
			[Address(RVA = "0x137AA08", Offset = "0x137AA08", VA = "0x137AA08")]
			[DebuggerHidden]
			public <StepLogic>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6002793")]
			[Address(RVA = "0x137AA34", Offset = "0x137AA34", VA = "0x137AA34", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002794")]
			[Address(RVA = "0x137AA38", Offset = "0x137AA38", VA = "0x137AA38", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002796")]
			[Address(RVA = "0x137B758", Offset = "0x137B758", VA = "0x137B758", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private new int totalSteps;

		[Token(Token = "0x4002691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private new int[] totalSubsteps;

		[Token(Token = "0x4002692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private List<Hull> ships;

		[Token(Token = "0x4002693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float lastRadioTime;

		[Token(Token = "0x4002694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private float ascendRadioTime;

		[Token(Token = "0x4002695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float farFromTargetTime;

		[Token(Token = "0x4002696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private float checkFarTargetTime;

		[Token(Token = "0x4002697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float checkAscendTime;

		[Token(Token = "0x4002698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private float diveRadioTime;

		[Token(Token = "0x4002699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float lastFlapsDownTime;

		[Token(Token = "0x400269A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private float lastFlapsUpTime;

		[Token(Token = "0x400269B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private bool wasReadyRadio;

		[Token(Token = "0x1700029C")]
		private bool IsDiving
		{
			[Token(Token = "0x600277E")]
			[Address(RVA = "0xECCA44", Offset = "0xECCA44", VA = "0xECCA44")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700029D")]
		private bool ShipsAlive
		{
			[Token(Token = "0x600277F")]
			[Address(RVA = "0xECD268", Offset = "0xECD268", VA = "0xECD268")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700029E")]
		private int Bombs
		{
			[Token(Token = "0x6002780")]
			[Address(RVA = "0xECD288", Offset = "0xECD288", VA = "0xECD288")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700029F")]
		private bool FlapsUp
		{
			[Token(Token = "0x6002781")]
			[Address(RVA = "0xECD23C", Offset = "0xECD23C", VA = "0xECD23C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002A0")]
		private bool FlapsDown
		{
			[Token(Token = "0x6002782")]
			[Address(RVA = "0xECCFF8", Offset = "0xECCFF8", VA = "0xECCFF8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002A1")]
		private bool HeightOK
		{
			[Token(Token = "0x6002783")]
			[Address(RVA = "0xECCB9C", Offset = "0xECCB9C", VA = "0xECCB9C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002770")]
		[Address(RVA = "0xECC6B8", Offset = "0xECC6B8", VA = "0xECC6B8", Slot = "11")]
		protected override void OverrideSteps(ref int steps, ref int[] substeps)
		{
		}

		[Token(Token = "0x6002771")]
		[Address(RVA = "0xECC6CC", Offset = "0xECC6CC", VA = "0xECC6CC", Slot = "14")]
		protected override MissionType GetRadioMissionType()
		{
			return default(MissionType);
		}

		[Token(Token = "0x6002772")]
		[Address(RVA = "0xECC6F4", Offset = "0xECC6F4", VA = "0xECC6F4", Slot = "10")]
		protected override void PlayerPlaneSpawned(PlaneBody pb)
		{
		}

		[Token(Token = "0x6002773")]
		[Address(RVA = "0xECC750", Offset = "0xECC750", VA = "0xECC750")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92F058", Offset = "0x92F058")]
		private IEnumerator FillBombs()
		{
			return null;
		}

		[Token(Token = "0x6002774")]
		[Address(RVA = "0xECC7AC", Offset = "0xECC7AC", VA = "0xECC7AC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92F0B8", Offset = "0x92F0B8")]
		private IEnumerator NeutralizeBombsOnGround()
		{
			return null;
		}

		[Token(Token = "0x6002775")]
		[Address(RVA = "0xECC808", Offset = "0xECC808", VA = "0xECC808", Slot = "12")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92F118", Offset = "0x92F118")]
		protected override IEnumerator StepLogic()
		{
			return null;
		}

		[Token(Token = "0x6002776")]
		[Address(RVA = "0xECC874", Offset = "0xECC874", VA = "0xECC874")]
		private void UseRudderRadio()
		{
		}

		[Token(Token = "0x6002777")]
		[Address(RVA = "0xECC908", Offset = "0xECC908", VA = "0xECC908")]
		private bool DiveRadio()
		{
			return default(bool);
		}

		[Token(Token = "0x6002778")]
		[Address(RVA = "0xECCA4C", Offset = "0xECCA4C", VA = "0xECCA4C")]
		private bool AscendRadio()
		{
			return default(bool);
		}

		[Token(Token = "0x6002779")]
		[Address(RVA = "0xECCBD0", Offset = "0xECCBD0", VA = "0xECCBD0")]
		private bool FarFromTarget()
		{
			return default(bool);
		}

		[Token(Token = "0x600277A")]
		[Address(RVA = "0xECCE28", Offset = "0xECCE28", VA = "0xECCE28")]
		private void GetReadyRadio()
		{
		}

		[Token(Token = "0x600277B")]
		[Address(RVA = "0xECCEBC", Offset = "0xECCEBC", VA = "0xECCEBC")]
		private bool FlapsDownRadio()
		{
			return default(bool);
		}

		[Token(Token = "0x600277C")]
		[Address(RVA = "0xECD024", Offset = "0xECD024", VA = "0xECD024")]
		private bool PullUpRadio()
		{
			return default(bool);
		}

		[Token(Token = "0x600277D")]
		[Address(RVA = "0xECD138", Offset = "0xECD138", VA = "0xECD138")]
		private bool FlapsUpRadio()
		{
			return default(bool);
		}

		[Token(Token = "0x6002784")]
		[Address(RVA = "0xECCD20", Offset = "0xECCD20", VA = "0xECCD20")]
		private bool NearTarget()
		{
			return default(bool);
		}

		[Token(Token = "0x6002785")]
		[Address(RVA = "0xECD2F8", Offset = "0xECD2F8", VA = "0xECD2F8")]
		public TutorialBombsNaval()
		{
		}
	}
	[Token(Token = "0x20005B1")]
	public class TutorialCannonShooting : Tutorial
	{
		[Token(Token = "0x20005B2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x919134", Offset = "0x919134")]
		private sealed class <StepLogic>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40026B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40026B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40026B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TutorialCannonShooting <>4__this;

			[Token(Token = "0x40026B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private bool <boolCmp>5__2;

			[Token(Token = "0x40026B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private Vector3 <sqPos>5__3;

			[Token(Token = "0x170002AD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60027A6")]
				[Address(RVA = "0x137C830", Offset = "0x137C830", VA = "0x137C830", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002AE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60027A8")]
				[Address(RVA = "0x137C878", Offset = "0x137C878", VA = "0x137C878", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60027A3")]
			[Address(RVA = "0x137B9B4", Offset = "0x137B9B4", VA = "0x137B9B4")]
			[DebuggerHidden]
			public <StepLogic>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x60027A4")]
			[Address(RVA = "0x137B9E0", Offset = "0x137B9E0", VA = "0x137B9E0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60027A5")]
			[Address(RVA = "0x137B9E4", Offset = "0x137B9E4", VA = "0x137B9E4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60027A7")]
			[Address(RVA = "0x137C838", Offset = "0x137C838", VA = "0x137C838", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005B3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x919144", Offset = "0x919144")]
		private sealed class <RepeatAfterPassTarget>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40026B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40026B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40026B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TutorialCannonShooting <>4__this;

			[Token(Token = "0x170002AF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60027AC")]
				[Address(RVA = "0x137B964", Offset = "0x137B964", VA = "0x137B964", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002B0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60027AE")]
				[Address(RVA = "0x137B9AC", Offset = "0x137B9AC", VA = "0x137B9AC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60027A9")]
			[Address(RVA = "0x137B7A0", Offset = "0x137B7A0", VA = "0x137B7A0")]
			[DebuggerHidden]
			public <RepeatAfterPassTarget>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x60027AA")]
			[Address(RVA = "0x137B7CC", Offset = "0x137B7CC", VA = "0x137B7CC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60027AB")]
			[Address(RVA = "0x137B7D0", Offset = "0x137B7D0", VA = "0x137B7D0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60027AD")]
			[Address(RVA = "0x137B96C", Offset = "0x137B96C", VA = "0x137B96C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40026A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private new int totalSteps;

		[Token(Token = "0x40026A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private new int[] totalSubsteps;

		[Token(Token = "0x40026AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Task task;

		[Token(Token = "0x40026AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Squadron sq;

		[Token(Token = "0x40026AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float lastRadioTime;

		[Token(Token = "0x40026AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private float lastFlapsDownTime;

		[Token(Token = "0x40026AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int sayRudderCount;

		[Token(Token = "0x40026AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private bool sayFirstApproach;

		[Token(Token = "0x170002A8")]
		protected override Vector3 CarrierPosition
		{
			[Token(Token = "0x6002798")]
			[Address(RVA = "0xECD4B8", Offset = "0xECD4B8", VA = "0xECD4B8", Slot = "4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170002A9")]
		protected override Quaternion CarrierRotation
		{
			[Token(Token = "0x6002799")]
			[Address(RVA = "0xECD4D0", Offset = "0xECD4D0", VA = "0xECD4D0", Slot = "5")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x170002AA")]
		protected override bool ShouldSpawnCarrier
		{
			[Token(Token = "0x600279A")]
			[Address(RVA = "0xECD4E8", Offset = "0xECD4E8", VA = "0xECD4E8", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002AB")]
		private bool FlapsUp
		{
			[Token(Token = "0x60027A0")]
			[Address(RVA = "0xECD7FC", Offset = "0xECD7FC", VA = "0xECD7FC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002AC")]
		private bool FlapsDown
		{
			[Token(Token = "0x60027A1")]
			[Address(RVA = "0xECD828", Offset = "0xECD828", VA = "0xECD828")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600279B")]
		[Address(RVA = "0xECD4F0", Offset = "0xECD4F0", VA = "0xECD4F0", Slot = "11")]
		protected override void OverrideSteps(ref int steps, ref int[] substeps)
		{
		}

		[Token(Token = "0x600279C")]
		[Address(RVA = "0xECD504", Offset = "0xECD504", VA = "0xECD504", Slot = "12")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92F268", Offset = "0x92F268")]
		protected override IEnumerator StepLogic()
		{
			return null;
		}

		[Token(Token = "0x600279D")]
		[Address(RVA = "0xECD570", Offset = "0xECD570", VA = "0xECD570")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92F2C8", Offset = "0x92F2C8")]
		private IEnumerator RepeatAfterPassTarget()
		{
			return null;
		}

		[Token(Token = "0x600279E")]
		[Address(RVA = "0xECD5DC", Offset = "0xECD5DC", VA = "0xECD5DC")]
		private bool IsNearTarget()
		{
			return default(bool);
		}

		[Token(Token = "0x600279F")]
		[Address(RVA = "0xECD700", Offset = "0xECD700", VA = "0xECD700")]
		private bool FlapsUpRadio()
		{
			return default(bool);
		}

		[Token(Token = "0x60027A2")]
		[Address(RVA = "0xECD854", Offset = "0xECD854", VA = "0xECD854")]
		public TutorialCannonShooting()
		{
		}
	}
	[Token(Token = "0x20005B4")]
	public class TutorialFreeFlight : Tutorial
	{
		[Token(Token = "0x20005B5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x919154", Offset = "0x919154")]
		private sealed class <StepLogic>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40026BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40026BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40026BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TutorialFreeFlight <>4__this;

			[Token(Token = "0x170002B1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60027B6")]
				[Address(RVA = "0x137CDB8", Offset = "0x137CDB8", VA = "0x137CDB8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002B2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60027B8")]
				[Address(RVA = "0x137CE00", Offset = "0x137CE00", VA = "0x137CE00", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60027B3")]
			[Address(RVA = "0x137C880", Offset = "0x137C880", VA = "0x137C880")]
			[DebuggerHidden]
			public <StepLogic>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x60027B4")]
			[Address(RVA = "0x137C8AC", Offset = "0x137C8AC", VA = "0x137C8AC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60027B5")]
			[Address(RVA = "0x137C8B0", Offset = "0x137C8B0", VA = "0x137C8B0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60027B7")]
			[Address(RVA = "0x137CDC0", Offset = "0x137CDC0", VA = "0x137CDC0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40026B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private new int totalSteps;

		[Token(Token = "0x40026B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private new int[] totalSubsteps;

		[Token(Token = "0x60027AF")]
		[Address(RVA = "0xECD910", Offset = "0xECD910", VA = "0xECD910", Slot = "11")]
		protected override void OverrideSteps(ref int steps, ref int[] substeps)
		{
		}

		[Token(Token = "0x60027B0")]
		[Address(RVA = "0xECD924", Offset = "0xECD924", VA = "0xECD924", Slot = "7")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60027B1")]
		[Address(RVA = "0xECD930", Offset = "0xECD930", VA = "0xECD930", Slot = "12")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92F3C8", Offset = "0x92F3C8")]
		protected override IEnumerator StepLogic()
		{
			return null;
		}

		[Token(Token = "0x60027B2")]
		[Address(RVA = "0xECD99C", Offset = "0xECD99C", VA = "0xECD99C")]
		public TutorialFreeFlight()
		{
		}
	}
	[Token(Token = "0x20005B6")]
	public class TutorialLanding : Tutorial
	{
		[Token(Token = "0x20005B7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x919164", Offset = "0x919164")]
		private sealed class <StepLogic>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40026BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40026C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40026C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TutorialLanding <>4__this;

			[Token(Token = "0x40026C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Transform <landway>5__2;

			[Token(Token = "0x170002B3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60027C0")]
				[Address(RVA = "0x137D138", Offset = "0x137D138", VA = "0x137D138", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002B4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60027C2")]
				[Address(RVA = "0x137D180", Offset = "0x137D180", VA = "0x137D180", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60027BD")]
			[Address(RVA = "0x137CE08", Offset = "0x137CE08", VA = "0x137CE08")]
			[DebuggerHidden]
			public <StepLogic>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x60027BE")]
			[Address(RVA = "0x137CE34", Offset = "0x137CE34", VA = "0x137CE34", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60027BF")]
			[Address(RVA = "0x137CE38", Offset = "0x137CE38", VA = "0x137CE38", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60027C1")]
			[Address(RVA = "0x137D140", Offset = "0x137D140", VA = "0x137D140", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40026BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private new int totalSteps;

		[Token(Token = "0x40026BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private new int[] totalSubsteps;

		[Token(Token = "0x60027B9")]
		[Address(RVA = "0xECDA50", Offset = "0xECDA50", VA = "0xECDA50", Slot = "11")]
		protected override void OverrideSteps(ref int steps, ref int[] substeps)
		{
		}

		[Token(Token = "0x60027BA")]
		[Address(RVA = "0xECDA64", Offset = "0xECDA64", VA = "0xECDA64", Slot = "7")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60027BB")]
		[Address(RVA = "0xECDB18", Offset = "0xECDB18", VA = "0xECDB18", Slot = "12")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92F478", Offset = "0x92F478")]
		protected override IEnumerator StepLogic()
		{
			return null;
		}

		[Token(Token = "0x60027BC")]
		[Address(RVA = "0xECDB84", Offset = "0xECDB84", VA = "0xECDB84")]
		public TutorialLanding()
		{
		}
	}
	[Token(Token = "0x20005B8")]
	public class TutorialRockets : Tutorial
	{
		[Token(Token = "0x20005B9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x919174", Offset = "0x919174")]
		private sealed class <StepLogic>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40026CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40026CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40026CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TutorialRockets <>4__this;

			[Token(Token = "0x40026CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <boolCmp>5__2;

			[Token(Token = "0x170002BA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60027D3")]
				[Address(RVA = "0x137E4EC", Offset = "0x137E4EC", VA = "0x137E4EC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002BB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60027D5")]
				[Address(RVA = "0x137E534", Offset = "0x137E534", VA = "0x137E534", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60027D0")]
			[Address(RVA = "0x137D39C", Offset = "0x137D39C", VA = "0x137D39C")]
			[DebuggerHidden]
			public <StepLogic>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x60027D1")]
			[Address(RVA = "0x137D3C8", Offset = "0x137D3C8", VA = "0x137D3C8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60027D2")]
			[Address(RVA = "0x137D3CC", Offset = "0x137D3CC", VA = "0x137D3CC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60027D4")]
			[Address(RVA = "0x137E4F4", Offset = "0x137E4F4", VA = "0x137E4F4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005BA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x919184", Offset = "0x919184")]
		private sealed class <RepeatAfterPassTarget>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40026CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40026D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40026D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TutorialRockets <>4__this;

			[Token(Token = "0x170002BC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60027D9")]
				[Address(RVA = "0x137D34C", Offset = "0x137D34C", VA = "0x137D34C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002BD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60027DB")]
				[Address(RVA = "0x137D394", Offset = "0x137D394", VA = "0x137D394", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60027D6")]
			[Address(RVA = "0x137D188", Offset = "0x137D188", VA = "0x137D188")]
			[DebuggerHidden]
			public <RepeatAfterPassTarget>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x60027D7")]
			[Address(RVA = "0x137D1B4", Offset = "0x137D1B4", VA = "0x137D1B4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60027D8")]
			[Address(RVA = "0x137D1B8", Offset = "0x137D1B8", VA = "0x137D1B8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60027DA")]
			[Address(RVA = "0x137D354", Offset = "0x137D354", VA = "0x137D354", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40026C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private new int totalSteps;

		[Token(Token = "0x40026C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private new int[] totalSubsteps;

		[Token(Token = "0x40026C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Task task;

		[Token(Token = "0x40026C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float lastRadioTime;

		[Token(Token = "0x40026C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private float lastFlapsDownTime;

		[Token(Token = "0x40026C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool wasReadyRadio;

		[Token(Token = "0x40026C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private int sayRudderCount;

		[Token(Token = "0x40026CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool sayFirstApproach;

		[Token(Token = "0x170002B5")]
		protected override Vector3 CarrierPosition
		{
			[Token(Token = "0x60027C3")]
			[Address(RVA = "0xECDC38", Offset = "0xECDC38", VA = "0xECDC38", Slot = "4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170002B6")]
		protected override Quaternion CarrierRotation
		{
			[Token(Token = "0x60027C4")]
			[Address(RVA = "0xECDC4C", Offset = "0xECDC4C", VA = "0xECDC4C", Slot = "5")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x170002B7")]
		protected override bool ShouldSpawnCarrier
		{
			[Token(Token = "0x60027C5")]
			[Address(RVA = "0xECDC64", Offset = "0xECDC64", VA = "0xECDC64", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002B8")]
		private bool FlapsUp
		{
			[Token(Token = "0x60027CD")]
			[Address(RVA = "0xECE0B0", Offset = "0xECE0B0", VA = "0xECE0B0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002B9")]
		private bool FlapsDown
		{
			[Token(Token = "0x60027CE")]
			[Address(RVA = "0xECE0DC", Offset = "0xECE0DC", VA = "0xECE0DC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60027C6")]
		[Address(RVA = "0xECDC6C", Offset = "0xECDC6C", VA = "0xECDC6C", Slot = "11")]
		protected override void OverrideSteps(ref int steps, ref int[] substeps)
		{
		}

		[Token(Token = "0x60027C7")]
		[Address(RVA = "0xECDC80", Offset = "0xECDC80", VA = "0xECDC80", Slot = "14")]
		protected override MissionType GetRadioMissionType()
		{
			return default(MissionType);
		}

		[Token(Token = "0x60027C8")]
		[Address(RVA = "0xECDD08", Offset = "0xECDD08", VA = "0xECDD08", Slot = "12")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92F528", Offset = "0x92F528")]
		protected override IEnumerator StepLogic()
		{
			return null;
		}

		[Token(Token = "0x60027C9")]
		[Address(RVA = "0xECDD74", Offset = "0xECDD74", VA = "0xECDD74")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92F588", Offset = "0x92F588")]
		private IEnumerator RepeatAfterPassTarget()
		{
			return null;
		}

		[Token(Token = "0x60027CA")]
		[Address(RVA = "0xECDDE0", Offset = "0xECDDE0", VA = "0xECDDE0")]
		private void GetReadyRadio()
		{
		}

		[Token(Token = "0x60027CB")]
		[Address(RVA = "0xECDE74", Offset = "0xECDE74", VA = "0xECDE74")]
		private bool IsNearTarget()
		{
			return default(bool);
		}

		[Token(Token = "0x60027CC")]
		[Address(RVA = "0xECDFB4", Offset = "0xECDFB4", VA = "0xECDFB4")]
		private bool FlapsUpRadio()
		{
			return default(bool);
		}

		[Token(Token = "0x60027CF")]
		[Address(RVA = "0xECE108", Offset = "0xECE108", VA = "0xECE108")]
		public TutorialRockets()
		{
		}
	}
	[Token(Token = "0x20005BB")]
	public class TutorialShooting : Tutorial
	{
		[Token(Token = "0x20005BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x919194", Offset = "0x919194")]
		private sealed class <StepLogic>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40026D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40026D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40026DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TutorialShooting <>4__this;

			[Token(Token = "0x40026DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Squadron <sq>5__2;

			[Token(Token = "0x40026DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <lastRadioMsg>5__3;

			[Token(Token = "0x40026DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private bool <wasInRange>5__4;

			[Token(Token = "0x40026DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <lastTemp>5__5;

			[Token(Token = "0x170002C0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60027E5")]
				[Address(RVA = "0x137EFA4", Offset = "0x137EFA4", VA = "0x137EFA4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002C1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60027E7")]
				[Address(RVA = "0x137EFEC", Offset = "0x137EFEC", VA = "0x137EFEC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60027E2")]
			[Address(RVA = "0x137E53C", Offset = "0x137E53C", VA = "0x137E53C")]
			[DebuggerHidden]
			public <StepLogic>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x60027E3")]
			[Address(RVA = "0x137E568", Offset = "0x137E568", VA = "0x137E568", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60027E4")]
			[Address(RVA = "0x137E56C", Offset = "0x137E56C", VA = "0x137E56C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60027E6")]
			[Address(RVA = "0x137EFAC", Offset = "0x137EFAC", VA = "0x137EFAC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40026D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private new int totalSteps;

		[Token(Token = "0x40026D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private new int[] totalSubsteps;

		[Token(Token = "0x40026D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float farFromTargetTime;

		[Token(Token = "0x40026D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Squadron sq;

		[Token(Token = "0x40026D6")]
		private const float kMaxDistance = 200f;

		[Token(Token = "0x40026D7")]
		private const float kMinDot = 0.8f;

		[Token(Token = "0x170002BE")]
		protected override bool ShouldSpawnCarrier
		{
			[Token(Token = "0x60027DC")]
			[Address(RVA = "0xECE1C4", Offset = "0xECE1C4", VA = "0xECE1C4", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002BF")]
		private bool IsNearTarget
		{
			[Token(Token = "0x60027E0")]
			[Address(RVA = "0xECE334", Offset = "0xECE334", VA = "0xECE334")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60027DD")]
		[Address(RVA = "0xECE1CC", Offset = "0xECE1CC", VA = "0xECE1CC", Slot = "11")]
		protected override void OverrideSteps(ref int steps, ref int[] substeps)
		{
		}

		[Token(Token = "0x60027DE")]
		[Address(RVA = "0xECE1E0", Offset = "0xECE1E0", VA = "0xECE1E0", Slot = "12")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92F688", Offset = "0x92F688")]
		protected override IEnumerator StepLogic()
		{
			return null;
		}

		[Token(Token = "0x60027DF")]
		[Address(RVA = "0xECE24C", Offset = "0xECE24C", VA = "0xECE24C")]
		private bool FarFromTarget()
		{
			return default(bool);
		}

		[Token(Token = "0x60027E1")]
		[Address(RVA = "0xECE4A8", Offset = "0xECE4A8", VA = "0xECE4A8")]
		public TutorialShooting()
		{
		}
	}
	[Token(Token = "0x20005BD")]
	public class TutorialTakeoff : Tutorial
	{
		[Token(Token = "0x20005BE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9191A4", Offset = "0x9191A4")]
		private sealed class <StepLogic>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40026E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40026E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40026E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TutorialTakeoff <>4__this;

			[Token(Token = "0x40026E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Transform <landway>5__2;

			[Token(Token = "0x40026E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <throttle>5__3;

			[Token(Token = "0x40026E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <lastH>5__4;

			[Token(Token = "0x170002C2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60027F1")]
				[Address(RVA = "0x137F79C", Offset = "0x137F79C", VA = "0x137F79C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002C3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60027F3")]
				[Address(RVA = "0x137F7E4", Offset = "0x137F7E4", VA = "0x137F7E4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60027EE")]
			[Address(RVA = "0x137EFF4", Offset = "0x137EFF4", VA = "0x137EFF4")]
			[DebuggerHidden]
			public <StepLogic>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x60027EF")]
			[Address(RVA = "0x137F020", Offset = "0x137F020", VA = "0x137F020", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60027F0")]
			[Address(RVA = "0x137F024", Offset = "0x137F024", VA = "0x137F024", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60027F2")]
			[Address(RVA = "0x137F7A4", Offset = "0x137F7A4", VA = "0x137F7A4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40026DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private new int totalSteps;

		[Token(Token = "0x40026E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private new int[] totalSubsteps;

		[Token(Token = "0x60027E8")]
		[Address(RVA = "0xECE55C", Offset = "0xECE55C", VA = "0xECE55C", Slot = "11")]
		protected override void OverrideSteps(ref int steps, ref int[] substeps)
		{
		}

		[Token(Token = "0x60027E9")]
		[Address(RVA = "0xECE570", Offset = "0xECE570", VA = "0xECE570", Slot = "7")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60027EA")]
		[Address(RVA = "0xECE624", Offset = "0xECE624", VA = "0xECE624", Slot = "8")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60027EB")]
		[Address(RVA = "0xECE6F4", Offset = "0xECE6F4", VA = "0xECE6F4", Slot = "12")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92F738", Offset = "0x92F738")]
		protected override IEnumerator StepLogic()
		{
			return null;
		}

		[Token(Token = "0x60027EC")]
		[Address(RVA = "0xECE760", Offset = "0xECE760", VA = "0xECE760", Slot = "10")]
		protected override void PlayerPlaneSpawned(PlaneBody pb)
		{
		}

		[Token(Token = "0x60027ED")]
		[Address(RVA = "0xECE9E8", Offset = "0xECE9E8", VA = "0xECE9E8")]
		public TutorialTakeoff()
		{
		}
	}
	[Token(Token = "0x20005BF")]
	public class TutorialTorpedoes : Tutorial
	{
		[Token(Token = "0x20005C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9191B4", Offset = "0x9191B4")]
		private sealed class <FillBombs>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40026F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40026F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40026F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TutorialTorpedoes <>4__this;

			[Token(Token = "0x170002CF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002815")]
				[Address(RVA = "0x11B2C4C", Offset = "0x11B2C4C", VA = "0x11B2C4C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002D0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002817")]
				[Address(RVA = "0x11B2C94", Offset = "0x11B2C94", VA = "0x11B2C94", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002812")]
			[Address(RVA = "0x11B2B84", Offset = "0x11B2B84", VA = "0x11B2B84")]
			[DebuggerHidden]
			public <FillBombs>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6002813")]
			[Address(RVA = "0x11B2BB0", Offset = "0x11B2BB0", VA = "0x11B2BB0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002814")]
			[Address(RVA = "0x11B2BB4", Offset = "0x11B2BB4", VA = "0x11B2BB4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002816")]
			[Address(RVA = "0x11B2C54", Offset = "0x11B2C54", VA = "0x11B2C54", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005C1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9191C4", Offset = "0x9191C4")]
		private sealed class <NeutralizeBombsOnGround>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40026F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40026F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x170002D1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600281B")]
				[Address(RVA = "0x11B2DD8", Offset = "0x11B2DD8", VA = "0x11B2DD8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002D2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600281D")]
				[Address(RVA = "0x11B2E20", Offset = "0x11B2E20", VA = "0x11B2E20", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002818")]
			[Address(RVA = "0x11B2C9C", Offset = "0x11B2C9C", VA = "0x11B2C9C")]
			[DebuggerHidden]
			public <NeutralizeBombsOnGround>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6002819")]
			[Address(RVA = "0x11B2CC8", Offset = "0x11B2CC8", VA = "0x11B2CC8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600281A")]
			[Address(RVA = "0x11B2CCC", Offset = "0x11B2CCC", VA = "0x11B2CCC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600281C")]
			[Address(RVA = "0x11B2DE0", Offset = "0x11B2DE0", VA = "0x11B2DE0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005C2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9191D4", Offset = "0x9191D4")]
		private sealed class <StepLogic>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40026F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40026F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40026F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TutorialTorpedoes <>4__this;

			[Token(Token = "0x170002D3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002821")]
				[Address(RVA = "0x11B3534", Offset = "0x11B3534", VA = "0x11B3534", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002D4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002823")]
				[Address(RVA = "0x11B357C", Offset = "0x11B357C", VA = "0x11B357C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600281E")]
			[Address(RVA = "0x11B3154", Offset = "0x11B3154", VA = "0x11B3154")]
			[DebuggerHidden]
			public <StepLogic>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x600281F")]
			[Address(RVA = "0x11B3180", Offset = "0x11B3180", VA = "0x11B3180", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002820")]
			[Address(RVA = "0x11B3184", Offset = "0x11B3184", VA = "0x11B3184", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002822")]
			[Address(RVA = "0x11B353C", Offset = "0x11B353C", VA = "0x11B353C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005C3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9191E4", Offset = "0x9191E4")]
		private sealed class <Step4>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40026F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40026F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40026FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TutorialTorpedoes <>4__this;

			[Token(Token = "0x40026FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <count>5__2;

			[Token(Token = "0x40026FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <countAfter>5__3;

			[Token(Token = "0x170002D5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002827")]
				[Address(RVA = "0x11B3104", Offset = "0x11B3104", VA = "0x11B3104", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002D6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002829")]
				[Address(RVA = "0x11B314C", Offset = "0x11B314C", VA = "0x11B314C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002824")]
			[Address(RVA = "0x11B2E28", Offset = "0x11B2E28", VA = "0x11B2E28")]
			[DebuggerHidden]
			public <Step4>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6002825")]
			[Address(RVA = "0x11B2E54", Offset = "0x11B2E54", VA = "0x11B2E54", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002826")]
			[Address(RVA = "0x11B2E58", Offset = "0x11B2E58", VA = "0x11B2E58", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002828")]
			[Address(RVA = "0x11B310C", Offset = "0x11B310C", VA = "0x11B310C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9191F4", Offset = "0x9191F4")]
		private sealed class <WaitDropTorpedo>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40026FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40026FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40026FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TutorialTorpedoes <>4__this;

			[Token(Token = "0x170002D7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600282D")]
				[Address(RVA = "0x11B3744", Offset = "0x11B3744", VA = "0x11B3744", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002D8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600282F")]
				[Address(RVA = "0x11B378C", Offset = "0x11B378C", VA = "0x11B378C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600282A")]
			[Address(RVA = "0x11B3584", Offset = "0x11B3584", VA = "0x11B3584")]
			[DebuggerHidden]
			public <WaitDropTorpedo>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x600282B")]
			[Address(RVA = "0x11B35B0", Offset = "0x11B35B0", VA = "0x11B35B0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600282C")]
			[Address(RVA = "0x11B35B4", Offset = "0x11B35B4", VA = "0x11B35B4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600282E")]
			[Address(RVA = "0x11B374C", Offset = "0x11B374C", VA = "0x11B374C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005C5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x919204", Offset = "0x919204")]
		private sealed class <WaitToredoHit>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002700")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002701")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002702")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TutorialTorpedoes <>4__this;

			[Token(Token = "0x4002703")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Missile <missile>5__2;

			[Token(Token = "0x4002704")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Hull <targetShip>5__3;

			[Token(Token = "0x170002D9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002833")]
				[Address(RVA = "0x11B3B64", Offset = "0x11B3B64", VA = "0x11B3B64", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002DA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002835")]
				[Address(RVA = "0x11B3BAC", Offset = "0x11B3BAC", VA = "0x11B3BAC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002830")]
			[Address(RVA = "0x11B390C", Offset = "0x11B390C", VA = "0x11B390C")]
			[DebuggerHidden]
			public <WaitToredoHit>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6002831")]
			[Address(RVA = "0x11B3938", Offset = "0x11B3938", VA = "0x11B3938", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002832")]
			[Address(RVA = "0x11B393C", Offset = "0x11B393C", VA = "0x11B393C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002834")]
			[Address(RVA = "0x11B3B6C", Offset = "0x11B3B6C", VA = "0x11B3B6C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005C6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x919214", Offset = "0x919214")]
		private sealed class <WaitForRadioEnd>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002705")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002706")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002707")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private float <waitTime>5__2;

			[Token(Token = "0x170002DB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002839")]
				[Address(RVA = "0x11B38BC", Offset = "0x11B38BC", VA = "0x11B38BC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002DC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600283B")]
				[Address(RVA = "0x11B3904", Offset = "0x11B3904", VA = "0x11B3904", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002836")]
			[Address(RVA = "0x11B3794", Offset = "0x11B3794", VA = "0x11B3794")]
			[DebuggerHidden]
			public <WaitForRadioEnd>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x6002837")]
			[Address(RVA = "0x11B37C0", Offset = "0x11B37C0", VA = "0x11B37C0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002838")]
			[Address(RVA = "0x11B37C4", Offset = "0x11B37C4", VA = "0x11B37C4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600283A")]
			[Address(RVA = "0x11B38C4", Offset = "0x11B38C4", VA = "0x11B38C4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40026E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private new int totalSteps;

		[Token(Token = "0x40026E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private new int[] totalSubsteps;

		[Token(Token = "0x40026E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private List<Hull> ships;

		[Token(Token = "0x40026EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Hull aimedShip;

		[Token(Token = "0x40026EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float lastRadioTime;

		[Token(Token = "0x40026EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private float sideRadioTime;

		[Token(Token = "0x40026ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float torpedoStateTime;

		[Token(Token = "0x40026EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private float lastFlapsUpTime;

		[Token(Token = "0x40026EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float lastDropTime;

		[Token(Token = "0x170002C4")]
		private bool IsReady
		{
			[Token(Token = "0x60027FF")]
			[Address(RVA = "0xECEF34", Offset = "0xECEF34", VA = "0xECEF34")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002C5")]
		private int Torpedoes
		{
			[Token(Token = "0x6002806")]
			[Address(RVA = "0xECF898", Offset = "0xECF898", VA = "0xECF898")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002C6")]
		private bool FlapsUp
		{
			[Token(Token = "0x6002807")]
			[Address(RVA = "0xECF86C", Offset = "0xECF86C", VA = "0xECF86C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002C7")]
		private bool FlapsDown
		{
			[Token(Token = "0x6002808")]
			[Address(RVA = "0xECF840", Offset = "0xECF840", VA = "0xECF840")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002C8")]
		private bool ShipsAlive
		{
			[Token(Token = "0x6002809")]
			[Address(RVA = "0xECEF80", Offset = "0xECEF80", VA = "0xECEF80")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002C9")]
		private bool TorpedoReady
		{
			[Token(Token = "0x600280A")]
			[Address(RVA = "0xECF144", Offset = "0xECF144", VA = "0xECF144")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002CA")]
		private bool ShouldDescend
		{
			[Token(Token = "0x600280B")]
			[Address(RVA = "0xECF1B0", Offset = "0xECF1B0", VA = "0xECF1B0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002CB")]
		private bool ShouldSlowDown
		{
			[Token(Token = "0x600280C")]
			[Address(RVA = "0xECF3E0", Offset = "0xECF3E0", VA = "0xECF3E0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002CC")]
		private bool HasTarget
		{
			[Token(Token = "0x600280E")]
			[Address(RVA = "0xECF548", Offset = "0xECF548", VA = "0xECF548")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002CD")]
		private bool IsAimed
		{
			[Token(Token = "0x600280F")]
			[Address(RVA = "0xECF624", Offset = "0xECF624", VA = "0xECF624")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002CE")]
		private bool IsShipBehind
		{
			[Token(Token = "0x6002810")]
			[Address(RVA = "0xECFA64", Offset = "0xECFA64", VA = "0xECFA64")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60027F4")]
		[Address(RVA = "0xECEA9C", Offset = "0xECEA9C", VA = "0xECEA9C", Slot = "11")]
		protected override void OverrideSteps(ref int steps, ref int[] substeps)
		{
		}

		[Token(Token = "0x60027F5")]
		[Address(RVA = "0xECEAB0", Offset = "0xECEAB0", VA = "0xECEAB0", Slot = "10")]
		protected override void PlayerPlaneSpawned(PlaneBody pb)
		{
		}

		[Token(Token = "0x60027F6")]
		[Address(RVA = "0xECEB1C", Offset = "0xECEB1C", VA = "0xECEB1C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92F7E8", Offset = "0x92F7E8")]
		private IEnumerator FillBombs()
		{
			return null;
		}

		[Token(Token = "0x60027F7")]
		[Address(RVA = "0xECEB88", Offset = "0xECEB88", VA = "0xECEB88")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92F848", Offset = "0x92F848")]
		private IEnumerator NeutralizeBombsOnGround()
		{
			return null;
		}

		[Token(Token = "0x60027F8")]
		[Address(RVA = "0xECEBE4", Offset = "0xECEBE4", VA = "0xECEBE4", Slot = "12")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92F8A8", Offset = "0x92F8A8")]
		protected override IEnumerator StepLogic()
		{
			return null;
		}

		[Token(Token = "0x60027F9")]
		[Address(RVA = "0xECEC50", Offset = "0xECEC50", VA = "0xECEC50")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92F908", Offset = "0x92F908")]
		private IEnumerator Step4()
		{
			return null;
		}

		[Token(Token = "0x60027FA")]
		[Address(RVA = "0xECECBC", Offset = "0xECECBC", VA = "0xECECBC")]
		private void Reload()
		{
		}

		[Token(Token = "0x60027FB")]
		[Address(RVA = "0xECED6C", Offset = "0xECED6C", VA = "0xECED6C")]
		private void UseRudderRadio()
		{
		}

		[Token(Token = "0x60027FC")]
		[Address(RVA = "0xECEE00", Offset = "0xECEE00", VA = "0xECEE00")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92F968", Offset = "0x92F968")]
		private IEnumerator WaitDropTorpedo()
		{
			return null;
		}

		[Token(Token = "0x60027FD")]
		[Address(RVA = "0xECEE6C", Offset = "0xECEE6C", VA = "0xECEE6C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92F9C8", Offset = "0x92F9C8")]
		private IEnumerator WaitToredoHit()
		{
			return null;
		}

		[Token(Token = "0x60027FE")]
		[Address(RVA = "0xECEED8", Offset = "0xECEED8", VA = "0xECEED8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x92FA28", Offset = "0x92FA28")]
		private IEnumerator WaitForRadioEnd()
		{
			return null;
		}

		[Token(Token = "0x6002800")]
		[Address(RVA = "0xECEFA0", Offset = "0xECEFA0", VA = "0xECEFA0")]
		private bool TorpedoStateRadio()
		{
			return default(bool);
		}

		[Token(Token = "0x6002801")]
		[Address(RVA = "0xECF21C", Offset = "0xECF21C", VA = "0xECF21C")]
		private bool TorpedoStateDescend()
		{
			return default(bool);
		}

		[Token(Token = "0x6002802")]
		[Address(RVA = "0xECEFFC", Offset = "0xECEFFC", VA = "0xECEFFC")]
		private bool SideAttackRadio()
		{
			return default(bool);
		}

		[Token(Token = "0x6002803")]
		[Address(RVA = "0xECF7C0", Offset = "0xECF7C0", VA = "0xECF7C0")]
		private bool PullUpRadio()
		{
			return default(bool);
		}

		[Token(Token = "0x6002804")]
		[Address(RVA = "0xECF44C", Offset = "0xECF44C", VA = "0xECF44C")]
		private bool UseFlapsRadio()
		{
			return default(bool);
		}

		[Token(Token = "0x6002805")]
		[Address(RVA = "0xECF31C", Offset = "0xECF31C", VA = "0xECF31C")]
		private bool FlapsUpRadio()
		{
			return default(bool);
		}

		[Token(Token = "0x600280D")]
		[Address(RVA = "0xECF908", Offset = "0xECF908", VA = "0xECF908")]
		private bool DoesMissilePassShip(Missile m, Vector3 p)
		{
			return default(bool);
		}

		[Token(Token = "0x6002811")]
		[Address(RVA = "0xECFB0C", Offset = "0xECFB0C", VA = "0xECFB0C")]
		public TutorialTorpedoes()
		{
		}
	}
}
namespace Photon.Realtime
{
	[Token(Token = "0x20005C7")]
	internal static class PlayerExtension
	{
		[Token(Token = "0x600283C")]
		[Address(RVA = "0x10C84D4", Offset = "0x10C84D4", VA = "0x10C84D4")]
		public static void Reset(this Player player, bool resetInSession = true, bool resetTeam = true)
		{
		}

		[Token(Token = "0x600283D")]
		[Address(RVA = "0x10C93D0", Offset = "0x10C93D0", VA = "0x10C93D0")]
		public static bool IsReady(this Player player)
		{
			return default(bool);
		}

		[Token(Token = "0x600283E")]
		[Address(RVA = "0x10C8610", Offset = "0x10C8610", VA = "0x10C8610")]
		public static void SetReady(this Player player, bool ready)
		{
		}

		[Token(Token = "0x600283F")]
		[Address(RVA = "0x10C94A8", Offset = "0x10C94A8", VA = "0x10C94A8")]
		public static int GetPlayAgain(this Player player)
		{
			return default(int);
		}

		[Token(Token = "0x6002840")]
		[Address(RVA = "0x10C8708", Offset = "0x10C8708", VA = "0x10C8708")]
		public static void SetPlayAgain(this Player player, int play)
		{
		}

		[Token(Token = "0x6002841")]
		[Address(RVA = "0x10C9578", Offset = "0x10C9578", VA = "0x10C9578")]
		public static MultiplayerConfig.Team GetTeam(this Player player)
		{
			return default(MultiplayerConfig.Team);
		}

		[Token(Token = "0x6002842")]
		[Address(RVA = "0x10C88D4", Offset = "0x10C88D4", VA = "0x10C88D4")]
		public static void SetTeam(this Player player, MultiplayerConfig.Team team)
		{
		}

		[Token(Token = "0x6002843")]
		[Address(RVA = "0x10C9648", Offset = "0x10C9648", VA = "0x10C9648")]
		public static string GetPlane(this Player player)
		{
			return null;
		}

		[Token(Token = "0x6002844")]
		[Address(RVA = "0x10C9718", Offset = "0x10C9718", VA = "0x10C9718")]
		public static void SetPlane(this Player player, string plane)
		{
		}

		[Token(Token = "0x6002845")]
		[Address(RVA = "0x10C97D8", Offset = "0x10C97D8", VA = "0x10C97D8")]
		public static int GetCommunityPlaneIdx(this Player player)
		{
			return default(int);
		}

		[Token(Token = "0x6002846")]
		[Address(RVA = "0x10C98A8", Offset = "0x10C98A8", VA = "0x10C98A8")]
		public static int GetExpLevel(this Player player)
		{
			return default(int);
		}

		[Token(Token = "0x6002847")]
		[Address(RVA = "0x10C9978", Offset = "0x10C9978", VA = "0x10C9978")]
		public static void SetExpLevel(this Player player, int level)
		{
		}

		[Token(Token = "0x6002848")]
		[Address(RVA = "0x10C89BC", Offset = "0x10C89BC", VA = "0x10C89BC")]
		public static void SetCommunityPlaneIdx(this Player player, int idx)
		{
		}

		[Token(Token = "0x6002849")]
		[Address(RVA = "0x10C9A60", Offset = "0x10C9A60", VA = "0x10C9A60")]
		public static bool GetRemoveFromRoom(this Player player)
		{
			return default(bool);
		}

		[Token(Token = "0x600284A")]
		[Address(RVA = "0x10C9A88", Offset = "0x10C9A88", VA = "0x10C9A88")]
		public static bool GetRemoveFromRoom(this Player player, out NetPlayer.RemoveReason reason)
		{
			return default(bool);
		}

		[Token(Token = "0x600284B")]
		[Address(RVA = "0x10C9B78", Offset = "0x10C9B78", VA = "0x10C9B78")]
		public static void SetRemoveFromRoom(this Player player, NetPlayer.RemoveReason reason = NetPlayer.RemoveReason.RemovedByHost)
		{
		}

		[Token(Token = "0x600284C")]
		[Address(RVA = "0x10C87F0", Offset = "0x10C87F0", VA = "0x10C87F0")]
		public static void ResetRemovedFromRoom(this Player player)
		{
		}

		[Token(Token = "0x600284D")]
		[Address(RVA = "0x10C9D1C", Offset = "0x10C9D1C", VA = "0x10C9D1C")]
		public static int GetGunnerAtPlayerId(this Player player)
		{
			return default(int);
		}

		[Token(Token = "0x600284E")]
		[Address(RVA = "0x10C8AA4", Offset = "0x10C8AA4", VA = "0x10C8AA4")]
		public static void SetGunnerAtPlayerId(this Player player, int id)
		{
		}

		[Token(Token = "0x600284F")]
		[Address(RVA = "0x10C9DEC", Offset = "0x10C9DEC", VA = "0x10C9DEC")]
		public static int GetGunnerIdx(this Player player)
		{
			return default(int);
		}

		[Token(Token = "0x6002850")]
		[Address(RVA = "0x10C8B8C", Offset = "0x10C8B8C", VA = "0x10C8B8C")]
		public static void SetGunnerIdx(this Player player, int idx)
		{
		}

		[Token(Token = "0x6002851")]
		[Address(RVA = "0x10C9EBC", Offset = "0x10C9EBC", VA = "0x10C9EBC")]
		public static bool IsGunnerSlotLocked(this Player player, int idx)
		{
			return default(bool);
		}

		[Token(Token = "0x6002852")]
		[Address(RVA = "0x10C9FA8", Offset = "0x10C9FA8", VA = "0x10C9FA8")]
		public static void SetGunnerSlotLocked(this Player player, int idx, bool locked)
		{
		}

		[Token(Token = "0x6002853")]
		[Address(RVA = "0x10C8C74", Offset = "0x10C8C74", VA = "0x10C8C74")]
		public static void ResetGunnerSlotLocked(this Player player)
		{
		}

		[Token(Token = "0x6002854")]
		[Address(RVA = "0x10CA12C", Offset = "0x10CA12C", VA = "0x10CA12C")]
		public static bool IsObserverMode(this Player player)
		{
			return default(bool);
		}

		[Token(Token = "0x6002855")]
		[Address(RVA = "0x10C8D58", Offset = "0x10C8D58", VA = "0x10C8D58")]
		public static void SetObserverMode(this Player player, bool o)
		{
		}

		[Token(Token = "0x6002856")]
		[Address(RVA = "0x10CA204", Offset = "0x10CA204", VA = "0x10CA204")]
		public static int GetObserverAtPlayerId(this Player player)
		{
			return default(int);
		}

		[Token(Token = "0x6002857")]
		[Address(RVA = "0x10C8E50", Offset = "0x10C8E50", VA = "0x10C8E50")]
		public static void SetObserverAtPlayerId(this Player player, int id)
		{
		}

		[Token(Token = "0x6002858")]
		[Address(RVA = "0x10CA2D4", Offset = "0x10CA2D4", VA = "0x10CA2D4")]
		public static bool IsMicrophoneAvailable(this Player player)
		{
			return default(bool);
		}

		[Token(Token = "0x6002859")]
		[Address(RVA = "0x10C9020", Offset = "0x10C9020", VA = "0x10C9020")]
		public static void SetMicrophoneAvailable(this Player player, bool a)
		{
		}

		[Token(Token = "0x600285A")]
		[Address(RVA = "0x10CA3AC", Offset = "0x10CA3AC", VA = "0x10CA3AC")]
		public static bool IsMicrophoneEnabled(this Player player)
		{
			return default(bool);
		}

		[Token(Token = "0x600285B")]
		[Address(RVA = "0x10C8F38", Offset = "0x10C8F38", VA = "0x10C8F38")]
		public static void SetMicrophoneEnabled(this Player player, bool e)
		{
		}

		[Token(Token = "0x600285C")]
		[Address(RVA = "0x10CA484", Offset = "0x10CA484", VA = "0x10CA484")]
		public static bool IsInSession(this Player player)
		{
			return default(bool);
		}

		[Token(Token = "0x600285D")]
		[Address(RVA = "0x10C92D8", Offset = "0x10C92D8", VA = "0x10C92D8")]
		public static void SetIsInSession(this Player player, bool val)
		{
		}

		[Token(Token = "0x600285E")]
		[Address(RVA = "0x10C9C70", Offset = "0x10C9C70", VA = "0x10C9C70")]
		private static void SetIsInSession(this Player player, bool val, ExitGames.Client.Photon.Hashtable vals)
		{
		}

		[Token(Token = "0x600285F")]
		[Address(RVA = "0x10CA55C", Offset = "0x10CA55C", VA = "0x10CA55C")]
		public static ulong GetPlatformUserId(this Player player)
		{
			return default(ulong);
		}

		[Token(Token = "0x6002860")]
		[Address(RVA = "0x10C9108", Offset = "0x10C9108", VA = "0x10C9108")]
		public static void SetPlatformUserId(this Player player, ulong id)
		{
		}

		[Token(Token = "0x6002861")]
		[Address(RVA = "0x10CA62C", Offset = "0x10CA62C", VA = "0x10CA62C")]
		public static NetFriends.Platform GetPlatformType(this Player player)
		{
			return default(NetFriends.Platform);
		}

		[Token(Token = "0x6002862")]
		[Address(RVA = "0x10C91F0", Offset = "0x10C91F0", VA = "0x10C91F0")]
		public static void SetPlatformType(this Player player, NetFriends.Platform type)
		{
		}
	}
}
namespace MeshCutter
{
	[Token(Token = "0x20005C8")]
	public class Intersections
	{
		[StructLayout(3)]
		[Token(Token = "0x20005C9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x919234", Offset = "0x919234")]
		private struct <>c__DisplayClass25_0
		{
			[Token(Token = "0x4002716")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Intersections <>4__this;

			[Token(Token = "0x4002717")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public SlicePlane slice;

			[Token(Token = "0x4002718")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int prevPoint;

			[Token(Token = "0x4002719")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int lp;

			[Token(Token = "0x400271A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int nextPoint;

			[Token(Token = "0x400271B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TempMesh posMesh;

			[Token(Token = "0x400271C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TempMesh negMesh;

			[Token(Token = "0x400271D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public (Vector3, Vector2, Vector2, Color) pn;

			[Token(Token = "0x400271E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public (Vector3, Vector2, Vector2, Color) pp;

			[Token(Token = "0x400271F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public List<Vector3> intersectVectors;
		}

		[StructLayout(3)]
		[Token(Token = "0x20005CA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x919244", Offset = "0x919244")]
		private struct <>c__DisplayClass25_1
		{
			[Token(Token = "0x4002720")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 sNormal;

			[Token(Token = "0x4002721")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 sCenter;
		}

		[Token(Token = "0x4002708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Vector3[] v;

		[Token(Token = "0x4002709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Vector3[] n;

		[Token(Token = "0x400270A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Vector4[] tan;

		[Token(Token = "0x400270B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly Vector2[] u;

		[Token(Token = "0x400270C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly Vector2[] u2;

		[Token(Token = "0x400270D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly Color[] colors;

		[Token(Token = "0x400270E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly int[] t;

		[Token(Token = "0x400270F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly bool[] positive;

		[Token(Token = "0x4002710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly bool[] it;

		[Token(Token = "0x4002711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly bool[] st;

		[Token(Token = "0x4002712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private readonly bool[] swaps;

		[Token(Token = "0x4002713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private readonly Vector3[] ip;

		[Token(Token = "0x4002714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private readonly Vector3[] sp;

		[Token(Token = "0x4002715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Ray edgeRay;

		[Token(Token = "0x6002863")]
		[Address(RVA = "0x13ACC18", Offset = "0x13ACC18", VA = "0x13ACC18")]
		public static bool BoundPlaneIntersect(Mesh mesh, ref Plane plane)
		{
			return default(bool);
		}

		[Token(Token = "0x6002864")]
		[Address(RVA = "0x13ACDAC", Offset = "0x13ACDAC", VA = "0x13ACDAC")]
		public static bool BoundPlaneIntersect(Mesh mesh, Collider collider, bool planar)
		{
			return default(bool);
		}

		[Token(Token = "0x6002865")]
		[Address(RVA = "0x13ACEBC", Offset = "0x13ACEBC", VA = "0x13ACEBC")]
		public static bool BoundPlaneIntersect(Mesh mesh, SlicePlane slice)
		{
			return default(bool);
		}

		[Token(Token = "0x6002866")]
		[Address(RVA = "0x13AD07C", Offset = "0x13AD07C", VA = "0x13AD07C")]
		public Intersections()
		{
		}

		[Token(Token = "0x6002867")]
		[Address(RVA = "0x13AD208", Offset = "0x13AD208", VA = "0x13AD208")]
		public (Vector3, Vector2, Vector2, Color) Intersect(Plane plane, Vector3 first, Vector3 second, Vector2 uv1, Vector2 uv2, Vector2 uv21, Vector2 uv22, Color clr1, Color clr2)
		{
			return default((Vector3, Vector2, Vector2, Color));
		}

		[Token(Token = "0x6002868")]
		[Address(RVA = "0x13AD4DC", Offset = "0x13AD4DC", VA = "0x13AD4DC")]
		public static bool IsPointWithinCollider(Collider collider, Vector3 point, out float distance, out Vector3 closest, float margin = 0f)
		{
			return default(bool);
		}

		[Token(Token = "0x6002869")]
		[Address(RVA = "0x13AD580", Offset = "0x13AD580", VA = "0x13AD580")]
		public static bool IsPointWithinSlice(SlicePlane slice, Vector3 point, out float distance, out Vector3 closest, float margin = 0f)
		{
			return default(bool);
		}

		[Token(Token = "0x600286A")]
		[Address(RVA = "0x13AD644", Offset = "0x13AD644", VA = "0x13AD644")]
		private Vector3 GetPointOnLine(Vector3 p, Vector3 a, Vector3 b)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600286B")]
		[Address(RVA = "0x13AD6A4", Offset = "0x13AD6A4", VA = "0x13AD6A4")]
		private Vector3 LineIntersectPlanePoint(Vector3 rayTo, Vector3 rayFrom, Vector3 planeNormal, Vector3 planePoint, out bool swap)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600286C")]
		[Address(RVA = "0x13AD80C", Offset = "0x13AD80C", VA = "0x13AD80C")]
		private bool IsPointInsideTriangle(Vector3 p1, Vector3 p2, Vector3 p3, Vector3 p)
		{
			return default(bool);
		}

		[Token(Token = "0x600286D")]
		[Address(RVA = "0x13AD8F4", Offset = "0x13AD8F4", VA = "0x13AD8F4")]
		public (Vector3, Vector2, Vector2, Color) Intersect(SlicePlane slice, Vector3 first, Vector3 second, Vector2 uv1, Vector2 uv2, Vector2 uv21, Vector2 uv22, Color clr1, Color clr2)
		{
			return default((Vector3, Vector2, Vector2, Color));
		}

		[Token(Token = "0x600286E")]
		[Address(RVA = "0x13ADBA4", Offset = "0x13ADBA4", VA = "0x13ADBA4")]
		public bool TrianglePlaneIntersect(List<Vector3> vertices, List<Vector3> normals, List<Vector4> tangents, List<Vector2> uvs, List<Vector2> uvs2, List<Color> clrs, List<int> triangles, int startIdx, SlicePlane slice, TempMesh posMesh, TempMesh negMesh, List<Vector3> intersectVectors, bool useTangents)
		{
			return default(bool);
		}

		[Token(Token = "0x600286F")]
		[Address(RVA = "0x13AD8C0", Offset = "0x13AD8C0", VA = "0x13AD8C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92FF28", Offset = "0x92FF28")]
		internal static float <IsPointInsideTriangle>g__triangleArea|23_0(Vector3 _p1, Vector3 _p2, Vector3 _p3)
		{
			return default(float);
		}

		[Token(Token = "0x6002870")]
		[Address(RVA = "0x13B05D8", Offset = "0x13B05D8", VA = "0x13B05D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92FF38", Offset = "0x92FF38")]
		private void <TrianglePlaneIntersect>g__GetIntersectionsWithSlice|25_2(ref <>c__DisplayClass25_0 P_0, ref <>c__DisplayClass25_1 P_1)
		{
		}

		[Token(Token = "0x6002871")]
		[Address(RVA = "0x13B0578", Offset = "0x13B0578", VA = "0x13B0578")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92FF48", Offset = "0x92FF48")]
		internal static bool <TrianglePlaneIntersect>g__AnyIntersections|25_3(bool[] _st)
		{
			return default(bool);
		}

		[Token(Token = "0x6002872")]
		[Address(RVA = "0x13B07F8", Offset = "0x13B07F8", VA = "0x13B07F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92FF58", Offset = "0x92FF58")]
		private void <TrianglePlaneIntersect>g__UseVertices|25_4(bool[] _st, Vector3[] _v, ref <>c__DisplayClass25_0 P_2)
		{
		}

		[Token(Token = "0x6002873")]
		[Address(RVA = "0x13B08D0", Offset = "0x13B08D0", VA = "0x13B08D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92FF68", Offset = "0x92FF68")]
		internal static bool <TrianglePlaneIntersect>g__IsSingle|25_5(bool[] _st)
		{
			return default(bool);
		}

		[Token(Token = "0x6002874")]
		[Address(RVA = "0x13B0958", Offset = "0x13B0958", VA = "0x13B0958")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92FF78", Offset = "0x92FF78")]
		private void <TrianglePlaneIntersect>g__UpdateIndex|25_0(ref <>c__DisplayClass25_0 P_0)
		{
		}

		[Token(Token = "0x6002875")]
		[Address(RVA = "0x13B09C8", Offset = "0x13B09C8", VA = "0x13B09C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92FF88", Offset = "0x92FF88")]
		private void <TrianglePlaneIntersect>g__AddPair|25_1(ref <>c__DisplayClass25_0 P_0)
		{
		}
	}
	[Token(Token = "0x20005CB")]
	public class MeshCutter
	{
		[Token(Token = "0x4002722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91E0A4", Offset = "0x91E0A4")]
		private TempMesh <PositiveMesh>k__BackingField;

		[Token(Token = "0x4002723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91E0B4", Offset = "0x91E0B4")]
		private TempMesh <NegativeMesh>k__BackingField;

		[Token(Token = "0x4002724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<Vector3> addedPairs;

		[Token(Token = "0x4002725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly List<Vector3> ogVertices;

		[Token(Token = "0x4002726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly List<int> ogTriangles;

		[Token(Token = "0x4002727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly List<Vector3> ogNormals;

		[Token(Token = "0x4002728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly List<Vector4> ogTangents;

		[Token(Token = "0x4002729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly List<Vector2> ogUvs;

		[Token(Token = "0x400272A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly List<Vector2> ogUvs2;

		[Token(Token = "0x400272B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly List<Color> ogColors;

		[Token(Token = "0x400272C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private readonly List<Vector3> intersectPair;

		[Token(Token = "0x400272D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private readonly Vector3[] tempTriangle;

		[Token(Token = "0x400272E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Intersections intersect;

		[Token(Token = "0x400272F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private readonly float threshold;

		[Token(Token = "0x170002DD")]
		public TempMesh PositiveMesh
		{
			[Token(Token = "0x6002876")]
			[Address(RVA = "0x1368FB4", Offset = "0x1368FB4", VA = "0x1368FB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92FF98", Offset = "0x92FF98")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002877")]
			[Address(RVA = "0x1368FBC", Offset = "0x1368FBC", VA = "0x1368FBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92FFA8", Offset = "0x92FFA8")]
			private set
			{
			}
		}

		[Token(Token = "0x170002DE")]
		public TempMesh NegativeMesh
		{
			[Token(Token = "0x6002878")]
			[Address(RVA = "0x1368FC4", Offset = "0x1368FC4", VA = "0x1368FC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92FFB8", Offset = "0x92FFB8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002879")]
			[Address(RVA = "0x1368FCC", Offset = "0x1368FCC", VA = "0x1368FCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92FFC8", Offset = "0x92FFC8")]
			private set
			{
			}
		}

		[Token(Token = "0x600287A")]
		[Address(RVA = "0x1368FD4", Offset = "0x1368FD4", VA = "0x1368FD4")]
		public MeshCutter(int initialArraySize)
		{
		}

		[Token(Token = "0x600287B")]
		[Address(RVA = "0x13692A0", Offset = "0x13692A0", VA = "0x13692A0")]
		public bool SliceMesh(Mesh mesh, SlicePlane slice)
		{
			return default(bool);
		}

		[Token(Token = "0x600287C")]
		[Address(RVA = "0x1369714", Offset = "0x1369714", VA = "0x1369714")]
		public Vector3 GetFirstVertex()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600287D")]
		[Address(RVA = "0x13697C4", Offset = "0x13697C4", VA = "0x13697C4")]
		private void FillBoundaryFace(List<Vector3> added)
		{
		}

		[Token(Token = "0x600287E")]
		[Address(RVA = "0x1369AAC", Offset = "0x1369AAC", VA = "0x1369AAC")]
		private List<Vector3> FindRealPolygon(List<Vector3> pairs)
		{
			return null;
		}

		[Token(Token = "0x600287F")]
		[Address(RVA = "0x1369D34", Offset = "0x1369D34", VA = "0x1369D34")]
		private void AddTriangle(List<Vector3> face, int t1, int t2, int t3)
		{
		}
	}
	[Token(Token = "0x20005CC")]
	public static class MeshUtils
	{
		[Token(Token = "0x6002880")]
		[Address(RVA = "0x136D584", Offset = "0x136D584", VA = "0x136D584")]
		public static Vector3 FindCenter(List<Vector3> pairs)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002881")]
		[Address(RVA = "0x136D670", Offset = "0x136D670", VA = "0x136D670")]
		public static void OffsetVertices(List<Vector3> v, Vector3 offset)
		{
		}

		[Token(Token = "0x6002882")]
		[Address(RVA = "0x1369894", Offset = "0x1369894", VA = "0x1369894")]
		public static void ReorderList(List<Vector3> pairs)
		{
		}

		[Token(Token = "0x6002883")]
		[Address(RVA = "0x136D75C", Offset = "0x136D75C", VA = "0x136D75C")]
		private static void SwitchPairs(List<Vector3> pairs, int pos1, int pos2)
		{
		}
	}
	[Token(Token = "0x20005CD")]
	public class TempMesh
	{
		[Token(Token = "0x4002730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Vector3> vertices;

		[Token(Token = "0x4002731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Vector3> normals;

		[Token(Token = "0x4002732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<Vector2> uvs;

		[Token(Token = "0x4002733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<Vector2> uvs2;

		[Token(Token = "0x4002734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<Color> colors;

		[Token(Token = "0x4002735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<int> triangles;

		[Token(Token = "0x4002736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool useUV2;

		[Token(Token = "0x4002737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool useColors;

		[Token(Token = "0x4002738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Dictionary<int, int> vMapping;

		[Token(Token = "0x4002739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float surfacearea;

		[Token(Token = "0x6002884")]
		[Address(RVA = "0x21DBECC", Offset = "0x21DBECC", VA = "0x21DBECC")]
		public TempMesh(int vertexCapacity)
		{
		}

		[Token(Token = "0x6002885")]
		[Address(RVA = "0x21DC0AC", Offset = "0x21DC0AC", VA = "0x21DC0AC")]
		public void Clear(bool useUV2, bool useColors)
		{
		}

		[Token(Token = "0x6002886")]
		[Address(RVA = "0x21DC1D8", Offset = "0x21DC1D8", VA = "0x21DC1D8")]
		private void AddPoint(Vector3 point, Vector3 normal, Vector2 uv, Vector2 uv2, Color clr)
		{
		}

		[Token(Token = "0x6002887")]
		[Address(RVA = "0x21DC3A4", Offset = "0x21DC3A4", VA = "0x21DC3A4")]
		public void AddOgTriangle(int[] indices)
		{
		}

		[Token(Token = "0x6002888")]
		[Address(RVA = "0x21DC720", Offset = "0x21DC720", VA = "0x21DC720")]
		public void AddSlicedTriangle(int i1, Vector3 v2, Vector2 uv2, Vector3 uv22, Color clr2, int i3, Vector3 faceNormal)
		{
		}

		[Token(Token = "0x6002889")]
		[Address(RVA = "0x21DCCB8", Offset = "0x21DCCB8", VA = "0x21DCCB8")]
		public void AddSlicedTriangle(int i1, Vector3 v2, Vector3 v3, Vector2 uv2, Vector2 uv3, Vector2 uv22, Vector2 uv23, Color clr2, Color clr3, Vector3 faceNormal)
		{
		}

		[Token(Token = "0x600288A")]
		[Address(RVA = "0x21DD1E8", Offset = "0x21DD1E8", VA = "0x21DD1E8")]
		public void AddTriangle(Vector3[] points)
		{
		}

		[Token(Token = "0x600288B")]
		[Address(RVA = "0x21DD380", Offset = "0x21DD380", VA = "0x21DD380")]
		public void ContainsKeys(List<int> triangles, int startIdx, bool[] isTrue)
		{
		}

		[Token(Token = "0x600288C")]
		[Address(RVA = "0x21DD47C", Offset = "0x21DD47C", VA = "0x21DD47C")]
		public void AddVertex(List<Vector3> ogVertices, List<Vector3> ogNormals, List<Vector2> ogUvs, List<Vector2> ogUvs2, List<Color> ogColors, int index)
		{
		}

		[Token(Token = "0x600288D")]
		[Address(RVA = "0x21DC4B0", Offset = "0x21DC4B0", VA = "0x21DC4B0")]
		private float GetTriangleArea(int i)
		{
			return default(float);
		}
	}
	[Token(Token = "0x20005CE")]
	public class SliceConfigurator : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20005CF")]
		public class Config
		{
			[Token(Token = "0x4002741")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SlicePlane plane;

			[Token(Token = "0x4002742")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Side sourceSide;

			[Token(Token = "0x4002743")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Side removePreviousSide;

			[Token(Token = "0x6002890")]
			[Address(RVA = "0x136F48C", Offset = "0x136F48C", VA = "0x136F48C")]
			public Config()
			{
			}
		}

		[Token(Token = "0x400273A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SliceConfigurator primaryConfigurator;

		[Token(Token = "0x400273B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject firstSliceTarget;

		[Token(Token = "0x400273C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SlicePlane firstSlicePlane;

		[Token(Token = "0x400273D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91E0C4", Offset = "0x91E0C4")]
		public bool bakeSkinnedMesh;

		[Token(Token = "0x400273E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Config[] slicesConfig;

		[Token(Token = "0x400273F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Side remainingSide;

		[Token(Token = "0x4002740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform createdHolder;

		[Token(Token = "0x600288E")]
		[Address(RVA = "0x10B8030", Offset = "0x10B8030", VA = "0x10B8030")]
		public void Slice()
		{
		}

		[Token(Token = "0x600288F")]
		[Address(RVA = "0x10B8034", Offset = "0x10B8034", VA = "0x10B8034")]
		public SliceConfigurator()
		{
		}
	}
	[Token(Token = "0x20005D0")]
	[ExecuteInEditMode]
	public class SlicePlane : MonoBehaviour
	{
		[Token(Token = "0x4002744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float size;

		[Token(Token = "0x4002745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Collider collider;

		[Token(Token = "0x4002746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Mesh mesh;

		[Token(Token = "0x4002747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool planarSlice;

		[Token(Token = "0x4002748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public Vector3[] vertices;

		[Token(Token = "0x4002749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public Vector3[] normals;

		[Token(Token = "0x400274A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public int[] triangles;

		[Token(Token = "0x400274B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public Vector3 pos;

		[Token(Token = "0x400274C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public MeshCollider triangleCollider;

		[Token(Token = "0x400274D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public MeshCollider sliceTriCollider;

		[Token(Token = "0x400274E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public List<Vector3> usedVertices;

		[Token(Token = "0x6002891")]
		[Address(RVA = "0x10B803C", Offset = "0x10B803C", VA = "0x10B803C")]
		public void Create(Transform source)
		{
		}

		[Token(Token = "0x6002892")]
		[Address(RVA = "0x10B839C", Offset = "0x10B839C", VA = "0x10B839C")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6002893")]
		[Address(RVA = "0x10B8504", Offset = "0x10B8504", VA = "0x10B8504")]
		public bool ContainsVertex(Vector3 v)
		{
			return default(bool);
		}

		[Token(Token = "0x6002894")]
		[Address(RVA = "0x10B8618", Offset = "0x10B8618", VA = "0x10B8618")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6002895")]
		[Address(RVA = "0x10B875C", Offset = "0x10B875C", VA = "0x10B875C")]
		public SlicePlane()
		{
		}
	}
	[Token(Token = "0x20005D1")]
	public enum Side
	{
		[Token(Token = "0x4002750")]
		Positive,
		[Token(Token = "0x4002751")]
		Negative
	}
	[Token(Token = "0x20005D2")]
	public class SlicedData : MonoBehaviour
	{
		[Token(Token = "0x4002752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Side side;

		[Token(Token = "0x6002896")]
		[Address(RVA = "0x10B876C", Offset = "0x10B876C", VA = "0x10B876C")]
		public SlicedData()
		{
		}
	}
	[Token(Token = "0x20005D3")]
	public class Slicer : MonoBehaviour
	{
		[Token(Token = "0x4002753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float separation;

		[Token(Token = "0x4002754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Plane slicePlane;

		[Token(Token = "0x4002755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private MeshCutter meshCutter;

		[Token(Token = "0x4002756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TempMesh biggerMesh;

		[Token(Token = "0x4002757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TempMesh smallerMesh;

		[Token(Token = "0x6002897")]
		[Address(RVA = "0x10B8774", Offset = "0x10B8774", VA = "0x10B8774")]
		public void SliceObjects(SlicePlane slice, GameObject lookupObject, out GameObject slicePositive, out GameObject sliceNegative, bool bakeSkinnedMesh = false)
		{
		}

		[Token(Token = "0x6002898")]
		[Address(RVA = "0x10B89C8", Offset = "0x10B89C8", VA = "0x10B89C8")]
		private bool SliceObject(SlicePlane slice, GameObject obj, List<Transform> positiveObjects, List<Transform> negativeObjects, out GameObject slicePositive, out GameObject sliceNegative, bool bakeSkinnedMesh = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6002899")]
		[Address(RVA = "0x10B9110", Offset = "0x10B9110", VA = "0x10B9110")]
		private void SetGlobalScale(Transform t, Vector3 globalScale)
		{
		}

		[Token(Token = "0x600289A")]
		[Address(RVA = "0x10B91AC", Offset = "0x10B91AC", VA = "0x10B91AC")]
		private void ReplaceMeshOnRenderer(GameObject obj, TempMesh tempMesh)
		{
		}

		[Token(Token = "0x600289B")]
		[Address(RVA = "0x10B93D8", Offset = "0x10B93D8", VA = "0x10B93D8")]
		private void ReplaceMesh(Mesh mesh, TempMesh tempMesh, [Optional] MeshCollider collider)
		{
		}

		[Token(Token = "0x600289C")]
		[Address(RVA = "0x10B9528", Offset = "0x10B9528", VA = "0x10B9528")]
		private void SeparateMeshes(Transform posTransform, Transform negTransform, Vector3 localPlaneNormal)
		{
		}

		[Token(Token = "0x600289D")]
		[Address(RVA = "0x10B967C", Offset = "0x10B967C", VA = "0x10B967C")]
		private void SeparateMeshes(List<Transform> positives, List<Transform> negatives, Vector3 worldPlaneNormal)
		{
		}

		[Token(Token = "0x600289E")]
		[Address(RVA = "0x10B97EC", Offset = "0x10B97EC", VA = "0x10B97EC")]
		public Slicer()
		{
		}
	}
}
namespace Facilities
{
	[Token(Token = "0x20005D4")]
	public class Facility : MonoBehaviour
	{
		[Token(Token = "0x600289F")]
		[Address(RVA = "0x13006A8", Offset = "0x13006A8", VA = "0x13006A8")]
		public Building Prepare()
		{
			return default(Building);
		}

		[Token(Token = "0x60028A0")]
		[Address(RVA = "0x1300950", Offset = "0x1300950", VA = "0x1300950")]
		public Facility()
		{
		}
	}
	[Token(Token = "0x20005D5")]
	public enum CategoryType
	{
		[Token(Token = "0x4002759")]
		None,
		[Token(Token = "0x400275A")]
		Airfield,
		[Token(Token = "0x400275B")]
		Factory,
		[Token(Token = "0x400275C")]
		Buildings,
		[Token(Token = "0x400275D")]
		Outpost
	}
	[Token(Token = "0x20005D6")]
	public class FacilityCategory : MonoBehaviour
	{
		[Token(Token = "0x400275E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CategoryType type;

		[Token(Token = "0x400275F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FacilityPack[] packs;

		[Token(Token = "0x4002760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public FacilityCategory mixWith;

		[Token(Token = "0x4002761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91E16C", Offset = "0x91E16C")]
		private int <NextPriority>k__BackingField;

		[Token(Token = "0x4002762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int maxPriority;

		[Token(Token = "0x170002DF")]
		public int NextPriority
		{
			[Token(Token = "0x60028A1")]
			[Address(RVA = "0x1300958", Offset = "0x1300958", VA = "0x1300958")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92FFD8", Offset = "0x92FFD8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60028A2")]
			[Address(RVA = "0x1300960", Offset = "0x1300960", VA = "0x1300960")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92FFE8", Offset = "0x92FFE8")]
			set
			{
			}
		}

		[Token(Token = "0x60028A3")]
		[Address(RVA = "0x1300968", Offset = "0x1300968", VA = "0x1300968")]
		public void Initialize()
		{
		}

		[Token(Token = "0x60028A4")]
		[Address(RVA = "0x1300BE4", Offset = "0x1300BE4", VA = "0x1300BE4")]
		public void ResetPriority()
		{
		}

		[Token(Token = "0x60028A5")]
		[Address(RVA = "0x1300A00", Offset = "0x1300A00", VA = "0x1300A00")]
		private void SortByPriority()
		{
		}

		[Token(Token = "0x60028A6")]
		[Address(RVA = "0x1300BF0", Offset = "0x1300BF0", VA = "0x1300BF0")]
		public bool CanMixCategories(Segment s)
		{
			return default(bool);
		}

		[Token(Token = "0x60028A7")]
		[Address(RVA = "0x1300C3C", Offset = "0x1300C3C", VA = "0x1300C3C")]
		public bool CanFulfillRequest(GeneratorRequest request)
		{
			return default(bool);
		}

		[Token(Token = "0x60028A8")]
		[Address(RVA = "0x1300CAC", Offset = "0x1300CAC", VA = "0x1300CAC")]
		public FacilityCategory()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005D7")]
	public struct GeneratorRequest
	{
		[Token(Token = "0x4002763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public eqType type;

		[Token(Token = "0x4002764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int count;
	}
	[Token(Token = "0x20005D8")]
	public class FacilityGenerator : MonoBehaviour
	{
		[Token(Token = "0x4002765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static FacilityGenerator instance;

		[Token(Token = "0x4002766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private FacilityCategory[] categories;

		[Token(Token = "0x4002767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FacilityPack[] tmpPacks;

		[Token(Token = "0x4002768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private FacilityCategory[] tmpCats;

		[Token(Token = "0x4002769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int currentRequestIndex;

		[Token(Token = "0x400276A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GeneratorRequest[] requests;

		[Token(Token = "0x400276B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Segment> segmentsAvailable;

		[Token(Token = "0x400276C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Transform cacheParent;

		[Token(Token = "0x400276D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Quaternion YRot90;

		[Token(Token = "0x400276E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static Quaternion YRot180;

		[Token(Token = "0x400276F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static Transform currentContainer;

		[Token(Token = "0x60028A9")]
		[Address(RVA = "0x1300E40", Offset = "0x1300E40", VA = "0x1300E40")]
		private void Awake()
		{
		}

		[Token(Token = "0x60028AA")]
		[Address(RVA = "0x1300F54", Offset = "0x1300F54", VA = "0x1300F54")]
		private static void Create()
		{
		}

		[Token(Token = "0x60028AB")]
		[Address(RVA = "0x1301098", Offset = "0x1301098", VA = "0x1301098")]
		public static void SetRequests(GeneratorRequest[] requests)
		{
		}

		[Token(Token = "0x60028AC")]
		[Address(RVA = "0x13011B4", Offset = "0x13011B4", VA = "0x13011B4")]
		public static void Prepare()
		{
		}

		[Token(Token = "0x60028AD")]
		[Address(RVA = "0x1300D30", Offset = "0x1300D30", VA = "0x1300D30")]
		public static void RegisterContainer(Transform parent)
		{
		}

		[Token(Token = "0x60028AE")]
		[Address(RVA = "0x13014EC", Offset = "0x13014EC", VA = "0x13014EC")]
		public static void Generate()
		{
		}

		[Token(Token = "0x60028AF")]
		[Address(RVA = "0x1301B94", Offset = "0x1301B94", VA = "0x1301B94")]
		public static void FillTasks(Task[] tasks)
		{
		}

		[Token(Token = "0x60028B0")]
		[Address(RVA = "0x13015DC", Offset = "0x13015DC", VA = "0x13015DC")]
		private void LocalGenerate()
		{
		}

		[Token(Token = "0x60028B1")]
		[Address(RVA = "0x13024F4", Offset = "0x13024F4", VA = "0x13024F4")]
		private void SliceSegment(int idx, Segment s, int direction, int side)
		{
		}

		[Token(Token = "0x60028B2")]
		[Address(RVA = "0x1302108", Offset = "0x1302108", VA = "0x1302108")]
		private void SliceCenterSegment(int idx, Segment s, int side)
		{
		}

		[Token(Token = "0x60028B3")]
		[Address(RVA = "0x1302814", Offset = "0x1302814", VA = "0x1302814")]
		public static void CreateBuilding(Building b, Segment s, Vector3 segmentLocalPosition, bool isTaskUnit, eqType unitType, out Vector3 createdPos, out Quaternion rotated, bool allowRotate = true)
		{
		}

		[Token(Token = "0x60028B4")]
		[Address(RVA = "0x1301D74", Offset = "0x1301D74", VA = "0x1301D74")]
		private FacilityPack GetSuitablePack(Segment s, out FacilityCategory cat, out GeneratorRequest request)
		{
			return null;
		}

		[Token(Token = "0x60028B5")]
		[Address(RVA = "0x1302F44", Offset = "0x1302F44", VA = "0x1302F44")]
		private FacilityPack GetPackByRequest(FacilityCategory cat, Segment s, GeneratorRequest request)
		{
			return null;
		}

		[Token(Token = "0x60028B6")]
		[Address(RVA = "0x1303160", Offset = "0x1303160", VA = "0x1303160")]
		private bool GetPackByPriority(FacilityCategory cat, Segment s, out int startIdx, out int endIdx)
		{
			return default(bool);
		}

		[Token(Token = "0x60028B7")]
		[Address(RVA = "0x1302D6C", Offset = "0x1302D6C", VA = "0x1302D6C")]
		private FacilityCategory FindRequestedCategory(GeneratorRequest request)
		{
			return null;
		}

		[Token(Token = "0x60028B8")]
		[Address(RVA = "0x1302E44", Offset = "0x1302E44", VA = "0x1302E44")]
		private FacilityCategory FindCategoryOfType(CategoryType type)
		{
			return null;
		}

		[Token(Token = "0x60028B9")]
		[Address(RVA = "0x1300EAC", Offset = "0x1300EAC", VA = "0x1300EAC")]
		private void Initialize()
		{
		}

		[Token(Token = "0x60028BA")]
		[Address(RVA = "0x13012C4", Offset = "0x13012C4", VA = "0x13012C4")]
		private void PrepareLocal(Transform parent)
		{
		}

		[Token(Token = "0x60028BB")]
		[Address(RVA = "0x13034D0", Offset = "0x13034D0", VA = "0x13034D0")]
		public FacilityGenerator()
		{
		}

		[Token(Token = "0x60028BD")]
		[Address(RVA = "0x13032F4", Offset = "0x13032F4", VA = "0x13032F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92FFF8", Offset = "0x92FFF8")]
		internal static Segment <PrepareLocal>g__CreateSegment|28_0(Transform t)
		{
			return null;
		}
	}
	[Token(Token = "0x20005D9")]
	public class FacilityPack : MonoBehaviour
	{
		[Token(Token = "0x4002770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public eqType taskGeneratorType;

		[Token(Token = "0x4002771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int priority;

		[Token(Token = "0x4002772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool onlyOneGlobally;

		[Token(Token = "0x4002773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool onlyOneInSegment;

		[Token(Token = "0x4002774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		public bool allowModelRepetitionInSegment;

		[Token(Token = "0x4002775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		public bool requestLayOnEdge;

		[Token(Token = "0x4002776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool requestCenterSegment;

		[Token(Token = "0x4002777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool canCenterSegment;

		[Token(Token = "0x4002778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float limitPaddingBySizePercent;

		[Token(Token = "0x4002779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int minCount;

		[Token(Token = "0x400277A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int maxCount;

		[Token(Token = "0x400277B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Facility[] facilities;

		[Token(Token = "0x400277C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected Building[] buildings;

		[Token(Token = "0x400277D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int[] tmpSortArray;

		[Token(Token = "0x400277E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int tmpStopIndex;

		[Token(Token = "0x400277F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float[] tmpSortKey;

		[Token(Token = "0x4002780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int createdCounter;

		[Token(Token = "0x60028BE")]
		[Address(RVA = "0x1303618", Offset = "0x1303618", VA = "0x1303618", Slot = "4")]
		public virtual void Initialize()
		{
		}

		[Token(Token = "0x60028BF")]
		[Address(RVA = "0x130328C", Offset = "0x130328C", VA = "0x130328C")]
		public bool CanCreate(Segment inSegment)
		{
			return default(bool);
		}

		[Token(Token = "0x60028C0")]
		[Address(RVA = "0x1303774", Offset = "0x1303774", VA = "0x1303774", Slot = "5")]
		public virtual void DistributeBuildings(Building b, Segment s, ref int total, bool isTaskUnit, eqType unitType, int direction, out bool shouldCenter)
		{
		}

		[Token(Token = "0x60028C1")]
		[Address(RVA = "0x1303B9C", Offset = "0x1303B9C", VA = "0x1303B9C", Slot = "6")]
		public virtual Building FindBestFit(Segment s)
		{
			return default(Building);
		}

		[Token(Token = "0x60028C2")]
		[Address(RVA = "0x13020E4", Offset = "0x13020E4", VA = "0x13020E4")]
		public int GetTotalResults()
		{
			return default(int);
		}

		[Token(Token = "0x60028C3")]
		[Address(RVA = "0x1303E50", Offset = "0x1303E50", VA = "0x1303E50", Slot = "7")]
		public virtual bool TryGetNextResult(out Building building)
		{
			return default(bool);
		}

		[Token(Token = "0x60028C4")]
		[Address(RVA = "0x1303EE8", Offset = "0x1303EE8", VA = "0x1303EE8", Slot = "8")]
		public virtual Building FindMostQuantity(Segment s, out int total)
		{
			return default(Building);
		}

		[Token(Token = "0x60028C5")]
		[Address(RVA = "0x1304068", Offset = "0x1304068", VA = "0x1304068")]
		public FacilityPack()
		{
		}
	}
	[Token(Token = "0x20005DA")]
	public class FacilityRegion : MonoBehaviour
	{
		[Token(Token = "0x4002781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CategoryType regionType;

		[Token(Token = "0x4002782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static FacilityRegionContainer[] segments;

		[Token(Token = "0x4002783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int[] tmpSortArray;

		[Token(Token = "0x4002784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static float[] tmpSortKey;

		[Token(Token = "0x4002785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Quaternion YRot90;

		[Token(Token = "0x60028C6")]
		[Address(RVA = "0x1304078", Offset = "0x1304078", VA = "0x1304078")]
		private static void Init()
		{
		}

		[Token(Token = "0x60028C7")]
		[Address(RVA = "0x13041B8", Offset = "0x13041B8", VA = "0x13041B8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60028C8")]
		[Address(RVA = "0x13044C4", Offset = "0x13044C4", VA = "0x13044C4")]
		private static FacilityRegionContainer FindBestFit(Vector2 desiredSize)
		{
			return null;
		}

		[Token(Token = "0x60028C9")]
		[Address(RVA = "0x1304884", Offset = "0x1304884", VA = "0x1304884")]
		public FacilityRegion()
		{
		}
	}
	[Token(Token = "0x20005DB")]
	public class FacilityRegionContainer : MonoBehaviour
	{
		[Token(Token = "0x4002786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform holder;

		[Token(Token = "0x4002787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector2 size;

		[Token(Token = "0x60028CB")]
		[Address(RVA = "0x1304908", Offset = "0x1304908", VA = "0x1304908")]
		private void Start()
		{
		}

		[Token(Token = "0x60028CC")]
		[Address(RVA = "0x130496C", Offset = "0x130496C", VA = "0x130496C")]
		public FacilityRegionContainer()
		{
		}
	}
	[Token(Token = "0x20005DC")]
	public class FacilitySector : MonoBehaviour
	{
		[Token(Token = "0x4002788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CategoryType requiredType;

		[Token(Token = "0x60028CD")]
		[Address(RVA = "0x1304974", Offset = "0x1304974", VA = "0x1304974")]
		public FacilitySector()
		{
		}
	}
	[Token(Token = "0x20005DD")]
	public struct Building
	{
		[Token(Token = "0x4002789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject prefab;

		[Token(Token = "0x400278A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 size;

		[Token(Token = "0x400278B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector2 orderedSize;

		[Token(Token = "0x400278C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 offset;

		[Token(Token = "0x400278D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool shouldRotate;
	}
	[Token(Token = "0x20005DE")]
	public class Segment
	{
		[Token(Token = "0x400278E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float selfCategoryBuildings;

		[Token(Token = "0x400278F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float mixCategoryBuildings;

		[Token(Token = "0x4002790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float usedBounds;

		[Token(Token = "0x4002791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool isPrimary;

		[Token(Token = "0x4002792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 boundsCenter;

		[Token(Token = "0x4002793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public FacilityCategory category;

		[Token(Token = "0x4002794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Segment parent;

		[Token(Token = "0x4002795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector2 size;

		[Token(Token = "0x4002796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector2 orderedSize;

		[Token(Token = "0x4002797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Vector3 center;

		[Token(Token = "0x4002798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Vector3 sliceOffset;

		[Token(Token = "0x4002799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Quaternion rotation;

		[Token(Token = "0x400279A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool shouldRotate;

		[Token(Token = "0x400279B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		public bool isOnEdge;

		[Token(Token = "0x400279C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public int totalXSlices;

		[Token(Token = "0x400279D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public int totalYSlices;

		[Token(Token = "0x400279E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public CategoryType categoryType;

		[Token(Token = "0x400279F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public HashSet<FacilityPack> packsUsed;

		[Token(Token = "0x40027A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public HashSet<GameObject> modelsUsed;

		[Token(Token = "0x60028CE")]
		[Address(RVA = "0xDC68A8", Offset = "0xDC68A8", VA = "0xDC68A8")]
		public Segment()
		{
		}

		[Token(Token = "0x60028CF")]
		[Address(RVA = "0xDC68B0", Offset = "0xDC68B0", VA = "0xDC68B0")]
		public Segment(Segment copy)
		{
		}

		[Token(Token = "0x60028D0")]
		[Address(RVA = "0xDC68E8", Offset = "0xDC68E8", VA = "0xDC68E8")]
		public void CopyTo(Segment s)
		{
		}

		[Token(Token = "0x60028D1")]
		[Address(RVA = "0xDC6964", Offset = "0xDC6964", VA = "0xDC6964")]
		public void RegisterPack(FacilityPack pack)
		{
		}

		[Token(Token = "0x60028D2")]
		[Address(RVA = "0xDC69E8", Offset = "0xDC69E8", VA = "0xDC69E8")]
		public bool HasUsedPack(FacilityPack pack)
		{
			return default(bool);
		}

		[Token(Token = "0x60028D3")]
		[Address(RVA = "0xDC6A70", Offset = "0xDC6A70", VA = "0xDC6A70")]
		public void RegisterModel(Building b)
		{
		}

		[Token(Token = "0x60028D4")]
		[Address(RVA = "0xDC6AF4", Offset = "0xDC6AF4", VA = "0xDC6AF4")]
		public bool HasModel(Building b)
		{
			return default(bool);
		}

		[Token(Token = "0x60028D5")]
		[Address(RVA = "0xDC6B7C", Offset = "0xDC6B7C", VA = "0xDC6B7C")]
		public void AddSelfBuildings()
		{
		}

		[Token(Token = "0x60028D6")]
		[Address(RVA = "0xDC6B9C", Offset = "0xDC6B9C", VA = "0xDC6B9C")]
		public void AddMixedBuildings()
		{
		}
	}
}
namespace Rewired
{
	[Token(Token = "0x20005DF")]
	public interface IGamepadTemplate : IControllerTemplate
	{
		[Token(Token = "0x170002E0")]
		IControllerTemplateButton actionBottomRow1
		{
			[Token(Token = "0x60028D7")]
			get;
		}

		[Token(Token = "0x170002E1")]
		IControllerTemplateButton a
		{
			[Token(Token = "0x60028D8")]
			get;
		}

		[Token(Token = "0x170002E2")]
		IControllerTemplateButton actionBottomRow2
		{
			[Token(Token = "0x60028D9")]
			get;
		}

		[Token(Token = "0x170002E3")]
		IControllerTemplateButton b
		{
			[Token(Token = "0x60028DA")]
			get;
		}

		[Token(Token = "0x170002E4")]
		IControllerTemplateButton actionBottomRow3
		{
			[Token(Token = "0x60028DB")]
			get;
		}

		[Token(Token = "0x170002E5")]
		IControllerTemplateButton c
		{
			[Token(Token = "0x60028DC")]
			get;
		}

		[Token(Token = "0x170002E6")]
		IControllerTemplateButton actionTopRow1
		{
			[Token(Token = "0x60028DD")]
			get;
		}

		[Token(Token = "0x170002E7")]
		IControllerTemplateButton x
		{
			[Token(Token = "0x60028DE")]
			get;
		}

		[Token(Token = "0x170002E8")]
		IControllerTemplateButton actionTopRow2
		{
			[Token(Token = "0x60028DF")]
			get;
		}

		[Token(Token = "0x170002E9")]
		IControllerTemplateButton y
		{
			[Token(Token = "0x60028E0")]
			get;
		}

		[Token(Token = "0x170002EA")]
		IControllerTemplateButton actionTopRow3
		{
			[Token(Token = "0x60028E1")]
			get;
		}

		[Token(Token = "0x170002EB")]
		IControllerTemplateButton z
		{
			[Token(Token = "0x60028E2")]
			get;
		}

		[Token(Token = "0x170002EC")]
		IControllerTemplateButton leftShoulder1
		{
			[Token(Token = "0x60028E3")]
			get;
		}

		[Token(Token = "0x170002ED")]
		IControllerTemplateButton leftBumper
		{
			[Token(Token = "0x60028E4")]
			get;
		}

		[Token(Token = "0x170002EE")]
		IControllerTemplateAxis leftShoulder2
		{
			[Token(Token = "0x60028E5")]
			get;
		}

		[Token(Token = "0x170002EF")]
		IControllerTemplateAxis leftTrigger
		{
			[Token(Token = "0x60028E6")]
			get;
		}

		[Token(Token = "0x170002F0")]
		IControllerTemplateButton rightShoulder1
		{
			[Token(Token = "0x60028E7")]
			get;
		}

		[Token(Token = "0x170002F1")]
		IControllerTemplateButton rightBumper
		{
			[Token(Token = "0x60028E8")]
			get;
		}

		[Token(Token = "0x170002F2")]
		IControllerTemplateAxis rightShoulder2
		{
			[Token(Token = "0x60028E9")]
			get;
		}

		[Token(Token = "0x170002F3")]
		IControllerTemplateAxis rightTrigger
		{
			[Token(Token = "0x60028EA")]
			get;
		}

		[Token(Token = "0x170002F4")]
		IControllerTemplateButton center1
		{
			[Token(Token = "0x60028EB")]
			get;
		}

		[Token(Token = "0x170002F5")]
		IControllerTemplateButton back
		{
			[Token(Token = "0x60028EC")]
			get;
		}

		[Token(Token = "0x170002F6")]
		IControllerTemplateButton center2
		{
			[Token(Token = "0x60028ED")]
			get;
		}

		[Token(Token = "0x170002F7")]
		IControllerTemplateButton start
		{
			[Token(Token = "0x60028EE")]
			get;
		}

		[Token(Token = "0x170002F8")]
		IControllerTemplateButton center3
		{
			[Token(Token = "0x60028EF")]
			get;
		}

		[Token(Token = "0x170002F9")]
		IControllerTemplateButton guide
		{
			[Token(Token = "0x60028F0")]
			get;
		}

		[Token(Token = "0x170002FA")]
		IControllerTemplateThumbStick leftStick
		{
			[Token(Token = "0x60028F1")]
			get;
		}

		[Token(Token = "0x170002FB")]
		IControllerTemplateThumbStick rightStick
		{
			[Token(Token = "0x60028F2")]
			get;
		}

		[Token(Token = "0x170002FC")]
		IControllerTemplateDPad dPad
		{
			[Token(Token = "0x60028F3")]
			get;
		}
	}
	[Token(Token = "0x20005E0")]
	public interface IRacingWheelTemplate : IControllerTemplate
	{
		[Token(Token = "0x170002FD")]
		IControllerTemplateAxis wheel
		{
			[Token(Token = "0x60028F4")]
			get;
		}

		[Token(Token = "0x170002FE")]
		IControllerTemplateAxis accelerator
		{
			[Token(Token = "0x60028F5")]
			get;
		}

		[Token(Token = "0x170002FF")]
		IControllerTemplateAxis brake
		{
			[Token(Token = "0x60028F6")]
			get;
		}

		[Token(Token = "0x17000300")]
		IControllerTemplateAxis clutch
		{
			[Token(Token = "0x60028F7")]
			get;
		}

		[Token(Token = "0x17000301")]
		IControllerTemplateButton shiftDown
		{
			[Token(Token = "0x60028F8")]
			get;
		}

		[Token(Token = "0x17000302")]
		IControllerTemplateButton shiftUp
		{
			[Token(Token = "0x60028F9")]
			get;
		}

		[Token(Token = "0x17000303")]
		IControllerTemplateButton wheelButton1
		{
			[Token(Token = "0x60028FA")]
			get;
		}

		[Token(Token = "0x17000304")]
		IControllerTemplateButton wheelButton2
		{
			[Token(Token = "0x60028FB")]
			get;
		}

		[Token(Token = "0x17000305")]
		IControllerTemplateButton wheelButton3
		{
			[Token(Token = "0x60028FC")]
			get;
		}

		[Token(Token = "0x17000306")]
		IControllerTemplateButton wheelButton4
		{
			[Token(Token = "0x60028FD")]
			get;
		}

		[Token(Token = "0x17000307")]
		IControllerTemplateButton wheelButton5
		{
			[Token(Token = "0x60028FE")]
			get;
		}

		[Token(Token = "0x17000308")]
		IControllerTemplateButton wheelButton6
		{
			[Token(Token = "0x60028FF")]
			get;
		}

		[Token(Token = "0x17000309")]
		IControllerTemplateButton wheelButton7
		{
			[Token(Token = "0x6002900")]
			get;
		}

		[Token(Token = "0x1700030A")]
		IControllerTemplateButton wheelButton8
		{
			[Token(Token = "0x6002901")]
			get;
		}

		[Token(Token = "0x1700030B")]
		IControllerTemplateButton wheelButton9
		{
			[Token(Token = "0x6002902")]
			get;
		}

		[Token(Token = "0x1700030C")]
		IControllerTemplateButton wheelButton10
		{
			[Token(Token = "0x6002903")]
			get;
		}

		[Token(Token = "0x1700030D")]
		IControllerTemplateButton consoleButton1
		{
			[Token(Token = "0x6002904")]
			get;
		}

		[Token(Token = "0x1700030E")]
		IControllerTemplateButton consoleButton2
		{
			[Token(Token = "0x6002905")]
			get;
		}

		[Token(Token = "0x1700030F")]
		IControllerTemplateButton consoleButton3
		{
			[Token(Token = "0x6002906")]
			get;
		}

		[Token(Token = "0x17000310")]
		IControllerTemplateButton consoleButton4
		{
			[Token(Token = "0x6002907")]
			get;
		}

		[Token(Token = "0x17000311")]
		IControllerTemplateButton consoleButton5
		{
			[Token(Token = "0x6002908")]
			get;
		}

		[Token(Token = "0x17000312")]
		IControllerTemplateButton consoleButton6
		{
			[Token(Token = "0x6002909")]
			get;
		}

		[Token(Token = "0x17000313")]
		IControllerTemplateButton consoleButton7
		{
			[Token(Token = "0x600290A")]
			get;
		}

		[Token(Token = "0x17000314")]
		IControllerTemplateButton consoleButton8
		{
			[Token(Token = "0x600290B")]
			get;
		}

		[Token(Token = "0x17000315")]
		IControllerTemplateButton consoleButton9
		{
			[Token(Token = "0x600290C")]
			get;
		}

		[Token(Token = "0x17000316")]
		IControllerTemplateButton consoleButton10
		{
			[Token(Token = "0x600290D")]
			get;
		}

		[Token(Token = "0x17000317")]
		IControllerTemplateButton shifter1
		{
			[Token(Token = "0x600290E")]
			get;
		}

		[Token(Token = "0x17000318")]
		IControllerTemplateButton shifter2
		{
			[Token(Token = "0x600290F")]
			get;
		}

		[Token(Token = "0x17000319")]
		IControllerTemplateButton shifter3
		{
			[Token(Token = "0x6002910")]
			get;
		}

		[Token(Token = "0x1700031A")]
		IControllerTemplateButton shifter4
		{
			[Token(Token = "0x6002911")]
			get;
		}

		[Token(Token = "0x1700031B")]
		IControllerTemplateButton shifter5
		{
			[Token(Token = "0x6002912")]
			get;
		}

		[Token(Token = "0x1700031C")]
		IControllerTemplateButton shifter6
		{
			[Token(Token = "0x6002913")]
			get;
		}

		[Token(Token = "0x1700031D")]
		IControllerTemplateButton shifter7
		{
			[Token(Token = "0x6002914")]
			get;
		}

		[Token(Token = "0x1700031E")]
		IControllerTemplateButton shifter8
		{
			[Token(Token = "0x6002915")]
			get;
		}

		[Token(Token = "0x1700031F")]
		IControllerTemplateButton shifter9
		{
			[Token(Token = "0x6002916")]
			get;
		}

		[Token(Token = "0x17000320")]
		IControllerTemplateButton shifter10
		{
			[Token(Token = "0x6002917")]
			get;
		}

		[Token(Token = "0x17000321")]
		IControllerTemplateButton reverseGear
		{
			[Token(Token = "0x6002918")]
			get;
		}

		[Token(Token = "0x17000322")]
		IControllerTemplateButton select
		{
			[Token(Token = "0x6002919")]
			get;
		}

		[Token(Token = "0x17000323")]
		IControllerTemplateButton start
		{
			[Token(Token = "0x600291A")]
			get;
		}

		[Token(Token = "0x17000324")]
		IControllerTemplateButton systemButton
		{
			[Token(Token = "0x600291B")]
			get;
		}

		[Token(Token = "0x17000325")]
		IControllerTemplateButton horn
		{
			[Token(Token = "0x600291C")]
			get;
		}

		[Token(Token = "0x17000326")]
		IControllerTemplateDPad dPad
		{
			[Token(Token = "0x600291D")]
			get;
		}
	}
	[Token(Token = "0x20005E1")]
	public interface IHOTASTemplate : IControllerTemplate
	{
		[Token(Token = "0x17000327")]
		IControllerTemplateButton stickTrigger
		{
			[Token(Token = "0x600291E")]
			get;
		}

		[Token(Token = "0x17000328")]
		IControllerTemplateButton stickTriggerStage2
		{
			[Token(Token = "0x600291F")]
			get;
		}

		[Token(Token = "0x17000329")]
		IControllerTemplateButton stickPinkyButton
		{
			[Token(Token = "0x6002920")]
			get;
		}

		[Token(Token = "0x1700032A")]
		IControllerTemplateButton stickPinkyTrigger
		{
			[Token(Token = "0x6002921")]
			get;
		}

		[Token(Token = "0x1700032B")]
		IControllerTemplateButton stickButton1
		{
			[Token(Token = "0x6002922")]
			get;
		}

		[Token(Token = "0x1700032C")]
		IControllerTemplateButton stickButton2
		{
			[Token(Token = "0x6002923")]
			get;
		}

		[Token(Token = "0x1700032D")]
		IControllerTemplateButton stickButton3
		{
			[Token(Token = "0x6002924")]
			get;
		}

		[Token(Token = "0x1700032E")]
		IControllerTemplateButton stickButton4
		{
			[Token(Token = "0x6002925")]
			get;
		}

		[Token(Token = "0x1700032F")]
		IControllerTemplateButton stickButton5
		{
			[Token(Token = "0x6002926")]
			get;
		}

		[Token(Token = "0x17000330")]
		IControllerTemplateButton stickButton6
		{
			[Token(Token = "0x6002927")]
			get;
		}

		[Token(Token = "0x17000331")]
		IControllerTemplateButton stickButton7
		{
			[Token(Token = "0x6002928")]
			get;
		}

		[Token(Token = "0x17000332")]
		IControllerTemplateButton stickButton8
		{
			[Token(Token = "0x6002929")]
			get;
		}

		[Token(Token = "0x17000333")]
		IControllerTemplateButton stickButton9
		{
			[Token(Token = "0x600292A")]
			get;
		}

		[Token(Token = "0x17000334")]
		IControllerTemplateButton stickButton10
		{
			[Token(Token = "0x600292B")]
			get;
		}

		[Token(Token = "0x17000335")]
		IControllerTemplateButton stickBaseButton1
		{
			[Token(Token = "0x600292C")]
			get;
		}

		[Token(Token = "0x17000336")]
		IControllerTemplateButton stickBaseButton2
		{
			[Token(Token = "0x600292D")]
			get;
		}

		[Token(Token = "0x17000337")]
		IControllerTemplateButton stickBaseButton3
		{
			[Token(Token = "0x600292E")]
			get;
		}

		[Token(Token = "0x17000338")]
		IControllerTemplateButton stickBaseButton4
		{
			[Token(Token = "0x600292F")]
			get;
		}

		[Token(Token = "0x17000339")]
		IControllerTemplateButton stickBaseButton5
		{
			[Token(Token = "0x6002930")]
			get;
		}

		[Token(Token = "0x1700033A")]
		IControllerTemplateButton stickBaseButton6
		{
			[Token(Token = "0x6002931")]
			get;
		}

		[Token(Token = "0x1700033B")]
		IControllerTemplateButton stickBaseButton7
		{
			[Token(Token = "0x6002932")]
			get;
		}

		[Token(Token = "0x1700033C")]
		IControllerTemplateButton stickBaseButton8
		{
			[Token(Token = "0x6002933")]
			get;
		}

		[Token(Token = "0x1700033D")]
		IControllerTemplateButton stickBaseButton9
		{
			[Token(Token = "0x6002934")]
			get;
		}

		[Token(Token = "0x1700033E")]
		IControllerTemplateButton stickBaseButton10
		{
			[Token(Token = "0x6002935")]
			get;
		}

		[Token(Token = "0x1700033F")]
		IControllerTemplateButton stickBaseButton11
		{
			[Token(Token = "0x6002936")]
			get;
		}

		[Token(Token = "0x17000340")]
		IControllerTemplateButton stickBaseButton12
		{
			[Token(Token = "0x6002937")]
			get;
		}

		[Token(Token = "0x17000341")]
		IControllerTemplateButton mode1
		{
			[Token(Token = "0x6002938")]
			get;
		}

		[Token(Token = "0x17000342")]
		IControllerTemplateButton mode2
		{
			[Token(Token = "0x6002939")]
			get;
		}

		[Token(Token = "0x17000343")]
		IControllerTemplateButton mode3
		{
			[Token(Token = "0x600293A")]
			get;
		}

		[Token(Token = "0x17000344")]
		IControllerTemplateButton throttleButton1
		{
			[Token(Token = "0x600293B")]
			get;
		}

		[Token(Token = "0x17000345")]
		IControllerTemplateButton throttleButton2
		{
			[Token(Token = "0x600293C")]
			get;
		}

		[Token(Token = "0x17000346")]
		IControllerTemplateButton throttleButton3
		{
			[Token(Token = "0x600293D")]
			get;
		}

		[Token(Token = "0x17000347")]
		IControllerTemplateButton throttleButton4
		{
			[Token(Token = "0x600293E")]
			get;
		}

		[Token(Token = "0x17000348")]
		IControllerTemplateButton throttleButton5
		{
			[Token(Token = "0x600293F")]
			get;
		}

		[Token(Token = "0x17000349")]
		IControllerTemplateButton throttleButton6
		{
			[Token(Token = "0x6002940")]
			get;
		}

		[Token(Token = "0x1700034A")]
		IControllerTemplateButton throttleButton7
		{
			[Token(Token = "0x6002941")]
			get;
		}

		[Token(Token = "0x1700034B")]
		IControllerTemplateButton throttleButton8
		{
			[Token(Token = "0x6002942")]
			get;
		}

		[Token(Token = "0x1700034C")]
		IControllerTemplateButton throttleButton9
		{
			[Token(Token = "0x6002943")]
			get;
		}

		[Token(Token = "0x1700034D")]
		IControllerTemplateButton throttleButton10
		{
			[Token(Token = "0x6002944")]
			get;
		}

		[Token(Token = "0x1700034E")]
		IControllerTemplateButton throttleBaseButton1
		{
			[Token(Token = "0x6002945")]
			get;
		}

		[Token(Token = "0x1700034F")]
		IControllerTemplateButton throttleBaseButton2
		{
			[Token(Token = "0x6002946")]
			get;
		}

		[Token(Token = "0x17000350")]
		IControllerTemplateButton throttleBaseButton3
		{
			[Token(Token = "0x6002947")]
			get;
		}

		[Token(Token = "0x17000351")]
		IControllerTemplateButton throttleBaseButton4
		{
			[Token(Token = "0x6002948")]
			get;
		}

		[Token(Token = "0x17000352")]
		IControllerTemplateButton throttleBaseButton5
		{
			[Token(Token = "0x6002949")]
			get;
		}

		[Token(Token = "0x17000353")]
		IControllerTemplateButton throttleBaseButton6
		{
			[Token(Token = "0x600294A")]
			get;
		}

		[Token(Token = "0x17000354")]
		IControllerTemplateButton throttleBaseButton7
		{
			[Token(Token = "0x600294B")]
			get;
		}

		[Token(Token = "0x17000355")]
		IControllerTemplateButton throttleBaseButton8
		{
			[Token(Token = "0x600294C")]
			get;
		}

		[Token(Token = "0x17000356")]
		IControllerTemplateButton throttleBaseButton9
		{
			[Token(Token = "0x600294D")]
			get;
		}

		[Token(Token = "0x17000357")]
		IControllerTemplateButton throttleBaseButton10
		{
			[Token(Token = "0x600294E")]
			get;
		}

		[Token(Token = "0x17000358")]
		IControllerTemplateButton throttleBaseButton11
		{
			[Token(Token = "0x600294F")]
			get;
		}

		[Token(Token = "0x17000359")]
		IControllerTemplateButton throttleBaseButton12
		{
			[Token(Token = "0x6002950")]
			get;
		}

		[Token(Token = "0x1700035A")]
		IControllerTemplateButton throttleBaseButton13
		{
			[Token(Token = "0x6002951")]
			get;
		}

		[Token(Token = "0x1700035B")]
		IControllerTemplateButton throttleBaseButton14
		{
			[Token(Token = "0x6002952")]
			get;
		}

		[Token(Token = "0x1700035C")]
		IControllerTemplateButton throttleBaseButton15
		{
			[Token(Token = "0x6002953")]
			get;
		}

		[Token(Token = "0x1700035D")]
		IControllerTemplateAxis throttleSlider1
		{
			[Token(Token = "0x6002954")]
			get;
		}

		[Token(Token = "0x1700035E")]
		IControllerTemplateAxis throttleSlider2
		{
			[Token(Token = "0x6002955")]
			get;
		}

		[Token(Token = "0x1700035F")]
		IControllerTemplateAxis throttleSlider3
		{
			[Token(Token = "0x6002956")]
			get;
		}

		[Token(Token = "0x17000360")]
		IControllerTemplateAxis throttleSlider4
		{
			[Token(Token = "0x6002957")]
			get;
		}

		[Token(Token = "0x17000361")]
		IControllerTemplateAxis throttleDial1
		{
			[Token(Token = "0x6002958")]
			get;
		}

		[Token(Token = "0x17000362")]
		IControllerTemplateAxis throttleDial2
		{
			[Token(Token = "0x6002959")]
			get;
		}

		[Token(Token = "0x17000363")]
		IControllerTemplateAxis throttleDial3
		{
			[Token(Token = "0x600295A")]
			get;
		}

		[Token(Token = "0x17000364")]
		IControllerTemplateAxis throttleDial4
		{
			[Token(Token = "0x600295B")]
			get;
		}

		[Token(Token = "0x17000365")]
		IControllerTemplateButton throttleWheel1Forward
		{
			[Token(Token = "0x600295C")]
			get;
		}

		[Token(Token = "0x17000366")]
		IControllerTemplateButton throttleWheel1Back
		{
			[Token(Token = "0x600295D")]
			get;
		}

		[Token(Token = "0x17000367")]
		IControllerTemplateButton throttleWheel1Press
		{
			[Token(Token = "0x600295E")]
			get;
		}

		[Token(Token = "0x17000368")]
		IControllerTemplateButton throttleWheel2Forward
		{
			[Token(Token = "0x600295F")]
			get;
		}

		[Token(Token = "0x17000369")]
		IControllerTemplateButton throttleWheel2Back
		{
			[Token(Token = "0x6002960")]
			get;
		}

		[Token(Token = "0x1700036A")]
		IControllerTemplateButton throttleWheel2Press
		{
			[Token(Token = "0x6002961")]
			get;
		}

		[Token(Token = "0x1700036B")]
		IControllerTemplateButton throttleWheel3Forward
		{
			[Token(Token = "0x6002962")]
			get;
		}

		[Token(Token = "0x1700036C")]
		IControllerTemplateButton throttleWheel3Back
		{
			[Token(Token = "0x6002963")]
			get;
		}

		[Token(Token = "0x1700036D")]
		IControllerTemplateButton throttleWheel3Press
		{
			[Token(Token = "0x6002964")]
			get;
		}

		[Token(Token = "0x1700036E")]
		IControllerTemplateAxis leftPedal
		{
			[Token(Token = "0x6002965")]
			get;
		}

		[Token(Token = "0x1700036F")]
		IControllerTemplateAxis rightPedal
		{
			[Token(Token = "0x6002966")]
			get;
		}

		[Token(Token = "0x17000370")]
		IControllerTemplateAxis slidePedals
		{
			[Token(Token = "0x6002967")]
			get;
		}

		[Token(Token = "0x17000371")]
		IControllerTemplateStick stick
		{
			[Token(Token = "0x6002968")]
			get;
		}

		[Token(Token = "0x17000372")]
		IControllerTemplateThumbStick stickMiniStick1
		{
			[Token(Token = "0x6002969")]
			get;
		}

		[Token(Token = "0x17000373")]
		IControllerTemplateThumbStick stickMiniStick2
		{
			[Token(Token = "0x600296A")]
			get;
		}

		[Token(Token = "0x17000374")]
		IControllerTemplateHat stickHat1
		{
			[Token(Token = "0x600296B")]
			get;
		}

		[Token(Token = "0x17000375")]
		IControllerTemplateHat stickHat2
		{
			[Token(Token = "0x600296C")]
			get;
		}

		[Token(Token = "0x17000376")]
		IControllerTemplateHat stickHat3
		{
			[Token(Token = "0x600296D")]
			get;
		}

		[Token(Token = "0x17000377")]
		IControllerTemplateHat stickHat4
		{
			[Token(Token = "0x600296E")]
			get;
		}

		[Token(Token = "0x17000378")]
		IControllerTemplateThrottle throttle1
		{
			[Token(Token = "0x600296F")]
			get;
		}

		[Token(Token = "0x17000379")]
		IControllerTemplateThrottle throttle2
		{
			[Token(Token = "0x6002970")]
			get;
		}

		[Token(Token = "0x1700037A")]
		IControllerTemplateThumbStick throttleMiniStick
		{
			[Token(Token = "0x6002971")]
			get;
		}

		[Token(Token = "0x1700037B")]
		IControllerTemplateHat throttleHat1
		{
			[Token(Token = "0x6002972")]
			get;
		}

		[Token(Token = "0x1700037C")]
		IControllerTemplateHat throttleHat2
		{
			[Token(Token = "0x6002973")]
			get;
		}

		[Token(Token = "0x1700037D")]
		IControllerTemplateHat throttleHat3
		{
			[Token(Token = "0x6002974")]
			get;
		}

		[Token(Token = "0x1700037E")]
		IControllerTemplateHat throttleHat4
		{
			[Token(Token = "0x6002975")]
			get;
		}
	}
	[Token(Token = "0x20005E2")]
	public interface IFlightYokeTemplate : IControllerTemplate
	{
		[Token(Token = "0x1700037F")]
		IControllerTemplateButton leftPaddle
		{
			[Token(Token = "0x6002976")]
			get;
		}

		[Token(Token = "0x17000380")]
		IControllerTemplateButton rightPaddle
		{
			[Token(Token = "0x6002977")]
			get;
		}

		[Token(Token = "0x17000381")]
		IControllerTemplateButton leftGripButton1
		{
			[Token(Token = "0x6002978")]
			get;
		}

		[Token(Token = "0x17000382")]
		IControllerTemplateButton leftGripButton2
		{
			[Token(Token = "0x6002979")]
			get;
		}

		[Token(Token = "0x17000383")]
		IControllerTemplateButton leftGripButton3
		{
			[Token(Token = "0x600297A")]
			get;
		}

		[Token(Token = "0x17000384")]
		IControllerTemplateButton leftGripButton4
		{
			[Token(Token = "0x600297B")]
			get;
		}

		[Token(Token = "0x17000385")]
		IControllerTemplateButton leftGripButton5
		{
			[Token(Token = "0x600297C")]
			get;
		}

		[Token(Token = "0x17000386")]
		IControllerTemplateButton leftGripButton6
		{
			[Token(Token = "0x600297D")]
			get;
		}

		[Token(Token = "0x17000387")]
		IControllerTemplateButton rightGripButton1
		{
			[Token(Token = "0x600297E")]
			get;
		}

		[Token(Token = "0x17000388")]
		IControllerTemplateButton rightGripButton2
		{
			[Token(Token = "0x600297F")]
			get;
		}

		[Token(Token = "0x17000389")]
		IControllerTemplateButton rightGripButton3
		{
			[Token(Token = "0x6002980")]
			get;
		}

		[Token(Token = "0x1700038A")]
		IControllerTemplateButton rightGripButton4
		{
			[Token(Token = "0x6002981")]
			get;
		}

		[Token(Token = "0x1700038B")]
		IControllerTemplateButton rightGripButton5
		{
			[Token(Token = "0x6002982")]
			get;
		}

		[Token(Token = "0x1700038C")]
		IControllerTemplateButton rightGripButton6
		{
			[Token(Token = "0x6002983")]
			get;
		}

		[Token(Token = "0x1700038D")]
		IControllerTemplateButton centerButton1
		{
			[Token(Token = "0x6002984")]
			get;
		}

		[Token(Token = "0x1700038E")]
		IControllerTemplateButton centerButton2
		{
			[Token(Token = "0x6002985")]
			get;
		}

		[Token(Token = "0x1700038F")]
		IControllerTemplateButton centerButton3
		{
			[Token(Token = "0x6002986")]
			get;
		}

		[Token(Token = "0x17000390")]
		IControllerTemplateButton centerButton4
		{
			[Token(Token = "0x6002987")]
			get;
		}

		[Token(Token = "0x17000391")]
		IControllerTemplateButton centerButton5
		{
			[Token(Token = "0x6002988")]
			get;
		}

		[Token(Token = "0x17000392")]
		IControllerTemplateButton centerButton6
		{
			[Token(Token = "0x6002989")]
			get;
		}

		[Token(Token = "0x17000393")]
		IControllerTemplateButton centerButton7
		{
			[Token(Token = "0x600298A")]
			get;
		}

		[Token(Token = "0x17000394")]
		IControllerTemplateButton centerButton8
		{
			[Token(Token = "0x600298B")]
			get;
		}

		[Token(Token = "0x17000395")]
		IControllerTemplateButton wheel1Up
		{
			[Token(Token = "0x600298C")]
			get;
		}

		[Token(Token = "0x17000396")]
		IControllerTemplateButton wheel1Down
		{
			[Token(Token = "0x600298D")]
			get;
		}

		[Token(Token = "0x17000397")]
		IControllerTemplateButton wheel1Press
		{
			[Token(Token = "0x600298E")]
			get;
		}

		[Token(Token = "0x17000398")]
		IControllerTemplateButton wheel2Up
		{
			[Token(Token = "0x600298F")]
			get;
		}

		[Token(Token = "0x17000399")]
		IControllerTemplateButton wheel2Down
		{
			[Token(Token = "0x6002990")]
			get;
		}

		[Token(Token = "0x1700039A")]
		IControllerTemplateButton wheel2Press
		{
			[Token(Token = "0x6002991")]
			get;
		}

		[Token(Token = "0x1700039B")]
		IControllerTemplateButton consoleButton1
		{
			[Token(Token = "0x6002992")]
			get;
		}

		[Token(Token = "0x1700039C")]
		IControllerTemplateButton consoleButton2
		{
			[Token(Token = "0x6002993")]
			get;
		}

		[Token(Token = "0x1700039D")]
		IControllerTemplateButton consoleButton3
		{
			[Token(Token = "0x6002994")]
			get;
		}

		[Token(Token = "0x1700039E")]
		IControllerTemplateButton consoleButton4
		{
			[Token(Token = "0x6002995")]
			get;
		}

		[Token(Token = "0x1700039F")]
		IControllerTemplateButton consoleButton5
		{
			[Token(Token = "0x6002996")]
			get;
		}

		[Token(Token = "0x170003A0")]
		IControllerTemplateButton consoleButton6
		{
			[Token(Token = "0x6002997")]
			get;
		}

		[Token(Token = "0x170003A1")]
		IControllerTemplateButton consoleButton7
		{
			[Token(Token = "0x6002998")]
			get;
		}

		[Token(Token = "0x170003A2")]
		IControllerTemplateButton consoleButton8
		{
			[Token(Token = "0x6002999")]
			get;
		}

		[Token(Token = "0x170003A3")]
		IControllerTemplateButton consoleButton9
		{
			[Token(Token = "0x600299A")]
			get;
		}

		[Token(Token = "0x170003A4")]
		IControllerTemplateButton consoleButton10
		{
			[Token(Token = "0x600299B")]
			get;
		}

		[Token(Token = "0x170003A5")]
		IControllerTemplateButton mode1
		{
			[Token(Token = "0x600299C")]
			get;
		}

		[Token(Token = "0x170003A6")]
		IControllerTemplateButton mode2
		{
			[Token(Token = "0x600299D")]
			get;
		}

		[Token(Token = "0x170003A7")]
		IControllerTemplateButton mode3
		{
			[Token(Token = "0x600299E")]
			get;
		}

		[Token(Token = "0x170003A8")]
		IControllerTemplateYoke yoke
		{
			[Token(Token = "0x600299F")]
			get;
		}

		[Token(Token = "0x170003A9")]
		IControllerTemplateThrottle lever1
		{
			[Token(Token = "0x60029A0")]
			get;
		}

		[Token(Token = "0x170003AA")]
		IControllerTemplateThrottle lever2
		{
			[Token(Token = "0x60029A1")]
			get;
		}

		[Token(Token = "0x170003AB")]
		IControllerTemplateThrottle lever3
		{
			[Token(Token = "0x60029A2")]
			get;
		}

		[Token(Token = "0x170003AC")]
		IControllerTemplateThrottle lever4
		{
			[Token(Token = "0x60029A3")]
			get;
		}

		[Token(Token = "0x170003AD")]
		IControllerTemplateThrottle lever5
		{
			[Token(Token = "0x60029A4")]
			get;
		}

		[Token(Token = "0x170003AE")]
		IControllerTemplateHat leftGripHat
		{
			[Token(Token = "0x60029A5")]
			get;
		}

		[Token(Token = "0x170003AF")]
		IControllerTemplateHat rightGripHat
		{
			[Token(Token = "0x60029A6")]
			get;
		}
	}
	[Token(Token = "0x20005E3")]
	public interface IFlightPedalsTemplate : IControllerTemplate
	{
		[Token(Token = "0x170003B0")]
		IControllerTemplateAxis leftPedal
		{
			[Token(Token = "0x60029A7")]
			get;
		}

		[Token(Token = "0x170003B1")]
		IControllerTemplateAxis rightPedal
		{
			[Token(Token = "0x60029A8")]
			get;
		}

		[Token(Token = "0x170003B2")]
		IControllerTemplateAxis slide
		{
			[Token(Token = "0x60029A9")]
			get;
		}
	}
	[Token(Token = "0x20005E4")]
	public interface ISixDofControllerTemplate : IControllerTemplate
	{
		[Token(Token = "0x170003B3")]
		IControllerTemplateAxis extraAxis1
		{
			[Token(Token = "0x60029AA")]
			get;
		}

		[Token(Token = "0x170003B4")]
		IControllerTemplateAxis extraAxis2
		{
			[Token(Token = "0x60029AB")]
			get;
		}

		[Token(Token = "0x170003B5")]
		IControllerTemplateAxis extraAxis3
		{
			[Token(Token = "0x60029AC")]
			get;
		}

		[Token(Token = "0x170003B6")]
		IControllerTemplateAxis extraAxis4
		{
			[Token(Token = "0x60029AD")]
			get;
		}

		[Token(Token = "0x170003B7")]
		IControllerTemplateButton button1
		{
			[Token(Token = "0x60029AE")]
			get;
		}

		[Token(Token = "0x170003B8")]
		IControllerTemplateButton button2
		{
			[Token(Token = "0x60029AF")]
			get;
		}

		[Token(Token = "0x170003B9")]
		IControllerTemplateButton button3
		{
			[Token(Token = "0x60029B0")]
			get;
		}

		[Token(Token = "0x170003BA")]
		IControllerTemplateButton button4
		{
			[Token(Token = "0x60029B1")]
			get;
		}

		[Token(Token = "0x170003BB")]
		IControllerTemplateButton button5
		{
			[Token(Token = "0x60029B2")]
			get;
		}

		[Token(Token = "0x170003BC")]
		IControllerTemplateButton button6
		{
			[Token(Token = "0x60029B3")]
			get;
		}

		[Token(Token = "0x170003BD")]
		IControllerTemplateButton button7
		{
			[Token(Token = "0x60029B4")]
			get;
		}

		[Token(Token = "0x170003BE")]
		IControllerTemplateButton button8
		{
			[Token(Token = "0x60029B5")]
			get;
		}

		[Token(Token = "0x170003BF")]
		IControllerTemplateButton button9
		{
			[Token(Token = "0x60029B6")]
			get;
		}

		[Token(Token = "0x170003C0")]
		IControllerTemplateButton button10
		{
			[Token(Token = "0x60029B7")]
			get;
		}

		[Token(Token = "0x170003C1")]
		IControllerTemplateButton button11
		{
			[Token(Token = "0x60029B8")]
			get;
		}

		[Token(Token = "0x170003C2")]
		IControllerTemplateButton button12
		{
			[Token(Token = "0x60029B9")]
			get;
		}

		[Token(Token = "0x170003C3")]
		IControllerTemplateButton button13
		{
			[Token(Token = "0x60029BA")]
			get;
		}

		[Token(Token = "0x170003C4")]
		IControllerTemplateButton button14
		{
			[Token(Token = "0x60029BB")]
			get;
		}

		[Token(Token = "0x170003C5")]
		IControllerTemplateButton button15
		{
			[Token(Token = "0x60029BC")]
			get;
		}

		[Token(Token = "0x170003C6")]
		IControllerTemplateButton button16
		{
			[Token(Token = "0x60029BD")]
			get;
		}

		[Token(Token = "0x170003C7")]
		IControllerTemplateButton button17
		{
			[Token(Token = "0x60029BE")]
			get;
		}

		[Token(Token = "0x170003C8")]
		IControllerTemplateButton button18
		{
			[Token(Token = "0x60029BF")]
			get;
		}

		[Token(Token = "0x170003C9")]
		IControllerTemplateButton button19
		{
			[Token(Token = "0x60029C0")]
			get;
		}

		[Token(Token = "0x170003CA")]
		IControllerTemplateButton button20
		{
			[Token(Token = "0x60029C1")]
			get;
		}

		[Token(Token = "0x170003CB")]
		IControllerTemplateButton button21
		{
			[Token(Token = "0x60029C2")]
			get;
		}

		[Token(Token = "0x170003CC")]
		IControllerTemplateButton button22
		{
			[Token(Token = "0x60029C3")]
			get;
		}

		[Token(Token = "0x170003CD")]
		IControllerTemplateButton button23
		{
			[Token(Token = "0x60029C4")]
			get;
		}

		[Token(Token = "0x170003CE")]
		IControllerTemplateButton button24
		{
			[Token(Token = "0x60029C5")]
			get;
		}

		[Token(Token = "0x170003CF")]
		IControllerTemplateButton button25
		{
			[Token(Token = "0x60029C6")]
			get;
		}

		[Token(Token = "0x170003D0")]
		IControllerTemplateButton button26
		{
			[Token(Token = "0x60029C7")]
			get;
		}

		[Token(Token = "0x170003D1")]
		IControllerTemplateButton button27
		{
			[Token(Token = "0x60029C8")]
			get;
		}

		[Token(Token = "0x170003D2")]
		IControllerTemplateButton button28
		{
			[Token(Token = "0x60029C9")]
			get;
		}

		[Token(Token = "0x170003D3")]
		IControllerTemplateButton button29
		{
			[Token(Token = "0x60029CA")]
			get;
		}

		[Token(Token = "0x170003D4")]
		IControllerTemplateButton button30
		{
			[Token(Token = "0x60029CB")]
			get;
		}

		[Token(Token = "0x170003D5")]
		IControllerTemplateButton button31
		{
			[Token(Token = "0x60029CC")]
			get;
		}

		[Token(Token = "0x170003D6")]
		IControllerTemplateButton button32
		{
			[Token(Token = "0x60029CD")]
			get;
		}

		[Token(Token = "0x170003D7")]
		IControllerTemplateHat hat1
		{
			[Token(Token = "0x60029CE")]
			get;
		}

		[Token(Token = "0x170003D8")]
		IControllerTemplateHat hat2
		{
			[Token(Token = "0x60029CF")]
			get;
		}

		[Token(Token = "0x170003D9")]
		IControllerTemplateThrottle throttle1
		{
			[Token(Token = "0x60029D0")]
			get;
		}

		[Token(Token = "0x170003DA")]
		IControllerTemplateThrottle throttle2
		{
			[Token(Token = "0x60029D1")]
			get;
		}

		[Token(Token = "0x170003DB")]
		IControllerTemplateStick6D stick
		{
			[Token(Token = "0x60029D2")]
			get;
		}
	}
	[Token(Token = "0x20005E5")]
	public sealed class GamepadTemplate : ControllerTemplate, IGamepadTemplate, IControllerTemplate
	{
		[Token(Token = "0x40027A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Guid typeGuid;

		[Token(Token = "0x40027A2")]
		public const int elementId_leftStickX = 0;

		[Token(Token = "0x40027A3")]
		public const int elementId_leftStickY = 1;

		[Token(Token = "0x40027A4")]
		public const int elementId_rightStickX = 2;

		[Token(Token = "0x40027A5")]
		public const int elementId_rightStickY = 3;

		[Token(Token = "0x40027A6")]
		public const int elementId_actionBottomRow1 = 4;

		[Token(Token = "0x40027A7")]
		public const int elementId_a = 4;

		[Token(Token = "0x40027A8")]
		public const int elementId_actionBottomRow2 = 5;

		[Token(Token = "0x40027A9")]
		public const int elementId_b = 5;

		[Token(Token = "0x40027AA")]
		public const int elementId_actionBottomRow3 = 6;

		[Token(Token = "0x40027AB")]
		public const int elementId_c = 6;

		[Token(Token = "0x40027AC")]
		public const int elementId_actionTopRow1 = 7;

		[Token(Token = "0x40027AD")]
		public const int elementId_x = 7;

		[Token(Token = "0x40027AE")]
		public const int elementId_actionTopRow2 = 8;

		[Token(Token = "0x40027AF")]
		public const int elementId_y = 8;

		[Token(Token = "0x40027B0")]
		public const int elementId_actionTopRow3 = 9;

		[Token(Token = "0x40027B1")]
		public const int elementId_z = 9;

		[Token(Token = "0x40027B2")]
		public const int elementId_leftShoulder1 = 10;

		[Token(Token = "0x40027B3")]
		public const int elementId_leftBumper = 10;

		[Token(Token = "0x40027B4")]
		public const int elementId_leftShoulder2 = 11;

		[Token(Token = "0x40027B5")]
		public const int elementId_leftTrigger = 11;

		[Token(Token = "0x40027B6")]
		public const int elementId_rightShoulder1 = 12;

		[Token(Token = "0x40027B7")]
		public const int elementId_rightBumper = 12;

		[Token(Token = "0x40027B8")]
		public const int elementId_rightShoulder2 = 13;

		[Token(Token = "0x40027B9")]
		public const int elementId_rightTrigger = 13;

		[Token(Token = "0x40027BA")]
		public const int elementId_center1 = 14;

		[Token(Token = "0x40027BB")]
		public const int elementId_back = 14;

		[Token(Token = "0x40027BC")]
		public const int elementId_center2 = 15;

		[Token(Token = "0x40027BD")]
		public const int elementId_start = 15;

		[Token(Token = "0x40027BE")]
		public const int elementId_center3 = 16;

		[Token(Token = "0x40027BF")]
		public const int elementId_guide = 16;

		[Token(Token = "0x40027C0")]
		public const int elementId_leftStickButton = 17;

		[Token(Token = "0x40027C1")]
		public const int elementId_rightStickButton = 18;

		[Token(Token = "0x40027C2")]
		public const int elementId_dPadUp = 19;

		[Token(Token = "0x40027C3")]
		public const int elementId_dPadRight = 20;

		[Token(Token = "0x40027C4")]
		public const int elementId_dPadDown = 21;

		[Token(Token = "0x40027C5")]
		public const int elementId_dPadLeft = 22;

		[Token(Token = "0x40027C6")]
		public const int elementId_leftStick = 23;

		[Token(Token = "0x40027C7")]
		public const int elementId_rightStick = 24;

		[Token(Token = "0x40027C8")]
		public const int elementId_dPad = 25;

		[Token(Token = "0x170003DC")]
		private IControllerTemplateButton Rewired.IGamepadTemplate.actionBottomRow1
		{
			[Token(Token = "0x60029D3")]
			[Address(RVA = "0x1475354", Offset = "0x1475354", VA = "0x1475354", Slot = "12")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003DD")]
		private IControllerTemplateButton Rewired.IGamepadTemplate.a
		{
			[Token(Token = "0x60029D4")]
			[Address(RVA = "0x14753A4", Offset = "0x14753A4", VA = "0x14753A4", Slot = "13")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003DE")]
		private IControllerTemplateButton Rewired.IGamepadTemplate.actionBottomRow2
		{
			[Token(Token = "0x60029D5")]
			[Address(RVA = "0x14753F4", Offset = "0x14753F4", VA = "0x14753F4", Slot = "14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003DF")]
		private IControllerTemplateButton Rewired.IGamepadTemplate.b
		{
			[Token(Token = "0x60029D6")]
			[Address(RVA = "0x1475444", Offset = "0x1475444", VA = "0x1475444", Slot = "15")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E0")]
		private IControllerTemplateButton Rewired.IGamepadTemplate.actionBottomRow3
		{
			[Token(Token = "0x60029D7")]
			[Address(RVA = "0x1475494", Offset = "0x1475494", VA = "0x1475494", Slot = "16")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E1")]
		private IControllerTemplateButton Rewired.IGamepadTemplate.c
		{
			[Token(Token = "0x60029D8")]
			[Address(RVA = "0x14754E4", Offset = "0x14754E4", VA = "0x14754E4", Slot = "17")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E2")]
		private IControllerTemplateButton Rewired.IGamepadTemplate.actionTopRow1
		{
			[Token(Token = "0x60029D9")]
			[Address(RVA = "0x1475534", Offset = "0x1475534", VA = "0x1475534", Slot = "18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E3")]
		private IControllerTemplateButton Rewired.IGamepadTemplate.x
		{
			[Token(Token = "0x60029DA")]
			[Address(RVA = "0x1475584", Offset = "0x1475584", VA = "0x1475584", Slot = "19")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E4")]
		private IControllerTemplateButton Rewired.IGamepadTemplate.actionTopRow2
		{
			[Token(Token = "0x60029DB")]
			[Address(RVA = "0x14755D4", Offset = "0x14755D4", VA = "0x14755D4", Slot = "20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E5")]
		private IControllerTemplateButton Rewired.IGamepadTemplate.y
		{
			[Token(Token = "0x60029DC")]
			[Address(RVA = "0x1475624", Offset = "0x1475624", VA = "0x1475624", Slot = "21")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E6")]
		private IControllerTemplateButton Rewired.IGamepadTemplate.actionTopRow3
		{
			[Token(Token = "0x60029DD")]
			[Address(RVA = "0x1475674", Offset = "0x1475674", VA = "0x1475674", Slot = "22")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E7")]
		private IControllerTemplateButton Rewired.IGamepadTemplate.z
		{
			[Token(Token = "0x60029DE")]
			[Address(RVA = "0x14756C4", Offset = "0x14756C4", VA = "0x14756C4", Slot = "23")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E8")]
		private IControllerTemplateButton Rewired.IGamepadTemplate.leftShoulder1
		{
			[Token(Token = "0x60029DF")]
			[Address(RVA = "0x1475714", Offset = "0x1475714", VA = "0x1475714", Slot = "24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E9")]
		private IControllerTemplateButton Rewired.IGamepadTemplate.leftBumper
		{
			[Token(Token = "0x60029E0")]
			[Address(RVA = "0x1475764", Offset = "0x1475764", VA = "0x1475764", Slot = "25")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003EA")]
		private IControllerTemplateAxis Rewired.IGamepadTemplate.leftShoulder2
		{
			[Token(Token = "0x60029E1")]
			[Address(RVA = "0x14757B4", Offset = "0x14757B4", VA = "0x14757B4", Slot = "26")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003EB")]
		private IControllerTemplateAxis Rewired.IGamepadTemplate.leftTrigger
		{
			[Token(Token = "0x60029E2")]
			[Address(RVA = "0x1475804", Offset = "0x1475804", VA = "0x1475804", Slot = "27")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003EC")]
		private IControllerTemplateButton Rewired.IGamepadTemplate.rightShoulder1
		{
			[Token(Token = "0x60029E3")]
			[Address(RVA = "0x1475854", Offset = "0x1475854", VA = "0x1475854", Slot = "28")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003ED")]
		private IControllerTemplateButton Rewired.IGamepadTemplate.rightBumper
		{
			[Token(Token = "0x60029E4")]
			[Address(RVA = "0x14758A4", Offset = "0x14758A4", VA = "0x14758A4", Slot = "29")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003EE")]
		private IControllerTemplateAxis Rewired.IGamepadTemplate.rightShoulder2
		{
			[Token(Token = "0x60029E5")]
			[Address(RVA = "0x14758F4", Offset = "0x14758F4", VA = "0x14758F4", Slot = "30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003EF")]
		private IControllerTemplateAxis Rewired.IGamepadTemplate.rightTrigger
		{
			[Token(Token = "0x60029E6")]
			[Address(RVA = "0x1475944", Offset = "0x1475944", VA = "0x1475944", Slot = "31")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003F0")]
		private IControllerTemplateButton Rewired.IGamepadTemplate.center1
		{
			[Token(Token = "0x60029E7")]
			[Address(RVA = "0x1475994", Offset = "0x1475994", VA = "0x1475994", Slot = "32")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003F1")]
		private IControllerTemplateButton Rewired.IGamepadTemplate.back
		{
			[Token(Token = "0x60029E8")]
			[Address(RVA = "0x14759E4", Offset = "0x14759E4", VA = "0x14759E4", Slot = "33")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003F2")]
		private IControllerTemplateButton Rewired.IGamepadTemplate.center2
		{
			[Token(Token = "0x60029E9")]
			[Address(RVA = "0x1475A34", Offset = "0x1475A34", VA = "0x1475A34", Slot = "34")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003F3")]
		private IControllerTemplateButton Rewired.IGamepadTemplate.start
		{
			[Token(Token = "0x60029EA")]
			[Address(RVA = "0x1475A84", Offset = "0x1475A84", VA = "0x1475A84", Slot = "35")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003F4")]
		private IControllerTemplateButton Rewired.IGamepadTemplate.center3
		{
			[Token(Token = "0x60029EB")]
			[Address(RVA = "0x1475AD4", Offset = "0x1475AD4", VA = "0x1475AD4", Slot = "36")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003F5")]
		private IControllerTemplateButton Rewired.IGamepadTemplate.guide
		{
			[Token(Token = "0x60029EC")]
			[Address(RVA = "0x1475B24", Offset = "0x1475B24", VA = "0x1475B24", Slot = "37")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003F6")]
		private IControllerTemplateThumbStick Rewired.IGamepadTemplate.leftStick
		{
			[Token(Token = "0x60029ED")]
			[Address(RVA = "0x1475B74", Offset = "0x1475B74", VA = "0x1475B74", Slot = "38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003F7")]
		private IControllerTemplateThumbStick Rewired.IGamepadTemplate.rightStick
		{
			[Token(Token = "0x60029EE")]
			[Address(RVA = "0x1475BC4", Offset = "0x1475BC4", VA = "0x1475BC4", Slot = "39")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003F8")]
		private IControllerTemplateDPad Rewired.IGamepadTemplate.dPad
		{
			[Token(Token = "0x60029EF")]
			[Address(RVA = "0x1475C14", Offset = "0x1475C14", VA = "0x1475C14", Slot = "40")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60029F0")]
		[Address(RVA = "0x1475C64", Offset = "0x1475C64", VA = "0x1475C64")]
		public GamepadTemplate(object payload)
		{
		}
	}
	[Token(Token = "0x20005E6")]
	public sealed class RacingWheelTemplate : ControllerTemplate, IRacingWheelTemplate, IControllerTemplate
	{
		[Token(Token = "0x40027C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Guid typeGuid;

		[Token(Token = "0x40027CA")]
		public const int elementId_wheel = 0;

		[Token(Token = "0x40027CB")]
		public const int elementId_accelerator = 1;

		[Token(Token = "0x40027CC")]
		public const int elementId_brake = 2;

		[Token(Token = "0x40027CD")]
		public const int elementId_clutch = 3;

		[Token(Token = "0x40027CE")]
		public const int elementId_shiftDown = 4;

		[Token(Token = "0x40027CF")]
		public const int elementId_shiftUp = 5;

		[Token(Token = "0x40027D0")]
		public const int elementId_wheelButton1 = 6;

		[Token(Token = "0x40027D1")]
		public const int elementId_wheelButton2 = 7;

		[Token(Token = "0x40027D2")]
		public const int elementId_wheelButton3 = 8;

		[Token(Token = "0x40027D3")]
		public const int elementId_wheelButton4 = 9;

		[Token(Token = "0x40027D4")]
		public const int elementId_wheelButton5 = 10;

		[Token(Token = "0x40027D5")]
		public const int elementId_wheelButton6 = 11;

		[Token(Token = "0x40027D6")]
		public const int elementId_wheelButton7 = 12;

		[Token(Token = "0x40027D7")]
		public const int elementId_wheelButton8 = 13;

		[Token(Token = "0x40027D8")]
		public const int elementId_wheelButton9 = 14;

		[Token(Token = "0x40027D9")]
		public const int elementId_wheelButton10 = 15;

		[Token(Token = "0x40027DA")]
		public const int elementId_consoleButton1 = 16;

		[Token(Token = "0x40027DB")]
		public const int elementId_consoleButton2 = 17;

		[Token(Token = "0x40027DC")]
		public const int elementId_consoleButton3 = 18;

		[Token(Token = "0x40027DD")]
		public const int elementId_consoleButton4 = 19;

		[Token(Token = "0x40027DE")]
		public const int elementId_consoleButton5 = 20;

		[Token(Token = "0x40027DF")]
		public const int elementId_consoleButton6 = 21;

		[Token(Token = "0x40027E0")]
		public const int elementId_consoleButton7 = 22;

		[Token(Token = "0x40027E1")]
		public const int elementId_consoleButton8 = 23;

		[Token(Token = "0x40027E2")]
		public const int elementId_consoleButton9 = 24;

		[Token(Token = "0x40027E3")]
		public const int elementId_consoleButton10 = 25;

		[Token(Token = "0x40027E4")]
		public const int elementId_shifter1 = 26;

		[Token(Token = "0x40027E5")]
		public const int elementId_shifter2 = 27;

		[Token(Token = "0x40027E6")]
		public const int elementId_shifter3 = 28;

		[Token(Token = "0x40027E7")]
		public const int elementId_shifter4 = 29;

		[Token(Token = "0x40027E8")]
		public const int elementId_shifter5 = 30;

		[Token(Token = "0x40027E9")]
		public const int elementId_shifter6 = 31;

		[Token(Token = "0x40027EA")]
		public const int elementId_shifter7 = 32;

		[Token(Token = "0x40027EB")]
		public const int elementId_shifter8 = 33;

		[Token(Token = "0x40027EC")]
		public const int elementId_shifter9 = 34;

		[Token(Token = "0x40027ED")]
		public const int elementId_shifter10 = 35;

		[Token(Token = "0x40027EE")]
		public const int elementId_reverseGear = 44;

		[Token(Token = "0x40027EF")]
		public const int elementId_select = 36;

		[Token(Token = "0x40027F0")]
		public const int elementId_start = 37;

		[Token(Token = "0x40027F1")]
		public const int elementId_systemButton = 38;

		[Token(Token = "0x40027F2")]
		public const int elementId_horn = 43;

		[Token(Token = "0x40027F3")]
		public const int elementId_dPadUp = 39;

		[Token(Token = "0x40027F4")]
		public const int elementId_dPadRight = 40;

		[Token(Token = "0x40027F5")]
		public const int elementId_dPadDown = 41;

		[Token(Token = "0x40027F6")]
		public const int elementId_dPadLeft = 42;

		[Token(Token = "0x40027F7")]
		public const int elementId_dPad = 45;

		[Token(Token = "0x170003F9")]
		private IControllerTemplateAxis Rewired.IRacingWheelTemplate.wheel
		{
			[Token(Token = "0x60029F2")]
			[Address(RVA = "0x1180F08", Offset = "0x1180F08", VA = "0x1180F08", Slot = "12")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003FA")]
		private IControllerTemplateAxis Rewired.IRacingWheelTemplate.accelerator
		{
			[Token(Token = "0x60029F3")]
			[Address(RVA = "0x1180F58", Offset = "0x1180F58", VA = "0x1180F58", Slot = "13")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003FB")]
		private IControllerTemplateAxis Rewired.IRacingWheelTemplate.brake
		{
			[Token(Token = "0x60029F4")]
			[Address(RVA = "0x1180FA8", Offset = "0x1180FA8", VA = "0x1180FA8", Slot = "14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003FC")]
		private IControllerTemplateAxis Rewired.IRacingWheelTemplate.clutch
		{
			[Token(Token = "0x60029F5")]
			[Address(RVA = "0x1180FF8", Offset = "0x1180FF8", VA = "0x1180FF8", Slot = "15")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003FD")]
		private IControllerTemplateButton Rewired.IRacingWheelTemplate.shiftDown
		{
			[Token(Token = "0x60029F6")]
			[Address(RVA = "0x1181048", Offset = "0x1181048", VA = "0x1181048", Slot = "16")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003FE")]
		private IControllerTemplateButton Rewired.IRacingWheelTemplate.shiftUp
		{
			[Token(Token = "0x60029F7")]
			[Address(RVA = "0x1181098", Offset = "0x1181098", VA = "0x1181098", Slot = "17")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003FF")]
		private IControllerTemplateButton Rewired.IRacingWheelTemplate.wheelButton1
		{
			[Token(Token = "0x60029F8")]
			[Address(RVA = "0x11810E8", Offset = "0x11810E8", VA = "0x11810E8", Slot = "18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000400")]
		private IControllerTemplateButton Rewired.IRacingWheelTemplate.wheelButton2
		{
			[Token(Token = "0x60029F9")]
			[Address(RVA = "0x1181138", Offset = "0x1181138", VA = "0x1181138", Slot = "19")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000401")]
		private IControllerTemplateButton Rewired.IRacingWheelTemplate.wheelButton3
		{
			[Token(Token = "0x60029FA")]
			[Address(RVA = "0x1181188", Offset = "0x1181188", VA = "0x1181188", Slot = "20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000402")]
		private IControllerTemplateButton Rewired.IRacingWheelTemplate.wheelButton4
		{
			[Token(Token = "0x60029FB")]
			[Address(RVA = "0x11811D8", Offset = "0x11811D8", VA = "0x11811D8", Slot = "21")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000403")]
		private IControllerTemplateButton Rewired.IRacingWheelTemplate.wheelButton5
		{
			[Token(Token = "0x60029FC")]
			[Address(RVA = "0x1181228", Offset = "0x1181228", VA = "0x1181228", Slot = "22")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000404")]
		private IControllerTemplateButton Rewired.IRacingWheelTemplate.wheelButton6
		{
			[Token(Token = "0x60029FD")]
			[Address(RVA = "0x1181278", Offset = "0x1181278", VA = "0x1181278", Slot = "23")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000405")]
		private IControllerTemplateButton Rewired.IRacingWheelTemplate.wheelButton7
		{
			[Token(Token = "0x60029FE")]
			[Address(RVA = "0x11812C8", Offset = "0x11812C8", VA = "0x11812C8", Slot = "24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000406")]
		private IControllerTemplateButton Rewired.IRacingWheelTemplate.wheelButton8
		{
			[Token(Token = "0x60029FF")]
			[Address(RVA = "0x1181318", Offset = "0x1181318", VA = "0x1181318", Slot = "25")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000407")]
		private IControllerTemplateButton Rewired.IRacingWheelTemplate.wheelButton9
		{
			[Token(Token = "0x6002A00")]
			[Address(RVA = "0x1181368", Offset = "0x1181368", VA = "0x1181368", Slot = "26")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000408")]
		private IControllerTemplateButton Rewired.IRacingWheelTemplate.wheelButton10
		{
			[Token(Token = "0x6002A01")]
			[Address(RVA = "0x11813B8", Offset = "0x11813B8", VA = "0x11813B8", Slot = "27")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000409")]
		private IControllerTemplateButton Rewired.IRacingWheelTemplate.consoleButton1
		{
			[Token(Token = "0x6002A02")]
			[Address(RVA = "0x1181408", Offset = "0x1181408", VA = "0x1181408", Slot = "28")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700040A")]
		private IControllerTemplateButton Rewired.IRacingWheelTemplate.consoleButton2
		{
			[Token(Token = "0x6002A03")]
			[Address(RVA = "0x1181458", Offset = "0x1181458", VA = "0x1181458", Slot = "29")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700040B")]
		private IControllerTemplateButton Rewired.IRacingWheelTemplate.consoleButton3
		{
			[Token(Token = "0x6002A04")]
			[Address(RVA = "0x11814A8", Offset = "0x11814A8", VA = "0x11814A8", Slot = "30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700040C")]
		private IControllerTemplateButton Rewired.IRacingWheelTemplate.consoleButton4
		{
			[Token(Token = "0x6002A05")]
			[Address(RVA = "0x11814F8", Offset = "0x11814F8", VA = "0x11814F8", Slot = "31")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700040D")]
		private IControllerTemplateButton Rewired.IRacingWheelTemplate.consoleButton5
		{
			[Token(Token = "0x6002A06")]
			[Address(RVA = "0x1181548", Offset = "0x1181548", VA = "0x1181548", Slot = "32")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700040E")]
		private IControllerTemplateButton Rewired.IRacingWheelTemplate.consoleButton6
		{
			[Token(Token = "0x6002A07")]
			[Address(RVA = "0x1181598", Offset = "0x1181598", VA = "0x1181598", Slot = "33")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700040F")]
		private IControllerTemplateButton Rewired.IRacingWheelTemplate.consoleButton7
		{
			[Token(Token = "0x6002A08")]
			[Address(RVA = "0x11815E8", Offset = "0x11815E8", VA = "0x11815E8", Slot = "34")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000410")]
		private IControllerTemplateButton Rewired.IRacingWheelTemplate.consoleButton8
		{
			[Token(Token = "0x6002A09")]
			[Address(RVA = "0x1181638", Offset = "0x1181638", VA = "0x1181638", Slot = "35")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000411")]
		private IControllerTemplateButton Rewired.IRacingWheelTemplate.consoleButton9
		{
			[Token(Token = "0x6002A0A")]
			[Address(RVA = "0x1181688", Offset = "0x1181688", VA = "0x1181688", Slot = "36")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000412")]
		private IControllerTemplateButton Rewired.IRacingWheelTemplate.consoleButton10
		{
			[Token(Token = "0x6002A0B")]
			[Address(RVA = "0x11816D8", Offset = "0x11816D8", VA = "0x11816D8", Slot = "37")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000413")]
		private IControllerTemplateButton Rewired.IRacingWheelTemplate.shifter1
		{
			[Token(Token = "0x6002A0C")]
			[Address(RVA = "0x1181728", Offset = "0x1181728", VA = "0x1181728", Slot = "38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000414")]
		private IControllerTemplateButton Rewired.IRacingWheelTemplate.shifter2
		{
			[Token(Token = "0x6002A0D")]
			[Address(RVA = "0x1181778", Offset = "0x1181778", VA = "0x1181778", Slot = "39")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000415")]
		private IControllerTemplateButton Rewired.IRacingWheelTemplate.shifter3
		{
			[Token(Token = "0x6002A0E")]
			[Address(RVA = "0x11817C8", Offset = "0x11817C8", VA = "0x11817C8", Slot = "40")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000416")]
		private IControllerTemplateButton Rewired.IRacingWheelTemplate.shifter4
		{
			[Token(Token = "0x6002A0F")]
			[Address(RVA = "0x1181818", Offset = "0x1181818", VA = "0x1181818", Slot = "41")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000417")]
		private IControllerTemplateButton Rewired.IRacingWheelTemplate.shifter5
		{
			[Token(Token = "0x6002A10")]
			[Address(RVA = "0x1181868", Offset = "0x1181868", VA = "0x1181868", Slot = "42")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000418")]
		private IControllerTemplateButton Rewired.IRacingWheelTemplate.shifter6
		{
			[Token(Token = "0x6002A11")]
			[Address(RVA = "0x11818B8", Offset = "0x11818B8", VA = "0x11818B8", Slot = "43")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000419")]
		private IControllerTemplateButton Rewired.IRacingWheelTemplate.shifter7
		{
			[Token(Token = "0x6002A12")]
			[Address(RVA = "0x1181908", Offset = "0x1181908", VA = "0x1181908", Slot = "44")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700041A")]
		private IControllerTemplateButton Rewired.IRacingWheelTemplate.shifter8
		{
			[Token(Token = "0x6002A13")]
			[Address(RVA = "0x1181958", Offset = "0x1181958", VA = "0x1181958", Slot = "45")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700041B")]
		private IControllerTemplateButton Rewired.IRacingWheelTemplate.shifter9
		{
			[Token(Token = "0x6002A14")]
			[Address(RVA = "0x11819A8", Offset = "0x11819A8", VA = "0x11819A8", Slot = "46")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700041C")]
		private IControllerTemplateButton Rewired.IRacingWheelTemplate.shifter10
		{
			[Token(Token = "0x6002A15")]
			[Address(RVA = "0x11819F8", Offset = "0x11819F8", VA = "0x11819F8", Slot = "47")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700041D")]
		private IControllerTemplateButton Rewired.IRacingWheelTemplate.reverseGear
		{
			[Token(Token = "0x6002A16")]
			[Address(RVA = "0x1181A48", Offset = "0x1181A48", VA = "0x1181A48", Slot = "48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700041E")]
		private IControllerTemplateButton Rewired.IRacingWheelTemplate.select
		{
			[Token(Token = "0x6002A17")]
			[Address(RVA = "0x1181A98", Offset = "0x1181A98", VA = "0x1181A98", Slot = "49")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700041F")]
		private IControllerTemplateButton Rewired.IRacingWheelTemplate.start
		{
			[Token(Token = "0x6002A18")]
			[Address(RVA = "0x1181AE8", Offset = "0x1181AE8", VA = "0x1181AE8", Slot = "50")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000420")]
		private IControllerTemplateButton Rewired.IRacingWheelTemplate.systemButton
		{
			[Token(Token = "0x6002A19")]
			[Address(RVA = "0x1181B38", Offset = "0x1181B38", VA = "0x1181B38", Slot = "51")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000421")]
		private IControllerTemplateButton Rewired.IRacingWheelTemplate.horn
		{
			[Token(Token = "0x6002A1A")]
			[Address(RVA = "0x1181B88", Offset = "0x1181B88", VA = "0x1181B88", Slot = "52")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000422")]
		private IControllerTemplateDPad Rewired.IRacingWheelTemplate.dPad
		{
			[Token(Token = "0x6002A1B")]
			[Address(RVA = "0x1181BD8", Offset = "0x1181BD8", VA = "0x1181BD8", Slot = "53")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A1C")]
		[Address(RVA = "0x1181C28", Offset = "0x1181C28", VA = "0x1181C28")]
		public RacingWheelTemplate(object payload)
		{
		}
	}
	[Token(Token = "0x20005E7")]
	public sealed class HOTASTemplate : ControllerTemplate, IHOTASTemplate, IControllerTemplate
	{
		[Token(Token = "0x40027F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Guid typeGuid;

		[Token(Token = "0x40027F9")]
		public const int elementId_stickX = 0;

		[Token(Token = "0x40027FA")]
		public const int elementId_stickY = 1;

		[Token(Token = "0x40027FB")]
		public const int elementId_stickRotate = 2;

		[Token(Token = "0x40027FC")]
		public const int elementId_stickMiniStick1X = 78;

		[Token(Token = "0x40027FD")]
		public const int elementId_stickMiniStick1Y = 79;

		[Token(Token = "0x40027FE")]
		public const int elementId_stickMiniStick1Press = 80;

		[Token(Token = "0x40027FF")]
		public const int elementId_stickMiniStick2X = 81;

		[Token(Token = "0x4002800")]
		public const int elementId_stickMiniStick2Y = 82;

		[Token(Token = "0x4002801")]
		public const int elementId_stickMiniStick2Press = 83;

		[Token(Token = "0x4002802")]
		public const int elementId_stickTrigger = 3;

		[Token(Token = "0x4002803")]
		public const int elementId_stickTriggerStage2 = 4;

		[Token(Token = "0x4002804")]
		public const int elementId_stickPinkyButton = 5;

		[Token(Token = "0x4002805")]
		public const int elementId_stickPinkyTrigger = 154;

		[Token(Token = "0x4002806")]
		public const int elementId_stickButton1 = 6;

		[Token(Token = "0x4002807")]
		public const int elementId_stickButton2 = 7;

		[Token(Token = "0x4002808")]
		public const int elementId_stickButton3 = 8;

		[Token(Token = "0x4002809")]
		public const int elementId_stickButton4 = 9;

		[Token(Token = "0x400280A")]
		public const int elementId_stickButton5 = 10;

		[Token(Token = "0x400280B")]
		public const int elementId_stickButton6 = 11;

		[Token(Token = "0x400280C")]
		public const int elementId_stickButton7 = 12;

		[Token(Token = "0x400280D")]
		public const int elementId_stickButton8 = 13;

		[Token(Token = "0x400280E")]
		public const int elementId_stickButton9 = 14;

		[Token(Token = "0x400280F")]
		public const int elementId_stickButton10 = 15;

		[Token(Token = "0x4002810")]
		public const int elementId_stickBaseButton1 = 18;

		[Token(Token = "0x4002811")]
		public const int elementId_stickBaseButton2 = 19;

		[Token(Token = "0x4002812")]
		public const int elementId_stickBaseButton3 = 20;

		[Token(Token = "0x4002813")]
		public const int elementId_stickBaseButton4 = 21;

		[Token(Token = "0x4002814")]
		public const int elementId_stickBaseButton5 = 22;

		[Token(Token = "0x4002815")]
		public const int elementId_stickBaseButton6 = 23;

		[Token(Token = "0x4002816")]
		public const int elementId_stickBaseButton7 = 24;

		[Token(Token = "0x4002817")]
		public const int elementId_stickBaseButton8 = 25;

		[Token(Token = "0x4002818")]
		public const int elementId_stickBaseButton9 = 26;

		[Token(Token = "0x4002819")]
		public const int elementId_stickBaseButton10 = 27;

		[Token(Token = "0x400281A")]
		public const int elementId_stickBaseButton11 = 161;

		[Token(Token = "0x400281B")]
		public const int elementId_stickBaseButton12 = 162;

		[Token(Token = "0x400281C")]
		public const int elementId_stickHat1Up = 28;

		[Token(Token = "0x400281D")]
		public const int elementId_stickHat1UpRight = 29;

		[Token(Token = "0x400281E")]
		public const int elementId_stickHat1Right = 30;

		[Token(Token = "0x400281F")]
		public const int elementId_stickHat1DownRight = 31;

		[Token(Token = "0x4002820")]
		public const int elementId_stickHat1Down = 32;

		[Token(Token = "0x4002821")]
		public const int elementId_stickHat1DownLeft = 33;

		[Token(Token = "0x4002822")]
		public const int elementId_stickHat1Left = 34;

		[Token(Token = "0x4002823")]
		public const int elementId_stickHat1Up_Left = 35;

		[Token(Token = "0x4002824")]
		public const int elementId_stickHat2Up = 36;

		[Token(Token = "0x4002825")]
		public const int elementId_stickHat2Up_right = 37;

		[Token(Token = "0x4002826")]
		public const int elementId_stickHat2Right = 38;

		[Token(Token = "0x4002827")]
		public const int elementId_stickHat2Down_Right = 39;

		[Token(Token = "0x4002828")]
		public const int elementId_stickHat2Down = 40;

		[Token(Token = "0x4002829")]
		public const int elementId_stickHat2Down_Left = 41;

		[Token(Token = "0x400282A")]
		public const int elementId_stickHat2Left = 42;

		[Token(Token = "0x400282B")]
		public const int elementId_stickHat2Up_Left = 43;

		[Token(Token = "0x400282C")]
		public const int elementId_stickHat3Up = 84;

		[Token(Token = "0x400282D")]
		public const int elementId_stickHat3Up_Right = 85;

		[Token(Token = "0x400282E")]
		public const int elementId_stickHat3Right = 86;

		[Token(Token = "0x400282F")]
		public const int elementId_stickHat3Down_Right = 87;

		[Token(Token = "0x4002830")]
		public const int elementId_stickHat3Down = 88;

		[Token(Token = "0x4002831")]
		public const int elementId_stickHat3Down_Left = 89;

		[Token(Token = "0x4002832")]
		public const int elementId_stickHat3Left = 90;

		[Token(Token = "0x4002833")]
		public const int elementId_stickHat3Up_Left = 91;

		[Token(Token = "0x4002834")]
		public const int elementId_stickHat4Up = 92;

		[Token(Token = "0x4002835")]
		public const int elementId_stickHat4Up_Right = 93;

		[Token(Token = "0x4002836")]
		public const int elementId_stickHat4Right = 94;

		[Token(Token = "0x4002837")]
		public const int elementId_stickHat4Down_Right = 95;

		[Token(Token = "0x4002838")]
		public const int elementId_stickHat4Down = 96;

		[Token(Token = "0x4002839")]
		public const int elementId_stickHat4Down_Left = 97;

		[Token(Token = "0x400283A")]
		public const int elementId_stickHat4Left = 98;

		[Token(Token = "0x400283B")]
		public const int elementId_stickHat4Up_Left = 99;

		[Token(Token = "0x400283C")]
		public const int elementId_mode1 = 44;

		[Token(Token = "0x400283D")]
		public const int elementId_mode2 = 45;

		[Token(Token = "0x400283E")]
		public const int elementId_mode3 = 46;

		[Token(Token = "0x400283F")]
		public const int elementId_throttle1Axis = 49;

		[Token(Token = "0x4002840")]
		public const int elementId_throttle2Axis = 155;

		[Token(Token = "0x4002841")]
		public const int elementId_throttle1MinDetent = 166;

		[Token(Token = "0x4002842")]
		public const int elementId_throttle2MinDetent = 167;

		[Token(Token = "0x4002843")]
		public const int elementId_throttleButton1 = 50;

		[Token(Token = "0x4002844")]
		public const int elementId_throttleButton2 = 51;

		[Token(Token = "0x4002845")]
		public const int elementId_throttleButton3 = 52;

		[Token(Token = "0x4002846")]
		public const int elementId_throttleButton4 = 53;

		[Token(Token = "0x4002847")]
		public const int elementId_throttleButton5 = 54;

		[Token(Token = "0x4002848")]
		public const int elementId_throttleButton6 = 55;

		[Token(Token = "0x4002849")]
		public const int elementId_throttleButton7 = 56;

		[Token(Token = "0x400284A")]
		public const int elementId_throttleButton8 = 57;

		[Token(Token = "0x400284B")]
		public const int elementId_throttleButton9 = 58;

		[Token(Token = "0x400284C")]
		public const int elementId_throttleButton10 = 59;

		[Token(Token = "0x400284D")]
		public const int elementId_throttleBaseButton1 = 60;

		[Token(Token = "0x400284E")]
		public const int elementId_throttleBaseButton2 = 61;

		[Token(Token = "0x400284F")]
		public const int elementId_throttleBaseButton3 = 62;

		[Token(Token = "0x4002850")]
		public const int elementId_throttleBaseButton4 = 63;

		[Token(Token = "0x4002851")]
		public const int elementId_throttleBaseButton5 = 64;

		[Token(Token = "0x4002852")]
		public const int elementId_throttleBaseButton6 = 65;

		[Token(Token = "0x4002853")]
		public const int elementId_throttleBaseButton7 = 66;

		[Token(Token = "0x4002854")]
		public const int elementId_throttleBaseButton8 = 67;

		[Token(Token = "0x4002855")]
		public const int elementId_throttleBaseButton9 = 68;

		[Token(Token = "0x4002856")]
		public const int elementId_throttleBaseButton10 = 69;

		[Token(Token = "0x4002857")]
		public const int elementId_throttleBaseButton11 = 132;

		[Token(Token = "0x4002858")]
		public const int elementId_throttleBaseButton12 = 133;

		[Token(Token = "0x4002859")]
		public const int elementId_throttleBaseButton13 = 134;

		[Token(Token = "0x400285A")]
		public const int elementId_throttleBaseButton14 = 135;

		[Token(Token = "0x400285B")]
		public const int elementId_throttleBaseButton15 = 136;

		[Token(Token = "0x400285C")]
		public const int elementId_throttleSlider1 = 70;

		[Token(Token = "0x400285D")]
		public const int elementId_throttleSlider2 = 71;

		[Token(Token = "0x400285E")]
		public const int elementId_throttleSlider3 = 72;

		[Token(Token = "0x400285F")]
		public const int elementId_throttleSlider4 = 73;

		[Token(Token = "0x4002860")]
		public const int elementId_throttleDial1 = 74;

		[Token(Token = "0x4002861")]
		public const int elementId_throttleDial2 = 142;

		[Token(Token = "0x4002862")]
		public const int elementId_throttleDial3 = 143;

		[Token(Token = "0x4002863")]
		public const int elementId_throttleDial4 = 144;

		[Token(Token = "0x4002864")]
		public const int elementId_throttleMiniStickX = 75;

		[Token(Token = "0x4002865")]
		public const int elementId_throttleMiniStickY = 76;

		[Token(Token = "0x4002866")]
		public const int elementId_throttleMiniStickPress = 77;

		[Token(Token = "0x4002867")]
		public const int elementId_throttleWheel1Forward = 145;

		[Token(Token = "0x4002868")]
		public const int elementId_throttleWheel1Back = 146;

		[Token(Token = "0x4002869")]
		public const int elementId_throttleWheel1Press = 147;

		[Token(Token = "0x400286A")]
		public const int elementId_throttleWheel2Forward = 148;

		[Token(Token = "0x400286B")]
		public const int elementId_throttleWheel2Back = 149;

		[Token(Token = "0x400286C")]
		public const int elementId_throttleWheel2Press = 150;

		[Token(Token = "0x400286D")]
		public const int elementId_throttleWheel3Forward = 151;

		[Token(Token = "0x400286E")]
		public const int elementId_throttleWheel3Back = 152;

		[Token(Token = "0x400286F")]
		public const int elementId_throttleWheel3Press = 153;

		[Token(Token = "0x4002870")]
		public const int elementId_throttleHat1Up = 100;

		[Token(Token = "0x4002871")]
		public const int elementId_throttleHat1Up_Right = 101;

		[Token(Token = "0x4002872")]
		public const int elementId_throttleHat1Right = 102;

		[Token(Token = "0x4002873")]
		public const int elementId_throttleHat1Down_Right = 103;

		[Token(Token = "0x4002874")]
		public const int elementId_throttleHat1Down = 104;

		[Token(Token = "0x4002875")]
		public const int elementId_throttleHat1Down_Left = 105;

		[Token(Token = "0x4002876")]
		public const int elementId_throttleHat1Left = 106;

		[Token(Token = "0x4002877")]
		public const int elementId_throttleHat1Up_Left = 107;

		[Token(Token = "0x4002878")]
		public const int elementId_throttleHat2Up = 108;

		[Token(Token = "0x4002879")]
		public const int elementId_throttleHat2Up_Right = 109;

		[Token(Token = "0x400287A")]
		public const int elementId_throttleHat2Right = 110;

		[Token(Token = "0x400287B")]
		public const int elementId_throttleHat2Down_Right = 111;

		[Token(Token = "0x400287C")]
		public const int elementId_throttleHat2Down = 112;

		[Token(Token = "0x400287D")]
		public const int elementId_throttleHat2Down_Left = 113;

		[Token(Token = "0x400287E")]
		public const int elementId_throttleHat2Left = 114;

		[Token(Token = "0x400287F")]
		public const int elementId_throttleHat2Up_Left = 115;

		[Token(Token = "0x4002880")]
		public const int elementId_throttleHat3Up = 116;

		[Token(Token = "0x4002881")]
		public const int elementId_throttleHat3Up_Right = 117;

		[Token(Token = "0x4002882")]
		public const int elementId_throttleHat3Right = 118;

		[Token(Token = "0x4002883")]
		public const int elementId_throttleHat3Down_Right = 119;

		[Token(Token = "0x4002884")]
		public const int elementId_throttleHat3Down = 120;

		[Token(Token = "0x4002885")]
		public const int elementId_throttleHat3Down_Left = 121;

		[Token(Token = "0x4002886")]
		public const int elementId_throttleHat3Left = 122;

		[Token(Token = "0x4002887")]
		public const int elementId_throttleHat3Up_Left = 123;

		[Token(Token = "0x4002888")]
		public const int elementId_throttleHat4Up = 124;

		[Token(Token = "0x4002889")]
		public const int elementId_throttleHat4Up_Right = 125;

		[Token(Token = "0x400288A")]
		public const int elementId_throttleHat4Right = 126;

		[Token(Token = "0x400288B")]
		public const int elementId_throttleHat4Down_Right = 127;

		[Token(Token = "0x400288C")]
		public const int elementId_throttleHat4Down = 128;

		[Token(Token = "0x400288D")]
		public const int elementId_throttleHat4Down_Left = 129;

		[Token(Token = "0x400288E")]
		public const int elementId_throttleHat4Left = 130;

		[Token(Token = "0x400288F")]
		public const int elementId_throttleHat4Up_Left = 131;

		[Token(Token = "0x4002890")]
		public const int elementId_leftPedal = 168;

		[Token(Token = "0x4002891")]
		public const int elementId_rightPedal = 169;

		[Token(Token = "0x4002892")]
		public const int elementId_slidePedals = 170;

		[Token(Token = "0x4002893")]
		public const int elementId_stick = 171;

		[Token(Token = "0x4002894")]
		public const int elementId_stickMiniStick1 = 172;

		[Token(Token = "0x4002895")]
		public const int elementId_stickMiniStick2 = 173;

		[Token(Token = "0x4002896")]
		public const int elementId_stickHat1 = 174;

		[Token(Token = "0x4002897")]
		public const int elementId_stickHat2 = 175;

		[Token(Token = "0x4002898")]
		public const int elementId_stickHat3 = 176;

		[Token(Token = "0x4002899")]
		public const int elementId_stickHat4 = 177;

		[Token(Token = "0x400289A")]
		public const int elementId_throttle1 = 178;

		[Token(Token = "0x400289B")]
		public const int elementId_throttle2 = 179;

		[Token(Token = "0x400289C")]
		public const int elementId_throttleMiniStick = 180;

		[Token(Token = "0x400289D")]
		public const int elementId_throttleHat1 = 181;

		[Token(Token = "0x400289E")]
		public const int elementId_throttleHat2 = 182;

		[Token(Token = "0x400289F")]
		public const int elementId_throttleHat3 = 183;

		[Token(Token = "0x40028A0")]
		public const int elementId_throttleHat4 = 184;

		[Token(Token = "0x17000423")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.stickTrigger
		{
			[Token(Token = "0x6002A1E")]
			[Address(RVA = "0x141396C", Offset = "0x141396C", VA = "0x141396C", Slot = "12")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000424")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.stickTriggerStage2
		{
			[Token(Token = "0x6002A1F")]
			[Address(RVA = "0x14139BC", Offset = "0x14139BC", VA = "0x14139BC", Slot = "13")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000425")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.stickPinkyButton
		{
			[Token(Token = "0x6002A20")]
			[Address(RVA = "0x1413A0C", Offset = "0x1413A0C", VA = "0x1413A0C", Slot = "14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000426")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.stickPinkyTrigger
		{
			[Token(Token = "0x6002A21")]
			[Address(RVA = "0x1413A5C", Offset = "0x1413A5C", VA = "0x1413A5C", Slot = "15")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000427")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.stickButton1
		{
			[Token(Token = "0x6002A22")]
			[Address(RVA = "0x1413AAC", Offset = "0x1413AAC", VA = "0x1413AAC", Slot = "16")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000428")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.stickButton2
		{
			[Token(Token = "0x6002A23")]
			[Address(RVA = "0x1413AFC", Offset = "0x1413AFC", VA = "0x1413AFC", Slot = "17")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000429")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.stickButton3
		{
			[Token(Token = "0x6002A24")]
			[Address(RVA = "0x1413B4C", Offset = "0x1413B4C", VA = "0x1413B4C", Slot = "18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700042A")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.stickButton4
		{
			[Token(Token = "0x6002A25")]
			[Address(RVA = "0x1413B9C", Offset = "0x1413B9C", VA = "0x1413B9C", Slot = "19")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700042B")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.stickButton5
		{
			[Token(Token = "0x6002A26")]
			[Address(RVA = "0x1413BEC", Offset = "0x1413BEC", VA = "0x1413BEC", Slot = "20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700042C")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.stickButton6
		{
			[Token(Token = "0x6002A27")]
			[Address(RVA = "0x1413C3C", Offset = "0x1413C3C", VA = "0x1413C3C", Slot = "21")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700042D")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.stickButton7
		{
			[Token(Token = "0x6002A28")]
			[Address(RVA = "0x1413C8C", Offset = "0x1413C8C", VA = "0x1413C8C", Slot = "22")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700042E")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.stickButton8
		{
			[Token(Token = "0x6002A29")]
			[Address(RVA = "0x1413CDC", Offset = "0x1413CDC", VA = "0x1413CDC", Slot = "23")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700042F")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.stickButton9
		{
			[Token(Token = "0x6002A2A")]
			[Address(RVA = "0x1413D2C", Offset = "0x1413D2C", VA = "0x1413D2C", Slot = "24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000430")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.stickButton10
		{
			[Token(Token = "0x6002A2B")]
			[Address(RVA = "0x1413D7C", Offset = "0x1413D7C", VA = "0x1413D7C", Slot = "25")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000431")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.stickBaseButton1
		{
			[Token(Token = "0x6002A2C")]
			[Address(RVA = "0x1413DCC", Offset = "0x1413DCC", VA = "0x1413DCC", Slot = "26")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000432")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.stickBaseButton2
		{
			[Token(Token = "0x6002A2D")]
			[Address(RVA = "0x1413E1C", Offset = "0x1413E1C", VA = "0x1413E1C", Slot = "27")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000433")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.stickBaseButton3
		{
			[Token(Token = "0x6002A2E")]
			[Address(RVA = "0x1413E6C", Offset = "0x1413E6C", VA = "0x1413E6C", Slot = "28")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000434")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.stickBaseButton4
		{
			[Token(Token = "0x6002A2F")]
			[Address(RVA = "0x1413EBC", Offset = "0x1413EBC", VA = "0x1413EBC", Slot = "29")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000435")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.stickBaseButton5
		{
			[Token(Token = "0x6002A30")]
			[Address(RVA = "0x1413F0C", Offset = "0x1413F0C", VA = "0x1413F0C", Slot = "30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000436")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.stickBaseButton6
		{
			[Token(Token = "0x6002A31")]
			[Address(RVA = "0x1413F5C", Offset = "0x1413F5C", VA = "0x1413F5C", Slot = "31")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000437")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.stickBaseButton7
		{
			[Token(Token = "0x6002A32")]
			[Address(RVA = "0x1413FAC", Offset = "0x1413FAC", VA = "0x1413FAC", Slot = "32")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000438")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.stickBaseButton8
		{
			[Token(Token = "0x6002A33")]
			[Address(RVA = "0x1413FFC", Offset = "0x1413FFC", VA = "0x1413FFC", Slot = "33")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000439")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.stickBaseButton9
		{
			[Token(Token = "0x6002A34")]
			[Address(RVA = "0x141404C", Offset = "0x141404C", VA = "0x141404C", Slot = "34")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700043A")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.stickBaseButton10
		{
			[Token(Token = "0x6002A35")]
			[Address(RVA = "0x141409C", Offset = "0x141409C", VA = "0x141409C", Slot = "35")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700043B")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.stickBaseButton11
		{
			[Token(Token = "0x6002A36")]
			[Address(RVA = "0x14140EC", Offset = "0x14140EC", VA = "0x14140EC", Slot = "36")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700043C")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.stickBaseButton12
		{
			[Token(Token = "0x6002A37")]
			[Address(RVA = "0x141413C", Offset = "0x141413C", VA = "0x141413C", Slot = "37")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700043D")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.mode1
		{
			[Token(Token = "0x6002A38")]
			[Address(RVA = "0x141418C", Offset = "0x141418C", VA = "0x141418C", Slot = "38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700043E")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.mode2
		{
			[Token(Token = "0x6002A39")]
			[Address(RVA = "0x14141DC", Offset = "0x14141DC", VA = "0x14141DC", Slot = "39")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700043F")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.mode3
		{
			[Token(Token = "0x6002A3A")]
			[Address(RVA = "0x141422C", Offset = "0x141422C", VA = "0x141422C", Slot = "40")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000440")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.throttleButton1
		{
			[Token(Token = "0x6002A3B")]
			[Address(RVA = "0x141427C", Offset = "0x141427C", VA = "0x141427C", Slot = "41")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000441")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.throttleButton2
		{
			[Token(Token = "0x6002A3C")]
			[Address(RVA = "0x14142CC", Offset = "0x14142CC", VA = "0x14142CC", Slot = "42")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000442")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.throttleButton3
		{
			[Token(Token = "0x6002A3D")]
			[Address(RVA = "0x141431C", Offset = "0x141431C", VA = "0x141431C", Slot = "43")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000443")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.throttleButton4
		{
			[Token(Token = "0x6002A3E")]
			[Address(RVA = "0x141436C", Offset = "0x141436C", VA = "0x141436C", Slot = "44")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000444")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.throttleButton5
		{
			[Token(Token = "0x6002A3F")]
			[Address(RVA = "0x14143BC", Offset = "0x14143BC", VA = "0x14143BC", Slot = "45")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000445")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.throttleButton6
		{
			[Token(Token = "0x6002A40")]
			[Address(RVA = "0x141440C", Offset = "0x141440C", VA = "0x141440C", Slot = "46")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000446")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.throttleButton7
		{
			[Token(Token = "0x6002A41")]
			[Address(RVA = "0x141445C", Offset = "0x141445C", VA = "0x141445C", Slot = "47")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000447")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.throttleButton8
		{
			[Token(Token = "0x6002A42")]
			[Address(RVA = "0x14144AC", Offset = "0x14144AC", VA = "0x14144AC", Slot = "48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000448")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.throttleButton9
		{
			[Token(Token = "0x6002A43")]
			[Address(RVA = "0x14144FC", Offset = "0x14144FC", VA = "0x14144FC", Slot = "49")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000449")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.throttleButton10
		{
			[Token(Token = "0x6002A44")]
			[Address(RVA = "0x141454C", Offset = "0x141454C", VA = "0x141454C", Slot = "50")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700044A")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.throttleBaseButton1
		{
			[Token(Token = "0x6002A45")]
			[Address(RVA = "0x141459C", Offset = "0x141459C", VA = "0x141459C", Slot = "51")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700044B")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.throttleBaseButton2
		{
			[Token(Token = "0x6002A46")]
			[Address(RVA = "0x14145EC", Offset = "0x14145EC", VA = "0x14145EC", Slot = "52")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700044C")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.throttleBaseButton3
		{
			[Token(Token = "0x6002A47")]
			[Address(RVA = "0x141463C", Offset = "0x141463C", VA = "0x141463C", Slot = "53")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700044D")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.throttleBaseButton4
		{
			[Token(Token = "0x6002A48")]
			[Address(RVA = "0x141468C", Offset = "0x141468C", VA = "0x141468C", Slot = "54")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700044E")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.throttleBaseButton5
		{
			[Token(Token = "0x6002A49")]
			[Address(RVA = "0x14146DC", Offset = "0x14146DC", VA = "0x14146DC", Slot = "55")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700044F")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.throttleBaseButton6
		{
			[Token(Token = "0x6002A4A")]
			[Address(RVA = "0x141472C", Offset = "0x141472C", VA = "0x141472C", Slot = "56")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000450")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.throttleBaseButton7
		{
			[Token(Token = "0x6002A4B")]
			[Address(RVA = "0x141477C", Offset = "0x141477C", VA = "0x141477C", Slot = "57")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000451")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.throttleBaseButton8
		{
			[Token(Token = "0x6002A4C")]
			[Address(RVA = "0x14147CC", Offset = "0x14147CC", VA = "0x14147CC", Slot = "58")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000452")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.throttleBaseButton9
		{
			[Token(Token = "0x6002A4D")]
			[Address(RVA = "0x141481C", Offset = "0x141481C", VA = "0x141481C", Slot = "59")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000453")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.throttleBaseButton10
		{
			[Token(Token = "0x6002A4E")]
			[Address(RVA = "0x141486C", Offset = "0x141486C", VA = "0x141486C", Slot = "60")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000454")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.throttleBaseButton11
		{
			[Token(Token = "0x6002A4F")]
			[Address(RVA = "0x14148BC", Offset = "0x14148BC", VA = "0x14148BC", Slot = "61")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000455")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.throttleBaseButton12
		{
			[Token(Token = "0x6002A50")]
			[Address(RVA = "0x141490C", Offset = "0x141490C", VA = "0x141490C", Slot = "62")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000456")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.throttleBaseButton13
		{
			[Token(Token = "0x6002A51")]
			[Address(RVA = "0x141495C", Offset = "0x141495C", VA = "0x141495C", Slot = "63")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000457")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.throttleBaseButton14
		{
			[Token(Token = "0x6002A52")]
			[Address(RVA = "0x14149AC", Offset = "0x14149AC", VA = "0x14149AC", Slot = "64")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000458")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.throttleBaseButton15
		{
			[Token(Token = "0x6002A53")]
			[Address(RVA = "0x14149FC", Offset = "0x14149FC", VA = "0x14149FC", Slot = "65")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000459")]
		private IControllerTemplateAxis Rewired.IHOTASTemplate.throttleSlider1
		{
			[Token(Token = "0x6002A54")]
			[Address(RVA = "0x1414A4C", Offset = "0x1414A4C", VA = "0x1414A4C", Slot = "66")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700045A")]
		private IControllerTemplateAxis Rewired.IHOTASTemplate.throttleSlider2
		{
			[Token(Token = "0x6002A55")]
			[Address(RVA = "0x1414A9C", Offset = "0x1414A9C", VA = "0x1414A9C", Slot = "67")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700045B")]
		private IControllerTemplateAxis Rewired.IHOTASTemplate.throttleSlider3
		{
			[Token(Token = "0x6002A56")]
			[Address(RVA = "0x1414AEC", Offset = "0x1414AEC", VA = "0x1414AEC", Slot = "68")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700045C")]
		private IControllerTemplateAxis Rewired.IHOTASTemplate.throttleSlider4
		{
			[Token(Token = "0x6002A57")]
			[Address(RVA = "0x1414B3C", Offset = "0x1414B3C", VA = "0x1414B3C", Slot = "69")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700045D")]
		private IControllerTemplateAxis Rewired.IHOTASTemplate.throttleDial1
		{
			[Token(Token = "0x6002A58")]
			[Address(RVA = "0x1414B8C", Offset = "0x1414B8C", VA = "0x1414B8C", Slot = "70")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700045E")]
		private IControllerTemplateAxis Rewired.IHOTASTemplate.throttleDial2
		{
			[Token(Token = "0x6002A59")]
			[Address(RVA = "0x1414BDC", Offset = "0x1414BDC", VA = "0x1414BDC", Slot = "71")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700045F")]
		private IControllerTemplateAxis Rewired.IHOTASTemplate.throttleDial3
		{
			[Token(Token = "0x6002A5A")]
			[Address(RVA = "0x1414C2C", Offset = "0x1414C2C", VA = "0x1414C2C", Slot = "72")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000460")]
		private IControllerTemplateAxis Rewired.IHOTASTemplate.throttleDial4
		{
			[Token(Token = "0x6002A5B")]
			[Address(RVA = "0x1414C7C", Offset = "0x1414C7C", VA = "0x1414C7C", Slot = "73")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000461")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.throttleWheel1Forward
		{
			[Token(Token = "0x6002A5C")]
			[Address(RVA = "0x1414CCC", Offset = "0x1414CCC", VA = "0x1414CCC", Slot = "74")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000462")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.throttleWheel1Back
		{
			[Token(Token = "0x6002A5D")]
			[Address(RVA = "0x1414D1C", Offset = "0x1414D1C", VA = "0x1414D1C", Slot = "75")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000463")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.throttleWheel1Press
		{
			[Token(Token = "0x6002A5E")]
			[Address(RVA = "0x1414D6C", Offset = "0x1414D6C", VA = "0x1414D6C", Slot = "76")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000464")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.throttleWheel2Forward
		{
			[Token(Token = "0x6002A5F")]
			[Address(RVA = "0x1414DBC", Offset = "0x1414DBC", VA = "0x1414DBC", Slot = "77")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000465")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.throttleWheel2Back
		{
			[Token(Token = "0x6002A60")]
			[Address(RVA = "0x1414E0C", Offset = "0x1414E0C", VA = "0x1414E0C", Slot = "78")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000466")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.throttleWheel2Press
		{
			[Token(Token = "0x6002A61")]
			[Address(RVA = "0x1414E5C", Offset = "0x1414E5C", VA = "0x1414E5C", Slot = "79")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000467")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.throttleWheel3Forward
		{
			[Token(Token = "0x6002A62")]
			[Address(RVA = "0x1414EAC", Offset = "0x1414EAC", VA = "0x1414EAC", Slot = "80")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000468")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.throttleWheel3Back
		{
			[Token(Token = "0x6002A63")]
			[Address(RVA = "0x1414EFC", Offset = "0x1414EFC", VA = "0x1414EFC", Slot = "81")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000469")]
		private IControllerTemplateButton Rewired.IHOTASTemplate.throttleWheel3Press
		{
			[Token(Token = "0x6002A64")]
			[Address(RVA = "0x1414F4C", Offset = "0x1414F4C", VA = "0x1414F4C", Slot = "82")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700046A")]
		private IControllerTemplateAxis Rewired.IHOTASTemplate.leftPedal
		{
			[Token(Token = "0x6002A65")]
			[Address(RVA = "0x1414F9C", Offset = "0x1414F9C", VA = "0x1414F9C", Slot = "83")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700046B")]
		private IControllerTemplateAxis Rewired.IHOTASTemplate.rightPedal
		{
			[Token(Token = "0x6002A66")]
			[Address(RVA = "0x1414FEC", Offset = "0x1414FEC", VA = "0x1414FEC", Slot = "84")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700046C")]
		private IControllerTemplateAxis Rewired.IHOTASTemplate.slidePedals
		{
			[Token(Token = "0x6002A67")]
			[Address(RVA = "0x141503C", Offset = "0x141503C", VA = "0x141503C", Slot = "85")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700046D")]
		private IControllerTemplateStick Rewired.IHOTASTemplate.stick
		{
			[Token(Token = "0x6002A68")]
			[Address(RVA = "0x141508C", Offset = "0x141508C", VA = "0x141508C", Slot = "86")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700046E")]
		private IControllerTemplateThumbStick Rewired.IHOTASTemplate.stickMiniStick1
		{
			[Token(Token = "0x6002A69")]
			[Address(RVA = "0x14150DC", Offset = "0x14150DC", VA = "0x14150DC", Slot = "87")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700046F")]
		private IControllerTemplateThumbStick Rewired.IHOTASTemplate.stickMiniStick2
		{
			[Token(Token = "0x6002A6A")]
			[Address(RVA = "0x141512C", Offset = "0x141512C", VA = "0x141512C", Slot = "88")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000470")]
		private IControllerTemplateHat Rewired.IHOTASTemplate.stickHat1
		{
			[Token(Token = "0x6002A6B")]
			[Address(RVA = "0x141517C", Offset = "0x141517C", VA = "0x141517C", Slot = "89")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000471")]
		private IControllerTemplateHat Rewired.IHOTASTemplate.stickHat2
		{
			[Token(Token = "0x6002A6C")]
			[Address(RVA = "0x14151CC", Offset = "0x14151CC", VA = "0x14151CC", Slot = "90")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000472")]
		private IControllerTemplateHat Rewired.IHOTASTemplate.stickHat3
		{
			[Token(Token = "0x6002A6D")]
			[Address(RVA = "0x141521C", Offset = "0x141521C", VA = "0x141521C", Slot = "91")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000473")]
		private IControllerTemplateHat Rewired.IHOTASTemplate.stickHat4
		{
			[Token(Token = "0x6002A6E")]
			[Address(RVA = "0x141526C", Offset = "0x141526C", VA = "0x141526C", Slot = "92")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000474")]
		private IControllerTemplateThrottle Rewired.IHOTASTemplate.throttle1
		{
			[Token(Token = "0x6002A6F")]
			[Address(RVA = "0x14152BC", Offset = "0x14152BC", VA = "0x14152BC", Slot = "93")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000475")]
		private IControllerTemplateThrottle Rewired.IHOTASTemplate.throttle2
		{
			[Token(Token = "0x6002A70")]
			[Address(RVA = "0x141530C", Offset = "0x141530C", VA = "0x141530C", Slot = "94")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000476")]
		private IControllerTemplateThumbStick Rewired.IHOTASTemplate.throttleMiniStick
		{
			[Token(Token = "0x6002A71")]
			[Address(RVA = "0x141535C", Offset = "0x141535C", VA = "0x141535C", Slot = "95")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000477")]
		private IControllerTemplateHat Rewired.IHOTASTemplate.throttleHat1
		{
			[Token(Token = "0x6002A72")]
			[Address(RVA = "0x14153AC", Offset = "0x14153AC", VA = "0x14153AC", Slot = "96")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000478")]
		private IControllerTemplateHat Rewired.IHOTASTemplate.throttleHat2
		{
			[Token(Token = "0x6002A73")]
			[Address(RVA = "0x14153FC", Offset = "0x14153FC", VA = "0x14153FC", Slot = "97")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000479")]
		private IControllerTemplateHat Rewired.IHOTASTemplate.throttleHat3
		{
			[Token(Token = "0x6002A74")]
			[Address(RVA = "0x141544C", Offset = "0x141544C", VA = "0x141544C", Slot = "98")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700047A")]
		private IControllerTemplateHat Rewired.IHOTASTemplate.throttleHat4
		{
			[Token(Token = "0x6002A75")]
			[Address(RVA = "0x141549C", Offset = "0x141549C", VA = "0x141549C", Slot = "99")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A76")]
		[Address(RVA = "0x14154EC", Offset = "0x14154EC", VA = "0x14154EC")]
		public HOTASTemplate(object payload)
		{
		}
	}
	[Token(Token = "0x20005E8")]
	public sealed class FlightYokeTemplate : ControllerTemplate, IFlightYokeTemplate, IControllerTemplate
	{
		[Token(Token = "0x40028A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Guid typeGuid;

		[Token(Token = "0x40028A2")]
		public const int elementId_rotateYoke = 0;

		[Token(Token = "0x40028A3")]
		public const int elementId_yokeZ = 1;

		[Token(Token = "0x40028A4")]
		public const int elementId_leftPaddle = 59;

		[Token(Token = "0x40028A5")]
		public const int elementId_rightPaddle = 60;

		[Token(Token = "0x40028A6")]
		public const int elementId_lever1Axis = 2;

		[Token(Token = "0x40028A7")]
		public const int elementId_lever1MinDetent = 64;

		[Token(Token = "0x40028A8")]
		public const int elementId_lever2Axis = 3;

		[Token(Token = "0x40028A9")]
		public const int elementId_lever2MinDetent = 65;

		[Token(Token = "0x40028AA")]
		public const int elementId_lever3Axis = 4;

		[Token(Token = "0x40028AB")]
		public const int elementId_lever3MinDetent = 66;

		[Token(Token = "0x40028AC")]
		public const int elementId_lever4Axis = 5;

		[Token(Token = "0x40028AD")]
		public const int elementId_lever4MinDetent = 67;

		[Token(Token = "0x40028AE")]
		public const int elementId_lever5Axis = 6;

		[Token(Token = "0x40028AF")]
		public const int elementId_lever5MinDetent = 68;

		[Token(Token = "0x40028B0")]
		public const int elementId_leftGripButton1 = 7;

		[Token(Token = "0x40028B1")]
		public const int elementId_leftGripButton2 = 8;

		[Token(Token = "0x40028B2")]
		public const int elementId_leftGripButton3 = 9;

		[Token(Token = "0x40028B3")]
		public const int elementId_leftGripButton4 = 10;

		[Token(Token = "0x40028B4")]
		public const int elementId_leftGripButton5 = 11;

		[Token(Token = "0x40028B5")]
		public const int elementId_leftGripButton6 = 12;

		[Token(Token = "0x40028B6")]
		public const int elementId_rightGripButton1 = 13;

		[Token(Token = "0x40028B7")]
		public const int elementId_rightGripButton2 = 14;

		[Token(Token = "0x40028B8")]
		public const int elementId_rightGripButton3 = 15;

		[Token(Token = "0x40028B9")]
		public const int elementId_rightGripButton4 = 16;

		[Token(Token = "0x40028BA")]
		public const int elementId_rightGripButton5 = 17;

		[Token(Token = "0x40028BB")]
		public const int elementId_rightGripButton6 = 18;

		[Token(Token = "0x40028BC")]
		public const int elementId_centerButton1 = 19;

		[Token(Token = "0x40028BD")]
		public const int elementId_centerButton2 = 20;

		[Token(Token = "0x40028BE")]
		public const int elementId_centerButton3 = 21;

		[Token(Token = "0x40028BF")]
		public const int elementId_centerButton4 = 22;

		[Token(Token = "0x40028C0")]
		public const int elementId_centerButton5 = 23;

		[Token(Token = "0x40028C1")]
		public const int elementId_centerButton6 = 24;

		[Token(Token = "0x40028C2")]
		public const int elementId_centerButton7 = 25;

		[Token(Token = "0x40028C3")]
		public const int elementId_centerButton8 = 26;

		[Token(Token = "0x40028C4")]
		public const int elementId_wheel1Up = 53;

		[Token(Token = "0x40028C5")]
		public const int elementId_wheel1Down = 54;

		[Token(Token = "0x40028C6")]
		public const int elementId_wheel1Press = 55;

		[Token(Token = "0x40028C7")]
		public const int elementId_wheel2Up = 56;

		[Token(Token = "0x40028C8")]
		public const int elementId_wheel2Down = 57;

		[Token(Token = "0x40028C9")]
		public const int elementId_wheel2Press = 58;

		[Token(Token = "0x40028CA")]
		public const int elementId_leftGripHatUp = 27;

		[Token(Token = "0x40028CB")]
		public const int elementId_leftGripHatUpRight = 28;

		[Token(Token = "0x40028CC")]
		public const int elementId_leftGripHatRight = 29;

		[Token(Token = "0x40028CD")]
		public const int elementId_leftGripHatDownRight = 30;

		[Token(Token = "0x40028CE")]
		public const int elementId_leftGripHatDown = 31;

		[Token(Token = "0x40028CF")]
		public const int elementId_leftGripHatDownLeft = 32;

		[Token(Token = "0x40028D0")]
		public const int elementId_leftGripHatLeft = 33;

		[Token(Token = "0x40028D1")]
		public const int elementId_leftGripHatUpLeft = 34;

		[Token(Token = "0x40028D2")]
		public const int elementId_rightGripHatUp = 35;

		[Token(Token = "0x40028D3")]
		public const int elementId_rightGripHatUpRight = 36;

		[Token(Token = "0x40028D4")]
		public const int elementId_rightGripHatRight = 37;

		[Token(Token = "0x40028D5")]
		public const int elementId_rightGripHatDownRight = 38;

		[Token(Token = "0x40028D6")]
		public const int elementId_rightGripHatDown = 39;

		[Token(Token = "0x40028D7")]
		public const int elementId_rightGripHatDownLeft = 40;

		[Token(Token = "0x40028D8")]
		public const int elementId_rightGripHatLeft = 41;

		[Token(Token = "0x40028D9")]
		public const int elementId_rightGripHatUpLeft = 42;

		[Token(Token = "0x40028DA")]
		public const int elementId_consoleButton1 = 43;

		[Token(Token = "0x40028DB")]
		public const int elementId_consoleButton2 = 44;

		[Token(Token = "0x40028DC")]
		public const int elementId_consoleButton3 = 45;

		[Token(Token = "0x40028DD")]
		public const int elementId_consoleButton4 = 46;

		[Token(Token = "0x40028DE")]
		public const int elementId_consoleButton5 = 47;

		[Token(Token = "0x40028DF")]
		public const int elementId_consoleButton6 = 48;

		[Token(Token = "0x40028E0")]
		public const int elementId_consoleButton7 = 49;

		[Token(Token = "0x40028E1")]
		public const int elementId_consoleButton8 = 50;

		[Token(Token = "0x40028E2")]
		public const int elementId_consoleButton9 = 51;

		[Token(Token = "0x40028E3")]
		public const int elementId_consoleButton10 = 52;

		[Token(Token = "0x40028E4")]
		public const int elementId_mode1 = 61;

		[Token(Token = "0x40028E5")]
		public const int elementId_mode2 = 62;

		[Token(Token = "0x40028E6")]
		public const int elementId_mode3 = 63;

		[Token(Token = "0x40028E7")]
		public const int elementId_yoke = 69;

		[Token(Token = "0x40028E8")]
		public const int elementId_lever1 = 70;

		[Token(Token = "0x40028E9")]
		public const int elementId_lever2 = 71;

		[Token(Token = "0x40028EA")]
		public const int elementId_lever3 = 72;

		[Token(Token = "0x40028EB")]
		public const int elementId_lever4 = 73;

		[Token(Token = "0x40028EC")]
		public const int elementId_lever5 = 74;

		[Token(Token = "0x40028ED")]
		public const int elementId_leftGripHat = 75;

		[Token(Token = "0x40028EE")]
		public const int elementId_rightGripHat = 76;

		[Token(Token = "0x1700047B")]
		private IControllerTemplateButton Rewired.IFlightYokeTemplate.leftPaddle
		{
			[Token(Token = "0x6002A78")]
			[Address(RVA = "0x130A7EC", Offset = "0x130A7EC", VA = "0x130A7EC", Slot = "12")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700047C")]
		private IControllerTemplateButton Rewired.IFlightYokeTemplate.rightPaddle
		{
			[Token(Token = "0x6002A79")]
			[Address(RVA = "0x130A83C", Offset = "0x130A83C", VA = "0x130A83C", Slot = "13")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700047D")]
		private IControllerTemplateButton Rewired.IFlightYokeTemplate.leftGripButton1
		{
			[Token(Token = "0x6002A7A")]
			[Address(RVA = "0x130A88C", Offset = "0x130A88C", VA = "0x130A88C", Slot = "14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700047E")]
		private IControllerTemplateButton Rewired.IFlightYokeTemplate.leftGripButton2
		{
			[Token(Token = "0x6002A7B")]
			[Address(RVA = "0x130A8DC", Offset = "0x130A8DC", VA = "0x130A8DC", Slot = "15")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700047F")]
		private IControllerTemplateButton Rewired.IFlightYokeTemplate.leftGripButton3
		{
			[Token(Token = "0x6002A7C")]
			[Address(RVA = "0x130A92C", Offset = "0x130A92C", VA = "0x130A92C", Slot = "16")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000480")]
		private IControllerTemplateButton Rewired.IFlightYokeTemplate.leftGripButton4
		{
			[Token(Token = "0x6002A7D")]
			[Address(RVA = "0x130A97C", Offset = "0x130A97C", VA = "0x130A97C", Slot = "17")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000481")]
		private IControllerTemplateButton Rewired.IFlightYokeTemplate.leftGripButton5
		{
			[Token(Token = "0x6002A7E")]
			[Address(RVA = "0x130A9CC", Offset = "0x130A9CC", VA = "0x130A9CC", Slot = "18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000482")]
		private IControllerTemplateButton Rewired.IFlightYokeTemplate.leftGripButton6
		{
			[Token(Token = "0x6002A7F")]
			[Address(RVA = "0x130AA1C", Offset = "0x130AA1C", VA = "0x130AA1C", Slot = "19")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000483")]
		private IControllerTemplateButton Rewired.IFlightYokeTemplate.rightGripButton1
		{
			[Token(Token = "0x6002A80")]
			[Address(RVA = "0x130AA6C", Offset = "0x130AA6C", VA = "0x130AA6C", Slot = "20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000484")]
		private IControllerTemplateButton Rewired.IFlightYokeTemplate.rightGripButton2
		{
			[Token(Token = "0x6002A81")]
			[Address(RVA = "0x130AABC", Offset = "0x130AABC", VA = "0x130AABC", Slot = "21")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000485")]
		private IControllerTemplateButton Rewired.IFlightYokeTemplate.rightGripButton3
		{
			[Token(Token = "0x6002A82")]
			[Address(RVA = "0x130AB0C", Offset = "0x130AB0C", VA = "0x130AB0C", Slot = "22")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000486")]
		private IControllerTemplateButton Rewired.IFlightYokeTemplate.rightGripButton4
		{
			[Token(Token = "0x6002A83")]
			[Address(RVA = "0x130AB5C", Offset = "0x130AB5C", VA = "0x130AB5C", Slot = "23")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000487")]
		private IControllerTemplateButton Rewired.IFlightYokeTemplate.rightGripButton5
		{
			[Token(Token = "0x6002A84")]
			[Address(RVA = "0x130ABAC", Offset = "0x130ABAC", VA = "0x130ABAC", Slot = "24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000488")]
		private IControllerTemplateButton Rewired.IFlightYokeTemplate.rightGripButton6
		{
			[Token(Token = "0x6002A85")]
			[Address(RVA = "0x130ABFC", Offset = "0x130ABFC", VA = "0x130ABFC", Slot = "25")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000489")]
		private IControllerTemplateButton Rewired.IFlightYokeTemplate.centerButton1
		{
			[Token(Token = "0x6002A86")]
			[Address(RVA = "0x130AC4C", Offset = "0x130AC4C", VA = "0x130AC4C", Slot = "26")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700048A")]
		private IControllerTemplateButton Rewired.IFlightYokeTemplate.centerButton2
		{
			[Token(Token = "0x6002A87")]
			[Address(RVA = "0x130AC9C", Offset = "0x130AC9C", VA = "0x130AC9C", Slot = "27")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700048B")]
		private IControllerTemplateButton Rewired.IFlightYokeTemplate.centerButton3
		{
			[Token(Token = "0x6002A88")]
			[Address(RVA = "0x130ACEC", Offset = "0x130ACEC", VA = "0x130ACEC", Slot = "28")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700048C")]
		private IControllerTemplateButton Rewired.IFlightYokeTemplate.centerButton4
		{
			[Token(Token = "0x6002A89")]
			[Address(RVA = "0x130AD3C", Offset = "0x130AD3C", VA = "0x130AD3C", Slot = "29")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700048D")]
		private IControllerTemplateButton Rewired.IFlightYokeTemplate.centerButton5
		{
			[Token(Token = "0x6002A8A")]
			[Address(RVA = "0x130AD8C", Offset = "0x130AD8C", VA = "0x130AD8C", Slot = "30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700048E")]
		private IControllerTemplateButton Rewired.IFlightYokeTemplate.centerButton6
		{
			[Token(Token = "0x6002A8B")]
			[Address(RVA = "0x130ADDC", Offset = "0x130ADDC", VA = "0x130ADDC", Slot = "31")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700048F")]
		private IControllerTemplateButton Rewired.IFlightYokeTemplate.centerButton7
		{
			[Token(Token = "0x6002A8C")]
			[Address(RVA = "0x130AE2C", Offset = "0x130AE2C", VA = "0x130AE2C", Slot = "32")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000490")]
		private IControllerTemplateButton Rewired.IFlightYokeTemplate.centerButton8
		{
			[Token(Token = "0x6002A8D")]
			[Address(RVA = "0x130AE7C", Offset = "0x130AE7C", VA = "0x130AE7C", Slot = "33")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000491")]
		private IControllerTemplateButton Rewired.IFlightYokeTemplate.wheel1Up
		{
			[Token(Token = "0x6002A8E")]
			[Address(RVA = "0x130AECC", Offset = "0x130AECC", VA = "0x130AECC", Slot = "34")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000492")]
		private IControllerTemplateButton Rewired.IFlightYokeTemplate.wheel1Down
		{
			[Token(Token = "0x6002A8F")]
			[Address(RVA = "0x130AF1C", Offset = "0x130AF1C", VA = "0x130AF1C", Slot = "35")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000493")]
		private IControllerTemplateButton Rewired.IFlightYokeTemplate.wheel1Press
		{
			[Token(Token = "0x6002A90")]
			[Address(RVA = "0x130AF6C", Offset = "0x130AF6C", VA = "0x130AF6C", Slot = "36")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000494")]
		private IControllerTemplateButton Rewired.IFlightYokeTemplate.wheel2Up
		{
			[Token(Token = "0x6002A91")]
			[Address(RVA = "0x130AFBC", Offset = "0x130AFBC", VA = "0x130AFBC", Slot = "37")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000495")]
		private IControllerTemplateButton Rewired.IFlightYokeTemplate.wheel2Down
		{
			[Token(Token = "0x6002A92")]
			[Address(RVA = "0x130B00C", Offset = "0x130B00C", VA = "0x130B00C", Slot = "38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000496")]
		private IControllerTemplateButton Rewired.IFlightYokeTemplate.wheel2Press
		{
			[Token(Token = "0x6002A93")]
			[Address(RVA = "0x130B05C", Offset = "0x130B05C", VA = "0x130B05C", Slot = "39")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000497")]
		private IControllerTemplateButton Rewired.IFlightYokeTemplate.consoleButton1
		{
			[Token(Token = "0x6002A94")]
			[Address(RVA = "0x130B0AC", Offset = "0x130B0AC", VA = "0x130B0AC", Slot = "40")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000498")]
		private IControllerTemplateButton Rewired.IFlightYokeTemplate.consoleButton2
		{
			[Token(Token = "0x6002A95")]
			[Address(RVA = "0x130B0FC", Offset = "0x130B0FC", VA = "0x130B0FC", Slot = "41")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000499")]
		private IControllerTemplateButton Rewired.IFlightYokeTemplate.consoleButton3
		{
			[Token(Token = "0x6002A96")]
			[Address(RVA = "0x130B14C", Offset = "0x130B14C", VA = "0x130B14C", Slot = "42")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700049A")]
		private IControllerTemplateButton Rewired.IFlightYokeTemplate.consoleButton4
		{
			[Token(Token = "0x6002A97")]
			[Address(RVA = "0x130B19C", Offset = "0x130B19C", VA = "0x130B19C", Slot = "43")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700049B")]
		private IControllerTemplateButton Rewired.IFlightYokeTemplate.consoleButton5
		{
			[Token(Token = "0x6002A98")]
			[Address(RVA = "0x130B1EC", Offset = "0x130B1EC", VA = "0x130B1EC", Slot = "44")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700049C")]
		private IControllerTemplateButton Rewired.IFlightYokeTemplate.consoleButton6
		{
			[Token(Token = "0x6002A99")]
			[Address(RVA = "0x130B23C", Offset = "0x130B23C", VA = "0x130B23C", Slot = "45")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700049D")]
		private IControllerTemplateButton Rewired.IFlightYokeTemplate.consoleButton7
		{
			[Token(Token = "0x6002A9A")]
			[Address(RVA = "0x130B28C", Offset = "0x130B28C", VA = "0x130B28C", Slot = "46")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700049E")]
		private IControllerTemplateButton Rewired.IFlightYokeTemplate.consoleButton8
		{
			[Token(Token = "0x6002A9B")]
			[Address(RVA = "0x130B2DC", Offset = "0x130B2DC", VA = "0x130B2DC", Slot = "47")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700049F")]
		private IControllerTemplateButton Rewired.IFlightYokeTemplate.consoleButton9
		{
			[Token(Token = "0x6002A9C")]
			[Address(RVA = "0x130B32C", Offset = "0x130B32C", VA = "0x130B32C", Slot = "48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004A0")]
		private IControllerTemplateButton Rewired.IFlightYokeTemplate.consoleButton10
		{
			[Token(Token = "0x6002A9D")]
			[Address(RVA = "0x130B37C", Offset = "0x130B37C", VA = "0x130B37C", Slot = "49")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004A1")]
		private IControllerTemplateButton Rewired.IFlightYokeTemplate.mode1
		{
			[Token(Token = "0x6002A9E")]
			[Address(RVA = "0x130B3CC", Offset = "0x130B3CC", VA = "0x130B3CC", Slot = "50")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004A2")]
		private IControllerTemplateButton Rewired.IFlightYokeTemplate.mode2
		{
			[Token(Token = "0x6002A9F")]
			[Address(RVA = "0x130B41C", Offset = "0x130B41C", VA = "0x130B41C", Slot = "51")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004A3")]
		private IControllerTemplateButton Rewired.IFlightYokeTemplate.mode3
		{
			[Token(Token = "0x6002AA0")]
			[Address(RVA = "0x130B46C", Offset = "0x130B46C", VA = "0x130B46C", Slot = "52")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004A4")]
		private IControllerTemplateYoke Rewired.IFlightYokeTemplate.yoke
		{
			[Token(Token = "0x6002AA1")]
			[Address(RVA = "0x130B4BC", Offset = "0x130B4BC", VA = "0x130B4BC", Slot = "53")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004A5")]
		private IControllerTemplateThrottle Rewired.IFlightYokeTemplate.lever1
		{
			[Token(Token = "0x6002AA2")]
			[Address(RVA = "0x130B50C", Offset = "0x130B50C", VA = "0x130B50C", Slot = "54")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004A6")]
		private IControllerTemplateThrottle Rewired.IFlightYokeTemplate.lever2
		{
			[Token(Token = "0x6002AA3")]
			[Address(RVA = "0x130B55C", Offset = "0x130B55C", VA = "0x130B55C", Slot = "55")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004A7")]
		private IControllerTemplateThrottle Rewired.IFlightYokeTemplate.lever3
		{
			[Token(Token = "0x6002AA4")]
			[Address(RVA = "0x130B5AC", Offset = "0x130B5AC", VA = "0x130B5AC", Slot = "56")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004A8")]
		private IControllerTemplateThrottle Rewired.IFlightYokeTemplate.lever4
		{
			[Token(Token = "0x6002AA5")]
			[Address(RVA = "0x130B5FC", Offset = "0x130B5FC", VA = "0x130B5FC", Slot = "57")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004A9")]
		private IControllerTemplateThrottle Rewired.IFlightYokeTemplate.lever5
		{
			[Token(Token = "0x6002AA6")]
			[Address(RVA = "0x130B64C", Offset = "0x130B64C", VA = "0x130B64C", Slot = "58")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004AA")]
		private IControllerTemplateHat Rewired.IFlightYokeTemplate.leftGripHat
		{
			[Token(Token = "0x6002AA7")]
			[Address(RVA = "0x130B69C", Offset = "0x130B69C", VA = "0x130B69C", Slot = "59")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004AB")]
		private IControllerTemplateHat Rewired.IFlightYokeTemplate.rightGripHat
		{
			[Token(Token = "0x6002AA8")]
			[Address(RVA = "0x130B6EC", Offset = "0x130B6EC", VA = "0x130B6EC", Slot = "60")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002AA9")]
		[Address(RVA = "0x130B73C", Offset = "0x130B73C", VA = "0x130B73C")]
		public FlightYokeTemplate(object payload)
		{
		}
	}
	[Token(Token = "0x20005E9")]
	public sealed class FlightPedalsTemplate : ControllerTemplate, IFlightPedalsTemplate, IControllerTemplate
	{
		[Token(Token = "0x40028EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Guid typeGuid;

		[Token(Token = "0x40028F0")]
		public const int elementId_leftPedal = 0;

		[Token(Token = "0x40028F1")]
		public const int elementId_rightPedal = 1;

		[Token(Token = "0x40028F2")]
		public const int elementId_slide = 2;

		[Token(Token = "0x170004AC")]
		private IControllerTemplateAxis Rewired.IFlightPedalsTemplate.leftPedal
		{
			[Token(Token = "0x6002AAB")]
			[Address(RVA = "0x130A674", Offset = "0x130A674", VA = "0x130A674", Slot = "12")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004AD")]
		private IControllerTemplateAxis Rewired.IFlightPedalsTemplate.rightPedal
		{
			[Token(Token = "0x6002AAC")]
			[Address(RVA = "0x130A6C4", Offset = "0x130A6C4", VA = "0x130A6C4", Slot = "13")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004AE")]
		private IControllerTemplateAxis Rewired.IFlightPedalsTemplate.slide
		{
			[Token(Token = "0x6002AAD")]
			[Address(RVA = "0x130A714", Offset = "0x130A714", VA = "0x130A714", Slot = "14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002AAE")]
		[Address(RVA = "0x130A764", Offset = "0x130A764", VA = "0x130A764")]
		public FlightPedalsTemplate(object payload)
		{
		}
	}
	[Token(Token = "0x20005EA")]
	public sealed class SixDofControllerTemplate : ControllerTemplate, ISixDofControllerTemplate, IControllerTemplate
	{
		[Token(Token = "0x40028F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Guid typeGuid;

		[Token(Token = "0x40028F4")]
		public const int elementId_positionX = 1;

		[Token(Token = "0x40028F5")]
		public const int elementId_positionY = 2;

		[Token(Token = "0x40028F6")]
		public const int elementId_positionZ = 0;

		[Token(Token = "0x40028F7")]
		public const int elementId_rotationX = 3;

		[Token(Token = "0x40028F8")]
		public const int elementId_rotationY = 5;

		[Token(Token = "0x40028F9")]
		public const int elementId_rotationZ = 4;

		[Token(Token = "0x40028FA")]
		public const int elementId_throttle1Axis = 6;

		[Token(Token = "0x40028FB")]
		public const int elementId_throttle1MinDetent = 50;

		[Token(Token = "0x40028FC")]
		public const int elementId_throttle2Axis = 7;

		[Token(Token = "0x40028FD")]
		public const int elementId_throttle2MinDetent = 51;

		[Token(Token = "0x40028FE")]
		public const int elementId_extraAxis1 = 8;

		[Token(Token = "0x40028FF")]
		public const int elementId_extraAxis2 = 9;

		[Token(Token = "0x4002900")]
		public const int elementId_extraAxis3 = 10;

		[Token(Token = "0x4002901")]
		public const int elementId_extraAxis4 = 11;

		[Token(Token = "0x4002902")]
		public const int elementId_button1 = 12;

		[Token(Token = "0x4002903")]
		public const int elementId_button2 = 13;

		[Token(Token = "0x4002904")]
		public const int elementId_button3 = 14;

		[Token(Token = "0x4002905")]
		public const int elementId_button4 = 15;

		[Token(Token = "0x4002906")]
		public const int elementId_button5 = 16;

		[Token(Token = "0x4002907")]
		public const int elementId_button6 = 17;

		[Token(Token = "0x4002908")]
		public const int elementId_button7 = 18;

		[Token(Token = "0x4002909")]
		public const int elementId_button8 = 19;

		[Token(Token = "0x400290A")]
		public const int elementId_button9 = 20;

		[Token(Token = "0x400290B")]
		public const int elementId_button10 = 21;

		[Token(Token = "0x400290C")]
		public const int elementId_button11 = 22;

		[Token(Token = "0x400290D")]
		public const int elementId_button12 = 23;

		[Token(Token = "0x400290E")]
		public const int elementId_button13 = 24;

		[Token(Token = "0x400290F")]
		public const int elementId_button14 = 25;

		[Token(Token = "0x4002910")]
		public const int elementId_button15 = 26;

		[Token(Token = "0x4002911")]
		public const int elementId_button16 = 27;

		[Token(Token = "0x4002912")]
		public const int elementId_button17 = 28;

		[Token(Token = "0x4002913")]
		public const int elementId_button18 = 29;

		[Token(Token = "0x4002914")]
		public const int elementId_button19 = 30;

		[Token(Token = "0x4002915")]
		public const int elementId_button20 = 31;

		[Token(Token = "0x4002916")]
		public const int elementId_button21 = 55;

		[Token(Token = "0x4002917")]
		public const int elementId_button22 = 56;

		[Token(Token = "0x4002918")]
		public const int elementId_button23 = 57;

		[Token(Token = "0x4002919")]
		public const int elementId_button24 = 58;

		[Token(Token = "0x400291A")]
		public const int elementId_button25 = 59;

		[Token(Token = "0x400291B")]
		public const int elementId_button26 = 60;

		[Token(Token = "0x400291C")]
		public const int elementId_button27 = 61;

		[Token(Token = "0x400291D")]
		public const int elementId_button28 = 62;

		[Token(Token = "0x400291E")]
		public const int elementId_button29 = 63;

		[Token(Token = "0x400291F")]
		public const int elementId_button30 = 64;

		[Token(Token = "0x4002920")]
		public const int elementId_button31 = 65;

		[Token(Token = "0x4002921")]
		public const int elementId_button32 = 66;

		[Token(Token = "0x4002922")]
		public const int elementId_hat1Up = 32;

		[Token(Token = "0x4002923")]
		public const int elementId_hat1UpRight = 33;

		[Token(Token = "0x4002924")]
		public const int elementId_hat1Right = 34;

		[Token(Token = "0x4002925")]
		public const int elementId_hat1DownRight = 35;

		[Token(Token = "0x4002926")]
		public const int elementId_hat1Down = 36;

		[Token(Token = "0x4002927")]
		public const int elementId_hat1DownLeft = 37;

		[Token(Token = "0x4002928")]
		public const int elementId_hat1Left = 38;

		[Token(Token = "0x4002929")]
		public const int elementId_hat1UpLeft = 39;

		[Token(Token = "0x400292A")]
		public const int elementId_hat2Up = 40;

		[Token(Token = "0x400292B")]
		public const int elementId_hat2UpRight = 41;

		[Token(Token = "0x400292C")]
		public const int elementId_hat2Right = 42;

		[Token(Token = "0x400292D")]
		public const int elementId_hat2DownRight = 43;

		[Token(Token = "0x400292E")]
		public const int elementId_hat2Down = 44;

		[Token(Token = "0x400292F")]
		public const int elementId_hat2DownLeft = 45;

		[Token(Token = "0x4002930")]
		public const int elementId_hat2Left = 46;

		[Token(Token = "0x4002931")]
		public const int elementId_hat2UpLeft = 47;

		[Token(Token = "0x4002932")]
		public const int elementId_hat1 = 48;

		[Token(Token = "0x4002933")]
		public const int elementId_hat2 = 49;

		[Token(Token = "0x4002934")]
		public const int elementId_throttle1 = 52;

		[Token(Token = "0x4002935")]
		public const int elementId_throttle2 = 53;

		[Token(Token = "0x4002936")]
		public const int elementId_stick = 54;

		[Token(Token = "0x170004AF")]
		private IControllerTemplateAxis Rewired.ISixDofControllerTemplate.extraAxis1
		{
			[Token(Token = "0x6002AB0")]
			[Address(RVA = "0x10B68E0", Offset = "0x10B68E0", VA = "0x10B68E0", Slot = "12")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004B0")]
		private IControllerTemplateAxis Rewired.ISixDofControllerTemplate.extraAxis2
		{
			[Token(Token = "0x6002AB1")]
			[Address(RVA = "0x10B6930", Offset = "0x10B6930", VA = "0x10B6930", Slot = "13")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004B1")]
		private IControllerTemplateAxis Rewired.ISixDofControllerTemplate.extraAxis3
		{
			[Token(Token = "0x6002AB2")]
			[Address(RVA = "0x10B6980", Offset = "0x10B6980", VA = "0x10B6980", Slot = "14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004B2")]
		private IControllerTemplateAxis Rewired.ISixDofControllerTemplate.extraAxis4
		{
			[Token(Token = "0x6002AB3")]
			[Address(RVA = "0x10B69D0", Offset = "0x10B69D0", VA = "0x10B69D0", Slot = "15")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004B3")]
		private IControllerTemplateButton Rewired.ISixDofControllerTemplate.button1
		{
			[Token(Token = "0x6002AB4")]
			[Address(RVA = "0x10B6A20", Offset = "0x10B6A20", VA = "0x10B6A20", Slot = "16")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004B4")]
		private IControllerTemplateButton Rewired.ISixDofControllerTemplate.button2
		{
			[Token(Token = "0x6002AB5")]
			[Address(RVA = "0x10B6A70", Offset = "0x10B6A70", VA = "0x10B6A70", Slot = "17")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004B5")]
		private IControllerTemplateButton Rewired.ISixDofControllerTemplate.button3
		{
			[Token(Token = "0x6002AB6")]
			[Address(RVA = "0x10B6AC0", Offset = "0x10B6AC0", VA = "0x10B6AC0", Slot = "18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004B6")]
		private IControllerTemplateButton Rewired.ISixDofControllerTemplate.button4
		{
			[Token(Token = "0x6002AB7")]
			[Address(RVA = "0x10B6B10", Offset = "0x10B6B10", VA = "0x10B6B10", Slot = "19")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004B7")]
		private IControllerTemplateButton Rewired.ISixDofControllerTemplate.button5
		{
			[Token(Token = "0x6002AB8")]
			[Address(RVA = "0x10B6B60", Offset = "0x10B6B60", VA = "0x10B6B60", Slot = "20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004B8")]
		private IControllerTemplateButton Rewired.ISixDofControllerTemplate.button6
		{
			[Token(Token = "0x6002AB9")]
			[Address(RVA = "0x10B6BB0", Offset = "0x10B6BB0", VA = "0x10B6BB0", Slot = "21")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004B9")]
		private IControllerTemplateButton Rewired.ISixDofControllerTemplate.button7
		{
			[Token(Token = "0x6002ABA")]
			[Address(RVA = "0x10B6C00", Offset = "0x10B6C00", VA = "0x10B6C00", Slot = "22")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004BA")]
		private IControllerTemplateButton Rewired.ISixDofControllerTemplate.button8
		{
			[Token(Token = "0x6002ABB")]
			[Address(RVA = "0x10B6C50", Offset = "0x10B6C50", VA = "0x10B6C50", Slot = "23")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004BB")]
		private IControllerTemplateButton Rewired.ISixDofControllerTemplate.button9
		{
			[Token(Token = "0x6002ABC")]
			[Address(RVA = "0x10B6CA0", Offset = "0x10B6CA0", VA = "0x10B6CA0", Slot = "24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004BC")]
		private IControllerTemplateButton Rewired.ISixDofControllerTemplate.button10
		{
			[Token(Token = "0x6002ABD")]
			[Address(RVA = "0x10B6CF0", Offset = "0x10B6CF0", VA = "0x10B6CF0", Slot = "25")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004BD")]
		private IControllerTemplateButton Rewired.ISixDofControllerTemplate.button11
		{
			[Token(Token = "0x6002ABE")]
			[Address(RVA = "0x10B6D40", Offset = "0x10B6D40", VA = "0x10B6D40", Slot = "26")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004BE")]
		private IControllerTemplateButton Rewired.ISixDofControllerTemplate.button12
		{
			[Token(Token = "0x6002ABF")]
			[Address(RVA = "0x10B6D90", Offset = "0x10B6D90", VA = "0x10B6D90", Slot = "27")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004BF")]
		private IControllerTemplateButton Rewired.ISixDofControllerTemplate.button13
		{
			[Token(Token = "0x6002AC0")]
			[Address(RVA = "0x10B6DE0", Offset = "0x10B6DE0", VA = "0x10B6DE0", Slot = "28")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004C0")]
		private IControllerTemplateButton Rewired.ISixDofControllerTemplate.button14
		{
			[Token(Token = "0x6002AC1")]
			[Address(RVA = "0x10B6E30", Offset = "0x10B6E30", VA = "0x10B6E30", Slot = "29")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004C1")]
		private IControllerTemplateButton Rewired.ISixDofControllerTemplate.button15
		{
			[Token(Token = "0x6002AC2")]
			[Address(RVA = "0x10B6E80", Offset = "0x10B6E80", VA = "0x10B6E80", Slot = "30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004C2")]
		private IControllerTemplateButton Rewired.ISixDofControllerTemplate.button16
		{
			[Token(Token = "0x6002AC3")]
			[Address(RVA = "0x10B6ED0", Offset = "0x10B6ED0", VA = "0x10B6ED0", Slot = "31")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004C3")]
		private IControllerTemplateButton Rewired.ISixDofControllerTemplate.button17
		{
			[Token(Token = "0x6002AC4")]
			[Address(RVA = "0x10B6F20", Offset = "0x10B6F20", VA = "0x10B6F20", Slot = "32")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004C4")]
		private IControllerTemplateButton Rewired.ISixDofControllerTemplate.button18
		{
			[Token(Token = "0x6002AC5")]
			[Address(RVA = "0x10B6F70", Offset = "0x10B6F70", VA = "0x10B6F70", Slot = "33")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004C5")]
		private IControllerTemplateButton Rewired.ISixDofControllerTemplate.button19
		{
			[Token(Token = "0x6002AC6")]
			[Address(RVA = "0x10B6FC0", Offset = "0x10B6FC0", VA = "0x10B6FC0", Slot = "34")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004C6")]
		private IControllerTemplateButton Rewired.ISixDofControllerTemplate.button20
		{
			[Token(Token = "0x6002AC7")]
			[Address(RVA = "0x10B7010", Offset = "0x10B7010", VA = "0x10B7010", Slot = "35")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004C7")]
		private IControllerTemplateButton Rewired.ISixDofControllerTemplate.button21
		{
			[Token(Token = "0x6002AC8")]
			[Address(RVA = "0x10B7060", Offset = "0x10B7060", VA = "0x10B7060", Slot = "36")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004C8")]
		private IControllerTemplateButton Rewired.ISixDofControllerTemplate.button22
		{
			[Token(Token = "0x6002AC9")]
			[Address(RVA = "0x10B70B0", Offset = "0x10B70B0", VA = "0x10B70B0", Slot = "37")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004C9")]
		private IControllerTemplateButton Rewired.ISixDofControllerTemplate.button23
		{
			[Token(Token = "0x6002ACA")]
			[Address(RVA = "0x10B7100", Offset = "0x10B7100", VA = "0x10B7100", Slot = "38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004CA")]
		private IControllerTemplateButton Rewired.ISixDofControllerTemplate.button24
		{
			[Token(Token = "0x6002ACB")]
			[Address(RVA = "0x10B7150", Offset = "0x10B7150", VA = "0x10B7150", Slot = "39")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004CB")]
		private IControllerTemplateButton Rewired.ISixDofControllerTemplate.button25
		{
			[Token(Token = "0x6002ACC")]
			[Address(RVA = "0x10B71A0", Offset = "0x10B71A0", VA = "0x10B71A0", Slot = "40")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004CC")]
		private IControllerTemplateButton Rewired.ISixDofControllerTemplate.button26
		{
			[Token(Token = "0x6002ACD")]
			[Address(RVA = "0x10B71F0", Offset = "0x10B71F0", VA = "0x10B71F0", Slot = "41")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004CD")]
		private IControllerTemplateButton Rewired.ISixDofControllerTemplate.button27
		{
			[Token(Token = "0x6002ACE")]
			[Address(RVA = "0x10B7240", Offset = "0x10B7240", VA = "0x10B7240", Slot = "42")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004CE")]
		private IControllerTemplateButton Rewired.ISixDofControllerTemplate.button28
		{
			[Token(Token = "0x6002ACF")]
			[Address(RVA = "0x10B7290", Offset = "0x10B7290", VA = "0x10B7290", Slot = "43")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004CF")]
		private IControllerTemplateButton Rewired.ISixDofControllerTemplate.button29
		{
			[Token(Token = "0x6002AD0")]
			[Address(RVA = "0x10B72E0", Offset = "0x10B72E0", VA = "0x10B72E0", Slot = "44")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004D0")]
		private IControllerTemplateButton Rewired.ISixDofControllerTemplate.button30
		{
			[Token(Token = "0x6002AD1")]
			[Address(RVA = "0x10B7330", Offset = "0x10B7330", VA = "0x10B7330", Slot = "45")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004D1")]
		private IControllerTemplateButton Rewired.ISixDofControllerTemplate.button31
		{
			[Token(Token = "0x6002AD2")]
			[Address(RVA = "0x10B7380", Offset = "0x10B7380", VA = "0x10B7380", Slot = "46")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004D2")]
		private IControllerTemplateButton Rewired.ISixDofControllerTemplate.button32
		{
			[Token(Token = "0x6002AD3")]
			[Address(RVA = "0x10B73D0", Offset = "0x10B73D0", VA = "0x10B73D0", Slot = "47")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004D3")]
		private IControllerTemplateHat Rewired.ISixDofControllerTemplate.hat1
		{
			[Token(Token = "0x6002AD4")]
			[Address(RVA = "0x10B7420", Offset = "0x10B7420", VA = "0x10B7420", Slot = "48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004D4")]
		private IControllerTemplateHat Rewired.ISixDofControllerTemplate.hat2
		{
			[Token(Token = "0x6002AD5")]
			[Address(RVA = "0x10B7470", Offset = "0x10B7470", VA = "0x10B7470", Slot = "49")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004D5")]
		private IControllerTemplateThrottle Rewired.ISixDofControllerTemplate.throttle1
		{
			[Token(Token = "0x6002AD6")]
			[Address(RVA = "0x10B74C0", Offset = "0x10B74C0", VA = "0x10B74C0", Slot = "50")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004D6")]
		private IControllerTemplateThrottle Rewired.ISixDofControllerTemplate.throttle2
		{
			[Token(Token = "0x6002AD7")]
			[Address(RVA = "0x10B7510", Offset = "0x10B7510", VA = "0x10B7510", Slot = "51")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004D7")]
		private IControllerTemplateStick6D Rewired.ISixDofControllerTemplate.stick
		{
			[Token(Token = "0x6002AD8")]
			[Address(RVA = "0x10B7560", Offset = "0x10B7560", VA = "0x10B7560", Slot = "52")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002AD9")]
		[Address(RVA = "0x10B75B0", Offset = "0x10B75B0", VA = "0x10B75B0")]
		public SixDofControllerTemplate(object payload)
		{
		}
	}
	[Token(Token = "0x20005EB")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x919264", Offset = "0x919264")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x919264", Offset = "0x919264")]
	public sealed class InputManager : InputManager_Base
	{
		[Token(Token = "0x4002937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
		private bool ignoreRecompile;

		[Token(Token = "0x6002ADB")]
		[Address(RVA = "0x13ABBBC", Offset = "0x13ABBBC", VA = "0x13ABBBC", Slot = "4")]
		protected override void OnInitialized()
		{
		}

		[Token(Token = "0x6002ADC")]
		[Address(RVA = "0x13ABC84", Offset = "0x13ABC84", VA = "0x13ABC84", Slot = "5")]
		protected override void OnDeinitialized()
		{
		}

		[Token(Token = "0x6002ADD")]
		[Address(RVA = "0x13ABD44", Offset = "0x13ABD44", VA = "0x13ABD44", Slot = "6")]
		protected override void DetectPlatform()
		{
		}

		[Token(Token = "0x6002ADE")]
		[Address(RVA = "0x13ABF3C", Offset = "0x13ABF3C", VA = "0x13ABF3C", Slot = "7")]
		protected override void CheckRecompile()
		{
		}

		[Token(Token = "0x6002ADF")]
		[Address(RVA = "0x13ABF40", Offset = "0x13ABF40", VA = "0x13ABF40", Slot = "8")]
		protected override IExternalTools GetExternalTools()
		{
			return null;
		}

		[Token(Token = "0x6002AE0")]
		[Address(RVA = "0x13ABE7C", Offset = "0x13ABE7C", VA = "0x13ABE7C")]
		private bool CheckDeviceName(string searchPattern, string deviceName, string deviceModel)
		{
			return default(bool);
		}

		[Token(Token = "0x6002AE1")]
		[Address(RVA = "0x13ABBC0", Offset = "0x13ABBC0", VA = "0x13ABBC0")]
		private void SubscribeEvents()
		{
		}

		[Token(Token = "0x6002AE2")]
		[Address(RVA = "0x13ABC88", Offset = "0x13ABC88", VA = "0x13ABC88")]
		private void UnsubscribeEvents()
		{
		}

		[Token(Token = "0x6002AE3")]
		[Address(RVA = "0x13ABF98", Offset = "0x13ABF98", VA = "0x13ABF98")]
		private void OnSceneLoaded(Scene scene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x6002AE4")]
		[Address(RVA = "0x13ABFA0", Offset = "0x13ABFA0", VA = "0x13ABFA0")]
		public InputManager()
		{
		}
	}
}
namespace Rewired.Utils
{
	[Token(Token = "0x20005EC")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x9192B4", Offset = "0x9192B4")]
	public class ExternalTools : IExternalTools
	{
		[Token(Token = "0x4002938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Func<object> _getPlatformInitializerDelegate;

		[Token(Token = "0x4002939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool _isEditorPaused;

		[Token(Token = "0x400293A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Action<bool> _EditorPausedStateChangedEvent;

		[Token(Token = "0x400293C")]
		private const int API_LEVEL_HONEYCOMB = 9;

		[Token(Token = "0x400293D")]
		private const int API_LEVEL_KITKAT = 19;

		[Token(Token = "0x170004D8")]
		public static Func<object> getPlatformInitializerDelegate
		{
			[Token(Token = "0x6002AE5")]
			[Address(RVA = "0x12FA3A8", Offset = "0x12FA3A8", VA = "0x12FA3A8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002AE6")]
			[Address(RVA = "0x12FA3F4", Offset = "0x12FA3F4", VA = "0x12FA3F4")]
			set
			{
			}
		}

		[Token(Token = "0x170004D9")]
		public bool isEditorPaused
		{
			[Token(Token = "0x6002AE9")]
			[Address(RVA = "0x12FA450", Offset = "0x12FA450", VA = "0x12FA450", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004DA")]
		public bool UnityInput_IsTouchPressureSupported
		{
			[Token(Token = "0x6002B35")]
			[Address(RVA = "0x12FB650", Offset = "0x12FB650", VA = "0x12FB650", Slot = "81")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1400000E")]
		public event Action<bool> EditorPausedStateChangedEvent
		{
			[Token(Token = "0x6002AEA")]
			[Address(RVA = "0x12FA458", Offset = "0x12FA458", VA = "0x12FA458", Slot = "5")]
			add
			{
			}
			[Token(Token = "0x6002AEB")]
			[Address(RVA = "0x12FA4D4", Offset = "0x12FA4D4", VA = "0x12FA4D4", Slot = "6")]
			remove
			{
			}
		}

		[Token(Token = "0x1400000F")]
		public event Action<uint, bool> XboxOneInput_OnGamepadStateChange
		{
			[Token(Token = "0x6002AF0")]
			[Address(RVA = "0x12FA5B4", Offset = "0x12FA5B4", VA = "0x12FA5B4", Slot = "14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x930008", Offset = "0x930008")]
			add
			{
			}
			[Token(Token = "0x6002AF1")]
			[Address(RVA = "0x12FA654", Offset = "0x12FA654", VA = "0x12FA654", Slot = "15")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x930018", Offset = "0x930018")]
			remove
			{
			}
		}

		[Token(Token = "0x6002AE7")]
		[Address(RVA = "0x12FA444", Offset = "0x12FA444", VA = "0x12FA444")]
		public ExternalTools()
		{
		}

		[Token(Token = "0x6002AE8")]
		[Address(RVA = "0x12FA44C", Offset = "0x12FA44C", VA = "0x12FA44C", Slot = "7")]
		public void Destroy()
		{
		}

		[Token(Token = "0x6002AEC")]
		[Address(RVA = "0x12FA550", Offset = "0x12FA550", VA = "0x12FA550", Slot = "8")]
		public object GetPlatformInitializer()
		{
			return null;
		}

		[Token(Token = "0x6002AED")]
		[Address(RVA = "0x12FA558", Offset = "0x12FA558", VA = "0x12FA558", Slot = "9")]
		public string GetFocusedEditorWindowTitle()
		{
			return null;
		}

		[Token(Token = "0x6002AEE")]
		[Address(RVA = "0x12FA5A4", Offset = "0x12FA5A4", VA = "0x12FA5A4", Slot = "10")]
		public bool IsEditorSceneViewFocused()
		{
			return default(bool);
		}

		[Token(Token = "0x6002AEF")]
		[Address(RVA = "0x12FA5AC", Offset = "0x12FA5AC", VA = "0x12FA5AC", Slot = "11")]
		public bool LinuxInput_IsJoystickPreconfigured(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6002AF2")]
		[Address(RVA = "0x12FA6F4", Offset = "0x12FA6F4", VA = "0x12FA6F4", Slot = "12")]
		public int XboxOneInput_GetUserIdForGamepad(uint id)
		{
			return default(int);
		}

		[Token(Token = "0x6002AF3")]
		[Address(RVA = "0x12FA6FC", Offset = "0x12FA6FC", VA = "0x12FA6FC", Slot = "13")]
		public ulong XboxOneInput_GetControllerId(uint unityJoystickId)
		{
			return default(ulong);
		}

		[Token(Token = "0x6002AF4")]
		[Address(RVA = "0x12FA704", Offset = "0x12FA704", VA = "0x12FA704", Slot = "16")]
		public bool XboxOneInput_IsGamepadActive(uint unityJoystickId)
		{
			return default(bool);
		}

		[Token(Token = "0x6002AF5")]
		[Address(RVA = "0x12FA70C", Offset = "0x12FA70C", VA = "0x12FA70C", Slot = "17")]
		public string XboxOneInput_GetControllerType(ulong xboxControllerId)
		{
			return null;
		}

		[Token(Token = "0x6002AF6")]
		[Address(RVA = "0x12FA758", Offset = "0x12FA758", VA = "0x12FA758", Slot = "18")]
		public uint XboxOneInput_GetJoystickId(ulong xboxControllerId)
		{
			return default(uint);
		}

		[Token(Token = "0x6002AF7")]
		[Address(RVA = "0x12FA760", Offset = "0x12FA760", VA = "0x12FA760", Slot = "19")]
		public void XboxOne_Gamepad_UpdatePlugin()
		{
		}

		[Token(Token = "0x6002AF8")]
		[Address(RVA = "0x12FA764", Offset = "0x12FA764", VA = "0x12FA764", Slot = "20")]
		public bool XboxOne_Gamepad_SetGamepadVibration(ulong xboxOneJoystickId, float leftMotor, float rightMotor, float leftTriggerLevel, float rightTriggerLevel)
		{
			return default(bool);
		}

		[Token(Token = "0x6002AF9")]
		[Address(RVA = "0x12FA76C", Offset = "0x12FA76C", VA = "0x12FA76C", Slot = "21")]
		public void XboxOne_Gamepad_PulseVibrateMotor(ulong xboxOneJoystickId, int motorInt, float startLevel, float endLevel, ulong durationMS)
		{
		}

		[Token(Token = "0x6002AFA")]
		[Address(RVA = "0x12FA770", Offset = "0x12FA770", VA = "0x12FA770", Slot = "22")]
		public Vector3 PS4Input_GetLastAcceleration(int id)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002AFB")]
		[Address(RVA = "0x12FA778", Offset = "0x12FA778", VA = "0x12FA778", Slot = "23")]
		public Vector3 PS4Input_GetLastGyro(int id)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002AFC")]
		[Address(RVA = "0x12FA780", Offset = "0x12FA780", VA = "0x12FA780", Slot = "24")]
		public Vector4 PS4Input_GetLastOrientation(int id)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6002AFD")]
		[Address(RVA = "0x12FA788", Offset = "0x12FA788", VA = "0x12FA788", Slot = "25")]
		public void PS4Input_GetLastTouchData(int id, out int touchNum, out int touch0x, out int touch0y, out int touch0id, out int touch1x, out int touch1y, out int touch1id)
		{
		}

		[Token(Token = "0x6002AFE")]
		[Address(RVA = "0x12FA7AC", Offset = "0x12FA7AC", VA = "0x12FA7AC", Slot = "26")]
		public void PS4Input_GetPadControllerInformation(int id, out float touchpixelDensity, out int touchResolutionX, out int touchResolutionY, out int analogDeadZoneLeft, out int analogDeadZoneright, out int connectionType)
		{
		}

		[Token(Token = "0x6002AFF")]
		[Address(RVA = "0x12FA7C8", Offset = "0x12FA7C8", VA = "0x12FA7C8", Slot = "27")]
		public void PS4Input_PadSetMotionSensorState(int id, bool bEnable)
		{
		}

		[Token(Token = "0x6002B00")]
		[Address(RVA = "0x12FA7CC", Offset = "0x12FA7CC", VA = "0x12FA7CC", Slot = "28")]
		public void PS4Input_PadSetTiltCorrectionState(int id, bool bEnable)
		{
		}

		[Token(Token = "0x6002B01")]
		[Address(RVA = "0x12FA7D0", Offset = "0x12FA7D0", VA = "0x12FA7D0", Slot = "29")]
		public void PS4Input_PadSetAngularVelocityDeadbandState(int id, bool bEnable)
		{
		}

		[Token(Token = "0x6002B02")]
		[Address(RVA = "0x12FA7D4", Offset = "0x12FA7D4", VA = "0x12FA7D4", Slot = "30")]
		public void PS4Input_PadSetLightBar(int id, int red, int green, int blue)
		{
		}

		[Token(Token = "0x6002B03")]
		[Address(RVA = "0x12FA7D8", Offset = "0x12FA7D8", VA = "0x12FA7D8", Slot = "31")]
		public void PS4Input_PadResetLightBar(int id)
		{
		}

		[Token(Token = "0x6002B04")]
		[Address(RVA = "0x12FA7DC", Offset = "0x12FA7DC", VA = "0x12FA7DC", Slot = "32")]
		public void PS4Input_PadSetVibration(int id, int largeMotor, int smallMotor)
		{
		}

		[Token(Token = "0x6002B05")]
		[Address(RVA = "0x12FA7E0", Offset = "0x12FA7E0", VA = "0x12FA7E0", Slot = "33")]
		public void PS4Input_PadResetOrientation(int id)
		{
		}

		[Token(Token = "0x6002B06")]
		[Address(RVA = "0x12FA7E4", Offset = "0x12FA7E4", VA = "0x12FA7E4", Slot = "34")]
		public bool PS4Input_PadIsConnected(int id)
		{
			return default(bool);
		}

		[Token(Token = "0x6002B07")]
		[Address(RVA = "0x12FA7EC", Offset = "0x12FA7EC", VA = "0x12FA7EC", Slot = "35")]
		public void PS4Input_GetUsersDetails(int slot, object loggedInUser)
		{
		}

		[Token(Token = "0x6002B08")]
		[Address(RVA = "0x12FA7F0", Offset = "0x12FA7F0", VA = "0x12FA7F0", Slot = "36")]
		public int PS4Input_GetDeviceClassForHandle(int handle)
		{
			return default(int);
		}

		[Token(Token = "0x6002B09")]
		[Address(RVA = "0x12FA7F8", Offset = "0x12FA7F8", VA = "0x12FA7F8", Slot = "37")]
		public string PS4Input_GetDeviceClassString(int intValue)
		{
			return null;
		}

		[Token(Token = "0x6002B0A")]
		[Address(RVA = "0x12FA800", Offset = "0x12FA800", VA = "0x12FA800", Slot = "38")]
		public int PS4Input_PadGetUsersHandles2(int maxControllers, int[] handles)
		{
			return default(int);
		}

		[Token(Token = "0x6002B0B")]
		[Address(RVA = "0x12FA808", Offset = "0x12FA808", VA = "0x12FA808", Slot = "39")]
		public void PS4Input_GetSpecialControllerInformation(int id, int padIndex, object controllerInformation)
		{
		}

		[Token(Token = "0x6002B0C")]
		[Address(RVA = "0x12FA80C", Offset = "0x12FA80C", VA = "0x12FA80C", Slot = "40")]
		public Vector3 PS4Input_SpecialGetLastAcceleration(int id)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002B0D")]
		[Address(RVA = "0x12FA814", Offset = "0x12FA814", VA = "0x12FA814", Slot = "41")]
		public Vector3 PS4Input_SpecialGetLastGyro(int id)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002B0E")]
		[Address(RVA = "0x12FA81C", Offset = "0x12FA81C", VA = "0x12FA81C", Slot = "42")]
		public Vector4 PS4Input_SpecialGetLastOrientation(int id)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6002B0F")]
		[Address(RVA = "0x12FA824", Offset = "0x12FA824", VA = "0x12FA824", Slot = "43")]
		public int PS4Input_SpecialGetUsersHandles(int maxNumberControllers, int[] handles)
		{
			return default(int);
		}

		[Token(Token = "0x6002B10")]
		[Address(RVA = "0x12FA82C", Offset = "0x12FA82C", VA = "0x12FA82C", Slot = "44")]
		public int PS4Input_SpecialGetUsersHandles2(int maxNumberControllers, int[] handles)
		{
			return default(int);
		}

		[Token(Token = "0x6002B11")]
		[Address(RVA = "0x12FA834", Offset = "0x12FA834", VA = "0x12FA834", Slot = "45")]
		public bool PS4Input_SpecialIsConnected(int id)
		{
			return default(bool);
		}

		[Token(Token = "0x6002B12")]
		[Address(RVA = "0x12FA83C", Offset = "0x12FA83C", VA = "0x12FA83C", Slot = "46")]
		public void PS4Input_SpecialResetLightSphere(int id)
		{
		}

		[Token(Token = "0x6002B13")]
		[Address(RVA = "0x12FA840", Offset = "0x12FA840", VA = "0x12FA840", Slot = "47")]
		public void PS4Input_SpecialResetOrientation(int id)
		{
		}

		[Token(Token = "0x6002B14")]
		[Address(RVA = "0x12FA844", Offset = "0x12FA844", VA = "0x12FA844", Slot = "48")]
		public void PS4Input_SpecialSetAngularVelocityDeadbandState(int id, bool bEnable)
		{
		}

		[Token(Token = "0x6002B15")]
		[Address(RVA = "0x12FA848", Offset = "0x12FA848", VA = "0x12FA848", Slot = "49")]
		public void PS4Input_SpecialSetLightSphere(int id, int red, int green, int blue)
		{
		}

		[Token(Token = "0x6002B16")]
		[Address(RVA = "0x12FA84C", Offset = "0x12FA84C", VA = "0x12FA84C", Slot = "50")]
		public void PS4Input_SpecialSetMotionSensorState(int id, bool bEnable)
		{
		}

		[Token(Token = "0x6002B17")]
		[Address(RVA = "0x12FA850", Offset = "0x12FA850", VA = "0x12FA850", Slot = "51")]
		public void PS4Input_SpecialSetTiltCorrectionState(int id, bool bEnable)
		{
		}

		[Token(Token = "0x6002B18")]
		[Address(RVA = "0x12FA854", Offset = "0x12FA854", VA = "0x12FA854", Slot = "52")]
		public void PS4Input_SpecialSetVibration(int id, int largeMotor, int smallMotor)
		{
		}

		[Token(Token = "0x6002B19")]
		[Address(RVA = "0x12FA858", Offset = "0x12FA858", VA = "0x12FA858", Slot = "53")]
		public Vector3 PS4Input_AimGetLastAcceleration(int id)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002B1A")]
		[Address(RVA = "0x12FA860", Offset = "0x12FA860", VA = "0x12FA860", Slot = "54")]
		public Vector3 PS4Input_AimGetLastGyro(int id)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002B1B")]
		[Address(RVA = "0x12FA868", Offset = "0x12FA868", VA = "0x12FA868", Slot = "55")]
		public Vector4 PS4Input_AimGetLastOrientation(int id)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6002B1C")]
		[Address(RVA = "0x12FA870", Offset = "0x12FA870", VA = "0x12FA870", Slot = "56")]
		public int PS4Input_AimGetUsersHandles(int maxNumberControllers, int[] handles)
		{
			return default(int);
		}

		[Token(Token = "0x6002B1D")]
		[Address(RVA = "0x12FA878", Offset = "0x12FA878", VA = "0x12FA878", Slot = "57")]
		public int PS4Input_AimGetUsersHandles2(int maxNumberControllers, int[] handles)
		{
			return default(int);
		}

		[Token(Token = "0x6002B1E")]
		[Address(RVA = "0x12FA880", Offset = "0x12FA880", VA = "0x12FA880", Slot = "58")]
		public bool PS4Input_AimIsConnected(int id)
		{
			return default(bool);
		}

		[Token(Token = "0x6002B1F")]
		[Address(RVA = "0x12FA888", Offset = "0x12FA888", VA = "0x12FA888", Slot = "59")]
		public void PS4Input_AimResetLightSphere(int id)
		{
		}

		[Token(Token = "0x6002B20")]
		[Address(RVA = "0x12FA88C", Offset = "0x12FA88C", VA = "0x12FA88C", Slot = "60")]
		public void PS4Input_AimResetOrientation(int id)
		{
		}

		[Token(Token = "0x6002B21")]
		[Address(RVA = "0x12FA890", Offset = "0x12FA890", VA = "0x12FA890", Slot = "61")]
		public void PS4Input_AimSetAngularVelocityDeadbandState(int id, bool bEnable)
		{
		}

		[Token(Token = "0x6002B22")]
		[Address(RVA = "0x12FA894", Offset = "0x12FA894", VA = "0x12FA894", Slot = "62")]
		public void PS4Input_AimSetLightSphere(int id, int red, int green, int blue)
		{
		}

		[Token(Token = "0x6002B23")]
		[Address(RVA = "0x12FA898", Offset = "0x12FA898", VA = "0x12FA898", Slot = "63")]
		public void PS4Input_AimSetMotionSensorState(int id, bool bEnable)
		{
		}

		[Token(Token = "0x6002B24")]
		[Address(RVA = "0x12FA89C", Offset = "0x12FA89C", VA = "0x12FA89C", Slot = "64")]
		public void PS4Input_AimSetTiltCorrectionState(int id, bool bEnable)
		{
		}

		[Token(Token = "0x6002B25")]
		[Address(RVA = "0x12FA8A0", Offset = "0x12FA8A0", VA = "0x12FA8A0", Slot = "65")]
		public void PS4Input_AimSetVibration(int id, int largeMotor, int smallMotor)
		{
		}

		[Token(Token = "0x6002B26")]
		[Address(RVA = "0x12FA8A4", Offset = "0x12FA8A4", VA = "0x12FA8A4", Slot = "66")]
		public Vector3 PS4Input_GetLastMoveAcceleration(int id, int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002B27")]
		[Address(RVA = "0x12FA8AC", Offset = "0x12FA8AC", VA = "0x12FA8AC", Slot = "67")]
		public Vector3 PS4Input_GetLastMoveGyro(int id, int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002B28")]
		[Address(RVA = "0x12FA8B4", Offset = "0x12FA8B4", VA = "0x12FA8B4", Slot = "68")]
		public int PS4Input_MoveGetButtons(int id, int index)
		{
			return default(int);
		}

		[Token(Token = "0x6002B29")]
		[Address(RVA = "0x12FA8BC", Offset = "0x12FA8BC", VA = "0x12FA8BC", Slot = "69")]
		public int PS4Input_MoveGetAnalogButton(int id, int index)
		{
			return default(int);
		}

		[Token(Token = "0x6002B2A")]
		[Address(RVA = "0x12FA8C4", Offset = "0x12FA8C4", VA = "0x12FA8C4", Slot = "70")]
		public bool PS4Input_MoveIsConnected(int id, int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6002B2B")]
		[Address(RVA = "0x12FA8CC", Offset = "0x12FA8CC", VA = "0x12FA8CC", Slot = "71")]
		public int PS4Input_MoveGetUsersMoveHandles(int maxNumberControllers, int[] primaryHandles, int[] secondaryHandles)
		{
			return default(int);
		}

		[Token(Token = "0x6002B2C")]
		[Address(RVA = "0x12FA8D4", Offset = "0x12FA8D4", VA = "0x12FA8D4", Slot = "72")]
		public int PS4Input_MoveGetUsersMoveHandles(int maxNumberControllers, int[] primaryHandles)
		{
			return default(int);
		}

		[Token(Token = "0x6002B2D")]
		[Address(RVA = "0x12FA8DC", Offset = "0x12FA8DC", VA = "0x12FA8DC", Slot = "73")]
		public int PS4Input_MoveGetUsersMoveHandles(int maxNumberControllers)
		{
			return default(int);
		}

		[Token(Token = "0x6002B2E")]
		[Address(RVA = "0x12FA8E4", Offset = "0x12FA8E4", VA = "0x12FA8E4", Slot = "74")]
		public IntPtr PS4Input_MoveGetControllerInputForTracking()
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6002B2F")]
		[Address(RVA = "0x12FA920", Offset = "0x12FA920", VA = "0x12FA920", Slot = "75")]
		public int PS4Input_MoveSetLightSphere(int id, int index, int red, int green, int blue)
		{
			return default(int);
		}

		[Token(Token = "0x6002B30")]
		[Address(RVA = "0x12FA928", Offset = "0x12FA928", VA = "0x12FA928", Slot = "76")]
		public int PS4Input_MoveSetVibration(int id, int index, int motor)
		{
			return default(int);
		}

		[Token(Token = "0x6002B31")]
		[Address(RVA = "0x12FA930", Offset = "0x12FA930", VA = "0x12FA930", Slot = "77")]
		public void GetDeviceVIDPIDs(out List<int> vids, out List<int> pids)
		{
		}

		[Token(Token = "0x6002B32")]
		[Address(RVA = "0x12FB204", Offset = "0x12FB204", VA = "0x12FB204", Slot = "78")]
		public int GetAndroidAPILevel()
		{
			return default(int);
		}

		[Token(Token = "0x6002B33")]
		[Address(RVA = "0x12FB430", Offset = "0x12FB430", VA = "0x12FB430", Slot = "79")]
		public bool UnityUI_Graphic_GetRaycastTarget(object graphic)
		{
			return default(bool);
		}

		[Token(Token = "0x6002B34")]
		[Address(RVA = "0x12FB538", Offset = "0x12FB538", VA = "0x12FB538", Slot = "80")]
		public void UnityUI_Graphic_SetRaycastTarget(object graphic, bool value)
		{
		}

		[Token(Token = "0x6002B36")]
		[Address(RVA = "0x12FB658", Offset = "0x12FB658", VA = "0x12FB658", Slot = "82")]
		public float UnityInput_GetTouchPressure(ref Touch touch)
		{
			return default(float);
		}

		[Token(Token = "0x6002B37")]
		[Address(RVA = "0x12FB664", Offset = "0x12FB664", VA = "0x12FB664", Slot = "83")]
		public float UnityInput_GetTouchMaximumPossiblePressure(ref Touch touch)
		{
			return default(float);
		}

		[Token(Token = "0x6002B38")]
		[Address(RVA = "0x12FB670", Offset = "0x12FB670", VA = "0x12FB670", Slot = "84")]
		public IControllerTemplate CreateControllerTemplate(Guid typeGuid, object payload)
		{
			return null;
		}

		[Token(Token = "0x6002B39")]
		[Address(RVA = "0x12FB6EC", Offset = "0x12FB6EC", VA = "0x12FB6EC", Slot = "85")]
		public Type[] GetControllerTemplateTypes()
		{
			return null;
		}

		[Token(Token = "0x6002B3A")]
		[Address(RVA = "0x12FB788", Offset = "0x12FB788", VA = "0x12FB788", Slot = "86")]
		public Type[] GetControllerTemplateInterfaceTypes()
		{
			return null;
		}
	}
}
namespace Rewired.Data
{
	[Token(Token = "0x20005ED")]
	public class UserDataStore_PlayerPrefs : UserDataStore
	{
		[Token(Token = "0x20005EE")]
		private class ControllerAssignmentSaveInfo
		{
			[Token(Token = "0x20005EF")]
			public class PlayerInfo
			{
				[Token(Token = "0x4002953")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public int id;

				[Token(Token = "0x4002954")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				public bool hasKeyboard;

				[Token(Token = "0x4002955")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
				public bool hasMouse;

				[Token(Token = "0x4002956")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public JoystickInfo[] joysticks;

				[Token(Token = "0x170004E6")]
				public int joystickCount
				{
					[Token(Token = "0x6002B95")]
					[Address(RVA = "0x269D168", Offset = "0x269D168", VA = "0x269D168")]
					get
					{
						return default(int);
					}
				}

				[Token(Token = "0x6002B96")]
				[Address(RVA = "0x269D180", Offset = "0x269D180", VA = "0x269D180")]
				public int IndexOfJoystick(int joystickId)
				{
					return default(int);
				}

				[Token(Token = "0x6002B97")]
				[Address(RVA = "0x269D1F8", Offset = "0x269D1F8", VA = "0x269D1F8")]
				public bool ContainsJoystick(int joystickId)
				{
					return default(bool);
				}

				[Token(Token = "0x6002B98")]
				[Address(RVA = "0x269D214", Offset = "0x269D214", VA = "0x269D214")]
				public PlayerInfo()
				{
				}
			}

			[Token(Token = "0x20005F0")]
			public class JoystickInfo
			{
				[Token(Token = "0x4002957")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public Guid instanceGuid;

				[Token(Token = "0x4002958")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public string hardwareIdentifier;

				[Token(Token = "0x4002959")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				public int id;

				[Token(Token = "0x6002B99")]
				[Address(RVA = "0x269D160", Offset = "0x269D160", VA = "0x269D160")]
				public JoystickInfo()
				{
				}
			}

			[Token(Token = "0x4002952")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PlayerInfo[] players;

			[Token(Token = "0x170004E5")]
			public int playerCount
			{
				[Token(Token = "0x6002B90")]
				[Address(RVA = "0x11B4EC0", Offset = "0x11B4EC0", VA = "0x11B4EC0")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x6002B91")]
			[Address(RVA = "0x11B4ED8", Offset = "0x11B4ED8", VA = "0x11B4ED8")]
			public ControllerAssignmentSaveInfo()
			{
			}

			[Token(Token = "0x6002B92")]
			[Address(RVA = "0x11B4EE0", Offset = "0x11B4EE0", VA = "0x11B4EE0")]
			public ControllerAssignmentSaveInfo(int playerCount)
			{
			}

			[Token(Token = "0x6002B93")]
			[Address(RVA = "0x11B5004", Offset = "0x11B5004", VA = "0x11B5004")]
			public int IndexOfPlayer(int playerId)
			{
				return default(int);
			}

			[Token(Token = "0x6002B94")]
			[Address(RVA = "0x11B507C", Offset = "0x11B507C", VA = "0x11B507C")]
			public bool ContainsPlayer(int playerId)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005F1")]
		private class JoystickAssignmentHistoryInfo
		{
			[Token(Token = "0x400295A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public readonly Joystick joystick;

			[Token(Token = "0x400295B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public readonly int oldJoystickId;

			[Token(Token = "0x6002B9A")]
			[Address(RVA = "0x11B5098", Offset = "0x11B5098", VA = "0x11B5098")]
			public JoystickAssignmentHistoryInfo(Joystick joystick, int oldJoystickId)
			{
			}
		}

		[Token(Token = "0x20005F2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9192C8", Offset = "0x9192C8")]
		private sealed class <>c__DisplayClass78_0
		{
			[Token(Token = "0x400295C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Joystick joystick;

			[Token(Token = "0x6002B9B")]
			[Address(RVA = "0x11B4C68", Offset = "0x11B4C68", VA = "0x11B4C68")]
			public <>c__DisplayClass78_0()
			{
			}

			[Token(Token = "0x6002B9C")]
			[Address(RVA = "0x11B4C70", Offset = "0x11B4C70", VA = "0x11B4C70")]
			internal bool <LoadJoystickAssignmentsNow>b__0(JoystickAssignmentHistoryInfo x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005F3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9192D8", Offset = "0x9192D8")]
		private sealed class <>c__DisplayClass78_1
		{
			[Token(Token = "0x400295D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ControllerAssignmentSaveInfo.JoystickInfo joystickInfo;

			[Token(Token = "0x6002B9D")]
			[Address(RVA = "0x11B4C94", Offset = "0x11B4C94", VA = "0x11B4C94")]
			public <>c__DisplayClass78_1()
			{
			}

			[Token(Token = "0x6002B9E")]
			[Address(RVA = "0x11B4C9C", Offset = "0x11B4C9C", VA = "0x11B4C9C")]
			internal bool <LoadJoystickAssignmentsNow>b__1(JoystickAssignmentHistoryInfo x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9192E8", Offset = "0x9192E8")]
		private sealed class <>c__DisplayClass78_2
		{
			[Token(Token = "0x400295E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Joystick match;

			[Token(Token = "0x6002B9F")]
			[Address(RVA = "0x11B4CCC", Offset = "0x11B4CCC", VA = "0x11B4CCC")]
			public <>c__DisplayClass78_2()
			{
			}

			[Token(Token = "0x6002BA0")]
			[Address(RVA = "0x11B4CD4", Offset = "0x11B4CD4", VA = "0x11B4CD4")]
			internal bool <LoadJoystickAssignmentsNow>b__2(JoystickAssignmentHistoryInfo x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005F5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9192F8", Offset = "0x9192F8")]
		private sealed class <LoadJoystickAssignmentsDeferred>d__80 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400295F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002960")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002961")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UserDataStore_PlayerPrefs <>4__this;

			[Token(Token = "0x170004E7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002BA4")]
				[Address(RVA = "0x11B4E70", Offset = "0x11B4E70", VA = "0x11B4E70", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004E8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002BA6")]
				[Address(RVA = "0x11B4EB8", Offset = "0x11B4EB8", VA = "0x11B4EB8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002BA1")]
			[Address(RVA = "0x11B4CF8", Offset = "0x11B4CF8", VA = "0x11B4CF8")]
			[DebuggerHidden]
			public <LoadJoystickAssignmentsDeferred>d__80(int <>1__state)
			{
			}

			[Token(Token = "0x6002BA2")]
			[Address(RVA = "0x11B4D24", Offset = "0x11B4D24", VA = "0x11B4D24", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002BA3")]
			[Address(RVA = "0x11B4D28", Offset = "0x11B4D28", VA = "0x11B4D28", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BA5")]
			[Address(RVA = "0x11B4E78", Offset = "0x11B4E78", VA = "0x11B4E78", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400293E")]
		private const string thisScriptName = "UserDataStore_PlayerPrefs";

		[Token(Token = "0x400293F")]
		private const string logPrefix = "Rewired: ";

		[Token(Token = "0x4002940")]
		private const string editorLoadedMessage = "\n***IMPORTANT:*** Changes made to the Rewired Input Manager configuration after the last time XML data was saved WILL NOT be used because the loaded old saved data has overwritten these values. If you change something in the Rewired Input Manager such as a Joystick Map or Input Behavior settings, you will not see these changes reflected in the current configuration. Clear PlayerPrefs using the inspector option on the UserDataStore_PlayerPrefs component.";

		[Token(Token = "0x4002941")]
		private const string playerPrefsKeySuffix_controllerAssignments = "ControllerAssignments";

		[Token(Token = "0x4002942")]
		private const int controllerMapPPKeyVersion_original = 0;

		[Token(Token = "0x4002943")]
		private const int controllerMapPPKeyVersion_includeDuplicateJoystickIndex = 1;

		[Token(Token = "0x4002944")]
		private const int controllerMapPPKeyVersion_supportDisconnectedControllers = 2;

		[Token(Token = "0x4002945")]
		private const int controllerMapPPKeyVersion_includeFormatVersion = 2;

		[Token(Token = "0x4002946")]
		private const int controllerMapPPKeyVersion = 2;

		[Token(Token = "0x4002947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91E19C", Offset = "0x91E19C")]
		[SerializeField]
		private bool isEnabled;

		[Token(Token = "0x4002948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91E1E8", Offset = "0x91E1E8")]
		[SerializeField]
		private bool loadDataOnStart;

		[Token(Token = "0x4002949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91E234", Offset = "0x91E234")]
		[SerializeField]
		private bool loadJoystickAssignments;

		[Token(Token = "0x400294A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91E280", Offset = "0x91E280")]
		[SerializeField]
		private bool loadKeyboardAssignments;

		[Token(Token = "0x400294B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91E2CC", Offset = "0x91E2CC")]
		[SerializeField]
		private bool loadMouseAssignments;

		[Token(Token = "0x400294C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91E318", Offset = "0x91E318")]
		[SerializeField]
		private string playerPrefsKeyPrefix;

		[NonSerialized]
		[Token(Token = "0x400294D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool allowImpreciseJoystickAssignmentMatching;

		[NonSerialized]
		[Token(Token = "0x400294E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool deferredJoystickAssignmentLoadPending;

		[NonSerialized]
		[Token(Token = "0x400294F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		private bool wasJoystickEverDetected;

		[NonSerialized]
		[Token(Token = "0x4002950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<int> __allActionIds;

		[NonSerialized]
		[Token(Token = "0x4002951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string __allActionIdsString;

		[Token(Token = "0x170004DB")]
		public bool IsEnabled
		{
			[Token(Token = "0x6002B3B")]
			[Address(RVA = "0xED73CC", Offset = "0xED73CC", VA = "0xED73CC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002B3C")]
			[Address(RVA = "0xED73D4", Offset = "0xED73D4", VA = "0xED73D4")]
			set
			{
			}
		}

		[Token(Token = "0x170004DC")]
		public bool LoadDataOnStart
		{
			[Token(Token = "0x6002B3D")]
			[Address(RVA = "0xED73E0", Offset = "0xED73E0", VA = "0xED73E0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002B3E")]
			[Address(RVA = "0xED73E8", Offset = "0xED73E8", VA = "0xED73E8")]
			set
			{
			}
		}

		[Token(Token = "0x170004DD")]
		public bool LoadJoystickAssignments
		{
			[Token(Token = "0x6002B3F")]
			[Address(RVA = "0xED73F4", Offset = "0xED73F4", VA = "0xED73F4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002B40")]
			[Address(RVA = "0xED73FC", Offset = "0xED73FC", VA = "0xED73FC")]
			set
			{
			}
		}

		[Token(Token = "0x170004DE")]
		public bool LoadKeyboardAssignments
		{
			[Token(Token = "0x6002B41")]
			[Address(RVA = "0xED7408", Offset = "0xED7408", VA = "0xED7408")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002B42")]
			[Address(RVA = "0xED7410", Offset = "0xED7410", VA = "0xED7410")]
			set
			{
			}
		}

		[Token(Token = "0x170004DF")]
		public bool LoadMouseAssignments
		{
			[Token(Token = "0x6002B43")]
			[Address(RVA = "0xED741C", Offset = "0xED741C", VA = "0xED741C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002B44")]
			[Address(RVA = "0xED7424", Offset = "0xED7424", VA = "0xED7424")]
			set
			{
			}
		}

		[Token(Token = "0x170004E0")]
		public string PlayerPrefsKeyPrefix
		{
			[Token(Token = "0x6002B45")]
			[Address(RVA = "0xED7430", Offset = "0xED7430", VA = "0xED7430")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002B46")]
			[Address(RVA = "0xED7438", Offset = "0xED7438", VA = "0xED7438")]
			set
			{
			}
		}

		[Token(Token = "0x170004E1")]
		private string playerPrefsKey_controllerAssignments
		{
			[Token(Token = "0x6002B47")]
			[Address(RVA = "0xED7440", Offset = "0xED7440", VA = "0xED7440")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004E2")]
		private bool loadControllerAssignments
		{
			[Token(Token = "0x6002B48")]
			[Address(RVA = "0xED74A8", Offset = "0xED74A8", VA = "0xED74A8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004E3")]
		private List<int> allActionIds
		{
			[Token(Token = "0x6002B49")]
			[Address(RVA = "0xED74D0", Offset = "0xED74D0", VA = "0xED74D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004E4")]
		private string allActionIdsString
		{
			[Token(Token = "0x6002B4A")]
			[Address(RVA = "0xED76DC", Offset = "0xED76DC", VA = "0xED76DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B4B")]
		[Address(RVA = "0xED781C", Offset = "0xED781C", VA = "0xED781C", Slot = "21")]
		public override void Save()
		{
		}

		[Token(Token = "0x6002B4C")]
		[Address(RVA = "0xED7A74", Offset = "0xED7A74", VA = "0xED7A74", Slot = "22")]
		public override void SaveControllerData(int playerId, ControllerType controllerType, int controllerId)
		{
		}

		[Token(Token = "0x6002B4D")]
		[Address(RVA = "0xED7B88", Offset = "0xED7B88", VA = "0xED7B88", Slot = "23")]
		public override void SaveControllerData(ControllerType controllerType, int controllerId)
		{
		}

		[Token(Token = "0x6002B4E")]
		[Address(RVA = "0xED7C68", Offset = "0xED7C68", VA = "0xED7C68", Slot = "24")]
		public override void SavePlayerData(int playerId)
		{
		}

		[Token(Token = "0x6002B4F")]
		[Address(RVA = "0xED7DA4", Offset = "0xED7DA4", VA = "0xED7DA4", Slot = "25")]
		public override void SaveInputBehavior(int playerId, int behaviorId)
		{
		}

		[Token(Token = "0x6002B50")]
		[Address(RVA = "0xED7F4C", Offset = "0xED7F4C", VA = "0xED7F4C", Slot = "16")]
		public override void Load()
		{
		}

		[Token(Token = "0x6002B51")]
		[Address(RVA = "0xED81B4", Offset = "0xED81B4", VA = "0xED81B4", Slot = "17")]
		public override void LoadControllerData(int playerId, ControllerType controllerType, int controllerId)
		{
		}

		[Token(Token = "0x6002B52")]
		[Address(RVA = "0xED82E0", Offset = "0xED82E0", VA = "0xED82E0", Slot = "18")]
		public override void LoadControllerData(ControllerType controllerType, int controllerId)
		{
		}

		[Token(Token = "0x6002B53")]
		[Address(RVA = "0xED83BC", Offset = "0xED83BC", VA = "0xED83BC", Slot = "19")]
		public override void LoadPlayerData(int playerId)
		{
		}

		[Token(Token = "0x6002B54")]
		[Address(RVA = "0xED84F0", Offset = "0xED84F0", VA = "0xED84F0", Slot = "20")]
		public override void LoadInputBehavior(int playerId, int behaviorId)
		{
		}

		[Token(Token = "0x6002B55")]
		[Address(RVA = "0xED8694", Offset = "0xED8694", VA = "0xED8694", Slot = "28")]
		protected override void OnInitialize()
		{
		}

		[Token(Token = "0x6002B56")]
		[Address(RVA = "0xED8D00", Offset = "0xED8D00", VA = "0xED8D00", Slot = "29")]
		protected override void OnControllerConnected(ControllerStatusChangedEventArgs args)
		{
		}

		[Token(Token = "0x6002B57")]
		[Address(RVA = "0xED9004", Offset = "0xED9004", VA = "0xED9004", Slot = "32")]
		protected override void OnControllerPreDisconnect(ControllerStatusChangedEventArgs args)
		{
		}

		[Token(Token = "0x6002B58")]
		[Address(RVA = "0xED9218", Offset = "0xED9218", VA = "0xED9218", Slot = "30")]
		protected override void OnControllerDisconnected(ControllerStatusChangedEventArgs args)
		{
		}

		[Token(Token = "0x6002B59")]
		[Address(RVA = "0xED9240", Offset = "0xED9240", VA = "0xED9240", Slot = "26")]
		public override void SaveControllerMap(int playerId, ControllerMap controllerMap)
		{
		}

		[Token(Token = "0x6002B5A")]
		[Address(RVA = "0xED9418", Offset = "0xED9418", VA = "0xED9418", Slot = "27")]
		public override ControllerMap LoadControllerMap(int playerId, ControllerIdentifier controllerIdentifier, int categoryId, int layoutId)
		{
			return null;
		}

		[Token(Token = "0x6002B5B")]
		[Address(RVA = "0xED7FE0", Offset = "0xED7FE0", VA = "0xED7FE0")]
		private int LoadAll()
		{
			return default(int);
		}

		[Token(Token = "0x6002B5C")]
		[Address(RVA = "0xED8464", Offset = "0xED8464", VA = "0xED8464")]
		private int LoadPlayerDataNow(int playerId)
		{
			return default(int);
		}

		[Token(Token = "0x6002B5D")]
		[Address(RVA = "0xED9700", Offset = "0xED9700", VA = "0xED9700")]
		private int LoadPlayerDataNow(Player player)
		{
			return default(int);
		}

		[Token(Token = "0x6002B5E")]
		[Address(RVA = "0xED9A90", Offset = "0xED9A90", VA = "0xED9A90")]
		private int LoadAllJoystickCalibrationData()
		{
			return default(int);
		}

		[Token(Token = "0x6002B5F")]
		[Address(RVA = "0xEDA304", Offset = "0xEDA304", VA = "0xEDA304")]
		private int LoadJoystickCalibrationData(Joystick joystick)
		{
			return default(int);
		}

		[Token(Token = "0x6002B60")]
		[Address(RVA = "0xEDA3D4", Offset = "0xEDA3D4", VA = "0xEDA3D4")]
		private int LoadJoystickCalibrationData(int joystickId)
		{
			return default(int);
		}

		[Token(Token = "0x6002B61")]
		[Address(RVA = "0xED8D90", Offset = "0xED8D90", VA = "0xED8D90")]
		private int LoadJoystickData(int joystickId)
		{
			return default(int);
		}

		[Token(Token = "0x6002B62")]
		[Address(RVA = "0xED8278", Offset = "0xED8278", VA = "0xED8278")]
		private int LoadControllerDataNow(int playerId, ControllerType controllerType, int controllerId)
		{
			return default(int);
		}

		[Token(Token = "0x6002B63")]
		[Address(RVA = "0xED83A4", Offset = "0xED83A4", VA = "0xED83A4")]
		private int LoadControllerDataNow(ControllerType controllerType, int controllerId)
		{
			return default(int);
		}

		[Token(Token = "0x6002B64")]
		[Address(RVA = "0xED9E40", Offset = "0xED9E40", VA = "0xED9E40")]
		private int LoadControllerMaps(int playerId, ControllerType controllerType, int controllerId)
		{
			return default(int);
		}

		[Token(Token = "0x6002B65")]
		[Address(RVA = "0xED94E4", Offset = "0xED94E4", VA = "0xED94E4")]
		private ControllerMap LoadControllerMap(Player player, ControllerIdentifier controllerIdentifier, int categoryId, int layoutId)
		{
			return null;
		}

		[Token(Token = "0x6002B66")]
		[Address(RVA = "0xED9C34", Offset = "0xED9C34", VA = "0xED9C34")]
		private int LoadInputBehaviors(int playerId)
		{
			return default(int);
		}

		[Token(Token = "0x6002B67")]
		[Address(RVA = "0xED85A0", Offset = "0xED85A0", VA = "0xED85A0")]
		private int LoadInputBehaviorNow(int playerId, int behaviorId)
		{
			return default(int);
		}

		[Token(Token = "0x6002B68")]
		[Address(RVA = "0xEDAD5C", Offset = "0xEDAD5C", VA = "0xEDAD5C")]
		private int LoadInputBehaviorNow(Player player, InputBehavior inputBehavior)
		{
			return default(int);
		}

		[Token(Token = "0x6002B69")]
		[Address(RVA = "0xED9624", Offset = "0xED9624", VA = "0xED9624")]
		private bool LoadControllerAssignmentsNow()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B6A")]
		[Address(RVA = "0xEDAFF8", Offset = "0xEDAFF8", VA = "0xEDAFF8")]
		private bool LoadKeyboardAndMouseAssignmentsNow(ControllerAssignmentSaveInfo data)
		{
			return default(bool);
		}

		[Token(Token = "0x6002B6B")]
		[Address(RVA = "0xEDB4B0", Offset = "0xEDB4B0", VA = "0xEDB4B0")]
		private bool LoadJoystickAssignmentsNow(ControllerAssignmentSaveInfo data)
		{
			return default(bool);
		}

		[Token(Token = "0x6002B6C")]
		[Address(RVA = "0xEDAE9C", Offset = "0xEDAE9C", VA = "0xEDAE9C")]
		private ControllerAssignmentSaveInfo LoadControllerAssignmentData()
		{
			return null;
		}

		[Token(Token = "0x6002B6D")]
		[Address(RVA = "0xED8F98", Offset = "0xED8F98", VA = "0xED8F98")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x930028", Offset = "0x930028")]
		private IEnumerator LoadJoystickAssignmentsDeferred()
		{
			return null;
		}

		[Token(Token = "0x6002B6E")]
		[Address(RVA = "0xED78B0", Offset = "0xED78B0", VA = "0xED78B0")]
		private void SaveAll()
		{
		}

		[Token(Token = "0x6002B6F")]
		[Address(RVA = "0xED7D10", Offset = "0xED7D10", VA = "0xED7D10")]
		private void SavePlayerDataNow(int playerId)
		{
		}

		[Token(Token = "0x6002B70")]
		[Address(RVA = "0xEDCB6C", Offset = "0xEDCB6C", VA = "0xEDCB6C")]
		private void SavePlayerDataNow(Player player)
		{
		}

		[Token(Token = "0x6002B71")]
		[Address(RVA = "0xEDCC08", Offset = "0xEDCC08", VA = "0xEDCC08")]
		private void SaveAllJoystickCalibrationData()
		{
		}

		[Token(Token = "0x6002B72")]
		[Address(RVA = "0xEDD18C", Offset = "0xEDD18C", VA = "0xEDD18C")]
		private void SaveJoystickCalibrationData(int joystickId)
		{
		}

		[Token(Token = "0x6002B73")]
		[Address(RVA = "0xEDD10C", Offset = "0xEDD10C", VA = "0xEDD10C")]
		private void SaveJoystickCalibrationData(Joystick joystick)
		{
		}

		[Token(Token = "0x6002B74")]
		[Address(RVA = "0xED9034", Offset = "0xED9034", VA = "0xED9034")]
		private void SaveJoystickData(int joystickId)
		{
		}

		[Token(Token = "0x6002B75")]
		[Address(RVA = "0xED7B38", Offset = "0xED7B38", VA = "0xED7B38")]
		private void SaveControllerDataNow(int playerId, ControllerType controllerType, int controllerId)
		{
		}

		[Token(Token = "0x6002B76")]
		[Address(RVA = "0xED7C44", Offset = "0xED7C44", VA = "0xED7C44")]
		private void SaveControllerDataNow(ControllerType controllerType, int controllerId)
		{
		}

		[Token(Token = "0x6002B77")]
		[Address(RVA = "0xEDCE2C", Offset = "0xEDCE2C", VA = "0xEDCE2C")]
		private void SaveControllerMaps(Player player, PlayerSaveData playerSaveData)
		{
		}

		[Token(Token = "0x6002B78")]
		[Address(RVA = "0xEDD398", Offset = "0xEDD398", VA = "0xEDD398")]
		private void SaveControllerMaps(int playerId, ControllerType controllerType, int controllerId)
		{
		}

		[Token(Token = "0x6002B79")]
		[Address(RVA = "0xED92EC", Offset = "0xED92EC", VA = "0xED92EC")]
		private void SaveControllerMap(Player player, ControllerMap controllerMap)
		{
		}

		[Token(Token = "0x6002B7A")]
		[Address(RVA = "0xEDCDA0", Offset = "0xEDCDA0", VA = "0xEDCDA0")]
		private void SaveInputBehaviors(Player player, PlayerSaveData playerSaveData)
		{
		}

		[Token(Token = "0x6002B7B")]
		[Address(RVA = "0xED7E54", Offset = "0xED7E54", VA = "0xED7E54")]
		private void SaveInputBehaviorNow(int playerId, int behaviorId)
		{
		}

		[Token(Token = "0x6002B7C")]
		[Address(RVA = "0xEDD664", Offset = "0xEDD664", VA = "0xEDD664")]
		private void SaveInputBehaviorNow(Player player, InputBehavior inputBehavior)
		{
		}

		[Token(Token = "0x6002B7D")]
		[Address(RVA = "0xED875C", Offset = "0xED875C", VA = "0xED875C")]
		private bool SaveControllerAssignments()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B7E")]
		[Address(RVA = "0xEDD75C", Offset = "0xEDD75C", VA = "0xEDD75C")]
		private bool ControllerAssignmentSaveDataExists()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B7F")]
		[Address(RVA = "0xEDD7B0", Offset = "0xEDD7B0", VA = "0xEDD7B0")]
		private string GetBasePlayerPrefsKey(Player player)
		{
			return null;
		}

		[Token(Token = "0x6002B80")]
		[Address(RVA = "0xEDD4D4", Offset = "0xEDD4D4", VA = "0xEDD4D4")]
		private string GetControllerMapPlayerPrefsKey(Player player, ControllerIdentifier controllerIdentifier, int categoryId, int layoutId, int ppKeyVersion)
		{
			return null;
		}

		[Token(Token = "0x6002B81")]
		[Address(RVA = "0xEDD59C", Offset = "0xEDD59C", VA = "0xEDD59C")]
		private string GetControllerMapKnownActionIdsPlayerPrefsKey(Player player, ControllerIdentifier controllerIdentifier, int categoryId, int layoutId, int ppKeyVersion)
		{
			return null;
		}

		[Token(Token = "0x6002B82")]
		[Address(RVA = "0xEDD828", Offset = "0xEDD828", VA = "0xEDD828")]
		private static string GetControllerMapPlayerPrefsKeyCommonSuffix(Player player, ControllerIdentifier controllerIdentifier, int categoryId, int layoutId, int ppKeyVersion)
		{
			return null;
		}

		[Token(Token = "0x6002B83")]
		[Address(RVA = "0xEDD218", Offset = "0xEDD218", VA = "0xEDD218")]
		private string GetJoystickCalibrationMapPlayerPrefsKey(Joystick joystick)
		{
			return null;
		}

		[Token(Token = "0x6002B84")]
		[Address(RVA = "0xEDD6B8", Offset = "0xEDD6B8", VA = "0xEDD6B8")]
		private string GetInputBehaviorPlayerPrefsKey(Player player, int inputBehaviorId)
		{
			return null;
		}

		[Token(Token = "0x6002B85")]
		[Address(RVA = "0xEDA460", Offset = "0xEDA460", VA = "0xEDA460")]
		private string GetControllerMapXml(Player player, ControllerIdentifier controllerIdentifier, int categoryId, int layoutId)
		{
			return null;
		}

		[Token(Token = "0x6002B86")]
		[Address(RVA = "0xEDA520", Offset = "0xEDA520", VA = "0xEDA520")]
		private List<int> GetControllerMapKnownActionIds(Player player, ControllerIdentifier controllerIdentifier, int categoryId, int layoutId)
		{
			return null;
		}

		[Token(Token = "0x6002B87")]
		[Address(RVA = "0xEDA344", Offset = "0xEDA344", VA = "0xEDA344")]
		private string GetJoystickCalibrationMapXml(Joystick joystick)
		{
			return null;
		}

		[Token(Token = "0x6002B88")]
		[Address(RVA = "0xEDAE04", Offset = "0xEDAE04", VA = "0xEDAE04")]
		private string GetInputBehaviorXml(Player player, int id)
		{
			return null;
		}

		[Token(Token = "0x6002B89")]
		[Address(RVA = "0xEDA718", Offset = "0xEDA718", VA = "0xEDA718")]
		private void AddDefaultMappingsForNewActions(ControllerIdentifier controllerIdentifier, ControllerMap controllerMap, List<int> knownActionIds)
		{
		}

		[Token(Token = "0x6002B8A")]
		[Address(RVA = "0xEDC5EC", Offset = "0xEDC5EC", VA = "0xEDC5EC")]
		private Joystick FindJoystickPrecise(ControllerAssignmentSaveInfo.JoystickInfo joystickInfo)
		{
			return null;
		}

		[Token(Token = "0x6002B8B")]
		[Address(RVA = "0xEDC8AC", Offset = "0xEDC8AC", VA = "0xEDC8AC")]
		private bool TryFindJoysticksImprecise(ControllerAssignmentSaveInfo.JoystickInfo joystickInfo, out List<Joystick> matches)
		{
			return default(bool);
		}

		[Token(Token = "0x6002B8C")]
		[Address(RVA = "0xEDDE28", Offset = "0xEDDE28", VA = "0xEDDE28")]
		private static int GetDuplicateIndex(Player player, ControllerIdentifier controllerIdentifier)
		{
			return default(int);
		}

		[Token(Token = "0x6002B8D")]
		[Address(RVA = "0xEDA260", Offset = "0xEDA260", VA = "0xEDA260")]
		private void RefreshLayoutManager(int playerId)
		{
		}

		[Token(Token = "0x6002B8E")]
		[Address(RVA = "0xEDDC4C", Offset = "0xEDDC4C", VA = "0xEDDC4C")]
		private static Type GetControllerMapType(ControllerType controllerType)
		{
			return null;
		}

		[Token(Token = "0x6002B8F")]
		[Address(RVA = "0xEDE398", Offset = "0xEDE398", VA = "0xEDE398")]
		public UserDataStore_PlayerPrefs()
		{
		}
	}
}
namespace Rewired.Internal
{
	[Token(Token = "0x20005F6")]
	public static class ControllerTemplateFactory
	{
		[Token(Token = "0x4002962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Type[] _defaultTemplateTypes;

		[Token(Token = "0x4002963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly Type[] _defaultTemplateInterfaceTypes;

		[Token(Token = "0x170004E9")]
		public static Type[] templateTypes
		{
			[Token(Token = "0x6002BA7")]
			[Address(RVA = "0x1020688", Offset = "0x1020688", VA = "0x1020688")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004EA")]
		public static Type[] templateInterfaceTypes
		{
			[Token(Token = "0x6002BA8")]
			[Address(RVA = "0x10206EC", Offset = "0x10206EC", VA = "0x10206EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002BA9")]
		[Address(RVA = "0x1020750", Offset = "0x1020750", VA = "0x1020750")]
		public static IControllerTemplate Create(Guid typeGuid, object payload)
		{
			return null;
		}
	}
}
namespace Rewired.Integration.UnityUI
{
	[Token(Token = "0x20005F7")]
	public class PlayerPointerEventData : PointerEventData
	{
		[Token(Token = "0x4002964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91E364", Offset = "0x91E364")]
		private int <playerId>k__BackingField;

		[Token(Token = "0x4002965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91E374", Offset = "0x91E374")]
		private int <inputSourceIndex>k__BackingField;

		[Token(Token = "0x4002966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91E384", Offset = "0x91E384")]
		private IMouseInputSource <mouseSource>k__BackingField;

		[Token(Token = "0x4002967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91E394", Offset = "0x91E394")]
		private ITouchInputSource <touchSource>k__BackingField;

		[Token(Token = "0x4002968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91E3A4", Offset = "0x91E3A4")]
		private PointerEventType <sourceType>k__BackingField;

		[Token(Token = "0x4002969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91E3B4", Offset = "0x91E3B4")]
		private int <buttonIndex>k__BackingField;

		[Token(Token = "0x170004EB")]
		public int playerId
		{
			[Token(Token = "0x6002BAB")]
			[Address(RVA = "0x10D3B30", Offset = "0x10D3B30", VA = "0x10D3B30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9300D8", Offset = "0x9300D8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002BAC")]
			[Address(RVA = "0x10D3B38", Offset = "0x10D3B38", VA = "0x10D3B38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9300E8", Offset = "0x9300E8")]
			set
			{
			}
		}

		[Token(Token = "0x170004EC")]
		public int inputSourceIndex
		{
			[Token(Token = "0x6002BAD")]
			[Address(RVA = "0x10D3B40", Offset = "0x10D3B40", VA = "0x10D3B40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9300F8", Offset = "0x9300F8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002BAE")]
			[Address(RVA = "0x10D3B48", Offset = "0x10D3B48", VA = "0x10D3B48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x930108", Offset = "0x930108")]
			set
			{
			}
		}

		[Token(Token = "0x170004ED")]
		public IMouseInputSource mouseSource
		{
			[Token(Token = "0x6002BAF")]
			[Address(RVA = "0x10D3B50", Offset = "0x10D3B50", VA = "0x10D3B50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x930118", Offset = "0x930118")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002BB0")]
			[Address(RVA = "0x10D3B58", Offset = "0x10D3B58", VA = "0x10D3B58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x930128", Offset = "0x930128")]
			set
			{
			}
		}

		[Token(Token = "0x170004EE")]
		public ITouchInputSource touchSource
		{
			[Token(Token = "0x6002BB1")]
			[Address(RVA = "0x10D3B60", Offset = "0x10D3B60", VA = "0x10D3B60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x930138", Offset = "0x930138")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002BB2")]
			[Address(RVA = "0x10D3B68", Offset = "0x10D3B68", VA = "0x10D3B68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x930148", Offset = "0x930148")]
			set
			{
			}
		}

		[Token(Token = "0x170004EF")]
		public PointerEventType sourceType
		{
			[Token(Token = "0x6002BB3")]
			[Address(RVA = "0x10D3B70", Offset = "0x10D3B70", VA = "0x10D3B70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x930158", Offset = "0x930158")]
			get
			{
				return default(PointerEventType);
			}
			[Token(Token = "0x6002BB4")]
			[Address(RVA = "0x10D3B78", Offset = "0x10D3B78", VA = "0x10D3B78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x930168", Offset = "0x930168")]
			set
			{
			}
		}

		[Token(Token = "0x170004F0")]
		public int buttonIndex
		{
			[Token(Token = "0x6002BB5")]
			[Address(RVA = "0x10D3B80", Offset = "0x10D3B80", VA = "0x10D3B80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x930178", Offset = "0x930178")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002BB6")]
			[Address(RVA = "0x10D3B88", Offset = "0x10D3B88", VA = "0x10D3B88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x930188", Offset = "0x930188")]
			set
			{
			}
		}

		[Token(Token = "0x6002BB7")]
		[Address(RVA = "0x10D3B90", Offset = "0x10D3B90", VA = "0x10D3B90")]
		public PlayerPointerEventData(EventSystem eventSystem)
		{
		}

		[Token(Token = "0x6002BB8")]
		[Address(RVA = "0x10D3BC4", Offset = "0x10D3BC4", VA = "0x10D3BC4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20005F8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x919308", Offset = "0x919308")]
	public class RewiredEventSystem : EventSystem
	{
		[Token(Token = "0x400296A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91E3C4", Offset = "0x91E3C4")]
		private bool _alwaysUpdate;

		[Token(Token = "0x170004F1")]
		public bool alwaysUpdate
		{
			[Token(Token = "0x6002BB9")]
			[Address(RVA = "0xDB4328", Offset = "0xDB4328", VA = "0xDB4328")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002BBA")]
			[Address(RVA = "0xDB4330", Offset = "0xDB4330", VA = "0xDB4330")]
			set
			{
			}
		}

		[Token(Token = "0x6002BBB")]
		[Address(RVA = "0xDB433C", Offset = "0xDB433C", VA = "0xDB433C", Slot = "18")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6002BBC")]
		[Address(RVA = "0xDB44FC", Offset = "0xDB44FC", VA = "0xDB44FC")]
		public RewiredEventSystem()
		{
		}
	}
	[Token(Token = "0x20005F9")]
	public abstract class RewiredPointerInputModule : BaseInputModule
	{
		[Token(Token = "0x20005FA")]
		protected class MouseState
		{
			[Token(Token = "0x4002977")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private List<ButtonState> m_TrackedButtons;

			[Token(Token = "0x6002BDC")]
			[Address(RVA = "0xD8EB88", Offset = "0xD8EB88", VA = "0xD8EB88")]
			public bool AnyPressesThisFrame()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BDD")]
			[Address(RVA = "0xD8EC44", Offset = "0xD8EC44", VA = "0xD8EC44")]
			public bool AnyReleasesThisFrame()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BDE")]
			[Address(RVA = "0xD8ED00", Offset = "0xD8ED00", VA = "0xD8ED00")]
			public ButtonState GetButtonState(int button)
			{
				return null;
			}

			[Token(Token = "0x6002BDF")]
			[Address(RVA = "0xD8EE64", Offset = "0xD8EE64", VA = "0xD8EE64")]
			public void SetButtonState(int button, PointerEventData.FramePressState stateForMouseButton, PlayerPointerEventData data)
			{
			}

			[Token(Token = "0x6002BE0")]
			[Address(RVA = "0xD8EEA8", Offset = "0xD8EEA8", VA = "0xD8EEA8")]
			public MouseState()
			{
			}
		}

		[Token(Token = "0x20005FB")]
		public class MouseButtonEventData
		{
			[Token(Token = "0x4002978")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PointerEventData.FramePressState buttonState;

			[Token(Token = "0x4002979")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public PlayerPointerEventData buttonData;

			[Token(Token = "0x6002BE1")]
			[Address(RVA = "0xD8EB58", Offset = "0xD8EB58", VA = "0xD8EB58")]
			public bool PressedThisFrame()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BE2")]
			[Address(RVA = "0xD8EB6C", Offset = "0xD8EB6C", VA = "0xD8EB6C")]
			public bool ReleasedThisFrame()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BE3")]
			[Address(RVA = "0xD8EB80", Offset = "0xD8EB80", VA = "0xD8EB80")]
			public MouseButtonEventData()
			{
			}
		}

		[Token(Token = "0x20005FC")]
		protected class ButtonState
		{
			[Token(Token = "0x400297A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int m_Button;

			[Token(Token = "0x400297B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private MouseButtonEventData m_EventData;

			[Token(Token = "0x170004F6")]
			public MouseButtonEventData eventData
			{
				[Token(Token = "0x6002BE4")]
				[Address(RVA = "0xD8EB30", Offset = "0xD8EB30", VA = "0xD8EB30")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002BE5")]
				[Address(RVA = "0xD8EB38", Offset = "0xD8EB38", VA = "0xD8EB38")]
				set
				{
				}
			}

			[Token(Token = "0x170004F7")]
			public int button
			{
				[Token(Token = "0x6002BE6")]
				[Address(RVA = "0xD8EB40", Offset = "0xD8EB40", VA = "0xD8EB40")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6002BE7")]
				[Address(RVA = "0xD8EB48", Offset = "0xD8EB48", VA = "0xD8EB48")]
				set
				{
				}
			}

			[Token(Token = "0x6002BE8")]
			[Address(RVA = "0xD8EB50", Offset = "0xD8EB50", VA = "0xD8EB50")]
			public ButtonState()
			{
			}
		}

		[Token(Token = "0x20005FD")]
		private sealed class UnityInputSource : IMouseInputSource, ITouchInputSource
		{
			[Token(Token = "0x400297C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Vector2 m_MousePosition;

			[Token(Token = "0x400297D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Vector2 m_MousePositionPrev;

			[Token(Token = "0x400297E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int m_LastUpdatedFrame;

			[Token(Token = "0x170004F8")]
			private int Rewired.UI.IMouseInputSource.playerId
			{
				[Token(Token = "0x6002BE9")]
				[Address(RVA = "0xD8EF20", Offset = "0xD8EF20", VA = "0xD8EF20", Slot = "4")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x170004F9")]
			private int Rewired.UI.ITouchInputSource.playerId
			{
				[Token(Token = "0x6002BEA")]
				[Address(RVA = "0xD8EF88", Offset = "0xD8EF88", VA = "0xD8EF88", Slot = "14")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x170004FA")]
			private bool Rewired.UI.IMouseInputSource.enabled
			{
				[Token(Token = "0x6002BEB")]
				[Address(RVA = "0xD8EFA0", Offset = "0xD8EFA0", VA = "0xD8EFA0", Slot = "5")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170004FB")]
			private bool Rewired.UI.IMouseInputSource.locked
			{
				[Token(Token = "0x6002BEC")]
				[Address(RVA = "0xD8EFB8", Offset = "0xD8EFB8", VA = "0xD8EFB8", Slot = "6")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170004FC")]
			private int Rewired.UI.IMouseInputSource.buttonCount
			{
				[Token(Token = "0x6002BED")]
				[Address(RVA = "0xD8EFDC", Offset = "0xD8EFDC", VA = "0xD8EFDC", Slot = "7")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x170004FD")]
			private Vector2 Rewired.UI.IMouseInputSource.screenPosition
			{
				[Token(Token = "0x6002BF1")]
				[Address(RVA = "0xD8F06C", Offset = "0xD8F06C", VA = "0xD8F06C", Slot = "11")]
				get
				{
					return default(Vector2);
				}
			}

			[Token(Token = "0x170004FE")]
			private Vector2 Rewired.UI.IMouseInputSource.screenPositionDelta
			{
				[Token(Token = "0x6002BF2")]
				[Address(RVA = "0xD8F084", Offset = "0xD8F084", VA = "0xD8F084", Slot = "12")]
				get
				{
					return default(Vector2);
				}
			}

			[Token(Token = "0x170004FF")]
			private Vector2 Rewired.UI.IMouseInputSource.wheelDelta
			{
				[Token(Token = "0x6002BF3")]
				[Address(RVA = "0xD8F0B0", Offset = "0xD8F0B0", VA = "0xD8F0B0", Slot = "13")]
				get
				{
					return default(Vector2);
				}
			}

			[Token(Token = "0x17000500")]
			private bool Rewired.UI.ITouchInputSource.touchSupported
			{
				[Token(Token = "0x6002BF4")]
				[Address(RVA = "0xD8F0C8", Offset = "0xD8F0C8", VA = "0xD8F0C8", Slot = "15")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000501")]
			private int Rewired.UI.ITouchInputSource.touchCount
			{
				[Token(Token = "0x6002BF5")]
				[Address(RVA = "0xD8F0E0", Offset = "0xD8F0E0", VA = "0xD8F0E0", Slot = "16")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x6002BEE")]
			[Address(RVA = "0xD8EFF4", Offset = "0xD8EFF4", VA = "0xD8EFF4", Slot = "8")]
			private bool Rewired.UI.IMouseInputSource.GetButtonDown(int button)
			{
				return default(bool);
			}

			[Token(Token = "0x6002BEF")]
			[Address(RVA = "0xD8F01C", Offset = "0xD8F01C", VA = "0xD8F01C", Slot = "9")]
			private bool Rewired.UI.IMouseInputSource.GetButtonUp(int button)
			{
				return default(bool);
			}

			[Token(Token = "0x6002BF0")]
			[Address(RVA = "0xD8F044", Offset = "0xD8F044", VA = "0xD8F044", Slot = "10")]
			private bool Rewired.UI.IMouseInputSource.GetButton(int button)
			{
				return default(bool);
			}

			[Token(Token = "0x6002BF6")]
			[Address(RVA = "0xD8F0F8", Offset = "0xD8F0F8", VA = "0xD8F0F8", Slot = "17")]
			private Touch Rewired.UI.ITouchInputSource.GetTouch(int index)
			{
				return default(Touch);
			}

			[Token(Token = "0x6002BF7")]
			[Address(RVA = "0xD8EF38", Offset = "0xD8EF38", VA = "0xD8EF38")]
			private void TryUpdate()
			{
			}

			[Token(Token = "0x6002BF8")]
			[Address(RVA = "0xD8F144", Offset = "0xD8F144", VA = "0xD8F144")]
			public UnityInputSource()
			{
			}
		}

		[Token(Token = "0x400296B")]
		public const int kMouseLeftId = -1;

		[Token(Token = "0x400296C")]
		public const int kMouseRightId = -2;

		[Token(Token = "0x400296D")]
		public const int kMouseMiddleId = -3;

		[Token(Token = "0x400296E")]
		public const int kFakeTouchesId = -4;

		[Token(Token = "0x400296F")]
		private const int customButtonsStartingId = -2147483520;

		[Token(Token = "0x4002970")]
		private const int customButtonsMaxCount = 128;

		[Token(Token = "0x4002971")]
		private const int customButtonsLastId = -2147483392;

		[Token(Token = "0x4002972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly List<IMouseInputSource> m_MouseInputSourcesList;

		[Token(Token = "0x4002973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Dictionary<int, Dictionary<int, PlayerPointerEventData>[]> m_PlayerPointerData;

		[Token(Token = "0x4002974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ITouchInputSource m_UserDefaultTouchInputSource;

		[Token(Token = "0x4002975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private UnityInputSource __m_DefaultInputSource;

		[Token(Token = "0x4002976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private readonly MouseState m_MouseState;

		[Token(Token = "0x170004F2")]
		private UnityInputSource defaultInputSource
		{
			[Token(Token = "0x6002BBD")]
			[Address(RVA = "0xDB4560", Offset = "0xDB4560", VA = "0xDB4560")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004F3")]
		private IMouseInputSource defaultMouseInputSource
		{
			[Token(Token = "0x6002BBE")]
			[Address(RVA = "0xDB45C8", Offset = "0xDB45C8", VA = "0xDB45C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004F4")]
		protected ITouchInputSource defaultTouchInputSource
		{
			[Token(Token = "0x6002BBF")]
			[Address(RVA = "0xDB45CC", Offset = "0xDB45CC", VA = "0xDB45CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004F5")]
		protected virtual bool isMouseSupported
		{
			[Token(Token = "0x6002BCA")]
			[Address(RVA = "0xDB4DFC", Offset = "0xDB4DFC", VA = "0xDB4DFC", Slot = "26")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002BC0")]
		[Address(RVA = "0xDB45D0", Offset = "0xDB45D0", VA = "0xDB45D0")]
		protected bool IsDefaultMouse(IMouseInputSource mouse)
		{
			return default(bool);
		}

		[Token(Token = "0x6002BC1")]
		[Address(RVA = "0xDB45F8", Offset = "0xDB45F8", VA = "0xDB45F8")]
		public IMouseInputSource GetMouseInputSource(int playerId, int mouseIndex)
		{
			return null;
		}

		[Token(Token = "0x6002BC2")]
		[Address(RVA = "0xDB482C", Offset = "0xDB482C", VA = "0xDB482C")]
		public void RemoveMouseInputSource(IMouseInputSource source)
		{
		}

		[Token(Token = "0x6002BC3")]
		[Address(RVA = "0xDB48DC", Offset = "0xDB48DC", VA = "0xDB48DC")]
		public void AddMouseInputSource(IMouseInputSource source)
		{
		}

		[Token(Token = "0x6002BC4")]
		[Address(RVA = "0xDB49D8", Offset = "0xDB49D8", VA = "0xDB49D8")]
		public int GetMouseInputSourceCount(int playerId)
		{
			return default(int);
		}

		[Token(Token = "0x6002BC5")]
		[Address(RVA = "0xDB4BA8", Offset = "0xDB4BA8", VA = "0xDB4BA8")]
		public ITouchInputSource GetTouchInputSource(int playerId, int sourceIndex)
		{
			return null;
		}

		[Token(Token = "0x6002BC6")]
		[Address(RVA = "0xDB4C3C", Offset = "0xDB4C3C", VA = "0xDB4C3C")]
		public void RemoveTouchInputSource(ITouchInputSource source)
		{
		}

		[Token(Token = "0x6002BC7")]
		[Address(RVA = "0xDB4CAC", Offset = "0xDB4CAC", VA = "0xDB4CAC")]
		public void AddTouchInputSource(ITouchInputSource source)
		{
		}

		[Token(Token = "0x6002BC8")]
		[Address(RVA = "0xDB4D84", Offset = "0xDB4D84", VA = "0xDB4D84")]
		public int GetTouchInputSourceCount(int playerId)
		{
			return default(int);
		}

		[Token(Token = "0x6002BC9")]
		[Address(RVA = "0xDB4DA8", Offset = "0xDB4DA8", VA = "0xDB4DA8")]
		protected void ClearMouseInputSources()
		{
		}

		[Token(Token = "0x6002BCB")]
		protected abstract bool IsDefaultPlayer(int playerId);

		[Token(Token = "0x6002BCC")]
		[Address(RVA = "0xDB4FC4", Offset = "0xDB4FC4", VA = "0xDB4FC4")]
		protected bool GetPointerData(int playerId, int pointerIndex, int pointerTypeId, out PlayerPointerEventData data, bool create, PointerEventType pointerEventType)
		{
			return default(bool);
		}

		[Token(Token = "0x6002BCD")]
		[Address(RVA = "0xDB5390", Offset = "0xDB5390", VA = "0xDB5390")]
		private PlayerPointerEventData CreatePointerEventData(int playerId, int pointerIndex, int pointerTypeId, PointerEventType pointerEventType)
		{
			return null;
		}

		[Token(Token = "0x6002BCE")]
		[Address(RVA = "0xDB5488", Offset = "0xDB5488", VA = "0xDB5488")]
		protected void RemovePointerData(PlayerPointerEventData data)
		{
		}

		[Token(Token = "0x6002BCF")]
		[Address(RVA = "0xDB5544", Offset = "0xDB5544", VA = "0xDB5544")]
		protected PlayerPointerEventData GetTouchPointerEventData(int playerId, int touchDeviceIndex, Touch input, out bool pressed, out bool released)
		{
			return null;
		}

		[Token(Token = "0x6002BD0")]
		[Address(RVA = "0xDB5778", Offset = "0xDB5778", VA = "0xDB5778", Slot = "28")]
		protected virtual MouseState GetMousePointerEventData(int playerId, int mouseIndex)
		{
			return null;
		}

		[Token(Token = "0x6002BD1")]
		[Address(RVA = "0xDB5FD0", Offset = "0xDB5FD0", VA = "0xDB5FD0")]
		protected PlayerPointerEventData GetLastPointerEventData(int playerId, int pointerIndex, int pointerTypeId, bool ignorePointerTypeId, PointerEventType pointerEventType)
		{
			return null;
		}

		[Token(Token = "0x6002BD2")]
		[Address(RVA = "0xDB6190", Offset = "0xDB6190", VA = "0xDB6190")]
		private static bool ShouldStartDrag(Vector2 pressPos, Vector2 currentPos, float threshold, bool useDragThreshold)
		{
			return default(bool);
		}

		[Token(Token = "0x6002BD3")]
		[Address(RVA = "0xDB61E0", Offset = "0xDB61E0", VA = "0xDB61E0", Slot = "29")]
		protected virtual void ProcessMove(PlayerPointerEventData pointerEvent)
		{
		}

		[Token(Token = "0x6002BD4")]
		[Address(RVA = "0xDB637C", Offset = "0xDB637C", VA = "0xDB637C", Slot = "30")]
		protected virtual void ProcessDrag(PlayerPointerEventData pointerEvent)
		{
		}

		[Token(Token = "0x6002BD5")]
		[Address(RVA = "0xDB6774", Offset = "0xDB6774", VA = "0xDB6774", Slot = "20")]
		public override bool IsPointerOverGameObject(int pointerTypeId)
		{
			return default(bool);
		}

		[Token(Token = "0x6002BD6")]
		[Address(RVA = "0xDB69C0", Offset = "0xDB69C0", VA = "0xDB69C0")]
		protected void ClearSelection()
		{
		}

		[Token(Token = "0x6002BD7")]
		[Address(RVA = "0xDB6D58", Offset = "0xDB6D58", VA = "0xDB6D58", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6002BD8")]
		[Address(RVA = "0xDB7238", Offset = "0xDB7238", VA = "0xDB7238")]
		protected void DeselectIfSelectionChanged(GameObject currentOverGo, BaseEventData pointerEvent)
		{
		}

		[Token(Token = "0x6002BD9")]
		[Address(RVA = "0xDB5DFC", Offset = "0xDB5DFC", VA = "0xDB5DFC")]
		protected void CopyFromTo(PointerEventData from, PointerEventData to)
		{
		}

		[Token(Token = "0x6002BDA")]
		[Address(RVA = "0xDB5E58", Offset = "0xDB5E58", VA = "0xDB5E58")]
		protected PointerEventData.FramePressState StateForMouseButton(int playerId, int mouseIndex, int buttonId)
		{
			return default(PointerEventData.FramePressState);
		}

		[Token(Token = "0x6002BDB")]
		[Address(RVA = "0xDB733C", Offset = "0xDB733C", VA = "0xDB733C")]
		protected RewiredPointerInputModule()
		{
		}
	}
	[Token(Token = "0x20005FE")]
	public enum PointerEventType
	{
		[Token(Token = "0x4002980")]
		Mouse,
		[Token(Token = "0x4002981")]
		Touch
	}
	[Token(Token = "0x20005FF")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x919340", Offset = "0x919340")]
	public sealed class RewiredStandaloneInputModule : RewiredPointerInputModule
	{
		[Serializable]
		[Token(Token = "0x2000600")]
		public class PlayerSetting
		{
			[Token(Token = "0x40029A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int playerId;

			[Token(Token = "0x40029A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<Rewired.Components.PlayerMouse> playerMice;

			[Token(Token = "0x6002C54")]
			[Address(RVA = "0xD8F154", Offset = "0xD8F154", VA = "0xD8F154")]
			public PlayerSetting()
			{
			}

			[Token(Token = "0x6002C55")]
			[Address(RVA = "0xD8F1CC", Offset = "0xD8F1CC", VA = "0xD8F1CC")]
			private PlayerSetting(PlayerSetting other)
			{
			}

			[Token(Token = "0x6002C56")]
			[Address(RVA = "0xD8F3C4", Offset = "0xD8F3C4", VA = "0xD8F3C4")]
			public PlayerSetting Clone()
			{
				return null;
			}
		}

		[Token(Token = "0x4002982")]
		private const string DEFAULT_ACTION_MOVE_HORIZONTAL = "UIHorizontal";

		[Token(Token = "0x4002983")]
		private const string DEFAULT_ACTION_MOVE_VERTICAL = "UIVertical";

		[Token(Token = "0x4002984")]
		private const string DEFAULT_ACTION_SUBMIT = "UISubmit";

		[Token(Token = "0x4002985")]
		private const string DEFAULT_ACTION_CANCEL = "UICancel";

		[Token(Token = "0x4002986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91E410", Offset = "0x91E410")]
		[SerializeField]
		private InputManager_Base rewiredInputManager;

		[Token(Token = "0x4002987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91E45C", Offset = "0x91E45C")]
		private bool useAllRewiredGamePlayers;

		[Token(Token = "0x4002988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91E4A8", Offset = "0x91E4A8")]
		private bool useRewiredSystemPlayer;

		[Token(Token = "0x4002989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91E4F4", Offset = "0x91E4F4")]
		[SerializeField]
		private int[] rewiredPlayerIds;

		[Token(Token = "0x400298A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91E540", Offset = "0x91E540")]
		[SerializeField]
		private bool usePlayingPlayersOnly;

		[Token(Token = "0x400298B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91E58C", Offset = "0x91E58C")]
		[SerializeField]
		private List<Rewired.Components.PlayerMouse> playerMice;

		[Token(Token = "0x400298C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91E5D8", Offset = "0x91E5D8")]
		[SerializeField]
		private bool moveOneElementPerAxisPress;

		[Token(Token = "0x400298D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91E624", Offset = "0x91E624")]
		private bool setActionsById;

		[Token(Token = "0x400298E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91E670", Offset = "0x91E670")]
		private int horizontalActionId;

		[Token(Token = "0x400298F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91E6BC", Offset = "0x91E6BC")]
		[SerializeField]
		private int verticalActionId;

		[Token(Token = "0x4002990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91E708", Offset = "0x91E708")]
		private int submitActionId;

		[Token(Token = "0x4002991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91E754", Offset = "0x91E754")]
		[SerializeField]
		private int cancelActionId;

		[Token(Token = "0x4002992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91E7A0", Offset = "0x91E7A0")]
		private string m_HorizontalAxis;

		[Token(Token = "0x4002993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91E7EC", Offset = "0x91E7EC")]
		private string m_VerticalAxis;

		[Token(Token = "0x4002994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91E838", Offset = "0x91E838")]
		private string m_SubmitButton;

		[Token(Token = "0x4002995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91E884", Offset = "0x91E884")]
		private string m_CancelButton;

		[Token(Token = "0x4002996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91E8D0", Offset = "0x91E8D0")]
		private float m_InputActionsPerSecond;

		[Token(Token = "0x4002997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91E91C", Offset = "0x91E91C")]
		private float m_RepeatDelay;

		[Token(Token = "0x4002998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91E968", Offset = "0x91E968")]
		private bool m_allowMouseInput;

		[Token(Token = "0x4002999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91E9B4", Offset = "0x91E9B4")]
		private bool m_allowMouseInputIfTouchSupported;

		[Token(Token = "0x400299A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDA")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91EA00", Offset = "0x91EA00")]
		private bool m_allowTouchInput;

		[Token(Token = "0x400299B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDB")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91EA4C", Offset = "0x91EA4C")]
		private bool m_deselectIfBackgroundClicked;

		[Token(Token = "0x400299C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91EA98", Offset = "0x91EA98")]
		private bool m_deselectBeforeSelecting;

		[Token(Token = "0x400299D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDD")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x91EAE4", Offset = "0x91EAE4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91EAE4", Offset = "0x91EAE4")]
		[SerializeField]
		private bool m_ForceModuleActive;

		[NonSerialized]
		[Token(Token = "0x400299E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private int[] playerIds;

		[Token(Token = "0x400299F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private bool recompiling;

		[NonSerialized]
		[Token(Token = "0x40029A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE9")]
		private bool isTouchSupported;

		[NonSerialized]
		[Token(Token = "0x40029A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private double m_PrevActionTime;

		[NonSerialized]
		[Token(Token = "0x40029A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Vector2 m_LastMoveVector;

		[NonSerialized]
		[Token(Token = "0x40029A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private int m_ConsecutiveMoveCount;

		[NonSerialized]
		[Token(Token = "0x40029A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private bool m_HasFocus;

		[Token(Token = "0x17000502")]
		public InputManager_Base RewiredInputManager
		{
			[Token(Token = "0x6002BF9")]
			[Address(RVA = "0xDB7420", Offset = "0xDB7420", VA = "0xDB7420")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002BFA")]
			[Address(RVA = "0xDB7428", Offset = "0xDB7428", VA = "0xDB7428")]
			set
			{
			}
		}

		[Token(Token = "0x17000503")]
		public bool UseAllRewiredGamePlayers
		{
			[Token(Token = "0x6002BFB")]
			[Address(RVA = "0xDB7430", Offset = "0xDB7430", VA = "0xDB7430")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002BFC")]
			[Address(RVA = "0xDB7438", Offset = "0xDB7438", VA = "0xDB7438")]
			set
			{
			}
		}

		[Token(Token = "0x17000504")]
		public bool UseRewiredSystemPlayer
		{
			[Token(Token = "0x6002BFD")]
			[Address(RVA = "0xDB7968", Offset = "0xDB7968", VA = "0xDB7968")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002BFE")]
			[Address(RVA = "0xDB7970", Offset = "0xDB7970", VA = "0xDB7970")]
			set
			{
			}
		}

		[Token(Token = "0x17000505")]
		public int[] RewiredPlayerIds
		{
			[Token(Token = "0x6002BFF")]
			[Address(RVA = "0xDB7994", Offset = "0xDB7994", VA = "0xDB7994")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002C00")]
			[Address(RVA = "0xDB7A10", Offset = "0xDB7A10", VA = "0xDB7A10")]
			set
			{
			}
		}

		[Token(Token = "0x17000506")]
		public bool UsePlayingPlayersOnly
		{
			[Token(Token = "0x6002C01")]
			[Address(RVA = "0xDB7AB8", Offset = "0xDB7AB8", VA = "0xDB7AB8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002C02")]
			[Address(RVA = "0xDB7AC0", Offset = "0xDB7AC0", VA = "0xDB7AC0")]
			set
			{
			}
		}

		[Token(Token = "0x17000507")]
		public List<Rewired.Components.PlayerMouse> PlayerMice
		{
			[Token(Token = "0x6002C03")]
			[Address(RVA = "0xDB7ACC", Offset = "0xDB7ACC", VA = "0xDB7ACC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002C04")]
			[Address(RVA = "0xDB7B44", Offset = "0xDB7B44", VA = "0xDB7B44")]
			set
			{
			}
		}

		[Token(Token = "0x17000508")]
		public bool MoveOneElementPerAxisPress
		{
			[Token(Token = "0x6002C05")]
			[Address(RVA = "0xDB7BF4", Offset = "0xDB7BF4", VA = "0xDB7BF4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002C06")]
			[Address(RVA = "0xDB7BFC", Offset = "0xDB7BFC", VA = "0xDB7BFC")]
			set
			{
			}
		}

		[Token(Token = "0x17000509")]
		public bool allowMouseInput
		{
			[Token(Token = "0x6002C07")]
			[Address(RVA = "0xDB7C08", Offset = "0xDB7C08", VA = "0xDB7C08")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002C08")]
			[Address(RVA = "0xDB7C10", Offset = "0xDB7C10", VA = "0xDB7C10")]
			set
			{
			}
		}

		[Token(Token = "0x1700050A")]
		public bool allowMouseInputIfTouchSupported
		{
			[Token(Token = "0x6002C09")]
			[Address(RVA = "0xDB7C1C", Offset = "0xDB7C1C", VA = "0xDB7C1C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002C0A")]
			[Address(RVA = "0xDB7C24", Offset = "0xDB7C24", VA = "0xDB7C24")]
			set
			{
			}
		}

		[Token(Token = "0x1700050B")]
		public bool allowTouchInput
		{
			[Token(Token = "0x6002C0B")]
			[Address(RVA = "0xDB7C30", Offset = "0xDB7C30", VA = "0xDB7C30")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002C0C")]
			[Address(RVA = "0xDB7C38", Offset = "0xDB7C38", VA = "0xDB7C38")]
			set
			{
			}
		}

		[Token(Token = "0x1700050C")]
		public bool deselectIfBackgroundClicked
		{
			[Token(Token = "0x6002C0D")]
			[Address(RVA = "0xDB7C44", Offset = "0xDB7C44", VA = "0xDB7C44")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002C0E")]
			[Address(RVA = "0xDB7C4C", Offset = "0xDB7C4C", VA = "0xDB7C4C")]
			set
			{
			}
		}

		[Token(Token = "0x1700050D")]
		private bool deselectBeforeSelecting
		{
			[Token(Token = "0x6002C0F")]
			[Address(RVA = "0xDB7C58", Offset = "0xDB7C58", VA = "0xDB7C58")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002C10")]
			[Address(RVA = "0xDB7C60", Offset = "0xDB7C60", VA = "0xDB7C60")]
			set
			{
			}
		}

		[Token(Token = "0x1700050E")]
		public bool SetActionsById
		{
			[Token(Token = "0x6002C11")]
			[Address(RVA = "0xDB7C6C", Offset = "0xDB7C6C", VA = "0xDB7C6C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002C12")]
			[Address(RVA = "0xDB7C74", Offset = "0xDB7C74", VA = "0xDB7C74")]
			set
			{
			}
		}

		[Token(Token = "0x1700050F")]
		public int HorizontalActionId
		{
			[Token(Token = "0x6002C13")]
			[Address(RVA = "0xDB7C98", Offset = "0xDB7C98", VA = "0xDB7C98")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002C14")]
			[Address(RVA = "0xDB7CA0", Offset = "0xDB7CA0", VA = "0xDB7CA0")]
			set
			{
			}
		}

		[Token(Token = "0x17000510")]
		public int VerticalActionId
		{
			[Token(Token = "0x6002C15")]
			[Address(RVA = "0xDB7DF4", Offset = "0xDB7DF4", VA = "0xDB7DF4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002C16")]
			[Address(RVA = "0xDB7DFC", Offset = "0xDB7DFC", VA = "0xDB7DFC")]
			set
			{
			}
		}

		[Token(Token = "0x17000511")]
		public int SubmitActionId
		{
			[Token(Token = "0x6002C17")]
			[Address(RVA = "0xDB7F50", Offset = "0xDB7F50", VA = "0xDB7F50")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002C18")]
			[Address(RVA = "0xDB7F58", Offset = "0xDB7F58", VA = "0xDB7F58")]
			set
			{
			}
		}

		[Token(Token = "0x17000512")]
		public int CancelActionId
		{
			[Token(Token = "0x6002C19")]
			[Address(RVA = "0xDB80AC", Offset = "0xDB80AC", VA = "0xDB80AC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002C1A")]
			[Address(RVA = "0xDB80B4", Offset = "0xDB80B4", VA = "0xDB80B4")]
			set
			{
			}
		}

		[Token(Token = "0x17000513")]
		protected override bool isMouseSupported
		{
			[Token(Token = "0x6002C1B")]
			[Address(RVA = "0xDB8208", Offset = "0xDB8208", VA = "0xDB8208", Slot = "26")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000514")]
		private bool isTouchAllowed
		{
			[Token(Token = "0x6002C1C")]
			[Address(RVA = "0xDB8258", Offset = "0xDB8258", VA = "0xDB8258")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000515")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x932E80", Offset = "0x932E80")]
		public bool allowActivationOnMobileDevice
		{
			[Token(Token = "0x6002C1D")]
			[Address(RVA = "0xDB8260", Offset = "0xDB8260", VA = "0xDB8260")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002C1E")]
			[Address(RVA = "0xDB8268", Offset = "0xDB8268", VA = "0xDB8268")]
			set
			{
			}
		}

		[Token(Token = "0x17000516")]
		public bool forceModuleActive
		{
			[Token(Token = "0x6002C1F")]
			[Address(RVA = "0xDB8274", Offset = "0xDB8274", VA = "0xDB8274")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002C20")]
			[Address(RVA = "0xDB827C", Offset = "0xDB827C", VA = "0xDB827C")]
			set
			{
			}
		}

		[Token(Token = "0x17000517")]
		public float inputActionsPerSecond
		{
			[Token(Token = "0x6002C21")]
			[Address(RVA = "0xDB8288", Offset = "0xDB8288", VA = "0xDB8288")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002C22")]
			[Address(RVA = "0xDB8290", Offset = "0xDB8290", VA = "0xDB8290")]
			set
			{
			}
		}

		[Token(Token = "0x17000518")]
		public float repeatDelay
		{
			[Token(Token = "0x6002C23")]
			[Address(RVA = "0xDB8298", Offset = "0xDB8298", VA = "0xDB8298")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002C24")]
			[Address(RVA = "0xDB82A0", Offset = "0xDB82A0", VA = "0xDB82A0")]
			set
			{
			}
		}

		[Token(Token = "0x17000519")]
		public string horizontalAxis
		{
			[Token(Token = "0x6002C25")]
			[Address(RVA = "0xDB82A8", Offset = "0xDB82A8", VA = "0xDB82A8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002C26")]
			[Address(RVA = "0xDB82B0", Offset = "0xDB82B0", VA = "0xDB82B0")]
			set
			{
			}
		}

		[Token(Token = "0x1700051A")]
		public string verticalAxis
		{
			[Token(Token = "0x6002C27")]
			[Address(RVA = "0xDB83AC", Offset = "0xDB83AC", VA = "0xDB83AC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002C28")]
			[Address(RVA = "0xDB83B4", Offset = "0xDB83B4", VA = "0xDB83B4")]
			set
			{
			}
		}

		[Token(Token = "0x1700051B")]
		public string submitButton
		{
			[Token(Token = "0x6002C29")]
			[Address(RVA = "0xDB84B0", Offset = "0xDB84B0", VA = "0xDB84B0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002C2A")]
			[Address(RVA = "0xDB84B8", Offset = "0xDB84B8", VA = "0xDB84B8")]
			set
			{
			}
		}

		[Token(Token = "0x1700051C")]
		public string cancelButton
		{
			[Token(Token = "0x6002C2B")]
			[Address(RVA = "0xDB85B4", Offset = "0xDB85B4", VA = "0xDB85B4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002C2C")]
			[Address(RVA = "0xDB85BC", Offset = "0xDB85BC", VA = "0xDB85BC")]
			set
			{
			}
		}

		[Token(Token = "0x6002C2D")]
		[Address(RVA = "0xDB86B8", Offset = "0xDB86B8", VA = "0xDB86B8")]
		private RewiredStandaloneInputModule()
		{
		}

		[Token(Token = "0x6002C2E")]
		[Address(RVA = "0xDB87F0", Offset = "0xDB87F0", VA = "0xDB87F0", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002C2F")]
		[Address(RVA = "0xDB8BC4", Offset = "0xDB8BC4", VA = "0xDB8BC4", Slot = "24")]
		public override void UpdateModule()
		{
		}

		[Token(Token = "0x6002C30")]
		[Address(RVA = "0xDB8E3C", Offset = "0xDB8E3C", VA = "0xDB8E3C", Slot = "25")]
		public override bool IsModuleSupported()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C31")]
		[Address(RVA = "0xDB8E44", Offset = "0xDB8E44", VA = "0xDB8E44", Slot = "21")]
		public override bool ShouldActivateModule()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C32")]
		[Address(RVA = "0xDB9710", Offset = "0xDB9710", VA = "0xDB9710", Slot = "23")]
		public override void ActivateModule()
		{
		}

		[Token(Token = "0x6002C33")]
		[Address(RVA = "0xDB97F8", Offset = "0xDB97F8", VA = "0xDB97F8", Slot = "22")]
		public override void DeactivateModule()
		{
		}

		[Token(Token = "0x6002C34")]
		[Address(RVA = "0xDB9820", Offset = "0xDB9820", VA = "0xDB9820", Slot = "17")]
		public override void Process()
		{
		}

		[Token(Token = "0x6002C35")]
		[Address(RVA = "0xDBA0AC", Offset = "0xDBA0AC", VA = "0xDBA0AC")]
		private bool ProcessTouchEvents()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C36")]
		[Address(RVA = "0xDBA4B4", Offset = "0xDBA4B4", VA = "0xDBA4B4")]
		private void ProcessTouchPress(PointerEventData pointerEvent, bool pressed, bool released)
		{
		}

		[Token(Token = "0x6002C37")]
		[Address(RVA = "0xDB9DD0", Offset = "0xDB9DD0", VA = "0xDB9DD0")]
		private bool SendSubmitEventToSelectedObject()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C38")]
		[Address(RVA = "0xDBAEA4", Offset = "0xDBAEA4", VA = "0xDBAEA4")]
		private Vector2 GetRawMoveVector()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002C39")]
		[Address(RVA = "0xDB9AE0", Offset = "0xDB9AE0", VA = "0xDB9AE0")]
		private bool SendMoveEventToSelectedObject()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C3A")]
		[Address(RVA = "0xDBB1CC", Offset = "0xDBB1CC", VA = "0xDBB1CC")]
		private void CheckButtonOrKeyMovement(out bool downHorizontal, out bool downVertical)
		{
		}

		[Token(Token = "0x6002C3B")]
		[Address(RVA = "0xDBA364", Offset = "0xDBA364", VA = "0xDBA364")]
		private void ProcessMouseEvents()
		{
		}

		[Token(Token = "0x6002C3C")]
		[Address(RVA = "0xDBB36C", Offset = "0xDBB36C", VA = "0xDBB36C")]
		private void ProcessMouseEvent(int playerId, int pointerIndex)
		{
		}

		[Token(Token = "0x6002C3D")]
		[Address(RVA = "0xDB997C", Offset = "0xDB997C", VA = "0xDB997C")]
		private bool SendUpdateEventToSelectedObject()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C3E")]
		[Address(RVA = "0xDBB6D0", Offset = "0xDBB6D0", VA = "0xDBB6D0")]
		private void ProcessMousePress(MouseButtonEventData data)
		{
		}

		[Token(Token = "0x6002C3F")]
		[Address(RVA = "0xDBACC4", Offset = "0xDBACC4", VA = "0xDBACC4")]
		private void HandleMouseTouchDeselectionOnSelectionChanged(GameObject currentOverGo, BaseEventData pointerEvent)
		{
		}

		[Token(Token = "0x6002C40")]
		[Address(RVA = "0xDBBE04", Offset = "0xDBBE04", VA = "0xDBBE04")]
		private void OnApplicationFocus(bool hasFocus)
		{
		}

		[Token(Token = "0x6002C41")]
		[Address(RVA = "0xDB8D64", Offset = "0xDB8D64", VA = "0xDB8D64")]
		private bool ShouldIgnoreEventsOnNoFocus()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C42")]
		[Address(RVA = "0xDBBE10", Offset = "0xDBBE10", VA = "0xDBBE10", Slot = "8")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6002C43")]
		[Address(RVA = "0xDBBF44", Offset = "0xDBBF44", VA = "0xDBBF44", Slot = "27")]
		protected override bool IsDefaultPlayer(int playerId)
		{
			return default(bool);
		}

		[Token(Token = "0x6002C44")]
		[Address(RVA = "0xDB89BC", Offset = "0xDB89BC", VA = "0xDB89BC")]
		private void InitializeRewired()
		{
		}

		[Token(Token = "0x6002C45")]
		[Address(RVA = "0xDB745C", Offset = "0xDB745C", VA = "0xDB745C")]
		private void SetupRewiredVars()
		{
		}

		[Token(Token = "0x6002C46")]
		[Address(RVA = "0xDBC3C0", Offset = "0xDBC3C0", VA = "0xDBC3C0")]
		private void SetUpRewiredPlayerMice()
		{
		}

		[Token(Token = "0x6002C47")]
		[Address(RVA = "0xDBC10C", Offset = "0xDBC10C", VA = "0xDBC10C")]
		private void SetUpRewiredActions()
		{
		}

		[Token(Token = "0x6002C48")]
		[Address(RVA = "0xDBB174", Offset = "0xDBB174", VA = "0xDBB174")]
		private bool GetButton(Player player, int actionId)
		{
			return default(bool);
		}

		[Token(Token = "0x6002C49")]
		[Address(RVA = "0xDB92FC", Offset = "0xDB92FC", VA = "0xDB92FC")]
		private bool GetButtonDown(Player player, int actionId)
		{
			return default(bool);
		}

		[Token(Token = "0x6002C4A")]
		[Address(RVA = "0xDBB1A0", Offset = "0xDBB1A0", VA = "0xDBB1A0")]
		private bool GetNegativeButton(Player player, int actionId)
		{
			return default(bool);
		}

		[Token(Token = "0x6002C4B")]
		[Address(RVA = "0xDB9328", Offset = "0xDB9328", VA = "0xDB9328")]
		private bool GetNegativeButtonDown(Player player, int actionId)
		{
			return default(bool);
		}

		[Token(Token = "0x6002C4C")]
		[Address(RVA = "0xDB9354", Offset = "0xDB9354", VA = "0xDB9354")]
		private float GetAxis(Player player, int actionId)
		{
			return default(float);
		}

		[Token(Token = "0x6002C4D")]
		[Address(RVA = "0xDB8C98", Offset = "0xDB8C98", VA = "0xDB8C98")]
		private void CheckEditorRecompile()
		{
		}

		[Token(Token = "0x6002C4E")]
		[Address(RVA = "0xDBC538", Offset = "0xDBC538", VA = "0xDBC538")]
		private void OnEditorRecompile()
		{
		}

		[Token(Token = "0x6002C4F")]
		[Address(RVA = "0xDBC544", Offset = "0xDBC544", VA = "0xDBC544")]
		private void ClearRewiredVars()
		{
		}

		[Token(Token = "0x6002C50")]
		[Address(RVA = "0xDB9380", Offset = "0xDB9380", VA = "0xDB9380")]
		private bool DidAnyMouseMove()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C51")]
		[Address(RVA = "0xDB9550", Offset = "0xDB9550", VA = "0xDB9550")]
		private bool GetMouseButtonDownOnAnyMouse(int buttonIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6002C52")]
		[Address(RVA = "0xDBC580", Offset = "0xDBC580", VA = "0xDBC580")]
		private void OnRewiredInitialized()
		{
		}

		[Token(Token = "0x6002C53")]
		[Address(RVA = "0xDBC584", Offset = "0xDBC584", VA = "0xDBC584")]
		private void OnRewiredShutDown()
		{
		}
	}
}
namespace Rewired.UI.ControlMapper
{
	[Token(Token = "0x2000601")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x919378", Offset = "0x919378")]
	public class ButtonInfo : UIElementInfo
	{
		[Token(Token = "0x6002C57")]
		[Address(RVA = "0xC27074", Offset = "0xC27074", VA = "0xC27074")]
		public ButtonInfo()
		{
		}
	}
	[Token(Token = "0x2000602")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9193B0", Offset = "0x9193B0")]
	public class CalibrationWindow : Window
	{
		[Token(Token = "0x2000603")]
		public enum ButtonIdentifier
		{
			[Token(Token = "0x40029CC")]
			Done,
			[Token(Token = "0x40029CD")]
			Cancel,
			[Token(Token = "0x40029CE")]
			Default,
			[Token(Token = "0x40029CF")]
			Calibrate
		}

		[Token(Token = "0x2000604")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9193E8", Offset = "0x9193E8")]
		private sealed class <>c__DisplayClass41_0
		{
			[Token(Token = "0x40029D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int index;

			[Token(Token = "0x40029D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Button button;

			[Token(Token = "0x40029D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CalibrationWindow <>4__this;

			[Token(Token = "0x6002C7B")]
			[Address(RVA = "0xBDC5D8", Offset = "0xBDC5D8", VA = "0xBDC5D8")]
			public <>c__DisplayClass41_0()
			{
			}

			[Token(Token = "0x6002C7C")]
			[Address(RVA = "0xBDC5E0", Offset = "0xBDC5E0", VA = "0xBDC5E0")]
			internal void <SetJoystick>b__0()
			{
			}
		}

		[Token(Token = "0x40029A7")]
		private const float minSensitivityOtherAxes = 0.1f;

		[Token(Token = "0x40029A8")]
		private const float maxDeadzone = 0.8f;

		[Token(Token = "0x40029A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private RectTransform rightContentContainer;

		[Token(Token = "0x40029AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private RectTransform valueDisplayGroup;

		[Token(Token = "0x40029AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private RectTransform calibratedValueMarker;

		[Token(Token = "0x40029AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private RectTransform rawValueMarker;

		[Token(Token = "0x40029AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private RectTransform calibratedZeroMarker;

		[Token(Token = "0x40029AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private RectTransform deadzoneArea;

		[Token(Token = "0x40029AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private Slider deadzoneSlider;

		[Token(Token = "0x40029B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private Slider zeroSlider;

		[Token(Token = "0x40029B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private Slider sensitivitySlider;

		[Token(Token = "0x40029B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private Toggle invertToggle;

		[Token(Token = "0x40029B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private RectTransform axisScrollAreaContent;

		[Token(Token = "0x40029B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private Button doneButton;

		[Token(Token = "0x40029B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private Button calibrateButton;

		[Token(Token = "0x40029B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private Text doneButtonLabel;

		[Token(Token = "0x40029B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private Text cancelButtonLabel;

		[Token(Token = "0x40029B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private Text defaultButtonLabel;

		[Token(Token = "0x40029B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private Text deadzoneSliderLabel;

		[Token(Token = "0x40029BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private Text zeroSliderLabel;

		[Token(Token = "0x40029BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private Text sensitivitySliderLabel;

		[Token(Token = "0x40029BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private Text invertToggleLabel;

		[Token(Token = "0x40029BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private Text calibrateButtonLabel;

		[Token(Token = "0x40029BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private GameObject axisButtonPrefab;

		[Token(Token = "0x40029BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private Joystick joystick;

		[Token(Token = "0x40029C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private string origCalibrationData;

		[Token(Token = "0x40029C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private int selectedAxis;

		[Token(Token = "0x40029C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private AxisCalibrationData origSelectedAxisCalibrationData;

		[Token(Token = "0x40029C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private float displayAreaWidth;

		[Token(Token = "0x40029C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private List<Button> axisButtons;

		[Token(Token = "0x40029C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private Dictionary<int, Action<int>> buttonCallbacks;

		[Token(Token = "0x40029C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private int playerId;

		[Token(Token = "0x40029C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private RewiredStandaloneInputModule rewiredStandaloneInputModule;

		[Token(Token = "0x40029C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private int menuHorizActionId;

		[Token(Token = "0x40029C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		private int menuVertActionId;

		[Token(Token = "0x40029CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private float minSensitivity;

		[Token(Token = "0x1700051D")]
		private bool axisSelected
		{
			[Token(Token = "0x6002C58")]
			[Address(RVA = "0xC2F090", Offset = "0xC2F090", VA = "0xC2F090")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700051E")]
		private AxisCalibration axisCalibration
		{
			[Token(Token = "0x6002C59")]
			[Address(RVA = "0xC2F0E4", Offset = "0xC2F0E4", VA = "0xC2F0E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C5A")]
		[Address(RVA = "0xC2F138", Offset = "0xC2F138", VA = "0xC2F138", Slot = "5")]
		public override void Initialize(int id, Func<int, bool> isFocusedCallback)
		{
		}

		[Token(Token = "0x6002C5B")]
		[Address(RVA = "0xC2F884", Offset = "0xC2F884", VA = "0xC2F884")]
		public void SetJoystick(int playerId, Joystick joystick)
		{
		}

		[Token(Token = "0x6002C5C")]
		[Address(RVA = "0xC30258", Offset = "0xC30258", VA = "0xC30258")]
		public void SetButtonCallback(ButtonIdentifier buttonIdentifier, Action<int> callback)
		{
		}

		[Token(Token = "0x6002C5D")]
		[Address(RVA = "0xC30344", Offset = "0xC30344", VA = "0xC30344", Slot = "9")]
		public override void Cancel()
		{
		}

		[Token(Token = "0x6002C5E")]
		[Address(RVA = "0xC3040C", Offset = "0xC3040C", VA = "0xC3040C", Slot = "4")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6002C5F")]
		[Address(RVA = "0xC30444", Offset = "0xC30444", VA = "0xC30444")]
		public void OnDone()
		{
		}

		[Token(Token = "0x6002C60")]
		[Address(RVA = "0xC304E4", Offset = "0xC304E4", VA = "0xC304E4")]
		public void OnCancel()
		{
		}

		[Token(Token = "0x6002C61")]
		[Address(RVA = "0xC304F0", Offset = "0xC304F0", VA = "0xC304F0")]
		public void OnRestoreDefault()
		{
		}

		[Token(Token = "0x6002C62")]
		[Address(RVA = "0xC30554", Offset = "0xC30554", VA = "0xC30554")]
		public void OnCalibrate()
		{
		}

		[Token(Token = "0x6002C63")]
		[Address(RVA = "0xC305F4", Offset = "0xC305F4", VA = "0xC305F4")]
		public void OnInvert(bool state)
		{
		}

		[Token(Token = "0x6002C64")]
		[Address(RVA = "0xC3063C", Offset = "0xC3063C", VA = "0xC3063C")]
		public void OnZeroValueChange(float value)
		{
		}

		[Token(Token = "0x6002C65")]
		[Address(RVA = "0xC3073C", Offset = "0xC3073C", VA = "0xC3073C")]
		public void OnZeroCancel()
		{
		}

		[Token(Token = "0x6002C66")]
		[Address(RVA = "0xC30798", Offset = "0xC30798", VA = "0xC30798")]
		public void OnDeadzoneValueChange(float value)
		{
		}

		[Token(Token = "0x6002C67")]
		[Address(RVA = "0xC30918", Offset = "0xC30918", VA = "0xC30918")]
		public void OnDeadzoneCancel()
		{
		}

		[Token(Token = "0x6002C68")]
		[Address(RVA = "0xC30978", Offset = "0xC30978", VA = "0xC30978")]
		public void OnSensitivityValueChange(float value)
		{
		}

		[Token(Token = "0x6002C69")]
		[Address(RVA = "0xC30A88", Offset = "0xC30A88", VA = "0xC30A88")]
		public void OnSensitivityCancel(float value)
		{
		}

		[Token(Token = "0x6002C6A")]
		[Address(RVA = "0xC30ADC", Offset = "0xC30ADC", VA = "0xC30ADC")]
		public void OnAxisScrollRectScroll(Vector2 pos)
		{
		}

		[Token(Token = "0x6002C6B")]
		[Address(RVA = "0xC30AE0", Offset = "0xC30AE0", VA = "0xC30AE0")]
		private void OnAxisSelected(int axisIndex, Button button)
		{
		}

		[Token(Token = "0x6002C6C")]
		[Address(RVA = "0xC30440", Offset = "0xC30440", VA = "0xC30440")]
		private void UpdateDisplay()
		{
		}

		[Token(Token = "0x6002C6D")]
		[Address(RVA = "0xC30234", Offset = "0xC30234", VA = "0xC30234")]
		private void Redraw()
		{
		}

		[Token(Token = "0x6002C6E")]
		[Address(RVA = "0xC30100", Offset = "0xC30100", VA = "0xC30100")]
		private void RefreshControls()
		{
		}

		[Token(Token = "0x6002C6F")]
		[Address(RVA = "0xC30844", Offset = "0xC30844", VA = "0xC30844")]
		private void RedrawDeadzone()
		{
		}

		[Token(Token = "0x6002C70")]
		[Address(RVA = "0xC3069C", Offset = "0xC3069C", VA = "0xC3069C")]
		private void RedrawCalibratedZero()
		{
		}

		[Token(Token = "0x6002C71")]
		[Address(RVA = "0xC30B34", Offset = "0xC30B34", VA = "0xC30B34")]
		private void RedrawValueMarkers()
		{
		}

		[Token(Token = "0x6002C72")]
		[Address(RVA = "0xC2FEE8", Offset = "0xC2FEE8", VA = "0xC2FEE8")]
		private void SelectAxis(int index)
		{
		}

		[Token(Token = "0x6002C73")]
		[Address(RVA = "0xC30D6C", Offset = "0xC30D6C", VA = "0xC30D6C", Slot = "6")]
		public override void TakeInputFocus()
		{
		}

		[Token(Token = "0x6002C74")]
		[Address(RVA = "0xC30C90", Offset = "0xC30C90", VA = "0xC30C90")]
		private void SetMinSensitivity()
		{
		}

		[Token(Token = "0x6002C75")]
		[Address(RVA = "0xC30DB4", Offset = "0xC30DB4", VA = "0xC30DB4")]
		private bool IsMenuAxis(int actionId, int axisIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6002C76")]
		[Address(RVA = "0xC31250", Offset = "0xC31250", VA = "0xC31250")]
		private void GetAxisButtonDeadZone(int playerId, int actionId, ref float value)
		{
		}

		[Token(Token = "0x6002C77")]
		[Address(RVA = "0xC30C48", Offset = "0xC30C48", VA = "0xC30C48")]
		private float GetSliderSensitivity(AxisCalibration axisCalibration)
		{
			return default(float);
		}

		[Token(Token = "0x6002C78")]
		[Address(RVA = "0xC309D4", Offset = "0xC309D4", VA = "0xC309D4")]
		public void SetSensitivity(AxisCalibration axisCalibration, float sliderValue)
		{
		}

		[Token(Token = "0x6002C79")]
		[Address(RVA = "0xC31330", Offset = "0xC31330", VA = "0xC31330")]
		private static float ProcessPowerValue(float value, float minValue, float maxValue)
		{
			return default(float);
		}

		[Token(Token = "0x6002C7A")]
		[Address(RVA = "0xC31398", Offset = "0xC31398", VA = "0xC31398")]
		public CalibrationWindow()
		{
		}
	}
	[Token(Token = "0x2000605")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9193F8", Offset = "0x9193F8")]
	public class CanvasScalerExt : CanvasScaler
	{
		[Token(Token = "0x6002C7D")]
		[Address(RVA = "0x1035E74", Offset = "0x1035E74", VA = "0x1035E74")]
		public void ForceRefresh()
		{
		}

		[Token(Token = "0x6002C7E")]
		[Address(RVA = "0x1035E84", Offset = "0x1035E84", VA = "0x1035E84")]
		public CanvasScalerExt()
		{
		}
	}
	[Token(Token = "0x2000606")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x919430", Offset = "0x919430")]
	public class CanvasScalerFitter : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000607")]
		private class BreakPoint
		{
			[Token(Token = "0x40029D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			public string name;

			[Token(Token = "0x40029D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			public float screenAspectRatio;

			[Token(Token = "0x40029DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[SerializeField]
			public Vector2 referenceResolution;

			[Token(Token = "0x6002C83")]
			[Address(RVA = "0xBDCCEC", Offset = "0xBDCCEC", VA = "0xBDCCEC")]
			public BreakPoint()
			{
			}
		}

		[Token(Token = "0x40029D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BreakPoint[] breakPoints;

		[Token(Token = "0x40029D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CanvasScalerExt canvasScaler;

		[Token(Token = "0x40029D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int screenWidth;

		[Token(Token = "0x40029D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int screenHeight;

		[Token(Token = "0x40029D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Action ScreenSizeChanged;

		[Token(Token = "0x6002C7F")]
		[Address(RVA = "0x1035E8C", Offset = "0x1035E8C", VA = "0x1035E8C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002C80")]
		[Address(RVA = "0x1035F00", Offset = "0x1035F00", VA = "0x1035F00")]
		private void Update()
		{
		}

		[Token(Token = "0x6002C81")]
		[Address(RVA = "0x1035F6C", Offset = "0x1035F6C", VA = "0x1035F6C")]
		private void UpdateSize()
		{
		}

		[Token(Token = "0x6002C82")]
		[Address(RVA = "0x10360B0", Offset = "0x10360B0", VA = "0x10360B0")]
		public CanvasScalerFitter()
		{
		}
	}
	[Token(Token = "0x2000608")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x919490", Offset = "0x919490")]
	public class ControlMapper : MonoBehaviour
	{
		[Token(Token = "0x2000609")]
		private abstract class GUIElement
		{
			[Token(Token = "0x4002A45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public readonly GameObject gameObject;

			[Token(Token = "0x4002A46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			protected readonly Text text;

			[Token(Token = "0x4002A47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public readonly Selectable selectable;

			[Token(Token = "0x4002A48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			protected readonly UIElementInfo uiElementInfo;

			[Token(Token = "0x4002A49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			protected bool permanentStateSet;

			[Token(Token = "0x4002A4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			protected readonly List<GUIElement> children;

			[Token(Token = "0x4002A4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91FF6C", Offset = "0x91FF6C")]
			private RectTransform <rectTransform>k__BackingField;

			[Token(Token = "0x1700055A")]
			public RectTransform rectTransform
			{
				[Token(Token = "0x6002DAA")]
				[Address(RVA = "0xBDF3E8", Offset = "0xBDF3E8", VA = "0xBDF3E8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9301F8", Offset = "0x9301F8")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002DAB")]
				[Address(RVA = "0xBDF3F0", Offset = "0xBDF3F0", VA = "0xBDF3F0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x930208", Offset = "0x930208")]
				private set
				{
				}
			}

			[Token(Token = "0x6002DAC")]
			[Address(RVA = "0xBDEE00", Offset = "0xBDEE00", VA = "0xBDEE00")]
			public GUIElement(GameObject gameObject)
			{
			}

			[Token(Token = "0x6002DAD")]
			[Address(RVA = "0xBDF07C", Offset = "0xBDF07C", VA = "0xBDF07C")]
			public GUIElement(Selectable selectable, Text label)
			{
			}

			[Token(Token = "0x6002DAE")]
			[Address(RVA = "0xBDF3F8", Offset = "0xBDF3F8", VA = "0xBDF3F8", Slot = "4")]
			public virtual void SetInteractible(bool state, bool playTransition)
			{
			}

			[Token(Token = "0x6002DAF")]
			[Address(RVA = "0xBDF410", Offset = "0xBDF410", VA = "0xBDF410", Slot = "5")]
			public virtual void SetInteractible(bool state, bool playTransition, bool permanent)
			{
			}

			[Token(Token = "0x6002DB0")]
			[Address(RVA = "0xBDF5A4", Offset = "0xBDF5A4", VA = "0xBDF5A4", Slot = "6")]
			public virtual void SetTextWidth(int value)
			{
			}

			[Token(Token = "0x6002DB1")]
			[Address(RVA = "0xBDF6DC", Offset = "0xBDF6DC", VA = "0xBDF6DC", Slot = "7")]
			public virtual void SetFirstChildObjectWidth(LayoutElementSizeType type, int value)
			{
			}

			[Token(Token = "0x6002DB2")]
			[Address(RVA = "0xBDF860", Offset = "0xBDF860", VA = "0xBDF860", Slot = "8")]
			public virtual void SetLabel(string label)
			{
			}

			[Token(Token = "0x6002DB3")]
			[Address(RVA = "0xBDF90C", Offset = "0xBDF90C", VA = "0xBDF90C", Slot = "9")]
			public virtual string GetLabel()
			{
				return null;
			}

			[Token(Token = "0x6002DB4")]
			[Address(RVA = "0xBDF9C4", Offset = "0xBDF9C4", VA = "0xBDF9C4", Slot = "10")]
			public virtual void AddChild(GUIElement child)
			{
			}

			[Token(Token = "0x6002DB5")]
			[Address(RVA = "0xBDF214", Offset = "0xBDF214", VA = "0xBDF214")]
			public void SetElementInfoData(string identifier, int intData)
			{
			}

			[Token(Token = "0x6002DB6")]
			[Address(RVA = "0xBDFA28", Offset = "0xBDFA28", VA = "0xBDFA28", Slot = "11")]
			public virtual void SetActive(bool state)
			{
			}

			[Token(Token = "0x6002DB7")]
			[Address(RVA = "0xBDFACC", Offset = "0xBDFACC", VA = "0xBDFACC", Slot = "12")]
			protected virtual bool Init()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200060A")]
		private class GUIButton : GUIElement
		{
			[Token(Token = "0x200060B")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9194C8", Offset = "0x9194C8")]
			private sealed class <>c__DisplayClass7_0
			{
				[Token(Token = "0x4002A4C")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public Action<ButtonInfo> callback;

				[Token(Token = "0x4002A4D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public GUIButton <>4__this;

				[Token(Token = "0x6002DBE")]
				[Address(RVA = "0x11C6870", Offset = "0x11C6870", VA = "0x11C6870")]
				public <>c__DisplayClass7_0()
				{
				}

				[Token(Token = "0x6002DBF")]
				[Address(RVA = "0x11C6878", Offset = "0x11C6878", VA = "0x11C6878")]
				internal void <SetOnClickCallback>b__0()
				{
				}
			}

			[Token(Token = "0x1700055B")]
			protected Button button
			{
				[Token(Token = "0x6002DB8")]
				[Address(RVA = "0xBDECD4", Offset = "0xBDECD4", VA = "0xBDECD4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700055C")]
			public ButtonInfo buttonInfo
			{
				[Token(Token = "0x6002DB9")]
				[Address(RVA = "0xBDED54", Offset = "0xBDED54", VA = "0xBDED54")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002DBA")]
			[Address(RVA = "0xBDEDD4", Offset = "0xBDEDD4", VA = "0xBDEDD4")]
			public GUIButton(GameObject gameObject)
			{
			}

			[Token(Token = "0x6002DBB")]
			[Address(RVA = "0xBDF050", Offset = "0xBDF050", VA = "0xBDF050")]
			public GUIButton(Button button, Text label)
			{
			}

			[Token(Token = "0x6002DBC")]
			[Address(RVA = "0xBDF210", Offset = "0xBDF210", VA = "0xBDF210")]
			public void SetButtonInfoData(string identifier, int intData)
			{
			}

			[Token(Token = "0x6002DBD")]
			[Address(RVA = "0xBDF2B4", Offset = "0xBDF2B4", VA = "0xBDF2B4")]
			public void SetOnClickCallback(Action<ButtonInfo> callback)
			{
			}
		}

		[Token(Token = "0x200060C")]
		private class GUIInputField : GUIElement
		{
			[Token(Token = "0x200060D")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9194D8", Offset = "0x9194D8")]
			private sealed class <>c__DisplayClass19_0
			{
				[Token(Token = "0x4002A4F")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public Action<InputFieldInfo> callback;

				[Token(Token = "0x4002A50")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public GUIInputField <>4__this;

				[Token(Token = "0x6002DCF")]
				[Address(RVA = "0x11C68E4", Offset = "0x11C68E4", VA = "0x11C68E4")]
				public <>c__DisplayClass19_0()
				{
				}

				[Token(Token = "0x6002DD0")]
				[Address(RVA = "0x11C68EC", Offset = "0x11C68EC", VA = "0x11C68EC")]
				internal void <SetOnClickCallback>b__0()
				{
				}
			}

			[Token(Token = "0x4002A4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91FF7C", Offset = "0x91FF7C")]
			private GUIToggle <toggle>k__BackingField;

			[Token(Token = "0x1700055D")]
			protected Button button
			{
				[Token(Token = "0x6002DC0")]
				[Address(RVA = "0xBDFD2C", Offset = "0xBDFD2C", VA = "0xBDFD2C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700055E")]
			public InputFieldInfo fieldInfo
			{
				[Token(Token = "0x6002DC1")]
				[Address(RVA = "0xBDFDAC", Offset = "0xBDFDAC", VA = "0xBDFDAC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700055F")]
			public bool hasToggle
			{
				[Token(Token = "0x6002DC2")]
				[Address(RVA = "0xBDFE2C", Offset = "0xBDFE2C", VA = "0xBDFE2C")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000560")]
			public GUIToggle toggle
			{
				[Token(Token = "0x6002DC3")]
				[Address(RVA = "0xBDFE3C", Offset = "0xBDFE3C", VA = "0xBDFE3C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x930218", Offset = "0x930218")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002DC4")]
				[Address(RVA = "0xBDFE44", Offset = "0xBDFE44", VA = "0xBDFE44")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x930228", Offset = "0x930228")]
				private set
				{
				}
			}

			[Token(Token = "0x17000561")]
			public int actionElementMapId
			{
				[Token(Token = "0x6002DC5")]
				[Address(RVA = "0xBDFE4C", Offset = "0xBDFE4C", VA = "0xBDFE4C")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6002DC6")]
				[Address(RVA = "0xBDFEE8", Offset = "0xBDFEE8", VA = "0xBDFEE8")]
				set
				{
				}
			}

			[Token(Token = "0x17000562")]
			public int controllerId
			{
				[Token(Token = "0x6002DC7")]
				[Address(RVA = "0xBDFF88", Offset = "0xBDFF88", VA = "0xBDFF88")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6002DC8")]
				[Address(RVA = "0xBE0024", Offset = "0xBE0024", VA = "0xBE0024")]
				set
				{
				}
			}

			[Token(Token = "0x6002DC9")]
			[Address(RVA = "0xBE00C4", Offset = "0xBE00C4", VA = "0xBE00C4")]
			public GUIInputField(GameObject gameObject)
			{
			}

			[Token(Token = "0x6002DCA")]
			[Address(RVA = "0xBE00F0", Offset = "0xBE00F0", VA = "0xBE00F0")]
			public GUIInputField(Button button, Text label)
			{
			}

			[Token(Token = "0x6002DCB")]
			[Address(RVA = "0xBE011C", Offset = "0xBE011C", VA = "0xBE011C")]
			public void SetFieldInfoData(int actionId, AxisRange axisRange, ControllerType controllerType, int intData)
			{
			}

			[Token(Token = "0x6002DCC")]
			[Address(RVA = "0xBE021C", Offset = "0xBE021C", VA = "0xBE021C")]
			public void SetOnClickCallback(Action<InputFieldInfo> callback)
			{
			}

			[Token(Token = "0x6002DCD")]
			[Address(RVA = "0xBE0350", Offset = "0xBE0350", VA = "0xBE0350", Slot = "13")]
			public virtual void SetInteractable(bool state, bool playTransition, bool permanent)
			{
			}

			[Token(Token = "0x6002DCE")]
			[Address(RVA = "0xBE03C0", Offset = "0xBE03C0", VA = "0xBE03C0")]
			public void AddToggle(GUIToggle toggle)
			{
			}
		}

		[Token(Token = "0x200060E")]
		private class GUIToggle : GUIElement
		{
			[Token(Token = "0x200060F")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9194E8", Offset = "0x9194E8")]
			private sealed class <>c__DisplayClass10_0
			{
				[Token(Token = "0x4002A51")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public Action<ToggleInfo, bool> callback;

				[Token(Token = "0x4002A52")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public GUIToggle <>4__this;

				[Token(Token = "0x6002DDA")]
				[Address(RVA = "0x11C6958", Offset = "0x11C6958", VA = "0x11C6958")]
				public <>c__DisplayClass10_0()
				{
				}

				[Token(Token = "0x6002DDB")]
				[Address(RVA = "0x11C6960", Offset = "0x11C6960", VA = "0x11C6960")]
				internal void <SetOnSubmitCallback>b__0(BaseEventData data)
				{
				}
			}

			[Token(Token = "0x17000563")]
			protected Toggle toggle
			{
				[Token(Token = "0x6002DD1")]
				[Address(RVA = "0xBE0B20", Offset = "0xBE0B20", VA = "0xBE0B20")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000564")]
			public ToggleInfo toggleInfo
			{
				[Token(Token = "0x6002DD2")]
				[Address(RVA = "0xBE0BA0", Offset = "0xBE0BA0", VA = "0xBE0BA0")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000565")]
			public int actionElementMapId
			{
				[Token(Token = "0x6002DD3")]
				[Address(RVA = "0xBE0C20", Offset = "0xBE0C20", VA = "0xBE0C20")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6002DD4")]
				[Address(RVA = "0xBE0CBC", Offset = "0xBE0CBC", VA = "0xBE0CBC")]
				set
				{
				}
			}

			[Token(Token = "0x6002DD5")]
			[Address(RVA = "0xBE0D5C", Offset = "0xBE0D5C", VA = "0xBE0D5C")]
			public GUIToggle(GameObject gameObject)
			{
			}

			[Token(Token = "0x6002DD6")]
			[Address(RVA = "0xBE0D88", Offset = "0xBE0D88", VA = "0xBE0D88")]
			public GUIToggle(Toggle toggle, Text label)
			{
			}

			[Token(Token = "0x6002DD7")]
			[Address(RVA = "0xBE0DB4", Offset = "0xBE0DB4", VA = "0xBE0DB4")]
			public void SetToggleInfoData(int actionId, AxisRange axisRange, ControllerType controllerType, int intData)
			{
			}

			[Token(Token = "0x6002DD8")]
			[Address(RVA = "0xBE0EB4", Offset = "0xBE0EB4", VA = "0xBE0EB4")]
			public void SetOnSubmitCallback(Action<ToggleInfo, bool> callback)
			{
			}

			[Token(Token = "0x6002DD9")]
			[Address(RVA = "0xBE11E8", Offset = "0xBE11E8", VA = "0xBE11E8")]
			public void SetToggleState(bool state)
			{
			}
		}

		[Token(Token = "0x2000610")]
		private class GUILabel
		{
			[Token(Token = "0x4002A53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91FF8C", Offset = "0x91FF8C")]
			private GameObject <gameObject>k__BackingField;

			[Token(Token = "0x4002A54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91FF9C", Offset = "0x91FF9C")]
			private Text <text>k__BackingField;

			[Token(Token = "0x4002A55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91FFAC", Offset = "0x91FFAC")]
			private RectTransform <rectTransform>k__BackingField;

			[Token(Token = "0x17000566")]
			public GameObject gameObject
			{
				[Token(Token = "0x6002DDC")]
				[Address(RVA = "0xBE03CC", Offset = "0xBE03CC", VA = "0xBE03CC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x930238", Offset = "0x930238")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002DDD")]
				[Address(RVA = "0xBE03D4", Offset = "0xBE03D4", VA = "0xBE03D4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x930248", Offset = "0x930248")]
				private set
				{
				}
			}

			[Token(Token = "0x17000567")]
			private Text text
			{
				[Token(Token = "0x6002DDE")]
				[Address(RVA = "0xBE03DC", Offset = "0xBE03DC", VA = "0xBE03DC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x930258", Offset = "0x930258")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002DDF")]
				[Address(RVA = "0xBE03E4", Offset = "0xBE03E4", VA = "0xBE03E4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x930268", Offset = "0x930268")]
				set
				{
				}
			}

			[Token(Token = "0x17000568")]
			public RectTransform rectTransform
			{
				[Token(Token = "0x6002DE0")]
				[Address(RVA = "0xBE03EC", Offset = "0xBE03EC", VA = "0xBE03EC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x930278", Offset = "0x930278")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002DE1")]
				[Address(RVA = "0xBE03F4", Offset = "0xBE03F4", VA = "0xBE03F4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x930288", Offset = "0x930288")]
				private set
				{
				}
			}

			[Token(Token = "0x6002DE2")]
			[Address(RVA = "0xBE03FC", Offset = "0xBE03FC", VA = "0xBE03FC")]
			public GUILabel(GameObject gameObject)
			{
			}

			[Token(Token = "0x6002DE3")]
			[Address(RVA = "0xBE0644", Offset = "0xBE0644", VA = "0xBE0644")]
			public GUILabel(Text label)
			{
			}

			[Token(Token = "0x6002DE4")]
			[Address(RVA = "0xBE0674", Offset = "0xBE0674", VA = "0xBE0674")]
			public void SetSize(int width, int height)
			{
			}

			[Token(Token = "0x6002DE5")]
			[Address(RVA = "0xBE0738", Offset = "0xBE0738", VA = "0xBE0738")]
			public void SetWidth(int width)
			{
			}

			[Token(Token = "0x6002DE6")]
			[Address(RVA = "0xBE07E0", Offset = "0xBE07E0", VA = "0xBE07E0")]
			public void SetHeight(int height)
			{
			}

			[Token(Token = "0x6002DE7")]
			[Address(RVA = "0xBE0888", Offset = "0xBE0888", VA = "0xBE0888")]
			public void SetLabel(string label)
			{
			}

			[Token(Token = "0x6002DE8")]
			[Address(RVA = "0xBE0934", Offset = "0xBE0934", VA = "0xBE0934")]
			public void SetFontStyle(FontStyle style)
			{
			}

			[Token(Token = "0x6002DE9")]
			[Address(RVA = "0xBE09D8", Offset = "0xBE09D8", VA = "0xBE09D8")]
			public void SetTextAlignment(TextAnchor alignment)
			{
			}

			[Token(Token = "0x6002DEA")]
			[Address(RVA = "0xBE0A7C", Offset = "0xBE0A7C", VA = "0xBE0A7C")]
			public void SetActive(bool state)
			{
			}

			[Token(Token = "0x6002DEB")]
			[Address(RVA = "0xBE0530", Offset = "0xBE0530", VA = "0xBE0530")]
			private bool Check()
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x2000611")]
		public class MappingSet
		{
			[Token(Token = "0x2000612")]
			public enum ActionListMode
			{
				[Token(Token = "0x4002A5D")]
				ActionCategory,
				[Token(Token = "0x4002A5E")]
				Action
			}

			[Token(Token = "0x4002A56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91FFBC", Offset = "0x91FFBC")]
			[SerializeField]
			private int _mapCategoryId;

			[Token(Token = "0x4002A57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x920008", Offset = "0x920008")]
			private ActionListMode _actionListMode;

			[Token(Token = "0x4002A58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private int[] _actionCategoryIds;

			[Token(Token = "0x4002A59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			private int[] _actionIds;

			[Token(Token = "0x4002A5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private IList<int> _actionCategoryIdsReadOnly;

			[Token(Token = "0x4002A5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private IList<int> _actionIdsReadOnly;

			[Token(Token = "0x17000569")]
			public int mapCategoryId
			{
				[Token(Token = "0x6002DEC")]
				[Address(RVA = "0xBE28F4", Offset = "0xBE28F4", VA = "0xBE28F4")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x1700056A")]
			public ActionListMode actionListMode
			{
				[Token(Token = "0x6002DED")]
				[Address(RVA = "0xBE28FC", Offset = "0xBE28FC", VA = "0xBE28FC")]
				get
				{
					return default(ActionListMode);
				}
			}

			[Token(Token = "0x1700056B")]
			public IList<int> actionCategoryIds
			{
				[Token(Token = "0x6002DEE")]
				[Address(RVA = "0xBE2904", Offset = "0xBE2904", VA = "0xBE2904")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700056C")]
			public IList<int> actionIds
			{
				[Token(Token = "0x6002DEF")]
				[Address(RVA = "0xBE299C", Offset = "0xBE299C", VA = "0xBE299C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700056D")]
			public bool isValid
			{
				[Token(Token = "0x6002DF0")]
				[Address(RVA = "0xBE2A30", Offset = "0xBE2A30", VA = "0xBE2A30")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x1700056E")]
			public static MappingSet Default
			{
				[Token(Token = "0x6002DF3")]
				[Address(RVA = "0xBE2B88", Offset = "0xBE2B88", VA = "0xBE2B88")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002DF1")]
			[Address(RVA = "0xBE2AC0", Offset = "0xBE2AC0", VA = "0xBE2AC0")]
			public MappingSet()
			{
			}

			[Token(Token = "0x6002DF2")]
			[Address(RVA = "0xBE2B3C", Offset = "0xBE2B3C", VA = "0xBE2B3C")]
			private MappingSet(int mapCategoryId, ActionListMode actionListMode, int[] actionCategoryIds, int[] actionIds)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000613")]
		public class InputBehaviorSettings
		{
			[Token(Token = "0x4002A5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x920074", Offset = "0x920074")]
			private int _inputBehaviorId;

			[Token(Token = "0x4002A60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9200C0", Offset = "0x9200C0")]
			private bool _showJoystickAxisSensitivity;

			[Token(Token = "0x4002A61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x92010C", Offset = "0x92010C")]
			private bool _showMouseXYAxisSensitivity;

			[Token(Token = "0x4002A62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x920158", Offset = "0x920158")]
			private string _labelLanguageKey;

			[Token(Token = "0x4002A63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9201A4", Offset = "0x9201A4")]
			[SerializeField]
			private string _joystickAxisSensitivityLabelLanguageKey;

			[Token(Token = "0x4002A64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9201F0", Offset = "0x9201F0")]
			[SerializeField]
			private string _mouseXYAxisSensitivityLabelLanguageKey;

			[Token(Token = "0x4002A65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x92023C", Offset = "0x92023C")]
			[SerializeField]
			private Sprite _joystickAxisSensitivityIcon;

			[Token(Token = "0x4002A66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x920288", Offset = "0x920288")]
			private Sprite _mouseXYAxisSensitivityIcon;

			[Token(Token = "0x4002A67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9202D4", Offset = "0x9202D4")]
			private float _joystickAxisSensitivityMin;

			[Token(Token = "0x4002A68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x920320", Offset = "0x920320")]
			private float _joystickAxisSensitivityMax;

			[Token(Token = "0x4002A69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x92036C", Offset = "0x92036C")]
			private float _mouseXYAxisSensitivityMin;

			[Token(Token = "0x4002A6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9203B8", Offset = "0x9203B8")]
			private float _mouseXYAxisSensitivityMax;

			[Token(Token = "0x1700056F")]
			public int inputBehaviorId
			{
				[Token(Token = "0x6002DF4")]
				[Address(RVA = "0xBE12E4", Offset = "0xBE12E4", VA = "0xBE12E4")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x17000570")]
			public bool showJoystickAxisSensitivity
			{
				[Token(Token = "0x6002DF5")]
				[Address(RVA = "0xBE12EC", Offset = "0xBE12EC", VA = "0xBE12EC")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000571")]
			public bool showMouseXYAxisSensitivity
			{
				[Token(Token = "0x6002DF6")]
				[Address(RVA = "0xBE12F4", Offset = "0xBE12F4", VA = "0xBE12F4")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000572")]
			public string labelLanguageKey
			{
				[Token(Token = "0x6002DF7")]
				[Address(RVA = "0xBE12FC", Offset = "0xBE12FC", VA = "0xBE12FC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000573")]
			public string joystickAxisSensitivityLabelLanguageKey
			{
				[Token(Token = "0x6002DF8")]
				[Address(RVA = "0xBE1304", Offset = "0xBE1304", VA = "0xBE1304")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000574")]
			public string mouseXYAxisSensitivityLabelLanguageKey
			{
				[Token(Token = "0x6002DF9")]
				[Address(RVA = "0xBE130C", Offset = "0xBE130C", VA = "0xBE130C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000575")]
			public Sprite joystickAxisSensitivityIcon
			{
				[Token(Token = "0x6002DFA")]
				[Address(RVA = "0xBE1314", Offset = "0xBE1314", VA = "0xBE1314")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000576")]
			public Sprite mouseXYAxisSensitivityIcon
			{
				[Token(Token = "0x6002DFB")]
				[Address(RVA = "0xBE131C", Offset = "0xBE131C", VA = "0xBE131C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000577")]
			public float joystickAxisSensitivityMin
			{
				[Token(Token = "0x6002DFC")]
				[Address(RVA = "0xBE1324", Offset = "0xBE1324", VA = "0xBE1324")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x17000578")]
			public float joystickAxisSensitivityMax
			{
				[Token(Token = "0x6002DFD")]
				[Address(RVA = "0xBE132C", Offset = "0xBE132C", VA = "0xBE132C")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x17000579")]
			public float mouseXYAxisSensitivityMin
			{
				[Token(Token = "0x6002DFE")]
				[Address(RVA = "0xBE1334", Offset = "0xBE1334", VA = "0xBE1334")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x1700057A")]
			public float mouseXYAxisSensitivityMax
			{
				[Token(Token = "0x6002DFF")]
				[Address(RVA = "0xBE133C", Offset = "0xBE133C", VA = "0xBE133C")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x1700057B")]
			public bool isValid
			{
				[Token(Token = "0x6002E00")]
				[Address(RVA = "0xBE1344", Offset = "0xBE1344", VA = "0xBE1344")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6002E01")]
			[Address(RVA = "0xBE1374", Offset = "0xBE1374", VA = "0xBE1374")]
			public InputBehaviorSettings()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000614")]
		private class Prefabs
		{
			[Token(Token = "0x4002A6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			private GameObject _button;

			[Token(Token = "0x4002A6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private GameObject _fitButton;

			[Token(Token = "0x4002A6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			private GameObject _inputGridLabel;

			[Token(Token = "0x4002A6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[SerializeField]
			private GameObject _inputGridHeaderLabel;

			[Token(Token = "0x4002A6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[SerializeField]
			private GameObject _inputGridFieldButton;

			[Token(Token = "0x4002A70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[SerializeField]
			private GameObject _inputGridFieldInvertToggle;

			[Token(Token = "0x4002A71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[SerializeField]
			private GameObject _window;

			[Token(Token = "0x4002A72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[SerializeField]
			private GameObject _windowTitleText;

			[Token(Token = "0x4002A73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[SerializeField]
			private GameObject _windowContentText;

			[Token(Token = "0x4002A74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[SerializeField]
			private GameObject _fader;

			[Token(Token = "0x4002A75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[SerializeField]
			private GameObject _calibrationWindow;

			[Token(Token = "0x4002A76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[SerializeField]
			private GameObject _inputBehaviorsWindow;

			[Token(Token = "0x4002A77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[SerializeField]
			private GameObject _centerStickGraphic;

			[Token(Token = "0x4002A78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			[SerializeField]
			private GameObject _moveStickGraphic;

			[Token(Token = "0x1700057C")]
			public GameObject button
			{
				[Token(Token = "0x6002E02")]
				[Address(RVA = "0xBE2C2C", Offset = "0xBE2C2C", VA = "0xBE2C2C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700057D")]
			public GameObject fitButton
			{
				[Token(Token = "0x6002E03")]
				[Address(RVA = "0xBE2C34", Offset = "0xBE2C34", VA = "0xBE2C34")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700057E")]
			public GameObject inputGridLabel
			{
				[Token(Token = "0x6002E04")]
				[Address(RVA = "0xBE2C3C", Offset = "0xBE2C3C", VA = "0xBE2C3C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700057F")]
			public GameObject inputGridHeaderLabel
			{
				[Token(Token = "0x6002E05")]
				[Address(RVA = "0xBE2C44", Offset = "0xBE2C44", VA = "0xBE2C44")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000580")]
			public GameObject inputGridFieldButton
			{
				[Token(Token = "0x6002E06")]
				[Address(RVA = "0xBE2C4C", Offset = "0xBE2C4C", VA = "0xBE2C4C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000581")]
			public GameObject inputGridFieldInvertToggle
			{
				[Token(Token = "0x6002E07")]
				[Address(RVA = "0xBE2C54", Offset = "0xBE2C54", VA = "0xBE2C54")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000582")]
			public GameObject window
			{
				[Token(Token = "0x6002E08")]
				[Address(RVA = "0xBE2C5C", Offset = "0xBE2C5C", VA = "0xBE2C5C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000583")]
			public GameObject windowTitleText
			{
				[Token(Token = "0x6002E09")]
				[Address(RVA = "0xBE2C64", Offset = "0xBE2C64", VA = "0xBE2C64")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000584")]
			public GameObject windowContentText
			{
				[Token(Token = "0x6002E0A")]
				[Address(RVA = "0xBE2C6C", Offset = "0xBE2C6C", VA = "0xBE2C6C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000585")]
			public GameObject fader
			{
				[Token(Token = "0x6002E0B")]
				[Address(RVA = "0xBE2C74", Offset = "0xBE2C74", VA = "0xBE2C74")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000586")]
			public GameObject calibrationWindow
			{
				[Token(Token = "0x6002E0C")]
				[Address(RVA = "0xBE2C7C", Offset = "0xBE2C7C", VA = "0xBE2C7C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000587")]
			public GameObject inputBehaviorsWindow
			{
				[Token(Token = "0x6002E0D")]
				[Address(RVA = "0xBE2C84", Offset = "0xBE2C84", VA = "0xBE2C84")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000588")]
			public GameObject centerStickGraphic
			{
				[Token(Token = "0x6002E0E")]
				[Address(RVA = "0xBE2C8C", Offset = "0xBE2C8C", VA = "0xBE2C8C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000589")]
			public GameObject moveStickGraphic
			{
				[Token(Token = "0x6002E0F")]
				[Address(RVA = "0xBE2C94", Offset = "0xBE2C94", VA = "0xBE2C94")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002E10")]
			[Address(RVA = "0xBE2C9C", Offset = "0xBE2C9C", VA = "0xBE2C9C")]
			public bool Check()
			{
				return default(bool);
			}

			[Token(Token = "0x6002E11")]
			[Address(RVA = "0xBE2F34", Offset = "0xBE2F34", VA = "0xBE2F34")]
			public Prefabs()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000615")]
		private class References
		{
			[Token(Token = "0x4002A79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			private Canvas _canvas;

			[Token(Token = "0x4002A7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private CanvasGroup _mainCanvasGroup;

			[Token(Token = "0x4002A7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			private Transform _mainContent;

			[Token(Token = "0x4002A7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[SerializeField]
			private Transform _mainContentInner;

			[Token(Token = "0x4002A7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[SerializeField]
			private UIGroup _playersGroup;

			[Token(Token = "0x4002A7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[SerializeField]
			private Transform _controllerGroup;

			[Token(Token = "0x4002A7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[SerializeField]
			private Transform _controllerGroupLabelGroup;

			[Token(Token = "0x4002A80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[SerializeField]
			private UIGroup _controllerSettingsGroup;

			[Token(Token = "0x4002A81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[SerializeField]
			private UIGroup _assignedControllersGroup;

			[Token(Token = "0x4002A82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[SerializeField]
			private Transform _settingsAndMapCategoriesGroup;

			[Token(Token = "0x4002A83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[SerializeField]
			private UIGroup _settingsGroup;

			[Token(Token = "0x4002A84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[SerializeField]
			private UIGroup _mapCategoriesGroup;

			[Token(Token = "0x4002A85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[SerializeField]
			private Transform _inputGridGroup;

			[Token(Token = "0x4002A86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			[SerializeField]
			private Transform _inputGridContainer;

			[Token(Token = "0x4002A87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			[SerializeField]
			private Transform _inputGridHeadersGroup;

			[Token(Token = "0x4002A88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			[SerializeField]
			private Scrollbar _inputGridVScrollbar;

			[Token(Token = "0x4002A89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			[SerializeField]
			private ScrollRect _inputGridScrollRect;

			[Token(Token = "0x4002A8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			[SerializeField]
			private Transform _inputGridInnerGroup;

			[Token(Token = "0x4002A8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			[SerializeField]
			private Text _controllerNameLabel;

			[Token(Token = "0x4002A8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			[SerializeField]
			private Button _removeControllerButton;

			[Token(Token = "0x4002A8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			[SerializeField]
			private Button _assignControllerButton;

			[Token(Token = "0x4002A8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			[SerializeField]
			private Button _calibrateControllerButton;

			[Token(Token = "0x4002A8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			[SerializeField]
			private Button _doneButton;

			[Token(Token = "0x4002A90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			[SerializeField]
			private Button _restoreDefaultsButton;

			[Token(Token = "0x4002A91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			[SerializeField]
			private Selectable _defaultSelection;

			[Token(Token = "0x4002A92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			[SerializeField]
			private GameObject[] _fixedSelectableUIElements;

			[Token(Token = "0x4002A93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			[SerializeField]
			private Image _mainBackgroundImage;

			[Token(Token = "0x4002A94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x920694", Offset = "0x920694")]
			private LayoutElement <inputGridLayoutElement>k__BackingField;

			[Token(Token = "0x4002A95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9206A4", Offset = "0x9206A4")]
			private Transform <inputGridActionColumn>k__BackingField;

			[Token(Token = "0x4002A96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9206B4", Offset = "0x9206B4")]
			private Transform <inputGridKeyboardColumn>k__BackingField;

			[Token(Token = "0x4002A97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9206C4", Offset = "0x9206C4")]
			private Transform <inputGridMouseColumn>k__BackingField;

			[Token(Token = "0x4002A98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9206D4", Offset = "0x9206D4")]
			private Transform <inputGridControllerColumn>k__BackingField;

			[Token(Token = "0x4002A99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9206E4", Offset = "0x9206E4")]
			private Transform <inputGridHeader1>k__BackingField;

			[Token(Token = "0x4002A9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9206F4", Offset = "0x9206F4")]
			private Transform <inputGridHeader2>k__BackingField;

			[Token(Token = "0x4002A9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x920704", Offset = "0x920704")]
			private Transform <inputGridHeader3>k__BackingField;

			[Token(Token = "0x4002A9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x920714", Offset = "0x920714")]
			private Transform <inputGridHeader4>k__BackingField;

			[Token(Token = "0x1700058A")]
			public Canvas canvas
			{
				[Token(Token = "0x6002E12")]
				[Address(RVA = "0xBE2F3C", Offset = "0xBE2F3C", VA = "0xBE2F3C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700058B")]
			public CanvasGroup mainCanvasGroup
			{
				[Token(Token = "0x6002E13")]
				[Address(RVA = "0xBE2F44", Offset = "0xBE2F44", VA = "0xBE2F44")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700058C")]
			public Transform mainContent
			{
				[Token(Token = "0x6002E14")]
				[Address(RVA = "0xBE2F4C", Offset = "0xBE2F4C", VA = "0xBE2F4C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700058D")]
			public Transform mainContentInner
			{
				[Token(Token = "0x6002E15")]
				[Address(RVA = "0xBE2F54", Offset = "0xBE2F54", VA = "0xBE2F54")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700058E")]
			public UIGroup playersGroup
			{
				[Token(Token = "0x6002E16")]
				[Address(RVA = "0xBE2F5C", Offset = "0xBE2F5C", VA = "0xBE2F5C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700058F")]
			public Transform controllerGroup
			{
				[Token(Token = "0x6002E17")]
				[Address(RVA = "0xBE2F64", Offset = "0xBE2F64", VA = "0xBE2F64")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000590")]
			public Transform controllerGroupLabelGroup
			{
				[Token(Token = "0x6002E18")]
				[Address(RVA = "0xBE2F6C", Offset = "0xBE2F6C", VA = "0xBE2F6C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000591")]
			public UIGroup controllerSettingsGroup
			{
				[Token(Token = "0x6002E19")]
				[Address(RVA = "0xBE2F74", Offset = "0xBE2F74", VA = "0xBE2F74")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000592")]
			public UIGroup assignedControllersGroup
			{
				[Token(Token = "0x6002E1A")]
				[Address(RVA = "0xBE2F7C", Offset = "0xBE2F7C", VA = "0xBE2F7C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000593")]
			public Transform settingsAndMapCategoriesGroup
			{
				[Token(Token = "0x6002E1B")]
				[Address(RVA = "0xBE2F84", Offset = "0xBE2F84", VA = "0xBE2F84")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000594")]
			public UIGroup settingsGroup
			{
				[Token(Token = "0x6002E1C")]
				[Address(RVA = "0xBE2F8C", Offset = "0xBE2F8C", VA = "0xBE2F8C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000595")]
			public UIGroup mapCategoriesGroup
			{
				[Token(Token = "0x6002E1D")]
				[Address(RVA = "0xBE2F94", Offset = "0xBE2F94", VA = "0xBE2F94")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000596")]
			public Transform inputGridGroup
			{
				[Token(Token = "0x6002E1E")]
				[Address(RVA = "0xBE2F9C", Offset = "0xBE2F9C", VA = "0xBE2F9C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000597")]
			public Transform inputGridContainer
			{
				[Token(Token = "0x6002E1F")]
				[Address(RVA = "0xBE2FA4", Offset = "0xBE2FA4", VA = "0xBE2FA4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000598")]
			public Transform inputGridHeadersGroup
			{
				[Token(Token = "0x6002E20")]
				[Address(RVA = "0xBE2FAC", Offset = "0xBE2FAC", VA = "0xBE2FAC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000599")]
			public Scrollbar inputGridVScrollbar
			{
				[Token(Token = "0x6002E21")]
				[Address(RVA = "0xBE2FB4", Offset = "0xBE2FB4", VA = "0xBE2FB4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700059A")]
			public ScrollRect inputGridScrollRect
			{
				[Token(Token = "0x6002E22")]
				[Address(RVA = "0xBE2FBC", Offset = "0xBE2FBC", VA = "0xBE2FBC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700059B")]
			public Transform inputGridInnerGroup
			{
				[Token(Token = "0x6002E23")]
				[Address(RVA = "0xBE2FC4", Offset = "0xBE2FC4", VA = "0xBE2FC4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700059C")]
			public Text controllerNameLabel
			{
				[Token(Token = "0x6002E24")]
				[Address(RVA = "0xBE2FCC", Offset = "0xBE2FCC", VA = "0xBE2FCC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700059D")]
			public Button removeControllerButton
			{
				[Token(Token = "0x6002E25")]
				[Address(RVA = "0xBE2FD4", Offset = "0xBE2FD4", VA = "0xBE2FD4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700059E")]
			public Button assignControllerButton
			{
				[Token(Token = "0x6002E26")]
				[Address(RVA = "0xBE2FDC", Offset = "0xBE2FDC", VA = "0xBE2FDC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700059F")]
			public Button calibrateControllerButton
			{
				[Token(Token = "0x6002E27")]
				[Address(RVA = "0xBE2FE4", Offset = "0xBE2FE4", VA = "0xBE2FE4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005A0")]
			public Button doneButton
			{
				[Token(Token = "0x6002E28")]
				[Address(RVA = "0xBE2FEC", Offset = "0xBE2FEC", VA = "0xBE2FEC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005A1")]
			public Button restoreDefaultsButton
			{
				[Token(Token = "0x6002E29")]
				[Address(RVA = "0xBE2FF4", Offset = "0xBE2FF4", VA = "0xBE2FF4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005A2")]
			public Selectable defaultSelection
			{
				[Token(Token = "0x6002E2A")]
				[Address(RVA = "0xBE2FFC", Offset = "0xBE2FFC", VA = "0xBE2FFC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005A3")]
			public GameObject[] fixedSelectableUIElements
			{
				[Token(Token = "0x6002E2B")]
				[Address(RVA = "0xBE3004", Offset = "0xBE3004", VA = "0xBE3004")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005A4")]
			public Image mainBackgroundImage
			{
				[Token(Token = "0x6002E2C")]
				[Address(RVA = "0xBE300C", Offset = "0xBE300C", VA = "0xBE300C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005A5")]
			public LayoutElement inputGridLayoutElement
			{
				[Token(Token = "0x6002E2D")]
				[Address(RVA = "0xBE3014", Offset = "0xBE3014", VA = "0xBE3014")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x930298", Offset = "0x930298")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002E2E")]
				[Address(RVA = "0xBE301C", Offset = "0xBE301C", VA = "0xBE301C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9302A8", Offset = "0x9302A8")]
				set
				{
				}
			}

			[Token(Token = "0x170005A6")]
			public Transform inputGridActionColumn
			{
				[Token(Token = "0x6002E2F")]
				[Address(RVA = "0xBE3024", Offset = "0xBE3024", VA = "0xBE3024")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9302B8", Offset = "0x9302B8")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002E30")]
				[Address(RVA = "0xBE302C", Offset = "0xBE302C", VA = "0xBE302C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9302C8", Offset = "0x9302C8")]
				set
				{
				}
			}

			[Token(Token = "0x170005A7")]
			public Transform inputGridKeyboardColumn
			{
				[Token(Token = "0x6002E31")]
				[Address(RVA = "0xBE3034", Offset = "0xBE3034", VA = "0xBE3034")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9302D8", Offset = "0x9302D8")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002E32")]
				[Address(RVA = "0xBE303C", Offset = "0xBE303C", VA = "0xBE303C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9302E8", Offset = "0x9302E8")]
				set
				{
				}
			}

			[Token(Token = "0x170005A8")]
			public Transform inputGridMouseColumn
			{
				[Token(Token = "0x6002E33")]
				[Address(RVA = "0xBE3044", Offset = "0xBE3044", VA = "0xBE3044")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9302F8", Offset = "0x9302F8")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002E34")]
				[Address(RVA = "0xBE304C", Offset = "0xBE304C", VA = "0xBE304C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x930308", Offset = "0x930308")]
				set
				{
				}
			}

			[Token(Token = "0x170005A9")]
			public Transform inputGridControllerColumn
			{
				[Token(Token = "0x6002E35")]
				[Address(RVA = "0xBE3054", Offset = "0xBE3054", VA = "0xBE3054")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x930318", Offset = "0x930318")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002E36")]
				[Address(RVA = "0xBE305C", Offset = "0xBE305C", VA = "0xBE305C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x930328", Offset = "0x930328")]
				set
				{
				}
			}

			[Token(Token = "0x170005AA")]
			public Transform inputGridHeader1
			{
				[Token(Token = "0x6002E37")]
				[Address(RVA = "0xBE3064", Offset = "0xBE3064", VA = "0xBE3064")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x930338", Offset = "0x930338")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002E38")]
				[Address(RVA = "0xBE306C", Offset = "0xBE306C", VA = "0xBE306C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x930348", Offset = "0x930348")]
				set
				{
				}
			}

			[Token(Token = "0x170005AB")]
			public Transform inputGridHeader2
			{
				[Token(Token = "0x6002E39")]
				[Address(RVA = "0xBE3074", Offset = "0xBE3074", VA = "0xBE3074")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x930358", Offset = "0x930358")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002E3A")]
				[Address(RVA = "0xBE307C", Offset = "0xBE307C", VA = "0xBE307C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x930368", Offset = "0x930368")]
				set
				{
				}
			}

			[Token(Token = "0x170005AC")]
			public Transform inputGridHeader3
			{
				[Token(Token = "0x6002E3B")]
				[Address(RVA = "0xBE3084", Offset = "0xBE3084", VA = "0xBE3084")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x930378", Offset = "0x930378")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002E3C")]
				[Address(RVA = "0xBE308C", Offset = "0xBE308C", VA = "0xBE308C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x930388", Offset = "0x930388")]
				set
				{
				}
			}

			[Token(Token = "0x170005AD")]
			public Transform inputGridHeader4
			{
				[Token(Token = "0x6002E3D")]
				[Address(RVA = "0xBE3094", Offset = "0xBE3094", VA = "0xBE3094")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x930398", Offset = "0x930398")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002E3E")]
				[Address(RVA = "0xBE309C", Offset = "0xBE309C", VA = "0xBE309C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9303A8", Offset = "0x9303A8")]
				set
				{
				}
			}

			[Token(Token = "0x6002E3F")]
			[Address(RVA = "0xBE30A4", Offset = "0xBE30A4", VA = "0xBE30A4")]
			public bool Check()
			{
				return default(bool);
			}

			[Token(Token = "0x6002E40")]
			[Address(RVA = "0xBE35AC", Offset = "0xBE35AC", VA = "0xBE35AC")]
			public References()
			{
			}
		}

		[Token(Token = "0x2000616")]
		private class InputActionSet
		{
			[Token(Token = "0x4002A9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int _actionId;

			[Token(Token = "0x4002A9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private AxisRange _axisRange;

			[Token(Token = "0x170005AE")]
			public int actionId
			{
				[Token(Token = "0x6002E41")]
				[Address(RVA = "0xBE129C", Offset = "0xBE129C", VA = "0xBE129C")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x170005AF")]
			public AxisRange axisRange
			{
				[Token(Token = "0x6002E42")]
				[Address(RVA = "0xBE12A4", Offset = "0xBE12A4", VA = "0xBE12A4")]
				get
				{
					return default(AxisRange);
				}
			}

			[Token(Token = "0x6002E43")]
			[Address(RVA = "0xBE12AC", Offset = "0xBE12AC", VA = "0xBE12AC")]
			public InputActionSet(int actionId, AxisRange axisRange)
			{
			}
		}

		[Token(Token = "0x2000617")]
		private class InputMapping
		{
			[Token(Token = "0x4002A9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x920724", Offset = "0x920724")]
			private string <actionName>k__BackingField;

			[Token(Token = "0x4002AA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x920734", Offset = "0x920734")]
			private InputFieldInfo <fieldInfo>k__BackingField;

			[Token(Token = "0x4002AA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x920744", Offset = "0x920744")]
			private ControllerMap <map>k__BackingField;

			[Token(Token = "0x4002AA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x920754", Offset = "0x920754")]
			private ActionElementMap <aem>k__BackingField;

			[Token(Token = "0x4002AA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x920764", Offset = "0x920764")]
			private ControllerType <controllerType>k__BackingField;

			[Token(Token = "0x4002AA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x920774", Offset = "0x920774")]
			private int <controllerId>k__BackingField;

			[Token(Token = "0x4002AA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x920784", Offset = "0x920784")]
			private ControllerPollingInfo <pollingInfo>k__BackingField;

			[Token(Token = "0x4002AA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x920794", Offset = "0x920794")]
			private ModifierKeyFlags <modifierKeyFlags>k__BackingField;

			[Token(Token = "0x170005B0")]
			public string actionName
			{
				[Token(Token = "0x6002E44")]
				[Address(RVA = "0xBE2530", Offset = "0xBE2530", VA = "0xBE2530")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9303B8", Offset = "0x9303B8")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002E45")]
				[Address(RVA = "0xBE2538", Offset = "0xBE2538", VA = "0xBE2538")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9303C8", Offset = "0x9303C8")]
				private set
				{
				}
			}

			[Token(Token = "0x170005B1")]
			public InputFieldInfo fieldInfo
			{
				[Token(Token = "0x6002E46")]
				[Address(RVA = "0xBE2540", Offset = "0xBE2540", VA = "0xBE2540")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9303D8", Offset = "0x9303D8")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002E47")]
				[Address(RVA = "0xBE2548", Offset = "0xBE2548", VA = "0xBE2548")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9303E8", Offset = "0x9303E8")]
				private set
				{
				}
			}

			[Token(Token = "0x170005B2")]
			public ControllerMap map
			{
				[Token(Token = "0x6002E48")]
				[Address(RVA = "0xBE2550", Offset = "0xBE2550", VA = "0xBE2550")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9303F8", Offset = "0x9303F8")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002E49")]
				[Address(RVA = "0xBE2558", Offset = "0xBE2558", VA = "0xBE2558")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x930408", Offset = "0x930408")]
				private set
				{
				}
			}

			[Token(Token = "0x170005B3")]
			public ActionElementMap aem
			{
				[Token(Token = "0x6002E4A")]
				[Address(RVA = "0xBE2560", Offset = "0xBE2560", VA = "0xBE2560")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x930418", Offset = "0x930418")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002E4B")]
				[Address(RVA = "0xBE2568", Offset = "0xBE2568", VA = "0xBE2568")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x930428", Offset = "0x930428")]
				private set
				{
				}
			}

			[Token(Token = "0x170005B4")]
			public ControllerType controllerType
			{
				[Token(Token = "0x6002E4C")]
				[Address(RVA = "0xBE2570", Offset = "0xBE2570", VA = "0xBE2570")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x930438", Offset = "0x930438")]
				get
				{
					return default(ControllerType);
				}
				[Token(Token = "0x6002E4D")]
				[Address(RVA = "0xBE2578", Offset = "0xBE2578", VA = "0xBE2578")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x930448", Offset = "0x930448")]
				private set
				{
				}
			}

			[Token(Token = "0x170005B5")]
			public int controllerId
			{
				[Token(Token = "0x6002E4E")]
				[Address(RVA = "0xBE2580", Offset = "0xBE2580", VA = "0xBE2580")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x930458", Offset = "0x930458")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6002E4F")]
				[Address(RVA = "0xBE2588", Offset = "0xBE2588", VA = "0xBE2588")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x930468", Offset = "0x930468")]
				private set
				{
				}
			}

			[Token(Token = "0x170005B6")]
			public ControllerPollingInfo pollingInfo
			{
				[Token(Token = "0x6002E50")]
				[Address(RVA = "0xBE2590", Offset = "0xBE2590", VA = "0xBE2590")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x930478", Offset = "0x930478")]
				get
				{
					return default(ControllerPollingInfo);
				}
				[Token(Token = "0x6002E51")]
				[Address(RVA = "0xBE25B0", Offset = "0xBE25B0", VA = "0xBE25B0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x930488", Offset = "0x930488")]
				set
				{
				}
			}

			[Token(Token = "0x170005B7")]
			public ModifierKeyFlags modifierKeyFlags
			{
				[Token(Token = "0x6002E52")]
				[Address(RVA = "0xBE25D0", Offset = "0xBE25D0", VA = "0xBE25D0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x930498", Offset = "0x930498")]
				get
				{
					return default(ModifierKeyFlags);
				}
				[Token(Token = "0x6002E53")]
				[Address(RVA = "0xBE25D8", Offset = "0xBE25D8", VA = "0xBE25D8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9304A8", Offset = "0x9304A8")]
				set
				{
				}
			}

			[Token(Token = "0x170005B8")]
			public AxisRange axisRange
			{
				[Token(Token = "0x6002E54")]
				[Address(RVA = "0xBE25E0", Offset = "0xBE25E0", VA = "0xBE25E0")]
				get
				{
					return default(AxisRange);
				}
			}

			[Token(Token = "0x170005B9")]
			public string elementName
			{
				[Token(Token = "0x6002E55")]
				[Address(RVA = "0xBE2628", Offset = "0xBE2628", VA = "0xBE2628")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002E56")]
			[Address(RVA = "0xBE272C", Offset = "0xBE272C", VA = "0xBE272C")]
			public InputMapping(string actionName, InputFieldInfo fieldInfo, ControllerMap map, ActionElementMap aem, ControllerType controllerType, int controllerId)
			{
			}

			[Token(Token = "0x6002E57")]
			[Address(RVA = "0xBE278C", Offset = "0xBE278C", VA = "0xBE278C")]
			public ElementAssignment ToElementAssignment(ControllerPollingInfo pollingInfo)
			{
				return default(ElementAssignment);
			}

			[Token(Token = "0x6002E58")]
			[Address(RVA = "0xBE2894", Offset = "0xBE2894", VA = "0xBE2894")]
			public ElementAssignment ToElementAssignment(ControllerPollingInfo pollingInfo, ModifierKeyFlags modifierKeyFlags)
			{
				return default(ElementAssignment);
			}

			[Token(Token = "0x6002E59")]
			[Address(RVA = "0xBE27E8", Offset = "0xBE27E8", VA = "0xBE27E8")]
			public ElementAssignment ToElementAssignment()
			{
				return default(ElementAssignment);
			}
		}

		[Token(Token = "0x2000618")]
		private class AxisCalibrator
		{
			[Token(Token = "0x4002AA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AxisCalibrationData data;

			[Token(Token = "0x4002AA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public readonly Joystick joystick;

			[Token(Token = "0x4002AA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public readonly int axisIndex;

			[Token(Token = "0x4002AAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Controller.Axis axis;

			[Token(Token = "0x4002AAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private bool firstRun;

			[Token(Token = "0x170005BA")]
			public bool isValid
			{
				[Token(Token = "0x6002E5A")]
				[Address(RVA = "0xBDEA10", Offset = "0xBDEA10", VA = "0xBDEA10")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6002E5B")]
			[Address(RVA = "0xBDEA20", Offset = "0xBDEA20", VA = "0xBDEA20")]
			public AxisCalibrator(Joystick joystick, int axisIndex)
			{
			}

			[Token(Token = "0x6002E5C")]
			[Address(RVA = "0xBDEBA8", Offset = "0xBDEBA8", VA = "0xBDEBA8")]
			public void RecordMinMax()
			{
			}

			[Token(Token = "0x6002E5D")]
			[Address(RVA = "0xBDEC10", Offset = "0xBDEC10", VA = "0xBDEC10")]
			public void RecordZero()
			{
			}

			[Token(Token = "0x6002E5E")]
			[Address(RVA = "0xBDEC40", Offset = "0xBDEC40", VA = "0xBDEC40")]
			public void Commit()
			{
			}
		}

		[Token(Token = "0x2000619")]
		[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x9194F8", Offset = "0x9194F8")]
		private class IndexedDictionary<TKey, TValue>
		{
			[Token(Token = "0x200061A")]
			private class Entry
			{
				[Token(Token = "0x4002AAD")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public TKey key;

				[Token(Token = "0x4002AAE")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public TValue value;

				[Token(Token = "0x6002E68")]
				public Entry(TKey key, TValue value)
				{
				}
			}

			[Token(Token = "0x4002AAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private List<Entry> list;

			[Token(Token = "0x170005BB")]
			public int Count
			{
				[Token(Token = "0x6002E5F")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x170005BC")]
			public TValue Item
			{
				[Token(Token = "0x6002E61")]
				get
				{
					return (TValue)null;
				}
			}

			[Token(Token = "0x6002E60")]
			public IndexedDictionary()
			{
			}

			[Token(Token = "0x6002E62")]
			public TValue Get(TKey key)
			{
				return (TValue)null;
			}

			[Token(Token = "0x6002E63")]
			public bool TryGet(TKey key, out TValue value)
			{
				return default(bool);
			}

			[Token(Token = "0x6002E64")]
			public void Add(TKey key, TValue value)
			{
			}

			[Token(Token = "0x6002E65")]
			public int IndexOfKey(TKey key)
			{
				return default(int);
			}

			[Token(Token = "0x6002E66")]
			public bool ContainsKey(TKey key)
			{
				return default(bool);
			}

			[Token(Token = "0x6002E67")]
			public void Clear()
			{
			}
		}

		[Token(Token = "0x200061B")]
		private enum LayoutElementSizeType
		{
			[Token(Token = "0x4002AB0")]
			MinSize,
			[Token(Token = "0x4002AB1")]
			PreferredSize
		}

		[Token(Token = "0x200061C")]
		private enum WindowType
		{
			[Token(Token = "0x4002AB3")]
			None,
			[Token(Token = "0x4002AB4")]
			ChooseJoystick,
			[Token(Token = "0x4002AB5")]
			JoystickAssignmentConflict,
			[Token(Token = "0x4002AB6")]
			ElementAssignment,
			[Token(Token = "0x4002AB7")]
			ElementAssignmentPrePolling,
			[Token(Token = "0x4002AB8")]
			ElementAssignmentPolling,
			[Token(Token = "0x4002AB9")]
			ElementAssignmentResult,
			[Token(Token = "0x4002ABA")]
			ElementAssignmentConflict,
			[Token(Token = "0x4002ABB")]
			Calibration,
			[Token(Token = "0x4002ABC")]
			CalibrateStep1,
			[Token(Token = "0x4002ABD")]
			CalibrateStep2
		}

		[Token(Token = "0x200061D")]
		private class InputGrid
		{
			[Token(Token = "0x4002ABE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private InputGridEntryList list;

			[Token(Token = "0x4002ABF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private List<GameObject> groups;

			[Token(Token = "0x6002E69")]
			[Address(RVA = "0xBE1404", Offset = "0xBE1404", VA = "0xBE1404")]
			public InputGrid()
			{
			}

			[Token(Token = "0x6002E6A")]
			[Address(RVA = "0xBE1524", Offset = "0xBE1524", VA = "0xBE1524")]
			public void AddMapCategory(int mapCategoryId)
			{
			}

			[Token(Token = "0x6002E6B")]
			[Address(RVA = "0xBE1610", Offset = "0xBE1610", VA = "0xBE1610")]
			public void AddAction(int mapCategoryId, InputAction action, AxisRange axisRange)
			{
			}

			[Token(Token = "0x6002E6C")]
			[Address(RVA = "0xBE162C", Offset = "0xBE162C", VA = "0xBE162C")]
			public void AddActionCategory(int mapCategoryId, int actionCategoryId)
			{
			}

			[Token(Token = "0x6002E6D")]
			[Address(RVA = "0xBE1648", Offset = "0xBE1648", VA = "0xBE1648")]
			public void AddInputFieldSet(int mapCategoryId, InputAction action, AxisRange axisRange, ControllerType controllerType, GameObject fieldSetContainer)
			{
			}

			[Token(Token = "0x6002E6E")]
			[Address(RVA = "0xBE16A8", Offset = "0xBE16A8", VA = "0xBE16A8")]
			public void AddInputField(int mapCategoryId, InputAction action, AxisRange axisRange, ControllerType controllerType, int fieldIndex, GUIInputField inputField)
			{
			}

			[Token(Token = "0x6002E6F")]
			[Address(RVA = "0xBE171C", Offset = "0xBE171C", VA = "0xBE171C")]
			public void AddGroup(GameObject group)
			{
			}

			[Token(Token = "0x6002E70")]
			[Address(RVA = "0xBE1780", Offset = "0xBE1780", VA = "0xBE1780")]
			public void AddActionLabel(int mapCategoryId, int actionId, AxisRange axisRange, GUILabel label)
			{
			}

			[Token(Token = "0x6002E71")]
			[Address(RVA = "0xBE1848", Offset = "0xBE1848", VA = "0xBE1848")]
			public void AddActionCategoryLabel(int mapCategoryId, int actionCategoryId, GUILabel label)
			{
			}

			[Token(Token = "0x6002E72")]
			[Address(RVA = "0xBE1900", Offset = "0xBE1900", VA = "0xBE1900")]
			public bool Contains(int mapCategoryId, int actionId, AxisRange axisRange, ControllerType controllerType, int fieldIndex)
			{
				return default(bool);
			}

			[Token(Token = "0x6002E73")]
			[Address(RVA = "0xBE1958", Offset = "0xBE1958", VA = "0xBE1958")]
			public GUIInputField GetGUIInputField(int mapCategoryId, int actionId, AxisRange axisRange, ControllerType controllerType, int fieldIndex)
			{
				return null;
			}

			[Token(Token = "0x6002E74")]
			[Address(RVA = "0xBE19B0", Offset = "0xBE19B0", VA = "0xBE19B0")]
			public IEnumerable<InputActionSet> GetActionSets(int mapCategoryId)
			{
				return null;
			}

			[Token(Token = "0x6002E75")]
			[Address(RVA = "0xBE1A44", Offset = "0xBE1A44", VA = "0xBE1A44")]
			public void SetColumnHeight(int mapCategoryId, float height)
			{
			}

			[Token(Token = "0x6002E76")]
			[Address(RVA = "0xBE1AF0", Offset = "0xBE1AF0", VA = "0xBE1AF0")]
			public float GetColumnHeight(int mapCategoryId)
			{
				return default(float);
			}

			[Token(Token = "0x6002E77")]
			[Address(RVA = "0xBE1B8C", Offset = "0xBE1B8C", VA = "0xBE1B8C")]
			public void SetFieldsActive(int mapCategoryId, bool state)
			{
			}

			[Token(Token = "0x6002E78")]
			[Address(RVA = "0xBE1CA0", Offset = "0xBE1CA0", VA = "0xBE1CA0")]
			public void SetFieldLabel(int mapCategoryId, int actionId, AxisRange axisRange, ControllerType controllerType, int index, string label)
			{
			}

			[Token(Token = "0x6002E79")]
			[Address(RVA = "0xBE1D0C", Offset = "0xBE1D0C", VA = "0xBE1D0C")]
			public void PopulateField(int mapCategoryId, int actionId, AxisRange axisRange, ControllerType controllerType, int controllerId, int index, int actionElementMapId, string label, bool invert)
			{
			}

			[Token(Token = "0x6002E7A")]
			[Address(RVA = "0xBE1DB4", Offset = "0xBE1DB4", VA = "0xBE1DB4")]
			public void SetFixedFieldData(int mapCategoryId, int actionId, AxisRange axisRange, ControllerType controllerType, int controllerId)
			{
			}

			[Token(Token = "0x6002E7B")]
			[Address(RVA = "0xBE1E0C", Offset = "0xBE1E0C", VA = "0xBE1E0C")]
			public void InitializeFields(int mapCategoryId)
			{
			}

			[Token(Token = "0x6002E7C")]
			[Address(RVA = "0xBE1F08", Offset = "0xBE1F08", VA = "0xBE1F08")]
			public void Show(int mapCategoryId)
			{
			}

			[Token(Token = "0x6002E7D")]
			[Address(RVA = "0xBE1FA8", Offset = "0xBE1FA8", VA = "0xBE1FA8")]
			public void HideAll()
			{
			}

			[Token(Token = "0x6002E7E")]
			[Address(RVA = "0xBE2070", Offset = "0xBE2070", VA = "0xBE2070")]
			public void ClearLabels(int mapCategoryId)
			{
			}

			[Token(Token = "0x6002E7F")]
			[Address(RVA = "0xBE216C", Offset = "0xBE216C", VA = "0xBE216C")]
			private void ClearGroups()
			{
			}

			[Token(Token = "0x6002E80")]
			[Address(RVA = "0xBE2294", Offset = "0xBE2294", VA = "0xBE2294")]
			public void ClearAll()
			{
			}
		}

		[Token(Token = "0x200061E")]
		private class InputGridEntryList
		{
			[Token(Token = "0x200061F")]
			private class MapCategoryEntry
			{
				[Token(Token = "0x4002AC1")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private List<ActionEntry> _actionList;

				[Token(Token = "0x4002AC2")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private IndexedDictionary<int, ActionCategoryEntry> _actionCategoryList;

				[Token(Token = "0x4002AC3")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				private float _columnHeight;

				[Token(Token = "0x170005BD")]
				public List<ActionEntry> actionList
				{
					[Token(Token = "0x6002E9C")]
					[Address(RVA = "0x11C7C18", Offset = "0x11C7C18", VA = "0x11C7C18")]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x170005BE")]
				public IndexedDictionary<int, ActionCategoryEntry> actionCategoryList
				{
					[Token(Token = "0x6002E9D")]
					[Address(RVA = "0x11C7C20", Offset = "0x11C7C20", VA = "0x11C7C20")]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x170005BF")]
				public float columnHeight
				{
					[Token(Token = "0x6002E9E")]
					[Address(RVA = "0x11C7C28", Offset = "0x11C7C28", VA = "0x11C7C28")]
					get
					{
						return default(float);
					}
					[Token(Token = "0x6002E9F")]
					[Address(RVA = "0x11C7C30", Offset = "0x11C7C30", VA = "0x11C7C30")]
					set
					{
					}
				}

				[Token(Token = "0x6002EA0")]
				[Address(RVA = "0x11C7C38", Offset = "0x11C7C38", VA = "0x11C7C38")]
				public MapCategoryEntry()
				{
				}

				[Token(Token = "0x6002EA1")]
				[Address(RVA = "0x11C7CF4", Offset = "0x11C7CF4", VA = "0x11C7CF4")]
				public ActionEntry GetActionEntry(int actionId, AxisRange axisRange)
				{
					return null;
				}

				[Token(Token = "0x6002EA2")]
				[Address(RVA = "0x11C7D8C", Offset = "0x11C7D8C", VA = "0x11C7D8C")]
				public int IndexOfActionEntry(int actionId, AxisRange axisRange)
				{
					return default(int);
				}

				[Token(Token = "0x6002EA3")]
				[Address(RVA = "0x11C7E68", Offset = "0x11C7E68", VA = "0x11C7E68")]
				public bool ContainsActionEntry(int actionId, AxisRange axisRange)
				{
					return default(bool);
				}

				[Token(Token = "0x6002EA4")]
				[Address(RVA = "0x11C7E84", Offset = "0x11C7E84", VA = "0x11C7E84")]
				public ActionEntry AddAction(InputAction action, AxisRange axisRange)
				{
					return null;
				}

				[Token(Token = "0x6002EA5")]
				[Address(RVA = "0x11C7F88", Offset = "0x11C7F88", VA = "0x11C7F88")]
				public ActionCategoryEntry GetActionCategoryEntry(int actionCategoryId)
				{
					return null;
				}

				[Token(Token = "0x6002EA6")]
				[Address(RVA = "0x11C8024", Offset = "0x11C8024", VA = "0x11C8024")]
				public ActionCategoryEntry AddActionCategory(int actionCategoryId)
				{
					return null;
				}

				[Token(Token = "0x6002EA7")]
				[Address(RVA = "0x11C8120", Offset = "0x11C8120", VA = "0x11C8120")]
				public void SetAllActive(bool state)
				{
				}
			}

			[Token(Token = "0x2000620")]
			private class ActionEntry
			{
				[Token(Token = "0x4002AC4")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private IndexedDictionary<int, FieldSet> fieldSets;

				[Token(Token = "0x4002AC5")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public GUILabel label;

				[Token(Token = "0x4002AC6")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public readonly InputAction action;

				[Token(Token = "0x4002AC7")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				public readonly AxisRange axisRange;

				[Token(Token = "0x4002AC8")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				public readonly InputActionSet actionSet;

				[Token(Token = "0x6002EA8")]
				[Address(RVA = "0x11C6D0C", Offset = "0x11C6D0C", VA = "0x11C6D0C")]
				public ActionEntry(InputAction action, AxisRange axisRange)
				{
				}

				[Token(Token = "0x6002EA9")]
				[Address(RVA = "0x11C6DE0", Offset = "0x11C6DE0", VA = "0x11C6DE0")]
				public void SetLabel(GUILabel label)
				{
				}

				[Token(Token = "0x6002EAA")]
				[Address(RVA = "0x11C6DE8", Offset = "0x11C6DE8", VA = "0x11C6DE8")]
				public bool Matches(int actionId, AxisRange axisRange)
				{
					return default(bool);
				}

				[Token(Token = "0x6002EAB")]
				[Address(RVA = "0x11C6E20", Offset = "0x11C6E20", VA = "0x11C6E20")]
				public void AddInputFieldSet(ControllerType controllerType, GameObject fieldSetContainer)
				{
				}

				[Token(Token = "0x6002EAC")]
				[Address(RVA = "0x11C6F80", Offset = "0x11C6F80", VA = "0x11C6F80")]
				public void AddInputField(ControllerType controllerType, int fieldIndex, GUIInputField inputField)
				{
				}

				[Token(Token = "0x6002EAD")]
				[Address(RVA = "0x11C7094", Offset = "0x11C7094", VA = "0x11C7094")]
				public GUIInputField GetGUIInputField(ControllerType controllerType, int fieldIndex)
				{
					return null;
				}

				[Token(Token = "0x6002EAE")]
				[Address(RVA = "0x11C71A4", Offset = "0x11C71A4", VA = "0x11C71A4")]
				public bool Contains(ControllerType controllerType, int fieldId)
				{
					return default(bool);
				}

				[Token(Token = "0x6002EAF")]
				[Address(RVA = "0x11C7278", Offset = "0x11C7278", VA = "0x11C7278")]
				public void SetFieldLabel(ControllerType controllerType, int index, string label)
				{
				}

				[Token(Token = "0x6002EB0")]
				[Address(RVA = "0x11C73B0", Offset = "0x11C73B0", VA = "0x11C73B0")]
				public void PopulateField(ControllerType controllerType, int controllerId, int index, int actionElementMapId, string label, bool invert)
				{
				}

				[Token(Token = "0x6002EB1")]
				[Address(RVA = "0x11C7578", Offset = "0x11C7578", VA = "0x11C7578")]
				public void SetFixedFieldData(ControllerType controllerType, int controllerId)
				{
				}

				[Token(Token = "0x6002EB2")]
				[Address(RVA = "0x11C7698", Offset = "0x11C7698", VA = "0x11C7698")]
				public void Initialize()
				{
				}

				[Token(Token = "0x6002EB3")]
				[Address(RVA = "0x11C7860", Offset = "0x11C7860", VA = "0x11C7860")]
				public void SetActive(bool state)
				{
				}

				[Token(Token = "0x6002EB4")]
				[Address(RVA = "0x11C793C", Offset = "0x11C793C", VA = "0x11C793C")]
				public void ClearLabels()
				{
				}

				[Token(Token = "0x6002EB5")]
				[Address(RVA = "0x11C7A8C", Offset = "0x11C7A8C", VA = "0x11C7A8C")]
				public void SetFieldsActive(bool state)
				{
				}
			}

			[Token(Token = "0x2000621")]
			private class FieldSet
			{
				[Token(Token = "0x4002AC9")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public readonly GameObject groupContainer;

				[Token(Token = "0x4002ACA")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public readonly IndexedDictionary<int, GUIInputField> fields;

				[Token(Token = "0x6002EB6")]
				[Address(RVA = "0x11C6EF4", Offset = "0x11C6EF4", VA = "0x11C6EF4")]
				public FieldSet(GameObject groupContainer)
				{
				}
			}

			[Token(Token = "0x2000622")]
			private class ActionCategoryEntry
			{
				[Token(Token = "0x4002ACB")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public readonly int actionCategoryId;

				[Token(Token = "0x4002ACC")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public GUILabel label;

				[Token(Token = "0x6002EB7")]
				[Address(RVA = "0x11C6CC0", Offset = "0x11C6CC0", VA = "0x11C6CC0")]
				public ActionCategoryEntry(int actionCategoryId)
				{
				}

				[Token(Token = "0x6002EB8")]
				[Address(RVA = "0x11C6CEC", Offset = "0x11C6CEC", VA = "0x11C6CEC")]
				public void SetLabel(GUILabel label)
				{
				}

				[Token(Token = "0x6002EB9")]
				[Address(RVA = "0x11C6CF4", Offset = "0x11C6CF4", VA = "0x11C6CF4")]
				public void SetActive(bool state)
				{
				}
			}

			[Token(Token = "0x2000623")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x919530", Offset = "0x919530")]
			private sealed class <GetActionSets>d__18 : IEnumerable<InputActionSet>, IEnumerable, IEnumerator<InputActionSet>, IEnumerator, IDisposable
			{
				[Token(Token = "0x4002ACD")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private int <>1__state;

				[Token(Token = "0x4002ACE")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private InputActionSet <>2__current;

				[Token(Token = "0x4002ACF")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				private int <>l__initialThreadId;

				[Token(Token = "0x4002AD0")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				public InputGridEntryList <>4__this;

				[Token(Token = "0x4002AD1")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				private int mapCategoryId;

				[Token(Token = "0x4002AD2")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
				public int <>3__mapCategoryId;

				[Token(Token = "0x4002AD3")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
				private List<ActionEntry> <list>5__2;

				[Token(Token = "0x4002AD4")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
				private int <count>5__3;

				[Token(Token = "0x4002AD5")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
				private int <i>5__4;

				[Token(Token = "0x170005C0")]
				private InputActionSet System.Collections.Generic.IEnumerator<Rewired.UI.ControlMapper.ControlMapper.InputActionSet>.Current
				{
					[Token(Token = "0x6002EBD")]
					[Address(RVA = "0x11C6BBC", Offset = "0x11C6BBC", VA = "0x11C6BBC", Slot = "6")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x170005C1")]
				private object System.Collections.IEnumerator.Current
				{
					[Token(Token = "0x6002EBF")]
					[Address(RVA = "0x11C6C04", Offset = "0x11C6C04", VA = "0x11C6C04", Slot = "9")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x6002EBA")]
				[Address(RVA = "0x11C6A54", Offset = "0x11C6A54", VA = "0x11C6A54")]
				[DebuggerHidden]
				public <GetActionSets>d__18(int <>1__state)
				{
				}

				[Token(Token = "0x6002EBB")]
				[Address(RVA = "0x11C6A8C", Offset = "0x11C6A8C", VA = "0x11C6A8C", Slot = "7")]
				[DebuggerHidden]
				private void System.IDisposable.Dispose()
				{
				}

				[Token(Token = "0x6002EBC")]
				[Address(RVA = "0x11C6A90", Offset = "0x11C6A90", VA = "0x11C6A90", Slot = "8")]
				private bool MoveNext()
				{
					return default(bool);
				}

				[Token(Token = "0x6002EBE")]
				[Address(RVA = "0x11C6BC4", Offset = "0x11C6BC4", VA = "0x11C6BC4", Slot = "10")]
				[DebuggerHidden]
				private void System.Collections.IEnumerator.Reset()
				{
				}

				[Token(Token = "0x6002EC0")]
				[Address(RVA = "0x11C6C0C", Offset = "0x11C6C0C", VA = "0x11C6C0C", Slot = "4")]
				[DebuggerHidden]
				private IEnumerator<InputActionSet> System.Collections.Generic.IEnumerable<Rewired.UI.ControlMapper.ControlMapper.InputActionSet>.GetEnumerator()
				{
					return null;
				}

				[Token(Token = "0x6002EC1")]
				[Address(RVA = "0x11C6CBC", Offset = "0x11C6CBC", VA = "0x11C6CBC", Slot = "5")]
				[DebuggerHidden]
				private IEnumerator System.Collections.IEnumerable.GetEnumerator()
				{
					return null;
				}
			}

			[Token(Token = "0x4002AC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private IndexedDictionary<int, MapCategoryEntry> entries;

			[Token(Token = "0x6002E81")]
			[Address(RVA = "0xBE14A8", Offset = "0xBE14A8", VA = "0xBE14A8")]
			public InputGridEntryList()
			{
			}

			[Token(Token = "0x6002E82")]
			[Address(RVA = "0xBE153C", Offset = "0xBE153C", VA = "0xBE153C")]
			public void AddMapCategory(int mapCategoryId)
			{
			}

			[Token(Token = "0x6002E83")]
			[Address(RVA = "0xBE1628", Offset = "0xBE1628", VA = "0xBE1628")]
			public void AddAction(int mapCategoryId, InputAction action, AxisRange axisRange)
			{
			}

			[Token(Token = "0x6002E84")]
			[Address(RVA = "0xBE2314", Offset = "0xBE2314", VA = "0xBE2314")]
			private ActionEntry AddActionEntry(int mapCategoryId, InputAction action, AxisRange axisRange)
			{
				return null;
			}

			[Token(Token = "0x6002E85")]
			[Address(RVA = "0xBE1798", Offset = "0xBE1798", VA = "0xBE1798")]
			public void AddActionLabel(int mapCategoryId, int actionId, AxisRange axisRange, GUILabel label)
			{
			}

			[Token(Token = "0x6002E86")]
			[Address(RVA = "0xBE1644", Offset = "0xBE1644", VA = "0xBE1644")]
			public void AddActionCategory(int mapCategoryId, int actionCategoryId)
			{
			}

			[Token(Token = "0x6002E87")]
			[Address(RVA = "0xBE23BC", Offset = "0xBE23BC", VA = "0xBE23BC")]
			private ActionCategoryEntry AddActionCategoryEntry(int mapCategoryId, int actionCategoryId)
			{
				return null;
			}

			[Token(Token = "0x6002E88")]
			[Address(RVA = "0xBE1860", Offset = "0xBE1860", VA = "0xBE1860")]
			public void AddActionCategoryLabel(int mapCategoryId, int actionCategoryId, GUILabel label)
			{
			}

			[Token(Token = "0x6002E89")]
			[Address(RVA = "0xBE1660", Offset = "0xBE1660", VA = "0xBE1660")]
			public void AddInputFieldSet(int mapCategoryId, InputAction action, AxisRange axisRange, ControllerType controllerType, GameObject fieldSetContainer)
			{
			}

			[Token(Token = "0x6002E8A")]
			[Address(RVA = "0xBE16C0", Offset = "0xBE16C0", VA = "0xBE16C0")]
			public void AddInputField(int mapCategoryId, InputAction action, AxisRange axisRange, ControllerType controllerType, int fieldIndex, GUIInputField inputField)
			{
			}

			[Token(Token = "0x6002E8B")]
			[Address(RVA = "0xBE246C", Offset = "0xBE246C", VA = "0xBE246C")]
			public bool Contains(int mapCategoryId, int actionId, AxisRange axisRange)
			{
				return default(bool);
			}

			[Token(Token = "0x6002E8C")]
			[Address(RVA = "0xBE1918", Offset = "0xBE1918", VA = "0xBE1918")]
			public bool Contains(int mapCategoryId, int actionId, AxisRange axisRange, ControllerType controllerType, int fieldIndex)
			{
				return default(bool);
			}

			[Token(Token = "0x6002E8D")]
			[Address(RVA = "0xBE1A5C", Offset = "0xBE1A5C", VA = "0xBE1A5C")]
			public void SetColumnHeight(int mapCategoryId, float height)
			{
			}

			[Token(Token = "0x6002E8E")]
			[Address(RVA = "0xBE1B08", Offset = "0xBE1B08", VA = "0xBE1B08")]
			public float GetColumnHeight(int mapCategoryId)
			{
				return default(float);
			}

			[Token(Token = "0x6002E8F")]
			[Address(RVA = "0xBE1970", Offset = "0xBE1970", VA = "0xBE1970")]
			public GUIInputField GetGUIInputField(int mapCategoryId, int actionId, AxisRange axisRange, ControllerType controllerType, int fieldIndex)
			{
				return null;
			}

			[Token(Token = "0x6002E90")]
			[Address(RVA = "0xBE2488", Offset = "0xBE2488", VA = "0xBE2488")]
			private ActionEntry GetActionEntry(int mapCategoryId, int actionId, AxisRange axisRange)
			{
				return null;
			}

			[Token(Token = "0x6002E91")]
			[Address(RVA = "0xBE2458", Offset = "0xBE2458", VA = "0xBE2458")]
			private ActionEntry GetActionEntry(int mapCategoryId, InputAction action, AxisRange axisRange)
			{
				return null;
			}

			[Token(Token = "0x6002E92")]
			[Address(RVA = "0xBE19C8", Offset = "0xBE19C8", VA = "0xBE19C8")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9304B8", Offset = "0x9304B8")]
			public IEnumerable<InputActionSet> GetActionSets(int mapCategoryId)
			{
				return null;
			}

			[Token(Token = "0x6002E93")]
			[Address(RVA = "0xBE1BA8", Offset = "0xBE1BA8", VA = "0xBE1BA8")]
			public void SetFieldsActive(int mapCategoryId, bool state)
			{
			}

			[Token(Token = "0x6002E94")]
			[Address(RVA = "0xBE1CB8", Offset = "0xBE1CB8", VA = "0xBE1CB8")]
			public void SetLabel(int mapCategoryId, int actionId, AxisRange axisRange, ControllerType controllerType, int index, string label)
			{
			}

			[Token(Token = "0x6002E95")]
			[Address(RVA = "0xBE1D3C", Offset = "0xBE1D3C", VA = "0xBE1D3C")]
			public void PopulateField(int mapCategoryId, int actionId, AxisRange axisRange, ControllerType controllerType, int controllerId, int index, int actionElementMapId, string label, bool invert)
			{
			}

			[Token(Token = "0x6002E96")]
			[Address(RVA = "0xBE1DCC", Offset = "0xBE1DCC", VA = "0xBE1DCC")]
			public void SetFixedFieldData(int mapCategoryId, int actionId, AxisRange axisRange, ControllerType controllerType, int controllerId)
			{
			}

			[Token(Token = "0x6002E97")]
			[Address(RVA = "0xBE1E24", Offset = "0xBE1E24", VA = "0xBE1E24")]
			public void InitializeFields(int mapCategoryId)
			{
			}

			[Token(Token = "0x6002E98")]
			[Address(RVA = "0xBE1F20", Offset = "0xBE1F20", VA = "0xBE1F20")]
			public void Show(int mapCategoryId)
			{
			}

			[Token(Token = "0x6002E99")]
			[Address(RVA = "0xBE1FC0", Offset = "0xBE1FC0", VA = "0xBE1FC0")]
			public void HideAll()
			{
			}

			[Token(Token = "0x6002E9A")]
			[Address(RVA = "0xBE2088", Offset = "0xBE2088", VA = "0xBE2088")]
			public void ClearLabels(int mapCategoryId)
			{
			}

			[Token(Token = "0x6002E9B")]
			[Address(RVA = "0xBE22C0", Offset = "0xBE22C0", VA = "0xBE22C0")]
			public void Clear()
			{
			}
		}

		[Token(Token = "0x2000624")]
		private class WindowManager
		{
			[Token(Token = "0x4002AD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private List<Window> windows;

			[Token(Token = "0x4002AD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private GameObject windowPrefab;

			[Token(Token = "0x4002AD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Transform parent;

			[Token(Token = "0x4002AD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private GameObject fader;

			[Token(Token = "0x4002ADA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int idCounter;

			[Token(Token = "0x170005C2")]
			public bool isWindowOpen
			{
				[Token(Token = "0x6002EC2")]
				[Address(RVA = "0xBE35B4", Offset = "0xBE35B4", VA = "0xBE35B4")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170005C3")]
			public Window topWindow
			{
				[Token(Token = "0x6002EC3")]
				[Address(RVA = "0xBE36A4", Offset = "0xBE36A4", VA = "0xBE36A4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002EC4")]
			[Address(RVA = "0xBE37B8", Offset = "0xBE37B8", VA = "0xBE37B8")]
			public WindowManager(GameObject windowPrefab, GameObject faderPrefab, Transform parent)
			{
			}

			[Token(Token = "0x6002EC5")]
			[Address(RVA = "0xBE393C", Offset = "0xBE393C", VA = "0xBE393C")]
			public Window OpenWindow(string name, int width, int height)
			{
				return null;
			}

			[Token(Token = "0x6002EC6")]
			[Address(RVA = "0xBE3CB4", Offset = "0xBE3CB4", VA = "0xBE3CB4")]
			public Window OpenWindow(GameObject windowPrefab, string name)
			{
				return null;
			}

			[Token(Token = "0x6002EC7")]
			[Address(RVA = "0xBE3FCC", Offset = "0xBE3FCC", VA = "0xBE3FCC")]
			public void CloseTop()
			{
			}

			[Token(Token = "0x6002EC8")]
			[Address(RVA = "0xBE41E8", Offset = "0xBE41E8", VA = "0xBE41E8")]
			public void CloseWindow(int windowId)
			{
			}

			[Token(Token = "0x6002EC9")]
			[Address(RVA = "0xBE4398", Offset = "0xBE4398", VA = "0xBE4398")]
			public void CloseWindow(Window window)
			{
			}

			[Token(Token = "0x6002ECA")]
			[Address(RVA = "0xBE468C", Offset = "0xBE468C", VA = "0xBE468C")]
			public void CloseAll()
			{
			}

			[Token(Token = "0x6002ECB")]
			[Address(RVA = "0xBE47FC", Offset = "0xBE47FC", VA = "0xBE47FC")]
			public void CancelAll()
			{
			}

			[Token(Token = "0x6002ECC")]
			[Address(RVA = "0xBE4210", Offset = "0xBE4210", VA = "0xBE4210")]
			public Window GetWindow(int windowId)
			{
				return null;
			}

			[Token(Token = "0x6002ECD")]
			[Address(RVA = "0xBE4944", Offset = "0xBE4944", VA = "0xBE4944")]
			public bool IsFocused(int windowId)
			{
				return default(bool);
			}

			[Token(Token = "0x6002ECE")]
			[Address(RVA = "0xBE49F8", Offset = "0xBE49F8", VA = "0xBE49F8")]
			public void Focus(int windowId)
			{
			}

			[Token(Token = "0x6002ECF")]
			[Address(RVA = "0xBE4A20", Offset = "0xBE4A20", VA = "0xBE4A20")]
			public void Focus(Window window)
			{
			}

			[Token(Token = "0x6002ED0")]
			[Address(RVA = "0xBE4ACC", Offset = "0xBE4ACC", VA = "0xBE4ACC")]
			private void DefocusOtherWindows(int focusedWindowId)
			{
			}

			[Token(Token = "0x6002ED1")]
			[Address(RVA = "0xBE3B70", Offset = "0xBE3B70", VA = "0xBE3B70")]
			private void UpdateFader()
			{
			}

			[Token(Token = "0x6002ED2")]
			[Address(RVA = "0xBE45E8", Offset = "0xBE45E8", VA = "0xBE45E8")]
			private void FocusTopWindow()
			{
			}

			[Token(Token = "0x6002ED3")]
			[Address(RVA = "0xBE391C", Offset = "0xBE391C", VA = "0xBE391C")]
			private void SetFaderActive(bool state)
			{
			}

			[Token(Token = "0x6002ED4")]
			[Address(RVA = "0xBE396C", Offset = "0xBE396C", VA = "0xBE396C")]
			private Window InstantiateWindow(string name, int width, int height)
			{
				return null;
			}

			[Token(Token = "0x6002ED5")]
			[Address(RVA = "0xBE3DA8", Offset = "0xBE3DA8", VA = "0xBE3DA8")]
			private Window InstantiateWindow(string name, GameObject windowPrefab)
			{
				return null;
			}

			[Token(Token = "0x6002ED6")]
			[Address(RVA = "0xBE4130", Offset = "0xBE4130", VA = "0xBE4130")]
			private void DestroyWindow(Window window)
			{
			}

			[Token(Token = "0x6002ED7")]
			[Address(RVA = "0xBE4C34", Offset = "0xBE4C34", VA = "0xBE4C34")]
			private int GetNewId()
			{
				return default(int);
			}

			[Token(Token = "0x6002ED8")]
			[Address(RVA = "0xBE4C48", Offset = "0xBE4C48", VA = "0xBE4C48")]
			public void ClearCompletely()
			{
			}
		}

		[Token(Token = "0x2000625")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x919540", Offset = "0x919540")]
		private sealed class <>c__DisplayClass341_0
		{
			[Token(Token = "0x4002ADB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ControlMapper <>4__this;

			[Token(Token = "0x4002ADC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Window window;

			[Token(Token = "0x4002ADD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int controllerId;

			[Token(Token = "0x6002ED9")]
			[Address(RVA = "0xBDD8CC", Offset = "0xBDD8CC", VA = "0xBDD8CC")]
			public <>c__DisplayClass341_0()
			{
			}

			[Token(Token = "0x6002EDA")]
			[Address(RVA = "0xBDD8D4", Offset = "0xBDD8D4", VA = "0xBDD8D4")]
			internal void <ShowControllerAssignmentConflictWindow>b__0()
			{
			}

			[Token(Token = "0x6002EDB")]
			[Address(RVA = "0xBDD900", Offset = "0xBDD900", VA = "0xBDD900")]
			internal void <ShowControllerAssignmentConflictWindow>b__1()
			{
			}
		}

		[Token(Token = "0x2000626")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x919550", Offset = "0x919550")]
		private sealed class <>c__DisplayClass342_0
		{
			[Token(Token = "0x4002ADE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ControlMapper <>4__this;

			[Token(Token = "0x4002ADF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Window window;

			[Token(Token = "0x4002AE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public InputFieldInfo fieldInfo;

			[Token(Token = "0x4002AE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ControllerMap map;

			[Token(Token = "0x4002AE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public ActionElementMap aem;

			[Token(Token = "0x4002AE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string actionName;

			[Token(Token = "0x6002EDC")]
			[Address(RVA = "0xBDD95C", Offset = "0xBDD95C", VA = "0xBDD95C")]
			public <>c__DisplayClass342_0()
			{
			}

			[Token(Token = "0x6002EDD")]
			[Address(RVA = "0xBDD964", Offset = "0xBDD964", VA = "0xBDD964")]
			internal void <ShowBeginElementAssignmentReplacementWindow>b__0()
			{
			}

			[Token(Token = "0x6002EDE")]
			[Address(RVA = "0xBDD990", Offset = "0xBDD990", VA = "0xBDD990")]
			internal void <ShowBeginElementAssignmentReplacementWindow>b__1()
			{
			}

			[Token(Token = "0x6002EDF")]
			[Address(RVA = "0xBDD9B8", Offset = "0xBDD9B8", VA = "0xBDD9B8")]
			internal void <ShowBeginElementAssignmentReplacementWindow>b__2()
			{
			}
		}

		[Token(Token = "0x2000627")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x919560", Offset = "0x919560")]
		private sealed class <>c__DisplayClass349_0
		{
			[Token(Token = "0x4002AE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ControlMapper <>4__this;

			[Token(Token = "0x4002AE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Window window;

			[Token(Token = "0x4002AE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ElementAssignment assignment;

			[Token(Token = "0x4002AE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public bool skipOtherPlayers;

			[Token(Token = "0x6002EE0")]
			[Address(RVA = "0xBDD9EC", Offset = "0xBDD9EC", VA = "0xBDD9EC")]
			public <>c__DisplayClass349_0()
			{
			}

			[Token(Token = "0x6002EE1")]
			[Address(RVA = "0xBDD9F4", Offset = "0xBDD9F4", VA = "0xBDD9F4")]
			internal void <ShowElementAssignmentConflictWindow>b__0()
			{
			}

			[Token(Token = "0x6002EE2")]
			[Address(RVA = "0xBDDA20", Offset = "0xBDDA20", VA = "0xBDDA20")]
			internal void <ShowElementAssignmentConflictWindow>b__1()
			{
			}

			[Token(Token = "0x6002EE3")]
			[Address(RVA = "0xBDDA7C", Offset = "0xBDDA7C", VA = "0xBDDA7C")]
			internal void <ShowElementAssignmentConflictWindow>b__2()
			{
			}

			[Token(Token = "0x6002EE4")]
			[Address(RVA = "0xBDDAD0", Offset = "0xBDDAD0", VA = "0xBDDAD0")]
			internal void <ShowElementAssignmentConflictWindow>b__3()
			{
			}
		}

		[Token(Token = "0x2000628")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x919570", Offset = "0x919570")]
		private sealed class <>c__DisplayClass350_0
		{
			[Token(Token = "0x4002AE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ControlMapper <>4__this;

			[Token(Token = "0x4002AE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Window window;

			[Token(Token = "0x6002EE5")]
			[Address(RVA = "0xBDDB2C", Offset = "0xBDDB2C", VA = "0xBDDB2C")]
			public <>c__DisplayClass350_0()
			{
			}

			[Token(Token = "0x6002EE6")]
			[Address(RVA = "0xBDDB34", Offset = "0xBDDB34", VA = "0xBDDB34")]
			internal void <ShowMouseAssignmentConflictWindow>b__0()
			{
			}

			[Token(Token = "0x6002EE7")]
			[Address(RVA = "0xBDDB60", Offset = "0xBDDB60", VA = "0xBDDB60")]
			internal void <ShowMouseAssignmentConflictWindow>b__1()
			{
			}
		}

		[Token(Token = "0x2000629")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x919580", Offset = "0x919580")]
		private sealed class <>c__DisplayClass403_0
		{
			[Token(Token = "0x4002AEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ControlMapper <>4__this;

			[Token(Token = "0x4002AEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Window window;

			[Token(Token = "0x6002EE8")]
			[Address(RVA = "0xBDDBAC", Offset = "0xBDDBAC", VA = "0xBDDBAC")]
			public <>c__DisplayClass403_0()
			{
			}

			[Token(Token = "0x6002EE9")]
			[Address(RVA = "0xBDDBB4", Offset = "0xBDDBB4", VA = "0xBDDBB4")]
			internal void <OpenModal>b__0()
			{
			}

			[Token(Token = "0x6002EEA")]
			[Address(RVA = "0xBDDBE0", Offset = "0xBDDBE0", VA = "0xBDDBE0")]
			internal void <OpenModal>b__1()
			{
			}
		}

		[Token(Token = "0x200062A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x919590", Offset = "0x919590")]
		private sealed class <ElementAssignmentConflicts>d__411 : IEnumerable<ElementAssignmentConflictInfo>, IEnumerable, IEnumerator<ElementAssignmentConflictInfo>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002AEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002AED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private ElementAssignmentConflictInfo <>2__current;

			[Token(Token = "0x4002AEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4002AEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Player player;

			[Token(Token = "0x4002AF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Player <>3__player;

			[Token(Token = "0x4002AF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private InputMapping mapping;

			[Token(Token = "0x4002AF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public InputMapping <>3__mapping;

			[Token(Token = "0x4002AF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public ControlMapper <>4__this;

			[Token(Token = "0x4002AF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private ElementAssignment assignment;

			[Token(Token = "0x4002AF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
			public ElementAssignment <>3__assignment;

			[Token(Token = "0x4002AF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			private bool skipOtherPlayers;

			[Token(Token = "0x4002AF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
			public bool <>3__skipOtherPlayers;

			[Token(Token = "0x4002AF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
			private ElementAssignmentConflictCheck <conflictCheck>5__2;

			[Token(Token = "0x4002AF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
			private IEnumerator<ElementAssignmentConflictInfo> <>7__wrap2;

			[Token(Token = "0x170005C4")]
			private ElementAssignmentConflictInfo System.Collections.Generic.IEnumerator<Rewired.ElementAssignmentConflictInfo>.Current
			{
				[Token(Token = "0x6002EF1")]
				[Address(RVA = "0xBDE874", Offset = "0xBDE874", VA = "0xBDE874", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return default(ElementAssignmentConflictInfo);
				}
			}

			[Token(Token = "0x170005C5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002EF3")]
				[Address(RVA = "0xBDE8CC", Offset = "0xBDE8CC", VA = "0xBDE8CC", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002EEB")]
			[Address(RVA = "0xBDDC3C", Offset = "0xBDDC3C", VA = "0xBDDC3C")]
			[DebuggerHidden]
			public <ElementAssignmentConflicts>d__411(int <>1__state)
			{
			}

			[Token(Token = "0x6002EEC")]
			[Address(RVA = "0xBDDC74", Offset = "0xBDDC74", VA = "0xBDDC74", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002EED")]
			[Address(RVA = "0xBDDFB0", Offset = "0xBDDFB0", VA = "0xBDDFB0", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002EEE")]
			[Address(RVA = "0xBDDD7C", Offset = "0xBDDD7C", VA = "0xBDDD7C")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002EEF")]
			[Address(RVA = "0xBDDE38", Offset = "0xBDDE38", VA = "0xBDDE38")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x6002EF0")]
			[Address(RVA = "0xBDDEF4", Offset = "0xBDDEF4", VA = "0xBDDEF4")]
			private void <>m__Finally3()
			{
			}

			[Token(Token = "0x6002EF2")]
			[Address(RVA = "0xBDE88C", Offset = "0xBDE88C", VA = "0xBDE88C", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6002EF4")]
			[Address(RVA = "0xBDE938", Offset = "0xBDE938", VA = "0xBDE938", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<ElementAssignmentConflictInfo> System.Collections.Generic.IEnumerable<Rewired.ElementAssignmentConflictInfo>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6002EF5")]
			[Address(RVA = "0xBDEA0C", Offset = "0xBDEA0C", VA = "0xBDEA0C", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x200062B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9195A0", Offset = "0x9195A0")]
		private sealed class <>c__DisplayClass456_0
		{
			[Token(Token = "0x4002AFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ActionElementMap aem;

			[Token(Token = "0x6002EF6")]
			[Address(RVA = "0xBDDC0C", Offset = "0xBDDC0C", VA = "0xBDDC0C")]
			public <>c__DisplayClass456_0()
			{
			}

			[Token(Token = "0x6002EF7")]
			[Address(RVA = "0xBDDC14", Offset = "0xBDDC14", VA = "0xBDDC14")]
			internal bool <ShowSwapButton>b__0(ElementAssignmentConflictInfo x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40029DB")]
		public const int versionMajor = 1;

		[Token(Token = "0x40029DC")]
		public const int versionMinor = 1;

		[Token(Token = "0x40029DD")]
		public const bool usesTMPro = false;

		[Token(Token = "0x40029DE")]
		private const float blockInputOnFocusTimeout = 0.1f;

		[Token(Token = "0x40029DF")]
		private const string buttonIdentifier_playerSelection = "PlayerSelection";

		[Token(Token = "0x40029E0")]
		private const string buttonIdentifier_removeController = "RemoveController";

		[Token(Token = "0x40029E1")]
		private const string buttonIdentifier_assignController = "AssignController";

		[Token(Token = "0x40029E2")]
		private const string buttonIdentifier_calibrateController = "CalibrateController";

		[Token(Token = "0x40029E3")]
		private const string buttonIdentifier_editInputBehaviors = "EditInputBehaviors";

		[Token(Token = "0x40029E4")]
		private const string buttonIdentifier_mapCategorySelection = "MapCategorySelection";

		[Token(Token = "0x40029E5")]
		private const string buttonIdentifier_assignedControllerSelection = "AssignedControllerSelection";

		[Token(Token = "0x40029E6")]
		private const string buttonIdentifier_done = "Done";

		[Token(Token = "0x40029E7")]
		private const string buttonIdentifier_restoreDefaults = "RestoreDefaults";

		[Token(Token = "0x40029E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91ECF4", Offset = "0x91ECF4")]
		private InputManager _rewiredInputManager;

		[Token(Token = "0x40029E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91ED40", Offset = "0x91ED40")]
		private bool _dontDestroyOnLoad;

		[Token(Token = "0x40029EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91ED8C", Offset = "0x91ED8C")]
		private bool _openOnStart;

		[Token(Token = "0x40029EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91EDD8", Offset = "0x91EDD8")]
		[SerializeField]
		private int _keyboardMapDefaultLayout;

		[Token(Token = "0x40029EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91EE24", Offset = "0x91EE24")]
		private int _mouseMapDefaultLayout;

		[Token(Token = "0x40029ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91EE70", Offset = "0x91EE70")]
		[SerializeField]
		private int _joystickMapDefaultLayout;

		[Token(Token = "0x40029EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MappingSet[] _mappingSets;

		[Token(Token = "0x40029EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91EECC", Offset = "0x91EECC")]
		private bool _showPlayers;

		[Token(Token = "0x40029F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91EF18", Offset = "0x91EF18")]
		[SerializeField]
		private bool _showControllers;

		[Token(Token = "0x40029F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91EF64", Offset = "0x91EF64")]
		private bool _showKeyboard;

		[Token(Token = "0x40029F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91EFB0", Offset = "0x91EFB0")]
		private bool _showMouse;

		[Token(Token = "0x40029F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91EFFC", Offset = "0x91EFFC")]
		private int _maxControllersPerPlayer;

		[Token(Token = "0x40029F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91F048", Offset = "0x91F048")]
		private bool _showActionCategoryLabels;

		[Token(Token = "0x40029F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91F094", Offset = "0x91F094")]
		private int _keyboardInputFieldCount;

		[Token(Token = "0x40029F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91F0E0", Offset = "0x91F0E0")]
		private int _mouseInputFieldCount;

		[Token(Token = "0x40029F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91F12C", Offset = "0x91F12C")]
		private int _controllerInputFieldCount;

		[Token(Token = "0x40029F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91F178", Offset = "0x91F178")]
		private bool _showFullAxisInputFields;

		[Token(Token = "0x40029F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91F1C4", Offset = "0x91F1C4")]
		private bool _showSplitAxisInputFields;

		[Token(Token = "0x40029FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91F210", Offset = "0x91F210")]
		private bool _allowElementAssignmentConflicts;

		[Token(Token = "0x40029FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91F25C", Offset = "0x91F25C")]
		[SerializeField]
		private bool _allowElementAssignmentSwap;

		[Token(Token = "0x40029FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91F2A8", Offset = "0x91F2A8")]
		private int _actionLabelWidth;

		[Token(Token = "0x40029FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91F2F4", Offset = "0x91F2F4")]
		private int _keyboardColMaxWidth;

		[Token(Token = "0x40029FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91F340", Offset = "0x91F340")]
		[SerializeField]
		private int _mouseColMaxWidth;

		[Token(Token = "0x40029FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91F38C", Offset = "0x91F38C")]
		[SerializeField]
		private int _controllerColMaxWidth;

		[Token(Token = "0x4002A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91F3D8", Offset = "0x91F3D8")]
		[SerializeField]
		private int _inputRowHeight;

		[Token(Token = "0x4002A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91F424", Offset = "0x91F424")]
		[SerializeField]
		private RectOffset _inputRowPadding;

		[Token(Token = "0x4002A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91F470", Offset = "0x91F470")]
		[SerializeField]
		private int _inputRowFieldSpacing;

		[Token(Token = "0x4002A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91F4BC", Offset = "0x91F4BC")]
		private int _inputColumnSpacing;

		[Token(Token = "0x4002A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91F508", Offset = "0x91F508")]
		private int _inputRowCategorySpacing;

		[Token(Token = "0x4002A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91F554", Offset = "0x91F554")]
		private int _invertToggleWidth;

		[Token(Token = "0x4002A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91F5A0", Offset = "0x91F5A0")]
		private int _defaultWindowWidth;

		[Token(Token = "0x4002A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91F5EC", Offset = "0x91F5EC")]
		[SerializeField]
		private int _defaultWindowHeight;

		[Token(Token = "0x4002A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91F638", Offset = "0x91F638")]
		private float _controllerAssignmentTimeout;

		[Token(Token = "0x4002A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91F684", Offset = "0x91F684")]
		private float _preInputAssignmentTimeout;

		[Token(Token = "0x4002A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91F6D0", Offset = "0x91F6D0")]
		private float _inputAssignmentTimeout;

		[Token(Token = "0x4002A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91F71C", Offset = "0x91F71C")]
		[SerializeField]
		private float _axisCalibrationTimeout;

		[Token(Token = "0x4002A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91F768", Offset = "0x91F768")]
		private bool _ignoreMouseXAxisAssignment;

		[Token(Token = "0x4002A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91F7B4", Offset = "0x91F7B4")]
		[SerializeField]
		private bool _ignoreMouseYAxisAssignment;

		[Token(Token = "0x4002A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91F800", Offset = "0x91F800")]
		private int _screenToggleAction;

		[Token(Token = "0x4002A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91F84C", Offset = "0x91F84C")]
		private int _screenOpenAction;

		[Token(Token = "0x4002A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91F898", Offset = "0x91F898")]
		private int _screenCloseAction;

		[Token(Token = "0x4002A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91F8E4", Offset = "0x91F8E4")]
		[SerializeField]
		private int _universalCancelAction;

		[Token(Token = "0x4002A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91F930", Offset = "0x91F930")]
		[SerializeField]
		private bool _universalCancelClosesScreen;

		[Token(Token = "0x4002A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAD")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91F97C", Offset = "0x91F97C")]
		private bool _showInputBehaviorSettings;

		[Token(Token = "0x4002A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91F9C8", Offset = "0x91F9C8")]
		[SerializeField]
		private InputBehaviorSettings[] _inputBehaviorSettings;

		[Token(Token = "0x4002A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91FA14", Offset = "0x91FA14")]
		private bool _useThemeSettings;

		[Token(Token = "0x4002A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91FA60", Offset = "0x91FA60")]
		private ThemeSettings _themeSettings;

		[Token(Token = "0x4002A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91FAAC", Offset = "0x91FAAC")]
		private LanguageDataBase _language;

		[Token(Token = "0x4002A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91FAF8", Offset = "0x91FAF8")]
		[SerializeField]
		private Prefabs prefabs;

		[Token(Token = "0x4002A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91FB44", Offset = "0x91FB44")]
		[SerializeField]
		private References references;

		[Token(Token = "0x4002A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91FB90", Offset = "0x91FB90")]
		[SerializeField]
		private bool _showPlayersGroupLabel;

		[Token(Token = "0x4002A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91FBDC", Offset = "0x91FBDC")]
		[SerializeField]
		private bool _showControllerGroupLabel;

		[Token(Token = "0x4002A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE2")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91FC28", Offset = "0x91FC28")]
		private bool _showAssignedControllersGroupLabel;

		[Token(Token = "0x4002A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE3")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91FC74", Offset = "0x91FC74")]
		private bool _showSettingsGroupLabel;

		[Token(Token = "0x4002A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91FCC0", Offset = "0x91FCC0")]
		[SerializeField]
		private bool _showMapCategoriesGroupLabel;

		[Token(Token = "0x4002A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE5")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91FD0C", Offset = "0x91FD0C")]
		[SerializeField]
		private bool _showControllerNameLabel;

		[Token(Token = "0x4002A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE6")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91FD58", Offset = "0x91FD58")]
		[SerializeField]
		private bool _showAssignedControllers;

		[Token(Token = "0x4002A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Action _ScreenClosedEvent;

		[Token(Token = "0x4002A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Action _ScreenOpenedEvent;

		[Token(Token = "0x4002A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Action _PopupWindowOpenedEvent;

		[Token(Token = "0x4002A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Action _PopupWindowClosedEvent;

		[Token(Token = "0x4002A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Action _InputPollingStartedEvent;

		[Token(Token = "0x4002A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Action _InputPollingEndedEvent;

		[Token(Token = "0x4002A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91FDA4", Offset = "0x91FDA4")]
		private UnityEvent _onScreenClosed;

		[Token(Token = "0x4002A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91FDF0", Offset = "0x91FDF0")]
		private UnityEvent _onScreenOpened;

		[Token(Token = "0x4002A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91FE3C", Offset = "0x91FE3C")]
		[SerializeField]
		private UnityEvent _onPopupWindowClosed;

		[Token(Token = "0x4002A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91FE88", Offset = "0x91FE88")]
		[SerializeField]
		private UnityEvent _onPopupWindowOpened;

		[Token(Token = "0x4002A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91FED4", Offset = "0x91FED4")]
		[SerializeField]
		private UnityEvent _onInputPollingStarted;

		[Token(Token = "0x4002A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x91FF20", Offset = "0x91FF20")]
		[SerializeField]
		private UnityEvent _onInputPollingEnded;

		[Token(Token = "0x4002A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ControlMapper Instance;

		[Token(Token = "0x4002A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private bool initialized;

		[Token(Token = "0x4002A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		private int playerCount;

		[Token(Token = "0x4002A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private InputGrid inputGrid;

		[Token(Token = "0x4002A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private WindowManager windowManager;

		[Token(Token = "0x4002A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private int currentPlayerId;

		[Token(Token = "0x4002A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		private int currentMapCategoryId;

		[Token(Token = "0x4002A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private List<GUIButton> playerButtons;

		[Token(Token = "0x4002A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private List<GUIButton> mapCategoryButtons;

		[Token(Token = "0x4002A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private List<GUIButton> assignedControllerButtons;

		[Token(Token = "0x4002A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private GUIButton assignedControllerButtonsPlaceholder;

		[Token(Token = "0x4002A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private List<GameObject> miscInstantiatedObjects;

		[Token(Token = "0x4002A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private GameObject canvas;

		[Token(Token = "0x4002A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private GameObject lastUISelection;

		[Token(Token = "0x4002A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private int currentJoystickId;

		[Token(Token = "0x4002A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		private float blockInputOnFocusEndTime;

		[Token(Token = "0x4002A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private bool isPollingForInput;

		[Token(Token = "0x4002A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private InputMapping pendingInputMapping;

		[Token(Token = "0x4002A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private AxisCalibrator pendingAxisCalibration;

		[Token(Token = "0x4002A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private Action<InputFieldInfo> inputFieldActivatedDelegate;

		[Token(Token = "0x4002A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private Action<ToggleInfo, bool> inputFieldInvertToggleStateChangedDelegate;

		[Token(Token = "0x4002A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private Action _restoreDefaultsDelegate;

		[Token(Token = "0x4002A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private List<GameObject> selControls;

		[Token(Token = "0x4002A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private List<int> selPriors;

		[Token(Token = "0x1700051F")]
		public InputManager rewiredInputManager
		{
			[Token(Token = "0x6002C9C")]
			[Address(RVA = "0x12C846C", Offset = "0x12C846C", VA = "0x12C846C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002C9D")]
			[Address(RVA = "0x12C8474", Offset = "0x12C8474", VA = "0x12C8474")]
			set
			{
			}
		}

		[Token(Token = "0x17000520")]
		public bool dontDestroyOnLoad
		{
			[Token(Token = "0x6002C9E")]
			[Address(RVA = "0x12C8488", Offset = "0x12C8488", VA = "0x12C8488")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002C9F")]
			[Address(RVA = "0x12C8490", Offset = "0x12C8490", VA = "0x12C8490")]
			set
			{
			}
		}

		[Token(Token = "0x17000521")]
		public int keyboardMapDefaultLayout
		{
			[Token(Token = "0x6002CA0")]
			[Address(RVA = "0x12C8548", Offset = "0x12C8548", VA = "0x12C8548")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002CA1")]
			[Address(RVA = "0x12C8550", Offset = "0x12C8550", VA = "0x12C8550")]
			set
			{
			}
		}

		[Token(Token = "0x17000522")]
		public int mouseMapDefaultLayout
		{
			[Token(Token = "0x6002CA2")]
			[Address(RVA = "0x12C8558", Offset = "0x12C8558", VA = "0x12C8558")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002CA3")]
			[Address(RVA = "0x12C8560", Offset = "0x12C8560", VA = "0x12C8560")]
			set
			{
			}
		}

		[Token(Token = "0x17000523")]
		public int joystickMapDefaultLayout
		{
			[Token(Token = "0x6002CA4")]
			[Address(RVA = "0x12C8568", Offset = "0x12C8568", VA = "0x12C8568")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002CA5")]
			[Address(RVA = "0x12C8570", Offset = "0x12C8570", VA = "0x12C8570")]
			set
			{
			}
		}

		[Token(Token = "0x17000524")]
		public bool showPlayers
		{
			[Token(Token = "0x6002CA6")]
			[Address(RVA = "0x12C8578", Offset = "0x12C8578", VA = "0x12C8578")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002CA7")]
			[Address(RVA = "0x12C8604", Offset = "0x12C8604", VA = "0x12C8604")]
			set
			{
			}
		}

		[Token(Token = "0x17000525")]
		public bool showControllers
		{
			[Token(Token = "0x6002CA8")]
			[Address(RVA = "0x12C8610", Offset = "0x12C8610", VA = "0x12C8610")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002CA9")]
			[Address(RVA = "0x12C8618", Offset = "0x12C8618", VA = "0x12C8618")]
			set
			{
			}
		}

		[Token(Token = "0x17000526")]
		public bool showKeyboard
		{
			[Token(Token = "0x6002CAA")]
			[Address(RVA = "0x12C8624", Offset = "0x12C8624", VA = "0x12C8624")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002CAB")]
			[Address(RVA = "0x12C862C", Offset = "0x12C862C", VA = "0x12C862C")]
			set
			{
			}
		}

		[Token(Token = "0x17000527")]
		public bool showMouse
		{
			[Token(Token = "0x6002CAC")]
			[Address(RVA = "0x12C8638", Offset = "0x12C8638", VA = "0x12C8638")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002CAD")]
			[Address(RVA = "0x12C8640", Offset = "0x12C8640", VA = "0x12C8640")]
			set
			{
			}
		}

		[Token(Token = "0x17000528")]
		public int maxControllersPerPlayer
		{
			[Token(Token = "0x6002CAE")]
			[Address(RVA = "0x12C864C", Offset = "0x12C864C", VA = "0x12C864C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002CAF")]
			[Address(RVA = "0x12C8654", Offset = "0x12C8654", VA = "0x12C8654")]
			set
			{
			}
		}

		[Token(Token = "0x17000529")]
		public bool showActionCategoryLabels
		{
			[Token(Token = "0x6002CB0")]
			[Address(RVA = "0x12C865C", Offset = "0x12C865C", VA = "0x12C865C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002CB1")]
			[Address(RVA = "0x12C8664", Offset = "0x12C8664", VA = "0x12C8664")]
			set
			{
			}
		}

		[Token(Token = "0x1700052A")]
		public int keyboardInputFieldCount
		{
			[Token(Token = "0x6002CB2")]
			[Address(RVA = "0x12C8670", Offset = "0x12C8670", VA = "0x12C8670")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002CB3")]
			[Address(RVA = "0x12C8678", Offset = "0x12C8678", VA = "0x12C8678")]
			set
			{
			}
		}

		[Token(Token = "0x1700052B")]
		public int mouseInputFieldCount
		{
			[Token(Token = "0x6002CB4")]
			[Address(RVA = "0x12C8680", Offset = "0x12C8680", VA = "0x12C8680")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002CB5")]
			[Address(RVA = "0x12C8688", Offset = "0x12C8688", VA = "0x12C8688")]
			set
			{
			}
		}

		[Token(Token = "0x1700052C")]
		public int controllerInputFieldCount
		{
			[Token(Token = "0x6002CB6")]
			[Address(RVA = "0x12C8690", Offset = "0x12C8690", VA = "0x12C8690")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002CB7")]
			[Address(RVA = "0x12C8698", Offset = "0x12C8698", VA = "0x12C8698")]
			set
			{
			}
		}

		[Token(Token = "0x1700052D")]
		public bool showFullAxisInputFields
		{
			[Token(Token = "0x6002CB8")]
			[Address(RVA = "0x12C86A0", Offset = "0x12C86A0", VA = "0x12C86A0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002CB9")]
			[Address(RVA = "0x12C86A8", Offset = "0x12C86A8", VA = "0x12C86A8")]
			set
			{
			}
		}

		[Token(Token = "0x1700052E")]
		public bool showSplitAxisInputFields
		{
			[Token(Token = "0x6002CBA")]
			[Address(RVA = "0x12C86B4", Offset = "0x12C86B4", VA = "0x12C86B4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002CBB")]
			[Address(RVA = "0x12C86BC", Offset = "0x12C86BC", VA = "0x12C86BC")]
			set
			{
			}
		}

		[Token(Token = "0x1700052F")]
		public bool allowElementAssignmentConflicts
		{
			[Token(Token = "0x6002CBC")]
			[Address(RVA = "0x12C86C8", Offset = "0x12C86C8", VA = "0x12C86C8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002CBD")]
			[Address(RVA = "0x12C86D0", Offset = "0x12C86D0", VA = "0x12C86D0")]
			set
			{
			}
		}

		[Token(Token = "0x17000530")]
		public bool allowElementAssignmentSwap
		{
			[Token(Token = "0x6002CBE")]
			[Address(RVA = "0x12C86DC", Offset = "0x12C86DC", VA = "0x12C86DC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002CBF")]
			[Address(RVA = "0x12C86E4", Offset = "0x12C86E4", VA = "0x12C86E4")]
			set
			{
			}
		}

		[Token(Token = "0x17000531")]
		public int actionLabelWidth
		{
			[Token(Token = "0x6002CC0")]
			[Address(RVA = "0x12C86F0", Offset = "0x12C86F0", VA = "0x12C86F0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002CC1")]
			[Address(RVA = "0x12C86F8", Offset = "0x12C86F8", VA = "0x12C86F8")]
			set
			{
			}
		}

		[Token(Token = "0x17000532")]
		public int keyboardColMaxWidth
		{
			[Token(Token = "0x6002CC2")]
			[Address(RVA = "0x12C8700", Offset = "0x12C8700", VA = "0x12C8700")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002CC3")]
			[Address(RVA = "0x12C8708", Offset = "0x12C8708", VA = "0x12C8708")]
			set
			{
			}
		}

		[Token(Token = "0x17000533")]
		public int mouseColMaxWidth
		{
			[Token(Token = "0x6002CC4")]
			[Address(RVA = "0x12C8710", Offset = "0x12C8710", VA = "0x12C8710")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002CC5")]
			[Address(RVA = "0x12C8718", Offset = "0x12C8718", VA = "0x12C8718")]
			set
			{
			}
		}

		[Token(Token = "0x17000534")]
		public int controllerColMaxWidth
		{
			[Token(Token = "0x6002CC6")]
			[Address(RVA = "0x12C8720", Offset = "0x12C8720", VA = "0x12C8720")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002CC7")]
			[Address(RVA = "0x12C8728", Offset = "0x12C8728", VA = "0x12C8728")]
			set
			{
			}
		}

		[Token(Token = "0x17000535")]
		public int inputRowHeight
		{
			[Token(Token = "0x6002CC8")]
			[Address(RVA = "0x12C8730", Offset = "0x12C8730", VA = "0x12C8730")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002CC9")]
			[Address(RVA = "0x12C8738", Offset = "0x12C8738", VA = "0x12C8738")]
			set
			{
			}
		}

		[Token(Token = "0x17000536")]
		public int inputColumnSpacing
		{
			[Token(Token = "0x6002CCA")]
			[Address(RVA = "0x12C8740", Offset = "0x12C8740", VA = "0x12C8740")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002CCB")]
			[Address(RVA = "0x12C8748", Offset = "0x12C8748", VA = "0x12C8748")]
			set
			{
			}
		}

		[Token(Token = "0x17000537")]
		public int inputRowCategorySpacing
		{
			[Token(Token = "0x6002CCC")]
			[Address(RVA = "0x12C8750", Offset = "0x12C8750", VA = "0x12C8750")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002CCD")]
			[Address(RVA = "0x12C8758", Offset = "0x12C8758", VA = "0x12C8758")]
			set
			{
			}
		}

		[Token(Token = "0x17000538")]
		public int invertToggleWidth
		{
			[Token(Token = "0x6002CCE")]
			[Address(RVA = "0x12C8760", Offset = "0x12C8760", VA = "0x12C8760")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002CCF")]
			[Address(RVA = "0x12C8768", Offset = "0x12C8768", VA = "0x12C8768")]
			set
			{
			}
		}

		[Token(Token = "0x17000539")]
		public int defaultWindowWidth
		{
			[Token(Token = "0x6002CD0")]
			[Address(RVA = "0x12C8770", Offset = "0x12C8770", VA = "0x12C8770")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002CD1")]
			[Address(RVA = "0x12C8778", Offset = "0x12C8778", VA = "0x12C8778")]
			set
			{
			}
		}

		[Token(Token = "0x1700053A")]
		public int defaultWindowHeight
		{
			[Token(Token = "0x6002CD2")]
			[Address(RVA = "0x12C8780", Offset = "0x12C8780", VA = "0x12C8780")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002CD3")]
			[Address(RVA = "0x12C8788", Offset = "0x12C8788", VA = "0x12C8788")]
			set
			{
			}
		}

		[Token(Token = "0x1700053B")]
		public float controllerAssignmentTimeout
		{
			[Token(Token = "0x6002CD4")]
			[Address(RVA = "0x12C8790", Offset = "0x12C8790", VA = "0x12C8790")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002CD5")]
			[Address(RVA = "0x12C8798", Offset = "0x12C8798", VA = "0x12C8798")]
			set
			{
			}
		}

		[Token(Token = "0x1700053C")]
		public float preInputAssignmentTimeout
		{
			[Token(Token = "0x6002CD6")]
			[Address(RVA = "0x12C87A0", Offset = "0x12C87A0", VA = "0x12C87A0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002CD7")]
			[Address(RVA = "0x12C87A8", Offset = "0x12C87A8", VA = "0x12C87A8")]
			set
			{
			}
		}

		[Token(Token = "0x1700053D")]
		public float inputAssignmentTimeout
		{
			[Token(Token = "0x6002CD8")]
			[Address(RVA = "0x12C87B0", Offset = "0x12C87B0", VA = "0x12C87B0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002CD9")]
			[Address(RVA = "0x12C87B8", Offset = "0x12C87B8", VA = "0x12C87B8")]
			set
			{
			}
		}

		[Token(Token = "0x1700053E")]
		public float axisCalibrationTimeout
		{
			[Token(Token = "0x6002CDA")]
			[Address(RVA = "0x12C87C0", Offset = "0x12C87C0", VA = "0x12C87C0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002CDB")]
			[Address(RVA = "0x12C87C8", Offset = "0x12C87C8", VA = "0x12C87C8")]
			set
			{
			}
		}

		[Token(Token = "0x1700053F")]
		public bool ignoreMouseXAxisAssignment
		{
			[Token(Token = "0x6002CDC")]
			[Address(RVA = "0x12C87D0", Offset = "0x12C87D0", VA = "0x12C87D0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002CDD")]
			[Address(RVA = "0x12C87D8", Offset = "0x12C87D8", VA = "0x12C87D8")]
			set
			{
			}
		}

		[Token(Token = "0x17000540")]
		public bool ignoreMouseYAxisAssignment
		{
			[Token(Token = "0x6002CDE")]
			[Address(RVA = "0x12C87E4", Offset = "0x12C87E4", VA = "0x12C87E4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002CDF")]
			[Address(RVA = "0x12C87EC", Offset = "0x12C87EC", VA = "0x12C87EC")]
			set
			{
			}
		}

		[Token(Token = "0x17000541")]
		public bool universalCancelClosesScreen
		{
			[Token(Token = "0x6002CE0")]
			[Address(RVA = "0x12C87F8", Offset = "0x12C87F8", VA = "0x12C87F8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002CE1")]
			[Address(RVA = "0x12C8800", Offset = "0x12C8800", VA = "0x12C8800")]
			set
			{
			}
		}

		[Token(Token = "0x17000542")]
		public bool showInputBehaviorSettings
		{
			[Token(Token = "0x6002CE2")]
			[Address(RVA = "0x12C880C", Offset = "0x12C880C", VA = "0x12C880C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002CE3")]
			[Address(RVA = "0x12C8814", Offset = "0x12C8814", VA = "0x12C8814")]
			set
			{
			}
		}

		[Token(Token = "0x17000543")]
		public bool useThemeSettings
		{
			[Token(Token = "0x6002CE4")]
			[Address(RVA = "0x12C8820", Offset = "0x12C8820", VA = "0x12C8820")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002CE5")]
			[Address(RVA = "0x12C8828", Offset = "0x12C8828", VA = "0x12C8828")]
			set
			{
			}
		}

		[Token(Token = "0x17000544")]
		public LanguageDataBase language
		{
			[Token(Token = "0x6002CE6")]
			[Address(RVA = "0x12C8834", Offset = "0x12C8834", VA = "0x12C8834")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002CE7")]
			[Address(RVA = "0x12C883C", Offset = "0x12C883C", VA = "0x12C883C")]
			set
			{
			}
		}

		[Token(Token = "0x17000545")]
		public bool showPlayersGroupLabel
		{
			[Token(Token = "0x6002CE8")]
			[Address(RVA = "0x12C88D8", Offset = "0x12C88D8", VA = "0x12C88D8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002CE9")]
			[Address(RVA = "0x12C88E0", Offset = "0x12C88E0", VA = "0x12C88E0")]
			set
			{
			}
		}

		[Token(Token = "0x17000546")]
		public bool showControllerGroupLabel
		{
			[Token(Token = "0x6002CEA")]
			[Address(RVA = "0x12C88EC", Offset = "0x12C88EC", VA = "0x12C88EC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002CEB")]
			[Address(RVA = "0x12C88F4", Offset = "0x12C88F4", VA = "0x12C88F4")]
			set
			{
			}
		}

		[Token(Token = "0x17000547")]
		public bool showAssignedControllersGroupLabel
		{
			[Token(Token = "0x6002CEC")]
			[Address(RVA = "0x12C8900", Offset = "0x12C8900", VA = "0x12C8900")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002CED")]
			[Address(RVA = "0x12C8908", Offset = "0x12C8908", VA = "0x12C8908")]
			set
			{
			}
		}

		[Token(Token = "0x17000548")]
		public bool showSettingsGroupLabel
		{
			[Token(Token = "0x6002CEE")]
			[Address(RVA = "0x12C8914", Offset = "0x12C8914", VA = "0x12C8914")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002CEF")]
			[Address(RVA = "0x12C891C", Offset = "0x12C891C", VA = "0x12C891C")]
			set
			{
			}
		}

		[Token(Token = "0x17000549")]
		public bool showMapCategoriesGroupLabel
		{
			[Token(Token = "0x6002CF0")]
			[Address(RVA = "0x12C8928", Offset = "0x12C8928", VA = "0x12C8928")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002CF1")]
			[Address(RVA = "0x12C8930", Offset = "0x12C8930", VA = "0x12C8930")]
			set
			{
			}
		}

		[Token(Token = "0x1700054A")]
		public bool showControllerNameLabel
		{
			[Token(Token = "0x6002CF2")]
			[Address(RVA = "0x12C893C", Offset = "0x12C893C", VA = "0x12C893C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002CF3")]
			[Address(RVA = "0x12C8944", Offset = "0x12C8944", VA = "0x12C8944")]
			set
			{
			}
		}

		[Token(Token = "0x1700054B")]
		public bool showAssignedControllers
		{
			[Token(Token = "0x6002CF4")]
			[Address(RVA = "0x12C8950", Offset = "0x12C8950", VA = "0x12C8950")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002CF5")]
			[Address(RVA = "0x12C8958", Offset = "0x12C8958", VA = "0x12C8958")]
			set
			{
			}
		}

		[Token(Token = "0x1700054C")]
		public Action restoreDefaultsDelegate
		{
			[Token(Token = "0x6002CF6")]
			[Address(RVA = "0x12C8964", Offset = "0x12C8964", VA = "0x12C8964")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002CF7")]
			[Address(RVA = "0x12C896C", Offset = "0x12C896C", VA = "0x12C896C")]
			set
			{
			}
		}

		[Token(Token = "0x1700054D")]
		public bool isOpen
		{
			[Token(Token = "0x6002CF8")]
			[Address(RVA = "0x12C8974", Offset = "0x12C8974", VA = "0x12C8974")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700054E")]
		private bool isFocused
		{
			[Token(Token = "0x6002CF9")]
			[Address(RVA = "0x12C8A38", Offset = "0x12C8A38", VA = "0x12C8A38")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700054F")]
		private bool inputAllowed
		{
			[Token(Token = "0x6002CFA")]
			[Address(RVA = "0x12C8A6C", Offset = "0x12C8A6C", VA = "0x12C8A6C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000550")]
		private int inputGridColumnCount
		{
			[Token(Token = "0x6002CFB")]
			[Address(RVA = "0x12C8A98", Offset = "0x12C8A98", VA = "0x12C8A98")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000551")]
		private int inputGridWidth
		{
			[Token(Token = "0x6002CFC")]
			[Address(RVA = "0x12C8ABC", Offset = "0x12C8ABC", VA = "0x12C8ABC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000552")]
		private Player currentPlayer
		{
			[Token(Token = "0x6002CFD")]
			[Address(RVA = "0x12C8B20", Offset = "0x12C8B20", VA = "0x12C8B20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000553")]
		private InputCategory currentMapCategory
		{
			[Token(Token = "0x6002CFE")]
			[Address(RVA = "0x12C8B94", Offset = "0x12C8B94", VA = "0x12C8B94")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000554")]
		private MappingSet currentMappingSet
		{
			[Token(Token = "0x6002CFF")]
			[Address(RVA = "0x12C8C08", Offset = "0x12C8C08", VA = "0x12C8C08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000555")]
		private Joystick currentJoystick
		{
			[Token(Token = "0x6002D00")]
			[Address(RVA = "0x12C8C78", Offset = "0x12C8C78", VA = "0x12C8C78")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000556")]
		private bool isJoystickSelected
		{
			[Token(Token = "0x6002D01")]
			[Address(RVA = "0x12C8CEC", Offset = "0x12C8CEC", VA = "0x12C8CEC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000557")]
		private GameObject currentUISelection
		{
			[Token(Token = "0x6002D02")]
			[Address(RVA = "0x12C8CFC", Offset = "0x12C8CFC", VA = "0x12C8CFC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000558")]
		private bool showSettings
		{
			[Token(Token = "0x6002D03")]
			[Address(RVA = "0x12C8DD8", Offset = "0x12C8DD8", VA = "0x12C8DD8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000559")]
		private bool showMapCategories
		{
			[Token(Token = "0x6002D04")]
			[Address(RVA = "0x12C8E0C", Offset = "0x12C8E0C", VA = "0x12C8E0C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x14000010")]
		public event Action ScreenClosedEvent
		{
			[Token(Token = "0x6002C84")]
			[Address(RVA = "0x12C7D4C", Offset = "0x12C7D4C", VA = "0x12C7D4C")]
			add
			{
			}
			[Token(Token = "0x6002C85")]
			[Address(RVA = "0x12C7DC8", Offset = "0x12C7DC8", VA = "0x12C7DC8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000011")]
		public event Action ScreenOpenedEvent
		{
			[Token(Token = "0x6002C86")]
			[Address(RVA = "0x12C7E44", Offset = "0x12C7E44", VA = "0x12C7E44")]
			add
			{
			}
			[Token(Token = "0x6002C87")]
			[Address(RVA = "0x12C7EC0", Offset = "0x12C7EC0", VA = "0x12C7EC0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000012")]
		public event Action PopupWindowClosedEvent
		{
			[Token(Token = "0x6002C88")]
			[Address(RVA = "0x12C7F3C", Offset = "0x12C7F3C", VA = "0x12C7F3C")]
			add
			{
			}
			[Token(Token = "0x6002C89")]
			[Address(RVA = "0x12C7FB8", Offset = "0x12C7FB8", VA = "0x12C7FB8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000013")]
		public event Action PopupWindowOpenedEvent
		{
			[Token(Token = "0x6002C8A")]
			[Address(RVA = "0x12C8034", Offset = "0x12C8034", VA = "0x12C8034")]
			add
			{
			}
			[Token(Token = "0x6002C8B")]
			[Address(RVA = "0x12C80B0", Offset = "0x12C80B0", VA = "0x12C80B0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000014")]
		public event Action InputPollingStartedEvent
		{
			[Token(Token = "0x6002C8C")]
			[Address(RVA = "0x12C812C", Offset = "0x12C812C", VA = "0x12C812C")]
			add
			{
			}
			[Token(Token = "0x6002C8D")]
			[Address(RVA = "0x12C81A8", Offset = "0x12C81A8", VA = "0x12C81A8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000015")]
		public event Action InputPollingEndedEvent
		{
			[Token(Token = "0x6002C8E")]
			[Address(RVA = "0x12C8224", Offset = "0x12C8224", VA = "0x12C8224")]
			add
			{
			}
			[Token(Token = "0x6002C8F")]
			[Address(RVA = "0x12C82A0", Offset = "0x12C82A0", VA = "0x12C82A0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000016")]
		public event UnityAction onScreenClosed
		{
			[Token(Token = "0x6002C90")]
			[Address(RVA = "0x12C831C", Offset = "0x12C831C", VA = "0x12C831C")]
			add
			{
			}
			[Token(Token = "0x6002C91")]
			[Address(RVA = "0x12C8338", Offset = "0x12C8338", VA = "0x12C8338")]
			remove
			{
			}
		}

		[Token(Token = "0x14000017")]
		public event UnityAction onScreenOpened
		{
			[Token(Token = "0x6002C92")]
			[Address(RVA = "0x12C8354", Offset = "0x12C8354", VA = "0x12C8354")]
			add
			{
			}
			[Token(Token = "0x6002C93")]
			[Address(RVA = "0x12C8370", Offset = "0x12C8370", VA = "0x12C8370")]
			remove
			{
			}
		}

		[Token(Token = "0x14000018")]
		public event UnityAction onPopupWindowClosed
		{
			[Token(Token = "0x6002C94")]
			[Address(RVA = "0x12C838C", Offset = "0x12C838C", VA = "0x12C838C")]
			add
			{
			}
			[Token(Token = "0x6002C95")]
			[Address(RVA = "0x12C83A8", Offset = "0x12C83A8", VA = "0x12C83A8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000019")]
		public event UnityAction onPopupWindowOpened
		{
			[Token(Token = "0x6002C96")]
			[Address(RVA = "0x12C83C4", Offset = "0x12C83C4", VA = "0x12C83C4")]
			add
			{
			}
			[Token(Token = "0x6002C97")]
			[Address(RVA = "0x12C83E0", Offset = "0x12C83E0", VA = "0x12C83E0")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001A")]
		public event UnityAction onInputPollingStarted
		{
			[Token(Token = "0x6002C98")]
			[Address(RVA = "0x12C83FC", Offset = "0x12C83FC", VA = "0x12C83FC")]
			add
			{
			}
			[Token(Token = "0x6002C99")]
			[Address(RVA = "0x12C8418", Offset = "0x12C8418", VA = "0x12C8418")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001B")]
		public event UnityAction onInputPollingEnded
		{
			[Token(Token = "0x6002C9A")]
			[Address(RVA = "0x12C8434", Offset = "0x12C8434", VA = "0x12C8434")]
			add
			{
			}
			[Token(Token = "0x6002C9B")]
			[Address(RVA = "0x12C8450", Offset = "0x12C8450", VA = "0x12C8450")]
			remove
			{
			}
		}

		[Token(Token = "0x6002D05")]
		[Address(RVA = "0x12C8E2C", Offset = "0x12C8E2C", VA = "0x12C8E2C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002D06")]
		[Address(RVA = "0x12C99E8", Offset = "0x12C99E8", VA = "0x12C99E8")]
		private void Start()
		{
		}

		[Token(Token = "0x6002D07")]
		[Address(RVA = "0x12C99FC", Offset = "0x12C99FC", VA = "0x12C99FC")]
		private void Update()
		{
		}

		[Token(Token = "0x6002D08")]
		[Address(RVA = "0x12C9AD4", Offset = "0x12C9AD4", VA = "0x12C9AD4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002D09")]
		[Address(RVA = "0x12C8EF0", Offset = "0x12C8EF0", VA = "0x12C8EF0")]
		private void PreInitialize()
		{
		}

		[Token(Token = "0x6002D0A")]
		[Address(RVA = "0x12C8FF8", Offset = "0x12C8FF8", VA = "0x12C8FF8")]
		private void Initialize()
		{
		}

		[Token(Token = "0x6002D0B")]
		[Address(RVA = "0x12CA304", Offset = "0x12CA304", VA = "0x12CA304")]
		private void OnJoystickConnected(ControllerStatusChangedEventArgs args)
		{
		}

		[Token(Token = "0x6002D0C")]
		[Address(RVA = "0x12CA380", Offset = "0x12CA380", VA = "0x12CA380")]
		private void OnJoystickDisconnected(ControllerStatusChangedEventArgs args)
		{
		}

		[Token(Token = "0x6002D0D")]
		[Address(RVA = "0x12CA3A0", Offset = "0x12CA3A0", VA = "0x12CA3A0")]
		private void OnJoystickPreDisconnect(ControllerStatusChangedEventArgs args)
		{
		}

		[Token(Token = "0x6002D0E")]
		[Address(RVA = "0x12CA3A4", Offset = "0x12CA3A4", VA = "0x12CA3A4")]
		public void OnButtonActivated(ButtonInfo buttonInfo)
		{
		}

		[Token(Token = "0x6002D0F")]
		[Address(RVA = "0x12CB1C8", Offset = "0x12CB1C8", VA = "0x12CB1C8")]
		public void OnInputFieldActivated(InputFieldInfo fieldInfo)
		{
		}

		[Token(Token = "0x6002D10")]
		[Address(RVA = "0x12CB998", Offset = "0x12CB998", VA = "0x12CB998")]
		public void OnInputFieldInvertToggleStateChanged(ToggleInfo toggleInfo, bool newState)
		{
		}

		[Token(Token = "0x6002D11")]
		[Address(RVA = "0x12CA748", Offset = "0x12CA748", VA = "0x12CA748")]
		private void OnPlayerSelected(int playerId, bool redraw)
		{
		}

		[Token(Token = "0x6002D12")]
		[Address(RVA = "0x12CA770", Offset = "0x12CA770", VA = "0x12CA770")]
		private void OnControllerSelected(int joystickId)
		{
		}

		[Token(Token = "0x6002D13")]
		[Address(RVA = "0x12CA790", Offset = "0x12CA790", VA = "0x12CA790")]
		private void OnRemoveCurrentController()
		{
		}

		[Token(Token = "0x6002D14")]
		[Address(RVA = "0x12CB00C", Offset = "0x12CB00C", VA = "0x12CB00C")]
		private void OnMapCategorySelected(int id, bool redraw)
		{
		}

		[Token(Token = "0x6002D15")]
		[Address(RVA = "0x12CB1B8", Offset = "0x12CB1B8", VA = "0x12CB1B8")]
		private void OnRestoreDefaults()
		{
		}

		[Token(Token = "0x6002D16")]
		[Address(RVA = "0x12CBEB8", Offset = "0x12CBEB8", VA = "0x12CBEB8")]
		private void OnScreenToggleActionPressed(InputActionEventData data)
		{
		}

		[Token(Token = "0x6002D17")]
		[Address(RVA = "0x12CBF20", Offset = "0x12CBF20", VA = "0x12CBF20")]
		private void OnScreenOpenActionPressed(InputActionEventData data)
		{
		}

		[Token(Token = "0x6002D18")]
		[Address(RVA = "0x12CBF28", Offset = "0x12CBF28", VA = "0x12CBF28")]
		private void OnScreenCloseActionPressed(InputActionEventData data)
		{
		}

		[Token(Token = "0x6002D19")]
		[Address(RVA = "0x12CBF74", Offset = "0x12CBF74", VA = "0x12CBF74")]
		private void OnUniversalCancelActionPressed(InputActionEventData data)
		{
		}

		[Token(Token = "0x6002D1A")]
		[Address(RVA = "0x12CC038", Offset = "0x12CC038", VA = "0x12CC038")]
		private void OnWindowCancel(int windowId)
		{
		}

		[Token(Token = "0x6002D1B")]
		[Address(RVA = "0x12CC0A8", Offset = "0x12CC0A8", VA = "0x12CC0A8")]
		private void OnRemoveElementAssignment(int windowId, ControllerMap map, ActionElementMap aem)
		{
		}

		[Token(Token = "0x6002D1C")]
		[Address(RVA = "0x12CC0F4", Offset = "0x12CC0F4", VA = "0x12CC0F4")]
		private void OnBeginElementAssignment(InputFieldInfo fieldInfo, ControllerMap map, ActionElementMap aem, string actionName)
		{
		}

		[Token(Token = "0x6002D1D")]
		[Address(RVA = "0x12CC66C", Offset = "0x12CC66C", VA = "0x12CC66C")]
		private void OnControllerAssignmentConfirmed(int windowId, Player player, int controllerId)
		{
		}

		[Token(Token = "0x6002D1E")]
		[Address(RVA = "0x12CCAF8", Offset = "0x12CCAF8", VA = "0x12CCAF8")]
		private void OnMouseAssignmentConfirmed(int windowId, Player player)
		{
		}

		[Token(Token = "0x6002D1F")]
		[Address(RVA = "0x12CCD54", Offset = "0x12CCD54", VA = "0x12CCD54")]
		private void OnElementAssignmentConflictReplaceConfirmed(int windowId, InputMapping mapping, ElementAssignment assignment, bool skipOtherPlayers, bool allowSwap)
		{
		}

		[Token(Token = "0x6002D20")]
		[Address(RVA = "0x12CD9EC", Offset = "0x12CD9EC", VA = "0x12CD9EC")]
		private void OnElementAssignmentAddConfirmed(int windowId, InputMapping mapping, ElementAssignment assignment)
		{
		}

		[Token(Token = "0x6002D21")]
		[Address(RVA = "0x12CDA74", Offset = "0x12CDA74", VA = "0x12CDA74")]
		private void OnRestoreDefaultsConfirmed(int windowId)
		{
		}

		[Token(Token = "0x6002D22")]
		[Address(RVA = "0x12CDCC0", Offset = "0x12CDCC0", VA = "0x12CDCC0")]
		private void OnAssignControllerWindowUpdate(int windowId)
		{
		}

		[Token(Token = "0x6002D23")]
		[Address(RVA = "0x12CE690", Offset = "0x12CE690", VA = "0x12CE690")]
		private void OnElementAssignmentPrePollingWindowUpdate(int windowId)
		{
		}

		[Token(Token = "0x6002D24")]
		[Address(RVA = "0x12CE8A0", Offset = "0x12CE8A0", VA = "0x12CE8A0")]
		private void OnJoystickElementAssignmentPollingWindowUpdate(int windowId)
		{
		}

		[Token(Token = "0x6002D25")]
		[Address(RVA = "0x12CF4AC", Offset = "0x12CF4AC", VA = "0x12CF4AC")]
		private void OnKeyboardElementAssignmentPollingWindowUpdate(int windowId)
		{
		}

		[Token(Token = "0x6002D26")]
		[Address(RVA = "0x12CFD04", Offset = "0x12CFD04", VA = "0x12CFD04")]
		private void OnMouseElementAssignmentPollingWindowUpdate(int windowId)
		{
		}

		[Token(Token = "0x6002D27")]
		[Address(RVA = "0x12D03A0", Offset = "0x12D03A0", VA = "0x12D03A0")]
		private void OnCalibrateAxisStep1WindowUpdate(int windowId)
		{
		}

		[Token(Token = "0x6002D28")]
		[Address(RVA = "0x12D0948", Offset = "0x12D0948", VA = "0x12D0948")]
		private void OnCalibrateAxisStep2WindowUpdate(int windowId)
		{
		}

		[Token(Token = "0x6002D29")]
		[Address(RVA = "0x12CA7F0", Offset = "0x12CA7F0", VA = "0x12CA7F0")]
		private void ShowAssignControllerWindow()
		{
		}

		[Token(Token = "0x6002D2A")]
		[Address(RVA = "0x12CDF40", Offset = "0x12CDF40", VA = "0x12CDF40")]
		private void ShowControllerAssignmentConflictWindow(int controllerId)
		{
		}

		[Token(Token = "0x6002D2B")]
		[Address(RVA = "0x12CB440", Offset = "0x12CB440", VA = "0x12CB440")]
		private void ShowBeginElementAssignmentReplacementWindow(InputFieldInfo fieldInfo, InputAction action, ControllerMap map, ActionElementMap aem, string actionName)
		{
		}

		[Token(Token = "0x6002D2C")]
		[Address(RVA = "0x12CB910", Offset = "0x12CB910", VA = "0x12CB910")]
		private void ShowCreateNewElementAssignmentWindow(InputFieldInfo fieldInfo, InputAction action, ControllerMap map, string actionName)
		{
		}

		[Token(Token = "0x6002D2D")]
		[Address(RVA = "0x12CC264", Offset = "0x12CC264", VA = "0x12CC264")]
		private void ShowElementAssignmentPrePollingWindow()
		{
		}

		[Token(Token = "0x6002D2E")]
		[Address(RVA = "0x12CC598", Offset = "0x12CC598", VA = "0x12CC598")]
		private void ShowElementAssignmentPollingWindow()
		{
		}

		[Token(Token = "0x6002D2F")]
		[Address(RVA = "0x12D0B24", Offset = "0x12D0B24", VA = "0x12D0B24")]
		private void ShowJoystickElementAssignmentPollingWindow()
		{
		}

		[Token(Token = "0x6002D30")]
		[Address(RVA = "0x12D0E10", Offset = "0x12D0E10", VA = "0x12D0E10")]
		private void ShowKeyboardElementAssignmentPollingWindow()
		{
		}

		[Token(Token = "0x6002D31")]
		[Address(RVA = "0x12D1134", Offset = "0x12D1134", VA = "0x12D1134")]
		private void ShowMouseElementAssignmentPollingWindow()
		{
		}

		[Token(Token = "0x6002D32")]
		[Address(RVA = "0x12CEE0C", Offset = "0x12CEE0C", VA = "0x12CEE0C")]
		private void ShowElementAssignmentConflictWindow(ElementAssignment assignment, bool skipOtherPlayers)
		{
		}

		[Token(Token = "0x6002D33")]
		[Address(RVA = "0x12D1420", Offset = "0x12D1420", VA = "0x12D1420")]
		private void ShowMouseAssignmentConflictWindow()
		{
		}

		[Token(Token = "0x6002D34")]
		[Address(RVA = "0x12CAAEC", Offset = "0x12CAAEC", VA = "0x12CAAEC")]
		private void ShowCalibrateControllerWindow()
		{
		}

		[Token(Token = "0x6002D35")]
		[Address(RVA = "0x12D2D90", Offset = "0x12D2D90", VA = "0x12D2D90")]
		private void ShowCalibrateAxisStep1Window()
		{
		}

		[Token(Token = "0x6002D36")]
		[Address(RVA = "0x12D04DC", Offset = "0x12D04DC", VA = "0x12D04DC")]
		private void ShowCalibrateAxisStep2Window()
		{
		}

		[Token(Token = "0x6002D37")]
		[Address(RVA = "0x12CADB0", Offset = "0x12CADB0", VA = "0x12CADB0")]
		private void ShowEditInputBehaviorsWindow()
		{
		}

		[Token(Token = "0x6002D38")]
		[Address(RVA = "0x12CBD4C", Offset = "0x12CBD4C", VA = "0x12CBD4C")]
		private void ShowRestoreDefaultsWindow()
		{
		}

		[Token(Token = "0x6002D39")]
		[Address(RVA = "0x12C9F1C", Offset = "0x12C9F1C", VA = "0x12C9F1C")]
		private void CreateInputGrid()
		{
		}

		[Token(Token = "0x6002D3A")]
		[Address(RVA = "0x12D356C", Offset = "0x12D356C", VA = "0x12D356C")]
		private void InitializeInputGrid()
		{
		}

		[Token(Token = "0x6002D3B")]
		[Address(RVA = "0x12D5178", Offset = "0x12D5178", VA = "0x12D5178")]
		private void RefreshInputGridStructure()
		{
		}

		[Token(Token = "0x6002D3C")]
		[Address(RVA = "0x12D3E44", Offset = "0x12D3E44", VA = "0x12D3E44")]
		private void CreateHeaderLabels()
		{
		}

		[Token(Token = "0x6002D3D")]
		[Address(RVA = "0x12D4114", Offset = "0x12D4114", VA = "0x12D4114")]
		private void CreateActionLabelColumn()
		{
		}

		[Token(Token = "0x6002D3E")]
		[Address(RVA = "0x12D4190", Offset = "0x12D4190", VA = "0x12D4190")]
		private void CreateKeyboardInputFieldColumn()
		{
		}

		[Token(Token = "0x6002D3F")]
		[Address(RVA = "0x12D41FC", Offset = "0x12D41FC", VA = "0x12D41FC")]
		private void CreateMouseInputFieldColumn()
		{
		}

		[Token(Token = "0x6002D40")]
		[Address(RVA = "0x12D4268", Offset = "0x12D4268", VA = "0x12D4268")]
		private void CreateControllerInputFieldColumn()
		{
		}

		[Token(Token = "0x6002D41")]
		[Address(RVA = "0x12D5530", Offset = "0x12D5530", VA = "0x12D5530")]
		private void CreateInputFieldColumn(string name, ControllerType controllerType, int maxWidth, int cols, bool disableFullAxis)
		{
		}

		[Token(Token = "0x6002D42")]
		[Address(RVA = "0x12D42D4", Offset = "0x12D42D4", VA = "0x12D42D4")]
		private void CreateInputActionLabels()
		{
		}

		[Token(Token = "0x6002D43")]
		[Address(RVA = "0x12D501C", Offset = "0x12D501C", VA = "0x12D501C")]
		private void CreateInputFields()
		{
		}

		[Token(Token = "0x6002D44")]
		[Address(RVA = "0x12D560C", Offset = "0x12D560C", VA = "0x12D560C")]
		private void CreateInputFields(Transform columnXform, ControllerType controllerType, int maxWidth, int cols, bool disableFullAxis)
		{
		}

		[Token(Token = "0x6002D45")]
		[Address(RVA = "0x12D5F68", Offset = "0x12D5F68", VA = "0x12D5F68")]
		private void CreateInputFieldSet(Transform parent, int mapCategoryId, InputAction action, AxisRange axisRange, ControllerType controllerType, int cols, int fieldWidth, ref int yPos, bool disableFullAxis)
		{
		}

		[Token(Token = "0x6002D46")]
		[Address(RVA = "0x12D660C", Offset = "0x12D660C", VA = "0x12D660C")]
		private void PopulateInputFields()
		{
		}

		[Token(Token = "0x6002D47")]
		[Address(RVA = "0x12D6B34", Offset = "0x12D6B34", VA = "0x12D6B34")]
		private void PopulateInputFieldGroup(InputActionSet actionSet, ControllerMap controllerMap, ControllerType controllerType, int controllerId, int maxFields)
		{
		}

		[Token(Token = "0x6002D48")]
		[Address(RVA = "0x12D71A8", Offset = "0x12D71A8", VA = "0x12D71A8")]
		private void DisableInputFieldGroup(InputActionSet actionSet, ControllerType controllerType, int fieldCount)
		{
		}

		[Token(Token = "0x6002D49")]
		[Address(RVA = "0x12D50C8", Offset = "0x12D50C8", VA = "0x12D50C8")]
		private void ResetInputGridScrollBar()
		{
		}

		[Token(Token = "0x6002D4A")]
		[Address(RVA = "0x12C9F8C", Offset = "0x12C9F8C", VA = "0x12C9F8C")]
		private void CreateLayout()
		{
		}

		[Token(Token = "0x6002D4B")]
		[Address(RVA = "0x12C9EE0", Offset = "0x12C9EE0", VA = "0x12C9EE0")]
		private void Draw()
		{
		}

		[Token(Token = "0x6002D4C")]
		[Address(RVA = "0x12D7274", Offset = "0x12D7274", VA = "0x12D7274")]
		private void DrawPlayersGroup()
		{
		}

		[Token(Token = "0x6002D4D")]
		[Address(RVA = "0x12D75F8", Offset = "0x12D75F8", VA = "0x12D75F8")]
		private void DrawControllersGroup()
		{
		}

		[Token(Token = "0x6002D4E")]
		[Address(RVA = "0x12D78F8", Offset = "0x12D78F8", VA = "0x12D78F8")]
		private void DrawSettingsGroup()
		{
		}

		[Token(Token = "0x6002D4F")]
		[Address(RVA = "0x12D7B34", Offset = "0x12D7B34", VA = "0x12D7B34")]
		private void DrawMapCategoriesGroup()
		{
		}

		[Token(Token = "0x6002D50")]
		[Address(RVA = "0x12D7E8C", Offset = "0x12D7E8C", VA = "0x12D7E8C")]
		private void DrawWindowButtonsGroup()
		{
		}

		[Token(Token = "0x6002D51")]
		[Address(RVA = "0x12CBAEC", Offset = "0x12CBAEC", VA = "0x12CBAEC")]
		private void Redraw(bool listsChanged, bool playTransitions)
		{
		}

		[Token(Token = "0x6002D52")]
		[Address(RVA = "0x12D804C", Offset = "0x12D804C", VA = "0x12D804C")]
		private void RedrawPlayerGroup(bool playTransitions)
		{
		}

		[Token(Token = "0x6002D53")]
		[Address(RVA = "0x12D815C", Offset = "0x12D815C", VA = "0x12D815C")]
		private void RedrawControllerGroup()
		{
		}

		[Token(Token = "0x6002D54")]
		[Address(RVA = "0x12D8DF4", Offset = "0x12D8DF4", VA = "0x12D8DF4")]
		private void RedrawMapCategoriesGroup(bool playTransitions)
		{
		}

		[Token(Token = "0x6002D55")]
		[Address(RVA = "0x12D8F0C", Offset = "0x12D8F0C", VA = "0x12D8F0C")]
		private void RedrawInputGrid(bool listsChanged)
		{
		}

		[Token(Token = "0x6002D56")]
		[Address(RVA = "0x12CA330", Offset = "0x12CA330", VA = "0x12CA330")]
		private void ForceRefresh()
		{
		}

		[Token(Token = "0x6002D57")]
		[Address(RVA = "0x12D9128", Offset = "0x12D9128", VA = "0x12D9128")]
		private void CreateInputCategoryRow(ref int rowCount, InputCategory category)
		{
		}

		[Token(Token = "0x6002D58")]
		[Address(RVA = "0x12D55E8", Offset = "0x12D55E8", VA = "0x12D55E8")]
		private GUILabel CreateLabel(string labelText, Transform parent, Vector2 offset)
		{
			return null;
		}

		[Token(Token = "0x6002D59")]
		[Address(RVA = "0x12D537C", Offset = "0x12D537C", VA = "0x12D537C")]
		private GUILabel CreateLabel(GameObject prefab, string labelText, Transform parent, Vector2 offset)
		{
			return null;
		}

		[Token(Token = "0x6002D5A")]
		[Address(RVA = "0x12D7F88", Offset = "0x12D7F88", VA = "0x12D7F88")]
		private GUIButton CreateButton(string labelText, Transform parent, Vector2 offset)
		{
			return null;
		}

		[Token(Token = "0x6002D5B")]
		[Address(RVA = "0x12D92E0", Offset = "0x12D92E0", VA = "0x12D92E0")]
		private GUIButton CreateFitButton(string labelText, Transform parent, Vector2 offset)
		{
			return null;
		}

		[Token(Token = "0x6002D5C")]
		[Address(RVA = "0x12D636C", Offset = "0x12D636C", VA = "0x12D636C")]
		private GUIInputField CreateInputField(Transform parent, Vector2 offset, string label, int actionId, AxisRange axisRange, ControllerType controllerType, int fieldIndex)
		{
			return null;
		}

		[Token(Token = "0x6002D5D")]
		[Address(RVA = "0x12D93A4", Offset = "0x12D93A4", VA = "0x12D93A4")]
		private GUIInputField CreateInputField(Transform parent, Vector2 offset)
		{
			return null;
		}

		[Token(Token = "0x6002D5E")]
		[Address(RVA = "0x12D64CC", Offset = "0x12D64CC", VA = "0x12D64CC")]
		private GUIToggle CreateToggle(GameObject prefab, Transform parent, Vector2 offset, string label, int actionId, AxisRange axisRange, ControllerType controllerType, int fieldIndex)
		{
			return null;
		}

		[Token(Token = "0x6002D5F")]
		[Address(RVA = "0x12D944C", Offset = "0x12D944C", VA = "0x12D944C")]
		private GUIToggle CreateToggle(GameObject prefab, Transform parent, Vector2 offset)
		{
			return null;
		}

		[Token(Token = "0x6002D60")]
		[Address(RVA = "0x12D91A8", Offset = "0x12D91A8", VA = "0x12D91A8")]
		private GameObject InstantiateGUIObject(GameObject prefab, Transform parent, Vector2 offset)
		{
			return null;
		}

		[Token(Token = "0x6002D61")]
		[Address(RVA = "0x12D62B0", Offset = "0x12D62B0", VA = "0x12D62B0")]
		private GameObject CreateNewGUIObject(string name, Transform parent, Vector2 offset)
		{
			return null;
		}

		[Token(Token = "0x6002D62")]
		[Address(RVA = "0x12D94EC", Offset = "0x12D94EC", VA = "0x12D94EC")]
		private GameObject InitializeNewGUIGameObject(GameObject gameObject, Transform parent, Vector2 offset)
		{
			return null;
		}

		[Token(Token = "0x6002D63")]
		[Address(RVA = "0x12D5268", Offset = "0x12D5268", VA = "0x12D5268")]
		private GameObject CreateNewColumnGroup(string name, Transform parent, int maxWidth)
		{
			return null;
		}

		[Token(Token = "0x6002D64")]
		[Address(RVA = "0x12D0AC0", Offset = "0x12D0AC0", VA = "0x12D0AC0")]
		private Window OpenWindow(bool closeOthers)
		{
			return null;
		}

		[Token(Token = "0x6002D65")]
		[Address(RVA = "0x12D96D0", Offset = "0x12D96D0", VA = "0x12D96D0")]
		private Window OpenWindow(string name, bool closeOthers)
		{
			return null;
		}

		[Token(Token = "0x6002D66")]
		[Address(RVA = "0x12D9804", Offset = "0x12D9804", VA = "0x12D9804")]
		private Window OpenWindow(GameObject windowPrefab, bool closeOthers)
		{
			return null;
		}

		[Token(Token = "0x6002D67")]
		[Address(RVA = "0x12D2CB8", Offset = "0x12D2CB8", VA = "0x12D2CB8")]
		private Window OpenWindow(GameObject windowPrefab, string name, bool closeOthers)
		{
			return null;
		}

		[Token(Token = "0x6002D68")]
		[Address(RVA = "0x12D31FC", Offset = "0x12D31FC", VA = "0x12D31FC")]
		private void OpenModal(string title, string message, string confirmText, Action<int> confirmAction, string cancelText, Action<int> cancelAction, bool closeOthers)
		{
		}

		[Token(Token = "0x6002D69")]
		[Address(RVA = "0x12CC04C", Offset = "0x12CC04C", VA = "0x12CC04C")]
		private void CloseWindow(int windowId)
		{
		}

		[Token(Token = "0x6002D6A")]
		[Address(RVA = "0x12D98D8", Offset = "0x12D98D8", VA = "0x12D98D8")]
		private void CloseTopWindow()
		{
		}

		[Token(Token = "0x6002D6B")]
		[Address(RVA = "0x12CBFDC", Offset = "0x12CBFDC", VA = "0x12CBFDC")]
		private void CloseAllWindows()
		{
		}

		[Token(Token = "0x6002D6C")]
		[Address(RVA = "0x12D979C", Offset = "0x12D979C", VA = "0x12D979C")]
		private void ChildWindowOpened()
		{
		}

		[Token(Token = "0x6002D6D")]
		[Address(RVA = "0x12D9870", Offset = "0x12D9870", VA = "0x12D9870")]
		private void ChildWindowClosed()
		{
		}

		[Token(Token = "0x6002D6E")]
		[Address(RVA = "0x12CEC04", Offset = "0x12CEC04", VA = "0x12CEC04")]
		private bool HasElementAssignmentConflicts(Player player, InputMapping mapping, ElementAssignment assignment, bool skipOtherPlayers)
		{
			return default(bool);
		}

		[Token(Token = "0x6002D6F")]
		[Address(RVA = "0x12D1AC8", Offset = "0x12D1AC8", VA = "0x12D1AC8")]
		private bool IsBlockingAssignmentConflict(InputMapping mapping, ElementAssignment assignment, bool skipOtherPlayers)
		{
			return default(bool);
		}

		[Token(Token = "0x6002D70")]
		[Address(RVA = "0x12D99A0", Offset = "0x12D99A0", VA = "0x12D99A0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x930198", Offset = "0x930198")]
		private IEnumerable<ElementAssignmentConflictInfo> ElementAssignmentConflicts(Player player, InputMapping mapping, ElementAssignment assignment, bool skipOtherPlayers)
		{
			return null;
		}

		[Token(Token = "0x6002D71")]
		[Address(RVA = "0x12CD5A0", Offset = "0x12CD5A0", VA = "0x12CD5A0")]
		private bool CreateConflictCheck(InputMapping mapping, ElementAssignment assignment, out ElementAssignmentConflictCheck conflictCheck)
		{
			return default(bool);
		}

		[Token(Token = "0x6002D72")]
		[Address(RVA = "0x12CF760", Offset = "0x12CF760", VA = "0x12CF760")]
		private void PollKeyboardForAssignment(out ControllerPollingInfo pollingInfo, out bool modifierKeyPressed, out ModifierKeyFlags modifierFlags, out string label)
		{
		}

		[Token(Token = "0x6002D73")]
		[Address(RVA = "0x12CD6A4", Offset = "0x12CD6A4", VA = "0x12CD6A4")]
		private bool GetFirstElementAssignmentConflict(ElementAssignmentConflictCheck conflictCheck, out ElementAssignmentConflictInfo conflict, bool skipOtherPlayers)
		{
			return default(bool);
		}

		[Token(Token = "0x6002D74")]
		[Address(RVA = "0x12D9A4C", Offset = "0x12D9A4C", VA = "0x12D9A4C")]
		private bool GetFirstElementAssignmentConflict(Player player, ElementAssignmentConflictCheck conflictCheck, out ElementAssignmentConflictInfo conflict)
		{
			return default(bool);
		}

		[Token(Token = "0x6002D75")]
		[Address(RVA = "0x12D9DD4", Offset = "0x12D9DD4", VA = "0x12D9DD4")]
		private void StartAxisCalibration(int axisIndex)
		{
		}

		[Token(Token = "0x6002D76")]
		[Address(RVA = "0x12D0A90", Offset = "0x12D0A90", VA = "0x12D0A90")]
		private void EndAxisCalibration()
		{
		}

		[Token(Token = "0x6002D77")]
		[Address(RVA = "0x12D8FF0", Offset = "0x12D8FF0", VA = "0x12D8FF0")]
		private void SetUISelection(GameObject selection)
		{
		}

		[Token(Token = "0x6002D78")]
		[Address(RVA = "0x12D8F50", Offset = "0x12D8F50", VA = "0x12D8F50")]
		private void RestoreLastUISelection()
		{
		}

		[Token(Token = "0x6002D79")]
		[Address(RVA = "0x12D9EB0", Offset = "0x12D9EB0", VA = "0x12D9EB0")]
		private void SetDefaultUISelection()
		{
		}

		[Token(Token = "0x6002D7A")]
		[Address(RVA = "0x12D9F6C", Offset = "0x12D9F6C", VA = "0x12D9F6C")]
		private void SelectDefaultMapCategory(bool redraw)
		{
		}

		[Token(Token = "0x6002D7B")]
		[Address(RVA = "0x12C9A38", Offset = "0x12C9A38", VA = "0x12C9A38")]
		private void CheckUISelection()
		{
		}

		[Token(Token = "0x6002D7C")]
		[Address(RVA = "0x12DA25C", Offset = "0x12DA25C", VA = "0x12DA25C")]
		private void OnUIElementSelected(GameObject selectedObject)
		{
		}

		[Token(Token = "0x6002D7D")]
		[Address(RVA = "0x12D992C", Offset = "0x12D992C", VA = "0x12D992C")]
		private void SetIsFocused(bool state)
		{
		}

		[Token(Token = "0x6002D7E")]
		[Address(RVA = "0x12DA264", Offset = "0x12DA264", VA = "0x12DA264")]
		public void Toggle()
		{
		}

		[Token(Token = "0x6002D7F")]
		[Address(RVA = "0x12CBF18", Offset = "0x12CBF18", VA = "0x12CBF18")]
		public void Open()
		{
		}

		[Token(Token = "0x6002D80")]
		[Address(RVA = "0x12C9910", Offset = "0x12C9910", VA = "0x12C9910")]
		private void Open(bool force)
		{
		}

		[Token(Token = "0x6002D81")]
		[Address(RVA = "0x12CB02C", Offset = "0x12CB02C", VA = "0x12CB02C")]
		public void Close(bool save)
		{
		}

		[Token(Token = "0x6002D82")]
		[Address(RVA = "0x12DA2A4", Offset = "0x12DA2A4", VA = "0x12DA2A4")]
		private void Clear()
		{
		}

		[Token(Token = "0x6002D83")]
		[Address(RVA = "0x12DA2D0", Offset = "0x12DA2D0", VA = "0x12DA2D0")]
		private void ClearCompletely()
		{
		}

		[Token(Token = "0x6002D84")]
		[Address(RVA = "0x12DA30C", Offset = "0x12DA30C", VA = "0x12DA30C")]
		private void ClearSpawnedObjects()
		{
		}

		[Token(Token = "0x6002D85")]
		[Address(RVA = "0x12CBAE0", Offset = "0x12CBAE0", VA = "0x12CBAE0")]
		private void ClearVarsOnPlayerChange()
		{
		}

		[Token(Token = "0x6002D86")]
		[Address(RVA = "0x12CA324", Offset = "0x12CA324", VA = "0x12CA324")]
		private void ClearVarsOnJoystickChange()
		{
		}

		[Token(Token = "0x6002D87")]
		[Address(RVA = "0x12DA878", Offset = "0x12DA878", VA = "0x12DA878")]
		private void ClearAllVars()
		{
		}

		[Token(Token = "0x6002D88")]
		[Address(RVA = "0x12DA908", Offset = "0x12DA908", VA = "0x12DA908")]
		public void Reset()
		{
		}

		[Token(Token = "0x6002D89")]
		[Address(RVA = "0x12CBA10", Offset = "0x12CBA10", VA = "0x12CBA10")]
		private void SetActionAxisInverted(bool state, ControllerType controllerType, int actionElementMapId)
		{
		}

		[Token(Token = "0x6002D8A")]
		[Address(RVA = "0x12CB350", Offset = "0x12CB350", VA = "0x12CB350")]
		private ControllerMap GetControllerMap(ControllerType type)
		{
			return null;
		}

		[Token(Token = "0x6002D8B")]
		[Address(RVA = "0x12D6A84", Offset = "0x12D6A84", VA = "0x12D6A84")]
		private ControllerMap GetControllerMapOrCreateNew(ControllerType controllerType, int controllerId, int layoutId)
		{
			return null;
		}

		[Token(Token = "0x6002D8C")]
		private int CountIEnumerable<T>(IEnumerable<T> enumerable)
		{
			return default(int);
		}

		[Token(Token = "0x6002D8D")]
		[Address(RVA = "0x12DA148", Offset = "0x12DA148", VA = "0x12DA148")]
		private int GetDefaultMapCategoryId()
		{
			return default(int);
		}

		[Token(Token = "0x6002D8E")]
		[Address(RVA = "0x12CA160", Offset = "0x12CA160", VA = "0x12CA160")]
		private void SubscribeFixedUISelectionEvents()
		{
		}

		[Token(Token = "0x6002D8F")]
		[Address(RVA = "0x12C9D7C", Offset = "0x12C9D7C", VA = "0x12C9D7C")]
		private void SubscribeMenuControlInputEvents()
		{
		}

		[Token(Token = "0x6002D90")]
		[Address(RVA = "0x12C9C18", Offset = "0x12C9C18", VA = "0x12C9C18")]
		private void UnsubscribeMenuControlInputEvents()
		{
		}

		[Token(Token = "0x6002D91")]
		[Address(RVA = "0x12DA958", Offset = "0x12DA958", VA = "0x12DA958")]
		private void SubscribeRewiredInputEventAllPlayers(int actionId, Action<InputActionEventData> callback)
		{
		}

		[Token(Token = "0x6002D92")]
		[Address(RVA = "0x12DAD38", Offset = "0x12DAD38", VA = "0x12DAD38")]
		private void UnsubscribeRewiredInputEventAllPlayers(int actionId, Action<InputActionEventData> callback)
		{
		}

		[Token(Token = "0x6002D93")]
		[Address(RVA = "0x12D90E4", Offset = "0x12D90E4", VA = "0x12D90E4")]
		private int GetMaxControllersPerPlayer()
		{
			return default(int);
		}

		[Token(Token = "0x6002D94")]
		[Address(RVA = "0x12D7238", Offset = "0x12D7238", VA = "0x12D7238")]
		private bool ShowAssignedControllers()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D95")]
		[Address(RVA = "0x12C847C", Offset = "0x12C847C", VA = "0x12C847C")]
		private void InspectorPropertyChanged(bool reset = false)
		{
		}

		[Token(Token = "0x6002D96")]
		[Address(RVA = "0x12CC6B0", Offset = "0x12CC6B0", VA = "0x12CC6B0")]
		private void AssignController(Player player, int controllerId)
		{
		}

		[Token(Token = "0x6002D97")]
		[Address(RVA = "0x12DB174", Offset = "0x12DB174", VA = "0x12DB174")]
		private void RemoveAllControllers(Player player)
		{
		}

		[Token(Token = "0x6002D98")]
		[Address(RVA = "0x12CBBD4", Offset = "0x12CBBD4", VA = "0x12CBBD4")]
		private void RemoveController(Player player, int controllerId)
		{
		}

		[Token(Token = "0x6002D99")]
		[Address(RVA = "0x12CEBB0", Offset = "0x12CEBB0", VA = "0x12CEBB0")]
		private bool IsAllowedAssignment(InputMapping pendingInputMapping, ControllerPollingInfo pollingInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x6002D9A")]
		[Address(RVA = "0x12CDE9C", Offset = "0x12CDE9C", VA = "0x12CDE9C")]
		private void InputPollingStarted()
		{
		}

		[Token(Token = "0x6002D9B")]
		[Address(RVA = "0x12CDEF0", Offset = "0x12CDEF0", VA = "0x12CDEF0")]
		private void InputPollingStopped()
		{
		}

		[Token(Token = "0x6002D9C")]
		[Address(RVA = "0x12CD97C", Offset = "0x12CD97C", VA = "0x12CD97C")]
		private int GetControllerInputFieldCount(ControllerType controllerType)
		{
			return default(int);
		}

		[Token(Token = "0x6002D9D")]
		[Address(RVA = "0x12D2458", Offset = "0x12D2458", VA = "0x12D2458")]
		private bool ShowSwapButton(int windowId, InputMapping mapping, ElementAssignment assignment, bool skipOtherPlayers)
		{
			return default(bool);
		}

		[Token(Token = "0x6002D9E")]
		[Address(RVA = "0x12CD934", Offset = "0x12CD934", VA = "0x12CD934")]
		private bool SwapIsSameInputRange(ControllerElementType origElementType, AxisRange origAxisRange, Pole origAxisContribution, ControllerElementType conflictElementType, AxisRange conflictAxisRange, Pole conflictAxisContribution)
		{
			return default(bool);
		}

		[Token(Token = "0x6002D9F")]
		[Address(RVA = "0x12DB2D8", Offset = "0x12DB2D8", VA = "0x12DB2D8")]
		public static void ApplyTheme(ThemedElement.ElementInfo[] elementInfo)
		{
		}

		[Token(Token = "0x6002DA0")]
		[Address(RVA = "0x12DB3EC", Offset = "0x12DB3EC", VA = "0x12DB3EC")]
		public static LanguageDataBase GetLanguage()
		{
			return null;
		}

		[Token(Token = "0x6002DA1")]
		[Address(RVA = "0x12C9AD0", Offset = "0x12C9AD0", VA = "0x12C9AD0")]
		private void StepInput()
		{
		}

		[Token(Token = "0x6002DA2")]
		[Address(RVA = "0x12DB498", Offset = "0x12DB498", VA = "0x12DB498")]
		public bool VR_Raycast(Ray ray, out GameObject go, out Vector3 pos, out Vector3 normal)
		{
			return default(bool);
		}

		[Token(Token = "0x6002DA3")]
		[Address(RVA = "0x12DBBCC", Offset = "0x12DBBCC", VA = "0x12DBBCC")]
		public void VR_Click(GameObject go, Vector3 pos)
		{
		}

		[Token(Token = "0x6002DA4")]
		[Address(RVA = "0x12DB8A8", Offset = "0x12DB8A8", VA = "0x12DB8A8")]
		private Bounds VR_GetBounds(GameObject go)
		{
			return default(Bounds);
		}

		[Token(Token = "0x6002DA5")]
		[Address(RVA = "0x12DBF70", Offset = "0x12DBF70", VA = "0x12DBF70")]
		private CanvasGroup VR_GetActiveWnd()
		{
			return null;
		}

		[Token(Token = "0x6002DA6")]
		[Address(RVA = "0x12DC03C", Offset = "0x12DC03C", VA = "0x12DC03C")]
		private bool VR_IsSelectableObject(GameObject go, out int prior)
		{
			return default(bool);
		}

		[Token(Token = "0x6002DA7")]
		[Address(RVA = "0x12DB7A0", Offset = "0x12DB7A0", VA = "0x12DB7A0")]
		private void VR_FillSelectableControls()
		{
		}

		[Token(Token = "0x6002DA8")]
		[Address(RVA = "0x12DC2D8", Offset = "0x12DC2D8", VA = "0x12DC2D8")]
		private void VR_FillSelectableControls(List<GameObject> controls, List<int> priors, GameObject go)
		{
		}

		[Token(Token = "0x6002DA9")]
		[Address(RVA = "0x12DC414", Offset = "0x12DC414", VA = "0x12DC414")]
		public ControlMapper()
		{
		}
	}
	[Token(Token = "0x200062C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9195B0", Offset = "0x9195B0")]
	public class CustomButton : Button, ICustomSelectable, ICancelHandler, IEventSystemHandler
	{
		[Token(Token = "0x200062D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9195E8", Offset = "0x9195E8")]
		private sealed class <OnFinishSubmit>d__51 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002B04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002B05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002B06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CustomButton <>4__this;

			[Token(Token = "0x4002B07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <fadeTime>5__2;

			[Token(Token = "0x4002B08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <elapsedTime>5__3;

			[Token(Token = "0x170005CE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002F20")]
				[Address(RVA = "0xBE6268", Offset = "0xBE6268", VA = "0xBE6268", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005CF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002F22")]
				[Address(RVA = "0xBE62B0", Offset = "0xBE62B0", VA = "0xBE62B0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002F1D")]
			[Address(RVA = "0xBE6178", Offset = "0xBE6178", VA = "0xBE6178")]
			[DebuggerHidden]
			public <OnFinishSubmit>d__51(int <>1__state)
			{
			}

			[Token(Token = "0x6002F1E")]
			[Address(RVA = "0xBE61A4", Offset = "0xBE61A4", VA = "0xBE61A4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002F1F")]
			[Address(RVA = "0xBE61A8", Offset = "0xBE61A8", VA = "0xBE61A8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002F21")]
			[Address(RVA = "0xBE6270", Offset = "0xBE6270", VA = "0xBE6270", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private Sprite _disabledHighlightedSprite;

		[Token(Token = "0x4002AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private Color _disabledHighlightedColor;

		[Token(Token = "0x4002AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private string _disabledHighlightedTrigger;

		[Token(Token = "0x4002AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private bool _autoNavUp;

		[Token(Token = "0x4002AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x121")]
		[SerializeField]
		private bool _autoNavDown;

		[Token(Token = "0x4002B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x122")]
		[SerializeField]
		private bool _autoNavLeft;

		[Token(Token = "0x4002B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x123")]
		[SerializeField]
		private bool _autoNavRight;

		[Token(Token = "0x4002B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private bool isHighlightDisabled;

		[Token(Token = "0x170005C6")]
		public Sprite disabledHighlightedSprite
		{
			[Token(Token = "0x6002EF8")]
			[Address(RVA = "0x102499C", Offset = "0x102499C", VA = "0x102499C", Slot = "43")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002EF9")]
			[Address(RVA = "0x10249A4", Offset = "0x10249A4", VA = "0x10249A4", Slot = "44")]
			set
			{
			}
		}

		[Token(Token = "0x170005C7")]
		public Color disabledHighlightedColor
		{
			[Token(Token = "0x6002EFA")]
			[Address(RVA = "0x10249AC", Offset = "0x10249AC", VA = "0x10249AC", Slot = "45")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6002EFB")]
			[Address(RVA = "0x10249C0", Offset = "0x10249C0", VA = "0x10249C0", Slot = "46")]
			set
			{
			}
		}

		[Token(Token = "0x170005C8")]
		public string disabledHighlightedTrigger
		{
			[Token(Token = "0x6002EFC")]
			[Address(RVA = "0x10249D4", Offset = "0x10249D4", VA = "0x10249D4", Slot = "47")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002EFD")]
			[Address(RVA = "0x10249DC", Offset = "0x10249DC", VA = "0x10249DC", Slot = "48")]
			set
			{
			}
		}

		[Token(Token = "0x170005C9")]
		public bool autoNavUp
		{
			[Token(Token = "0x6002EFE")]
			[Address(RVA = "0x10249E4", Offset = "0x10249E4", VA = "0x10249E4", Slot = "49")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002EFF")]
			[Address(RVA = "0x10249EC", Offset = "0x10249EC", VA = "0x10249EC", Slot = "50")]
			set
			{
			}
		}

		[Token(Token = "0x170005CA")]
		public bool autoNavDown
		{
			[Token(Token = "0x6002F00")]
			[Address(RVA = "0x10249F8", Offset = "0x10249F8", VA = "0x10249F8", Slot = "51")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002F01")]
			[Address(RVA = "0x1024A00", Offset = "0x1024A00", VA = "0x1024A00", Slot = "52")]
			set
			{
			}
		}

		[Token(Token = "0x170005CB")]
		public bool autoNavLeft
		{
			[Token(Token = "0x6002F02")]
			[Address(RVA = "0x1024A0C", Offset = "0x1024A0C", VA = "0x1024A0C", Slot = "53")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002F03")]
			[Address(RVA = "0x1024A14", Offset = "0x1024A14", VA = "0x1024A14", Slot = "54")]
			set
			{
			}
		}

		[Token(Token = "0x170005CC")]
		public bool autoNavRight
		{
			[Token(Token = "0x6002F04")]
			[Address(RVA = "0x1024A20", Offset = "0x1024A20", VA = "0x1024A20", Slot = "55")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002F05")]
			[Address(RVA = "0x1024A28", Offset = "0x1024A28", VA = "0x1024A28", Slot = "56")]
			set
			{
			}
		}

		[Token(Token = "0x170005CD")]
		private bool isDisabled
		{
			[Token(Token = "0x6002F06")]
			[Address(RVA = "0x1024A34", Offset = "0x1024A34", VA = "0x1024A34")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1400001C")]
		private event UnityAction _CancelEvent
		{
			[Token(Token = "0x6002F07")]
			[Address(RVA = "0x1024A5C", Offset = "0x1024A5C", VA = "0x1024A5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9305F8", Offset = "0x9305F8")]
			add
			{
			}
			[Token(Token = "0x6002F08")]
			[Address(RVA = "0x1024B00", Offset = "0x1024B00", VA = "0x1024B00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x930608", Offset = "0x930608")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001D")]
		public event UnityAction CancelEvent
		{
			[Token(Token = "0x6002F09")]
			[Address(RVA = "0x1024BA4", Offset = "0x1024BA4", VA = "0x1024BA4", Slot = "57")]
			add
			{
			}
			[Token(Token = "0x6002F0A")]
			[Address(RVA = "0x1024BA8", Offset = "0x1024BA8", VA = "0x1024BA8", Slot = "58")]
			remove
			{
			}
		}

		[Token(Token = "0x6002F0B")]
		[Address(RVA = "0x1024BAC", Offset = "0x1024BAC", VA = "0x1024BAC", Slot = "27")]
		public override Selectable FindSelectableOnLeft()
		{
			return null;
		}

		[Token(Token = "0x6002F0C")]
		[Address(RVA = "0x1024C80", Offset = "0x1024C80", VA = "0x1024C80", Slot = "28")]
		public override Selectable FindSelectableOnRight()
		{
			return null;
		}

		[Token(Token = "0x6002F0D")]
		[Address(RVA = "0x1024D54", Offset = "0x1024D54", VA = "0x1024D54", Slot = "29")]
		public override Selectable FindSelectableOnUp()
		{
			return null;
		}

		[Token(Token = "0x6002F0E")]
		[Address(RVA = "0x1024E28", Offset = "0x1024E28", VA = "0x1024E28", Slot = "30")]
		public override Selectable FindSelectableOnDown()
		{
			return null;
		}

		[Token(Token = "0x6002F0F")]
		[Address(RVA = "0x1024EFC", Offset = "0x1024EFC", VA = "0x1024EFC", Slot = "14")]
		protected override void OnCanvasGroupChanged()
		{
		}

		[Token(Token = "0x6002F10")]
		[Address(RVA = "0x10250E4", Offset = "0x10250E4", VA = "0x10250E4", Slot = "26")]
		protected override void DoStateTransition(SelectionState state, bool instant)
		{
		}

		[Token(Token = "0x6002F11")]
		[Address(RVA = "0x1025218", Offset = "0x1025218", VA = "0x1025218")]
		private void StartColorTween(Color targetColor, bool instant)
		{
		}

		[Token(Token = "0x6002F12")]
		[Address(RVA = "0x102530C", Offset = "0x102530C", VA = "0x102530C")]
		private void DoSpriteSwap(Sprite newSprite)
		{
		}

		[Token(Token = "0x6002F13")]
		[Address(RVA = "0x10253C8", Offset = "0x10253C8", VA = "0x10253C8")]
		private void TriggerAnimation(string triggername)
		{
		}

		[Token(Token = "0x6002F14")]
		[Address(RVA = "0x1025534", Offset = "0x1025534", VA = "0x1025534", Slot = "36")]
		public override void OnSelect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6002F15")]
		[Address(RVA = "0x102559C", Offset = "0x102559C", VA = "0x102559C", Slot = "37")]
		public override void OnDeselect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6002F16")]
		[Address(RVA = "0x10255C8", Offset = "0x10255C8", VA = "0x10255C8")]
		private void Press()
		{
		}

		[Token(Token = "0x6002F17")]
		[Address(RVA = "0x1025628", Offset = "0x1025628", VA = "0x1025628", Slot = "41")]
		public override void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6002F18")]
		[Address(RVA = "0x10256E4", Offset = "0x10256E4", VA = "0x10256E4", Slot = "42")]
		public override void OnSubmit(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6002F19")]
		[Address(RVA = "0x102578C", Offset = "0x102578C", VA = "0x102578C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x930618", Offset = "0x930618")]
		private IEnumerator OnFinishSubmit()
		{
			return null;
		}

		[Token(Token = "0x6002F1A")]
		[Address(RVA = "0x102503C", Offset = "0x102503C", VA = "0x102503C")]
		private void EvaluateHightlightDisabled(bool isSelected)
		{
		}

		[Token(Token = "0x6002F1B")]
		[Address(RVA = "0x10257F8", Offset = "0x10257F8", VA = "0x10257F8", Slot = "59")]
		public void OnCancel(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6002F1C")]
		[Address(RVA = "0x102580C", Offset = "0x102580C", VA = "0x102580C")]
		public CustomButton()
		{
		}
	}
	[Token(Token = "0x200062E")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9195F8", Offset = "0x9195F8")]
	public class CustomSlider : Slider, ICustomSelectable, ICancelHandler, IEventSystemHandler
	{
		[Token(Token = "0x4002B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		private Sprite _disabledHighlightedSprite;

		[Token(Token = "0x4002B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		private Color _disabledHighlightedColor;

		[Token(Token = "0x4002B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[SerializeField]
		private string _disabledHighlightedTrigger;

		[Token(Token = "0x4002B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[SerializeField]
		private bool _autoNavUp;

		[Token(Token = "0x4002B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x181")]
		[SerializeField]
		private bool _autoNavDown;

		[Token(Token = "0x4002B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x182")]
		[SerializeField]
		private bool _autoNavLeft;

		[Token(Token = "0x4002B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x183")]
		[SerializeField]
		private bool _autoNavRight;

		[Token(Token = "0x4002B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		private bool isHighlightDisabled;

		[Token(Token = "0x170005D0")]
		public Sprite disabledHighlightedSprite
		{
			[Token(Token = "0x6002F23")]
			[Address(RVA = "0x1028380", Offset = "0x1028380", VA = "0x1028380", Slot = "56")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002F24")]
			[Address(RVA = "0x1028388", Offset = "0x1028388", VA = "0x1028388", Slot = "57")]
			set
			{
			}
		}

		[Token(Token = "0x170005D1")]
		public Color disabledHighlightedColor
		{
			[Token(Token = "0x6002F25")]
			[Address(RVA = "0x1028390", Offset = "0x1028390", VA = "0x1028390", Slot = "58")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6002F26")]
			[Address(RVA = "0x10283A4", Offset = "0x10283A4", VA = "0x10283A4", Slot = "59")]
			set
			{
			}
		}

		[Token(Token = "0x170005D2")]
		public string disabledHighlightedTrigger
		{
			[Token(Token = "0x6002F27")]
			[Address(RVA = "0x10283B8", Offset = "0x10283B8", VA = "0x10283B8", Slot = "60")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002F28")]
			[Address(RVA = "0x10283C0", Offset = "0x10283C0", VA = "0x10283C0", Slot = "61")]
			set
			{
			}
		}

		[Token(Token = "0x170005D3")]
		public bool autoNavUp
		{
			[Token(Token = "0x6002F29")]
			[Address(RVA = "0x10283C8", Offset = "0x10283C8", VA = "0x10283C8", Slot = "62")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002F2A")]
			[Address(RVA = "0x10283D0", Offset = "0x10283D0", VA = "0x10283D0", Slot = "63")]
			set
			{
			}
		}

		[Token(Token = "0x170005D4")]
		public bool autoNavDown
		{
			[Token(Token = "0x6002F2B")]
			[Address(RVA = "0x10283DC", Offset = "0x10283DC", VA = "0x10283DC", Slot = "64")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002F2C")]
			[Address(RVA = "0x10283E4", Offset = "0x10283E4", VA = "0x10283E4", Slot = "65")]
			set
			{
			}
		}

		[Token(Token = "0x170005D5")]
		public bool autoNavLeft
		{
			[Token(Token = "0x6002F2D")]
			[Address(RVA = "0x10283F0", Offset = "0x10283F0", VA = "0x10283F0", Slot = "66")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002F2E")]
			[Address(RVA = "0x10283F8", Offset = "0x10283F8", VA = "0x10283F8", Slot = "67")]
			set
			{
			}
		}

		[Token(Token = "0x170005D6")]
		public bool autoNavRight
		{
			[Token(Token = "0x6002F2F")]
			[Address(RVA = "0x1028404", Offset = "0x1028404", VA = "0x1028404", Slot = "68")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002F30")]
			[Address(RVA = "0x102840C", Offset = "0x102840C", VA = "0x102840C", Slot = "69")]
			set
			{
			}
		}

		[Token(Token = "0x170005D7")]
		private bool isDisabled
		{
			[Token(Token = "0x6002F31")]
			[Address(RVA = "0x1028418", Offset = "0x1028418", VA = "0x1028418")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1400001E")]
		private event UnityAction _CancelEvent
		{
			[Token(Token = "0x6002F32")]
			[Address(RVA = "0x1028440", Offset = "0x1028440", VA = "0x1028440")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9306C8", Offset = "0x9306C8")]
			add
			{
			}
			[Token(Token = "0x6002F33")]
			[Address(RVA = "0x10284E4", Offset = "0x10284E4", VA = "0x10284E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9306D8", Offset = "0x9306D8")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001F")]
		public event UnityAction CancelEvent
		{
			[Token(Token = "0x6002F34")]
			[Address(RVA = "0x1028588", Offset = "0x1028588", VA = "0x1028588", Slot = "70")]
			add
			{
			}
			[Token(Token = "0x6002F35")]
			[Address(RVA = "0x102858C", Offset = "0x102858C", VA = "0x102858C", Slot = "71")]
			remove
			{
			}
		}

		[Token(Token = "0x6002F36")]
		[Address(RVA = "0x1028590", Offset = "0x1028590", VA = "0x1028590", Slot = "27")]
		public override Selectable FindSelectableOnLeft()
		{
			return null;
		}

		[Token(Token = "0x6002F37")]
		[Address(RVA = "0x1028664", Offset = "0x1028664", VA = "0x1028664", Slot = "28")]
		public override Selectable FindSelectableOnRight()
		{
			return null;
		}

		[Token(Token = "0x6002F38")]
		[Address(RVA = "0x1028738", Offset = "0x1028738", VA = "0x1028738", Slot = "29")]
		public override Selectable FindSelectableOnUp()
		{
			return null;
		}

		[Token(Token = "0x6002F39")]
		[Address(RVA = "0x102880C", Offset = "0x102880C", VA = "0x102880C", Slot = "30")]
		public override Selectable FindSelectableOnDown()
		{
			return null;
		}

		[Token(Token = "0x6002F3A")]
		[Address(RVA = "0x10288E0", Offset = "0x10288E0", VA = "0x10288E0", Slot = "14")]
		protected override void OnCanvasGroupChanged()
		{
		}

		[Token(Token = "0x6002F3B")]
		[Address(RVA = "0x1028AC8", Offset = "0x1028AC8", VA = "0x1028AC8", Slot = "26")]
		protected override void DoStateTransition(SelectionState state, bool instant)
		{
		}

		[Token(Token = "0x6002F3C")]
		[Address(RVA = "0x1028BFC", Offset = "0x1028BFC", VA = "0x1028BFC")]
		private void StartColorTween(Color targetColor, bool instant)
		{
		}

		[Token(Token = "0x6002F3D")]
		[Address(RVA = "0x1028CF0", Offset = "0x1028CF0", VA = "0x1028CF0")]
		private void DoSpriteSwap(Sprite newSprite)
		{
		}

		[Token(Token = "0x6002F3E")]
		[Address(RVA = "0x1028DAC", Offset = "0x1028DAC", VA = "0x1028DAC")]
		private void TriggerAnimation(string triggername)
		{
		}

		[Token(Token = "0x6002F3F")]
		[Address(RVA = "0x1028F18", Offset = "0x1028F18", VA = "0x1028F18", Slot = "36")]
		public override void OnSelect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6002F40")]
		[Address(RVA = "0x1028F80", Offset = "0x1028F80", VA = "0x1028F80", Slot = "37")]
		public override void OnDeselect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6002F41")]
		[Address(RVA = "0x1028A20", Offset = "0x1028A20", VA = "0x1028A20")]
		private void EvaluateHightlightDisabled(bool isSelected)
		{
		}

		[Token(Token = "0x6002F42")]
		[Address(RVA = "0x1028FAC", Offset = "0x1028FAC", VA = "0x1028FAC", Slot = "72")]
		public void OnCancel(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6002F43")]
		[Address(RVA = "0x1028FC0", Offset = "0x1028FC0", VA = "0x1028FC0")]
		public CustomSlider()
		{
		}
	}
	[Token(Token = "0x200062F")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x919630", Offset = "0x919630")]
	public class CustomToggle : Toggle, ICustomSelectable, ICancelHandler, IEventSystemHandler
	{
		[Token(Token = "0x4002B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private Sprite _disabledHighlightedSprite;

		[Token(Token = "0x4002B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private Color _disabledHighlightedColor;

		[Token(Token = "0x4002B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		private string _disabledHighlightedTrigger;

		[Token(Token = "0x4002B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		private bool _autoNavUp;

		[Token(Token = "0x4002B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x141")]
		[SerializeField]
		private bool _autoNavDown;

		[Token(Token = "0x4002B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x142")]
		[SerializeField]
		private bool _autoNavLeft;

		[Token(Token = "0x4002B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x143")]
		[SerializeField]
		private bool _autoNavRight;

		[Token(Token = "0x4002B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		private bool isHighlightDisabled;

		[Token(Token = "0x170005D8")]
		public Sprite disabledHighlightedSprite
		{
			[Token(Token = "0x6002F44")]
			[Address(RVA = "0x1028FD0", Offset = "0x1028FD0", VA = "0x1028FD0", Slot = "51")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002F45")]
			[Address(RVA = "0x1028FD8", Offset = "0x1028FD8", VA = "0x1028FD8", Slot = "52")]
			set
			{
			}
		}

		[Token(Token = "0x170005D9")]
		public Color disabledHighlightedColor
		{
			[Token(Token = "0x6002F46")]
			[Address(RVA = "0x1028FE0", Offset = "0x1028FE0", VA = "0x1028FE0", Slot = "53")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6002F47")]
			[Address(RVA = "0x1028FF4", Offset = "0x1028FF4", VA = "0x1028FF4", Slot = "54")]
			set
			{
			}
		}

		[Token(Token = "0x170005DA")]
		public string disabledHighlightedTrigger
		{
			[Token(Token = "0x6002F48")]
			[Address(RVA = "0x1029008", Offset = "0x1029008", VA = "0x1029008", Slot = "55")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002F49")]
			[Address(RVA = "0x1029010", Offset = "0x1029010", VA = "0x1029010", Slot = "56")]
			set
			{
			}
		}

		[Token(Token = "0x170005DB")]
		public bool autoNavUp
		{
			[Token(Token = "0x6002F4A")]
			[Address(RVA = "0x1029018", Offset = "0x1029018", VA = "0x1029018", Slot = "57")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002F4B")]
			[Address(RVA = "0x1029020", Offset = "0x1029020", VA = "0x1029020", Slot = "58")]
			set
			{
			}
		}

		[Token(Token = "0x170005DC")]
		public bool autoNavDown
		{
			[Token(Token = "0x6002F4C")]
			[Address(RVA = "0x102902C", Offset = "0x102902C", VA = "0x102902C", Slot = "59")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002F4D")]
			[Address(RVA = "0x1029034", Offset = "0x1029034", VA = "0x1029034", Slot = "60")]
			set
			{
			}
		}

		[Token(Token = "0x170005DD")]
		public bool autoNavLeft
		{
			[Token(Token = "0x6002F4E")]
			[Address(RVA = "0x1029040", Offset = "0x1029040", VA = "0x1029040", Slot = "61")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002F4F")]
			[Address(RVA = "0x1029048", Offset = "0x1029048", VA = "0x1029048", Slot = "62")]
			set
			{
			}
		}

		[Token(Token = "0x170005DE")]
		public bool autoNavRight
		{
			[Token(Token = "0x6002F50")]
			[Address(RVA = "0x1029054", Offset = "0x1029054", VA = "0x1029054", Slot = "63")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002F51")]
			[Address(RVA = "0x102905C", Offset = "0x102905C", VA = "0x102905C", Slot = "64")]
			set
			{
			}
		}

		[Token(Token = "0x170005DF")]
		private bool isDisabled
		{
			[Token(Token = "0x6002F52")]
			[Address(RVA = "0x1029068", Offset = "0x1029068", VA = "0x1029068")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x14000020")]
		private event UnityAction _CancelEvent
		{
			[Token(Token = "0x6002F53")]
			[Address(RVA = "0x1029090", Offset = "0x1029090", VA = "0x1029090")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9306E8", Offset = "0x9306E8")]
			add
			{
			}
			[Token(Token = "0x6002F54")]
			[Address(RVA = "0x1029134", Offset = "0x1029134", VA = "0x1029134")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9306F8", Offset = "0x9306F8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000021")]
		public event UnityAction CancelEvent
		{
			[Token(Token = "0x6002F55")]
			[Address(RVA = "0x10291D8", Offset = "0x10291D8", VA = "0x10291D8", Slot = "65")]
			add
			{
			}
			[Token(Token = "0x6002F56")]
			[Address(RVA = "0x10291DC", Offset = "0x10291DC", VA = "0x10291DC", Slot = "66")]
			remove
			{
			}
		}

		[Token(Token = "0x6002F57")]
		[Address(RVA = "0x10291E0", Offset = "0x10291E0", VA = "0x10291E0", Slot = "27")]
		public override Selectable FindSelectableOnLeft()
		{
			return null;
		}

		[Token(Token = "0x6002F58")]
		[Address(RVA = "0x10292B4", Offset = "0x10292B4", VA = "0x10292B4", Slot = "28")]
		public override Selectable FindSelectableOnRight()
		{
			return null;
		}

		[Token(Token = "0x6002F59")]
		[Address(RVA = "0x1029388", Offset = "0x1029388", VA = "0x1029388", Slot = "29")]
		public override Selectable FindSelectableOnUp()
		{
			return null;
		}

		[Token(Token = "0x6002F5A")]
		[Address(RVA = "0x102945C", Offset = "0x102945C", VA = "0x102945C", Slot = "30")]
		public override Selectable FindSelectableOnDown()
		{
			return null;
		}

		[Token(Token = "0x6002F5B")]
		[Address(RVA = "0x1029530", Offset = "0x1029530", VA = "0x1029530", Slot = "14")]
		protected override void OnCanvasGroupChanged()
		{
		}

		[Token(Token = "0x6002F5C")]
		[Address(RVA = "0x1029718", Offset = "0x1029718", VA = "0x1029718", Slot = "26")]
		protected override void DoStateTransition(SelectionState state, bool instant)
		{
		}

		[Token(Token = "0x6002F5D")]
		[Address(RVA = "0x102984C", Offset = "0x102984C", VA = "0x102984C")]
		private void StartColorTween(Color targetColor, bool instant)
		{
		}

		[Token(Token = "0x6002F5E")]
		[Address(RVA = "0x1029940", Offset = "0x1029940", VA = "0x1029940")]
		private void DoSpriteSwap(Sprite newSprite)
		{
		}

		[Token(Token = "0x6002F5F")]
		[Address(RVA = "0x10299FC", Offset = "0x10299FC", VA = "0x10299FC")]
		private void TriggerAnimation(string triggername)
		{
		}

		[Token(Token = "0x6002F60")]
		[Address(RVA = "0x1029B68", Offset = "0x1029B68", VA = "0x1029B68", Slot = "36")]
		public override void OnSelect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6002F61")]
		[Address(RVA = "0x1029BD0", Offset = "0x1029BD0", VA = "0x1029BD0", Slot = "37")]
		public override void OnDeselect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6002F62")]
		[Address(RVA = "0x1029670", Offset = "0x1029670", VA = "0x1029670")]
		private void EvaluateHightlightDisabled(bool isSelected)
		{
		}

		[Token(Token = "0x6002F63")]
		[Address(RVA = "0x1029BFC", Offset = "0x1029BFC", VA = "0x1029BFC", Slot = "67")]
		public void OnCancel(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6002F64")]
		[Address(RVA = "0x1029C10", Offset = "0x1029C10", VA = "0x1029C10")]
		public CustomToggle()
		{
		}
	}
	[Token(Token = "0x2000630")]
	public interface ICustomSelectable : ICancelHandler, IEventSystemHandler
	{
		[Token(Token = "0x170005E0")]
		Sprite disabledHighlightedSprite
		{
			[Token(Token = "0x6002F65")]
			get;
			[Token(Token = "0x6002F66")]
			set;
		}

		[Token(Token = "0x170005E1")]
		Color disabledHighlightedColor
		{
			[Token(Token = "0x6002F67")]
			get;
			[Token(Token = "0x6002F68")]
			set;
		}

		[Token(Token = "0x170005E2")]
		string disabledHighlightedTrigger
		{
			[Token(Token = "0x6002F69")]
			get;
			[Token(Token = "0x6002F6A")]
			set;
		}

		[Token(Token = "0x170005E3")]
		bool autoNavUp
		{
			[Token(Token = "0x6002F6B")]
			get;
			[Token(Token = "0x6002F6C")]
			set;
		}

		[Token(Token = "0x170005E4")]
		bool autoNavDown
		{
			[Token(Token = "0x6002F6D")]
			get;
			[Token(Token = "0x6002F6E")]
			set;
		}

		[Token(Token = "0x170005E5")]
		bool autoNavLeft
		{
			[Token(Token = "0x6002F6F")]
			get;
			[Token(Token = "0x6002F70")]
			set;
		}

		[Token(Token = "0x170005E6")]
		bool autoNavRight
		{
			[Token(Token = "0x6002F71")]
			get;
			[Token(Token = "0x6002F72")]
			set;
		}

		[Token(Token = "0x14000022")]
		event UnityAction CancelEvent;
	}
	[Token(Token = "0x2000631")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x919668", Offset = "0x919668")]
	public class InputBehaviorWindow : Window
	{
		[Token(Token = "0x2000632")]
		private class InputBehaviorInfo
		{
			[Token(Token = "0x4002B28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private InputBehavior _inputBehavior;

			[Token(Token = "0x4002B29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private UIControlSet _controlSet;

			[Token(Token = "0x4002B2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Dictionary<int, PropertyType> idToProperty;

			[Token(Token = "0x4002B2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private InputBehavior copyOfOriginal;

			[Token(Token = "0x170005E7")]
			public InputBehavior inputBehavior
			{
				[Token(Token = "0x6002F86")]
				[Address(RVA = "0xE6473C", Offset = "0xE6473C", VA = "0xE6473C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005E8")]
			public UIControlSet controlSet
			{
				[Token(Token = "0x6002F87")]
				[Address(RVA = "0xE64744", Offset = "0xE64744", VA = "0xE64744")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002F88")]
			[Address(RVA = "0xE6474C", Offset = "0xE6474C", VA = "0xE6474C")]
			public InputBehaviorInfo(InputBehavior inputBehavior, UIControlSet controlSet, Dictionary<int, PropertyType> idToProperty)
			{
			}

			[Token(Token = "0x6002F89")]
			[Address(RVA = "0xE647DC", Offset = "0xE647DC", VA = "0xE647DC")]
			public void RestorePreviousData()
			{
			}

			[Token(Token = "0x6002F8A")]
			[Address(RVA = "0xE64800", Offset = "0xE64800", VA = "0xE64800")]
			public void RestoreDefaultData()
			{
			}

			[Token(Token = "0x6002F8B")]
			[Address(RVA = "0xE64AAC", Offset = "0xE64AAC", VA = "0xE64AAC")]
			public void RestoreData(PropertyType propertyType, int controlId)
			{
			}

			[Token(Token = "0x6002F8C")]
			[Address(RVA = "0xE64834", Offset = "0xE64834", VA = "0xE64834")]
			public void RefreshControls()
			{
			}
		}

		[Token(Token = "0x2000633")]
		public enum ButtonIdentifier
		{
			[Token(Token = "0x4002B2D")]
			Done,
			[Token(Token = "0x4002B2E")]
			Cancel,
			[Token(Token = "0x4002B2F")]
			Default
		}

		[Token(Token = "0x2000634")]
		private enum PropertyType
		{
			[Token(Token = "0x4002B31")]
			JoystickAxisSensitivity,
			[Token(Token = "0x4002B32")]
			MouseXYAxisSensitivity
		}

		[Token(Token = "0x2000635")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9196A0", Offset = "0x9196A0")]
		private sealed class <>c__DisplayClass26_0
		{
			[Token(Token = "0x4002B33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<int, int, float> valueChangedCallback;

			[Token(Token = "0x4002B34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int inputBehaviorId;

			[Token(Token = "0x4002B35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action<int, int> cancelCallback;

			[Token(Token = "0x6002F8D")]
			[Address(RVA = "0xE64654", Offset = "0xE64654", VA = "0xE64654")]
			public <>c__DisplayClass26_0()
			{
			}

			[Token(Token = "0x6002F8E")]
			[Address(RVA = "0xE6465C", Offset = "0xE6465C", VA = "0xE6465C")]
			internal void <CreateSlider>b__0(int cId, float value)
			{
			}

			[Token(Token = "0x6002F8F")]
			[Address(RVA = "0xE646D4", Offset = "0xE646D4", VA = "0xE646D4")]
			internal void <CreateSlider>b__1(int cId)
			{
			}
		}

		[Token(Token = "0x4002B1B")]
		private const float minSensitivity = 0.1f;

		[Token(Token = "0x4002B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private RectTransform spawnTransform;

		[Token(Token = "0x4002B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Button doneButton;

		[Token(Token = "0x4002B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Button cancelButton;

		[Token(Token = "0x4002B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Button defaultButton;

		[Token(Token = "0x4002B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private Text doneButtonLabel;

		[Token(Token = "0x4002B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private Text cancelButtonLabel;

		[Token(Token = "0x4002B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private Text defaultButtonLabel;

		[Token(Token = "0x4002B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private GameObject uiControlSetPrefab;

		[Token(Token = "0x4002B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private GameObject uiSliderControlPrefab;

		[Token(Token = "0x4002B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private List<InputBehaviorInfo> inputBehaviorInfo;

		[Token(Token = "0x4002B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Dictionary<int, Action<int>> buttonCallbacks;

		[Token(Token = "0x4002B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private int playerId;

		[Token(Token = "0x6002F75")]
		[Address(RVA = "0x13AA934", Offset = "0x13AA934", VA = "0x13AA934", Slot = "5")]
		public override void Initialize(int id, Func<int, bool> isFocusedCallback)
		{
		}

		[Token(Token = "0x6002F76")]
		[Address(RVA = "0x13AACE4", Offset = "0x13AACE4", VA = "0x13AACE4")]
		public void SetData(int playerId, ControlMapper.InputBehaviorSettings[] data)
		{
		}

		[Token(Token = "0x6002F77")]
		[Address(RVA = "0x13AB53C", Offset = "0x13AB53C", VA = "0x13AB53C")]
		public void SetButtonCallback(ButtonIdentifier buttonIdentifier, Action<int> callback)
		{
		}

		[Token(Token = "0x6002F78")]
		[Address(RVA = "0x13AB628", Offset = "0x13AB628", VA = "0x13AB628", Slot = "9")]
		public override void Cancel()
		{
		}

		[Token(Token = "0x6002F79")]
		[Address(RVA = "0x13AB7B4", Offset = "0x13AB7B4", VA = "0x13AB7B4")]
		public void OnDone()
		{
		}

		[Token(Token = "0x6002F7A")]
		[Address(RVA = "0x13AB854", Offset = "0x13AB854", VA = "0x13AB854")]
		public void OnCancel()
		{
		}

		[Token(Token = "0x6002F7B")]
		[Address(RVA = "0x13AB860", Offset = "0x13AB860", VA = "0x13AB860")]
		public void OnRestoreDefault()
		{
		}

		[Token(Token = "0x6002F7C")]
		[Address(RVA = "0x13AB980", Offset = "0x13AB980", VA = "0x13AB980")]
		private void JoystickAxisSensitivityValueChanged(int inputBehaviorId, int controlId, float value)
		{
		}

		[Token(Token = "0x6002F7D")]
		[Address(RVA = "0x13AB9B0", Offset = "0x13AB9B0", VA = "0x13AB9B0")]
		private void MouseXYAxisSensitivityValueChanged(int inputBehaviorId, int controlId, float value)
		{
		}

		[Token(Token = "0x6002F7E")]
		[Address(RVA = "0x13AB9E0", Offset = "0x13AB9E0", VA = "0x13AB9E0")]
		private void JoystickAxisSensitivityCanceled(int inputBehaviorId, int controlId)
		{
		}

		[Token(Token = "0x6002F7F")]
		[Address(RVA = "0x13ABB18", Offset = "0x13ABB18", VA = "0x13ABB18")]
		private void MouseXYAxisSensitivityCanceled(int inputBehaviorId, int controlId)
		{
		}

		[Token(Token = "0x6002F80")]
		[Address(RVA = "0x13ABB54", Offset = "0x13ABB54", VA = "0x13ABB54", Slot = "6")]
		public override void TakeInputFocus()
		{
		}

		[Token(Token = "0x6002F81")]
		[Address(RVA = "0x13AB228", Offset = "0x13AB228", VA = "0x13AB228")]
		private UIControlSet CreateControlSet()
		{
			return null;
		}

		[Token(Token = "0x6002F82")]
		[Address(RVA = "0x13AB2EC", Offset = "0x13AB2EC", VA = "0x13AB2EC")]
		private UISliderControl CreateSlider(UIControlSet set, int inputBehaviorId, string defaultTitle, string overrideTitle, Sprite icon, float minValue, float maxValue, Action<int, int, float> valueChangedCallback, Action<int, int> cancelCallback)
		{
			return null;
		}

		[Token(Token = "0x6002F83")]
		[Address(RVA = "0x13AB1A4", Offset = "0x13AB1A4", VA = "0x13AB1A4")]
		private InputBehavior GetInputBehavior(int id)
		{
			return null;
		}

		[Token(Token = "0x6002F84")]
		[Address(RVA = "0x13ABA1C", Offset = "0x13ABA1C", VA = "0x13ABA1C")]
		private InputBehaviorInfo GetInputBehaviorInfo(int inputBehaviorId)
		{
			return null;
		}

		[Token(Token = "0x6002F85")]
		[Address(RVA = "0x13ABB5C", Offset = "0x13ABB5C", VA = "0x13ABB5C")]
		public InputBehaviorWindow()
		{
		}
	}
	[Token(Token = "0x2000636")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9196B0", Offset = "0x9196B0")]
	public class InputFieldInfo : UIElementInfo
	{
		[Token(Token = "0x4002B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9209B4", Offset = "0x9209B4")]
		private int <actionId>k__BackingField;

		[Token(Token = "0x4002B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9209C4", Offset = "0x9209C4")]
		private AxisRange <axisRange>k__BackingField;

		[Token(Token = "0x4002B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9209D4", Offset = "0x9209D4")]
		private int <actionElementMapId>k__BackingField;

		[Token(Token = "0x4002B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9209E4", Offset = "0x9209E4")]
		private ControllerType <controllerType>k__BackingField;

		[Token(Token = "0x4002B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9209F4", Offset = "0x9209F4")]
		private int <controllerId>k__BackingField;

		[Token(Token = "0x170005E9")]
		public int actionId
		{
			[Token(Token = "0x6002F90")]
			[Address(RVA = "0x13ABB64", Offset = "0x13ABB64", VA = "0x13ABB64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x930728", Offset = "0x930728")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002F91")]
			[Address(RVA = "0x13ABB6C", Offset = "0x13ABB6C", VA = "0x13ABB6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x930738", Offset = "0x930738")]
			set
			{
			}
		}

		[Token(Token = "0x170005EA")]
		public AxisRange axisRange
		{
			[Token(Token = "0x6002F92")]
			[Address(RVA = "0x13ABB74", Offset = "0x13ABB74", VA = "0x13ABB74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x930748", Offset = "0x930748")]
			get
			{
				return default(AxisRange);
			}
			[Token(Token = "0x6002F93")]
			[Address(RVA = "0x13ABB7C", Offset = "0x13ABB7C", VA = "0x13ABB7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x930758", Offset = "0x930758")]
			set
			{
			}
		}

		[Token(Token = "0x170005EB")]
		public int actionElementMapId
		{
			[Token(Token = "0x6002F94")]
			[Address(RVA = "0x13ABB84", Offset = "0x13ABB84", VA = "0x13ABB84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x930768", Offset = "0x930768")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002F95")]
			[Address(RVA = "0x13ABB8C", Offset = "0x13ABB8C", VA = "0x13ABB8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x930778", Offset = "0x930778")]
			set
			{
			}
		}

		[Token(Token = "0x170005EC")]
		public ControllerType controllerType
		{
			[Token(Token = "0x6002F96")]
			[Address(RVA = "0x13ABB94", Offset = "0x13ABB94", VA = "0x13ABB94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x930788", Offset = "0x930788")]
			get
			{
				return default(ControllerType);
			}
			[Token(Token = "0x6002F97")]
			[Address(RVA = "0x13ABB9C", Offset = "0x13ABB9C", VA = "0x13ABB9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x930798", Offset = "0x930798")]
			set
			{
			}
		}

		[Token(Token = "0x170005ED")]
		public int controllerId
		{
			[Token(Token = "0x6002F98")]
			[Address(RVA = "0x13ABBA4", Offset = "0x13ABBA4", VA = "0x13ABBA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9307A8", Offset = "0x9307A8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002F99")]
			[Address(RVA = "0x13ABBAC", Offset = "0x13ABBAC", VA = "0x13ABBAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9307B8", Offset = "0x9307B8")]
			set
			{
			}
		}

		[Token(Token = "0x6002F9A")]
		[Address(RVA = "0x13ABBB4", Offset = "0x13ABBB4", VA = "0x13ABBB4")]
		public InputFieldInfo()
		{
		}
	}
	[Token(Token = "0x2000637")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9196E8", Offset = "0x9196E8")]
	public class InputRow : MonoBehaviour
	{
		[Token(Token = "0x4002B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text label;

		[Token(Token = "0x4002B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x920A04", Offset = "0x920A04")]
		private ButtonInfo[] <buttons>k__BackingField;

		[Token(Token = "0x4002B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int rowIndex;

		[Token(Token = "0x4002B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Action<int, ButtonInfo> inputFieldActivatedCallback;

		[Token(Token = "0x170005EE")]
		public ButtonInfo[] buttons
		{
			[Token(Token = "0x6002F9B")]
			[Address(RVA = "0x13ABFA8", Offset = "0x13ABFA8", VA = "0x13ABFA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9307C8", Offset = "0x9307C8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002F9C")]
			[Address(RVA = "0x13ABFB0", Offset = "0x13ABFB0", VA = "0x13ABFB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9307D8", Offset = "0x9307D8")]
			private set
			{
			}
		}

		[Token(Token = "0x6002F9D")]
		[Address(RVA = "0x13ABFB8", Offset = "0x13ABFB8", VA = "0x13ABFB8")]
		public void Initialize(int rowIndex, string label, Action<int, ButtonInfo> inputFieldActivatedCallback)
		{
		}

		[Token(Token = "0x6002F9E")]
		[Address(RVA = "0x13AC060", Offset = "0x13AC060", VA = "0x13AC060")]
		public void OnButtonActivated(ButtonInfo buttonInfo)
		{
		}

		[Token(Token = "0x6002F9F")]
		[Address(RVA = "0x13AC0D4", Offset = "0x13AC0D4", VA = "0x13AC0D4")]
		public InputRow()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000638")]
	public class LanguageData : LanguageDataBase
	{
		[Serializable]
		[Token(Token = "0x2000639")]
		protected class CustomEntry
		{
			[Token(Token = "0x4002B7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string key;

			[Token(Token = "0x4002B7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string value;

			[Token(Token = "0x6002FE5")]
			[Address(RVA = "0xE683CC", Offset = "0xE683CC", VA = "0xE683CC")]
			public CustomEntry()
			{
			}

			[Token(Token = "0x6002FE6")]
			[Address(RVA = "0xE683D4", Offset = "0xE683D4", VA = "0xE683D4")]
			public CustomEntry(string key, string value)
			{
			}

			[Token(Token = "0x6002FE7")]
			[Address(RVA = "0xE6840C", Offset = "0xE6840C", VA = "0xE6840C")]
			public static Dictionary<string, string> ToDictionary(CustomEntry[] array)
			{
				return null;
			}
		}

		[Serializable]
		[Token(Token = "0x200063A")]
		protected class ModifierKeys
		{
			[Token(Token = "0x4002B7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string control;

			[Token(Token = "0x4002B7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string alt;

			[Token(Token = "0x4002B7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string shift;

			[Token(Token = "0x4002B80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string command;

			[Token(Token = "0x4002B81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string separator;

			[Token(Token = "0x6002FE8")]
			[Address(RVA = "0xE68614", Offset = "0xE68614", VA = "0xE68614")]
			public ModifierKeys()
			{
			}
		}

		[Token(Token = "0x4002B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string _yes;

		[Token(Token = "0x4002B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string _no;

		[Token(Token = "0x4002B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string _add;

		[Token(Token = "0x4002B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private string _replace;

		[Token(Token = "0x4002B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private string _remove;

		[Token(Token = "0x4002B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private string _swap;

		[Token(Token = "0x4002B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private string _cancel;

		[Token(Token = "0x4002B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private string _none;

		[Token(Token = "0x4002B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private string _okay;

		[Token(Token = "0x4002B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private string _done;

		[Token(Token = "0x4002B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private string _default;

		[Token(Token = "0x4002B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private string _assignControllerWindowTitle;

		[Token(Token = "0x4002B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private string _assignControllerWindowMessage;

		[Token(Token = "0x4002B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private string _controllerAssignmentConflictWindowTitle;

		[Token(Token = "0x4002B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x920AF4", Offset = "0x920AF4")]
		private string _controllerAssignmentConflictWindowMessage;

		[Token(Token = "0x4002B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private string _elementAssignmentPrePollingWindowMessage;

		[Token(Token = "0x4002B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x920B50", Offset = "0x920B50")]
		[SerializeField]
		private string _joystickElementAssignmentPollingWindowMessage;

		[Token(Token = "0x4002B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x920B9C", Offset = "0x920B9C")]
		private string _joystickElementAssignmentPollingWindowMessage_fullAxisFieldOnly;

		[Token(Token = "0x4002B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x920BE8", Offset = "0x920BE8")]
		[SerializeField]
		private string _keyboardElementAssignmentPollingWindowMessage;

		[Token(Token = "0x4002B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x920C34", Offset = "0x920C34")]
		[SerializeField]
		private string _mouseElementAssignmentPollingWindowMessage;

		[Token(Token = "0x4002B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x920C80", Offset = "0x920C80")]
		private string _mouseElementAssignmentPollingWindowMessage_fullAxisFieldOnly;

		[Token(Token = "0x4002B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private string _elementAssignmentConflictWindowMessage;

		[Token(Token = "0x4002B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x920CDC", Offset = "0x920CDC")]
		[SerializeField]
		private string _elementAlreadyInUseBlocked;

		[Token(Token = "0x4002B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x920D28", Offset = "0x920D28")]
		[SerializeField]
		private string _elementAlreadyInUseCanReplace;

		[Token(Token = "0x4002B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x920D74", Offset = "0x920D74")]
		[SerializeField]
		private string _elementAlreadyInUseCanReplace_conflictAllowed;

		[Token(Token = "0x4002B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private string _mouseAssignmentConflictWindowTitle;

		[Token(Token = "0x4002B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x920DD0", Offset = "0x920DD0")]
		[SerializeField]
		private string _mouseAssignmentConflictWindowMessage;

		[Token(Token = "0x4002B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private string _calibrateControllerWindowTitle;

		[Token(Token = "0x4002B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private string _calibrateAxisStep1WindowTitle;

		[Token(Token = "0x4002B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x920E3C", Offset = "0x920E3C")]
		private string _calibrateAxisStep1WindowMessage;

		[Token(Token = "0x4002B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private string _calibrateAxisStep2WindowTitle;

		[Token(Token = "0x4002B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x920E98", Offset = "0x920E98")]
		[SerializeField]
		private string _calibrateAxisStep2WindowMessage;

		[Token(Token = "0x4002B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private string _inputBehaviorSettingsWindowTitle;

		[Token(Token = "0x4002B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private string _restoreDefaultsWindowTitle;

		[Token(Token = "0x4002B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x920F04", Offset = "0x920F04")]
		[SerializeField]
		private string _restoreDefaultsWindowMessage_onePlayer;

		[Token(Token = "0x4002B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x920F50", Offset = "0x920F50")]
		[SerializeField]
		private string _restoreDefaultsWindowMessage_multiPlayer;

		[Token(Token = "0x4002B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		private string _actionColumnLabel;

		[Token(Token = "0x4002B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		private string _keyboardColumnLabel;

		[Token(Token = "0x4002B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		private string _mouseColumnLabel;

		[Token(Token = "0x4002B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		private string _controllerColumnLabel;

		[Token(Token = "0x4002B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		private string _removeControllerButtonLabel;

		[Token(Token = "0x4002B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		private string _calibrateControllerButtonLabel;

		[Token(Token = "0x4002B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		private string _assignControllerButtonLabel;

		[Token(Token = "0x4002B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[SerializeField]
		private string _inputBehaviorSettingsButtonLabel;

		[Token(Token = "0x4002B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[SerializeField]
		private string _doneButtonLabel;

		[Token(Token = "0x4002B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[SerializeField]
		private string _restoreDefaultsButtonLabel;

		[Token(Token = "0x4002B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[SerializeField]
		private string _playersGroupLabel;

		[Token(Token = "0x4002B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[SerializeField]
		private string _controllerSettingsGroupLabel;

		[Token(Token = "0x4002B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[SerializeField]
		private string _assignedControllersGroupLabel;

		[Token(Token = "0x4002B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[SerializeField]
		private string _settingsGroupLabel;

		[Token(Token = "0x4002B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		[SerializeField]
		private string _mapCategoriesGroupLabel;

		[Token(Token = "0x4002B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		[SerializeField]
		private string _calibrateWindow_deadZoneSliderLabel;

		[Token(Token = "0x4002B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		[SerializeField]
		private string _calibrateWindow_zeroSliderLabel;

		[Token(Token = "0x4002B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		[SerializeField]
		private string _calibrateWindow_sensitivitySliderLabel;

		[Token(Token = "0x4002B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[SerializeField]
		private string _calibrateWindow_invertToggleLabel;

		[Token(Token = "0x4002B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[SerializeField]
		private string _calibrateWindow_calibrateButtonLabel;

		[Token(Token = "0x4002B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[SerializeField]
		private ModifierKeys _modifierKeys;

		[Token(Token = "0x4002B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		[SerializeField]
		private CustomEntry[] _customEntries;

		[Token(Token = "0x4002B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private bool _initialized;

		[Token(Token = "0x4002B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private Dictionary<string, string> customDict;

		[Token(Token = "0x170005EF")]
		public override string yes
		{
			[Token(Token = "0x6002FA3")]
			[Address(RVA = "0x1138610", Offset = "0x1138610", VA = "0x1138610", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005F0")]
		public override string no
		{
			[Token(Token = "0x6002FA4")]
			[Address(RVA = "0x1138618", Offset = "0x1138618", VA = "0x1138618", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005F1")]
		public override string add
		{
			[Token(Token = "0x6002FA5")]
			[Address(RVA = "0x1138620", Offset = "0x1138620", VA = "0x1138620", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005F2")]
		public override string replace
		{
			[Token(Token = "0x6002FA6")]
			[Address(RVA = "0x1138628", Offset = "0x1138628", VA = "0x1138628", Slot = "10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005F3")]
		public override string remove
		{
			[Token(Token = "0x6002FA7")]
			[Address(RVA = "0x1138630", Offset = "0x1138630", VA = "0x1138630", Slot = "11")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005F4")]
		public override string swap
		{
			[Token(Token = "0x6002FA8")]
			[Address(RVA = "0x1138638", Offset = "0x1138638", VA = "0x1138638", Slot = "12")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005F5")]
		public override string cancel
		{
			[Token(Token = "0x6002FA9")]
			[Address(RVA = "0x1138640", Offset = "0x1138640", VA = "0x1138640", Slot = "13")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005F6")]
		public override string none
		{
			[Token(Token = "0x6002FAA")]
			[Address(RVA = "0x1138648", Offset = "0x1138648", VA = "0x1138648", Slot = "14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005F7")]
		public override string okay
		{
			[Token(Token = "0x6002FAB")]
			[Address(RVA = "0x1138650", Offset = "0x1138650", VA = "0x1138650", Slot = "15")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005F8")]
		public override string done
		{
			[Token(Token = "0x6002FAC")]
			[Address(RVA = "0x1138658", Offset = "0x1138658", VA = "0x1138658", Slot = "16")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005F9")]
		public override string default_
		{
			[Token(Token = "0x6002FAD")]
			[Address(RVA = "0x1138660", Offset = "0x1138660", VA = "0x1138660", Slot = "17")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005FA")]
		public override string assignControllerWindowTitle
		{
			[Token(Token = "0x6002FAE")]
			[Address(RVA = "0x1138668", Offset = "0x1138668", VA = "0x1138668", Slot = "18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005FB")]
		public override string assignControllerWindowMessage
		{
			[Token(Token = "0x6002FAF")]
			[Address(RVA = "0x1138670", Offset = "0x1138670", VA = "0x1138670", Slot = "19")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005FC")]
		public override string controllerAssignmentConflictWindowTitle
		{
			[Token(Token = "0x6002FB0")]
			[Address(RVA = "0x1138678", Offset = "0x1138678", VA = "0x1138678", Slot = "20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005FD")]
		public override string elementAssignmentPrePollingWindowMessage
		{
			[Token(Token = "0x6002FB1")]
			[Address(RVA = "0x1138680", Offset = "0x1138680", VA = "0x1138680", Slot = "21")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005FE")]
		public override string elementAssignmentConflictWindowMessage
		{
			[Token(Token = "0x6002FB2")]
			[Address(RVA = "0x1138688", Offset = "0x1138688", VA = "0x1138688", Slot = "22")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005FF")]
		public override string mouseAssignmentConflictWindowTitle
		{
			[Token(Token = "0x6002FB3")]
			[Address(RVA = "0x1138690", Offset = "0x1138690", VA = "0x1138690", Slot = "23")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000600")]
		public override string calibrateControllerWindowTitle
		{
			[Token(Token = "0x6002FB4")]
			[Address(RVA = "0x1138698", Offset = "0x1138698", VA = "0x1138698", Slot = "24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000601")]
		public override string calibrateAxisStep1WindowTitle
		{
			[Token(Token = "0x6002FB5")]
			[Address(RVA = "0x11386A0", Offset = "0x11386A0", VA = "0x11386A0", Slot = "25")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000602")]
		public override string calibrateAxisStep2WindowTitle
		{
			[Token(Token = "0x6002FB6")]
			[Address(RVA = "0x11386A8", Offset = "0x11386A8", VA = "0x11386A8", Slot = "26")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000603")]
		public override string inputBehaviorSettingsWindowTitle
		{
			[Token(Token = "0x6002FB7")]
			[Address(RVA = "0x11386B0", Offset = "0x11386B0", VA = "0x11386B0", Slot = "27")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000604")]
		public override string restoreDefaultsWindowTitle
		{
			[Token(Token = "0x6002FB8")]
			[Address(RVA = "0x11386B8", Offset = "0x11386B8", VA = "0x11386B8", Slot = "28")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000605")]
		public override string actionColumnLabel
		{
			[Token(Token = "0x6002FB9")]
			[Address(RVA = "0x11386C0", Offset = "0x11386C0", VA = "0x11386C0", Slot = "29")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000606")]
		public override string keyboardColumnLabel
		{
			[Token(Token = "0x6002FBA")]
			[Address(RVA = "0x11386C8", Offset = "0x11386C8", VA = "0x11386C8", Slot = "30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000607")]
		public override string mouseColumnLabel
		{
			[Token(Token = "0x6002FBB")]
			[Address(RVA = "0x11386D0", Offset = "0x11386D0", VA = "0x11386D0", Slot = "31")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000608")]
		public override string controllerColumnLabel
		{
			[Token(Token = "0x6002FBC")]
			[Address(RVA = "0x11386D8", Offset = "0x11386D8", VA = "0x11386D8", Slot = "32")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000609")]
		public override string removeControllerButtonLabel
		{
			[Token(Token = "0x6002FBD")]
			[Address(RVA = "0x11386E0", Offset = "0x11386E0", VA = "0x11386E0", Slot = "33")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700060A")]
		public override string calibrateControllerButtonLabel
		{
			[Token(Token = "0x6002FBE")]
			[Address(RVA = "0x11386E8", Offset = "0x11386E8", VA = "0x11386E8", Slot = "34")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700060B")]
		public override string assignControllerButtonLabel
		{
			[Token(Token = "0x6002FBF")]
			[Address(RVA = "0x11386F0", Offset = "0x11386F0", VA = "0x11386F0", Slot = "35")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700060C")]
		public override string inputBehaviorSettingsButtonLabel
		{
			[Token(Token = "0x6002FC0")]
			[Address(RVA = "0x11386F8", Offset = "0x11386F8", VA = "0x11386F8", Slot = "36")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700060D")]
		public override string doneButtonLabel
		{
			[Token(Token = "0x6002FC1")]
			[Address(RVA = "0x1138700", Offset = "0x1138700", VA = "0x1138700", Slot = "37")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700060E")]
		public override string restoreDefaultsButtonLabel
		{
			[Token(Token = "0x6002FC2")]
			[Address(RVA = "0x1138708", Offset = "0x1138708", VA = "0x1138708", Slot = "38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700060F")]
		public override string controllerSettingsGroupLabel
		{
			[Token(Token = "0x6002FC3")]
			[Address(RVA = "0x1138710", Offset = "0x1138710", VA = "0x1138710", Slot = "39")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000610")]
		public override string playersGroupLabel
		{
			[Token(Token = "0x6002FC4")]
			[Address(RVA = "0x1138718", Offset = "0x1138718", VA = "0x1138718", Slot = "40")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000611")]
		public override string assignedControllersGroupLabel
		{
			[Token(Token = "0x6002FC5")]
			[Address(RVA = "0x1138720", Offset = "0x1138720", VA = "0x1138720", Slot = "41")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000612")]
		public override string settingsGroupLabel
		{
			[Token(Token = "0x6002FC6")]
			[Address(RVA = "0x1138728", Offset = "0x1138728", VA = "0x1138728", Slot = "42")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000613")]
		public override string mapCategoriesGroupLabel
		{
			[Token(Token = "0x6002FC7")]
			[Address(RVA = "0x1138730", Offset = "0x1138730", VA = "0x1138730", Slot = "43")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000614")]
		public override string restoreDefaultsWindowMessage
		{
			[Token(Token = "0x6002FC8")]
			[Address(RVA = "0x1138738", Offset = "0x1138738", VA = "0x1138738", Slot = "44")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000615")]
		public override string calibrateWindow_deadZoneSliderLabel
		{
			[Token(Token = "0x6002FC9")]
			[Address(RVA = "0x11387C0", Offset = "0x11387C0", VA = "0x11387C0", Slot = "45")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000616")]
		public override string calibrateWindow_zeroSliderLabel
		{
			[Token(Token = "0x6002FCA")]
			[Address(RVA = "0x11387C8", Offset = "0x11387C8", VA = "0x11387C8", Slot = "46")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000617")]
		public override string calibrateWindow_sensitivitySliderLabel
		{
			[Token(Token = "0x6002FCB")]
			[Address(RVA = "0x11387D0", Offset = "0x11387D0", VA = "0x11387D0", Slot = "47")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000618")]
		public override string calibrateWindow_invertToggleLabel
		{
			[Token(Token = "0x6002FCC")]
			[Address(RVA = "0x11387D8", Offset = "0x11387D8", VA = "0x11387D8", Slot = "48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000619")]
		public override string calibrateWindow_calibrateButtonLabel
		{
			[Token(Token = "0x6002FCD")]
			[Address(RVA = "0x11387E0", Offset = "0x11387E0", VA = "0x11387E0", Slot = "49")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002FA0")]
		[Address(RVA = "0x11384A0", Offset = "0x11384A0", VA = "0x11384A0", Slot = "4")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6002FA1")]
		[Address(RVA = "0x11384E0", Offset = "0x11384E0", VA = "0x11384E0", Slot = "5")]
		public override string GetCustomEntry(string key)
		{
			return null;
		}

		[Token(Token = "0x6002FA2")]
		[Address(RVA = "0x1138588", Offset = "0x1138588", VA = "0x1138588", Slot = "6")]
		public override bool ContainsCustomEntryKey(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6002FCE")]
		[Address(RVA = "0x11387E8", Offset = "0x11387E8", VA = "0x11387E8", Slot = "50")]
		public override string GetControllerAssignmentConflictWindowMessage(string joystickName, string otherPlayerName, string currentPlayerName)
		{
			return null;
		}

		[Token(Token = "0x6002FCF")]
		[Address(RVA = "0x11387F4", Offset = "0x11387F4", VA = "0x11387F4", Slot = "51")]
		public override string GetJoystickElementAssignmentPollingWindowMessage(string actionName)
		{
			return null;
		}

		[Token(Token = "0x6002FD0")]
		[Address(RVA = "0x1138800", Offset = "0x1138800", VA = "0x1138800", Slot = "52")]
		public override string GetJoystickElementAssignmentPollingWindowMessage_FullAxisFieldOnly(string actionName)
		{
			return null;
		}

		[Token(Token = "0x6002FD1")]
		[Address(RVA = "0x113880C", Offset = "0x113880C", VA = "0x113880C", Slot = "53")]
		public override string GetKeyboardElementAssignmentPollingWindowMessage(string actionName)
		{
			return null;
		}

		[Token(Token = "0x6002FD2")]
		[Address(RVA = "0x1138818", Offset = "0x1138818", VA = "0x1138818", Slot = "54")]
		public override string GetMouseElementAssignmentPollingWindowMessage(string actionName)
		{
			return null;
		}

		[Token(Token = "0x6002FD3")]
		[Address(RVA = "0x1138824", Offset = "0x1138824", VA = "0x1138824", Slot = "55")]
		public override string GetMouseElementAssignmentPollingWindowMessage_FullAxisFieldOnly(string actionName)
		{
			return null;
		}

		[Token(Token = "0x6002FD4")]
		[Address(RVA = "0x1138830", Offset = "0x1138830", VA = "0x1138830", Slot = "56")]
		public override string GetElementAlreadyInUseBlocked(string elementName)
		{
			return null;
		}

		[Token(Token = "0x6002FD5")]
		[Address(RVA = "0x113883C", Offset = "0x113883C", VA = "0x113883C", Slot = "57")]
		public override string GetElementAlreadyInUseCanReplace(string elementName, bool allowConflicts)
		{
			return null;
		}

		[Token(Token = "0x6002FD6")]
		[Address(RVA = "0x1138858", Offset = "0x1138858", VA = "0x1138858", Slot = "58")]
		public override string GetMouseAssignmentConflictWindowMessage(string otherPlayerName, string thisPlayerName)
		{
			return null;
		}

		[Token(Token = "0x6002FD7")]
		[Address(RVA = "0x1138864", Offset = "0x1138864", VA = "0x1138864", Slot = "59")]
		public override string GetCalibrateAxisStep1WindowMessage(string axisName)
		{
			return null;
		}

		[Token(Token = "0x6002FD8")]
		[Address(RVA = "0x1138870", Offset = "0x1138870", VA = "0x1138870", Slot = "60")]
		public override string GetCalibrateAxisStep2WindowMessage(string axisName)
		{
			return null;
		}

		[Token(Token = "0x6002FD9")]
		[Address(RVA = "0x113887C", Offset = "0x113887C", VA = "0x113887C", Slot = "61")]
		public override string GetPlayerName(int playerId)
		{
			return null;
		}

		[Token(Token = "0x6002FDA")]
		[Address(RVA = "0x113896C", Offset = "0x113896C", VA = "0x113896C", Slot = "62")]
		public override string GetControllerName(Controller controller)
		{
			return null;
		}

		[Token(Token = "0x6002FDB")]
		[Address(RVA = "0x11389D0", Offset = "0x11389D0", VA = "0x11389D0", Slot = "63")]
		public override string GetElementIdentifierName(ActionElementMap actionElementMap)
		{
			return null;
		}

		[Token(Token = "0x6002FDC")]
		[Address(RVA = "0x1138AC8", Offset = "0x1138AC8", VA = "0x1138AC8", Slot = "64")]
		public override string GetElementIdentifierName(Controller controller, int elementIdentifierId, AxisRange axisRange)
		{
			return null;
		}

		[Token(Token = "0x6002FDD")]
		[Address(RVA = "0x1138C50", Offset = "0x1138C50", VA = "0x1138C50", Slot = "65")]
		public override string GetElementIdentifierName(KeyCode keyCode, ModifierKeyFlags modifierKeyFlags)
		{
			return null;
		}

		[Token(Token = "0x6002FDE")]
		[Address(RVA = "0x1138D10", Offset = "0x1138D10", VA = "0x1138D10", Slot = "66")]
		public override string GetActionName(int actionId)
		{
			return null;
		}

		[Token(Token = "0x6002FDF")]
		[Address(RVA = "0x1138E00", Offset = "0x1138E00", VA = "0x1138E00", Slot = "67")]
		public override string GetActionName(int actionId, AxisRange axisRange)
		{
			return null;
		}

		[Token(Token = "0x6002FE0")]
		[Address(RVA = "0x1138FEC", Offset = "0x1138FEC", VA = "0x1138FEC", Slot = "68")]
		public override string GetMapCategoryName(int id)
		{
			return null;
		}

		[Token(Token = "0x6002FE1")]
		[Address(RVA = "0x11390DC", Offset = "0x11390DC", VA = "0x11390DC", Slot = "69")]
		public override string GetActionCategoryName(int id)
		{
			return null;
		}

		[Token(Token = "0x6002FE2")]
		[Address(RVA = "0x11391CC", Offset = "0x11391CC", VA = "0x11391CC", Slot = "70")]
		public override string GetLayoutName(ControllerType controllerType, int id)
		{
			return null;
		}

		[Token(Token = "0x6002FE3")]
		[Address(RVA = "0x1139320", Offset = "0x1139320", VA = "0x1139320", Slot = "71")]
		public override string ModifierKeyFlagsToString(ModifierKeyFlags flags)
		{
			return null;
		}

		[Token(Token = "0x6002FE4")]
		[Address(RVA = "0x1139518", Offset = "0x1139518", VA = "0x1139518")]
		public LanguageData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200063B")]
	public abstract class LanguageDataBase : ScriptableObject
	{
		[Token(Token = "0x1700061A")]
		public abstract string yes
		{
			[Token(Token = "0x6002FEC")]
			get;
		}

		[Token(Token = "0x1700061B")]
		public abstract string no
		{
			[Token(Token = "0x6002FED")]
			get;
		}

		[Token(Token = "0x1700061C")]
		public abstract string add
		{
			[Token(Token = "0x6002FEE")]
			get;
		}

		[Token(Token = "0x1700061D")]
		public abstract string replace
		{
			[Token(Token = "0x6002FEF")]
			get;
		}

		[Token(Token = "0x1700061E")]
		public abstract string remove
		{
			[Token(Token = "0x6002FF0")]
			get;
		}

		[Token(Token = "0x1700061F")]
		public abstract string swap
		{
			[Token(Token = "0x6002FF1")]
			get;
		}

		[Token(Token = "0x17000620")]
		public abstract string cancel
		{
			[Token(Token = "0x6002FF2")]
			get;
		}

		[Token(Token = "0x17000621")]
		public abstract string none
		{
			[Token(Token = "0x6002FF3")]
			get;
		}

		[Token(Token = "0x17000622")]
		public abstract string okay
		{
			[Token(Token = "0x6002FF4")]
			get;
		}

		[Token(Token = "0x17000623")]
		public abstract string done
		{
			[Token(Token = "0x6002FF5")]
			get;
		}

		[Token(Token = "0x17000624")]
		public abstract string default_
		{
			[Token(Token = "0x6002FF6")]
			get;
		}

		[Token(Token = "0x17000625")]
		public abstract string assignControllerWindowTitle
		{
			[Token(Token = "0x6002FF7")]
			get;
		}

		[Token(Token = "0x17000626")]
		public abstract string assignControllerWindowMessage
		{
			[Token(Token = "0x6002FF8")]
			get;
		}

		[Token(Token = "0x17000627")]
		public abstract string controllerAssignmentConflictWindowTitle
		{
			[Token(Token = "0x6002FF9")]
			get;
		}

		[Token(Token = "0x17000628")]
		public abstract string elementAssignmentPrePollingWindowMessage
		{
			[Token(Token = "0x6002FFA")]
			get;
		}

		[Token(Token = "0x17000629")]
		public abstract string elementAssignmentConflictWindowMessage
		{
			[Token(Token = "0x6002FFB")]
			get;
		}

		[Token(Token = "0x1700062A")]
		public abstract string mouseAssignmentConflictWindowTitle
		{
			[Token(Token = "0x6002FFC")]
			get;
		}

		[Token(Token = "0x1700062B")]
		public abstract string calibrateControllerWindowTitle
		{
			[Token(Token = "0x6002FFD")]
			get;
		}

		[Token(Token = "0x1700062C")]
		public abstract string calibrateAxisStep1WindowTitle
		{
			[Token(Token = "0x6002FFE")]
			get;
		}

		[Token(Token = "0x1700062D")]
		public abstract string calibrateAxisStep2WindowTitle
		{
			[Token(Token = "0x6002FFF")]
			get;
		}

		[Token(Token = "0x1700062E")]
		public abstract string inputBehaviorSettingsWindowTitle
		{
			[Token(Token = "0x6003000")]
			get;
		}

		[Token(Token = "0x1700062F")]
		public abstract string restoreDefaultsWindowTitle
		{
			[Token(Token = "0x6003001")]
			get;
		}

		[Token(Token = "0x17000630")]
		public abstract string actionColumnLabel
		{
			[Token(Token = "0x6003002")]
			get;
		}

		[Token(Token = "0x17000631")]
		public abstract string keyboardColumnLabel
		{
			[Token(Token = "0x6003003")]
			get;
		}

		[Token(Token = "0x17000632")]
		public abstract string mouseColumnLabel
		{
			[Token(Token = "0x6003004")]
			get;
		}

		[Token(Token = "0x17000633")]
		public abstract string controllerColumnLabel
		{
			[Token(Token = "0x6003005")]
			get;
		}

		[Token(Token = "0x17000634")]
		public abstract string removeControllerButtonLabel
		{
			[Token(Token = "0x6003006")]
			get;
		}

		[Token(Token = "0x17000635")]
		public abstract string calibrateControllerButtonLabel
		{
			[Token(Token = "0x6003007")]
			get;
		}

		[Token(Token = "0x17000636")]
		public abstract string assignControllerButtonLabel
		{
			[Token(Token = "0x6003008")]
			get;
		}

		[Token(Token = "0x17000637")]
		public abstract string inputBehaviorSettingsButtonLabel
		{
			[Token(Token = "0x6003009")]
			get;
		}

		[Token(Token = "0x17000638")]
		public abstract string doneButtonLabel
		{
			[Token(Token = "0x600300A")]
			get;
		}

		[Token(Token = "0x17000639")]
		public abstract string restoreDefaultsButtonLabel
		{
			[Token(Token = "0x600300B")]
			get;
		}

		[Token(Token = "0x1700063A")]
		public abstract string controllerSettingsGroupLabel
		{
			[Token(Token = "0x600300C")]
			get;
		}

		[Token(Token = "0x1700063B")]
		public abstract string playersGroupLabel
		{
			[Token(Token = "0x600300D")]
			get;
		}

		[Token(Token = "0x1700063C")]
		public abstract string assignedControllersGroupLabel
		{
			[Token(Token = "0x600300E")]
			get;
		}

		[Token(Token = "0x1700063D")]
		public abstract string settingsGroupLabel
		{
			[Token(Token = "0x600300F")]
			get;
		}

		[Token(Token = "0x1700063E")]
		public abstract string mapCategoriesGroupLabel
		{
			[Token(Token = "0x6003010")]
			get;
		}

		[Token(Token = "0x1700063F")]
		public abstract string restoreDefaultsWindowMessage
		{
			[Token(Token = "0x6003011")]
			get;
		}

		[Token(Token = "0x17000640")]
		public abstract string calibrateWindow_deadZoneSliderLabel
		{
			[Token(Token = "0x6003012")]
			get;
		}

		[Token(Token = "0x17000641")]
		public abstract string calibrateWindow_zeroSliderLabel
		{
			[Token(Token = "0x6003013")]
			get;
		}

		[Token(Token = "0x17000642")]
		public abstract string calibrateWindow_sensitivitySliderLabel
		{
			[Token(Token = "0x6003014")]
			get;
		}

		[Token(Token = "0x17000643")]
		public abstract string calibrateWindow_invertToggleLabel
		{
			[Token(Token = "0x6003015")]
			get;
		}

		[Token(Token = "0x17000644")]
		public abstract string calibrateWindow_calibrateButtonLabel
		{
			[Token(Token = "0x6003016")]
			get;
		}

		[Token(Token = "0x6002FE9")]
		public abstract void Initialize();

		[Token(Token = "0x6002FEA")]
		public abstract string GetCustomEntry(string key);

		[Token(Token = "0x6002FEB")]
		public abstract bool ContainsCustomEntryKey(string key);

		[Token(Token = "0x6003017")]
		public abstract string GetControllerAssignmentConflictWindowMessage(string joystickName, string otherPlayerName, string currentPlayerName);

		[Token(Token = "0x6003018")]
		public abstract string GetJoystickElementAssignmentPollingWindowMessage(string actionName);

		[Token(Token = "0x6003019")]
		public abstract string GetJoystickElementAssignmentPollingWindowMessage_FullAxisFieldOnly(string actionName);

		[Token(Token = "0x600301A")]
		public abstract string GetKeyboardElementAssignmentPollingWindowMessage(string actionName);

		[Token(Token = "0x600301B")]
		public abstract string GetMouseElementAssignmentPollingWindowMessage(string actionName);

		[Token(Token = "0x600301C")]
		public abstract string GetMouseElementAssignmentPollingWindowMessage_FullAxisFieldOnly(string actionName);

		[Token(Token = "0x600301D")]
		public abstract string GetElementAlreadyInUseBlocked(string elementName);

		[Token(Token = "0x600301E")]
		public abstract string GetElementAlreadyInUseCanReplace(string elementName, bool allowConflicts);

		[Token(Token = "0x600301F")]
		public abstract string GetMouseAssignmentConflictWindowMessage(string otherPlayerName, string thisPlayerName);

		[Token(Token = "0x6003020")]
		public abstract string GetCalibrateAxisStep1WindowMessage(string axisName);

		[Token(Token = "0x6003021")]
		public abstract string GetCalibrateAxisStep2WindowMessage(string axisName);

		[Token(Token = "0x6003022")]
		public abstract string GetPlayerName(int playerId);

		[Token(Token = "0x6003023")]
		public abstract string GetControllerName(Controller controller);

		[Token(Token = "0x6003024")]
		public abstract string GetElementIdentifierName(ActionElementMap actionElementMap);

		[Token(Token = "0x6003025")]
		public abstract string GetElementIdentifierName(Controller controller, int elementIdentifierId, AxisRange axisRange);

		[Token(Token = "0x6003026")]
		public abstract string GetElementIdentifierName(KeyCode keyCode, ModifierKeyFlags modifierKeyFlags);

		[Token(Token = "0x6003027")]
		public abstract string GetActionName(int actionId);

		[Token(Token = "0x6003028")]
		public abstract string GetActionName(int actionId, AxisRange axisRange);

		[Token(Token = "0x6003029")]
		public abstract string GetMapCategoryName(int id);

		[Token(Token = "0x600302A")]
		public abstract string GetActionCategoryName(int id);

		[Token(Token = "0x600302B")]
		public abstract string GetLayoutName(ControllerType controllerType, int id);

		[Token(Token = "0x600302C")]
		public abstract string ModifierKeyFlagsToString(ModifierKeyFlags flags);

		[Token(Token = "0x600302D")]
		[Address(RVA = "0x1139B00", Offset = "0x1139B00", VA = "0x1139B00")]
		protected LanguageDataBase()
		{
		}
	}
	[Token(Token = "0x200063C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x919720", Offset = "0x919720")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x919720", Offset = "0x919720")]
	public class ScrollRectSelectableChild : MonoBehaviour, ISelectHandler, IEventSystemHandler
	{
		[Token(Token = "0x4002B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool useCustomEdgePadding;

		[Token(Token = "0x4002B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float customEdgePadding;

		[Token(Token = "0x4002B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ScrollRect parentScrollRect;

		[Token(Token = "0x4002B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Selectable _selectable;

		[Token(Token = "0x17000645")]
		private RectTransform parentScrollRectContentTransform
		{
			[Token(Token = "0x600302E")]
			[Address(RVA = "0xDC62B0", Offset = "0xDC62B0", VA = "0xDC62B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000646")]
		private Selectable selectable
		{
			[Token(Token = "0x600302F")]
			[Address(RVA = "0xDC62CC", Offset = "0xDC62CC", VA = "0xDC62CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000647")]
		private RectTransform rectTransform
		{
			[Token(Token = "0x6003030")]
			[Address(RVA = "0xDC6328", Offset = "0xDC6328", VA = "0xDC6328")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6003031")]
		[Address(RVA = "0xDC638C", Offset = "0xDC638C", VA = "0xDC638C")]
		private void Start()
		{
		}

		[Token(Token = "0x6003032")]
		[Address(RVA = "0xDC6488", Offset = "0xDC6488", VA = "0xDC6488", Slot = "4")]
		public void OnSelect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6003033")]
		[Address(RVA = "0xDC678C", Offset = "0xDC678C", VA = "0xDC678C")]
		public ScrollRectSelectableChild()
		{
		}
	}
	[Token(Token = "0x200063D")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9197A4", Offset = "0x9197A4")]
	public class ScrollbarVisibilityHelper : MonoBehaviour
	{
		[Token(Token = "0x4002B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ScrollRect scrollRect;

		[Token(Token = "0x6003034")]
		[Address(RVA = "0xDC68A0", Offset = "0xDC68A0", VA = "0xDC68A0")]
		public ScrollbarVisibilityHelper()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200063E")]
	public class ThemeSettings : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x200063F")]
		private abstract class SelectableSettings_Base
		{
			[Token(Token = "0x4002B9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			protected Selectable.Transition _transition;

			[Token(Token = "0x4002B9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[SerializeField]
			protected CustomColorBlock _colors;

			[Token(Token = "0x4002B9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			[SerializeField]
			protected CustomSpriteState _spriteState;

			[Token(Token = "0x4002B9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			[SerializeField]
			protected CustomAnimationTriggers _animationTriggers;

			[Token(Token = "0x17000648")]
			public Selectable.Transition transition
			{
				[Token(Token = "0x600303D")]
				[Address(RVA = "0x13751E0", Offset = "0x13751E0", VA = "0x13751E0")]
				get
				{
					return default(Selectable.Transition);
				}
			}

			[Token(Token = "0x17000649")]
			public CustomColorBlock selectableColors
			{
				[Token(Token = "0x600303E")]
				[Address(RVA = "0x13751E8", Offset = "0x13751E8", VA = "0x13751E8")]
				get
				{
					return default(CustomColorBlock);
				}
			}

			[Token(Token = "0x1700064A")]
			public CustomSpriteState spriteState
			{
				[Token(Token = "0x600303F")]
				[Address(RVA = "0x13751F8", Offset = "0x13751F8", VA = "0x13751F8")]
				get
				{
					return default(CustomSpriteState);
				}
			}

			[Token(Token = "0x1700064B")]
			public CustomAnimationTriggers animationTriggers
			{
				[Token(Token = "0x6003040")]
				[Address(RVA = "0x137520C", Offset = "0x137520C", VA = "0x137520C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003041")]
			[Address(RVA = "0x1374C80", Offset = "0x1374C80", VA = "0x1374C80", Slot = "4")]
			public virtual void Apply(Selectable item)
			{
			}

			[Token(Token = "0x6003042")]
			[Address(RVA = "0x13750C8", Offset = "0x13750C8", VA = "0x13750C8")]
			protected SelectableSettings_Base()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000640")]
		private class SelectableSettings : SelectableSettings_Base
		{
			[Token(Token = "0x4002B9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			[SerializeField]
			private ImageSettings _imageSettings;

			[Token(Token = "0x1700064C")]
			public ImageSettings imageSettings
			{
				[Token(Token = "0x6003043")]
				[Address(RVA = "0x13750D0", Offset = "0x13750D0", VA = "0x13750D0")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003044")]
			[Address(RVA = "0x13750D8", Offset = "0x13750D8", VA = "0x13750D8", Slot = "4")]
			public override void Apply(Selectable item)
			{
			}

			[Token(Token = "0x6003045")]
			[Address(RVA = "0x13751D8", Offset = "0x13751D8", VA = "0x13751D8")]
			public SelectableSettings()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000641")]
		private class SliderSettings : SelectableSettings_Base
		{
			[Token(Token = "0x4002B9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			[SerializeField]
			private ImageSettings _handleImageSettings;

			[Token(Token = "0x4002BA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			[SerializeField]
			private ImageSettings _fillImageSettings;

			[Token(Token = "0x4002BA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			[SerializeField]
			private ImageSettings _backgroundImageSettings;

			[Token(Token = "0x1700064D")]
			public ImageSettings handleImageSettings
			{
				[Token(Token = "0x6003046")]
				[Address(RVA = "0x1375214", Offset = "0x1375214", VA = "0x1375214")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700064E")]
			public ImageSettings fillImageSettings
			{
				[Token(Token = "0x6003047")]
				[Address(RVA = "0x137521C", Offset = "0x137521C", VA = "0x137521C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700064F")]
			public ImageSettings backgroundImageSettings
			{
				[Token(Token = "0x6003048")]
				[Address(RVA = "0x1375224", Offset = "0x1375224", VA = "0x1375224")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003049")]
			[Address(RVA = "0x137522C", Offset = "0x137522C", VA = "0x137522C")]
			private void Apply(Slider item)
			{
			}

			[Token(Token = "0x600304A")]
			[Address(RVA = "0x137544C", Offset = "0x137544C", VA = "0x137544C", Slot = "4")]
			public override void Apply(Selectable item)
			{
			}

			[Token(Token = "0x600304B")]
			[Address(RVA = "0x13754E4", Offset = "0x13754E4", VA = "0x13754E4")]
			public SliderSettings()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000642")]
		private class ScrollbarSettings : SelectableSettings_Base
		{
			[Token(Token = "0x4002BA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			[SerializeField]
			private ImageSettings _handleImageSettings;

			[Token(Token = "0x4002BA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			[SerializeField]
			private ImageSettings _backgroundImageSettings;

			[Token(Token = "0x17000650")]
			public ImageSettings handle
			{
				[Token(Token = "0x600304C")]
				[Address(RVA = "0x1374AA4", Offset = "0x1374AA4", VA = "0x1374AA4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000651")]
			public ImageSettings background
			{
				[Token(Token = "0x600304D")]
				[Address(RVA = "0x1374AAC", Offset = "0x1374AAC", VA = "0x1374AAC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600304E")]
			[Address(RVA = "0x1374AB4", Offset = "0x1374AB4", VA = "0x1374AB4")]
			private void Apply(Scrollbar item)
			{
			}

			[Token(Token = "0x600304F")]
			[Address(RVA = "0x1374BE8", Offset = "0x1374BE8", VA = "0x1374BE8", Slot = "4")]
			public override void Apply(Selectable item)
			{
			}

			[Token(Token = "0x6003050")]
			[Address(RVA = "0x13750C0", Offset = "0x13750C0", VA = "0x13750C0")]
			public ScrollbarSettings()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000643")]
		private class ImageSettings
		{
			[Token(Token = "0x4002BA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			private Color _color;

			[Token(Token = "0x4002BA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			private Sprite _sprite;

			[Token(Token = "0x4002BA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[SerializeField]
			private Material _materal;

			[Token(Token = "0x4002BA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[SerializeField]
			private Image.Type _type;

			[Token(Token = "0x4002BA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[SerializeField]
			private bool _preserveAspect;

			[Token(Token = "0x4002BA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
			[SerializeField]
			private bool _fillCenter;

			[Token(Token = "0x4002BAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[SerializeField]
			private Image.FillMethod _fillMethod;

			[Token(Token = "0x4002BAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			[SerializeField]
			private float _fillAmout;

			[Token(Token = "0x4002BAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[SerializeField]
			private bool _fillClockwise;

			[Token(Token = "0x4002BAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			[SerializeField]
			private int _fillOrigin;

			[Token(Token = "0x17000652")]
			public Color color
			{
				[Token(Token = "0x6003051")]
				[Address(RVA = "0x13748D8", Offset = "0x13748D8", VA = "0x13748D8")]
				get
				{
					return default(Color);
				}
			}

			[Token(Token = "0x17000653")]
			public Sprite sprite
			{
				[Token(Token = "0x6003052")]
				[Address(RVA = "0x13748E4", Offset = "0x13748E4", VA = "0x13748E4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000654")]
			public Material materal
			{
				[Token(Token = "0x6003053")]
				[Address(RVA = "0x13748EC", Offset = "0x13748EC", VA = "0x13748EC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000655")]
			public Image.Type type
			{
				[Token(Token = "0x6003054")]
				[Address(RVA = "0x13748F4", Offset = "0x13748F4", VA = "0x13748F4")]
				get
				{
					return default(Image.Type);
				}
			}

			[Token(Token = "0x17000656")]
			public bool preserveAspect
			{
				[Token(Token = "0x6003055")]
				[Address(RVA = "0x13748FC", Offset = "0x13748FC", VA = "0x13748FC")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000657")]
			public bool fillCenter
			{
				[Token(Token = "0x6003056")]
				[Address(RVA = "0x1374904", Offset = "0x1374904", VA = "0x1374904")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000658")]
			public Image.FillMethod fillMethod
			{
				[Token(Token = "0x6003057")]
				[Address(RVA = "0x137490C", Offset = "0x137490C", VA = "0x137490C")]
				get
				{
					return default(Image.FillMethod);
				}
			}

			[Token(Token = "0x17000659")]
			public float fillAmout
			{
				[Token(Token = "0x6003058")]
				[Address(RVA = "0x1374914", Offset = "0x1374914", VA = "0x1374914")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x1700065A")]
			public bool fillClockwise
			{
				[Token(Token = "0x6003059")]
				[Address(RVA = "0x137491C", Offset = "0x137491C", VA = "0x137491C")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x1700065B")]
			public int fillOrigin
			{
				[Token(Token = "0x600305A")]
				[Address(RVA = "0x1374924", Offset = "0x1374924", VA = "0x1374924")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x600305B")]
			[Address(RVA = "0x137492C", Offset = "0x137492C", VA = "0x137492C", Slot = "4")]
			public virtual void CopyTo(Image image)
			{
			}

			[Token(Token = "0x600305C")]
			[Address(RVA = "0x1374A70", Offset = "0x1374A70", VA = "0x1374A70")]
			public ImageSettings()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000644")]
		private struct CustomColorBlock
		{
			[Token(Token = "0x4002BAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[SerializeField]
			private float m_ColorMultiplier;

			[Token(Token = "0x4002BAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[SerializeField]
			private Color m_DisabledColor;

			[Token(Token = "0x4002BB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[SerializeField]
			private float m_FadeDuration;

			[Token(Token = "0x4002BB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private Color m_HighlightedColor;

			[Token(Token = "0x4002BB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[SerializeField]
			private Color m_NormalColor;

			[Token(Token = "0x4002BB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[SerializeField]
			private Color m_PressedColor;

			[Token(Token = "0x4002BB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[SerializeField]
			private Color m_SelectedColor;

			[Token(Token = "0x4002BB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[SerializeField]
			private Color m_DisabledHighlightedColor;

			[Token(Token = "0x1700065C")]
			public float colorMultiplier
			{
				[Token(Token = "0x600305D")]
				[Address(RVA = "0x1374790", Offset = "0x1374790", VA = "0x1374790")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x600305E")]
				[Address(RVA = "0x1374798", Offset = "0x1374798", VA = "0x1374798")]
				set
				{
				}
			}

			[Token(Token = "0x1700065D")]
			public Color disabledColor
			{
				[Token(Token = "0x600305F")]
				[Address(RVA = "0x13747A0", Offset = "0x13747A0", VA = "0x13747A0")]
				get
				{
					return default(Color);
				}
				[Token(Token = "0x6003060")]
				[Address(RVA = "0x13747AC", Offset = "0x13747AC", VA = "0x13747AC")]
				set
				{
				}
			}

			[Token(Token = "0x1700065E")]
			public float fadeDuration
			{
				[Token(Token = "0x6003061")]
				[Address(RVA = "0x13747B8", Offset = "0x13747B8", VA = "0x13747B8")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6003062")]
				[Address(RVA = "0x13747C0", Offset = "0x13747C0", VA = "0x13747C0")]
				set
				{
				}
			}

			[Token(Token = "0x1700065F")]
			public Color highlightedColor
			{
				[Token(Token = "0x6003063")]
				[Address(RVA = "0x13747C8", Offset = "0x13747C8", VA = "0x13747C8")]
				get
				{
					return default(Color);
				}
				[Token(Token = "0x6003064")]
				[Address(RVA = "0x13747D4", Offset = "0x13747D4", VA = "0x13747D4")]
				set
				{
				}
			}

			[Token(Token = "0x17000660")]
			public Color normalColor
			{
				[Token(Token = "0x6003065")]
				[Address(RVA = "0x13747E0", Offset = "0x13747E0", VA = "0x13747E0")]
				get
				{
					return default(Color);
				}
				[Token(Token = "0x6003066")]
				[Address(RVA = "0x13747EC", Offset = "0x13747EC", VA = "0x13747EC")]
				set
				{
				}
			}

			[Token(Token = "0x17000661")]
			public Color pressedColor
			{
				[Token(Token = "0x6003067")]
				[Address(RVA = "0x13747F8", Offset = "0x13747F8", VA = "0x13747F8")]
				get
				{
					return default(Color);
				}
				[Token(Token = "0x6003068")]
				[Address(RVA = "0x1374804", Offset = "0x1374804", VA = "0x1374804")]
				set
				{
				}
			}

			[Token(Token = "0x17000662")]
			public Color selectedColor
			{
				[Token(Token = "0x6003069")]
				[Address(RVA = "0x1374810", Offset = "0x1374810", VA = "0x1374810")]
				get
				{
					return default(Color);
				}
				[Token(Token = "0x600306A")]
				[Address(RVA = "0x137481C", Offset = "0x137481C", VA = "0x137481C")]
				set
				{
				}
			}

			[Token(Token = "0x17000663")]
			public Color disabledHighlightedColor
			{
				[Token(Token = "0x600306B")]
				[Address(RVA = "0x1374828", Offset = "0x1374828", VA = "0x1374828")]
				get
				{
					return default(Color);
				}
				[Token(Token = "0x600306C")]
				[Address(RVA = "0x1374834", Offset = "0x1374834", VA = "0x1374834")]
				set
				{
				}
			}

			[Token(Token = "0x600306D")]
			[Address(RVA = "0x1374840", Offset = "0x1374840", VA = "0x1374840")]
			public static implicit operator ColorBlock(CustomColorBlock item)
			{
				return default(ColorBlock);
			}
		}

		[Serializable]
		[Token(Token = "0x2000645")]
		private struct CustomSpriteState
		{
			[Token(Token = "0x4002BB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[SerializeField]
			private Sprite m_DisabledSprite;

			[Token(Token = "0x4002BB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[SerializeField]
			private Sprite m_HighlightedSprite;

			[Token(Token = "0x4002BB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			private Sprite m_PressedSprite;

			[Token(Token = "0x4002BB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private Sprite m_SelectedSprite;

			[Token(Token = "0x4002BBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			private Sprite m_DisabledHighlightedSprite;

			[Token(Token = "0x17000664")]
			public Sprite disabledSprite
			{
				[Token(Token = "0x600306E")]
				[Address(RVA = "0x1374870", Offset = "0x1374870", VA = "0x1374870")]
				get
				{
					return null;
				}
				[Token(Token = "0x600306F")]
				[Address(RVA = "0x1374878", Offset = "0x1374878", VA = "0x1374878")]
				set
				{
				}
			}

			[Token(Token = "0x17000665")]
			public Sprite highlightedSprite
			{
				[Token(Token = "0x6003070")]
				[Address(RVA = "0x1374880", Offset = "0x1374880", VA = "0x1374880")]
				get
				{
					return null;
				}
				[Token(Token = "0x6003071")]
				[Address(RVA = "0x1374888", Offset = "0x1374888", VA = "0x1374888")]
				set
				{
				}
			}

			[Token(Token = "0x17000666")]
			public Sprite pressedSprite
			{
				[Token(Token = "0x6003072")]
				[Address(RVA = "0x1374890", Offset = "0x1374890", VA = "0x1374890")]
				get
				{
					return null;
				}
				[Token(Token = "0x6003073")]
				[Address(RVA = "0x1374898", Offset = "0x1374898", VA = "0x1374898")]
				set
				{
				}
			}

			[Token(Token = "0x17000667")]
			public Sprite selectedSprite
			{
				[Token(Token = "0x6003074")]
				[Address(RVA = "0x13748A0", Offset = "0x13748A0", VA = "0x13748A0")]
				get
				{
					return null;
				}
				[Token(Token = "0x6003075")]
				[Address(RVA = "0x13748A8", Offset = "0x13748A8", VA = "0x13748A8")]
				set
				{
				}
			}

			[Token(Token = "0x17000668")]
			public Sprite disabledHighlightedSprite
			{
				[Token(Token = "0x6003076")]
				[Address(RVA = "0x13748B0", Offset = "0x13748B0", VA = "0x13748B0")]
				get
				{
					return null;
				}
				[Token(Token = "0x6003077")]
				[Address(RVA = "0x13748B8", Offset = "0x13748B8", VA = "0x13748B8")]
				set
				{
				}
			}

			[Token(Token = "0x6003078")]
			[Address(RVA = "0x13748C0", Offset = "0x13748C0", VA = "0x13748C0")]
			public static implicit operator SpriteState(CustomSpriteState item)
			{
				return default(SpriteState);
			}
		}

		[Serializable]
		[Token(Token = "0x2000646")]
		private class CustomAnimationTriggers
		{
			[Token(Token = "0x4002BBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			private string m_DisabledTrigger;

			[Token(Token = "0x4002BBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private string m_HighlightedTrigger;

			[Token(Token = "0x4002BBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			private string m_NormalTrigger;

			[Token(Token = "0x4002BBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[SerializeField]
			private string m_PressedTrigger;

			[Token(Token = "0x4002BBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[SerializeField]
			private string m_SelectedTrigger;

			[Token(Token = "0x4002BC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[SerializeField]
			private string m_DisabledHighlightedTrigger;

			[Token(Token = "0x17000669")]
			public string disabledTrigger
			{
				[Token(Token = "0x600307A")]
				[Address(RVA = "0x13746A0", Offset = "0x13746A0", VA = "0x13746A0")]
				get
				{
					return null;
				}
				[Token(Token = "0x600307B")]
				[Address(RVA = "0x13746A8", Offset = "0x13746A8", VA = "0x13746A8")]
				set
				{
				}
			}

			[Token(Token = "0x1700066A")]
			public string highlightedTrigger
			{
				[Token(Token = "0x600307C")]
				[Address(RVA = "0x13746B0", Offset = "0x13746B0", VA = "0x13746B0")]
				get
				{
					return null;
				}
				[Token(Token = "0x600307D")]
				[Address(RVA = "0x13746B8", Offset = "0x13746B8", VA = "0x13746B8")]
				set
				{
				}
			}

			[Token(Token = "0x1700066B")]
			public string normalTrigger
			{
				[Token(Token = "0x600307E")]
				[Address(RVA = "0x13746C0", Offset = "0x13746C0", VA = "0x13746C0")]
				get
				{
					return null;
				}
				[Token(Token = "0x600307F")]
				[Address(RVA = "0x13746C8", Offset = "0x13746C8", VA = "0x13746C8")]
				set
				{
				}
			}

			[Token(Token = "0x1700066C")]
			public string pressedTrigger
			{
				[Token(Token = "0x6003080")]
				[Address(RVA = "0x13746D0", Offset = "0x13746D0", VA = "0x13746D0")]
				get
				{
					return null;
				}
				[Token(Token = "0x6003081")]
				[Address(RVA = "0x13746D8", Offset = "0x13746D8", VA = "0x13746D8")]
				set
				{
				}
			}

			[Token(Token = "0x1700066D")]
			public string selectedTrigger
			{
				[Token(Token = "0x6003082")]
				[Address(RVA = "0x13746E0", Offset = "0x13746E0", VA = "0x13746E0")]
				get
				{
					return null;
				}
				[Token(Token = "0x6003083")]
				[Address(RVA = "0x13746E8", Offset = "0x13746E8", VA = "0x13746E8")]
				set
				{
				}
			}

			[Token(Token = "0x1700066E")]
			public string disabledHighlightedTrigger
			{
				[Token(Token = "0x6003084")]
				[Address(RVA = "0x13746F0", Offset = "0x13746F0", VA = "0x13746F0")]
				get
				{
					return null;
				}
				[Token(Token = "0x6003085")]
				[Address(RVA = "0x13746F8", Offset = "0x13746F8", VA = "0x13746F8")]
				set
				{
				}
			}

			[Token(Token = "0x6003079")]
			[Address(RVA = "0x1374604", Offset = "0x1374604", VA = "0x1374604")]
			public CustomAnimationTriggers()
			{
			}

			[Token(Token = "0x6003086")]
			[Address(RVA = "0x1374700", Offset = "0x1374700", VA = "0x1374700")]
			public static implicit operator AnimationTriggers(CustomAnimationTriggers item)
			{
				return null;
			}
		}

		[Serializable]
		[Token(Token = "0x2000647")]
		private class TextSettings
		{
			[Token(Token = "0x4002BC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			private Color _color;

			[Token(Token = "0x4002BC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			private Font _font;

			[Token(Token = "0x4002BC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[SerializeField]
			private FontStyleOverride _style;

			[Token(Token = "0x4002BC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[SerializeField]
			private float _sizeMultiplier;

			[Token(Token = "0x4002BC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[SerializeField]
			private float _lineSpacing;

			[Token(Token = "0x1700066F")]
			public Color color
			{
				[Token(Token = "0x6003087")]
				[Address(RVA = "0x13754EC", Offset = "0x13754EC", VA = "0x13754EC")]
				get
				{
					return default(Color);
				}
			}

			[Token(Token = "0x17000670")]
			public Font font
			{
				[Token(Token = "0x6003088")]
				[Address(RVA = "0x13754F8", Offset = "0x13754F8", VA = "0x13754F8")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000671")]
			public FontStyleOverride style
			{
				[Token(Token = "0x6003089")]
				[Address(RVA = "0x1375500", Offset = "0x1375500", VA = "0x1375500")]
				get
				{
					return default(FontStyleOverride);
				}
			}

			[Token(Token = "0x17000672")]
			public float sizeMultiplier
			{
				[Token(Token = "0x600308A")]
				[Address(RVA = "0x1375508", Offset = "0x1375508", VA = "0x1375508")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x17000673")]
			public float lineSpacing
			{
				[Token(Token = "0x600308B")]
				[Address(RVA = "0x1375510", Offset = "0x1375510", VA = "0x1375510")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x600308C")]
			[Address(RVA = "0x1375518", Offset = "0x1375518", VA = "0x1375518")]
			public TextSettings()
			{
			}
		}

		[Token(Token = "0x2000648")]
		private enum FontStyleOverride
		{
			[Token(Token = "0x4002BC7")]
			Default,
			[Token(Token = "0x4002BC8")]
			Normal,
			[Token(Token = "0x4002BC9")]
			Bold,
			[Token(Token = "0x4002BCA")]
			Italic,
			[Token(Token = "0x4002BCB")]
			BoldAndItalic
		}

		[Token(Token = "0x4002B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ImageSettings _mainWindowBackground;

		[Token(Token = "0x4002B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ImageSettings _popupWindowBackground;

		[Token(Token = "0x4002B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ImageSettings _areaBackground;

		[Token(Token = "0x4002B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private SelectableSettings _selectableSettings;

		[Token(Token = "0x4002B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SelectableSettings _buttonSettings;

		[Token(Token = "0x4002B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private SelectableSettings _inputGridFieldSettings;

		[Token(Token = "0x4002B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private ScrollbarSettings _scrollbarSettings;

		[Token(Token = "0x4002B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private SliderSettings _sliderSettings;

		[Token(Token = "0x4002B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private ImageSettings _invertToggle;

		[Token(Token = "0x4002B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Color _invertToggleDisabledColor;

		[Token(Token = "0x4002B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private ImageSettings _calibrationBackground;

		[Token(Token = "0x4002B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private ImageSettings _calibrationValueMarker;

		[Token(Token = "0x4002B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private ImageSettings _calibrationRawValueMarker;

		[Token(Token = "0x4002B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private ImageSettings _calibrationZeroMarker;

		[Token(Token = "0x4002B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private ImageSettings _calibrationCalibratedZeroMarker;

		[Token(Token = "0x4002B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private ImageSettings _calibrationDeadzone;

		[Token(Token = "0x4002B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private TextSettings _textSettings;

		[Token(Token = "0x4002B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private TextSettings _buttonTextSettings;

		[Token(Token = "0x4002B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private TextSettings _inputGridFieldTextSettings;

		[Token(Token = "0x6003035")]
		[Address(RVA = "0xF0C0CC", Offset = "0xF0C0CC", VA = "0xF0C0CC")]
		public void Apply(ThemedElement.ElementInfo[] elementInfo)
		{
		}

		[Token(Token = "0x6003036")]
		[Address(RVA = "0xF0C148", Offset = "0xF0C148", VA = "0xF0C148")]
		private void Apply(string themeClass, Component component)
		{
		}

		[Token(Token = "0x6003037")]
		[Address(RVA = "0xF0C4B8", Offset = "0xF0C4B8", VA = "0xF0C4B8")]
		private void Apply(string themeClass, Selectable item)
		{
		}

		[Token(Token = "0x6003038")]
		[Address(RVA = "0xF0C7BC", Offset = "0xF0C7BC", VA = "0xF0C7BC")]
		private void Apply(string themeClass, Image item)
		{
		}

		[Token(Token = "0x6003039")]
		[Address(RVA = "0xF0CBCC", Offset = "0xF0CBCC", VA = "0xF0CBCC")]
		private void Apply(string themeClass, Text item)
		{
		}

		[Token(Token = "0x600303A")]
		[Address(RVA = "0xF0CE28", Offset = "0xF0CE28", VA = "0xF0CE28")]
		private void Apply(string themeClass, UIImageHelper item)
		{
		}

		[Token(Token = "0x600303B")]
		[Address(RVA = "0xF0CEF4", Offset = "0xF0CEF4", VA = "0xF0CEF4")]
		private static FontStyle GetFontStyle(FontStyleOverride style)
		{
			return default(FontStyle);
		}

		[Token(Token = "0x600303C")]
		[Address(RVA = "0xF0CEFC", Offset = "0xF0CEFC", VA = "0xF0CEFC")]
		public ThemeSettings()
		{
		}
	}
	[Token(Token = "0x2000649")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9197DC", Offset = "0x9197DC")]
	public class ThemedElement : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200064A")]
		public class ElementInfo
		{
			[Token(Token = "0x4002BCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			private string _themeClass;

			[Token(Token = "0x4002BCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private Component _component;

			[Token(Token = "0x17000674")]
			public string themeClass
			{
				[Token(Token = "0x600308F")]
				[Address(RVA = "0x1375554", Offset = "0x1375554", VA = "0x1375554")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000675")]
			public Component component
			{
				[Token(Token = "0x6003090")]
				[Address(RVA = "0x137555C", Offset = "0x137555C", VA = "0x137555C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003091")]
			[Address(RVA = "0x1375564", Offset = "0x1375564", VA = "0x1375564")]
			public ElementInfo()
			{
			}
		}

		[Token(Token = "0x4002BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ElementInfo[] _elements;

		[Token(Token = "0x600308D")]
		[Address(RVA = "0xF0CF04", Offset = "0xF0CF04", VA = "0xF0CF04")]
		private void Start()
		{
		}

		[Token(Token = "0x600308E")]
		[Address(RVA = "0xF0CF10", Offset = "0xF0CF10", VA = "0xF0CF10")]
		public ThemedElement()
		{
		}
	}
	[Token(Token = "0x200064B")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x919814", Offset = "0x919814")]
	public class ToggleInfo : InputFieldInfo
	{
		[Token(Token = "0x6003092")]
		[Address(RVA = "0xF1088C", Offset = "0xF1088C", VA = "0xF1088C")]
		public ToggleInfo()
		{
		}
	}
	[Token(Token = "0x200064C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x91984C", Offset = "0x91984C")]
	public class UIControl : MonoBehaviour
	{
		[Token(Token = "0x4002BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text title;

		[Token(Token = "0x4002BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int _id;

		[Token(Token = "0x4002BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool _showTitle;

		[Token(Token = "0x4002BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _uidCounter;

		[Token(Token = "0x17000676")]
		public int id
		{
			[Token(Token = "0x6003093")]
			[Address(RVA = "0xED0320", Offset = "0xED0320", VA = "0xED0320")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000677")]
		public bool showTitle
		{
			[Token(Token = "0x6003095")]
			[Address(RVA = "0xED03BC", Offset = "0xED03BC", VA = "0xED03BC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6003096")]
			[Address(RVA = "0xED03C4", Offset = "0xED03C4", VA = "0xED03C4")]
			set
			{
			}
		}

		[Token(Token = "0x6003094")]
		[Address(RVA = "0xED0328", Offset = "0xED0328", VA = "0xED0328")]
		private void Awake()
		{
		}

		[Token(Token = "0x6003097")]
		[Address(RVA = "0xED0470", Offset = "0xED0470", VA = "0xED0470", Slot = "4")]
		public virtual void SetCancelCallback(Action cancelCallback)
		{
		}

		[Token(Token = "0x6003098")]
		[Address(RVA = "0xED034C", Offset = "0xED034C", VA = "0xED034C")]
		private static int GetNextUid()
		{
			return default(int);
		}

		[Token(Token = "0x6003099")]
		[Address(RVA = "0xED0474", Offset = "0xED0474", VA = "0xED0474")]
		public UIControl()
		{
		}
	}
	[Token(Token = "0x200064D")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x919884", Offset = "0x919884")]
	public class UIControlSet : MonoBehaviour
	{
		[Token(Token = "0x200064E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9198BC", Offset = "0x9198BC")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x4002BD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<int, float> valueChangedCallback;

			[Token(Token = "0x4002BD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public UISliderControl control;

			[Token(Token = "0x4002BD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action<int> cancelCallback;

			[Token(Token = "0x600309F")]
			[Address(RVA = "0x11B3BB4", Offset = "0x11B3BB4", VA = "0x11B3BB4")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x60030A0")]
			[Address(RVA = "0x11B3BBC", Offset = "0x11B3BBC", VA = "0x11B3BBC")]
			internal void <CreateSlider>b__0(float value)
			{
			}

			[Token(Token = "0x60030A1")]
			[Address(RVA = "0x11B3C2C", Offset = "0x11B3C2C", VA = "0x11B3C2C")]
			internal void <CreateSlider>b__1()
			{
			}
		}

		[Token(Token = "0x4002BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text title;

		[Token(Token = "0x4002BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<int, UIControl> _controls;

		[Token(Token = "0x17000678")]
		private Dictionary<int, UIControl> controls
		{
			[Token(Token = "0x600309A")]
			[Address(RVA = "0xED047C", Offset = "0xED047C", VA = "0xED047C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600309B")]
		[Address(RVA = "0xED04F8", Offset = "0xED04F8", VA = "0xED04F8")]
		public void SetTitle(string text)
		{
		}

		[Token(Token = "0x600309C")]
		public T GetControl<T>(int uniqueId) where T : UIControl
		{
			return null;
		}

		[Token(Token = "0x600309D")]
		[Address(RVA = "0xED05A4", Offset = "0xED05A4", VA = "0xED05A4")]
		public UISliderControl CreateSlider(GameObject prefab, Sprite icon, float minValue, float maxValue, Action<int, float> valueChangedCallback, Action<int> cancelCallback)
		{
			return null;
		}

		[Token(Token = "0x600309E")]
		[Address(RVA = "0xED096C", Offset = "0xED096C", VA = "0xED096C")]
		public UIControlSet()
		{
		}
	}
	[Token(Token = "0x200064F")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9198CC", Offset = "0x9198CC")]
	public abstract class UIElementInfo : MonoBehaviour, ISelectHandler, IEventSystemHandler
	{
		[Token(Token = "0x4002BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string identifier;

		[Token(Token = "0x4002BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int intData;

		[Token(Token = "0x4002BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Text text;

		[Token(Token = "0x14000023")]
		public event Action<GameObject> OnSelectedEvent
		{
			[Token(Token = "0x60030A2")]
			[Address(RVA = "0xED0974", Offset = "0xED0974", VA = "0xED0974")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9307E8", Offset = "0x9307E8")]
			add
			{
			}
			[Token(Token = "0x60030A3")]
			[Address(RVA = "0xED0A14", Offset = "0xED0A14", VA = "0xED0A14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9307F8", Offset = "0x9307F8")]
			remove
			{
			}
		}

		[Token(Token = "0x60030A4")]
		[Address(RVA = "0xED0AB4", Offset = "0xED0AB4", VA = "0xED0AB4", Slot = "4")]
		public void OnSelect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x60030A5")]
		[Address(RVA = "0xED0B24", Offset = "0xED0B24", VA = "0xED0B24")]
		protected UIElementInfo()
		{
		}
	}
	[Token(Token = "0x2000650")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x919904", Offset = "0x919904")]
	public class UIGroup : MonoBehaviour
	{
		[Token(Token = "0x4002BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text _label;

		[Token(Token = "0x4002BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _content;

		[Token(Token = "0x17000679")]
		public string labelText
		{
			[Token(Token = "0x60030A6")]
			[Address(RVA = "0xED0B2C", Offset = "0xED0B2C", VA = "0xED0B2C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60030A7")]
			[Address(RVA = "0xED0BE4", Offset = "0xED0BE4", VA = "0xED0BE4")]
			set
			{
			}
		}

		[Token(Token = "0x1700067A")]
		public Transform content
		{
			[Token(Token = "0x60030A8")]
			[Address(RVA = "0xED0C90", Offset = "0xED0C90", VA = "0xED0C90")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60030A9")]
		[Address(RVA = "0xED0C98", Offset = "0xED0C98", VA = "0xED0C98")]
		public void SetLabelActive(bool state)
		{
		}

		[Token(Token = "0x60030AA")]
		[Address(RVA = "0xED0D48", Offset = "0xED0D48", VA = "0xED0D48")]
		public UIGroup()
		{
		}
	}
	[Token(Token = "0x2000651")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x91993C", Offset = "0x91993C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x91993C", Offset = "0x91993C")]
	public class UIImageHelper : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000652")]
		private class State
		{
			[Token(Token = "0x4002BE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			public Color color;

			[Token(Token = "0x60030B0")]
			[Address(RVA = "0x11B3C8C", Offset = "0x11B3C8C", VA = "0x11B3C8C")]
			public void Set(Image image)
			{
			}

			[Token(Token = "0x60030B1")]
			[Address(RVA = "0x11B3D38", Offset = "0x11B3D38", VA = "0x11B3D38")]
			public State()
			{
			}
		}

		[Token(Token = "0x4002BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private State enabledState;

		[Token(Token = "0x4002BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private State disabledState;

		[Token(Token = "0x4002BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool currentState;

		[Token(Token = "0x60030AB")]
		[Address(RVA = "0xED0D50", Offset = "0xED0D50", VA = "0xED0D50")]
		public void SetEnabledState(bool newState)
		{
		}

		[Token(Token = "0x60030AC")]
		[Address(RVA = "0xED0E98", Offset = "0xED0E98", VA = "0xED0E98")]
		public void SetEnabledStateColor(Color color)
		{
		}

		[Token(Token = "0x60030AD")]
		[Address(RVA = "0xED0EB8", Offset = "0xED0EB8", VA = "0xED0EB8")]
		public void SetDisabledStateColor(Color color)
		{
		}

		[Token(Token = "0x60030AE")]
		[Address(RVA = "0xED0ED8", Offset = "0xED0ED8", VA = "0xED0ED8")]
		public void Refresh()
		{
		}

		[Token(Token = "0x60030AF")]
		[Address(RVA = "0xED0FB4", Offset = "0xED0FB4", VA = "0xED0FB4")]
		public UIImageHelper()
		{
		}
	}
	[Token(Token = "0x2000653")]
	public static class UISelectionUtility
	{
		[Token(Token = "0x4002BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Selectable[] s_reusableAllSelectables;

		[Token(Token = "0x60030B2")]
		[Address(RVA = "0xED0FBC", Offset = "0xED0FBC", VA = "0xED0FBC")]
		public static Selectable FindNextSelectable(Selectable selectable, Transform transform, Vector3 direction)
		{
			return null;
		}
	}
	[Token(Token = "0x2000654")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9199C0", Offset = "0x9199C0")]
	public class UISliderControl : UIControl
	{
		[Token(Token = "0x2000655")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9199F8", Offset = "0x9199F8")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x4002BE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action cancelCallback;

			[Token(Token = "0x60030BA")]
			[Address(RVA = "0x11B3D40", Offset = "0x11B3D40", VA = "0x11B3D40")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x60030BB")]
			[Address(RVA = "0x11B3D48", Offset = "0x11B3D48", VA = "0x11B3D48")]
			internal void <SetCancelCallback>b__0()
			{
			}

			[Token(Token = "0x60030BC")]
			[Address(RVA = "0x11B3D64", Offset = "0x11B3D64", VA = "0x11B3D64")]
			internal void <SetCancelCallback>b__1(BaseEventData data)
			{
			}
		}

		[Token(Token = "0x4002BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Image iconImage;

		[Token(Token = "0x4002BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Slider slider;

		[Token(Token = "0x4002BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _showIcon;

		[Token(Token = "0x4002BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool _showSlider;

		[Token(Token = "0x1700067B")]
		public bool showIcon
		{
			[Token(Token = "0x60030B4")]
			[Address(RVA = "0xED2468", Offset = "0xED2468", VA = "0xED2468")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60030B5")]
			[Address(RVA = "0xED2470", Offset = "0xED2470", VA = "0xED2470")]
			set
			{
			}
		}

		[Token(Token = "0x1700067C")]
		public bool showSlider
		{
			[Token(Token = "0x60030B6")]
			[Address(RVA = "0xED251C", Offset = "0xED251C", VA = "0xED251C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60030B7")]
			[Address(RVA = "0xED2524", Offset = "0xED2524", VA = "0xED2524")]
			set
			{
			}
		}

		[Token(Token = "0x60030B8")]
		[Address(RVA = "0xED25D0", Offset = "0xED25D0", VA = "0xED25D0", Slot = "4")]
		public override void SetCancelCallback(Action cancelCallback)
		{
		}

		[Token(Token = "0x60030B9")]
		[Address(RVA = "0xED2998", Offset = "0xED2998", VA = "0xED2998")]
		public UISliderControl()
		{
		}
	}
	[Token(Token = "0x2000656")]
	public static class UITools
	{
		[Token(Token = "0x60030BD")]
		public static GameObject InstantiateGUIObject<T>(GameObject prefab, Transform parent, string name) where T : Component
		{
			return null;
		}

		[Token(Token = "0x60030BE")]
		public static GameObject InstantiateGUIObject<T>(GameObject prefab, Transform parent, string name, Vector2 pivot, Vector2 anchorMin, Vector2 anchorMax, Vector2 anchoredPosition) where T : Component
		{
			return null;
		}

		[Token(Token = "0x60030BF")]
		private static GameObject InstantiateGUIObject_Pre<T>(GameObject prefab, Transform parent, string name) where T : Component
		{
			return null;
		}

		[Token(Token = "0x60030C0")]
		[Address(RVA = "0xED17E4", Offset = "0xED17E4", VA = "0xED17E4")]
		public static Vector3 GetPointOnRectEdge(RectTransform rectTransform, Vector2 dir)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60030C1")]
		[Address(RVA = "0xED29A0", Offset = "0xED29A0", VA = "0xED29A0")]
		public static Rect GetWorldSpaceRect(RectTransform rt)
		{
			return default(Rect);
		}

		[Token(Token = "0x60030C2")]
		[Address(RVA = "0xED1924", Offset = "0xED1924", VA = "0xED1924")]
		public static Rect TransformRectTo(Transform from, Transform to, Rect rect)
		{
			return default(Rect);
		}

		[Token(Token = "0x60030C3")]
		[Address(RVA = "0xED1BA0", Offset = "0xED1BA0", VA = "0xED1BA0")]
		public static Rect InvertY(Rect rect)
		{
			return default(Rect);
		}

		[Token(Token = "0x60030C4")]
		[Address(RVA = "0xED2B20", Offset = "0xED2B20", VA = "0xED2B20")]
		public static void SetInteractable(Selectable selectable, bool state, bool playTransition)
		{
		}
	}
	[Token(Token = "0x2000657")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x919A08", Offset = "0x919A08")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x919A08", Offset = "0x919A08")]
	public class Window : MonoBehaviour
	{
		[Token(Token = "0x2000658")]
		public class Timer
		{
			[Token(Token = "0x4002BF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private bool _started;

			[Token(Token = "0x4002BF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float end;

			[Token(Token = "0x17000688")]
			public bool started
			{
				[Token(Token = "0x60030F1")]
				[Address(RVA = "0x11B95C4", Offset = "0x11B95C4", VA = "0x11B95C4")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000689")]
			public bool finished
			{
				[Token(Token = "0x60030F2")]
				[Address(RVA = "0x11B95CC", Offset = "0x11B95CC", VA = "0x11B95CC")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x1700068A")]
			public float remaining
			{
				[Token(Token = "0x60030F3")]
				[Address(RVA = "0x11B9614", Offset = "0x11B9614", VA = "0x11B9614")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x60030F4")]
			[Address(RVA = "0x11B964C", Offset = "0x11B964C", VA = "0x11B964C")]
			public Timer()
			{
			}

			[Token(Token = "0x60030F5")]
			[Address(RVA = "0x11B9654", Offset = "0x11B9654", VA = "0x11B9654")]
			public void Start(float length)
			{
			}

			[Token(Token = "0x60030F6")]
			[Address(RVA = "0x11B9694", Offset = "0x11B9694", VA = "0x11B9694")]
			public void Stop()
			{
			}
		}

		[Token(Token = "0x2000659")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x919A8C", Offset = "0x919A8C")]
		private sealed class <OnEnableAsync>d__64 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002BF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002BF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002BFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Window <>4__this;

			[Token(Token = "0x1700068B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60030FA")]
				[Address(RVA = "0x11B9574", Offset = "0x11B9574", VA = "0x11B9574", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700068C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60030FC")]
				[Address(RVA = "0x11B95BC", Offset = "0x11B95BC", VA = "0x11B95BC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60030F7")]
			[Address(RVA = "0x11B9394", Offset = "0x11B9394", VA = "0x11B9394")]
			[DebuggerHidden]
			public <OnEnableAsync>d__64(int <>1__state)
			{
			}

			[Token(Token = "0x60030F8")]
			[Address(RVA = "0x11B93C0", Offset = "0x11B93C0", VA = "0x11B93C0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60030F9")]
			[Address(RVA = "0x11B93C4", Offset = "0x11B93C4", VA = "0x11B93C4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60030FB")]
			[Address(RVA = "0x11B957C", Offset = "0x11B957C", VA = "0x11B957C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Image backgroundImage;

		[Token(Token = "0x4002BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject content;

		[Token(Token = "0x4002BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _initialized;

		[Token(Token = "0x4002BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int _id;

		[Token(Token = "0x4002BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RectTransform _rectTransform;

		[Token(Token = "0x4002BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Text _titleText;

		[Token(Token = "0x4002BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Text> _contentText;

		[Token(Token = "0x4002BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GameObject _defaultUIElement;

		[Token(Token = "0x4002BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Action<int> _updateCallback;

		[Token(Token = "0x4002BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Func<int, bool> _isFocusedCallback;

		[Token(Token = "0x4002BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Timer _timer;

		[Token(Token = "0x4002BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private CanvasGroup _canvasGroup;

		[Token(Token = "0x4002BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public UnityAction cancelCallback;

		[Token(Token = "0x4002BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private GameObject lastUISelection;

		[Token(Token = "0x1700067D")]
		public bool hasFocus
		{
			[Token(Token = "0x60030C5")]
			[Address(RVA = "0xE23AD0", Offset = "0xE23AD0", VA = "0xE23AD0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700067E")]
		public int id
		{
			[Token(Token = "0x60030C6")]
			[Address(RVA = "0xE23B30", Offset = "0xE23B30", VA = "0xE23B30")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700067F")]
		public RectTransform rectTransform
		{
			[Token(Token = "0x60030C7")]
			[Address(RVA = "0xE23B38", Offset = "0xE23B38", VA = "0xE23B38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000680")]
		public Text titleText
		{
			[Token(Token = "0x60030C8")]
			[Address(RVA = "0xE23BE8", Offset = "0xE23BE8", VA = "0xE23BE8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000681")]
		public List<Text> contentText
		{
			[Token(Token = "0x60030C9")]
			[Address(RVA = "0xE23BF0", Offset = "0xE23BF0", VA = "0xE23BF0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000682")]
		public GameObject defaultUIElement
		{
			[Token(Token = "0x60030CA")]
			[Address(RVA = "0xE23BF8", Offset = "0xE23BF8", VA = "0xE23BF8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60030CB")]
			[Address(RVA = "0xE23C00", Offset = "0xE23C00", VA = "0xE23C00")]
			set
			{
			}
		}

		[Token(Token = "0x17000683")]
		public Action<int> updateCallback
		{
			[Token(Token = "0x60030CC")]
			[Address(RVA = "0xE23C08", Offset = "0xE23C08", VA = "0xE23C08")]
			get
			{
				return null;
			}
			[Token(Token = "0x60030CD")]
			[Address(RVA = "0xE23C10", Offset = "0xE23C10", VA = "0xE23C10")]
			set
			{
			}
		}

		[Token(Token = "0x17000684")]
		public Timer timer
		{
			[Token(Token = "0x60030CE")]
			[Address(RVA = "0xE23C18", Offset = "0xE23C18", VA = "0xE23C18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000685")]
		public int width
		{
			[Token(Token = "0x60030CF")]
			[Address(RVA = "0xE23C20", Offset = "0xE23C20", VA = "0xE23C20")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60030D0")]
			[Address(RVA = "0xE23C60", Offset = "0xE23C60", VA = "0xE23C60")]
			set
			{
			}
		}

		[Token(Token = "0x17000686")]
		public int height
		{
			[Token(Token = "0x60030D1")]
			[Address(RVA = "0xE23CB8", Offset = "0xE23CB8", VA = "0xE23CB8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60030D2")]
			[Address(RVA = "0xE23CF8", Offset = "0xE23CF8", VA = "0xE23CF8")]
			set
			{
			}
		}

		[Token(Token = "0x17000687")]
		protected bool initialized
		{
			[Token(Token = "0x60030D3")]
			[Address(RVA = "0xE23D50", Offset = "0xE23D50", VA = "0xE23D50")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60030D4")]
		[Address(RVA = "0xE23D58", Offset = "0xE23D58", VA = "0xE23D58")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60030D5")]
		[Address(RVA = "0xE23DA8", Offset = "0xE23DA8", VA = "0xE23DA8", Slot = "4")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60030D6")]
		[Address(RVA = "0xE23F74", Offset = "0xE23F74", VA = "0xE23F74", Slot = "5")]
		public virtual void Initialize(int id, Func<int, bool> isFocusedCallback)
		{
		}

		[Token(Token = "0x60030D7")]
		[Address(RVA = "0xE240B4", Offset = "0xE240B4", VA = "0xE240B4")]
		public void SetSize(int width, int height)
		{
		}

		[Token(Token = "0x60030D8")]
		[Address(RVA = "0xE240EC", Offset = "0xE240EC", VA = "0xE240EC")]
		public void CreateTitleText(GameObject prefab, Vector2 offset)
		{
		}

		[Token(Token = "0x60030D9")]
		[Address(RVA = "0xE24440", Offset = "0xE24440", VA = "0xE24440")]
		public void CreateTitleText(GameObject prefab, Vector2 offset, string text)
		{
		}

		[Token(Token = "0x60030DA")]
		[Address(RVA = "0xE24518", Offset = "0xE24518", VA = "0xE24518")]
		public void AddContentText(GameObject prefab, UIPivot pivot, UIAnchor anchor, Vector2 offset)
		{
		}

		[Token(Token = "0x60030DB")]
		[Address(RVA = "0xE2460C", Offset = "0xE2460C", VA = "0xE2460C")]
		public void AddContentText(GameObject prefab, UIPivot pivot, UIAnchor anchor, Vector2 offset, string text)
		{
		}

		[Token(Token = "0x60030DC")]
		[Address(RVA = "0xE247F8", Offset = "0xE247F8", VA = "0xE247F8")]
		public void AddContentImage(GameObject prefab, UIPivot pivot, UIAnchor anchor, Vector2 offset)
		{
		}

		[Token(Token = "0x60030DD")]
		[Address(RVA = "0xE24A28", Offset = "0xE24A28", VA = "0xE24A28")]
		public void AddContentImage(GameObject prefab, UIPivot pivot, UIAnchor anchor, Vector2 offset, string text)
		{
		}

		[Token(Token = "0x60030DE")]
		[Address(RVA = "0xE24A2C", Offset = "0xE24A2C", VA = "0xE24A2C")]
		public void CreateButton(GameObject prefab, UIPivot pivot, UIAnchor anchor, Vector2 offset, string buttonText, UnityAction confirmCallback, UnityAction cancelCallback, bool setDefault)
		{
		}

		[Token(Token = "0x60030DF")]
		[Address(RVA = "0xE24F84", Offset = "0xE24F84", VA = "0xE24F84")]
		public string GetTitleText(string text)
		{
			return null;
		}

		[Token(Token = "0x60030E0")]
		[Address(RVA = "0xE2446C", Offset = "0xE2446C", VA = "0xE2446C")]
		public void SetTitleText(string text)
		{
		}

		[Token(Token = "0x60030E1")]
		[Address(RVA = "0xE2503C", Offset = "0xE2503C", VA = "0xE2503C")]
		public string GetContentText(int index)
		{
			return null;
		}

		[Token(Token = "0x60030E2")]
		[Address(RVA = "0xE2516C", Offset = "0xE2516C", VA = "0xE2516C")]
		public float GetContentTextHeight(int index)
		{
			return default(float);
		}

		[Token(Token = "0x60030E3")]
		[Address(RVA = "0xE246E0", Offset = "0xE246E0", VA = "0xE246E0")]
		public void SetContentText(string text, int index)
		{
		}

		[Token(Token = "0x60030E4")]
		[Address(RVA = "0xE25288", Offset = "0xE25288", VA = "0xE25288")]
		public void SetUpdateCallback(Action<int> callback)
		{
		}

		[Token(Token = "0x60030E5")]
		[Address(RVA = "0xE25290", Offset = "0xE25290", VA = "0xE25290", Slot = "6")]
		public virtual void TakeInputFocus()
		{
		}

		[Token(Token = "0x60030E6")]
		[Address(RVA = "0xE25394", Offset = "0xE25394", VA = "0xE25394", Slot = "7")]
		public virtual void Enable()
		{
		}

		[Token(Token = "0x60030E7")]
		[Address(RVA = "0xE253B4", Offset = "0xE253B4", VA = "0xE253B4", Slot = "8")]
		public virtual void Disable()
		{
		}

		[Token(Token = "0x60030E8")]
		[Address(RVA = "0xE253D4", Offset = "0xE253D4", VA = "0xE253D4", Slot = "9")]
		public virtual void Cancel()
		{
		}

		[Token(Token = "0x60030E9")]
		[Address(RVA = "0xE241B0", Offset = "0xE241B0", VA = "0xE241B0")]
		private void CreateText(GameObject prefab, ref Text textComponent, string name, UIPivot pivot, UIAnchor anchor, Vector2 offset)
		{
		}

		[Token(Token = "0x60030EA")]
		[Address(RVA = "0xE248B4", Offset = "0xE248B4", VA = "0xE248B4")]
		private void CreateImage(GameObject prefab, string name, UIPivot pivot, UIAnchor anchor, Vector2 offset)
		{
		}

		[Token(Token = "0x60030EB")]
		[Address(RVA = "0xE24CCC", Offset = "0xE24CCC", VA = "0xE24CCC")]
		private GameObject CreateButton(GameObject prefab, string name, UIAnchor anchor, UIPivot pivot, Vector2 offset, out ButtonInfo buttonInfo)
		{
			return null;
		}

		[Token(Token = "0x60030EC")]
		[Address(RVA = "0xE253F0", Offset = "0xE253F0", VA = "0xE253F0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x930808", Offset = "0x930808")]
		private IEnumerator OnEnableAsync()
		{
			return null;
		}

		[Token(Token = "0x60030ED")]
		[Address(RVA = "0xE23E24", Offset = "0xE23E24", VA = "0xE23E24")]
		private void CheckUISelection()
		{
		}

		[Token(Token = "0x60030EE")]
		[Address(RVA = "0xE2545C", Offset = "0xE2545C", VA = "0xE2545C")]
		private void RestoreDefaultOrLastUISelection()
		{
		}

		[Token(Token = "0x60030EF")]
		[Address(RVA = "0xE2550C", Offset = "0xE2550C", VA = "0xE2550C")]
		private void SetUISelection(GameObject selection)
		{
		}

		[Token(Token = "0x60030F0")]
		[Address(RVA = "0xE25600", Offset = "0xE25600", VA = "0xE25600")]
		public Window()
		{
		}
	}
}
namespace Rewired.Demos
{
	[Token(Token = "0x200065A")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x919A9C", Offset = "0x919A9C")]
	public class ControlMapperDemoMessage : MonoBehaviour
	{
		[Token(Token = "0x200065B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x919AD4", Offset = "0x919AD4")]
		private sealed class <SelectDefaultDeferred>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002BFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002BFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002BFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ControlMapperDemoMessage <>4__this;

			[Token(Token = "0x1700068D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003107")]
				[Address(RVA = "0xBE4D88", Offset = "0xBE4D88", VA = "0xBE4D88", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700068E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003109")]
				[Address(RVA = "0xBE4DD0", Offset = "0xBE4DD0", VA = "0xBE4DD0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003104")]
			[Address(RVA = "0xBE4D00", Offset = "0xBE4D00", VA = "0xBE4D00")]
			[DebuggerHidden]
			public <SelectDefaultDeferred>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6003105")]
			[Address(RVA = "0xBE4D2C", Offset = "0xBE4D2C", VA = "0xBE4D2C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003106")]
			[Address(RVA = "0xBE4D30", Offset = "0xBE4D30", VA = "0xBE4D30", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003108")]
			[Address(RVA = "0xBE4D90", Offset = "0xBE4D90", VA = "0xBE4D90", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ControlMapper controlMapper;

		[Token(Token = "0x4002BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Selectable defaultSelectable;

		[Token(Token = "0x60030FD")]
		[Address(RVA = "0x1017738", Offset = "0x1017738", VA = "0x1017738")]
		private void Awake()
		{
		}

		[Token(Token = "0x60030FE")]
		[Address(RVA = "0x1017868", Offset = "0x1017868", VA = "0x1017868")]
		private void Start()
		{
		}

		[Token(Token = "0x60030FF")]
		[Address(RVA = "0x10179AC", Offset = "0x10179AC", VA = "0x10179AC")]
		private void OnControlMapperClosed()
		{
		}

		[Token(Token = "0x6003100")]
		[Address(RVA = "0x1017A64", Offset = "0x1017A64", VA = "0x1017A64")]
		private void OnControlMapperOpened()
		{
		}

		[Token(Token = "0x6003101")]
		[Address(RVA = "0x101786C", Offset = "0x101786C", VA = "0x101786C")]
		private void SelectDefault()
		{
		}

		[Token(Token = "0x6003102")]
		[Address(RVA = "0x10179F8", Offset = "0x10179F8", VA = "0x10179F8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9308B8", Offset = "0x9308B8")]
		private IEnumerator SelectDefaultDeferred()
		{
			return null;
		}

		[Token(Token = "0x6003103")]
		[Address(RVA = "0x1017A8C", Offset = "0x1017A8C", VA = "0x1017A8C")]
		public ControlMapperDemoMessage()
		{
		}
	}
}
namespace Oculus.Voice.Demo.UIShapesDemo
{
	[Token(Token = "0x200065C")]
	public class InteractionHandler : MonoBehaviour
	{
		[Token(Token = "0x4002C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x92158C", Offset = "0x92158C")]
		[Multiline]
		[SerializeField]
		private string freshStateText;

		[Token(Token = "0x4002C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9215E8", Offset = "0x9215E8")]
		private Text textArea;

		[Token(Token = "0x4002C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool showJson;

		[Token(Token = "0x4002C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x921644", Offset = "0x921644")]
		[SerializeField]
		private AppVoiceExperience appVoiceExperience;

		[Token(Token = "0x4002C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string pendingText;

		[Token(Token = "0x600310A")]
		[Address(RVA = "0x13AC628", Offset = "0x13AC628", VA = "0x13AC628")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600310B")]
		[Address(RVA = "0x13AC6F4", Offset = "0x13AC6F4", VA = "0x13AC6F4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600310C")]
		[Address(RVA = "0x13AC7C0", Offset = "0x13AC7C0", VA = "0x13AC7C0")]
		private void OnRequestStarted(WitRequest r)
		{
		}

		[Token(Token = "0x600310D")]
		[Address(RVA = "0x13AC868", Offset = "0x13AC868", VA = "0x13AC868")]
		private void Update()
		{
		}

		[Token(Token = "0x600310E")]
		[Address(RVA = "0x13AC8AC", Offset = "0x13AC8AC", VA = "0x13AC8AC")]
		public void OnResponse(WitResponseNode response)
		{
		}

		[Token(Token = "0x600310F")]
		[Address(RVA = "0x13AC99C", Offset = "0x13AC99C", VA = "0x13AC99C")]
		public void OnError(string error, string message)
		{
		}

		[Token(Token = "0x6003110")]
		[Address(RVA = "0x13ACB5C", Offset = "0x13ACB5C", VA = "0x13ACB5C")]
		public void ToggleActivation()
		{
		}

		[Token(Token = "0x6003111")]
		[Address(RVA = "0x13ACBBC", Offset = "0x13ACBBC", VA = "0x13ACBBC")]
		public InteractionHandler()
		{
		}

		[Token(Token = "0x6003112")]
		[Address(RVA = "0x13ACC10", Offset = "0x13ACC10", VA = "0x13ACC10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x930968", Offset = "0x930968")]
		private void <OnRequestStarted>b__7_0(string response)
		{
		}
	}
	[Token(Token = "0x200065D")]
	public class ColorChanger : MonoBehaviour
	{
		[Token(Token = "0x6003113")]
		[Address(RVA = "0x1040F18", Offset = "0x1040F18", VA = "0x1040F18")]
		private void SetColor(Transform trans, Color color)
		{
		}

		[Token(Token = "0x6003114")]
		[Address(RVA = "0x1040FB4", Offset = "0x1040FB4", VA = "0x1040FB4")]
		public void UpdateColor(WitResponseNode commandResult)
		{
		}

		[Token(Token = "0x6003115")]
		[Address(RVA = "0x10411D8", Offset = "0x10411D8", VA = "0x10411D8")]
		public void UpdateColor(string[] results)
		{
		}

		[Token(Token = "0x6003116")]
		[Address(RVA = "0x1041048", Offset = "0x1041048", VA = "0x1041048")]
		public void UpdateColor(string colorName, string shape)
		{
		}

		[Token(Token = "0x6003117")]
		[Address(RVA = "0x1041214", Offset = "0x1041214", VA = "0x1041214")]
		public ColorChanger()
		{
		}
	}
	[Token(Token = "0x200065E")]
	[ExecuteAlways]
	public class Instructions : MonoBehaviour
	{
		[Token(Token = "0x200065F")]
		internal enum Step
		{
			[Token(Token = "0x4002C09")]
			SetupWit,
			[Token(Token = "0x4002C0A")]
			MissingServerToken,
			[Token(Token = "0x4002C0B")]
			MissingClientToken,
			[Token(Token = "0x4002C0C")]
			AddConfig,
			[Token(Token = "0x4002C0D")]
			AddVoiceExperiences,
			[Token(Token = "0x4002C0E")]
			SetConfig,
			[Token(Token = "0x4002C0F")]
			Ready
		}

		[Token(Token = "0x4002C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string[] steps;

		[Token(Token = "0x4002C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text instructionText;

		[Token(Token = "0x4002C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Step currentStep;

		[Token(Token = "0x1700068F")]
		internal Step CurrentStep
		{
			[Token(Token = "0x6003118")]
			[Address(RVA = "0x13AC0DC", Offset = "0x13AC0DC", VA = "0x13AC0DC")]
			get
			{
				return default(Step);
			}
		}

		[Token(Token = "0x17000690")]
		internal string CurrentStepText
		{
			[Token(Token = "0x6003119")]
			[Address(RVA = "0x13AC0E4", Offset = "0x13AC0E4", VA = "0x13AC0E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600311A")]
		[Address(RVA = "0x13AC178", Offset = "0x13AC178", VA = "0x13AC178")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x600311B")]
		[Address(RVA = "0x13AC180", Offset = "0x13AC180", VA = "0x13AC180")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600311C")]
		[Address(RVA = "0x13AC184", Offset = "0x13AC184", VA = "0x13AC184")]
		private void Update()
		{
		}

		[Token(Token = "0x600311D")]
		[Address(RVA = "0x13AC17C", Offset = "0x13AC17C", VA = "0x13AC17C")]
		private void UpdateStep()
		{
		}

		[Token(Token = "0x600311E")]
		[Address(RVA = "0x13AC188", Offset = "0x13AC188", VA = "0x13AC188")]
		public Instructions()
		{
		}
	}
}
namespace Oculus.Voice.Demo.BuiltInDemo
{
	[Token(Token = "0x2000660")]
	public class TimerController : MonoBehaviour
	{
		[Token(Token = "0x4002C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float _time;

		[Token(Token = "0x4002C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool _timerExist;

		[Token(Token = "0x4002C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		private bool _timerRunning;

		[Token(Token = "0x4002C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9216A0", Offset = "0x9216A0")]
		public Text logText;

		[Token(Token = "0x4002C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9216D8", Offset = "0x9216D8")]
		public AudioClip buzzSound;

		[Token(Token = "0x6003120")]
		[Address(RVA = "0xF0FF00", Offset = "0xF0FF00", VA = "0xF0FF00")]
		private void Update()
		{
		}

		[Token(Token = "0x6003121")]
		[Address(RVA = "0xF0FFD0", Offset = "0xF0FFD0", VA = "0xF0FFD0")]
		private void Log(string msg)
		{
		}

		[Token(Token = "0x6003122")]
		[Address(RVA = "0xF0FF64", Offset = "0xF0FF64", VA = "0xF0FF64")]
		private void OnElapsedTime()
		{
		}

		[Token(Token = "0x6003123")]
		[Address(RVA = "0xF10060", Offset = "0xF10060", VA = "0xF10060")]
		public void DeleteTimer()
		{
		}

		[Token(Token = "0x6003124")]
		[Address(RVA = "0xF100D4", Offset = "0xF100D4", VA = "0xF100D4")]
		public void CreateTimer(string[] entityValues)
		{
		}

		[Token(Token = "0x6003125")]
		[Address(RVA = "0xF10460", Offset = "0xF10460", VA = "0xF10460")]
		public void GetTimerIntent()
		{
		}

		[Token(Token = "0x6003126")]
		[Address(RVA = "0xF10510", Offset = "0xF10510", VA = "0xF10510")]
		public void PauseTimer()
		{
		}

		[Token(Token = "0x6003127")]
		[Address(RVA = "0xF10560", Offset = "0xF10560", VA = "0xF10560")]
		public void ResumeTimer()
		{
		}

		[Token(Token = "0x6003128")]
		[Address(RVA = "0xF105B4", Offset = "0xF105B4", VA = "0xF105B4")]
		public void SubtractTimeTimer(string[] entityValues)
		{
		}

		[Token(Token = "0x6003129")]
		[Address(RVA = "0xF106CC", Offset = "0xF106CC", VA = "0xF106CC")]
		public void AddTimeToTimer(string[] entityValues)
		{
		}

		[Token(Token = "0x600312A")]
		[Address(RVA = "0xF107D8", Offset = "0xF107D8", VA = "0xF107D8")]
		public float GetRemainingTime()
		{
			return default(float);
		}

		[Token(Token = "0x600312B")]
		[Address(RVA = "0xF10488", Offset = "0xF10488", VA = "0xF10488")]
		public string GetFormattedTimeFromSeconds()
		{
			return null;
		}

		[Token(Token = "0x600312C")]
		[Address(RVA = "0xF102EC", Offset = "0xF102EC", VA = "0xF102EC")]
		private bool ParseTime(string[] entityValues, out float time)
		{
			return default(bool);
		}

		[Token(Token = "0x600312D")]
		[Address(RVA = "0xF107E0", Offset = "0xF107E0", VA = "0xF107E0")]
		public TimerController()
		{
		}
	}
	[Token(Token = "0x2000661")]
	public class TimerDisplay : MonoBehaviour
	{
		[Token(Token = "0x4002C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TimerController timer;

		[Token(Token = "0x4002C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Text _uiText;

		[Token(Token = "0x600312E")]
		[Address(RVA = "0xF107E8", Offset = "0xF107E8", VA = "0xF107E8")]
		private void Start()
		{
		}

		[Token(Token = "0x600312F")]
		[Address(RVA = "0xF1083C", Offset = "0xF1083C", VA = "0xF1083C")]
		private void Update()
		{
		}

		[Token(Token = "0x6003130")]
		[Address(RVA = "0xF10884", Offset = "0xF10884", VA = "0xF10884")]
		public TimerDisplay()
		{
		}
	}
	[Token(Token = "0x2000662")]
	public class WitActivation : MonoBehaviour
	{
		[Token(Token = "0x4002C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AppVoiceExperience voiceExperience;

		[Token(Token = "0x6003131")]
		[Address(RVA = "0x12603B0", Offset = "0x12603B0", VA = "0x12603B0")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6003132")]
		[Address(RVA = "0x1260444", Offset = "0x1260444", VA = "0x1260444")]
		private void Start()
		{
		}

		[Token(Token = "0x6003133")]
		[Address(RVA = "0x1260498", Offset = "0x1260498", VA = "0x1260498")]
		private void Update()
		{
		}

		[Token(Token = "0x6003134")]
		[Address(RVA = "0x126051C", Offset = "0x126051C", VA = "0x126051C")]
		public void ActivateWit()
		{
		}

		[Token(Token = "0x6003135")]
		[Address(RVA = "0x1260540", Offset = "0x1260540", VA = "0x1260540")]
		public WitActivation()
		{
		}
	}
}
namespace Oculus.Avatar
{
	[Token(Token = "0x2000663")]
	public static class AvatarLogger
	{
		[Token(Token = "0x4002C18")]
		public const string LogAvatar = "[Avatars] - ";

		[Token(Token = "0x4002C19")]
		public const string Tab = "    ";

		[Token(Token = "0x6003136")]
		[Address(RVA = "0xC19F70", Offset = "0xC19F70", VA = "0xC19F70")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x930978", Offset = "0x930978")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x930978", Offset = "0x930978")]
		public static void Log(string logMsg)
		{
		}

		[Token(Token = "0x6003137")]
		[Address(RVA = "0xC1A000", Offset = "0xC1A000", VA = "0xC1A000")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9309D8", Offset = "0x9309D8")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9309D8", Offset = "0x9309D8")]
		public static void Log(string logMsg, UnityEngine.Object context)
		{
		}

		[Token(Token = "0x6003138")]
		[Address(RVA = "0xC1A0A0", Offset = "0xC1A0A0", VA = "0xC1A0A0")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x930A38", Offset = "0x930A38")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x930A38", Offset = "0x930A38")]
		public static void LogWarning(string logMsg)
		{
		}

		[Token(Token = "0x6003139")]
		[Address(RVA = "0xC1A130", Offset = "0xC1A130", VA = "0xC1A130")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x930A98", Offset = "0x930A98")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x930A98", Offset = "0x930A98")]
		public static void LogError(string logMsg)
		{
		}

		[Token(Token = "0x600313A")]
		[Address(RVA = "0xC1A1C0", Offset = "0xC1A1C0", VA = "0xC1A1C0")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x930AF8", Offset = "0x930AF8")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x930AF8", Offset = "0x930AF8")]
		public static void LogError(string logMsg, UnityEngine.Object context)
		{
		}
	}
	[Token(Token = "0x2000664")]
	public class CAPI
	{
		[Token(Token = "0x2000665")]
		public delegate void LoggingDelegate(IntPtr str);

		[Token(Token = "0x2000666")]
		public enum Result
		{
			[Token(Token = "0x4002C25")]
			Success = 0,
			[Token(Token = "0x4002C26")]
			Failure = -1000,
			[Token(Token = "0x4002C27")]
			Failure_InvalidParameter = -1001,
			[Token(Token = "0x4002C28")]
			Failure_NotInitialized = -1002,
			[Token(Token = "0x4002C29")]
			Failure_InvalidOperation = -1003,
			[Token(Token = "0x4002C2A")]
			Failure_Unsupported = -1004,
			[Token(Token = "0x4002C2B")]
			Failure_NotYetImplemented = -1005,
			[Token(Token = "0x4002C2C")]
			Failure_OperationFailed = -1006,
			[Token(Token = "0x4002C2D")]
			Failure_InsufficientSize = -1007
		}

		[Token(Token = "0x2000667")]
		private static class OVRP_1_30_0
		{
			[Token(Token = "0x4002C2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly Version version;

			[PreserveSig]
			[Token(Token = "0x60031CF")]
			[Address(RVA = "0xBDC47C", Offset = "0xBDC47C", VA = "0xBDC47C")]
			public static extern Result ovrp_SendEvent2(string name, string param, string source);
		}

		[Token(Token = "0x4002C1A")]
		private const string LibFile = "ovravatarloader";

		[Token(Token = "0x4002C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IntPtr nativeVisemeData;

		[Token(Token = "0x4002C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IntPtr nativeGazeTargetsData;

		[Token(Token = "0x4002C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IntPtr nativeAvatarLightsData;

		[Token(Token = "0x4002C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IntPtr DebugLineCountData;

		[Token(Token = "0x4002C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static float[] scratchBufferFloat;

		[Token(Token = "0x4002C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject debugLineGo;

		[Token(Token = "0x4002C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static string SDKRuntimePrefix;

		[Token(Token = "0x4002C22")]
		private const string ovrPluginDLL = "OVRPlugin";

		[Token(Token = "0x4002C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static Version ovrPluginVersion;

		[PreserveSig]
		[Token(Token = "0x600313B")]
		[Address(RVA = "0xC27284", Offset = "0xC27284", VA = "0xC27284")]
		public static extern void ovrAvatar_InitializeAndroidUnity(string appID);

		[Token(Token = "0x600313C")]
		[Address(RVA = "0xC27314", Offset = "0xC27314", VA = "0xC27314")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x600313D")]
		[Address(RVA = "0xC2752C", Offset = "0xC2752C", VA = "0xC2752C")]
		public static void Shutdown()
		{
		}

		[PreserveSig]
		[Token(Token = "0x600313E")]
		[Address(RVA = "0xC27614", Offset = "0xC27614", VA = "0xC27614")]
		public static extern void ovrAvatar_Shutdown();

		[PreserveSig]
		[Token(Token = "0x600313F")]
		[Address(RVA = "0xC27684", Offset = "0xC27684", VA = "0xC27684")]
		public static extern IntPtr ovrAvatarMessage_Pop();

		[PreserveSig]
		[Token(Token = "0x6003140")]
		[Address(RVA = "0xC276F8", Offset = "0xC276F8", VA = "0xC276F8")]
		public static extern ovrAvatarMessageType ovrAvatarMessage_GetType(IntPtr msg);

		[Token(Token = "0x6003141")]
		[Address(RVA = "0xC27778", Offset = "0xC27778", VA = "0xC27778")]
		public static ovrAvatarMessage_AvatarSpecification ovrAvatarMessage_GetAvatarSpecification(IntPtr msg)
		{
			return default(ovrAvatarMessage_AvatarSpecification);
		}

		[PreserveSig]
		[Token(Token = "0x6003142")]
		[Address(RVA = "0xC278BC", Offset = "0xC278BC", VA = "0xC278BC")]
		private static extern IntPtr ovrAvatarMessage_GetAvatarSpecification_Native(IntPtr msg);

		[Token(Token = "0x6003143")]
		[Address(RVA = "0xC2793C", Offset = "0xC2793C", VA = "0xC2793C")]
		public static ovrAvatarMessage_AssetLoaded ovrAvatarMessage_GetAssetLoaded(IntPtr msg)
		{
			return default(ovrAvatarMessage_AssetLoaded);
		}

		[PreserveSig]
		[Token(Token = "0x6003144")]
		[Address(RVA = "0xC27A80", Offset = "0xC27A80", VA = "0xC27A80")]
		private static extern IntPtr ovrAvatarMessage_GetAssetLoaded_Native(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x6003145")]
		[Address(RVA = "0xC27B00", Offset = "0xC27B00", VA = "0xC27B00")]
		public static extern void ovrAvatarMessage_Free(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x6003146")]
		[Address(RVA = "0xC27B80", Offset = "0xC27B80", VA = "0xC27B80")]
		public static extern IntPtr ovrAvatarSpecificationRequest_Create(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6003147")]
		[Address(RVA = "0xC27C00", Offset = "0xC27C00", VA = "0xC27C00")]
		public static extern void ovrAvatarSpecificationRequest_Destroy(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x6003148")]
		[Address(RVA = "0xC27C80", Offset = "0xC27C80", VA = "0xC27C80")]
		public static extern void ovrAvatarSpecificationRequest_SetCombineMeshes(IntPtr specificationRequest, bool useCombinedMesh);

		[PreserveSig]
		[Token(Token = "0x6003149")]
		[Address(RVA = "0xC27D10", Offset = "0xC27D10", VA = "0xC27D10")]
		public static extern void ovrAvatarSpecificationRequest_SetLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x600314A")]
		[Address(RVA = "0xC27DA0", Offset = "0xC27DA0", VA = "0xC27DA0")]
		public static extern void ovrAvatarSpecificationRequest_SetLevelOfDetail(IntPtr specificationRequest, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x600314B")]
		[Address(RVA = "0xC27E30", Offset = "0xC27E30", VA = "0xC27E30")]
		public static extern void ovrAvatar_RequestAvatarSpecification(ulong userID);

		[PreserveSig]
		[Token(Token = "0x600314C")]
		[Address(RVA = "0xC27EB0", Offset = "0xC27EB0", VA = "0xC27EB0")]
		public static extern void ovrAvatar_RequestAvatarSpecificationFromSpecRequest(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x600314D")]
		[Address(RVA = "0xC27F30", Offset = "0xC27F30", VA = "0xC27F30")]
		public static extern void ovrAvatarSpecificationRequest_SetFallbackLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x600314E")]
		[Address(RVA = "0xC27FC0", Offset = "0xC27FC0", VA = "0xC27FC0")]
		public static extern void ovrAvatarSpecificationRequest_SetExpressiveFlag(IntPtr specificationRequest, bool enable);

		[PreserveSig]
		[Token(Token = "0x600314F")]
		[Address(RVA = "0xC28050", Offset = "0xC28050", VA = "0xC28050")]
		public static extern IntPtr ovrAvatar_Create(IntPtr avatarSpecification, ovrAvatarCapabilities capabilities);

		[PreserveSig]
		[Token(Token = "0x6003150")]
		[Address(RVA = "0xC280E0", Offset = "0xC280E0", VA = "0xC280E0")]
		public static extern void ovrAvatar_Destroy(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6003151")]
		[Address(RVA = "0xC28160", Offset = "0xC28160", VA = "0xC28160")]
		public static extern void ovrAvatarPose_UpdateBody(IntPtr avatar, ovrAvatarTransform headPose);

		[Token(Token = "0x6003152")]
		[Address(RVA = "0xC28200", Offset = "0xC28200", VA = "0xC28200")]
		public static void ovrAvatarPose_UpdateVoiceVisualization(IntPtr avatar, float[] pcmData)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6003153")]
		[Address(RVA = "0xC2827C", Offset = "0xC2827C", VA = "0xC2827C")]
		private static extern void ovrAvatarPose_UpdateVoiceVisualization_Native(IntPtr avatar, uint pcmDataSize, [In] float[] pcmData);

		[PreserveSig]
		[Token(Token = "0x6003154")]
		[Address(RVA = "0xC2831C", Offset = "0xC2831C", VA = "0xC2831C")]
		public static extern void ovrAvatarPose_UpdateHands(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight);

		[PreserveSig]
		[Token(Token = "0x6003155")]
		[Address(RVA = "0xC283DC", Offset = "0xC283DC", VA = "0xC283DC")]
		public static extern void ovrAvatarPose_UpdateHandsWithType(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight, ovrAvatarControllerType type);

		[PreserveSig]
		[Token(Token = "0x6003156")]
		[Address(RVA = "0xC284AC", Offset = "0xC284AC", VA = "0xC284AC")]
		public static extern void ovrAvatarPose_Finalize(IntPtr avatar, float elapsedSeconds);

		[PreserveSig]
		[Token(Token = "0x6003157")]
		[Address(RVA = "0xC2853C", Offset = "0xC2853C", VA = "0xC2853C")]
		public static extern void ovrAvatar_SetLeftControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6003158")]
		[Address(RVA = "0xC285CC", Offset = "0xC285CC", VA = "0xC285CC")]
		public static extern void ovrAvatar_SetRightControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6003159")]
		[Address(RVA = "0xC2865C", Offset = "0xC2865C", VA = "0xC2865C")]
		public static extern void ovrAvatar_SetLeftHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x600315A")]
		[Address(RVA = "0xC286EC", Offset = "0xC286EC", VA = "0xC286EC")]
		public static extern void ovrAvatar_SetRightHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x600315B")]
		[Address(RVA = "0xC2877C", Offset = "0xC2877C", VA = "0xC2877C")]
		public static extern uint ovrAvatarComponent_Count(IntPtr avatar);

		[Token(Token = "0x600315C")]
		[Address(RVA = "0xC287FC", Offset = "0xC287FC", VA = "0xC287FC")]
		public static void ovrAvatarComponent_Get(IntPtr avatar, uint index, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[Token(Token = "0x600315D")]
		[Address(RVA = "0xC28918", Offset = "0xC28918", VA = "0xC28918")]
		public static void ovrAvatarComponent_Get(IntPtr componentPtr, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600315E")]
		[Address(RVA = "0xC28888", Offset = "0xC28888", VA = "0xC28888")]
		public static extern IntPtr ovrAvatarComponent_Get_Native(IntPtr avatar, uint index);

		[Token(Token = "0x600315F")]
		[Address(RVA = "0xC28B2C", Offset = "0xC28B2C", VA = "0xC28B2C")]
		public static bool ovrAvatarPose_GetBaseComponent(IntPtr avatar, ref ovrAvatarBaseComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6003160")]
		[Address(RVA = "0xC28C9C", Offset = "0xC28C9C", VA = "0xC28C9C")]
		private static extern IntPtr ovrAvatarPose_GetBaseComponent_Native(IntPtr avatar);

		[Token(Token = "0x6003161")]
		public static IntPtr MarshalRenderComponent<T>(IntPtr ptr) where T : struct
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6003162")]
		[Address(RVA = "0xC28D1C", Offset = "0xC28D1C", VA = "0xC28D1C")]
		public static bool ovrAvatarPose_GetBodyComponent(IntPtr avatar, ref ovrAvatarBodyComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6003163")]
		[Address(RVA = "0xC28FC4", Offset = "0xC28FC4", VA = "0xC28FC4")]
		private static extern IntPtr ovrAvatarPose_GetBodyComponent_Native(IntPtr avatar);

		[Token(Token = "0x6003164")]
		[Address(RVA = "0xC29044", Offset = "0xC29044", VA = "0xC29044")]
		public static bool ovrAvatarPose_GetLeftControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6003165")]
		[Address(RVA = "0xC291B4", Offset = "0xC291B4", VA = "0xC291B4")]
		private static extern IntPtr ovrAvatarPose_GetLeftControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x6003166")]
		[Address(RVA = "0xC29234", Offset = "0xC29234", VA = "0xC29234")]
		public static bool ovrAvatarPose_GetRightControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6003167")]
		[Address(RVA = "0xC293A4", Offset = "0xC293A4", VA = "0xC293A4")]
		private static extern IntPtr ovrAvatarPose_GetRightControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x6003168")]
		[Address(RVA = "0xC29424", Offset = "0xC29424", VA = "0xC29424")]
		public static bool ovrAvatarPose_GetLeftHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6003169")]
		[Address(RVA = "0xC29594", Offset = "0xC29594", VA = "0xC29594")]
		private static extern IntPtr ovrAvatarPose_GetLeftHandComponent_Native(IntPtr avatar);

		[Token(Token = "0x600316A")]
		[Address(RVA = "0xC29614", Offset = "0xC29614", VA = "0xC29614")]
		public static bool ovrAvatarPose_GetRightHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x600316B")]
		[Address(RVA = "0xC29784", Offset = "0xC29784", VA = "0xC29784")]
		private static extern IntPtr ovrAvatarPose_GetRightHandComponent_Native(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x600316C")]
		[Address(RVA = "0xC29804", Offset = "0xC29804", VA = "0xC29804")]
		public static extern void ovrAvatarAsset_BeginLoading(ulong assetID);

		[PreserveSig]
		[Token(Token = "0x600316D")]
		[Address(RVA = "0xC29884", Offset = "0xC29884", VA = "0xC29884")]
		public static extern bool ovrAvatarAsset_BeginLoadingLOD(ulong assetId, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x600316E")]
		[Address(RVA = "0xC2991C", Offset = "0xC2991C", VA = "0xC2991C")]
		public static extern ovrAvatarAssetType ovrAvatarAsset_GetType(IntPtr assetHandle);

		[Token(Token = "0x600316F")]
		[Address(RVA = "0xC2999C", Offset = "0xC2999C", VA = "0xC2999C")]
		public static ovrAvatarMeshAssetData ovrAvatarAsset_GetMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetData);
		}

		[Token(Token = "0x6003170")]
		[Address(RVA = "0xC29B74", Offset = "0xC29B74", VA = "0xC29B74")]
		public static ovrAvatarMeshAssetDataV2 ovrAvatarAsset_GetCombinedMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetDataV2);
		}

		[PreserveSig]
		[Token(Token = "0x6003171")]
		[Address(RVA = "0xC29CCC", Offset = "0xC29CCC", VA = "0xC29CCC")]
		private static extern IntPtr ovrAvatarAsset_GetCombinedMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6003172")]
		[Address(RVA = "0xC29AF4", Offset = "0xC29AF4", VA = "0xC29AF4")]
		private static extern IntPtr ovrAvatarAsset_GetMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6003173")]
		[Address(RVA = "0xC29D4C", Offset = "0xC29D4C", VA = "0xC29D4C")]
		public static extern uint ovrAvatarAsset_GetMeshBlendShapeCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6003174")]
		[Address(RVA = "0xC29DCC", Offset = "0xC29DCC", VA = "0xC29DCC")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeName(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x6003175")]
		[Address(RVA = "0xC29E5C", Offset = "0xC29E5C", VA = "0xC29E5C")]
		public static extern uint ovrAvatarAsset_GetSubmeshCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6003176")]
		[Address(RVA = "0xC29EDC", Offset = "0xC29EDC", VA = "0xC29EDC")]
		public static extern uint ovrAvatarAsset_GetSubmeshLastIndex(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x6003177")]
		[Address(RVA = "0xC29F6C", Offset = "0xC29F6C", VA = "0xC29F6C")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeVertices(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6003178")]
		[Address(RVA = "0xC29FEC", Offset = "0xC29FEC", VA = "0xC29FEC")]
		public static extern IntPtr ovrAvatarAsset_GetAvatar(IntPtr assetHandle);

		[Token(Token = "0x6003179")]
		[Address(RVA = "0xC2A06C", Offset = "0xC2A06C", VA = "0xC2A06C")]
		public static ulong[] ovrAvatarAsset_GetCombinedMeshIDs(IntPtr assetHandle)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600317A")]
		[Address(RVA = "0xC2A2F8", Offset = "0xC2A2F8", VA = "0xC2A2F8")]
		public static extern IntPtr ovrAvatarAsset_GetCombinedMeshIDs_Native(IntPtr assetHandle, IntPtr count);

		[Token(Token = "0x600317B")]
		[Address(RVA = "0xC2A388", Offset = "0xC2A388", VA = "0xC2A388")]
		public static void ovrAvatar_GetCombinedMeshAlphaData(IntPtr avatar, ref ulong textureID, ref Vector4 offset)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600317C")]
		[Address(RVA = "0xC2A5B8", Offset = "0xC2A5B8", VA = "0xC2A5B8")]
		public static extern IntPtr ovrAvatar_GetCombinedMeshAlphaData_Native(IntPtr avatar, IntPtr textureIDPtr, IntPtr offsetPtr);

		[Token(Token = "0x600317D")]
		[Address(RVA = "0xC2A650", Offset = "0xC2A650", VA = "0xC2A650")]
		public static ovrAvatarTextureAssetData ovrAvatarAsset_GetTextureData(IntPtr assetPtr)
		{
			return default(ovrAvatarTextureAssetData);
		}

		[PreserveSig]
		[Token(Token = "0x600317E")]
		[Address(RVA = "0xC2A7A0", Offset = "0xC2A7A0", VA = "0xC2A7A0")]
		private static extern IntPtr ovrAvatarAsset_GetTextureData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x600317F")]
		[Address(RVA = "0xC2A820", Offset = "0xC2A820", VA = "0xC2A820")]
		private static extern IntPtr ovrAvatarAsset_GetMaterialData_Native(IntPtr assetPtr);

		[Token(Token = "0x6003180")]
		[Address(RVA = "0xC2A8A0", Offset = "0xC2A8A0", VA = "0xC2A8A0")]
		public static ovrAvatarMaterialState ovrAvatarAsset_GetMaterialState(IntPtr assetPtr)
		{
			return default(ovrAvatarMaterialState);
		}

		[PreserveSig]
		[Token(Token = "0x6003181")]
		[Address(RVA = "0xC2A9F4", Offset = "0xC2A9F4", VA = "0xC2A9F4")]
		public static extern ovrAvatarRenderPartType ovrAvatarRenderPart_GetType(IntPtr renderPart);

		[Token(Token = "0x6003182")]
		[Address(RVA = "0xC2AA74", Offset = "0xC2AA74", VA = "0xC2AA74")]
		public static ovrAvatarRenderPart_SkinnedMeshRender ovrAvatarRenderPart_GetSkinnedMeshRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRender);
		}

		[PreserveSig]
		[Token(Token = "0x6003183")]
		[Address(RVA = "0xC2ABC8", Offset = "0xC2ABC8", VA = "0xC2ABC8")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6003184")]
		[Address(RVA = "0xC2AC48", Offset = "0xC2AC48", VA = "0xC2AC48")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6003185")]
		[Address(RVA = "0xC2ACD8", Offset = "0xC2ACD8", VA = "0xC2ACD8")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6003186")]
		[Address(RVA = "0xC2AD68", Offset = "0xC2AD68", VA = "0xC2AD68")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6003187")]
		[Address(RVA = "0xC2ADF8", Offset = "0xC2ADF8", VA = "0xC2ADF8")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRender_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6003188")]
		[Address(RVA = "0xC2AE78", Offset = "0xC2AE78", VA = "0xC2AE78")]
		public static extern bool ovrAvatarSkinnedMeshRender_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6003189")]
		[Address(RVA = "0xC2AF00", Offset = "0xC2AF00", VA = "0xC2AF00")]
		public static extern bool ovrAvatarSkinnedMeshRenderPBSV2_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600318A")]
		[Address(RVA = "0xC2AF88", Offset = "0xC2AF88", VA = "0xC2AF88")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBS_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600318B")]
		[Address(RVA = "0xC2B008", Offset = "0xC2B008", VA = "0xC2B008")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBSV2_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600318C")]
		[Address(RVA = "0xC2B088", Offset = "0xC2B088", VA = "0xC2B088")]
		public static extern ovrAvatarMaterialState ovrAvatarSkinnedMeshRender_GetMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600318D")]
		[Address(RVA = "0xC2B13C", Offset = "0xC2B13C", VA = "0xC2B13C")]
		public static extern ovrAvatarPBSMaterialState ovrAvatarSkinnedMeshRenderPBSV2_GetPBSMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600318E")]
		[Address(RVA = "0xC2B1CC", Offset = "0xC2B1CC", VA = "0xC2B1CC")]
		public static extern ovrAvatarExpressiveParameters ovrAvatar_GetExpressiveParameters(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x600318F")]
		[Address(RVA = "0xC2B25C", Offset = "0xC2B25C", VA = "0xC2B25C")]
		public static extern ulong ovrAvatarSkinnedMeshRender_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6003190")]
		[Address(RVA = "0xC2B2DC", Offset = "0xC2B2DC", VA = "0xC2B2DC")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6003191")]
		[Address(RVA = "0xC2B35C", Offset = "0xC2B35C", VA = "0xC2B35C")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBSV2_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6003192")]
		[Address(RVA = "0xC2B3DC", Offset = "0xC2B3DC", VA = "0xC2B3DC")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6003193")]
		[Address(RVA = "0xC2B474", Offset = "0xC2B474", VA = "0xC2B474")]
		public static extern void ovrAvatar_SetActionUnitOnsetSpeed(IntPtr avatar, float onsetSpeed);

		[PreserveSig]
		[Token(Token = "0x6003194")]
		[Address(RVA = "0xC2B504", Offset = "0xC2B504", VA = "0xC2B504")]
		public static extern void ovrAvatar_SetActionUnitFalloffSpeed(IntPtr avatar, float falloffSpeed);

		[PreserveSig]
		[Token(Token = "0x6003195")]
		[Address(RVA = "0xC2B594", Offset = "0xC2B594", VA = "0xC2B594")]
		public static extern void ovrAvatar_SetVisemeMultiplier(IntPtr avatar, float visemeMultiplier);

		[PreserveSig]
		[Token(Token = "0x6003196")]
		[Address(RVA = "0xC2B624", Offset = "0xC2B624", VA = "0xC2B624")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6003197")]
		[Address(RVA = "0xC2B6BC", Offset = "0xC2B6BC", VA = "0xC2B6BC")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6003198")]
		[Address(RVA = "0xC2B754", Offset = "0xC2B754", VA = "0xC2B754")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetAlbedoTextureAssetID(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6003199")]
		[Address(RVA = "0xC2B7D4", Offset = "0xC2B7D4", VA = "0xC2B7D4")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetSurfaceTextureAssetID(IntPtr renderPart);

		[Token(Token = "0x600319A")]
		[Address(RVA = "0xC2B854", Offset = "0xC2B854", VA = "0xC2B854")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS ovrAvatarRenderPart_GetSkinnedMeshRenderPBS(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS);
		}

		[PreserveSig]
		[Token(Token = "0x600319B")]
		[Address(RVA = "0xC2B9A8", Offset = "0xC2B9A8", VA = "0xC2B9A8")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBS_Native(IntPtr renderPart);

		[Token(Token = "0x600319C")]
		[Address(RVA = "0xC2BA28", Offset = "0xC2BA28", VA = "0xC2BA28")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2);
		}

		[PreserveSig]
		[Token(Token = "0x600319D")]
		[Address(RVA = "0xC2BB7C", Offset = "0xC2BB7C", VA = "0xC2BB7C")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2_Native(IntPtr renderPart);

		[Token(Token = "0x600319E")]
		[Address(RVA = "0xC2BBFC", Offset = "0xC2BBFC", VA = "0xC2BBFC")]
		public static void ovrAvatarSkinnedMeshRender_GetBlendShapeParams(IntPtr renderPart, ref ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600319F")]
		[Address(RVA = "0xC2BD38", Offset = "0xC2BD38", VA = "0xC2BD38")]
		private static extern IntPtr ovrAvatarSkinnedMeshRender_GetBlendShapeParams_Native(IntPtr renderPart);

		[Token(Token = "0x60031A0")]
		[Address(RVA = "0xC2BDB8", Offset = "0xC2BDB8", VA = "0xC2BDB8")]
		public static ovrAvatarRenderPart_ProjectorRender ovrAvatarRenderPart_GetProjectorRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_ProjectorRender);
		}

		[Token(Token = "0x60031A1")]
		[Address(RVA = "0xC2BF8C", Offset = "0xC2BF8C", VA = "0xC2BF8C")]
		public static ovrAvatarPBSMaterialState[] ovrAvatar_GetBodyPBSMaterialStates(IntPtr renderPart)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60031A2")]
		[Address(RVA = "0xC2C26C", Offset = "0xC2C26C", VA = "0xC2C26C")]
		private static extern IntPtr ovrAvatar_GetBodyPBSMaterialStates_Native(IntPtr avatar, IntPtr count);

		[PreserveSig]
		[Token(Token = "0x60031A3")]
		[Address(RVA = "0xC2BF0C", Offset = "0xC2BF0C", VA = "0xC2BF0C")]
		private static extern IntPtr ovrAvatarRenderPart_GetProjectorRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60031A4")]
		[Address(RVA = "0xC2C2FC", Offset = "0xC2C2FC", VA = "0xC2C2FC")]
		public static extern uint ovrAvatar_GetReferencedAssetCount(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x60031A5")]
		[Address(RVA = "0xC2C37C", Offset = "0xC2C37C", VA = "0xC2C37C")]
		public static extern ulong ovrAvatar_GetReferencedAsset(IntPtr avatar, uint index);

		[PreserveSig]
		[Token(Token = "0x60031A6")]
		[Address(RVA = "0xC2C40C", Offset = "0xC2C40C", VA = "0xC2C40C")]
		public static extern void ovrAvatar_SetLeftHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x60031A7")]
		[Address(RVA = "0xC2C49C", Offset = "0xC2C49C", VA = "0xC2C49C")]
		public static extern void ovrAvatar_SetRightHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x60031A8")]
		[Address(RVA = "0xC2C52C", Offset = "0xC2C52C", VA = "0xC2C52C")]
		public static extern void ovrAvatar_SetLeftHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x60031A9")]
		[Address(RVA = "0xC2C5CC", Offset = "0xC2C5CC", VA = "0xC2C5CC")]
		public static extern void ovrAvatar_SetRightHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x60031AA")]
		[Address(RVA = "0xC2C66C", Offset = "0xC2C66C", VA = "0xC2C66C")]
		public static extern void ovrAvatar_UpdatePoseFromPacket(IntPtr avatar, IntPtr packet, float secondsFromStart);

		[PreserveSig]
		[Token(Token = "0x60031AB")]
		[Address(RVA = "0xC2C70C", Offset = "0xC2C70C", VA = "0xC2C70C")]
		public static extern void ovrAvatarPacket_BeginRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x60031AC")]
		[Address(RVA = "0xC2C78C", Offset = "0xC2C78C", VA = "0xC2C78C")]
		public static extern IntPtr ovrAvatarPacket_EndRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x60031AD")]
		[Address(RVA = "0xC2C80C", Offset = "0xC2C80C", VA = "0xC2C80C")]
		public static extern uint ovrAvatarPacket_GetSize(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x60031AE")]
		[Address(RVA = "0xC2C88C", Offset = "0xC2C88C", VA = "0xC2C88C")]
		public static extern float ovrAvatarPacket_GetDurationSeconds(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x60031AF")]
		[Address(RVA = "0xC2C90C", Offset = "0xC2C90C", VA = "0xC2C90C")]
		public static extern void ovrAvatarPacket_Free(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x60031B0")]
		[Address(RVA = "0xC2C98C", Offset = "0xC2C98C", VA = "0xC2C98C")]
		public static extern bool ovrAvatarPacket_Write(IntPtr packet, uint bufferSize, [Out] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x60031B1")]
		[Address(RVA = "0xC2CAB4", Offset = "0xC2CAB4", VA = "0xC2CAB4")]
		public static extern IntPtr ovrAvatarPacket_Read(uint bufferSize, [In] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x60031B2")]
		[Address(RVA = "0xC2CB4C", Offset = "0xC2CB4C", VA = "0xC2CB4C")]
		private static extern void ovrAvatar_SetInternalForceASTCTextures(bool value);

		[Token(Token = "0x60031B3")]
		[Address(RVA = "0xC2CBCC", Offset = "0xC2CBCC", VA = "0xC2CBCC")]
		public static void ovrAvatar_SetForceASTCTextures(bool value)
		{
		}

		[Token(Token = "0x60031B4")]
		[Address(RVA = "0xC2CC2C", Offset = "0xC2CC2C", VA = "0xC2CC2C")]
		public static void ovrAvatar_OverrideExpressiveLogic(IntPtr avatar, ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60031B5")]
		[Address(RVA = "0xC2CD74", Offset = "0xC2CD74", VA = "0xC2CD74")]
		private static extern void ovrAvatar_OverrideExpressiveLogic_Native(IntPtr avatar, IntPtr state);

		[Token(Token = "0x60031B6")]
		[Address(RVA = "0xC2CE04", Offset = "0xC2CE04", VA = "0xC2CE04")]
		public static void ovrAvatar_SetVisemes(IntPtr avatar, ovrAvatarVisemes visemes)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60031B7")]
		[Address(RVA = "0xC2CF5C", Offset = "0xC2CF5C", VA = "0xC2CF5C")]
		private static extern void ovrAvatar_SetVisemes_Native(IntPtr avatar, IntPtr visemes);

		[PreserveSig]
		[Token(Token = "0x60031B8")]
		[Address(RVA = "0xC2CFEC", Offset = "0xC2CFEC", VA = "0xC2CFEC")]
		public static extern void ovrAvatar_UpdateWorldTransform(IntPtr avatar, ovrAvatarTransform transform);

		[Token(Token = "0x60031B9")]
		[Address(RVA = "0xC2D08C", Offset = "0xC2D08C", VA = "0xC2D08C")]
		public static void ovrAvatar_UpdateGazeTargets(ovrAvatarGazeTargets targets)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60031BA")]
		[Address(RVA = "0xC2D45C", Offset = "0xC2D45C", VA = "0xC2D45C")]
		private static extern void ovrAvatar_UpdateGazeTargets_Native(IntPtr targets);

		[PreserveSig]
		[Token(Token = "0x60031BB")]
		[Address(RVA = "0xC2D4DC", Offset = "0xC2D4DC", VA = "0xC2D4DC")]
		public static extern void ovrAvatar_RemoveGazeTargets(uint targetCount, uint[] ids);

		[Token(Token = "0x60031BC")]
		[Address(RVA = "0xC2D574", Offset = "0xC2D574", VA = "0xC2D574")]
		public static void ovrAvatar_UpdateLights(ovrAvatarLights lights)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60031BD")]
		[Address(RVA = "0xC2DDD4", Offset = "0xC2DDD4", VA = "0xC2DDD4")]
		private static extern void ovrAvatar_UpdateLights_Native(IntPtr lights);

		[PreserveSig]
		[Token(Token = "0x60031BE")]
		[Address(RVA = "0xC2DE54", Offset = "0xC2DE54", VA = "0xC2DE54")]
		public static extern void ovrAvatar_RemoveLights(uint lightCount, uint[] ids);

		[Token(Token = "0x60031BF")]
		[Address(RVA = "0xC27220", Offset = "0xC27220", VA = "0xC27220")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x930B58", Offset = "0x930B58")]
		public static void LoggingCallback(IntPtr str)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60031C0")]
		[Address(RVA = "0xC2DEEC", Offset = "0xC2DEEC", VA = "0xC2DEEC")]
		public static extern void ovrAvatar_RegisterLoggingCallback(LoggingDelegate callback);

		[PreserveSig]
		[Token(Token = "0x60031C1")]
		[Address(RVA = "0xC2DF70", Offset = "0xC2DF70", VA = "0xC2DF70")]
		public static extern void ovrAvatar_SetLoggingLevel(ovrAvatarLogLevel level);

		[PreserveSig]
		[Token(Token = "0x60031C2")]
		[Address(RVA = "0xC2DFF0", Offset = "0xC2DFF0", VA = "0xC2DFF0")]
		public static extern IntPtr ovrAvatar_GetDebugTransforms_Native(IntPtr count);

		[PreserveSig]
		[Token(Token = "0x60031C3")]
		[Address(RVA = "0xC2E070", Offset = "0xC2E070", VA = "0xC2E070")]
		public static extern IntPtr ovrAvatar_GetDebugLines_Native(IntPtr count);

		[Token(Token = "0x60031C4")]
		[Address(RVA = "0xC2E0F0", Offset = "0xC2E0F0", VA = "0xC2E0F0")]
		public static void ovrAvatar_DrawDebugLines()
		{
		}

		[PreserveSig]
		[Token(Token = "0x60031C5")]
		[Address(RVA = "0xC2EAB4", Offset = "0xC2EAB4", VA = "0xC2EAB4")]
		public static extern void ovrAvatar_SetDebugDrawContext(uint context);

		[Token(Token = "0x60031C6")]
		[Address(RVA = "0xC2EB34", Offset = "0xC2EB34", VA = "0xC2EB34")]
		public static bool SendEvent(string name, string param = "", string source = "")
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x60031C7")]
		[Address(RVA = "0xC2EF54", Offset = "0xC2EF54", VA = "0xC2EF54")]
		private static extern IntPtr _ovrp_GetVersion();

		[Token(Token = "0x60031C8")]
		[Address(RVA = "0xC2EEBC", Offset = "0xC2EEBC", VA = "0xC2EEBC")]
		public static string ovrp_GetVersion()
		{
			return null;
		}

		[Token(Token = "0x60031C9")]
		[Address(RVA = "0xC2EFC8", Offset = "0xC2EFC8", VA = "0xC2EFC8")]
		public CAPI()
		{
		}
	}
}
namespace YoutubeLight
{
	[Token(Token = "0x2000668")]
	public class VideoNotAvailableException : Exception
	{
		[Token(Token = "0x60031D1")]
		[Address(RVA = "0xE1DF98", Offset = "0xE1DF98", VA = "0xE1DF98")]
		public VideoNotAvailableException()
		{
		}

		[Token(Token = "0x60031D2")]
		[Address(RVA = "0xE1DFFC", Offset = "0xE1DFFC", VA = "0xE1DFFC")]
		public VideoNotAvailableException(string message)
		{
		}
	}
	[Token(Token = "0x2000669")]
	public class YoutubeParseException : Exception
	{
		[Token(Token = "0x60031D3")]
		[Address(RVA = "0x1268744", Offset = "0x1268744", VA = "0x1268744")]
		public YoutubeParseException(string message, Exception innerException)
		{
		}
	}
	[Token(Token = "0x200066A")]
	internal static class HTTPHelperYoutube
	{
		[Token(Token = "0x60031D4")]
		[Address(RVA = "0x14158F4", Offset = "0x14158F4", VA = "0x14158F4")]
		public static string HtmlDecode(string value)
		{
			return null;
		}

		[Token(Token = "0x60031D5")]
		[Address(RVA = "0x14158F8", Offset = "0x14158F8", VA = "0x14158F8")]
		public static string DecodeHtmlChars(this string source)
		{
			return null;
		}

		[Token(Token = "0x60031D6")]
		[Address(RVA = "0x1415C1C", Offset = "0x1415C1C", VA = "0x1415C1C")]
		public static IDictionary<string, string> ParseQueryString(string s)
		{
			return null;
		}

		[Token(Token = "0x60031D7")]
		[Address(RVA = "0x1415EF4", Offset = "0x1415EF4", VA = "0x1415EF4")]
		public static string ReplaceQueryStringParameter(string currentPageUrl, string paramToReplace, string newValue, string lsig)
		{
			return null;
		}

		[Token(Token = "0x60031D8")]
		[Address(RVA = "0x14164BC", Offset = "0x14164BC", VA = "0x14164BC")]
		public static string UrlDecode(string url)
		{
			return null;
		}
	}
	[Token(Token = "0x200066B")]
	internal static class MagicHands
	{
		[Token(Token = "0x60031D9")]
		[Address(RVA = "0x135F208", Offset = "0x135F208", VA = "0x135F208")]
		private static string ApplyOperation(string cipher, string op)
		{
			return null;
		}

		[Token(Token = "0x60031DA")]
		[Address(RVA = "0x135F4D8", Offset = "0x135F4D8", VA = "0x135F4D8")]
		public static string DecipherWithOperations(string cipher, string operations)
		{
			return null;
		}

		[Token(Token = "0x60031DB")]
		[Address(RVA = "0x135F630", Offset = "0x135F630", VA = "0x135F630")]
		private static string GetFunctionFromLine(string currentLine)
		{
			return null;
		}

		[Token(Token = "0x60031DC")]
		[Address(RVA = "0x135F35C", Offset = "0x135F35C", VA = "0x135F35C")]
		private static int GetOpIndex(string op)
		{
			return default(int);
		}

		[Token(Token = "0x60031DD")]
		[Address(RVA = "0x135F410", Offset = "0x135F410", VA = "0x135F410")]
		private static string SwapFirstChar(string cipher, int index)
		{
			return null;
		}
	}
	[Token(Token = "0x200066C")]
	public enum AudioType
	{
		[Token(Token = "0x4002C30")]
		Aac,
		[Token(Token = "0x4002C31")]
		Mp3,
		[Token(Token = "0x4002C32")]
		Opus,
		[Token(Token = "0x4002C33")]
		Vorbis,
		[Token(Token = "0x4002C34")]
		Unknown
	}
	[Token(Token = "0x200066D")]
	public enum VideoType
	{
		[Token(Token = "0x4002C36")]
		Mobile,
		[Token(Token = "0x4002C37")]
		Flash,
		[Token(Token = "0x4002C38")]
		Mp4,
		[Token(Token = "0x4002C39")]
		WebM,
		[Token(Token = "0x4002C3A")]
		Unknown
	}
	[Token(Token = "0x200066E")]
	public enum AdaptiveType
	{
		[Token(Token = "0x4002C3C")]
		None,
		[Token(Token = "0x4002C3D")]
		Audio,
		[Token(Token = "0x4002C3E")]
		Video,
		[Token(Token = "0x4002C3F")]
		Audio_Video
	}
	[Token(Token = "0x200066F")]
	public class VideoInfo
	{
		[Token(Token = "0x4002C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static IEnumerable<VideoInfo> Defaults;

		[Token(Token = "0x4002C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x921720", Offset = "0x921720")]
		private AdaptiveType <AdaptiveType>k__BackingField;

		[Token(Token = "0x4002C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x921730", Offset = "0x921730")]
		private int <AudioBitrate>k__BackingField;

		[Token(Token = "0x4002C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x921740", Offset = "0x921740")]
		private AudioType <AudioType>k__BackingField;

		[Token(Token = "0x4002C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x921750", Offset = "0x921750")]
		private string <DownloadUrl>k__BackingField;

		[Token(Token = "0x4002C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x921760", Offset = "0x921760")]
		private int <FormatCode>k__BackingField;

		[Token(Token = "0x4002C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x921770", Offset = "0x921770")]
		private bool <Is3D>k__BackingField;

		[Token(Token = "0x4002C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x921780", Offset = "0x921780")]
		private bool <HDR>k__BackingField;

		[Token(Token = "0x4002C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x921790", Offset = "0x921790")]
		private bool <RequiresDecryption>k__BackingField;

		[Token(Token = "0x4002C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9217A0", Offset = "0x9217A0")]
		private int <Resolution>k__BackingField;

		[Token(Token = "0x4002C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9217B0", Offset = "0x9217B0")]
		private string <Title>k__BackingField;

		[Token(Token = "0x4002C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9217C0", Offset = "0x9217C0")]
		private VideoType <VideoType>k__BackingField;

		[Token(Token = "0x4002C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9217D0", Offset = "0x9217D0")]
		private string <HtmlPlayerVersion>k__BackingField;

		[Token(Token = "0x4002C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9217E0", Offset = "0x9217E0")]
		private string <HtmlscriptName>k__BackingField;

		[Token(Token = "0x17000691")]
		public AdaptiveType AdaptiveType
		{
			[Token(Token = "0x60031E1")]
			[Address(RVA = "0xE1C7C0", Offset = "0xE1C7C0", VA = "0xE1C7C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x930BC8", Offset = "0x930BC8")]
			get
			{
				return default(AdaptiveType);
			}
			[Token(Token = "0x60031E2")]
			[Address(RVA = "0xE1C7C8", Offset = "0xE1C7C8", VA = "0xE1C7C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x930BD8", Offset = "0x930BD8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000692")]
		public int AudioBitrate
		{
			[Token(Token = "0x60031E3")]
			[Address(RVA = "0xE1C7D0", Offset = "0xE1C7D0", VA = "0xE1C7D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x930BE8", Offset = "0x930BE8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60031E4")]
			[Address(RVA = "0xE1C7D8", Offset = "0xE1C7D8", VA = "0xE1C7D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x930BF8", Offset = "0x930BF8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000693")]
		public string AudioExtension
		{
			[Token(Token = "0x60031E5")]
			[Address(RVA = "0xE1C7E0", Offset = "0xE1C7E0", VA = "0xE1C7E0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000694")]
		public AudioType AudioType
		{
			[Token(Token = "0x60031E6")]
			[Address(RVA = "0xE1C898", Offset = "0xE1C898", VA = "0xE1C898")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x930C08", Offset = "0x930C08")]
			get
			{
				return default(AudioType);
			}
			[Token(Token = "0x60031E7")]
			[Address(RVA = "0xE1C8A0", Offset = "0xE1C8A0", VA = "0xE1C8A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x930C18", Offset = "0x930C18")]
			private set
			{
			}
		}

		[Token(Token = "0x17000695")]
		public bool CanExtractAudio
		{
			[Token(Token = "0x60031E8")]
			[Address(RVA = "0xE1C8A8", Offset = "0xE1C8A8", VA = "0xE1C8A8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000696")]
		public string DownloadUrl
		{
			[Token(Token = "0x60031E9")]
			[Address(RVA = "0xE1C8B8", Offset = "0xE1C8B8", VA = "0xE1C8B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x930C28", Offset = "0x930C28")]
			get
			{
				return null;
			}
			[Token(Token = "0x60031EA")]
			[Address(RVA = "0xE1C8C0", Offset = "0xE1C8C0", VA = "0xE1C8C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x930C38", Offset = "0x930C38")]
			internal set
			{
			}
		}

		[Token(Token = "0x17000697")]
		public int FormatCode
		{
			[Token(Token = "0x60031EB")]
			[Address(RVA = "0xE1C8C8", Offset = "0xE1C8C8", VA = "0xE1C8C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x930C48", Offset = "0x930C48")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60031EC")]
			[Address(RVA = "0xE1C8D0", Offset = "0xE1C8D0", VA = "0xE1C8D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x930C58", Offset = "0x930C58")]
			private set
			{
			}
		}

		[Token(Token = "0x17000698")]
		public bool Is3D
		{
			[Token(Token = "0x60031ED")]
			[Address(RVA = "0xE1C8D8", Offset = "0xE1C8D8", VA = "0xE1C8D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x930C68", Offset = "0x930C68")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60031EE")]
			[Address(RVA = "0xE1C8E0", Offset = "0xE1C8E0", VA = "0xE1C8E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x930C78", Offset = "0x930C78")]
			private set
			{
			}
		}

		[Token(Token = "0x17000699")]
		public bool HDR
		{
			[Token(Token = "0x60031EF")]
			[Address(RVA = "0xE1C8EC", Offset = "0xE1C8EC", VA = "0xE1C8EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x930C88", Offset = "0x930C88")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60031F0")]
			[Address(RVA = "0xE1C8F4", Offset = "0xE1C8F4", VA = "0xE1C8F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x930C98", Offset = "0x930C98")]
			private set
			{
			}
		}

		[Token(Token = "0x1700069A")]
		public bool RequiresDecryption
		{
			[Token(Token = "0x60031F1")]
			[Address(RVA = "0xE1C900", Offset = "0xE1C900", VA = "0xE1C900")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x930CA8", Offset = "0x930CA8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60031F2")]
			[Address(RVA = "0xE1C908", Offset = "0xE1C908", VA = "0xE1C908")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x930CB8", Offset = "0x930CB8")]
			internal set
			{
			}
		}

		[Token(Token = "0x1700069B")]
		public int Resolution
		{
			[Token(Token = "0x60031F3")]
			[Address(RVA = "0xE1C914", Offset = "0xE1C914", VA = "0xE1C914")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x930CC8", Offset = "0x930CC8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60031F4")]
			[Address(RVA = "0xE1C91C", Offset = "0xE1C91C", VA = "0xE1C91C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x930CD8", Offset = "0x930CD8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700069C")]
		public string Title
		{
			[Token(Token = "0x60031F5")]
			[Address(RVA = "0xE1C924", Offset = "0xE1C924", VA = "0xE1C924")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x930CE8", Offset = "0x930CE8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60031F6")]
			[Address(RVA = "0xE1C92C", Offset = "0xE1C92C", VA = "0xE1C92C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x930CF8", Offset = "0x930CF8")]
			internal set
			{
			}
		}

		[Token(Token = "0x1700069D")]
		public string VideoExtension
		{
			[Token(Token = "0x60031F7")]
			[Address(RVA = "0xE1C934", Offset = "0xE1C934", VA = "0xE1C934")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700069E")]
		public VideoType VideoType
		{
			[Token(Token = "0x60031F8")]
			[Address(RVA = "0xE1C9EC", Offset = "0xE1C9EC", VA = "0xE1C9EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x930D08", Offset = "0x930D08")]
			get
			{
				return default(VideoType);
			}
			[Token(Token = "0x60031F9")]
			[Address(RVA = "0xE1C9F4", Offset = "0xE1C9F4", VA = "0xE1C9F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x930D18", Offset = "0x930D18")]
			private set
			{
			}
		}

		[Token(Token = "0x1700069F")]
		internal string HtmlPlayerVersion
		{
			[Token(Token = "0x60031FA")]
			[Address(RVA = "0xE1C9FC", Offset = "0xE1C9FC", VA = "0xE1C9FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x930D28", Offset = "0x930D28")]
			get
			{
				return null;
			}
			[Token(Token = "0x60031FB")]
			[Address(RVA = "0xE1CA04", Offset = "0xE1CA04", VA = "0xE1CA04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x930D38", Offset = "0x930D38")]
			set
			{
			}
		}

		[Token(Token = "0x170006A0")]
		internal string HtmlscriptName
		{
			[Token(Token = "0x60031FC")]
			[Address(RVA = "0xE1CA0C", Offset = "0xE1CA0C", VA = "0xE1CA0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x930D48", Offset = "0x930D48")]
			get
			{
				return null;
			}
			[Token(Token = "0x60031FD")]
			[Address(RVA = "0xE1CA14", Offset = "0xE1CA14", VA = "0xE1CA14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x930D58", Offset = "0x930D58")]
			set
			{
			}
		}

		[Token(Token = "0x60031DE")]
		[Address(RVA = "0xE1C694", Offset = "0xE1C694", VA = "0xE1C694")]
		internal VideoInfo(int formatCode)
		{
		}

		[Token(Token = "0x60031DF")]
		[Address(RVA = "0xE1C74C", Offset = "0xE1C74C", VA = "0xE1C74C")]
		internal VideoInfo(VideoInfo info)
		{
		}

		[Token(Token = "0x60031E0")]
		[Address(RVA = "0xE1C6D8", Offset = "0xE1C6D8", VA = "0xE1C6D8")]
		private VideoInfo(int formatCode, VideoType videoType, int resolution, bool is3D, AudioType audioType, int audioBitrate, AdaptiveType adaptiveType)
		{
		}

		[Token(Token = "0x60031FE")]
		[Address(RVA = "0xE1CA1C", Offset = "0xE1CA1C", VA = "0xE1CA1C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000670")]
	public abstract class Downloader
	{
		[Token(Token = "0x4002C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x921810", Offset = "0x921810")]
		private int? <BytesToDownload>k__BackingField;

		[Token(Token = "0x4002C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x921820", Offset = "0x921820")]
		private string <SavePath>k__BackingField;

		[Token(Token = "0x4002C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x921830", Offset = "0x921830")]
		private VideoInfo <Video>k__BackingField;

		[Token(Token = "0x170006A1")]
		public int? BytesToDownload
		{
			[Token(Token = "0x6003205")]
			[Address(RVA = "0xD971C4", Offset = "0xD971C4", VA = "0xD971C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x930DA8", Offset = "0x930DA8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003206")]
			[Address(RVA = "0xD971CC", Offset = "0xD971CC", VA = "0xD971CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x930DB8", Offset = "0x930DB8")]
			private set
			{
			}
		}

		[Token(Token = "0x170006A2")]
		public string SavePath
		{
			[Token(Token = "0x6003207")]
			[Address(RVA = "0xD971D4", Offset = "0xD971D4", VA = "0xD971D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x930DC8", Offset = "0x930DC8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003208")]
			[Address(RVA = "0xD971DC", Offset = "0xD971DC", VA = "0xD971DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x930DD8", Offset = "0x930DD8")]
			private set
			{
			}
		}

		[Token(Token = "0x170006A3")]
		public VideoInfo Video
		{
			[Token(Token = "0x6003209")]
			[Address(RVA = "0xD971E4", Offset = "0xD971E4", VA = "0xD971E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x930DE8", Offset = "0x930DE8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600320A")]
			[Address(RVA = "0xD971EC", Offset = "0xD971EC", VA = "0xD971EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x930DF8", Offset = "0x930DF8")]
			private set
			{
			}
		}

		[Token(Token = "0x14000024")]
		public event EventHandler DownloadFinished
		{
			[Token(Token = "0x6003201")]
			[Address(RVA = "0xD96F44", Offset = "0xD96F44", VA = "0xD96F44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x930D68", Offset = "0x930D68")]
			add
			{
			}
			[Token(Token = "0x6003202")]
			[Address(RVA = "0xD96FE4", Offset = "0xD96FE4", VA = "0xD96FE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x930D78", Offset = "0x930D78")]
			remove
			{
			}
		}

		[Token(Token = "0x14000025")]
		public event EventHandler DownloadStarted
		{
			[Token(Token = "0x6003203")]
			[Address(RVA = "0xD97084", Offset = "0xD97084", VA = "0xD97084")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x930D88", Offset = "0x930D88")]
			add
			{
			}
			[Token(Token = "0x6003204")]
			[Address(RVA = "0xD97124", Offset = "0xD97124", VA = "0xD97124")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x930D98", Offset = "0x930D98")]
			remove
			{
			}
		}

		[Token(Token = "0x6003200")]
		[Address(RVA = "0xD96E94", Offset = "0xD96E94", VA = "0xD96E94")]
		protected Downloader(VideoInfo video, string savePath, [Optional] int? bytesToDownload)
		{
		}

		[Token(Token = "0x600320B")]
		public abstract void Execute();

		[Token(Token = "0x600320C")]
		[Address(RVA = "0xD971F4", Offset = "0xD971F4", VA = "0xD971F4")]
		protected void OnDownloadFinished(EventArgs e)
		{
		}

		[Token(Token = "0x600320D")]
		[Address(RVA = "0xD97214", Offset = "0xD97214", VA = "0xD97214")]
		protected void OnDownloadStarted(EventArgs e)
		{
		}
	}
}
namespace SimpleJSON
{
	[Token(Token = "0x2000671")]
	public enum JSONNodeType
	{
		[Token(Token = "0x4002C54")]
		Array = 1,
		[Token(Token = "0x4002C55")]
		Object,
		[Token(Token = "0x4002C56")]
		String,
		[Token(Token = "0x4002C57")]
		Number,
		[Token(Token = "0x4002C58")]
		NullValue,
		[Token(Token = "0x4002C59")]
		Boolean,
		[Token(Token = "0x4002C5A")]
		None
	}
	[Token(Token = "0x2000672")]
	public enum JSONTextMode
	{
		[Token(Token = "0x4002C5C")]
		Compact,
		[Token(Token = "0x4002C5D")]
		Indent
	}
	[Token(Token = "0x2000673")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x919B04", Offset = "0x919B04")]
	public abstract class JSONNode
	{
		[Token(Token = "0x2000674")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x919B3C", Offset = "0x919B3C")]
		private sealed class <get_Children>d__29 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002C5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002C60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x4002C61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x170006B7")]
			private JSONNode System.Collections.Generic.IEnumerator<SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x6003254")]
				[Address(RVA = "0xE65330", Offset = "0xE65330", VA = "0xE65330", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006B8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003256")]
				[Address(RVA = "0xE65378", Offset = "0xE65378", VA = "0xE65378", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003251")]
			[Address(RVA = "0xE652DC", Offset = "0xE652DC", VA = "0xE652DC")]
			[DebuggerHidden]
			public <get_Children>d__29(int <>1__state)
			{
			}

			[Token(Token = "0x6003252")]
			[Address(RVA = "0xE65314", Offset = "0xE65314", VA = "0xE65314", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003253")]
			[Address(RVA = "0xE65318", Offset = "0xE65318", VA = "0xE65318", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003255")]
			[Address(RVA = "0xE65338", Offset = "0xE65338", VA = "0xE65338", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6003257")]
			[Address(RVA = "0xE65380", Offset = "0xE65380", VA = "0xE65380", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6003258")]
			[Address(RVA = "0xE65414", Offset = "0xE65414", VA = "0xE65414", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x2000675")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x919B4C", Offset = "0x919B4C")]
		private sealed class <get_DeepChildren>d__31 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002C62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002C63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x4002C64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4002C65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public JSONNode <>4__this;

			[Token(Token = "0x4002C66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private IEnumerator<JSONNode> <>7__wrap1;

			[Token(Token = "0x4002C67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private IEnumerator<JSONNode> <>7__wrap2;

			[Token(Token = "0x170006B9")]
			private JSONNode System.Collections.Generic.IEnumerator<SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x600325E")]
				[Address(RVA = "0xE65A90", Offset = "0xE65A90", VA = "0xE65A90", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006BA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003260")]
				[Address(RVA = "0xE65AD8", Offset = "0xE65AD8", VA = "0xE65AD8", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003259")]
			[Address(RVA = "0xE65418", Offset = "0xE65418", VA = "0xE65418")]
			[DebuggerHidden]
			public <get_DeepChildren>d__31(int <>1__state)
			{
			}

			[Token(Token = "0x600325A")]
			[Address(RVA = "0xE65450", Offset = "0xE65450", VA = "0xE65450", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600325B")]
			[Address(RVA = "0xE65658", Offset = "0xE65658", VA = "0xE65658", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600325C")]
			[Address(RVA = "0xE6559C", Offset = "0xE6559C", VA = "0xE6559C")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x600325D")]
			[Address(RVA = "0xE654E0", Offset = "0xE654E0", VA = "0xE654E0")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x600325F")]
			[Address(RVA = "0xE65A98", Offset = "0xE65A98", VA = "0xE65A98", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6003261")]
			[Address(RVA = "0xE65AE0", Offset = "0xE65AE0", VA = "0xE65AE0", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6003262")]
			[Address(RVA = "0xE65B88", Offset = "0xE65B88", VA = "0xE65B88", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4002C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static StringBuilder m_EscapeBuilder;

		[Token(Token = "0x170006A4")]
		public virtual JSONNode Item
		{
			[Token(Token = "0x600320E")]
			[Address(RVA = "0x13B2FF0", Offset = "0x13B2FF0", VA = "0x13B2FF0", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600320F")]
			[Address(RVA = "0x13B2FF8", Offset = "0x13B2FF8", VA = "0x13B2FF8", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x170006A5")]
		public virtual JSONNode Item
		{
			[Token(Token = "0x6003210")]
			[Address(RVA = "0x13B2FFC", Offset = "0x13B2FFC", VA = "0x13B2FFC", Slot = "6")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003211")]
			[Address(RVA = "0x13B3004", Offset = "0x13B3004", VA = "0x13B3004", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x170006A6")]
		public virtual string Value
		{
			[Token(Token = "0x6003212")]
			[Address(RVA = "0x13B3008", Offset = "0x13B3008", VA = "0x13B3008", Slot = "8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003213")]
			[Address(RVA = "0x13B304C", Offset = "0x13B304C", VA = "0x13B304C", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x170006A7")]
		public virtual int Count
		{
			[Token(Token = "0x6003214")]
			[Address(RVA = "0x13B3050", Offset = "0x13B3050", VA = "0x13B3050", Slot = "10")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170006A8")]
		public virtual bool IsNumber
		{
			[Token(Token = "0x6003215")]
			[Address(RVA = "0x13B3058", Offset = "0x13B3058", VA = "0x13B3058", Slot = "11")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170006A9")]
		public virtual bool IsString
		{
			[Token(Token = "0x6003216")]
			[Address(RVA = "0x13B3060", Offset = "0x13B3060", VA = "0x13B3060", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170006AA")]
		public virtual bool IsBoolean
		{
			[Token(Token = "0x6003217")]
			[Address(RVA = "0x13B3068", Offset = "0x13B3068", VA = "0x13B3068", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170006AB")]
		public virtual bool IsNull
		{
			[Token(Token = "0x6003218")]
			[Address(RVA = "0x13B3070", Offset = "0x13B3070", VA = "0x13B3070", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170006AC")]
		public virtual bool IsArray
		{
			[Token(Token = "0x6003219")]
			[Address(RVA = "0x13B3078", Offset = "0x13B3078", VA = "0x13B3078", Slot = "15")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170006AD")]
		public virtual bool IsObject
		{
			[Token(Token = "0x600321A")]
			[Address(RVA = "0x13B3080", Offset = "0x13B3080", VA = "0x13B3080", Slot = "16")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170006AE")]
		public virtual IEnumerable<JSONNode> Children
		{
			[Token(Token = "0x6003220")]
			[Address(RVA = "0x13B310C", Offset = "0x13B310C", VA = "0x13B310C", Slot = "22")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x930E08", Offset = "0x930E08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006AF")]
		public IEnumerable<JSONNode> DeepChildren
		{
			[Token(Token = "0x6003221")]
			[Address(RVA = "0x13B3168", Offset = "0x13B3168", VA = "0x13B3168")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x930E68", Offset = "0x930E68")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006B0")]
		public abstract JSONNodeType Tag
		{
			[Token(Token = "0x6003225")]
			get;
		}

		[Token(Token = "0x170006B1")]
		public virtual double AsDouble
		{
			[Token(Token = "0x6003226")]
			[Address(RVA = "0x13B3300", Offset = "0x13B3300", VA = "0x13B3300", Slot = "26")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6003227")]
			[Address(RVA = "0x13B33A0", Offset = "0x13B33A0", VA = "0x13B33A0", Slot = "27")]
			set
			{
			}
		}

		[Token(Token = "0x170006B2")]
		public virtual int AsInt
		{
			[Token(Token = "0x6003228")]
			[Address(RVA = "0x13B33E0", Offset = "0x13B33E0", VA = "0x13B33E0", Slot = "28")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6003229")]
			[Address(RVA = "0x13B3418", Offset = "0x13B3418", VA = "0x13B3418", Slot = "29")]
			set
			{
			}
		}

		[Token(Token = "0x170006B3")]
		public virtual float AsFloat
		{
			[Token(Token = "0x600322A")]
			[Address(RVA = "0x13B3430", Offset = "0x13B3430", VA = "0x13B3430", Slot = "30")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600322B")]
			[Address(RVA = "0x13B3454", Offset = "0x13B3454", VA = "0x13B3454", Slot = "31")]
			set
			{
			}
		}

		[Token(Token = "0x170006B4")]
		public virtual bool AsBool
		{
			[Token(Token = "0x600322C")]
			[Address(RVA = "0x13B3468", Offset = "0x13B3468", VA = "0x13B3468", Slot = "32")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600322D")]
			[Address(RVA = "0x13B352C", Offset = "0x13B352C", VA = "0x13B352C", Slot = "33")]
			set
			{
			}
		}

		[Token(Token = "0x170006B5")]
		public virtual JSONArray AsArray
		{
			[Token(Token = "0x600322E")]
			[Address(RVA = "0x13B35B0", Offset = "0x13B35B0", VA = "0x13B35B0", Slot = "34")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006B6")]
		public virtual JSONObject AsObject
		{
			[Token(Token = "0x600322F")]
			[Address(RVA = "0x13B362C", Offset = "0x13B362C", VA = "0x13B362C", Slot = "35")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600321B")]
		[Address(RVA = "0x13B3088", Offset = "0x13B3088", VA = "0x13B3088", Slot = "17")]
		public virtual void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x600321C")]
		[Address(RVA = "0x13B308C", Offset = "0x13B308C", VA = "0x13B308C", Slot = "18")]
		public virtual void Add(JSONNode aItem)
		{
		}

		[Token(Token = "0x600321D")]
		[Address(RVA = "0x13B30F4", Offset = "0x13B30F4", VA = "0x13B30F4", Slot = "19")]
		public virtual JSONNode Remove(string aKey)
		{
			return null;
		}

		[Token(Token = "0x600321E")]
		[Address(RVA = "0x13B30FC", Offset = "0x13B30FC", VA = "0x13B30FC", Slot = "20")]
		public virtual JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x600321F")]
		[Address(RVA = "0x13B3104", Offset = "0x13B3104", VA = "0x13B3104", Slot = "21")]
		public virtual JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x6003222")]
		[Address(RVA = "0x13B31D4", Offset = "0x13B31D4", VA = "0x13B31D4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6003223")]
		[Address(RVA = "0x13B3264", Offset = "0x13B3264", VA = "0x13B3264", Slot = "23")]
		public virtual string ToString(int aIndent)
		{
			return null;
		}

		[Token(Token = "0x6003224")]
		internal abstract void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode);

		[Token(Token = "0x6003230")]
		[Address(RVA = "0x13B36A8", Offset = "0x13B36A8", VA = "0x13B36A8")]
		public static implicit operator JSONNode(string s)
		{
			return null;
		}

		[Token(Token = "0x6003231")]
		[Address(RVA = "0x13B3708", Offset = "0x13B3708", VA = "0x13B3708")]
		public static implicit operator string(JSONNode d)
		{
			return null;
		}

		[Token(Token = "0x6003232")]
		[Address(RVA = "0x13B3798", Offset = "0x13B3798", VA = "0x13B3798")]
		public static implicit operator JSONNode(double n)
		{
			return null;
		}

		[Token(Token = "0x6003233")]
		[Address(RVA = "0x13B37FC", Offset = "0x13B37FC", VA = "0x13B37FC")]
		public static implicit operator double(JSONNode d)
		{
			return default(double);
		}

		[Token(Token = "0x6003234")]
		[Address(RVA = "0x13B3890", Offset = "0x13B3890", VA = "0x13B3890")]
		public static implicit operator JSONNode(float n)
		{
			return null;
		}

		[Token(Token = "0x6003235")]
		[Address(RVA = "0x13B38F4", Offset = "0x13B38F4", VA = "0x13B38F4")]
		public static implicit operator float(JSONNode d)
		{
			return default(float);
		}

		[Token(Token = "0x6003236")]
		[Address(RVA = "0x13B3988", Offset = "0x13B3988", VA = "0x13B3988")]
		public static implicit operator JSONNode(int n)
		{
			return null;
		}

		[Token(Token = "0x6003237")]
		[Address(RVA = "0x13B39E4", Offset = "0x13B39E4", VA = "0x13B39E4")]
		public static implicit operator int(JSONNode d)
		{
			return default(int);
		}

		[Token(Token = "0x6003238")]
		[Address(RVA = "0x13B3A78", Offset = "0x13B3A78", VA = "0x13B3A78")]
		public static implicit operator JSONNode(bool b)
		{
			return null;
		}

		[Token(Token = "0x6003239")]
		[Address(RVA = "0x13B3AD4", Offset = "0x13B3AD4", VA = "0x13B3AD4")]
		public static implicit operator bool(JSONNode d)
		{
			return default(bool);
		}

		[Token(Token = "0x600323A")]
		[Address(RVA = "0x13B19E0", Offset = "0x13B19E0", VA = "0x13B19E0")]
		public static bool operator ==(JSONNode a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x600323B")]
		[Address(RVA = "0x13B3B68", Offset = "0x13B3B68", VA = "0x13B3B68")]
		public static bool operator !=(JSONNode a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x600323C")]
		[Address(RVA = "0x13B3BE4", Offset = "0x13B3BE4", VA = "0x13B3BE4", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600323D")]
		[Address(RVA = "0x13B3BF0", Offset = "0x13B3BF0", VA = "0x13B3BF0", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x600323E")]
		[Address(RVA = "0x13B3BF8", Offset = "0x13B3BF8", VA = "0x13B3BF8")]
		internal static string Escape(string aText)
		{
			return null;
		}

		[Token(Token = "0x600323F")]
		[Address(RVA = "0x13B4000", Offset = "0x13B4000", VA = "0x13B4000")]
		private static void ParseElement(JSONNode ctx, string token, string tokenName, bool quoted)
		{
		}

		[Token(Token = "0x6003240")]
		[Address(RVA = "0x13B113C", Offset = "0x13B113C", VA = "0x13B113C")]
		public static JSONNode Parse(string aJSON)
		{
			return null;
		}

		[Token(Token = "0x6003241")]
		[Address(RVA = "0x13B421C", Offset = "0x13B421C", VA = "0x13B421C", Slot = "36")]
		public virtual void Serialize(BinaryWriter aWriter)
		{
		}

		[Token(Token = "0x6003242")]
		[Address(RVA = "0x13B4220", Offset = "0x13B4220", VA = "0x13B4220")]
		public void SaveToStream(Stream aData)
		{
		}

		[Token(Token = "0x6003243")]
		[Address(RVA = "0x13B429C", Offset = "0x13B429C", VA = "0x13B429C")]
		public void SaveToCompressedStream(Stream aData)
		{
		}

		[Token(Token = "0x6003244")]
		[Address(RVA = "0x13B42F0", Offset = "0x13B42F0", VA = "0x13B42F0")]
		public void SaveToCompressedFile(string aFileName)
		{
		}

		[Token(Token = "0x6003245")]
		[Address(RVA = "0x13B4344", Offset = "0x13B4344", VA = "0x13B4344")]
		public string SaveToCompressedBase64()
		{
			return null;
		}

		[Token(Token = "0x6003246")]
		[Address(RVA = "0x13B4398", Offset = "0x13B4398", VA = "0x13B4398")]
		public void SaveToFile(string aFileName)
		{
		}

		[Token(Token = "0x6003247")]
		[Address(RVA = "0x13B4528", Offset = "0x13B4528", VA = "0x13B4528")]
		public string SaveToBase64()
		{
			return null;
		}

		[Token(Token = "0x6003248")]
		[Address(RVA = "0x13B46FC", Offset = "0x13B46FC", VA = "0x13B46FC")]
		public static JSONNode Deserialize(BinaryReader aReader)
		{
			return null;
		}

		[Token(Token = "0x6003249")]
		[Address(RVA = "0x13B4A84", Offset = "0x13B4A84", VA = "0x13B4A84")]
		public static JSONNode LoadFromCompressedFile(string aFileName)
		{
			return null;
		}

		[Token(Token = "0x600324A")]
		[Address(RVA = "0x13B4AD8", Offset = "0x13B4AD8", VA = "0x13B4AD8")]
		public static JSONNode LoadFromCompressedStream(Stream aData)
		{
			return null;
		}

		[Token(Token = "0x600324B")]
		[Address(RVA = "0x13B4B2C", Offset = "0x13B4B2C", VA = "0x13B4B2C")]
		public static JSONNode LoadFromCompressedBase64(string aBase64)
		{
			return null;
		}

		[Token(Token = "0x600324C")]
		[Address(RVA = "0x13B4B80", Offset = "0x13B4B80", VA = "0x13B4B80")]
		public static JSONNode LoadFromStream(Stream aData)
		{
			return null;
		}

		[Token(Token = "0x600324D")]
		[Address(RVA = "0x13B4D10", Offset = "0x13B4D10", VA = "0x13B4D10")]
		public static JSONNode LoadFromFile(string aFileName)
		{
			return null;
		}

		[Token(Token = "0x600324E")]
		[Address(RVA = "0x13B4E88", Offset = "0x13B4E88", VA = "0x13B4E88")]
		public static JSONNode LoadFromBase64(string aBase64)
		{
			return null;
		}

		[Token(Token = "0x600324F")]
		[Address(RVA = "0x13B2310", Offset = "0x13B2310", VA = "0x13B2310")]
		protected JSONNode()
		{
		}
	}
	[Token(Token = "0x2000676")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x919B5C", Offset = "0x919B5C")]
	public class JSONArray : JSONNode, IEnumerable
	{
		[Token(Token = "0x2000677")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x919B94", Offset = "0x919B94")]
		private sealed class <get_Children>d__18 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002C6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002C6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x4002C6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4002C6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public JSONArray <>4__this;

			[Token(Token = "0x4002C6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private List<JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x170006C1")]
			private JSONNode System.Collections.Generic.IEnumerator<SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x6003276")]
				[Address(RVA = "0xE651E0", Offset = "0xE651E0", VA = "0xE651E0", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006C2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003278")]
				[Address(RVA = "0xE65228", Offset = "0xE65228", VA = "0xE65228", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003272")]
			[Address(RVA = "0xE64FC4", Offset = "0xE64FC4", VA = "0xE64FC4")]
			[DebuggerHidden]
			public <get_Children>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6003273")]
			[Address(RVA = "0xE64FFC", Offset = "0xE64FFC", VA = "0xE64FFC", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003274")]
			[Address(RVA = "0xE6506C", Offset = "0xE6506C", VA = "0xE6506C", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003275")]
			[Address(RVA = "0xE65018", Offset = "0xE65018", VA = "0xE65018")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6003277")]
			[Address(RVA = "0xE651E8", Offset = "0xE651E8", VA = "0xE651E8", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6003279")]
			[Address(RVA = "0xE65230", Offset = "0xE65230", VA = "0xE65230", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x600327A")]
			[Address(RVA = "0xE652D8", Offset = "0xE652D8", VA = "0xE652D8", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x2000678")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x919BA4", Offset = "0x919BA4")]
		private sealed class <GetEnumerator>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002C6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002C70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002C71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public JSONArray <>4__this;

			[Token(Token = "0x4002C72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private List<JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x170006C3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600327F")]
				[Address(RVA = "0xE64F74", Offset = "0xE64F74", VA = "0xE64F74", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006C4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003281")]
				[Address(RVA = "0xE64FBC", Offset = "0xE64FBC", VA = "0xE64FBC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600327B")]
			[Address(RVA = "0xE64D64", Offset = "0xE64D64", VA = "0xE64D64")]
			[DebuggerHidden]
			public <GetEnumerator>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x600327C")]
			[Address(RVA = "0xE64D90", Offset = "0xE64D90", VA = "0xE64D90", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600327D")]
			[Address(RVA = "0xE64E00", Offset = "0xE64E00", VA = "0xE64E00", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600327E")]
			[Address(RVA = "0xE64DAC", Offset = "0xE64DAC", VA = "0xE64DAC")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6003280")]
			[Address(RVA = "0xE64F7C", Offset = "0xE64F7C", VA = "0xE64F7C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<JSONNode> m_List;

		[Token(Token = "0x4002C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool inline;

		[Token(Token = "0x170006BB")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x6003263")]
			[Address(RVA = "0x13B1788", Offset = "0x13B1788", VA = "0x13B1788", Slot = "25")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x170006BC")]
		public override bool IsArray
		{
			[Token(Token = "0x6003264")]
			[Address(RVA = "0x13B1790", Offset = "0x13B1790", VA = "0x13B1790", Slot = "15")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170006BD")]
		public override JSONNode Item
		{
			[Token(Token = "0x6003265")]
			[Address(RVA = "0x13B1798", Offset = "0x13B1798", VA = "0x13B1798", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003266")]
			[Address(RVA = "0x13B18C8", Offset = "0x13B18C8", VA = "0x13B18C8", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x170006BE")]
		public override JSONNode Item
		{
			[Token(Token = "0x6003267")]
			[Address(RVA = "0x13B1BD0", Offset = "0x13B1BD0", VA = "0x13B1BD0", Slot = "6")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003268")]
			[Address(RVA = "0x13B1C2C", Offset = "0x13B1C2C", VA = "0x13B1C2C", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x170006BF")]
		public override int Count
		{
			[Token(Token = "0x6003269")]
			[Address(RVA = "0x13B1CF0", Offset = "0x13B1CF0", VA = "0x13B1CF0", Slot = "10")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170006C0")]
		public override IEnumerable<JSONNode> Children
		{
			[Token(Token = "0x600326D")]
			[Address(RVA = "0x13B1F2C", Offset = "0x13B1F2C", VA = "0x13B1F2C", Slot = "22")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x930FA8", Offset = "0x930FA8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600326A")]
		[Address(RVA = "0x13B1D3C", Offset = "0x13B1D3C", VA = "0x13B1D3C", Slot = "17")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x600326B")]
		[Address(RVA = "0x13B1E00", Offset = "0x13B1E00", VA = "0x13B1E00", Slot = "20")]
		public override JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x600326C")]
		[Address(RVA = "0x13B1EC0", Offset = "0x13B1EC0", VA = "0x13B1EC0", Slot = "21")]
		public override JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x600326E")]
		[Address(RVA = "0x13B1F98", Offset = "0x13B1F98", VA = "0x13B1F98", Slot = "37")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x931008", Offset = "0x931008")]
		public IEnumerator GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x600326F")]
		[Address(RVA = "0x13B2004", Offset = "0x13B2004", VA = "0x13B2004", Slot = "36")]
		public override void Serialize(BinaryWriter aWriter)
		{
		}

		[Token(Token = "0x6003270")]
		[Address(RVA = "0x13B20EC", Offset = "0x13B20EC", VA = "0x13B20EC", Slot = "24")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x6003271")]
		[Address(RVA = "0x13B226C", Offset = "0x13B226C", VA = "0x13B226C")]
		public JSONArray()
		{
		}
	}
	[Token(Token = "0x2000679")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x919BB4", Offset = "0x919BB4")]
	public class JSONObject : JSONNode, IEnumerable
	{
		[Token(Token = "0x200067A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x919BEC", Offset = "0x919BEC")]
		private sealed class <>c__DisplayClass17_0
		{
			[Token(Token = "0x4002C75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public JSONNode aNode;

			[Token(Token = "0x6003292")]
			[Address(RVA = "0xE65B8C", Offset = "0xE65B8C", VA = "0xE65B8C")]
			public <>c__DisplayClass17_0()
			{
			}

			[Token(Token = "0x6003293")]
			[Address(RVA = "0xE65B94", Offset = "0xE65B94", VA = "0xE65B94")]
			internal bool <Remove>b__0(KeyValuePair<string, JSONNode> k)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200067B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x919BFC", Offset = "0x919BFC")]
		private sealed class <get_Children>d__19 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002C76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002C77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x4002C78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4002C79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public JSONObject <>4__this;

			[Token(Token = "0x4002C7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Dictionary<string, JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x170006CB")]
			private JSONNode System.Collections.Generic.IEnumerator<SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x6003298")]
				[Address(RVA = "0xE660DC", Offset = "0xE660DC", VA = "0xE660DC", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006CC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600329A")]
				[Address(RVA = "0xE66124", Offset = "0xE66124", VA = "0xE66124", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003294")]
			[Address(RVA = "0xE65EAC", Offset = "0xE65EAC", VA = "0xE65EAC")]
			[DebuggerHidden]
			public <get_Children>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x6003295")]
			[Address(RVA = "0xE65EE4", Offset = "0xE65EE4", VA = "0xE65EE4", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003296")]
			[Address(RVA = "0xE65F54", Offset = "0xE65F54", VA = "0xE65F54", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003297")]
			[Address(RVA = "0xE65F00", Offset = "0xE65F00", VA = "0xE65F00")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6003299")]
			[Address(RVA = "0xE660E4", Offset = "0xE660E4", VA = "0xE660E4", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x600329B")]
			[Address(RVA = "0xE6612C", Offset = "0xE6612C", VA = "0xE6612C", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x600329C")]
			[Address(RVA = "0xE661D4", Offset = "0xE661D4", VA = "0xE661D4", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x200067C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x919C0C", Offset = "0x919C0C")]
		private sealed class <GetEnumerator>d__20 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002C7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002C7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002C7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public JSONObject <>4__this;

			[Token(Token = "0x4002C7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Dictionary<string, JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x170006CD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60032A1")]
				[Address(RVA = "0xE65E5C", Offset = "0xE65E5C", VA = "0xE65E5C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006CE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60032A3")]
				[Address(RVA = "0xE65EA4", Offset = "0xE65EA4", VA = "0xE65EA4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600329D")]
			[Address(RVA = "0xE65C18", Offset = "0xE65C18", VA = "0xE65C18")]
			[DebuggerHidden]
			public <GetEnumerator>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x600329E")]
			[Address(RVA = "0xE65C44", Offset = "0xE65C44", VA = "0xE65C44", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600329F")]
			[Address(RVA = "0xE65CB4", Offset = "0xE65CB4", VA = "0xE65CB4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60032A0")]
			[Address(RVA = "0xE65C60", Offset = "0xE65C60", VA = "0xE65C60")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60032A2")]
			[Address(RVA = "0xE65E64", Offset = "0xE65E64", VA = "0xE65E64", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<string, JSONNode> m_Dict;

		[Token(Token = "0x4002C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool inline;

		[Token(Token = "0x170006C5")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x6003282")]
			[Address(RVA = "0x13B55FC", Offset = "0x13B55FC", VA = "0x13B55FC", Slot = "25")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x170006C6")]
		public override bool IsObject
		{
			[Token(Token = "0x6003283")]
			[Address(RVA = "0x13B5604", Offset = "0x13B5604", VA = "0x13B5604", Slot = "16")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170006C7")]
		public override JSONNode Item
		{
			[Token(Token = "0x6003284")]
			[Address(RVA = "0x13B560C", Offset = "0x13B560C", VA = "0x13B560C", Slot = "6")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003285")]
			[Address(RVA = "0x13B56DC", Offset = "0x13B56DC", VA = "0x13B56DC", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x170006C8")]
		public override JSONNode Item
		{
			[Token(Token = "0x6003286")]
			[Address(RVA = "0x13B580C", Offset = "0x13B580C", VA = "0x13B580C", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003287")]
			[Address(RVA = "0x13B58B8", Offset = "0x13B58B8", VA = "0x13B58B8", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x170006C9")]
		public override int Count
		{
			[Token(Token = "0x6003288")]
			[Address(RVA = "0x13B59F8", Offset = "0x13B59F8", VA = "0x13B59F8", Slot = "10")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170006CA")]
		public override IEnumerable<JSONNode> Children
		{
			[Token(Token = "0x600328D")]
			[Address(RVA = "0x13B5F7C", Offset = "0x13B5F7C", VA = "0x13B5F7C", Slot = "22")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x931128", Offset = "0x931128")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6003289")]
		[Address(RVA = "0x13B5A4C", Offset = "0x13B5A4C", VA = "0x13B5A4C", Slot = "17")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x600328A")]
		[Address(RVA = "0x13B5BF8", Offset = "0x13B5BF8", VA = "0x13B5BF8", Slot = "19")]
		public override JSONNode Remove(string aKey)
		{
			return null;
		}

		[Token(Token = "0x600328B")]
		[Address(RVA = "0x13B5CC8", Offset = "0x13B5CC8", VA = "0x13B5CC8", Slot = "20")]
		public override JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x600328C")]
		[Address(RVA = "0x13B5DB0", Offset = "0x13B5DB0", VA = "0x13B5DB0", Slot = "21")]
		public override JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x600328E")]
		[Address(RVA = "0x13B5FE8", Offset = "0x13B5FE8", VA = "0x13B5FE8", Slot = "37")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x931188", Offset = "0x931188")]
		public IEnumerator GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x600328F")]
		[Address(RVA = "0x13B6054", Offset = "0x13B6054", VA = "0x13B6054", Slot = "36")]
		public override void Serialize(BinaryWriter aWriter)
		{
		}

		[Token(Token = "0x6003290")]
		[Address(RVA = "0x13B6250", Offset = "0x13B6250", VA = "0x13B6250", Slot = "24")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x6003291")]
		[Address(RVA = "0x13B28FC", Offset = "0x13B28FC", VA = "0x13B28FC")]
		public JSONObject()
		{
		}
	}
	[Token(Token = "0x200067D")]
	public class JSONString : JSONNode
	{
		[Token(Token = "0x4002C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string m_Data;

		[Token(Token = "0x170006CF")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x60032A4")]
			[Address(RVA = "0x17DCD44", Offset = "0x17DCD44", VA = "0x17DCD44", Slot = "25")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x170006D0")]
		public override bool IsString
		{
			[Token(Token = "0x60032A5")]
			[Address(RVA = "0x17DCD4C", Offset = "0x17DCD4C", VA = "0x17DCD4C", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170006D1")]
		public override string Value
		{
			[Token(Token = "0x60032A6")]
			[Address(RVA = "0x17DCD54", Offset = "0x17DCD54", VA = "0x17DCD54", Slot = "8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60032A7")]
			[Address(RVA = "0x17DCD5C", Offset = "0x17DCD5C", VA = "0x17DCD5C", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x60032A8")]
		[Address(RVA = "0x17DCD64", Offset = "0x17DCD64", VA = "0x17DCD64")]
		public JSONString(string aData)
		{
		}

		[Token(Token = "0x60032A9")]
		[Address(RVA = "0x17DCDDC", Offset = "0x17DCDDC", VA = "0x17DCDDC", Slot = "36")]
		public override void Serialize(BinaryWriter aWriter)
		{
		}

		[Token(Token = "0x60032AA")]
		[Address(RVA = "0x17DCE2C", Offset = "0x17DCE2C", VA = "0x17DCE2C", Slot = "24")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x60032AB")]
		[Address(RVA = "0x17DCEE4", Offset = "0x17DCEE4", VA = "0x17DCEE4", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60032AC")]
		[Address(RVA = "0x17DD01C", Offset = "0x17DD01C", VA = "0x17DD01C", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x200067E")]
	public class JSONNumber : JSONNode
	{
		[Token(Token = "0x4002C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private double m_Data;

		[Token(Token = "0x170006D2")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x60032AD")]
			[Address(RVA = "0x13B5164", Offset = "0x13B5164", VA = "0x13B5164", Slot = "25")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x170006D3")]
		public override bool IsNumber
		{
			[Token(Token = "0x60032AE")]
			[Address(RVA = "0x13B516C", Offset = "0x13B516C", VA = "0x13B516C", Slot = "11")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170006D4")]
		public override string Value
		{
			[Token(Token = "0x60032AF")]
			[Address(RVA = "0x13B5174", Offset = "0x13B5174", VA = "0x13B5174", Slot = "8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60032B0")]
			[Address(RVA = "0x13B5180", Offset = "0x13B5180", VA = "0x13B5180", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x170006D5")]
		public override double AsDouble
		{
			[Token(Token = "0x60032B1")]
			[Address(RVA = "0x13B5208", Offset = "0x13B5208", VA = "0x13B5208", Slot = "26")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x60032B2")]
			[Address(RVA = "0x13B5210", Offset = "0x13B5210", VA = "0x13B5210", Slot = "27")]
			set
			{
			}
		}

		[Token(Token = "0x60032B3")]
		[Address(RVA = "0x13B2B70", Offset = "0x13B2B70", VA = "0x13B2B70")]
		public JSONNumber(double aData)
		{
		}

		[Token(Token = "0x60032B4")]
		[Address(RVA = "0x13B5218", Offset = "0x13B5218", VA = "0x13B5218")]
		public JSONNumber(string aData)
		{
		}

		[Token(Token = "0x60032B5")]
		[Address(RVA = "0x13B529C", Offset = "0x13B529C", VA = "0x13B529C", Slot = "36")]
		public override void Serialize(BinaryWriter aWriter)
		{
		}

		[Token(Token = "0x60032B6")]
		[Address(RVA = "0x13B52EC", Offset = "0x13B52EC", VA = "0x13B52EC", Slot = "24")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x60032B7")]
		[Address(RVA = "0x13B530C", Offset = "0x13B530C", VA = "0x13B530C")]
		private static bool IsNumeric(object value)
		{
			return default(bool);
		}

		[Token(Token = "0x60032B8")]
		[Address(RVA = "0x13B54B0", Offset = "0x13B54B0", VA = "0x13B54B0", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60032B9")]
		[Address(RVA = "0x13B55F0", Offset = "0x13B55F0", VA = "0x13B55F0", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x200067F")]
	public class JSONBool : JSONNode
	{
		[Token(Token = "0x4002C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool m_Data;

		[Token(Token = "0x170006D6")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x60032BA")]
			[Address(RVA = "0x13B2318", Offset = "0x13B2318", VA = "0x13B2318", Slot = "25")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x170006D7")]
		public override bool IsBoolean
		{
			[Token(Token = "0x60032BB")]
			[Address(RVA = "0x13B2320", Offset = "0x13B2320", VA = "0x13B2320", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170006D8")]
		public override string Value
		{
			[Token(Token = "0x60032BC")]
			[Address(RVA = "0x13B2328", Offset = "0x13B2328", VA = "0x13B2328", Slot = "8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60032BD")]
			[Address(RVA = "0x13B2334", Offset = "0x13B2334", VA = "0x13B2334", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x170006D9")]
		public override bool AsBool
		{
			[Token(Token = "0x60032BE")]
			[Address(RVA = "0x13B23BC", Offset = "0x13B23BC", VA = "0x13B23BC", Slot = "32")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60032BF")]
			[Address(RVA = "0x13B23C4", Offset = "0x13B23C4", VA = "0x13B23C4", Slot = "33")]
			set
			{
			}
		}

		[Token(Token = "0x60032C0")]
		[Address(RVA = "0x13B23D0", Offset = "0x13B23D0", VA = "0x13B23D0")]
		public JSONBool(bool aData)
		{
		}

		[Token(Token = "0x60032C1")]
		[Address(RVA = "0x13B244C", Offset = "0x13B244C", VA = "0x13B244C")]
		public JSONBool(string aData)
		{
		}

		[Token(Token = "0x60032C2")]
		[Address(RVA = "0x13B24D0", Offset = "0x13B24D0", VA = "0x13B24D0", Slot = "36")]
		public override void Serialize(BinaryWriter aWriter)
		{
		}

		[Token(Token = "0x60032C3")]
		[Address(RVA = "0x13B251C", Offset = "0x13B251C", VA = "0x13B251C", Slot = "24")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x60032C4")]
		[Address(RVA = "0x13B25A0", Offset = "0x13B25A0", VA = "0x13B25A0", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60032C5")]
		[Address(RVA = "0x13B2624", Offset = "0x13B2624", VA = "0x13B2624", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000680")]
	public class JSONNull : JSONNode
	{
		[Token(Token = "0x170006DA")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x60032C6")]
			[Address(RVA = "0x13B4FE4", Offset = "0x13B4FE4", VA = "0x13B4FE4", Slot = "25")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x170006DB")]
		public override bool IsNull
		{
			[Token(Token = "0x60032C7")]
			[Address(RVA = "0x13B4FEC", Offset = "0x13B4FEC", VA = "0x13B4FEC", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170006DC")]
		public override string Value
		{
			[Token(Token = "0x60032C8")]
			[Address(RVA = "0x13B4FF4", Offset = "0x13B4FF4", VA = "0x13B4FF4", Slot = "8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60032C9")]
			[Address(RVA = "0x13B5038", Offset = "0x13B5038", VA = "0x13B5038", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x170006DD")]
		public override bool AsBool
		{
			[Token(Token = "0x60032CA")]
			[Address(RVA = "0x13B503C", Offset = "0x13B503C", VA = "0x13B503C", Slot = "32")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60032CB")]
			[Address(RVA = "0x13B5044", Offset = "0x13B5044", VA = "0x13B5044", Slot = "33")]
			set
			{
			}
		}

		[Token(Token = "0x60032CC")]
		[Address(RVA = "0x13B5048", Offset = "0x13B5048", VA = "0x13B5048", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60032CD")]
		[Address(RVA = "0x13B50E0", Offset = "0x13B50E0", VA = "0x13B50E0", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60032CE")]
		[Address(RVA = "0x13B50E8", Offset = "0x13B50E8", VA = "0x13B50E8", Slot = "36")]
		public override void Serialize(BinaryWriter aWriter)
		{
		}

		[Token(Token = "0x60032CF")]
		[Address(RVA = "0x13B510C", Offset = "0x13B510C", VA = "0x13B510C", Slot = "24")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x60032D0")]
		[Address(RVA = "0x13B1B6C", Offset = "0x13B1B6C", VA = "0x13B1B6C")]
		public JSONNull()
		{
		}
	}
	[Token(Token = "0x2000681")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x919C1C", Offset = "0x919C1C")]
	internal class JSONLazyCreator : JSONNode
	{
		[Token(Token = "0x4002C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private JSONNode m_Node;

		[Token(Token = "0x4002C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string m_Key;

		[Token(Token = "0x170006DE")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x60032D1")]
			[Address(RVA = "0x13B2630", Offset = "0x13B2630", VA = "0x13B2630", Slot = "25")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x170006DF")]
		public override JSONNode Item
		{
			[Token(Token = "0x60032D5")]
			[Address(RVA = "0x13B271C", Offset = "0x13B271C", VA = "0x13B271C", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60032D6")]
			[Address(RVA = "0x13B2778", Offset = "0x13B2778", VA = "0x13B2778", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x170006E0")]
		public override JSONNode Item
		{
			[Token(Token = "0x60032D7")]
			[Address(RVA = "0x13B2800", Offset = "0x13B2800", VA = "0x13B2800", Slot = "6")]
			get
			{
				return null;
			}
			[Token(Token = "0x60032D8")]
			[Address(RVA = "0x13B286C", Offset = "0x13B286C", VA = "0x13B286C", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x170006E1")]
		public override int AsInt
		{
			[Token(Token = "0x60032DF")]
			[Address(RVA = "0x13B2B08", Offset = "0x13B2B08", VA = "0x13B2B08", Slot = "28")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60032E0")]
			[Address(RVA = "0x13B2BE8", Offset = "0x13B2BE8", VA = "0x13B2BE8", Slot = "29")]
			set
			{
			}
		}

		[Token(Token = "0x170006E2")]
		public override float AsFloat
		{
			[Token(Token = "0x60032E1")]
			[Address(RVA = "0x13B2C54", Offset = "0x13B2C54", VA = "0x13B2C54", Slot = "30")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60032E2")]
			[Address(RVA = "0x13B2CBC", Offset = "0x13B2CBC", VA = "0x13B2CBC", Slot = "31")]
			set
			{
			}
		}

		[Token(Token = "0x170006E3")]
		public override double AsDouble
		{
			[Token(Token = "0x60032E3")]
			[Address(RVA = "0x13B2D28", Offset = "0x13B2D28", VA = "0x13B2D28", Slot = "26")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x60032E4")]
			[Address(RVA = "0x13B2D90", Offset = "0x13B2D90", VA = "0x13B2D90", Slot = "27")]
			set
			{
			}
		}

		[Token(Token = "0x170006E4")]
		public override bool AsBool
		{
			[Token(Token = "0x60032E5")]
			[Address(RVA = "0x13B2DFC", Offset = "0x13B2DFC", VA = "0x13B2DFC", Slot = "32")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60032E6")]
			[Address(RVA = "0x13B2E64", Offset = "0x13B2E64", VA = "0x13B2E64", Slot = "33")]
			set
			{
			}
		}

		[Token(Token = "0x170006E5")]
		public override JSONArray AsArray
		{
			[Token(Token = "0x60032E7")]
			[Address(RVA = "0x13B2ED0", Offset = "0x13B2ED0", VA = "0x13B2ED0", Slot = "34")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006E6")]
		public override JSONObject AsObject
		{
			[Token(Token = "0x60032E8")]
			[Address(RVA = "0x13B2F34", Offset = "0x13B2F34", VA = "0x13B2F34", Slot = "35")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60032D2")]
		[Address(RVA = "0x13B1850", Offset = "0x13B1850", VA = "0x13B1850")]
		public JSONLazyCreator(JSONNode aNode)
		{
		}

		[Token(Token = "0x60032D3")]
		[Address(RVA = "0x13B2638", Offset = "0x13B2638", VA = "0x13B2638")]
		public JSONLazyCreator(JSONNode aNode, string aKey)
		{
		}

		[Token(Token = "0x60032D4")]
		[Address(RVA = "0x13B26B4", Offset = "0x13B26B4", VA = "0x13B26B4")]
		private void Set(JSONNode aVal)
		{
		}

		[Token(Token = "0x60032D9")]
		[Address(RVA = "0x13B29A0", Offset = "0x13B29A0", VA = "0x13B29A0", Slot = "18")]
		public override void Add(JSONNode aItem)
		{
		}

		[Token(Token = "0x60032DA")]
		[Address(RVA = "0x13B2A28", Offset = "0x13B2A28", VA = "0x13B2A28", Slot = "17")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x60032DB")]
		[Address(RVA = "0x13B2AB8", Offset = "0x13B2AB8", VA = "0x13B2AB8")]
		public static bool operator ==(JSONLazyCreator a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x60032DC")]
		[Address(RVA = "0x13B2AD0", Offset = "0x13B2AD0", VA = "0x13B2AD0")]
		public static bool operator !=(JSONLazyCreator a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x60032DD")]
		[Address(RVA = "0x13B2AE8", Offset = "0x13B2AE8", VA = "0x13B2AE8", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60032DE")]
		[Address(RVA = "0x13B2B00", Offset = "0x13B2B00", VA = "0x13B2B00", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60032E9")]
		[Address(RVA = "0x13B2F98", Offset = "0x13B2F98", VA = "0x13B2F98", Slot = "24")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}
	}
	[Token(Token = "0x2000682")]
	public static class JSON
	{
		[Token(Token = "0x60032EA")]
		[Address(RVA = "0x13B10DC", Offset = "0x13B10DC", VA = "0x13B10DC")]
		public static JSONNode Parse(string aJSON)
		{
			return null;
		}
	}
}
namespace LightShaft.Scripts
{
	[Token(Token = "0x2000683")]
	public class YoutubePlayer : YoutubeSettings
	{
		[Token(Token = "0x2000684")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x919C54", Offset = "0x919C54")]
		private sealed class <WaitThingsGetDone>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002C84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002C85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002C86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public YoutubePlayer <>4__this;

			[Token(Token = "0x170006E7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003303")]
				[Address(RVA = "0x11BE188", Offset = "0x11BE188", VA = "0x11BE188", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006E8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003305")]
				[Address(RVA = "0x11BE1D0", Offset = "0x11BE1D0", VA = "0x11BE1D0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003300")]
			[Address(RVA = "0x11BE074", Offset = "0x11BE074", VA = "0x11BE074")]
			[DebuggerHidden]
			public <WaitThingsGetDone>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x6003301")]
			[Address(RVA = "0x11BE0A0", Offset = "0x11BE0A0", VA = "0x11BE0A0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003302")]
			[Address(RVA = "0x11BE0A4", Offset = "0x11BE0A4", VA = "0x11BE0A4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003304")]
			[Address(RVA = "0x11BE190", Offset = "0x11BE190", VA = "0x11BE190", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x60032EB")]
		[Address(RVA = "0x12687C0", Offset = "0x12687C0", VA = "0x12687C0", Slot = "4")]
		public override void Start()
		{
		}

		[Token(Token = "0x60032EC")]
		[Address(RVA = "0x1268B24", Offset = "0x1268B24", VA = "0x1268B24")]
		private void UrlReadyToUse(string urlToUse)
		{
		}

		[Token(Token = "0x60032ED")]
		[Address(RVA = "0x1268C90", Offset = "0x1268C90", VA = "0x1268C90")]
		public string GetVideoTitle()
		{
			return null;
		}

		[Token(Token = "0x60032EE")]
		[Address(RVA = "0x1268000", Offset = "0x1268000", VA = "0x1268000")]
		public void LoadUrl(string url)
		{
		}

		[Token(Token = "0x60032EF")]
		[Address(RVA = "0x1267E98", Offset = "0x1267E98", VA = "0x1267E98")]
		public void PreLoadVideo(string url)
		{
		}

		[Token(Token = "0x60032F0")]
		[Address(RVA = "0x1269014", Offset = "0x1269014", VA = "0x1269014")]
		public void Play(int startTime)
		{
		}

		[Token(Token = "0x60032F1")]
		[Address(RVA = "0x1268098", Offset = "0x1268098", VA = "0x1268098")]
		public void Play(string url)
		{
		}

		[Token(Token = "0x60032F2")]
		[Address(RVA = "0x12682B8", Offset = "0x12682B8", VA = "0x12682B8")]
		public void Play(string[] playlistUrls)
		{
		}

		[Token(Token = "0x60032F3")]
		[Address(RVA = "0x1269170", Offset = "0x1269170", VA = "0x1269170", Slot = "5")]
		public override void Play()
		{
		}

		[Token(Token = "0x60032F4")]
		[Address(RVA = "0x126812C", Offset = "0x126812C", VA = "0x126812C")]
		public void Play(string url, int startFrom)
		{
		}

		[Token(Token = "0x60032F5")]
		[Address(RVA = "0x12692DC", Offset = "0x12692DC", VA = "0x12692DC")]
		public void PlayPause()
		{
		}

		[Token(Token = "0x60032F6")]
		[Address(RVA = "0x12693D4", Offset = "0x12693D4", VA = "0x12693D4")]
		public void ToogleFullsScreenMode()
		{
		}

		[Token(Token = "0x60032F7")]
		[Address(RVA = "0x12694B4", Offset = "0x12694B4", VA = "0x12694B4")]
		public void OnVideoPlayerFinished()
		{
		}

		[Token(Token = "0x60032F8")]
		[Address(RVA = "0x12697E8", Offset = "0x12697E8", VA = "0x12697E8")]
		private void OnVideoLoaded()
		{
		}

		[Token(Token = "0x60032F9")]
		[Address(RVA = "0x1269784", Offset = "0x1269784", VA = "0x1269784")]
		public void CallNextUrl()
		{
		}

		[Token(Token = "0x60032FA")]
		[Address(RVA = "0x12699DC", Offset = "0x12699DC", VA = "0x12699DC")]
		public void CallPreviousUrl()
		{
		}

		[Token(Token = "0x60032FB")]
		[Address(RVA = "0x1269A38", Offset = "0x1269A38", VA = "0x1269A38")]
		private void OnApplicationPause(bool pause)
		{
		}

		[Token(Token = "0x60032FC")]
		[Address(RVA = "0x1269AFC", Offset = "0x1269AFC", VA = "0x1269AFC")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x60032FD")]
		[Address(RVA = "0x1269C8C", Offset = "0x1269C8C", VA = "0x1269C8C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60032FE")]
		[Address(RVA = "0x1269CD8", Offset = "0x1269CD8", VA = "0x1269CD8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9312A8", Offset = "0x9312A8")]
		private IEnumerator WaitThingsGetDone()
		{
			return null;
		}

		[Token(Token = "0x60032FF")]
		[Address(RVA = "0x1269D44", Offset = "0x1269D44", VA = "0x1269D44")]
		public YoutubePlayer()
		{
		}
	}
	[Token(Token = "0x2000685")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x919C64", Offset = "0x919C64")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x919C64", Offset = "0x919C64")]
	public class YoutubeSettings : MonoBehaviour
	{
		[Token(Token = "0x2000686")]
		public enum YoutubeVideoQuality
		{
			[Token(Token = "0x4002CF0")]
			STANDARD,
			[Token(Token = "0x4002CF1")]
			HD,
			[Token(Token = "0x4002CF2")]
			FULLHD,
			[Token(Token = "0x4002CF3")]
			UHD1440,
			[Token(Token = "0x4002CF4")]
			UHD2160
		}

		[Token(Token = "0x2000687")]
		public enum VideoFormatType
		{
			[Token(Token = "0x4002CF6")]
			MP4,
			[Token(Token = "0x4002CF7")]
			WEBM
		}

		[Token(Token = "0x2000688")]
		public enum Layout3D
		{
			[Token(Token = "0x4002CF9")]
			SideBySide,
			[Token(Token = "0x4002CFA")]
			OverUnder,
			[Token(Token = "0x4002CFB")]
			EAC,
			[Token(Token = "0x4002CFC")]
			EAC3D
		}

		[Token(Token = "0x2000689")]
		public class Html5PlayerResult
		{
			[Token(Token = "0x4002CFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string scriptName;

			[Token(Token = "0x4002CFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string result;

			[Token(Token = "0x4002CFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool isValid;

			[Token(Token = "0x6003370")]
			[Address(RVA = "0x11C5A38", Offset = "0x11C5A38", VA = "0x11C5A38")]
			public Html5PlayerResult(string _script, string _result, bool _valid)
			{
			}
		}

		[Token(Token = "0x200068A")]
		private class DownloadUrlResponse
		{
			[Token(Token = "0x4002D00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string data;

			[Token(Token = "0x4002D01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool isValid;

			[Token(Token = "0x4002D02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public long httpCode;

			[Token(Token = "0x6003371")]
			[Address(RVA = "0x11BFAA4", Offset = "0x11BFAA4", VA = "0x11BFAA4")]
			public DownloadUrlResponse()
			{
			}
		}

		[Token(Token = "0x200068B")]
		private class ExtractionInfo
		{
			[Token(Token = "0x4002D03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9221F8", Offset = "0x9221F8")]
			private bool <RequiresDecryption>k__BackingField;

			[Token(Token = "0x4002D04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x922208", Offset = "0x922208")]
			private Uri <Uri>k__BackingField;

			[Token(Token = "0x170006E9")]
			public bool RequiresDecryption
			{
				[Token(Token = "0x6003372")]
				[Address(RVA = "0x11C5A14", Offset = "0x11C5A14", VA = "0x11C5A14")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x931BF8", Offset = "0x931BF8")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6003373")]
				[Address(RVA = "0x11C5A1C", Offset = "0x11C5A1C", VA = "0x11C5A1C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x931C08", Offset = "0x931C08")]
				set
				{
				}
			}

			[Token(Token = "0x170006EA")]
			public Uri Uri
			{
				[Token(Token = "0x6003374")]
				[Address(RVA = "0x11C5A28", Offset = "0x11C5A28", VA = "0x11C5A28")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x931C18", Offset = "0x931C18")]
				get
				{
					return null;
				}
				[Token(Token = "0x6003375")]
				[Address(RVA = "0x11C5A30", Offset = "0x11C5A30", VA = "0x11C5A30")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x931C28", Offset = "0x931C28")]
				set
				{
				}
			}

			[Token(Token = "0x6003376")]
			[Address(RVA = "0x11C1F98", Offset = "0x11C1F98", VA = "0x11C1F98")]
			public ExtractionInfo()
			{
			}
		}

		[Token(Token = "0x200068C")]
		private class MagicContent
		{
			[Token(Token = "0x4002D05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string[] defaultFuncName;

			[Token(Token = "0x4002D06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string defaultHtmlJson;

			[Token(Token = "0x4002D07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string defaultHtmlPlayerVersion;

			[Token(Token = "0x6003377")]
			[Address(RVA = "0x11C5A7C", Offset = "0x11C5A7C", VA = "0x11C5A7C")]
			public MagicContent()
			{
			}
		}

		[Token(Token = "0x200068D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x919CF8", Offset = "0x919CF8")]
		private sealed class <YoutubeGenerateUrlUsingClient>d__60 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public YoutubeSettings <>4__this;

			[Token(Token = "0x4002D0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private UnityWebRequest <request>5__2;

			[Token(Token = "0x170006EB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600337B")]
				[Address(RVA = "0x11C471C", Offset = "0x11C471C", VA = "0x11C471C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006EC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600337D")]
				[Address(RVA = "0x11C4764", Offset = "0x11C4764", VA = "0x11C4764", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003378")]
			[Address(RVA = "0x11C4328", Offset = "0x11C4328", VA = "0x11C4328")]
			[DebuggerHidden]
			public <YoutubeGenerateUrlUsingClient>d__60(int <>1__state)
			{
			}

			[Token(Token = "0x6003379")]
			[Address(RVA = "0x11C4354", Offset = "0x11C4354", VA = "0x11C4354", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600337A")]
			[Address(RVA = "0x11C4358", Offset = "0x11C4358", VA = "0x11C4358", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600337C")]
			[Address(RVA = "0x11C4724", Offset = "0x11C4724", VA = "0x11C4724", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200068E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x919D08", Offset = "0x919D08")]
		private sealed class <YoutubeGeneratorSysCall>d__61 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string _videoUrl;

			[Token(Token = "0x4002D0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string _formatCode;

			[Token(Token = "0x4002D10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public YoutubeSettings <>4__this;

			[Token(Token = "0x4002D11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UnityWebRequest <request>5__2;

			[Token(Token = "0x170006ED")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003381")]
				[Address(RVA = "0x11C4A60", Offset = "0x11C4A60", VA = "0x11C4A60", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006EE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003383")]
				[Address(RVA = "0x11C4AA8", Offset = "0x11C4AA8", VA = "0x11C4AA8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600337E")]
			[Address(RVA = "0x11C476C", Offset = "0x11C476C", VA = "0x11C476C")]
			[DebuggerHidden]
			public <YoutubeGeneratorSysCall>d__61(int <>1__state)
			{
			}

			[Token(Token = "0x600337F")]
			[Address(RVA = "0x11C4798", Offset = "0x11C4798", VA = "0x11C4798", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003380")]
			[Address(RVA = "0x11C479C", Offset = "0x11C479C", VA = "0x11C479C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003382")]
			[Address(RVA = "0x11C4A68", Offset = "0x11C4A68", VA = "0x11C4A68", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200068F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x919D18", Offset = "0x919D18")]
		private sealed class <WaitAndTryConnectToServerAgain>d__62 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public YoutubeSettings <>4__this;

			[Token(Token = "0x170006EF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003387")]
				[Address(RVA = "0x11C2C60", Offset = "0x11C2C60", VA = "0x11C2C60", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006F0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003389")]
				[Address(RVA = "0x11C2CA8", Offset = "0x11C2CA8", VA = "0x11C2CA8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003384")]
			[Address(RVA = "0x11C2B8C", Offset = "0x11C2B8C", VA = "0x11C2B8C")]
			[DebuggerHidden]
			public <WaitAndTryConnectToServerAgain>d__62(int <>1__state)
			{
			}

			[Token(Token = "0x6003385")]
			[Address(RVA = "0x11C2BB8", Offset = "0x11C2BB8", VA = "0x11C2BB8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003386")]
			[Address(RVA = "0x11C2BBC", Offset = "0x11C2BBC", VA = "0x11C2BBC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003388")]
			[Address(RVA = "0x11C2C68", Offset = "0x11C2C68", VA = "0x11C2C68", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000690")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x919D28", Offset = "0x919D28")]
		private sealed class <DownloadThumbnail>d__74 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string videoId;

			[Token(Token = "0x4002D18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public YoutubeSettings <>4__this;

			[Token(Token = "0x4002D19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UnityWebRequest <request>5__2;

			[Token(Token = "0x170006F1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600338D")]
				[Address(RVA = "0x11BF3CC", Offset = "0x11BF3CC", VA = "0x11BF3CC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006F2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600338F")]
				[Address(RVA = "0x11BF414", Offset = "0x11BF414", VA = "0x11BF414", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600338A")]
			[Address(RVA = "0x11BF298", Offset = "0x11BF298", VA = "0x11BF298")]
			[DebuggerHidden]
			public <DownloadThumbnail>d__74(int <>1__state)
			{
			}

			[Token(Token = "0x600338B")]
			[Address(RVA = "0x11BF2C4", Offset = "0x11BF2C4", VA = "0x11BF2C4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600338C")]
			[Address(RVA = "0x11BF2C8", Offset = "0x11BF2C8", VA = "0x11BF2C8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600338E")]
			[Address(RVA = "0x11BF3D4", Offset = "0x11BF3D4", VA = "0x11BF3D4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000691")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x919D38", Offset = "0x919D38")]
		private sealed class <>c
		{
			[Token(Token = "0x4002D1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002D1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<VideoInfo, bool> <>9__89_0;

			[Token(Token = "0x4002D1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<VideoInfo, bool> <>9__89_1;

			[Token(Token = "0x6003391")]
			[Address(RVA = "0x11BF0A4", Offset = "0x11BF0A4", VA = "0x11BF0A4")]
			public <>c()
			{
			}

			[Token(Token = "0x6003392")]
			[Address(RVA = "0x11BF0AC", Offset = "0x11BF0AC", VA = "0x11BF0AC")]
			internal bool <UrlsLoaded>b__89_0(VideoInfo info)
			{
				return default(bool);
			}

			[Token(Token = "0x6003393")]
			[Address(RVA = "0x11BF0CC", Offset = "0x11BF0CC", VA = "0x11BF0CC")]
			internal bool <UrlsLoaded>b__89_1(VideoInfo info)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000692")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x919D48", Offset = "0x919D48")]
		private sealed class <HandHeldPlayback>d__91 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public YoutubeSettings <>4__this;

			[Token(Token = "0x170006F3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003397")]
				[Address(RVA = "0x11C21A8", Offset = "0x11C21A8", VA = "0x11C21A8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006F4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003399")]
				[Address(RVA = "0x11C21F0", Offset = "0x11C21F0", VA = "0x11C21F0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003394")]
			[Address(RVA = "0x11C209C", Offset = "0x11C209C", VA = "0x11C209C")]
			[DebuggerHidden]
			public <HandHeldPlayback>d__91(int <>1__state)
			{
			}

			[Token(Token = "0x6003395")]
			[Address(RVA = "0x11C20C8", Offset = "0x11C20C8", VA = "0x11C20C8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003396")]
			[Address(RVA = "0x11C20CC", Offset = "0x11C20CC", VA = "0x11C20CC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003398")]
			[Address(RVA = "0x11C21B0", Offset = "0x11C21B0", VA = "0x11C21B0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000693")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x919D58", Offset = "0x919D58")]
		private sealed class <DelayPlay>d__92 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public YoutubeSettings <>4__this;

			[Token(Token = "0x170006F5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600339D")]
				[Address(RVA = "0x11BF248", Offset = "0x11BF248", VA = "0x11BF248", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006F6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600339F")]
				[Address(RVA = "0x11BF290", Offset = "0x11BF290", VA = "0x11BF290", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600339A")]
			[Address(RVA = "0x11BF168", Offset = "0x11BF168", VA = "0x11BF168")]
			[DebuggerHidden]
			public <DelayPlay>d__92(int <>1__state)
			{
			}

			[Token(Token = "0x600339B")]
			[Address(RVA = "0x11BF194", Offset = "0x11BF194", VA = "0x11BF194", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600339C")]
			[Address(RVA = "0x11BF198", Offset = "0x11BF198", VA = "0x11BF198", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600339E")]
			[Address(RVA = "0x11BF250", Offset = "0x11BF250", VA = "0x11BF250", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000694")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x919D68", Offset = "0x919D68")]
		private sealed class <WebRequest>d__97 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string videoID;

			[Token(Token = "0x4002D26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public YoutubeSettings <>4__this;

			[Token(Token = "0x4002D27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UnityWebRequest <request>5__2;

			[Token(Token = "0x170006F7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60033A3")]
				[Address(RVA = "0x11C42D8", Offset = "0x11C42D8", VA = "0x11C42D8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006F8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60033A5")]
				[Address(RVA = "0x11C4320", Offset = "0x11C4320", VA = "0x11C4320", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60033A0")]
			[Address(RVA = "0x11C3A04", Offset = "0x11C3A04", VA = "0x11C3A04")]
			[DebuggerHidden]
			public <WebRequest>d__97(int <>1__state)
			{
			}

			[Token(Token = "0x60033A1")]
			[Address(RVA = "0x11C3A30", Offset = "0x11C3A30", VA = "0x11C3A30", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60033A2")]
			[Address(RVA = "0x11C3A34", Offset = "0x11C3A34", VA = "0x11C3A34", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60033A4")]
			[Address(RVA = "0x11C42E0", Offset = "0x11C42E0", VA = "0x11C42E0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000695")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x919D78", Offset = "0x919D78")]
		private sealed class <VideoRequest>d__103 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string url;

			[Token(Token = "0x4002D2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public YoutubeSettings <>4__this;

			[Token(Token = "0x4002D2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action callback;

			[Token(Token = "0x4002D2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UnityWebRequest <request>5__2;

			[Token(Token = "0x170006F9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60033A9")]
				[Address(RVA = "0x11C29FC", Offset = "0x11C29FC", VA = "0x11C29FC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006FA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60033AB")]
				[Address(RVA = "0x11C2A44", Offset = "0x11C2A44", VA = "0x11C2A44", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60033A6")]
			[Address(RVA = "0x11C286C", Offset = "0x11C286C", VA = "0x11C286C")]
			[DebuggerHidden]
			public <VideoRequest>d__103(int <>1__state)
			{
			}

			[Token(Token = "0x60033A7")]
			[Address(RVA = "0x11C2898", Offset = "0x11C2898", VA = "0x11C2898", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60033A8")]
			[Address(RVA = "0x11C289C", Offset = "0x11C289C", VA = "0x11C289C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60033AA")]
			[Address(RVA = "0x11C2A04", Offset = "0x11C2A04", VA = "0x11C2A04", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000696")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x919D88", Offset = "0x919D88")]
		private sealed class <PreventFinishToBeCalledTwoTimes>d__107 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public YoutubeSettings <>4__this;

			[Token(Token = "0x170006FB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60033AF")]
				[Address(RVA = "0x11C25EC", Offset = "0x11C25EC", VA = "0x11C25EC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006FC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60033B1")]
				[Address(RVA = "0x11C2634", Offset = "0x11C2634", VA = "0x11C2634", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60033AC")]
			[Address(RVA = "0x11C2514", Offset = "0x11C2514", VA = "0x11C2514")]
			[DebuggerHidden]
			public <PreventFinishToBeCalledTwoTimes>d__107(int <>1__state)
			{
			}

			[Token(Token = "0x60033AD")]
			[Address(RVA = "0x11C2540", Offset = "0x11C2540", VA = "0x11C2540", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60033AE")]
			[Address(RVA = "0x11C2544", Offset = "0x11C2544", VA = "0x11C2544", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60033B0")]
			[Address(RVA = "0x11C25F4", Offset = "0x11C25F4", VA = "0x11C25F4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000697")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x919D98", Offset = "0x919D98")]
		private sealed class <SeekFinished>d__129 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public YoutubeSettings <>4__this;

			[Token(Token = "0x170006FD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60033B5")]
				[Address(RVA = "0x11C281C", Offset = "0x11C281C", VA = "0x11C281C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006FE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60033B7")]
				[Address(RVA = "0x11C2864", Offset = "0x11C2864", VA = "0x11C2864", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60033B2")]
			[Address(RVA = "0x11C274C", Offset = "0x11C274C", VA = "0x11C274C")]
			[DebuggerHidden]
			public <SeekFinished>d__129(int <>1__state)
			{
			}

			[Token(Token = "0x60033B3")]
			[Address(RVA = "0x11C2778", Offset = "0x11C2778", VA = "0x11C2778", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60033B4")]
			[Address(RVA = "0x11C277C", Offset = "0x11C277C", VA = "0x11C277C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60033B6")]
			[Address(RVA = "0x11C2824", Offset = "0x11C2824", VA = "0x11C2824", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000698")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x919DA8", Offset = "0x919DA8")]
		private sealed class <>c__DisplayClass136_0
		{
			[Token(Token = "0x4002D34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public YoutubeSettings <>4__this;

			[Token(Token = "0x4002D35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string r;

			[Token(Token = "0x60033B8")]
			[Address(RVA = "0x11BF0EC", Offset = "0x11BF0EC", VA = "0x11BF0EC")]
			public <>c__DisplayClass136_0()
			{
			}

			[Token(Token = "0x60033B9")]
			[Address(RVA = "0x11BF0F4", Offset = "0x11BF0F4", VA = "0x11BF0F4")]
			internal void <ReadyForExtract>b__0()
			{
			}

			[Token(Token = "0x60033BA")]
			[Address(RVA = "0x11BF118", Offset = "0x11BF118", VA = "0x11BF118")]
			internal void <ReadyForExtract>b__1()
			{
			}
		}

		[Token(Token = "0x2000699")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x919DB8", Offset = "0x919DB8")]
		private sealed class <Downloader>d__137 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string uri;

			[Token(Token = "0x4002D39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public YoutubeSettings <>4__this;

			[Token(Token = "0x4002D3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool audio;

			[Token(Token = "0x4002D3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UnityWebRequest <request>5__2;

			[Token(Token = "0x170006FF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60033BE")]
				[Address(RVA = "0x11BFC40", Offset = "0x11BFC40", VA = "0x11BFC40", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000700")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60033C0")]
				[Address(RVA = "0x11BFC88", Offset = "0x11BFC88", VA = "0x11BFC88", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60033BB")]
			[Address(RVA = "0x11BFB24", Offset = "0x11BFB24", VA = "0x11BFB24")]
			[DebuggerHidden]
			public <Downloader>d__137(int <>1__state)
			{
			}

			[Token(Token = "0x60033BC")]
			[Address(RVA = "0x11BFB50", Offset = "0x11BFB50", VA = "0x11BFB50", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60033BD")]
			[Address(RVA = "0x11BFB54", Offset = "0x11BFB54", VA = "0x11BFB54", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60033BF")]
			[Address(RVA = "0x11BFC48", Offset = "0x11BFC48", VA = "0x11BFC48", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200069A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x919DC8", Offset = "0x919DC8")]
		private sealed class <WebGlRequest>d__139 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string videoID;

			[Token(Token = "0x4002D3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public YoutubeSettings <>4__this;

			[Token(Token = "0x4002D40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UnityWebRequest <request>5__2;

			[Token(Token = "0x17000701")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60033C4")]
				[Address(RVA = "0x11C3798", Offset = "0x11C3798", VA = "0x11C3798", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000702")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60033C6")]
				[Address(RVA = "0x11C37E0", Offset = "0x11C37E0", VA = "0x11C37E0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60033C1")]
			[Address(RVA = "0x11C2F28", Offset = "0x11C2F28", VA = "0x11C2F28")]
			[DebuggerHidden]
			public <WebGlRequest>d__139(int <>1__state)
			{
			}

			[Token(Token = "0x60033C2")]
			[Address(RVA = "0x11C2F54", Offset = "0x11C2F54", VA = "0x11C2F54", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60033C3")]
			[Address(RVA = "0x11C2F58", Offset = "0x11C2F58", VA = "0x11C2F58", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60033C5")]
			[Address(RVA = "0x11C37A0", Offset = "0x11C37A0", VA = "0x11C37A0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200069B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x919DD8", Offset = "0x919DD8")]
		private sealed class <WebGLPlay>d__142 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public YoutubeSettings <>4__this;

			[Token(Token = "0x17000703")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60033CA")]
				[Address(RVA = "0x11C2ED8", Offset = "0x11C2ED8", VA = "0x11C2ED8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000704")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60033CC")]
				[Address(RVA = "0x11C2F20", Offset = "0x11C2F20", VA = "0x11C2F20", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60033C7")]
			[Address(RVA = "0x11C2E04", Offset = "0x11C2E04", VA = "0x11C2E04")]
			[DebuggerHidden]
			public <WebGLPlay>d__142(int <>1__state)
			{
			}

			[Token(Token = "0x60033C8")]
			[Address(RVA = "0x11C2E30", Offset = "0x11C2E30", VA = "0x11C2E30", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60033C9")]
			[Address(RVA = "0x11C2E34", Offset = "0x11C2E34", VA = "0x11C2E34", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60033CB")]
			[Address(RVA = "0x11C2EE0", Offset = "0x11C2EE0", VA = "0x11C2EE0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200069C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x919DE8", Offset = "0x919DE8")]
		private sealed class <WebGlRequest>d__168 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string host;

			[Token(Token = "0x4002D47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string id;

			[Token(Token = "0x4002D48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public YoutubeSettings <>4__this;

			[Token(Token = "0x4002D49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Action<string> callback;

			[Token(Token = "0x4002D4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private UnityWebRequest <request>5__2;

			[Token(Token = "0x17000705")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60033D0")]
				[Address(RVA = "0x11C39B4", Offset = "0x11C39B4", VA = "0x11C39B4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000706")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60033D2")]
				[Address(RVA = "0x11C39FC", Offset = "0x11C39FC", VA = "0x11C39FC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60033CD")]
			[Address(RVA = "0x11C37E8", Offset = "0x11C37E8", VA = "0x11C37E8")]
			[DebuggerHidden]
			public <WebGlRequest>d__168(int <>1__state)
			{
			}

			[Token(Token = "0x60033CE")]
			[Address(RVA = "0x11C3814", Offset = "0x11C3814", VA = "0x11C3814", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60033CF")]
			[Address(RVA = "0x11C3818", Offset = "0x11C3818", VA = "0x11C3818", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60033D1")]
			[Address(RVA = "0x11C39BC", Offset = "0x11C39BC", VA = "0x11C39BC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200069D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x919DF8", Offset = "0x919DF8")]
		private sealed class <YoutubeURLDownloadFinished>d__172 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public YoutubeSettings <>4__this;

			[Token(Token = "0x4002D4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action callback;

			[Token(Token = "0x4002D4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public YoutubeSettings player;

			[Token(Token = "0x4002D50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UnityWebRequest <request>5__2;

			[Token(Token = "0x17000707")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60033D6")]
				[Address(RVA = "0x11C59C4", Offset = "0x11C59C4", VA = "0x11C59C4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000708")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60033D8")]
				[Address(RVA = "0x11C5A0C", Offset = "0x11C5A0C", VA = "0x11C5A0C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60033D3")]
			[Address(RVA = "0x11C4AB0", Offset = "0x11C4AB0", VA = "0x11C4AB0")]
			[DebuggerHidden]
			public <YoutubeURLDownloadFinished>d__172(int <>1__state)
			{
			}

			[Token(Token = "0x60033D4")]
			[Address(RVA = "0x11C4ADC", Offset = "0x11C4ADC", VA = "0x11C4ADC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60033D5")]
			[Address(RVA = "0x11C4AE0", Offset = "0x11C4AE0", VA = "0x11C4AE0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60033D7")]
			[Address(RVA = "0x11C59CC", Offset = "0x11C59CC", VA = "0x11C59CC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200069E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x919E08", Offset = "0x919E08")]
		private sealed class <ExtractDownloadUrls>d__176 : IEnumerable<ExtractionInfo>, IEnumerable, IEnumerator<ExtractionInfo>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private ExtractionInfo <>2__current;

			[Token(Token = "0x4002D53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4002D54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private JObject json;

			[Token(Token = "0x4002D55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public JObject <>3__json;

			[Token(Token = "0x4002D56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private List<string> <urls>5__2;

			[Token(Token = "0x4002D57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private List<string>.Enumerator <>7__wrap2;

			[Token(Token = "0x17000709")]
			private ExtractionInfo System.Collections.Generic.IEnumerator<LightShaft.Scripts.YoutubeSettings.ExtractionInfo>.Current
			{
				[Token(Token = "0x60033DE")]
				[Address(RVA = "0x11C1FA0", Offset = "0x11C1FA0", VA = "0x11C1FA0", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700070A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60033E0")]
				[Address(RVA = "0x11C1FE8", Offset = "0x11C1FE8", VA = "0x11C1FE8", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60033D9")]
			[Address(RVA = "0x11BFC90", Offset = "0x11BFC90", VA = "0x11BFC90")]
			[DebuggerHidden]
			public <ExtractDownloadUrls>d__176(int <>1__state)
			{
			}

			[Token(Token = "0x60033DA")]
			[Address(RVA = "0x11BFCC8", Offset = "0x11BFCC8", VA = "0x11BFCC8", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60033DB")]
			[Address(RVA = "0x11BFE00", Offset = "0x11BFE00", VA = "0x11BFE00", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60033DC")]
			[Address(RVA = "0x11BFD58", Offset = "0x11BFD58", VA = "0x11BFD58")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60033DD")]
			[Address(RVA = "0x11BFDAC", Offset = "0x11BFDAC", VA = "0x11BFDAC")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x60033DF")]
			[Address(RVA = "0x11C1FA8", Offset = "0x11C1FA8", VA = "0x11C1FA8", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60033E1")]
			[Address(RVA = "0x11C1FF0", Offset = "0x11C1FF0", VA = "0x11C1FF0", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<ExtractionInfo> System.Collections.Generic.IEnumerable<LightShaft.Scripts.YoutubeSettings.ExtractionInfo>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60033E2")]
			[Address(RVA = "0x11C2098", Offset = "0x11C2098", VA = "0x11C2098", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x200069F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x919E18", Offset = "0x919E18")]
		private sealed class <>c__DisplayClass182_0
		{
			[Token(Token = "0x4002D58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int formatCode;

			[Token(Token = "0x60033E3")]
			[Address(RVA = "0x11BF13C", Offset = "0x11BF13C", VA = "0x11BF13C")]
			public <>c__DisplayClass182_0()
			{
			}

			[Token(Token = "0x60033E4")]
			[Address(RVA = "0x11BF144", Offset = "0x11BF144", VA = "0x11BF144")]
			internal bool <GetVideoInfos>b__0(VideoInfo videoInfo)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20006A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x919E28", Offset = "0x919E28")]
		private sealed class <DownloadUrl>d__189 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string url;

			[Token(Token = "0x4002D5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public YoutubeSettings <>4__this;

			[Token(Token = "0x4002D5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UnityWebRequest <request>5__2;

			[Token(Token = "0x1700070B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60033E8")]
				[Address(RVA = "0x11BF648", Offset = "0x11BF648", VA = "0x11BF648", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700070C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60033EA")]
				[Address(RVA = "0x11BF690", Offset = "0x11BF690", VA = "0x11BF690", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60033E5")]
			[Address(RVA = "0x11BF41C", Offset = "0x11BF41C", VA = "0x11BF41C")]
			[DebuggerHidden]
			public <DownloadUrl>d__189(int <>1__state)
			{
			}

			[Token(Token = "0x60033E6")]
			[Address(RVA = "0x11BF448", Offset = "0x11BF448", VA = "0x11BF448", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60033E7")]
			[Address(RVA = "0x11BF44C", Offset = "0x11BF44C", VA = "0x11BF44C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60033E9")]
			[Address(RVA = "0x11BF650", Offset = "0x11BF650", VA = "0x11BF650", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006A1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x919E38", Offset = "0x919E38")]
		private sealed class <DownloadYoutubeUrl>d__191 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public YoutubeSettings <>4__this;

			[Token(Token = "0x4002D61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string url;

			[Token(Token = "0x4002D62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action callback;

			[Token(Token = "0x4002D63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public YoutubeSettings player;

			[Token(Token = "0x4002D64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private UnityWebRequest <request>5__2;

			[Token(Token = "0x1700070D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60033EE")]
				[Address(RVA = "0x11BFAD4", Offset = "0x11BFAD4", VA = "0x11BFAD4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700070E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60033F0")]
				[Address(RVA = "0x11BFB1C", Offset = "0x11BFB1C", VA = "0x11BFB1C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60033EB")]
			[Address(RVA = "0x11BF698", Offset = "0x11BF698", VA = "0x11BF698")]
			[DebuggerHidden]
			public <DownloadYoutubeUrl>d__191(int <>1__state)
			{
			}

			[Token(Token = "0x60033EC")]
			[Address(RVA = "0x11BF6C4", Offset = "0x11BF6C4", VA = "0x11BF6C4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60033ED")]
			[Address(RVA = "0x11BF6C8", Offset = "0x11BF6C8", VA = "0x11BF6C8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60033EF")]
			[Address(RVA = "0x11BFADC", Offset = "0x11BFADC", VA = "0x11BFADC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006A2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x919E48", Offset = "0x919E48")]
		private sealed class <VideoSeekCall>d__199 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public YoutubeSettings <>4__this;

			[Token(Token = "0x1700070F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60033F4")]
				[Address(RVA = "0x11C2B3C", Offset = "0x11C2B3C", VA = "0x11C2B3C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000710")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60033F6")]
				[Address(RVA = "0x11C2B84", Offset = "0x11C2B84", VA = "0x11C2B84", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60033F1")]
			[Address(RVA = "0x11C2A4C", Offset = "0x11C2A4C", VA = "0x11C2A4C")]
			[DebuggerHidden]
			public <VideoSeekCall>d__199(int <>1__state)
			{
			}

			[Token(Token = "0x60033F2")]
			[Address(RVA = "0x11C2A78", Offset = "0x11C2A78", VA = "0x11C2A78", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60033F3")]
			[Address(RVA = "0x11C2A7C", Offset = "0x11C2A7C", VA = "0x11C2A7C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60033F5")]
			[Address(RVA = "0x11C2B44", Offset = "0x11C2B44", VA = "0x11C2B44", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006A3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x919E58", Offset = "0x919E58")]
		private sealed class <WaitSync>d__203 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public YoutubeSettings <>4__this;

			[Token(Token = "0x17000711")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60033FA")]
				[Address(RVA = "0x11C2DB4", Offset = "0x11C2DB4", VA = "0x11C2DB4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000712")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60033FC")]
				[Address(RVA = "0x11C2DFC", Offset = "0x11C2DFC", VA = "0x11C2DFC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60033F7")]
			[Address(RVA = "0x11C2CB0", Offset = "0x11C2CB0", VA = "0x11C2CB0")]
			[DebuggerHidden]
			public <WaitSync>d__203(int <>1__state)
			{
			}

			[Token(Token = "0x60033F8")]
			[Address(RVA = "0x11C2CDC", Offset = "0x11C2CDC", VA = "0x11C2CDC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60033F9")]
			[Address(RVA = "0x11C2CE0", Offset = "0x11C2CE0", VA = "0x11C2CE0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60033FB")]
			[Address(RVA = "0x11C2DBC", Offset = "0x11C2DBC", VA = "0x11C2DBC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x919E68", Offset = "0x919E68")]
		private sealed class <PlayNow>d__204 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public YoutubeSettings <>4__this;

			[Token(Token = "0x17000713")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003400")]
				[Address(RVA = "0x11C2360", Offset = "0x11C2360", VA = "0x11C2360", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000714")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003402")]
				[Address(RVA = "0x11C23A8", Offset = "0x11C23A8", VA = "0x11C23A8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60033FD")]
			[Address(RVA = "0x11C21F8", Offset = "0x11C21F8", VA = "0x11C21F8")]
			[DebuggerHidden]
			public <PlayNow>d__204(int <>1__state)
			{
			}

			[Token(Token = "0x60033FE")]
			[Address(RVA = "0x11C2224", Offset = "0x11C2224", VA = "0x11C2224", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60033FF")]
			[Address(RVA = "0x11C2228", Offset = "0x11C2228", VA = "0x11C2228", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003401")]
			[Address(RVA = "0x11C2368", Offset = "0x11C2368", VA = "0x11C2368", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006A5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x919E78", Offset = "0x919E78")]
		private sealed class <ReleaseDrop>d__206 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x17000715")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003406")]
				[Address(RVA = "0x11C26FC", Offset = "0x11C26FC", VA = "0x11C26FC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000716")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003408")]
				[Address(RVA = "0x11C2744", Offset = "0x11C2744", VA = "0x11C2744", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003403")]
			[Address(RVA = "0x11C263C", Offset = "0x11C263C", VA = "0x11C263C")]
			[DebuggerHidden]
			public <ReleaseDrop>d__206(int <>1__state)
			{
			}

			[Token(Token = "0x6003404")]
			[Address(RVA = "0x11C2668", Offset = "0x11C2668", VA = "0x11C2668", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003405")]
			[Address(RVA = "0x11C266C", Offset = "0x11C266C", VA = "0x11C266C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003407")]
			[Address(RVA = "0x11C2704", Offset = "0x11C2704", VA = "0x11C2704", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006A6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x919E88", Offset = "0x919E88")]
		private sealed class <PlayNowFromTime>d__207 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float time;

			[Token(Token = "0x4002D73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public YoutubeSettings <>4__this;

			[Token(Token = "0x17000717")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600340C")]
				[Address(RVA = "0x11C24C4", Offset = "0x11C24C4", VA = "0x11C24C4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000718")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600340E")]
				[Address(RVA = "0x11C250C", Offset = "0x11C250C", VA = "0x11C250C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003409")]
			[Address(RVA = "0x11C23B0", Offset = "0x11C23B0", VA = "0x11C23B0")]
			[DebuggerHidden]
			public <PlayNowFromTime>d__207(int <>1__state)
			{
			}

			[Token(Token = "0x600340A")]
			[Address(RVA = "0x11C23DC", Offset = "0x11C23DC", VA = "0x11C23DC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600340B")]
			[Address(RVA = "0x11C23E0", Offset = "0x11C23E0", VA = "0x11C23E0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600340D")]
			[Address(RVA = "0x11C24CC", Offset = "0x11C24CC", VA = "0x11C24CC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected string UserAgent;

		[Token(Token = "0x4002C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public YoutubeVideoController _controller;

		[Token(Token = "0x4002C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public YoutubeVideoEvents _events;

		[Token(Token = "0x4002C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x921860", Offset = "0x921860")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x921860", Offset = "0x921860")]
		public string youtubeUrl;

		[Token(Token = "0x4002C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9218AC", Offset = "0x9218AC")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x9218AC", Offset = "0x9218AC")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x9218AC", Offset = "0x9218AC")]
		public YoutubeVideoQuality videoQuality;

		[Token(Token = "0x4002C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x921908", Offset = "0x921908")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x921908", Offset = "0x921908")]
		public bool is360;

		[Token(Token = "0x4002C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x921954", Offset = "0x921954")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x921954", Offset = "0x921954")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x921954", Offset = "0x921954")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x921954", Offset = "0x921954")]
		public bool autoPlayOnStart;

		[Token(Token = "0x4002C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x9219D4", Offset = "0x9219D4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9219D4", Offset = "0x9219D4")]
		public bool startFromSecond;

		[Token(Token = "0x4002C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0x921A20", Offset = "0x921A20")]
		public int startFromSecondTime;

		[Token(Token = "0x4002C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		protected bool prepareVideoToPlayLater;

		[Token(Token = "0x4002C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x921AB4", Offset = "0x921AB4")]
		public bool showThumbnailBeforeVideoLoad;

		[Token(Token = "0x4002C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0x921AC4", Offset = "0x921AC4")]
		public Renderer thumbnailObject;

		[Token(Token = "0x4002C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected string thumbnailVideoID;

		[Token(Token = "0x4002C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x921B58", Offset = "0x921B58")]
		public bool customPlaylist;

		[Token(Token = "0x4002C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0x921B68", Offset = "0x921B68")]
		public bool autoPlayNextVideo;

		[Token(Token = "0x4002C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x921BFC", Offset = "0x921BFC")]
		public string[] youtubeUrls;

		[Token(Token = "0x4002C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected int currentUrlIndex;

		[Token(Token = "0x4002C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private string youtubeVideoID;

		[Token(Token = "0x4002C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x921C34", Offset = "0x921C34")]
		public VideoFormatType videoFormat;

		[Token(Token = "0x4002C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x921C6C", Offset = "0x921C6C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x921C6C", Offset = "0x921C6C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x921C6C", Offset = "0x921C6C")]
		public bool autoPlayOnEnable;

		[Token(Token = "0x4002C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x921CDC", Offset = "0x921CDC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x921CDC", Offset = "0x921CDC")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x921CDC", Offset = "0x921CDC")]
		public bool playUsingInternalDevicePlayer;

		[Token(Token = "0x4002C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7E")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x921D4C", Offset = "0x921D4C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x921D4C", Offset = "0x921D4C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x921D4C", Offset = "0x921D4C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x921D4C", Offset = "0x921D4C")]
		public bool loadYoutubeUrlsOnly;

		[Token(Token = "0x4002C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x921DCC", Offset = "0x921DCC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x921DCC", Offset = "0x921DCC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x921DCC", Offset = "0x921DCC")]
		public GameObject[] objectsToRenderTheVideoImage;

		[Token(Token = "0x4002C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x921E3C", Offset = "0x921E3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x921E3C", Offset = "0x921E3C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x921E3C", Offset = "0x921E3C")]
		public bool is3DLayoutVideo;

		[Token(Token = "0x4002C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0x921EAC", Offset = "0x921EAC")]
		public Layout3D layout3d;

		[Token(Token = "0x4002CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x921F40", Offset = "0x921F40")]
		public Camera mainCamera;

		[Token(Token = "0x4002CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x921F50", Offset = "0x921F50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x921F50", Offset = "0x921F50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x921F50", Offset = "0x921F50")]
		public VideoPlayer videoPlayer;

		[Token(Token = "0x4002CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x921FC0", Offset = "0x921FC0")]
		public VideoPlayer audioPlayer;

		[Token(Token = "0x4002CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x921FF8", Offset = "0x921FF8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x921FF8", Offset = "0x921FF8")]
		public bool debug;

		[Token(Token = "0x4002CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x922044", Offset = "0x922044")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x922044", Offset = "0x922044")]
		public bool ignoreTimeout;

		[Token(Token = "0x4002CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAA")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x922090", Offset = "0x922090")]
		public bool _skipOnDrop;

		[Token(Token = "0x4002CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[HideInInspector]
		public string videoUrl;

		[Token(Token = "0x4002CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[HideInInspector]
		public string audioUrl;

		[Token(Token = "0x4002CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[HideInInspector]
		public bool ForceGetWebServer;

		[Token(Token = "0x4002CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
		[HideInInspector]
		public bool progressStartDrag;

		[Token(Token = "0x4002CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private int maxRequestTime;

		[Token(Token = "0x4002CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float currentRequestTime;

		[Token(Token = "0x4002CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private int retryTimeUntilToRequestFromServer;

		[Token(Token = "0x4002CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private int currentRetryTime;

		[Token(Token = "0x4002CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private bool gettingYoutubeURL;

		[Token(Token = "0x4002CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD5")]
		private bool videoAreReadyToPlay;

		[Token(Token = "0x4002CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private float lastPlayTime;

		[Token(Token = "0x4002CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private bool audioDecryptDone;

		[Token(Token = "0x4002CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDD")]
		private bool videoDecryptDone;

		[Token(Token = "0x4002CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDE")]
		private bool isRetry;

		[Token(Token = "0x4002CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private string lastTryVideoId;

		[Token(Token = "0x4002CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float lastStartedTime;

		[Token(Token = "0x4002CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		protected bool youtubeUrlReady;

		[Token(Token = "0x4002CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xED")]
		protected bool fullscreenModeEnabled;

		[Token(Token = "0x4002CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private YoutubeResultIds newRequestResults;

		[Token(Token = "0x4002CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string jsUrl;

		[Token(Token = "0x4002CBA")]
		private const string serverURI = "https://utube-unity.herokuapp.com/api/info?url=";

		[Token(Token = "0x4002CBB")]
		private const string formatURI = "&format=best&flatten=true";

		[Token(Token = "0x4002CBC")]
		private const string VIDEOURIFORWEBGLPLAYER = "https://utube-webgl.herokuapp.com/download.php?mime=video/mp4&title=generatedvideo&token=";

		[Token(Token = "0x4002CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private JObject requestResult;

		[Token(Token = "0x4002CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private long lastFrame;

		[Token(Token = "0x4002CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private bool videoEnded;

		[Token(Token = "0x4002CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x109")]
		protected bool noAudioAtacched;

		[Token(Token = "0x4002CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		protected string videoTitle;

		[Token(Token = "0x4002CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public Material EACMaterial;

		[Token(Token = "0x4002CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public Material Material360;

		[Token(Token = "0x4002CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		protected bool startedFromTime;

		[Token(Token = "0x4002CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x129")]
		protected bool finishedCalled;

		[Token(Token = "0x4002CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12A")]
		private bool videoStarted;

		[Token(Token = "0x4002CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private float lastErrorTime;

		[Token(Token = "0x4002CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[HideInInspector]
		public bool pauseCalled;

		[Token(Token = "0x4002CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		private float totalVideoDuration;

		[Token(Token = "0x4002CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private float currentVideoDuration;

		[Token(Token = "0x4002CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private bool videoSeekDone;

		[Token(Token = "0x4002CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13D")]
		private bool videoAudioSeekDone;

		[Token(Token = "0x4002CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13E")]
		private bool lowRes;

		[Token(Token = "0x4002CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private float hideScreenTime;

		[Token(Token = "0x4002CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		private float audioDuration;

		[Token(Token = "0x4002CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private string lsigForVideo;

		[Token(Token = "0x4002CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private string lsigForAudio;

		[Token(Token = "0x4002CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private Thread thread1;

		[Token(Token = "0x4002CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private YoutubeResultIds webGlResults;

		[Token(Token = "0x4002CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private bool startedPlayingWebgl;

		[Token(Token = "0x4002CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		protected string logTest;

		[Token(Token = "0x4002CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[HideInInspector]
		public bool isSyncing;

		[Token(Token = "0x4002CD7")]
		private const string RateBypassFlag = "ratebypass";

		[Token(Token = "0x4002CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[HideInInspector]
		public static string SignatureQuery;

		[Token(Token = "0x4002CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[HideInInspector]
		public string encryptedSignatureVideo;

		[Token(Token = "0x4002CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[HideInInspector]
		public string encryptedSignatureAudio;

		[Token(Token = "0x4002CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[HideInInspector]
		private string masterURLForVideo;

		[Token(Token = "0x4002CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[HideInInspector]
		private string masterURLForAudio;

		[Token(Token = "0x4002CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private string[] patternNames;

		[Token(Token = "0x4002CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		[HideInInspector]
		public bool decryptedUrlForVideo;

		[Token(Token = "0x4002CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A9")]
		[HideInInspector]
		public bool decryptedUrlForAudio;

		[Token(Token = "0x4002CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		[HideInInspector]
		public string decryptedVideoUrlResult;

		[Token(Token = "0x4002CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		[HideInInspector]
		public string decryptedAudioUrlResult;

		[Token(Token = "0x4002CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		public List<VideoInfo> youtubeVideoInfos;

		[Token(Token = "0x4002CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private string htmlVersion;

		[Token(Token = "0x4002CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string sp;

		[Token(Token = "0x4002CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static string projectionType;

		[Token(Token = "0x4002CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[HideInInspector]
		public string EncryptUrlForVideo;

		[Token(Token = "0x4002CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[HideInInspector]
		public string EncryptUrlForAudio;

		[Token(Token = "0x4002CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private DownloadUrlResponse downloadYoutubeUrlResponse;

		[Token(Token = "0x4002CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[HideInInspector]
		public string jsonForHtmlVersion;

		[Token(Token = "0x4002CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private bool waitAudioSeek;

		[Token(Token = "0x4002CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		private float oldVolume;

		[Token(Token = "0x4002CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		[HideInInspector]
		public bool checkIfSync;

		[Token(Token = "0x4002CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		private MagicContent magicResult;

		[Token(Token = "0x4002CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private bool canUpdate;

		[Token(Token = "0x6003306")]
		[Address(RVA = "0x126A444", Offset = "0x126A444", VA = "0x126A444")]
		protected void Skybox3DSettup()
		{
		}

		[Token(Token = "0x6003307")]
		[Address(RVA = "0x126A55C", Offset = "0x126A55C", VA = "0x126A55C")]
		public void YoutubeGeneratorSys(string _videoUrl, string _formatCode)
		{
		}

		[Token(Token = "0x6003308")]
		[Address(RVA = "0x126A588", Offset = "0x126A588", VA = "0x126A588")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x931358", Offset = "0x931358")]
		private IEnumerator YoutubeGenerateUrlUsingClient()
		{
			return null;
		}

		[Token(Token = "0x6003309")]
		[Address(RVA = "0x126A5F4", Offset = "0x126A5F4", VA = "0x126A5F4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9313B8", Offset = "0x9313B8")]
		private IEnumerator YoutubeGeneratorSysCall(string _videoUrl, string _formatCode)
		{
			return null;
		}

		[Token(Token = "0x600330A")]
		[Address(RVA = "0x126A674", Offset = "0x126A674", VA = "0x126A674")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x931418", Offset = "0x931418")]
		private IEnumerator WaitAndTryConnectToServerAgain()
		{
			return null;
		}

		[Token(Token = "0x600330B")]
		[Address(RVA = "0x126A6E0", Offset = "0x126A6E0", VA = "0x126A6E0")]
		protected void FixCameraEvent()
		{
		}

		[Token(Token = "0x600330C")]
		[Address(RVA = "0x126A87C", Offset = "0x126A87C", VA = "0x126A87C")]
		protected string CheckVideoUrlAndExtractThevideoId(string url)
		{
			return null;
		}

		[Token(Token = "0x600330D")]
		[Address(RVA = "0x126ACB0", Offset = "0x126ACB0", VA = "0x126ACB0")]
		public void OnYoutubeError(string errorType)
		{
		}

		[Token(Token = "0x600330E")]
		[Address(RVA = "0x126A9C8", Offset = "0x126A9C8", VA = "0x126A9C8")]
		private bool TryNormalizeYoutubeUrlLocal(string url, out string normalizedUrl)
		{
			return default(bool);
		}

		[Token(Token = "0x600330F")]
		[Address(RVA = "0x126AD58", Offset = "0x126AD58", VA = "0x126AD58")]
		private void Awake()
		{
		}

		[Token(Token = "0x6003310")]
		[Address(RVA = "0x126B06C", Offset = "0x126B06C", VA = "0x126B06C")]
		private void VerifyFrames()
		{
		}

		[Token(Token = "0x6003311")]
		[Address(RVA = "0x1268958", Offset = "0x1268958", VA = "0x1268958", Slot = "4")]
		public virtual void Start()
		{
		}

		[Token(Token = "0x6003312")]
		[Address(RVA = "0x12690D0", Offset = "0x12690D0", VA = "0x12690D0")]
		public void DisableThumbnailObject()
		{
		}

		[Token(Token = "0x6003313")]
		[Address(RVA = "0x126B2AC", Offset = "0x126B2AC", VA = "0x126B2AC")]
		public void EnableThumbnailObject()
		{
		}

		[Token(Token = "0x6003314")]
		[Address(RVA = "0x126B394", Offset = "0x126B394", VA = "0x126B394")]
		private void TryToLoadThumbnailBeforeOpenVideo(string id)
		{
		}

		[Token(Token = "0x6003315")]
		[Address(RVA = "0x126B42C", Offset = "0x126B42C", VA = "0x126B42C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x931478", Offset = "0x931478")]
		private IEnumerator DownloadThumbnail(string videoId)
		{
			return null;
		}

		[Token(Token = "0x6003316")]
		[Address(RVA = "0x126B4A4", Offset = "0x126B4A4", VA = "0x126B4A4")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6003317")]
		[Address(RVA = "0x126B1C0", Offset = "0x126B1C0", VA = "0x126B1C0")]
		private void PrepareVideoPlayerCallbacks()
		{
		}

		[Token(Token = "0x6003318")]
		[Address(RVA = "0x126BC84", Offset = "0x126BC84", VA = "0x126BC84")]
		public void ShowLoading()
		{
		}

		[Token(Token = "0x6003319")]
		[Address(RVA = "0x126BBE0", Offset = "0x126BBE0", VA = "0x126BBE0")]
		public void HideLoading()
		{
		}

		[Token(Token = "0x600331A")]
		[Address(RVA = "0x126C3F4", Offset = "0x126C3F4", VA = "0x126C3F4")]
		private void ResetThings()
		{
		}

		[Token(Token = "0x600331B")]
		[Address(RVA = "0x126C600", Offset = "0x126C600", VA = "0x126C600")]
		private string GetFormatCode()
		{
			return null;
		}

		[Token(Token = "0x600331C")]
		[Address(RVA = "0x1268F04", Offset = "0x1268F04", VA = "0x1268F04")]
		protected void PlayYoutubeVideo(string _videoId)
		{
		}

		[Token(Token = "0x600331D")]
		[Address(RVA = "0x126C1DC", Offset = "0x126C1DC", VA = "0x126C1DC")]
		public void DecryptAudioDone(string url)
		{
		}

		[Token(Token = "0x600331E")]
		[Address(RVA = "0x126C244", Offset = "0x126C244", VA = "0x126C244")]
		public void DecryptVideoDone(string url)
		{
		}

		[Token(Token = "0x600331F")]
		[Address(RVA = "0x126CA70", Offset = "0x126CA70", VA = "0x126CA70")]
		private void UrlsLoaded()
		{
		}

		[Token(Token = "0x6003320")]
		[Address(RVA = "0x126C384", Offset = "0x126C384", VA = "0x126C384")]
		private void StartPlayingWebgl()
		{
		}

		[Token(Token = "0x6003321")]
		[Address(RVA = "0x126E684", Offset = "0x126E684", VA = "0x126E684")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9314D8", Offset = "0x9314D8")]
		private IEnumerator HandHeldPlayback()
		{
			return null;
		}

		[Token(Token = "0x6003322")]
		[Address(RVA = "0x1269270", Offset = "0x1269270", VA = "0x1269270")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x931538", Offset = "0x931538")]
		public IEnumerator DelayPlay()
		{
			return null;
		}

		[Token(Token = "0x6003323")]
		[Address(RVA = "0x126E6F0", Offset = "0x126E6F0", VA = "0x126E6F0")]
		private void StartPlayback()
		{
		}

		[Token(Token = "0x6003324")]
		[Address(RVA = "0x126BE54", Offset = "0x126BE54", VA = "0x126BE54")]
		private void ErrorCheck()
		{
		}

		[Token(Token = "0x6003325")]
		[Address(RVA = "0x126E8D8", Offset = "0x126E8D8", VA = "0x126E8D8")]
		public int GetMaxQualitySupportedByDevice()
		{
			return default(int);
		}

		[Token(Token = "0x6003326")]
		[Address(RVA = "0x126C774", Offset = "0x126C774", VA = "0x126C774")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x931598", Offset = "0x931598")]
		private IEnumerator WebRequest(string videoID)
		{
			return null;
		}

		[Token(Token = "0x6003327")]
		[Address(RVA = "0x126E964", Offset = "0x126E964", VA = "0x126E964")]
		private string ConvertToWebglUrl(string url)
		{
			return null;
		}

		[Token(Token = "0x6003328")]
		[Address(RVA = "0x126BD28", Offset = "0x126BD28", VA = "0x126BD28")]
		private void RetryPlayYoutubeVideo()
		{
		}

		[Token(Token = "0x6003329")]
		[Address(RVA = "0x126EA68", Offset = "0x126EA68", VA = "0x126EA68")]
		private void StopIfPlaying()
		{
		}

		[Token(Token = "0x600332A")]
		[Address(RVA = "0x126C7EC", Offset = "0x126C7EC", VA = "0x126C7EC")]
		private void OnYoutubeUrlsLoaded()
		{
		}

		[Token(Token = "0x600332B")]
		[Address(RVA = "0x126EB48", Offset = "0x126EB48", VA = "0x126EB48")]
		private void CheckIfCanPlayUrl(string url, Action callback)
		{
		}

		[Token(Token = "0x600332C")]
		[Address(RVA = "0x126EB74", Offset = "0x126EB74", VA = "0x126EB74")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9315F8", Offset = "0x9315F8")]
		private IEnumerator VideoRequest(string url, Action callback)
		{
			return null;
		}

		[Token(Token = "0x600332D")]
		[Address(RVA = "0x126EBF4", Offset = "0x126EBF4", VA = "0x126EBF4")]
		private void PrepareVideoAfterCheck()
		{
		}

		[Token(Token = "0x600332E")]
		[Address(RVA = "0x126EC64", Offset = "0x126EC64", VA = "0x126EC64")]
		private void PrepareAudioAfterCheck()
		{
		}

		[Token(Token = "0x600332F")]
		[Address(RVA = "0x1269718", Offset = "0x1269718", VA = "0x1269718")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x931658", Offset = "0x931658")]
		protected IEnumerator PreventFinishToBeCalledTwoTimes()
		{
			return null;
		}

		[Token(Token = "0x6003330")]
		[Address(RVA = "0x126C358", Offset = "0x126C358", VA = "0x126C358")]
		private void PlaybackDone(VideoPlayer vPlayer)
		{
		}

		[Token(Token = "0x6003331")]
		[Address(RVA = "0x126C2B4", Offset = "0x126C2B4", VA = "0x126C2B4")]
		private void VideoStarted(VideoPlayer source)
		{
		}

		[Token(Token = "0x6003332")]
		[Address(RVA = "0x126EC80", Offset = "0x126EC80", VA = "0x126EC80")]
		private void VideoErrorReceived(VideoPlayer source, string message)
		{
		}

		[Token(Token = "0x6003333")]
		[Address(RVA = "0x1269370", Offset = "0x1269370", VA = "0x1269370")]
		public void Pause()
		{
		}

		[Token(Token = "0x6003334")]
		[Address(RVA = "0x126ED30", Offset = "0x126ED30", VA = "0x126ED30")]
		private void Update()
		{
		}

		[Token(Token = "0x6003335")]
		[Address(RVA = "0x126EFE8", Offset = "0x126EFE8", VA = "0x126EFE8")]
		public void Seek(float time)
		{
		}

		[Token(Token = "0x6003336")]
		[Address(RVA = "0x126F040", Offset = "0x126F040", VA = "0x126F040")]
		private void VideoPreparedSeek(VideoPlayer p)
		{
		}

		[Token(Token = "0x6003337")]
		[Address(RVA = "0x126F044", Offset = "0x126F044", VA = "0x126F044")]
		private void AudioPreparedSeek(VideoPlayer p)
		{
		}

		[Token(Token = "0x6003338")]
		[Address(RVA = "0x1268C98", Offset = "0x1268C98", VA = "0x1268C98")]
		public void Stop()
		{
		}

		[Token(Token = "0x6003339")]
		[Address(RVA = "0x126F048", Offset = "0x126F048", VA = "0x126F048")]
		private void SeekVideoDone(VideoPlayer vp)
		{
		}

		[Token(Token = "0x600333A")]
		[Address(RVA = "0x126F1AC", Offset = "0x126F1AC", VA = "0x126F1AC")]
		private void SeekVideoAudioDone(VideoPlayer vp)
		{
		}

		[Token(Token = "0x600333B")]
		[Address(RVA = "0x126F140", Offset = "0x126F140", VA = "0x126F140")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9316B8", Offset = "0x9316B8")]
		private IEnumerator SeekFinished()
		{
			return null;
		}

		[Token(Token = "0x600333C")]
		[Address(RVA = "0x126BF0C", Offset = "0x126BF0C", VA = "0x126BF0C")]
		private string FormatTime(int time)
		{
			return null;
		}

		[Token(Token = "0x600333D")]
		[Address(RVA = "0x126EE50", Offset = "0x126EE50", VA = "0x126EE50")]
		private bool UserInteract()
		{
			return default(bool);
		}

		[Token(Token = "0x600333E")]
		[Address(RVA = "0x126E048", Offset = "0x126E048", VA = "0x126E048")]
		public void DecryptDownloadUrl(string encryptedUrlVideo, string encrytedUrlAudio, string html, bool videoOnly)
		{
		}

		[Token(Token = "0x600333F")]
		[Address(RVA = "0x126F35C", Offset = "0x126F35C", VA = "0x126F35C")]
		public void ReadyForExtract(string r, bool audioExtract)
		{
		}

		[Token(Token = "0x6003340")]
		[Address(RVA = "0x126F2D8", Offset = "0x126F2D8", VA = "0x126F2D8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x931718", Offset = "0x931718")]
		private IEnumerator Downloader(string uri, bool audio)
		{
			return null;
		}

		[Token(Token = "0x6003341")]
		[Address(RVA = "0x127135C", Offset = "0x127135C", VA = "0x127135C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x931778", Offset = "0x931778")]
		private IEnumerator WebGlRequest(string videoID)
		{
			return null;
		}

		[Token(Token = "0x6003342")]
		[Address(RVA = "0x12713D4", Offset = "0x12713D4", VA = "0x12713D4")]
		public void WebGlGetVideo(string url)
		{
		}

		[Token(Token = "0x6003343")]
		[Address(RVA = "0x12715D8", Offset = "0x12715D8", VA = "0x12715D8")]
		private void WeblPrepared(VideoPlayer source)
		{
		}

		[Token(Token = "0x6003344")]
		[Address(RVA = "0x1271644", Offset = "0x1271644", VA = "0x1271644")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9317D8", Offset = "0x9317D8")]
		private IEnumerator WebGLPlay()
		{
			return null;
		}

		[Token(Token = "0x6003345")]
		[Address(RVA = "0x12716B0", Offset = "0x12716B0", VA = "0x12716B0")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6003346")]
		[Address(RVA = "0x1271758", Offset = "0x1271758", VA = "0x1271758")]
		private void SetMasterUrlForAudio(string url)
		{
		}

		[Token(Token = "0x6003347")]
		[Address(RVA = "0x1271760", Offset = "0x1271760", VA = "0x1271760")]
		private void SetMasterUrlForVideo(string url)
		{
		}

		[Token(Token = "0x6003348")]
		[Address(RVA = "0x1270438", Offset = "0x1270438", VA = "0x1270438")]
		private void DoRegexFunctionsForVideo(string jsF)
		{
		}

		[Token(Token = "0x6003349")]
		[Address(RVA = "0x127182C", Offset = "0x127182C", VA = "0x127182C")]
		private static int GetOpIndex(string op)
		{
			return default(int);
		}

		[Token(Token = "0x600334A")]
		[Address(RVA = "0x12718E0", Offset = "0x12718E0", VA = "0x12718E0")]
		private static char[] SpliceFunction(char[] a, int b)
		{
			return null;
		}

		[Token(Token = "0x600334B")]
		[Address(RVA = "0x127193C", Offset = "0x127193C", VA = "0x127193C")]
		private static char[] SwapFunction(char[] a, int b)
		{
			return null;
		}

		[Token(Token = "0x600334C")]
		[Address(RVA = "0x127198C", Offset = "0x127198C", VA = "0x127198C")]
		private static char[] ReverseFunction(char[] a)
		{
			return null;
		}

		[Token(Token = "0x600334D")]
		[Address(RVA = "0x126F4D4", Offset = "0x126F4D4", VA = "0x126F4D4")]
		private void DoRegexFunctionsForAudio(string jsF)
		{
		}

		[Token(Token = "0x600334E")]
		[Address(RVA = "0x12719B4", Offset = "0x12719B4", VA = "0x12719B4")]
		private void DelayForAudio()
		{
		}

		[Token(Token = "0x600334F")]
		[Address(RVA = "0x1271768", Offset = "0x1271768", VA = "0x1271768")]
		private static string GetFunctionFromLine(string currentLine)
		{
			return null;
		}

		[Token(Token = "0x6003350")]
		[Address(RVA = "0x12719C0", Offset = "0x12719C0", VA = "0x12719C0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x931838", Offset = "0x931838")]
		public IEnumerator WebGlRequest(Action<string> callback, string id, string host)
		{
			return null;
		}

		[Token(Token = "0x6003351")]
		[Address(RVA = "0x1271A4C", Offset = "0x1271A4C", VA = "0x1271A4C")]
		private void GetDownloadUrls(Action callback, string videoUrl, YoutubeSettings player)
		{
		}

		[Token(Token = "0x6003352")]
		[Address(RVA = "0x1271EE4", Offset = "0x1271EE4", VA = "0x1271EE4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x931898", Offset = "0x931898")]
		private IEnumerator YoutubeURLDownloadFinished(Action callback, YoutubeSettings player)
		{
			return null;
		}

		[Token(Token = "0x6003353")]
		[Address(RVA = "0x1271B78", Offset = "0x1271B78", VA = "0x1271B78")]
		public static bool TryNormalizeYoutubeUrl(string url, out string normalizedUrl)
		{
			return default(bool);
		}

		[Token(Token = "0x6003354")]
		[Address(RVA = "0x1271F64", Offset = "0x1271F64", VA = "0x1271F64")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9318F8", Offset = "0x9318F8")]
		private static IEnumerable<ExtractionInfo> ExtractDownloadUrls(JObject json)
		{
			return null;
		}

		[Token(Token = "0x6003355")]
		[Address(RVA = "0x1271FD0", Offset = "0x1271FD0", VA = "0x1271FD0")]
		private static string GetAdaptiveStreamMap(JObject json)
		{
			return null;
		}

		[Token(Token = "0x6003356")]
		[Address(RVA = "0x127214C", Offset = "0x127214C", VA = "0x127214C")]
		private static string GetHtml5PlayerVersion(JObject json, string regexForHtmlPVersions)
		{
			return null;
		}

		[Token(Token = "0x6003357")]
		[Address(RVA = "0x1272384", Offset = "0x1272384", VA = "0x1272384")]
		private static string TryMatchHtmlVersion(string input, string regexForHtmlPVersions)
		{
			return null;
		}

		[Token(Token = "0x6003358")]
		[Address(RVA = "0x12724E4", Offset = "0x12724E4", VA = "0x12724E4")]
		private static string GetStreamMap(JObject json)
		{
			return null;
		}

		[Token(Token = "0x6003359")]
		[Address(RVA = "0x12726B4", Offset = "0x12726B4", VA = "0x12726B4")]
		private static IEnumerable<VideoInfo> GetVideoInfos(IEnumerable<ExtractionInfo> extractionInfos, string videoTitle)
		{
			return null;
		}

		[Token(Token = "0x600335A")]
		[Address(RVA = "0x1272C80", Offset = "0x1272C80", VA = "0x1272C80")]
		private static string GetVideoTitle(JObject json)
		{
			return null;
		}

		[Token(Token = "0x600335B")]
		[Address(RVA = "0x1272D40", Offset = "0x1272D40", VA = "0x1272D40")]
		private static bool IsVideoUnavailable(string pageSource)
		{
			return default(bool);
		}

		[Token(Token = "0x600335C")]
		[Address(RVA = "0x1272D98", Offset = "0x1272D98", VA = "0x1272D98")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x931958", Offset = "0x931958")]
		private IEnumerator DownloadUrl(string url, Action<string> callback, VideoInfo videoInfo)
		{
			return null;
		}

		[Token(Token = "0x600335D")]
		[Address(RVA = "0x1271E58", Offset = "0x1271E58", VA = "0x1271E58")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9319B8", Offset = "0x9319B8")]
		private IEnumerator DownloadYoutubeUrl(string url, Action callback, YoutubeSettings player)
		{
			return null;
		}

		[Token(Token = "0x600335E")]
		[Address(RVA = "0x1272E10", Offset = "0x1272E10", VA = "0x1272E10")]
		public static void WriteLog(string filename, string c)
		{
		}

		[Token(Token = "0x600335F")]
		[Address(RVA = "0x1273020", Offset = "0x1273020", VA = "0x1273020")]
		private static void ThrowYoutubeParseException(Exception innerException, string videoUrl)
		{
		}

		[Token(Token = "0x6003360")]
		[Address(RVA = "0x12730A4", Offset = "0x12730A4", VA = "0x12730A4")]
		public void TrySkip(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6003361")]
		[Address(RVA = "0x1273210", Offset = "0x1273210", VA = "0x1273210")]
		public void SkipToPercent(float pct)
		{
		}

		[Token(Token = "0x6003362")]
		[Address(RVA = "0x127339C", Offset = "0x127339C", VA = "0x127339C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x931A18", Offset = "0x931A18")]
		private IEnumerator VideoSeekCall()
		{
			return null;
		}

		[Token(Token = "0x6003363")]
		[Address(RVA = "0x1273408", Offset = "0x1273408", VA = "0x1273408")]
		private void VideoSeeked(VideoPlayer source)
		{
		}

		[Token(Token = "0x6003364")]
		[Address(RVA = "0x127353C", Offset = "0x127353C", VA = "0x127353C")]
		private void AudioSeeked(VideoPlayer source)
		{
		}

		[Token(Token = "0x6003365")]
		[Address(RVA = "0x12691F8", Offset = "0x12691F8", VA = "0x12691F8", Slot = "5")]
		public virtual void Play()
		{
		}

		[Token(Token = "0x6003366")]
		[Address(RVA = "0x126B154", Offset = "0x126B154", VA = "0x126B154")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x931A78", Offset = "0x931A78")]
		private IEnumerator WaitSync()
		{
			return null;
		}

		[Token(Token = "0x6003367")]
		[Address(RVA = "0x12734D0", Offset = "0x12734D0", VA = "0x12734D0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x931AD8", Offset = "0x931AD8")]
		private IEnumerator PlayNow()
		{
			return null;
		}

		[Token(Token = "0x6003368")]
		[Address(RVA = "0x1273568", Offset = "0x1273568", VA = "0x1273568")]
		private void CheckIfIsSync()
		{
		}

		[Token(Token = "0x6003369")]
		[Address(RVA = "0x127356C", Offset = "0x127356C", VA = "0x127356C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x931B38", Offset = "0x931B38")]
		private IEnumerator ReleaseDrop()
		{
			return null;
		}

		[Token(Token = "0x600336A")]
		[Address(RVA = "0x1273454", Offset = "0x1273454", VA = "0x1273454")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x931B98", Offset = "0x931B98")]
		private IEnumerator PlayNowFromTime(float time)
		{
			return null;
		}

		[Token(Token = "0x600336B")]
		[Address(RVA = "0x12735C8", Offset = "0x12735C8", VA = "0x12735C8")]
		private void AudioPlayer_frameDropped(VideoPlayer source)
		{
		}

		[Token(Token = "0x600336C")]
		[Address(RVA = "0x12735CC", Offset = "0x12735CC", VA = "0x12735CC")]
		private void VideoPlayer_frameDropped(VideoPlayer source)
		{
		}

		[Token(Token = "0x600336D")]
		[Address(RVA = "0x12735D0", Offset = "0x12735D0", VA = "0x12735D0")]
		public void ChacheSystem()
		{
		}

		[Token(Token = "0x600336E")]
		[Address(RVA = "0x1269DA4", Offset = "0x1269DA4", VA = "0x1269DA4")]
		public YoutubeSettings()
		{
		}
	}
	[Token(Token = "0x20006A7")]
	public class YoutubeResultIds
	{
		[Token(Token = "0x4002D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string lowQuality;

		[Token(Token = "0x4002D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string standardQuality;

		[Token(Token = "0x4002D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string mediumQuality;

		[Token(Token = "0x4002D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string hdQuality;

		[Token(Token = "0x4002D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string fullHdQuality;

		[Token(Token = "0x4002D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string ultraHdQuality;

		[Token(Token = "0x4002D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string bestFormatWithAudioIncluded;

		[Token(Token = "0x4002D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string audioUrl;

		[Token(Token = "0x600340F")]
		[Address(RVA = "0x126A43C", Offset = "0x126A43C", VA = "0x126A43C")]
		public YoutubeResultIds()
		{
		}
	}
	[Token(Token = "0x20006A8")]
	public static class Extensions
	{
		[Token(Token = "0x6003410")]
		public static T[] Splice<T>(this T[] source, int start)
		{
			return null;
		}
	}
	[Token(Token = "0x20006A9")]
	public class YoutubeVideoController : MonoBehaviour
	{
		[Token(Token = "0x4002D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private YoutubePlayer _player;

		[Token(Token = "0x4002D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool showPlayerControl;

		[Token(Token = "0x4002D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Slider playbackSlider;

		[Token(Token = "0x4002D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Image progressRectangle;

		[Token(Token = "0x4002D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Slider speedSlider;

		[Token(Token = "0x4002D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Slider volumeSlider;

		[Token(Token = "0x4002D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Text currentTime;

		[Token(Token = "0x4002D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Text totalTime;

		[Token(Token = "0x4002D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject loading;

		[Token(Token = "0x4002D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Button nextVideoButton;

		[Token(Token = "0x4002D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Button previousVideoButton;

		[Token(Token = "0x4002D87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool showingVolume;

		[Token(Token = "0x4002D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool showingSpeed;

		[Token(Token = "0x4002D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		public GameObject controllerMainUI;

		[Token(Token = "0x4002D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x922228", Offset = "0x922228")]
		public int hideScreenControlTime;

		[Token(Token = "0x4002D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x922274", Offset = "0x922274")]
		public bool useSliderToProgressVideo;

		[Token(Token = "0x6003411")]
		[Address(RVA = "0x12747A8", Offset = "0x12747A8", VA = "0x12747A8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6003412")]
		[Address(RVA = "0x1274B5C", Offset = "0x1274B5C", VA = "0x1274B5C")]
		public void Play()
		{
		}

		[Token(Token = "0x6003413")]
		[Address(RVA = "0x1274B7C", Offset = "0x1274B7C", VA = "0x1274B7C")]
		public void Pause()
		{
		}

		[Token(Token = "0x6003414")]
		[Address(RVA = "0x1274B94", Offset = "0x1274B94", VA = "0x1274B94")]
		public void PlayToggle()
		{
		}

		[Token(Token = "0x6003415")]
		[Address(RVA = "0x1274BAC", Offset = "0x1274BAC", VA = "0x1274BAC")]
		public void ChangeVolume(float volume)
		{
		}

		[Token(Token = "0x6003416")]
		[Address(RVA = "0x1274C90", Offset = "0x1274C90", VA = "0x1274C90")]
		public void ChangePlaybackSpeed(float speed)
		{
		}

		[Token(Token = "0x6003417")]
		[Address(RVA = "0x1274D48", Offset = "0x1274D48", VA = "0x1274D48")]
		public void PlayNextVideo()
		{
		}

		[Token(Token = "0x6003418")]
		[Address(RVA = "0x1274E0C", Offset = "0x1274E0C", VA = "0x1274E0C")]
		public void PlayPreviousVideo()
		{
		}

		[Token(Token = "0x6003419")]
		[Address(RVA = "0x1274DD8", Offset = "0x1274DD8", VA = "0x1274DD8")]
		public bool NextVideo()
		{
			return default(bool);
		}

		[Token(Token = "0x600341A")]
		[Address(RVA = "0x1274E9C", Offset = "0x1274E9C", VA = "0x1274E9C")]
		public bool PreviousVideo()
		{
			return default(bool);
		}

		[Token(Token = "0x600341B")]
		[Address(RVA = "0x1274ED0", Offset = "0x1274ED0", VA = "0x1274ED0")]
		public void ChangeVideoTime(float value)
		{
		}

		[Token(Token = "0x600341C")]
		[Address(RVA = "0x1274F3C", Offset = "0x1274F3C", VA = "0x1274F3C")]
		public void PlaybackSliderStartDrag()
		{
		}

		[Token(Token = "0x600341D")]
		[Address(RVA = "0x1274F5C", Offset = "0x1274F5C", VA = "0x1274F5C")]
		public void ToggleFullScreen()
		{
		}

		[Token(Token = "0x600341E")]
		[Address(RVA = "0x126EF10", Offset = "0x126EF10", VA = "0x126EF10")]
		public void HideControllers()
		{
		}

		[Token(Token = "0x600341F")]
		[Address(RVA = "0x1274F74", Offset = "0x1274F74", VA = "0x1274F74")]
		public void ToggleVolumeSlider()
		{
		}

		[Token(Token = "0x6003420")]
		[Address(RVA = "0x1274FDC", Offset = "0x1274FDC", VA = "0x1274FDC")]
		public void ToggleSpeedSlider()
		{
		}

		[Token(Token = "0x6003421")]
		[Address(RVA = "0x1275044", Offset = "0x1275044", VA = "0x1275044")]
		public YoutubeVideoController()
		{
		}
	}
	[Token(Token = "0x20006AA")]
	public class YoutubeVideoEvents : MonoBehaviour
	{
		[Token(Token = "0x4002D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private YoutubePlayer _player;

		[Token(Token = "0x4002D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9222AC", Offset = "0x9222AC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9222AC", Offset = "0x9222AC")]
		public UrlLoadEvent OnYoutubeUrlAreReady;

		[Token(Token = "0x4002D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x92230C", Offset = "0x92230C")]
		public UnityEvent OnVideoReadyToStart;

		[Token(Token = "0x4002D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x922344", Offset = "0x922344")]
		public UnityEvent OnVideoStarted;

		[Token(Token = "0x4002D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x92237C", Offset = "0x92237C")]
		public UnityEvent OnVideoResumed;

		[Token(Token = "0x4002D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9223B4", Offset = "0x9223B4")]
		public UnityEvent OnVideoPaused;

		[Token(Token = "0x4002D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9223EC", Offset = "0x9223EC")]
		public UnityEvent OnVideoFinished;

		[Token(Token = "0x4002D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x922424", Offset = "0x922424")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x922424", Offset = "0x922424")]
		public YoutubeTimedEvent[] videoTimeEvents;

		[Token(Token = "0x6003422")]
		[Address(RVA = "0x1275054", Offset = "0x1275054", VA = "0x1275054")]
		private void Awake()
		{
		}

		[Token(Token = "0x6003423")]
		[Address(RVA = "0x12750A8", Offset = "0x12750A8", VA = "0x12750A8")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6003424")]
		[Address(RVA = "0x1275204", Offset = "0x1275204", VA = "0x1275204")]
		public YoutubeVideoEvents()
		{
		}
	}
}
namespace LightShaft.Scripts.CustomTools
{
	[Token(Token = "0x20006AB")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x919EA8", Offset = "0x919EA8")]
	public class SliderDrag : MonoBehaviour, IPointerUpHandler, IEventSystemHandler, IPointerDownHandler
	{
		[Token(Token = "0x4002D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent onSliderStartDrag;

		[Token(Token = "0x4002D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SliderDragEvent onSliderEndDrag;

		[Token(Token = "0x17000719")]
		private float SliderValue
		{
			[Token(Token = "0x6003425")]
			[Address(RVA = "0x10B9854", Offset = "0x10B9854", VA = "0x10B9854")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6003426")]
		[Address(RVA = "0x10B98C4", Offset = "0x10B98C4", VA = "0x10B98C4", Slot = "5")]
		public void OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6003427")]
		[Address(RVA = "0x10B98E0", Offset = "0x10B98E0", VA = "0x10B98E0", Slot = "4")]
		public void OnPointerUp(PointerEventData data)
		{
		}

		[Token(Token = "0x6003428")]
		[Address(RVA = "0x10B9940", Offset = "0x10B9940", VA = "0x10B9940")]
		public SliderDrag()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006AC")]
	public class SliderDragEvent : UnityEvent<float>
	{
		[Token(Token = "0x6003429")]
		[Address(RVA = "0x10B9948", Offset = "0x10B9948", VA = "0x10B9948")]
		public SliderDragEvent()
		{
		}
	}
}
namespace Unity.VideoHelper
{
	[Token(Token = "0x20006AD")]
	public class ClickRouter : Selectable, IPointerClickHandler, IEventSystemHandler
	{
		[Token(Token = "0x4002D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public UnityEvent OnClick;

		[Token(Token = "0x4002D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public UnityEvent OnDoubleClick;

		[Token(Token = "0x600342A")]
		[Address(RVA = "0x103DFC4", Offset = "0x103DFC4", VA = "0x103DFC4", Slot = "40")]
		public virtual void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600342B")]
		[Address(RVA = "0x103DFFC", Offset = "0x103DFFC", VA = "0x103DFFC")]
		public ClickRouter()
		{
		}
	}
	[Token(Token = "0x20006AE")]
	public class DirectClickRouter : ClickRouter
	{
		[Token(Token = "0x4002D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private float lastClickTime;

		[Token(Token = "0x4002D99")]
		private const float clickInterval = 0.3f;

		[Token(Token = "0x600342C")]
		[Address(RVA = "0xD94B2C", Offset = "0xD94B2C", VA = "0xD94B2C", Slot = "40")]
		public override void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600342D")]
		[Address(RVA = "0xD94B30", Offset = "0xD94B30", VA = "0xD94B30", Slot = "32")]
		public override void OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600342E")]
		[Address(RVA = "0xD94B9C", Offset = "0xD94B9C", VA = "0xD94B9C")]
		public DirectClickRouter()
		{
		}
	}
	[Token(Token = "0x20006AF")]
	public static class DisplayController
	{
		[Token(Token = "0x4002D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly IDisplayController[] helper;

		[Token(Token = "0x1700071A")]
		public static IDisplayController Default
		{
			[Token(Token = "0x600342F")]
			[Address(RVA = "0xD94ED4", Offset = "0xD94ED4", VA = "0xD94ED4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6003430")]
		[Address(RVA = "0xD94F30", Offset = "0xD94F30", VA = "0xD94F30")]
		public static IDisplayController ForDisplay(int display)
		{
			return null;
		}
	}
	[Token(Token = "0x20006B0")]
	internal class DisplayControllerInternal : IDisplayController
	{
		[Token(Token = "0x4002D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Vector2 anchorMin;

		[Token(Token = "0x4002D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector2 anchorMax;

		[Token(Token = "0x4002D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector2 offsetMin;

		[Token(Token = "0x4002D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector2 offsetMax;

		[Token(Token = "0x4002D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 scale;

		[Token(Token = "0x4002DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject fullscreenCanvas;

		[Token(Token = "0x4002DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private RectTransform target;

		[Token(Token = "0x4002DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private RectTransform targetParent;

		[Token(Token = "0x4002DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool isAlwaysFullscreen;

		[Token(Token = "0x4002DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int targetDisplay;

		[Token(Token = "0x1700071B")]
		public bool IsFullscreen
		{
			[Token(Token = "0x6003433")]
			[Address(RVA = "0xD95174", Offset = "0xD95174", VA = "0xD95174", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6003432")]
		[Address(RVA = "0xD9509C", Offset = "0xD9509C", VA = "0xD9509C")]
		internal DisplayControllerInternal(int display)
		{
		}

		[Token(Token = "0x6003434")]
		[Address(RVA = "0xD95208", Offset = "0xD95208", VA = "0xD95208", Slot = "5")]
		public void ToFullscreen(RectTransform rectTransform)
		{
		}

		[Token(Token = "0x6003435")]
		[Address(RVA = "0xD956A0", Offset = "0xD956A0", VA = "0xD956A0", Slot = "6")]
		public void ToNormal()
		{
		}

		[Token(Token = "0x6003436")]
		[Address(RVA = "0xD9542C", Offset = "0xD9542C", VA = "0xD9542C")]
		private void Setup()
		{
		}
	}
	[Token(Token = "0x20006B1")]
	internal static class Extensions
	{
		[Token(Token = "0x6003437")]
		public static TComponent GetOrAddComponent<TComponent>(this GameObject target) where TComponent : Component
		{
			return null;
		}

		[Token(Token = "0x6003438")]
		[Address(RVA = "0x12FA138", Offset = "0x12FA138", VA = "0x12FA138")]
		public static void SetGameObjectActive(this Component component, bool isActive)
		{
		}

		[Token(Token = "0x6003439")]
		[Address(RVA = "0x12FA1E4", Offset = "0x12FA1E4", VA = "0x12FA1E4")]
		public static void OnClick(this Component component, UnityAction action)
		{
		}

		[Token(Token = "0x600343A")]
		[Address(RVA = "0x12FA328", Offset = "0x12FA328", VA = "0x12FA328")]
		public static void OnDoubleClick(this Component component, UnityAction action)
		{
		}
	}
	[Token(Token = "0x20006B2")]
	public interface ITimelineProvider
	{
		[Token(Token = "0x600343B")]
		string GetFormattedPosition(float normalizedTime);
	}
	[Token(Token = "0x20006B3")]
	public interface IActivate
	{
		[Token(Token = "0x600343C")]
		void Activate();
	}
	[Token(Token = "0x20006B4")]
	public interface IDeactivate
	{
		[Token(Token = "0x600343D")]
		void Deactivate();
	}
	[Token(Token = "0x20006B5")]
	public interface IDisplayController
	{
		[Token(Token = "0x1700071C")]
		bool IsFullscreen
		{
			[Token(Token = "0x600343E")]
			get;
		}

		[Token(Token = "0x600343F")]
		void ToFullscreen(RectTransform target);

		[Token(Token = "0x6003440")]
		void ToNormal();
	}
	[Token(Token = "0x20006B6")]
	public class OverlayController : MonoBehaviour
	{
		[Token(Token = "0x4002DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject target;

		[Token(Token = "0x4002DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject blocker;

		[Token(Token = "0x1700071D")]
		public GameObject Target
		{
			[Token(Token = "0x6003441")]
			[Address(RVA = "0xCC32D8", Offset = "0xCC32D8", VA = "0xCC32D8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003442")]
			[Address(RVA = "0xCC32E0", Offset = "0xCC32E0", VA = "0xCC32E0")]
			set
			{
			}
		}

		[Token(Token = "0x6003443")]
		[Address(RVA = "0xCC3450", Offset = "0xCC3450", VA = "0xCC3450")]
		private void Start()
		{
		}

		[Token(Token = "0x6003444")]
		[Address(RVA = "0xCC3454", Offset = "0xCC3454", VA = "0xCC3454")]
		public void ToggleHideOrShow()
		{
		}

		[Token(Token = "0x6003445")]
		[Address(RVA = "0xCC34DC", Offset = "0xCC34DC", VA = "0xCC34DC")]
		public void Show()
		{
		}

		[Token(Token = "0x6003446")]
		[Address(RVA = "0xCC3604", Offset = "0xCC3604", VA = "0xCC3604")]
		public void Hide()
		{
		}

		[Token(Token = "0x6003447")]
		[Address(RVA = "0xCC33A4", Offset = "0xCC33A4", VA = "0xCC33A4")]
		private void SetupTarget()
		{
		}

		[Token(Token = "0x6003448")]
		[Address(RVA = "0xCC36C4", Offset = "0xCC36C4", VA = "0xCC36C4")]
		private GameObject CreateBlocker(Canvas root)
		{
			return null;
		}

		[Token(Token = "0x6003449")]
		[Address(RVA = "0xCC3B0C", Offset = "0xCC3B0C", VA = "0xCC3B0C")]
		public OverlayController()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006B7")]
	public class FloatEvent : UnityEvent<float>
	{
		[Token(Token = "0x600344A")]
		[Address(RVA = "0x130C3D8", Offset = "0x130C3D8", VA = "0x130C3D8")]
		public FloatEvent()
		{
		}
	}
	[Token(Token = "0x20006B8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x919F18", Offset = "0x919F18")]
	public class Timeline : Selectable, IDragHandler, IEventSystemHandler, ICanvasElement, IInitializePotentialDragHandler
	{
		[Token(Token = "0x4002DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Image positionImage;

		[Token(Token = "0x4002DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Image previewImage;

		[Token(Token = "0x4002DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Text tooltipText;

		[Token(Token = "0x4002DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private RectTransform positionContainerRect;

		[Token(Token = "0x4002DAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private RectTransform handleContainerRect;

		[Token(Token = "0x4002DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private RectTransform tooltipContainerRect;

		[Token(Token = "0x4002DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private Vector2 handleOffset;

		[Token(Token = "0x4002DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private Camera cam;

		[Token(Token = "0x4002DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private DrivenRectTransformTracker tracker;

		[Token(Token = "0x4002DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private float previewPosition;

		[Token(Token = "0x4002DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private float stepSize;

		[Token(Token = "0x4002DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		private bool isInControl;

		[Token(Token = "0x4002DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private ITimelineProvider provider;

		[Token(Token = "0x4002DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		private RectTransform positionRect;

		[Token(Token = "0x4002DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		private RectTransform previewRect;

		[Token(Token = "0x4002DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		private RectTransform handleRect;

		[Token(Token = "0x4002DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		private RectTransform tooltipRect;

		[Token(Token = "0x4002DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9224D4", Offset = "0x9224D4")]
		[SerializeField]
		private float position;

		[Token(Token = "0x4002DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[SerializeField]
		private FloatEvent onSeeked;

		[Token(Token = "0x1700071E")]
		public RectTransform PositionRect
		{
			[Token(Token = "0x600344B")]
			[Address(RVA = "0xF0EA3C", Offset = "0xF0EA3C", VA = "0xF0EA3C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600344C")]
			[Address(RVA = "0xF0EA44", Offset = "0xF0EA44", VA = "0xF0EA44")]
			set
			{
			}
		}

		[Token(Token = "0x1700071F")]
		public RectTransform PreviewRect
		{
			[Token(Token = "0x600344D")]
			[Address(RVA = "0xF0EA4C", Offset = "0xF0EA4C", VA = "0xF0EA4C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600344E")]
			[Address(RVA = "0xF0EA54", Offset = "0xF0EA54", VA = "0xF0EA54")]
			set
			{
			}
		}

		[Token(Token = "0x17000720")]
		public RectTransform HandleRect
		{
			[Token(Token = "0x600344F")]
			[Address(RVA = "0xF0EA5C", Offset = "0xF0EA5C", VA = "0xF0EA5C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003450")]
			[Address(RVA = "0xF0EA64", Offset = "0xF0EA64", VA = "0xF0EA64")]
			set
			{
			}
		}

		[Token(Token = "0x17000721")]
		public RectTransform TooltipRect
		{
			[Token(Token = "0x6003451")]
			[Address(RVA = "0xF0EA6C", Offset = "0xF0EA6C", VA = "0xF0EA6C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003452")]
			[Address(RVA = "0xF0EA74", Offset = "0xF0EA74", VA = "0xF0EA74")]
			set
			{
			}
		}

		[Token(Token = "0x17000722")]
		public float Position
		{
			[Token(Token = "0x6003453")]
			[Address(RVA = "0xF0EA7C", Offset = "0xF0EA7C", VA = "0xF0EA7C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6003454")]
			[Address(RVA = "0xF0EA84", Offset = "0xF0EA84", VA = "0xF0EA84")]
			set
			{
			}
		}

		[Token(Token = "0x17000723")]
		public UnityEvent<float> OnSeeked
		{
			[Token(Token = "0x6003455")]
			[Address(RVA = "0xF0EAD0", Offset = "0xF0EAD0", VA = "0xF0EAD0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6003456")]
		[Address(RVA = "0xF0EAD8", Offset = "0xF0EAD8", VA = "0xF0EAD8", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6003457")]
		[Address(RVA = "0xF0EE70", Offset = "0xF0EE70", VA = "0xF0EE70", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6003458")]
		[Address(RVA = "0xF0EE9C", Offset = "0xF0EE9C", VA = "0xF0EE9C", Slot = "10")]
		protected override void OnRectTransformDimensionsChange()
		{
		}

		[Token(Token = "0x6003459")]
		[Address(RVA = "0xF0EEE4", Offset = "0xF0EEE4", VA = "0xF0EEE4")]
		private void Update()
		{
		}

		[Token(Token = "0x600345A")]
		[Address(RVA = "0xF0F3C8", Offset = "0xF0F3C8", VA = "0xF0F3C8", Slot = "31")]
		public override void OnMove(AxisEventData eventData)
		{
		}

		[Token(Token = "0x600345B")]
		[Address(RVA = "0xF0F540", Offset = "0xF0F540", VA = "0xF0F540")]
		private void Move(float value)
		{
		}

		[Token(Token = "0x600345C")]
		[Address(RVA = "0xF0EB18", Offset = "0xF0EB18", VA = "0xF0EB18")]
		private void UpdateReferences()
		{
		}

		[Token(Token = "0x600345D")]
		[Address(RVA = "0xF0ED74", Offset = "0xF0ED74", VA = "0xF0ED74")]
		private void UpdateVisuals()
		{
		}

		[Token(Token = "0x600345E")]
		[Address(RVA = "0xF0F2B4", Offset = "0xF0F2B4", VA = "0xF0F2B4")]
		protected void UpdateAnchorBasedVisuals(RectTransform rect, float position)
		{
		}

		[Token(Token = "0x600345F")]
		[Address(RVA = "0xF0F170", Offset = "0xF0F170", VA = "0xF0F170")]
		protected void UpdateFillableVisuals(RectTransform rect, Image image, float value)
		{
		}

		[Token(Token = "0x6003460")]
		[Address(RVA = "0xF0F5B4", Offset = "0xF0F5B4", VA = "0xF0F5B4")]
		private bool CanDrag()
		{
			return default(bool);
		}

		[Token(Token = "0x6003461")]
		[Address(RVA = "0xF0F600", Offset = "0xF0F600", VA = "0xF0F600")]
		private void UpdateDrag(PointerEventData eventData, Camera cam)
		{
		}

		[Token(Token = "0x6003462")]
		[Address(RVA = "0xF0F01C", Offset = "0xF0F01C", VA = "0xF0F01C")]
		private float GetPreviewPoint()
		{
			return default(float);
		}

		[Token(Token = "0x6003463")]
		[Address(RVA = "0xF0EA8C", Offset = "0xF0EA8C", VA = "0xF0EA8C")]
		private void SetPosition(float newPosition, bool sendCallback = true)
		{
		}

		[Token(Token = "0x6003464")]
		[Address(RVA = "0xF0F800", Offset = "0xF0F800", VA = "0xF0F800", Slot = "34")]
		public override void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6003465")]
		[Address(RVA = "0xF0F900", Offset = "0xF0F900", VA = "0xF0F900")]
		private void SetActive(GameObject gameObject, bool value)
		{
		}

		[Token(Token = "0x6003466")]
		[Address(RVA = "0xF0FAC4", Offset = "0xF0FAC4", VA = "0xF0FAC4", Slot = "35")]
		public override void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6003467")]
		[Address(RVA = "0xF0FBC4", Offset = "0xF0FBC4", VA = "0xF0FBC4", Slot = "32")]
		public override void OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6003468")]
		[Address(RVA = "0xF0FDA8", Offset = "0xF0FDA8", VA = "0xF0FDA8", Slot = "46")]
		public virtual void OnDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6003469")]
		[Address(RVA = "0xF0FE28", Offset = "0xF0FE28", VA = "0xF0FE28", Slot = "40")]
		public void Rebuild(CanvasUpdate executing)
		{
		}

		[Token(Token = "0x600346A")]
		[Address(RVA = "0xF0FE2C", Offset = "0xF0FE2C", VA = "0xF0FE2C", Slot = "42")]
		public void LayoutComplete()
		{
		}

		[Token(Token = "0x600346B")]
		[Address(RVA = "0xF0FE30", Offset = "0xF0FE30", VA = "0xF0FE30", Slot = "43")]
		public void GraphicUpdateComplete()
		{
		}

		[Token(Token = "0x600346C")]
		[Address(RVA = "0xF0FE34", Offset = "0xF0FE34", VA = "0xF0FE34", Slot = "45")]
		public void OnInitializePotentialDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600346D")]
		[Address(RVA = "0xF0FE4C", Offset = "0xF0FE4C", VA = "0xF0FE4C")]
		public Timeline()
		{
		}

		[SpecialName]
		[Token(Token = "0x600346E")]
		[Address(RVA = "0xF0FEE8", Offset = "0xF0FEE8", VA = "0xF0FEE8", Slot = "41")]
		private Transform UnityEngine.UI.ICanvasElement.get_transform()
		{
			return null;
		}

		[Token(Token = "0x600346F")]
		[Address(RVA = "0xF0FEF0", Offset = "0xF0FEF0", VA = "0xF0FEF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9323D8", Offset = "0x9323D8")]
		private bool <OnMove>b__40_0()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20006B9")]
	public class VideoController : MonoBehaviour
	{
		[Token(Token = "0x4002DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private RawImage screen;

		[Token(Token = "0x4002DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool startAfterPreparation;

		[Token(Token = "0x4002DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x922544", Offset = "0x922544")]
		private VideoPlayer videoPlayer;

		[Token(Token = "0x4002DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioSource audioSource;

		[Token(Token = "0x4002DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9225A0", Offset = "0x9225A0")]
		private UnityEvent onPrepared;

		[Token(Token = "0x4002DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private UnityEvent onStartedPlaying;

		[Token(Token = "0x4002DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private UnityEvent onFinishedPlaying;

		[Token(Token = "0x17000724")]
		public bool StartAfterPreparation
		{
			[Token(Token = "0x6003470")]
			[Address(RVA = "0xE1BA3C", Offset = "0xE1BA3C", VA = "0xE1BA3C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6003471")]
			[Address(RVA = "0xE1BA44", Offset = "0xE1BA44", VA = "0xE1BA44")]
			set
			{
			}
		}

		[Token(Token = "0x17000725")]
		public float NormalizedTime
		{
			[Token(Token = "0x6003472")]
			[Address(RVA = "0xE1BA50", Offset = "0xE1BA50", VA = "0xE1BA50")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000726")]
		public ulong Duration
		{
			[Token(Token = "0x6003473")]
			[Address(RVA = "0xE1BAA0", Offset = "0xE1BAA0", VA = "0xE1BAA0")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x17000727")]
		public ulong Time
		{
			[Token(Token = "0x6003474")]
			[Address(RVA = "0xE1BAFC", Offset = "0xE1BAFC", VA = "0xE1BAFC")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x17000728")]
		public bool IsPrepared
		{
			[Token(Token = "0x6003475")]
			[Address(RVA = "0xE1BB30", Offset = "0xE1BB30", VA = "0xE1BB30")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000729")]
		public bool IsPlaying
		{
			[Token(Token = "0x6003476")]
			[Address(RVA = "0xE1BB4C", Offset = "0xE1BB4C", VA = "0xE1BB4C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700072A")]
		public float Volume
		{
			[Token(Token = "0x6003477")]
			[Address(RVA = "0xE1BB68", Offset = "0xE1BB68", VA = "0xE1BB68")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6003478")]
			[Address(RVA = "0xE1BC08", Offset = "0xE1BC08", VA = "0xE1BC08")]
			set
			{
			}
		}

		[Token(Token = "0x1700072B")]
		public RawImage Screen
		{
			[Token(Token = "0x6003479")]
			[Address(RVA = "0xE1BCC0", Offset = "0xE1BCC0", VA = "0xE1BCC0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600347A")]
			[Address(RVA = "0xE1BCC8", Offset = "0xE1BCC8", VA = "0xE1BCC8")]
			set
			{
			}
		}

		[Token(Token = "0x1700072C")]
		public UnityEvent OnPrepared
		{
			[Token(Token = "0x600347B")]
			[Address(RVA = "0xE1BCD0", Offset = "0xE1BCD0", VA = "0xE1BCD0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700072D")]
		public UnityEvent OnStartedPlaying
		{
			[Token(Token = "0x600347C")]
			[Address(RVA = "0xE1BCD8", Offset = "0xE1BCD8", VA = "0xE1BCD8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700072E")]
		public UnityEvent OnFinishedPlaying
		{
			[Token(Token = "0x600347D")]
			[Address(RVA = "0xE1BCE0", Offset = "0xE1BCE0", VA = "0xE1BCE0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600347E")]
		[Address(RVA = "0xE1BCE8", Offset = "0xE1BCE8", VA = "0xE1BCE8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600347F")]
		[Address(RVA = "0xE1BEC0", Offset = "0xE1BEC0", VA = "0xE1BEC0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6003480")]
		[Address(RVA = "0xE1C098", Offset = "0xE1C098", VA = "0xE1C098")]
		private void Start()
		{
		}

		[Token(Token = "0x6003481")]
		[Address(RVA = "0xE1C154", Offset = "0xE1C154", VA = "0xE1C154")]
		public void PrepareForUrl(string url)
		{
		}

		[Token(Token = "0x6003482")]
		[Address(RVA = "0xE1C1AC", Offset = "0xE1C1AC", VA = "0xE1C1AC")]
		public void PrepareForClip(VideoClip clip)
		{
		}

		[Token(Token = "0x6003483")]
		[Address(RVA = "0xE1C204", Offset = "0xE1C204", VA = "0xE1C204")]
		public void Play()
		{
		}

		[Token(Token = "0x6003484")]
		[Address(RVA = "0xE1C25C", Offset = "0xE1C25C", VA = "0xE1C25C")]
		public void Pause()
		{
		}

		[Token(Token = "0x6003485")]
		[Address(RVA = "0xE1C278", Offset = "0xE1C278", VA = "0xE1C278")]
		public void TogglePlayPause()
		{
		}

		[Token(Token = "0x6003486")]
		[Address(RVA = "0xE1C2C8", Offset = "0xE1C2C8", VA = "0xE1C2C8")]
		public void SetPlaybackSpeed(float speed)
		{
		}

		[Token(Token = "0x6003487")]
		[Address(RVA = "0xE1C2E4", Offset = "0xE1C2E4", VA = "0xE1C2E4")]
		public void Seek(float time)
		{
		}

		[Token(Token = "0x6003488")]
		[Address(RVA = "0xE1C348", Offset = "0xE1C348", VA = "0xE1C348")]
		private void OnStarted(VideoPlayer source)
		{
		}

		[Token(Token = "0x6003489")]
		[Address(RVA = "0xE1C364", Offset = "0xE1C364", VA = "0xE1C364")]
		private void OnFinished(VideoPlayer source)
		{
		}

		[Token(Token = "0x600348A")]
		[Address(RVA = "0xE1C380", Offset = "0xE1C380", VA = "0xE1C380")]
		private void OnPrepareCompleted(VideoPlayer source)
		{
		}

		[Token(Token = "0x600348B")]
		[Address(RVA = "0xE1C51C", Offset = "0xE1C51C", VA = "0xE1C51C")]
		private void SetupScreenAspectRatio()
		{
		}

		[Token(Token = "0x600348C")]
		[Address(RVA = "0xE1C400", Offset = "0xE1C400", VA = "0xE1C400")]
		private void SetupAudio()
		{
		}

		[Token(Token = "0x600348D")]
		[Address(RVA = "0xE1C5EC", Offset = "0xE1C5EC", VA = "0xE1C5EC")]
		private void OnError(VideoPlayer source, string message)
		{
		}

		[Token(Token = "0x600348E")]
		[Address(RVA = "0xE1BCEC", Offset = "0xE1BCEC", VA = "0xE1BCEC")]
		private void SubscribeToVideoPlayerEvents()
		{
		}

		[Token(Token = "0x600348F")]
		[Address(RVA = "0xE1BEC4", Offset = "0xE1BEC4", VA = "0xE1BEC4")]
		private void UnsubscribeFromVideoPlayerEvents()
		{
		}

		[Token(Token = "0x6003490")]
		[Address(RVA = "0xE1C5F0", Offset = "0xE1C5F0", VA = "0xE1C5F0")]
		public VideoController()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006BA")]
	public class VolumeInfo
	{
		[Token(Token = "0x4002DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float Minimum;

		[Token(Token = "0x4002DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sprite Sprite;

		[Token(Token = "0x6003491")]
		[Address(RVA = "0xE21250", Offset = "0xE21250", VA = "0xE21250")]
		public VolumeInfo()
		{
		}
	}
	[Token(Token = "0x20006BB")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x919F78", Offset = "0x919F78")]
	public class VideoPresenter : MonoBehaviour, ITimelineProvider
	{
		[Serializable]
		[Token(Token = "0x20006BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x919FD8", Offset = "0x919FD8")]
		private sealed class <>c
		{
			[Token(Token = "0x4002DDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002DDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<VolumeInfo> <>9__30_0;

			[Token(Token = "0x60034A2")]
			[Address(RVA = "0x11B88B0", Offset = "0x11B88B0", VA = "0x11B88B0")]
			public <>c()
			{
			}

			[Token(Token = "0x60034A3")]
			[Address(RVA = "0x11B88B8", Offset = "0x11B88B8", VA = "0x11B88B8")]
			internal int <Start>b__30_0(VolumeInfo v1, VolumeInfo v2)
			{
				return default(int);
			}
		}

		[Token(Token = "0x20006BD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x919FE8", Offset = "0x919FE8")]
		private sealed class <SetCurrentPosition>d__40 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002DE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002DE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002DE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VideoPresenter <>4__this;

			[Token(Token = "0x17000730")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60034A7")]
				[Address(RVA = "0x11B8A94", Offset = "0x11B8A94", VA = "0x11B8A94", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000731")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60034A9")]
				[Address(RVA = "0x11B8ADC", Offset = "0x11B8ADC", VA = "0x11B8ADC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60034A4")]
			[Address(RVA = "0x11B88F4", Offset = "0x11B88F4", VA = "0x11B88F4")]
			[DebuggerHidden]
			public <SetCurrentPosition>d__40(int <>1__state)
			{
			}

			[Token(Token = "0x60034A5")]
			[Address(RVA = "0x11B8920", Offset = "0x11B8920", VA = "0x11B8920", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60034A6")]
			[Address(RVA = "0x11B8924", Offset = "0x11B8924", VA = "0x11B8924", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60034A8")]
			[Address(RVA = "0x11B8A9C", Offset = "0x11B8A9C", VA = "0x11B8A9C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002DC3")]
		private const string MinutesFormat = "{0:00}:{1:00}";

		[Token(Token = "0x4002DC4")]
		private const string HoursFormat = "{0:00}:{1:00}:{2:00}";

		[Token(Token = "0x4002DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private IDisplayController display;

		[Token(Token = "0x4002DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private VideoController controller;

		[Token(Token = "0x4002DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float previousVolume;

		[Token(Token = "0x4002DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x92260C", Offset = "0x92260C")]
		public Transform Screen;

		[Token(Token = "0x4002DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform ControlsPanel;

		[Token(Token = "0x4002DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform LoadingIndicator;

		[Token(Token = "0x4002DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform Thumbnail;

		[Token(Token = "0x4002DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Timeline Timeline;

		[Token(Token = "0x4002DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Slider Volume;

		[Token(Token = "0x4002DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Image PlayPause;

		[Token(Token = "0x4002DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Image MuteUnmute;

		[Token(Token = "0x4002DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Image NormalFullscreen;

		[Token(Token = "0x4002DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Text Current;

		[Token(Token = "0x4002DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Text Duration;

		[Token(Token = "0x4002DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private int targetDisplay;

		[Token(Token = "0x4002DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x922654", Offset = "0x922654")]
		public KeyCode FullscreenKey;

		[Token(Token = "0x4002DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public KeyCode WindowedKey;

		[Token(Token = "0x4002DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public KeyCode TogglePlayKey;

		[Token(Token = "0x4002DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x92268C", Offset = "0x92268C")]
		public bool ToggleScreenOnDoubleClick;

		[Token(Token = "0x4002DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		public bool TogglePlayPauseOnClick;

		[Token(Token = "0x4002DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9226A0", Offset = "0x9226A0")]
		public Sprite Play;

		[Token(Token = "0x4002DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Sprite Pause;

		[Token(Token = "0x4002DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Sprite Normal;

		[Token(Token = "0x4002DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Sprite Fullscreen;

		[Token(Token = "0x4002DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public VolumeInfo[] Volumes;

		[Token(Token = "0x1700072F")]
		public int TargetDisplay
		{
			[Token(Token = "0x6003492")]
			[Address(RVA = "0xE1E078", Offset = "0xE1E078", VA = "0xE1E078")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6003493")]
			[Address(RVA = "0xE1E080", Offset = "0xE1E080", VA = "0xE1E080")]
			set
			{
			}
		}

		[Token(Token = "0x6003494")]
		[Address(RVA = "0xE1E0FC", Offset = "0xE1E0FC", VA = "0xE1E0FC")]
		private void Start()
		{
		}

		[Token(Token = "0x6003495")]
		[Address(RVA = "0xE1E5A8", Offset = "0xE1E5A8", VA = "0xE1E5A8")]
		private void Update()
		{
		}

		[Token(Token = "0x6003496")]
		[Address(RVA = "0xE1E7D0", Offset = "0xE1E7D0", VA = "0xE1E7D0", Slot = "4")]
		public string GetFormattedPosition(float time)
		{
			return null;
		}

		[Token(Token = "0x6003497")]
		[Address(RVA = "0xE1E9E0", Offset = "0xE1E9E0", VA = "0xE1E9E0")]
		private void ToggleMute()
		{
		}

		[Token(Token = "0x6003498")]
		[Address(RVA = "0xE1EA64", Offset = "0xE1EA64", VA = "0xE1EA64")]
		private void Prepare()
		{
		}

		[Token(Token = "0x6003499")]
		[Address(RVA = "0xE1E610", Offset = "0xE1E610", VA = "0xE1E610")]
		private void CheckKeys()
		{
		}

		[Token(Token = "0x600349A")]
		[Address(RVA = "0xE1EA9C", Offset = "0xE1EA9C", VA = "0xE1EA9C")]
		private void ToggleIsPlaying()
		{
		}

		[Token(Token = "0x600349B")]
		[Address(RVA = "0xE1EB18", Offset = "0xE1EB18", VA = "0xE1EB18")]
		private void OnStartedPlaying()
		{
		}

		[Token(Token = "0x600349C")]
		[Address(RVA = "0xE1ED0C", Offset = "0xE1ED0C", VA = "0xE1ED0C")]
		private void OnVolumeChanged(float volume)
		{
		}

		[Token(Token = "0x600349D")]
		[Address(RVA = "0xE1EDE0", Offset = "0xE1EDE0", VA = "0xE1EDE0")]
		private void ToggleFullscreen()
		{
		}

		[Token(Token = "0x600349E")]
		[Address(RVA = "0xE1ECA0", Offset = "0xE1ECA0", VA = "0xE1ECA0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9323E8", Offset = "0x9323E8")]
		private IEnumerator SetCurrentPosition()
		{
			return null;
		}

		[Token(Token = "0x600349F")]
		[Address(RVA = "0xE1E86C", Offset = "0xE1E86C", VA = "0xE1E86C")]
		private string PrettyTimeFormat(TimeSpan time)
		{
			return null;
		}

		[Token(Token = "0x60034A0")]
		[Address(RVA = "0xE1EFDC", Offset = "0xE1EFDC", VA = "0xE1EFDC")]
		public VideoPresenter()
		{
		}
	}
}
namespace Unity.VideoHelper.Animation
{
	[Token(Token = "0x20006BE")]
	public abstract class AnimationCurveAnimator : MonoBehaviour
	{
		[Token(Token = "0x20006BF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x919FF8", Offset = "0x919FF8")]
		private sealed class <AnimateInternal>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002DEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002DEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002DEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AnimationCurveAnimator <>4__this;

			[Token(Token = "0x4002DED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AnimationCurve curve;

			[Token(Token = "0x4002DEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action<float> action;

			[Token(Token = "0x4002DEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float duration;

			[Token(Token = "0x17000737")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60034C1")]
				[Address(RVA = "0xBDB318", Offset = "0xBDB318", VA = "0xBDB318", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000738")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60034C3")]
				[Address(RVA = "0xBDB360", Offset = "0xBDB360", VA = "0xBDB360", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60034BE")]
			[Address(RVA = "0xBDB1E4", Offset = "0xBDB1E4", VA = "0xBDB1E4")]
			[DebuggerHidden]
			public <AnimateInternal>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x60034BF")]
			[Address(RVA = "0xBDB210", Offset = "0xBDB210", VA = "0xBDB210", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60034C0")]
			[Address(RVA = "0xBDB214", Offset = "0xBDB214", VA = "0xBDB214", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60034C2")]
			[Address(RVA = "0xBDB320", Offset = "0xBDB320", VA = "0xBDB320", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AnimationCurve inAnimation;

		[Token(Token = "0x4002DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AnimationCurve outAnimation;

		[Token(Token = "0x4002DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool smooth;

		[Token(Token = "0x4002DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float time;

		[Token(Token = "0x4002DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Coroutine currentCoroutine;

		[Token(Token = "0x4002DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x922708", Offset = "0x922708")]
		private float <InDuration>k__BackingField;

		[Token(Token = "0x4002DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x922718", Offset = "0x922718")]
		private float <OutDuration>k__BackingField;

		[Token(Token = "0x17000732")]
		public float InDuration
		{
			[Token(Token = "0x60034AA")]
			[Address(RVA = "0xC15D00", Offset = "0xC15D00", VA = "0xC15D00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x932498", Offset = "0x932498")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60034AB")]
			[Address(RVA = "0xC15D08", Offset = "0xC15D08", VA = "0xC15D08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9324A8", Offset = "0x9324A8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000733")]
		public float OutDuration
		{
			[Token(Token = "0x60034AC")]
			[Address(RVA = "0xC15D10", Offset = "0xC15D10", VA = "0xC15D10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9324B8", Offset = "0x9324B8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60034AD")]
			[Address(RVA = "0xC15D18", Offset = "0xC15D18", VA = "0xC15D18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9324C8", Offset = "0x9324C8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000734")]
		public AnimationCurve In
		{
			[Token(Token = "0x60034AE")]
			[Address(RVA = "0xC15D20", Offset = "0xC15D20", VA = "0xC15D20")]
			get
			{
				return null;
			}
			[Token(Token = "0x60034AF")]
			[Address(RVA = "0xC15D28", Offset = "0xC15D28", VA = "0xC15D28")]
			set
			{
			}
		}

		[Token(Token = "0x17000735")]
		public AnimationCurve Out
		{
			[Token(Token = "0x60034B0")]
			[Address(RVA = "0xC15DB4", Offset = "0xC15DB4", VA = "0xC15DB4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60034B1")]
			[Address(RVA = "0xC15DBC", Offset = "0xC15DBC", VA = "0xC15DBC")]
			set
			{
			}
		}

		[Token(Token = "0x17000736")]
		public bool Smooth
		{
			[Token(Token = "0x60034B2")]
			[Address(RVA = "0xC15E48", Offset = "0xC15E48", VA = "0xC15E48")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60034B3")]
			[Address(RVA = "0xC15E50", Offset = "0xC15E50", VA = "0xC15E50")]
			set
			{
			}
		}

		[Token(Token = "0x60034B4")]
		[Address(RVA = "0xC15E5C", Offset = "0xC15E5C", VA = "0xC15E5C", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60034B5")]
		[Address(RVA = "0xC15E88", Offset = "0xC15E88", VA = "0xC15E88")]
		protected void Animate(AnimationCurve curve, float duration, Action<float> action)
		{
		}

		[Token(Token = "0x60034B6")]
		[Address(RVA = "0xC15F34", Offset = "0xC15F34", VA = "0xC15F34", Slot = "5")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9324D8", Offset = "0x9324D8")]
		protected virtual IEnumerator AnimateInternal(AnimationCurve curve, float duration, Action<float> action)
		{
			return null;
		}

		[Token(Token = "0x60034B7")]
		[Address(RVA = "0xC15FC4", Offset = "0xC15FC4", VA = "0xC15FC4")]
		private void CallbackFinished(AnimationCurve curve)
		{
		}

		[Token(Token = "0x60034B8")]
		[Address(RVA = "0xC15FF8", Offset = "0xC15FF8", VA = "0xC15FF8")]
		private void CallbackStarting(AnimationCurve curve)
		{
		}

		[Token(Token = "0x60034B9")]
		[Address(RVA = "0xC1602C", Offset = "0xC1602C", VA = "0xC1602C", Slot = "6")]
		protected virtual void InStarting()
		{
		}

		[Token(Token = "0x60034BA")]
		[Address(RVA = "0xC16030", Offset = "0xC16030", VA = "0xC16030", Slot = "7")]
		protected virtual void OutStarting()
		{
		}

		[Token(Token = "0x60034BB")]
		[Address(RVA = "0xC16034", Offset = "0xC16034", VA = "0xC16034", Slot = "8")]
		protected virtual void InFinished()
		{
		}

		[Token(Token = "0x60034BC")]
		[Address(RVA = "0xC16038", Offset = "0xC16038", VA = "0xC16038", Slot = "9")]
		protected virtual void OutFinished()
		{
		}

		[Token(Token = "0x60034BD")]
		[Address(RVA = "0xC1603C", Offset = "0xC1603C", VA = "0xC1603C")]
		protected AnimationCurveAnimator()
		{
		}
	}
	[Token(Token = "0x20006C0")]
	public class CanvasGroupAnimator : AnimationCurveAnimator, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4002DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public CanvasGroup Group;

		[Token(Token = "0x60034C4")]
		[Address(RVA = "0x1035CCC", Offset = "0x1035CCC", VA = "0x1035CCC", Slot = "10")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60034C5")]
		[Address(RVA = "0x1035D80", Offset = "0x1035D80", VA = "0x1035D80", Slot = "11")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60034C6")]
		[Address(RVA = "0x1035E34", Offset = "0x1035E34", VA = "0x1035E34")]
		public CanvasGroupAnimator()
		{
		}

		[Token(Token = "0x60034C7")]
		[Address(RVA = "0x1035E3C", Offset = "0x1035E3C", VA = "0x1035E3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x932588", Offset = "0x932588")]
		private void <OnPointerEnter>b__1_0(float x)
		{
		}

		[Token(Token = "0x60034C8")]
		[Address(RVA = "0x1035E58", Offset = "0x1035E58", VA = "0x1035E58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x932598", Offset = "0x932598")]
		private void <OnPointerExit>b__2_0(float x)
		{
		}
	}
	[Token(Token = "0x20006C1")]
	public class ScaleTransformAnimator : AnimationCurveAnimator, IActivate, IDeactivate
	{
		[Token(Token = "0x4002DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform Target;

		[Token(Token = "0x60034C9")]
		[Address(RVA = "0xDC5F54", Offset = "0xDC5F54", VA = "0xDC5F54", Slot = "10")]
		public void Activate()
		{
		}

		[Token(Token = "0x60034CA")]
		[Address(RVA = "0xDC6008", Offset = "0xDC6008", VA = "0xDC6008", Slot = "11")]
		public void Deactivate()
		{
		}

		[Token(Token = "0x60034CB")]
		[Address(RVA = "0xDC60BC", Offset = "0xDC60BC", VA = "0xDC60BC")]
		public ScaleTransformAnimator()
		{
		}

		[Token(Token = "0x60034CC")]
		[Address(RVA = "0xDC60C4", Offset = "0xDC60C4", VA = "0xDC60C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9325A8", Offset = "0x9325A8")]
		private void <Activate>b__1_0(float x)
		{
		}

		[Token(Token = "0x60034CD")]
		[Address(RVA = "0xDC60E8", Offset = "0xDC60E8", VA = "0xDC60E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9325B8", Offset = "0x9325B8")]
		private void <Deactivate>b__2_0(float x)
		{
		}
	}
}
namespace Google.Maps.Scripts
{
	[Token(Token = "0x20006C2")]
	public class DeviceCountryProvider : CountryProvider
	{
		[Token(Token = "0x4002DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string CountryCode;

		[Token(Token = "0x60034CE")]
		[Address(RVA = "0xD94430", Offset = "0xD94430", VA = "0xD94430")]
		public void Awake()
		{
		}

		[Token(Token = "0x60034CF")]
		[Address(RVA = "0xD94970", Offset = "0xD94970", VA = "0xD94970", Slot = "5")]
		public override string GetCountry()
		{
			return null;
		}

		[Token(Token = "0x60034D0")]
		[Address(RVA = "0xD94978", Offset = "0xD94978", VA = "0xD94978")]
		public DeviceCountryProvider()
		{
		}
	}
}
namespace Google.Maps.Demos.Utilities
{
	[Token(Token = "0x20006C3")]
	public class JoystickButton : Button
	{
		[Token(Token = "0x60034D1")]
		[Address(RVA = "0x17DD054", Offset = "0x17DD054", VA = "0x17DD054")]
		public bool IsButtonPressed()
		{
			return default(bool);
		}

		[Token(Token = "0x60034D2")]
		[Address(RVA = "0x17DD05C", Offset = "0x17DD05C", VA = "0x17DD05C")]
		public JoystickButton()
		{
		}
	}
	[Token(Token = "0x20006C4")]
	public class JoystickController : MonoBehaviour, IDragHandler, IEventSystemHandler, IPointerUpHandler, IPointerDownHandler
	{
		[Token(Token = "0x4002DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Image Background;

		[Token(Token = "0x4002DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform CameraRig;

		[Token(Token = "0x4002DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 InputDirection;

		[Token(Token = "0x4002DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Image Lever;

		[Token(Token = "0x4002DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float MaxRotationSpeed;

		[Token(Token = "0x4002DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float MaxForwardSpeed;

		[Token(Token = "0x4002DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public JoystickButton DownButton;

		[Token(Token = "0x4002DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float MinAltitude;

		[Token(Token = "0x4002DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public JoystickButton UpButton;

		[Token(Token = "0x4002DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float MaxAltitude;

		[Token(Token = "0x4002DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float MaxVerticalSpeed;

		[Token(Token = "0x4002DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Camera Camera;

		[Token(Token = "0x60034D3")]
		[Address(RVA = "0x17DD064", Offset = "0x17DD064", VA = "0x17DD064")]
		private void Start()
		{
		}

		[Token(Token = "0x60034D4")]
		[Address(RVA = "0x17DD24C", Offset = "0x17DD24C", VA = "0x17DD24C")]
		private void Update()
		{
		}

		[Token(Token = "0x60034D5")]
		[Address(RVA = "0x17DD7B8", Offset = "0x17DD7B8", VA = "0x17DD7B8", Slot = "4")]
		public void OnDrag(PointerEventData ped)
		{
		}

		[Token(Token = "0x60034D6")]
		[Address(RVA = "0x17DD970", Offset = "0x17DD970", VA = "0x17DD970", Slot = "6")]
		public void OnPointerDown(PointerEventData ped)
		{
		}

		[Token(Token = "0x60034D7")]
		[Address(RVA = "0x17DD974", Offset = "0x17DD974", VA = "0x17DD974", Slot = "5")]
		public void OnPointerUp(PointerEventData ped)
		{
		}

		[Token(Token = "0x60034D8")]
		[Address(RVA = "0x17DD9D0", Offset = "0x17DD9D0", VA = "0x17DD9D0")]
		public JoystickController()
		{
		}
	}
}
namespace Google.Maps.Examples
{
	[Token(Token = "0x20006C5")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x91A008", Offset = "0x91A008")]
	public class BasicExample : MonoBehaviour
	{
		[Token(Token = "0x4002DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x922728", Offset = "0x922728")]
		public LatLng LatLng;

		[Token(Token = "0x60034D9")]
		[Address(RVA = "0xC1EB88", Offset = "0xC1EB88", VA = "0xC1EB88")]
		private void Start()
		{
		}

		[Token(Token = "0x60034DA")]
		[Address(RVA = "0xC1ECEC", Offset = "0xC1ECEC", VA = "0xC1ECEC")]
		public void OnLoaded(MapLoadedArgs args)
		{
		}

		[Token(Token = "0x60034DB")]
		[Address(RVA = "0xC1ECF0", Offset = "0xC1ECF0", VA = "0xC1ECF0")]
		public BasicExample()
		{
		}
	}
}
namespace Google.Maps.Examples.Shared
{
	[Token(Token = "0x20006C6")]
	public sealed class ApiKeyChecker : MonoBehaviour
	{
		[Token(Token = "0x4002E00")]
		private const string ApiKeyWebsite = "https://developers.google.com/maps/documentation/gaming/quick_start#step_5_set_the_api_key_value";

		[Token(Token = "0x4002E01")]
		private const string WebsiteSolution = "Please get an API Key by going to: https://developers.google.com/maps/documentation/gaming/quick_start#step_5_set_the_api_key_value";

		[Token(Token = "0x60034DC")]
		[Address(RVA = "0xC178F8", Offset = "0xC178F8", VA = "0xC178F8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60034DD")]
		[Address(RVA = "0xC17988", Offset = "0xC17988", VA = "0xC17988")]
		internal static void ShowError(params MapsService[] mapsServices)
		{
		}

		[Token(Token = "0x60034DE")]
		[Address(RVA = "0xC17BE4", Offset = "0xC17BE4", VA = "0xC17BE4")]
		private static string GameObjectPath(GameObject gameObject)
		{
			return null;
		}

		[Token(Token = "0x60034DF")]
		[Address(RVA = "0xC17CF0", Offset = "0xC17CF0", VA = "0xC17CF0")]
		private static void ShowErrorWebsite(string errorTitle, string errorMessage)
		{
		}

		[Token(Token = "0x60034E0")]
		[Address(RVA = "0xC17D54", Offset = "0xC17D54", VA = "0xC17D54")]
		private static void ShowErrorNotAll(string errorTitle, string errorMessage)
		{
		}

		[Token(Token = "0x60034E1")]
		[Address(RVA = "0xC17DB8", Offset = "0xC17DB8", VA = "0xC17DB8")]
		public ApiKeyChecker()
		{
		}
	}
	[Token(Token = "0x20006C7")]
	public sealed class BuildingTexturer : MonoBehaviour
	{
		[Token(Token = "0x4002E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x922760", Offset = "0x922760")]
		public Material[] WallMaterials;

		[Token(Token = "0x4002E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x922798", Offset = "0x922798")]
		public Material[] RoofMaterials;

		[Token(Token = "0x60034E2")]
		[Address(RVA = "0xC26888", Offset = "0xC26888", VA = "0xC26888")]
		private void Awake()
		{
		}

		[Token(Token = "0x60034E3")]
		[Address(RVA = "0xC26C6C", Offset = "0xC26C6C", VA = "0xC26C6C")]
		internal void AssignNineSlicedMaterials(GameObject building, [Optional] int? index)
		{
		}

		[Token(Token = "0x60034E4")]
		[Address(RVA = "0xC26F0C", Offset = "0xC26F0C", VA = "0xC26F0C")]
		public BuildingTexturer()
		{
		}
	}
	[Token(Token = "0x20006C8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x91A068", Offset = "0x91A068")]
	public class CameraController : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20006C9")]
		public class MoveEvent : UnityEvent<Vector3>
		{
			[Token(Token = "0x60034E9")]
			[Address(RVA = "0xBDC608", Offset = "0xBDC608", VA = "0xBDC608")]
			public MoveEvent()
			{
			}
		}

		[Token(Token = "0x4002E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9227D0", Offset = "0x9227D0")]
		public float MovementSpeed;

		[Token(Token = "0x4002E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x922808", Offset = "0x922808")]
		public float RotationSpeed;

		[Token(Token = "0x4002E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x922840", Offset = "0x922840")]
		public float MinHeight;

		[Token(Token = "0x4002E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x922878", Offset = "0x922878")]
		public float MaxHeight;

		[Token(Token = "0x4002E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9228B0", Offset = "0x9228B0")]
		public float MinXRotation;

		[Token(Token = "0x4002E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9228E8", Offset = "0x9228E8")]
		public float MaxXRotation;

		[Token(Token = "0x4002E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public MoveEvent OnMove;

		[Token(Token = "0x4002E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityEvent OnRotate;

		[Token(Token = "0x4002E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UnityEvent OnTransform;

		[Token(Token = "0x4002E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float Azimuth;

		[Token(Token = "0x4002E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float Inclination;

		[Token(Token = "0x60034E5")]
		[Address(RVA = "0xC313B0", Offset = "0xC313B0", VA = "0xC313B0")]
		public void InitializeAzimuthAndInclination()
		{
		}

		[Token(Token = "0x60034E6")]
		[Address(RVA = "0xC31404", Offset = "0xC31404", VA = "0xC31404")]
		private void Awake()
		{
		}

		[Token(Token = "0x60034E7")]
		[Address(RVA = "0xC31408", Offset = "0xC31408", VA = "0xC31408")]
		private void Update()
		{
		}

		[Token(Token = "0x60034E8")]
		[Address(RVA = "0xC318FC", Offset = "0xC318FC", VA = "0xC318FC")]
		public CameraController()
		{
		}
	}
	[Token(Token = "0x20006CA")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x91A0C8", Offset = "0x91A0C8")]
	public sealed class DynamicMapsService : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20006CB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91A128", Offset = "0x91A128")]
		private sealed class <>c
		{
			[Token(Token = "0x4002E1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002E1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static UnityAction<MapLoadErrorArgs> <>9__14_0;

			[Token(Token = "0x60034F8")]
			[Address(RVA = "0xBE6B8C", Offset = "0xBE6B8C", VA = "0xBE6B8C")]
			public <>c()
			{
			}

			[Token(Token = "0x60034F9")]
			[Address(RVA = "0xBE6B94", Offset = "0xBE6B94", VA = "0xBE6B94")]
			internal void <Start>b__14_0(MapLoadErrorArgs args)
			{
			}
		}

		[Token(Token = "0x20006CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91A138", Offset = "0x91A138")]
		private sealed class <UnloadUnseen>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002E1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002E1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002E1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DynamicMapsService <>4__this;

			[Token(Token = "0x1700073A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60034FD")]
				[Address(RVA = "0xBE6D58", Offset = "0xBE6D58", VA = "0xBE6D58", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700073B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60034FF")]
				[Address(RVA = "0xBE6DA0", Offset = "0xBE6DA0", VA = "0xBE6DA0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60034FA")]
			[Address(RVA = "0xBE6C2C", Offset = "0xBE6C2C", VA = "0xBE6C2C")]
			[DebuggerHidden]
			public <UnloadUnseen>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x60034FB")]
			[Address(RVA = "0xBE6C58", Offset = "0xBE6C58", VA = "0xBE6C58", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60034FC")]
			[Address(RVA = "0xBE6C5C", Offset = "0xBE6C5C", VA = "0xBE6C5C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60034FE")]
			[Address(RVA = "0xBE6D60", Offset = "0xBE6D60", VA = "0xBE6D60", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002E0F")]
		private const float UnloadUnseenDelay = 5f;

		[Token(Token = "0x4002E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x922920", Offset = "0x922920")]
		public LatLng LatLng;

		[Token(Token = "0x4002E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x922958", Offset = "0x922958")]
		public float MaxDistance;

		[Token(Token = "0x4002E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x922990", Offset = "0x922990")]
		public GameObject Ground;

		[Token(Token = "0x4002E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9229C8", Offset = "0x9229C8")]
		public UnityEvent OnMapLoadStarted;

		[Token(Token = "0x4002E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x922A00", Offset = "0x922A00")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x922A00", Offset = "0x922A00")]
		public bool Loading;

		[Token(Token = "0x4002E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObjectOptions RenderingStyles;

		[Token(Token = "0x4002E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private MapsService _MapsService;

		[Token(Token = "0x4002E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 CameraPosition;

		[Token(Token = "0x4002E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Quaternion CameraRotation;

		[Token(Token = "0x4002E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private bool RestartCoroutinesOnEnable;

		[Token(Token = "0x4002E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Coroutine UnloadUnseenCoroutine;

		[Token(Token = "0x17000739")]
		public MapsService MapsService
		{
			[Token(Token = "0x60034EA")]
			[Address(RVA = "0xD97914", Offset = "0xD97914", VA = "0xD97914")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60034EB")]
		[Address(RVA = "0xD97970", Offset = "0xD97970", VA = "0xD97970")]
		private void Start()
		{
		}

		[Token(Token = "0x60034EC")]
		[Address(RVA = "0xD98000", Offset = "0xD98000", VA = "0xD98000")]
		private void StartCoroutines()
		{
		}

		[Token(Token = "0x60034ED")]
		[Address(RVA = "0xD980A0", Offset = "0xD980A0", VA = "0xD980A0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60034EE")]
		[Address(RVA = "0xD980D8", Offset = "0xD980D8", VA = "0xD980D8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60034EF")]
		[Address(RVA = "0xD98118", Offset = "0xD98118", VA = "0xD98118")]
		private void Update()
		{
		}

		[Token(Token = "0x60034F0")]
		[Address(RVA = "0xD981BC", Offset = "0xD981BC", VA = "0xD981BC")]
		internal Vector3 RecenterWorld(Camera camera)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60034F1")]
		[Address(RVA = "0xD97E50", Offset = "0xD97E50", VA = "0xD97E50")]
		private void ReCenterGround()
		{
		}

		[Token(Token = "0x60034F2")]
		[Address(RVA = "0xD97EBC", Offset = "0xD97EBC", VA = "0xD97EBC")]
		private void RefreshView()
		{
		}

		[Token(Token = "0x60034F3")]
		[Address(RVA = "0xD98034", Offset = "0xD98034", VA = "0xD98034")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9325C8", Offset = "0x9325C8")]
		private IEnumerator UnloadUnseen()
		{
			return null;
		}

		[Token(Token = "0x60034F4")]
		[Address(RVA = "0xD97CDC", Offset = "0xD97CDC", VA = "0xD97CDC")]
		private bool VerifyParameters()
		{
			return default(bool);
		}

		[Token(Token = "0x60034F5")]
		[Address(RVA = "0xD982D0", Offset = "0xD982D0", VA = "0xD982D0")]
		public DynamicMapsService()
		{
		}

		[Token(Token = "0x60034F6")]
		[Address(RVA = "0xD98370", Offset = "0xD98370", VA = "0xD98370")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x932628", Offset = "0x932628")]
		private void <Start>b__14_1(MapLoadedArgs args)
		{
		}
	}
	[Token(Token = "0x20006CD")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x91A148", Offset = "0x91A148")]
	public sealed class ErrorHandling : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20006CE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91A1A8", Offset = "0x91A1A8")]
		private sealed class <>c
		{
			[Token(Token = "0x4002E20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002E21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static UnityAction<MapLoadErrorArgs> <>9__0_0;

			[Token(Token = "0x6003503")]
			[Address(RVA = "0xBE8558", Offset = "0xBE8558", VA = "0xBE8558")]
			public <>c()
			{
			}

			[Token(Token = "0x6003504")]
			[Address(RVA = "0xBE8560", Offset = "0xBE8560", VA = "0xBE8560")]
			internal void <Awake>b__0_0(MapLoadErrorArgs args)
			{
			}
		}

		[Token(Token = "0x6003500")]
		[Address(RVA = "0x12F8004", Offset = "0x12F8004", VA = "0x12F8004")]
		private void Awake()
		{
		}

		[Token(Token = "0x6003501")]
		[Address(RVA = "0x12F815C", Offset = "0x12F815C", VA = "0x12F815C")]
		public ErrorHandling()
		{
		}
	}
	[Token(Token = "0x20006CF")]
	internal static class ExampleDefaults
	{
		[Token(Token = "0x4002E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly GameObjectOptions DefaultGameObjectOptions;

		[Token(Token = "0x4002E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly Bounds DefaultBounds;

		[Token(Token = "0x6003505")]
		[Address(RVA = "0x12F8164", Offset = "0x12F8164", VA = "0x12F8164")]
		static ExampleDefaults()
		{
		}
	}
	[Token(Token = "0x20006D0")]
	public static class ExampleErrors
	{
		[Token(Token = "0x6003506")]
		public static string MissingParameter<T>(MonoBehaviour script, T missingParameter, string missingParameterName, string context = "to operate")
		{
			return null;
		}

		[Token(Token = "0x6003507")]
		public static string EmptyArray<T>(MonoBehaviour script, T[] emptyArray, string emptyArrayName, string context = "to operate")
		{
			return null;
		}

		[Token(Token = "0x6003508")]
		public static string NullArrayElement<T>(MonoBehaviour script, T[] array, string arrayName, int index)
		{
			return null;
		}

		[Token(Token = "0x6003509")]
		public static string InvalidArrayIndex<T>(MonoBehaviour script, T[] array, string arrayName, int index)
		{
			return null;
		}

		[Token(Token = "0x600350A")]
		[Address(RVA = "0x12F8AD4", Offset = "0x12F8AD4", VA = "0x12F8AD4")]
		public static string NullMainCamera(MonoBehaviour script, string context = "to operate")
		{
			return null;
		}

		[Token(Token = "0x600350B")]
		[Address(RVA = "0x12F8B60", Offset = "0x12F8B60", VA = "0x12F8B60")]
		public static string NotGreaterThanZero(MonoBehaviour script, float value, string valueName, string context = "to operate")
		{
			return null;
		}

		[Token(Token = "0x600350C")]
		[Address(RVA = "0x12F8BD8", Offset = "0x12F8BD8", VA = "0x12F8BD8")]
		public static string NotGreaterThan(MonoBehaviour script, float value, string valueName, float minimum, [Optional] string minimumName, string context = "to operate")
		{
			return null;
		}

		[Token(Token = "0x600350D")]
		[Address(RVA = "0x12F8F14", Offset = "0x12F8F14", VA = "0x12F8F14")]
		public static string OutsideRange(MonoBehaviour script, int value, string valueName, int minimum, int maximum, string context = "to operate")
		{
			return null;
		}

		[Token(Token = "0x600350E")]
		[Address(RVA = "0x12F9208", Offset = "0x12F9208", VA = "0x12F9208")]
		public static string OutsideRange(MonoBehaviour script, float value, string valueName, float minimum, float maximum, string context = "to operate")
		{
			return null;
		}

		[Token(Token = "0x600350F")]
		[Address(RVA = "0x12F8EFC", Offset = "0x12F8EFC", VA = "0x12F8EFC")]
		private static bool IsZero(float value)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20006D1")]
	public static class Extruder
	{
		[Token(Token = "0x4002E24")]
		private const float DefaultWidth = 1f;

		[Token(Token = "0x4002E25")]
		private const string ParapetName = "Parapet";

		[Token(Token = "0x4002E26")]
		private const string BorderName = "Border";

		[Token(Token = "0x4002E27")]
		private const string OutlineName = "Outline";

		[Token(Token = "0x4002E28")]
		private const float UvScale = 1f;

		[Token(Token = "0x4002E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Vector2[] BorderShape;

		[Token(Token = "0x4002E2A")]
		private const float ExtrudedBuildingFootprintHeight = 10f;

		[Token(Token = "0x4002E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly Vector2[][] ParapetShapes;

		[Token(Token = "0x6003510")]
		[Address(RVA = "0x12FB824", Offset = "0x12FB824", VA = "0x12FB824")]
		private static Vector2[] OutlineCrossSectionWithWidth(float width)
		{
			return null;
		}

		[Token(Token = "0x6003511")]
		[Address(RVA = "0x12FB8C0", Offset = "0x12FB8C0", VA = "0x12FB8C0")]
		public static GameObject[] AddBuildingBorder(GameObject buildingGameObject, ExtrudedArea buildingShape, Material borderMaterial, float thickness = 1f)
		{
			return null;
		}

		[Token(Token = "0x6003512")]
		[Address(RVA = "0x12FBFBC", Offset = "0x12FBFBC", VA = "0x12FBFBC")]
		public static GameObject[] AddRandomBuildingParapet(GameObject buildingGameObject, ExtrudedArea buildingShape, Material parapetMaterial, float defaultBuildingHeight = 10f)
		{
			return null;
		}

		[Token(Token = "0x6003513")]
		[Address(RVA = "0x12FC604", Offset = "0x12FC604", VA = "0x12FC604")]
		public static GameObject[] UpdateBuildingParapet(GameObject buildingGameObject, ExtrudedArea buildingShape, Material parapetMaterial, float defaultBuildingHeight = 10f)
		{
			return null;
		}

		[Token(Token = "0x6003514")]
		[Address(RVA = "0x12FC694", Offset = "0x12FC694", VA = "0x12FC694")]
		private static void RemoveCurrentParapet(GameObject buildingGameObject)
		{
		}

		[Token(Token = "0x6003515")]
		[Address(RVA = "0x12FC7A8", Offset = "0x12FC7A8", VA = "0x12FC7A8")]
		public static GameObject[] AddBuildingParapet(GameObject buildingGameObject, ExtrudedArea buildingShape, Material parapetMaterial, int parapetType, float defaultBuildingHeight = 10f)
		{
			return null;
		}

		[Token(Token = "0x6003516")]
		[Address(RVA = "0x12FC048", Offset = "0x12FC048", VA = "0x12FC048")]
		private static GameObject[] AddBuildingParapet(GameObject buildingGameObject, ExtrudedArea buildingShape, Material parapetMaterial, float defaultBuildingHeight, int? parapetType)
		{
			return null;
		}

		[Token(Token = "0x6003517")]
		[Address(RVA = "0x12FBA38", Offset = "0x12FBA38", VA = "0x12FBA38")]
		private static void AddBuildingExtrusion(GameObject buildingGameObject, Material extrusionMaterial, ExtrudedArea.Extrusion extrusion, Vector2[] crossSection, float yOffset, ref List<GameObject> extrusions, bool isParapet, int extrusionIndex, int totalExtrusions, float thickness)
		{
		}

		[Token(Token = "0x6003518")]
		[Address(RVA = "0x12FCF38", Offset = "0x12FCF38", VA = "0x12FCF38")]
		public static GameObject[] AddAreaOutline(GameObject areaObject, Material extrusionMaterial, Area area, float outlineWidth)
		{
			return null;
		}

		[Token(Token = "0x6003519")]
		[Address(RVA = "0x12FD41C", Offset = "0x12FD41C", VA = "0x12FD41C")]
		public static GameObject[] AddAreaExternalOutline(GameObject areaObject, Material extrusionMaterial, Area area, float outlineWidth)
		{
			return null;
		}

		[Token(Token = "0x600351A")]
		[Address(RVA = "0x12FCFDC", Offset = "0x12FCFDC", VA = "0x12FCFDC")]
		private static GameObject[] ExtrudeEdgeSequences(GameObject areaObject, Material extrusionMaterial, List<Area.EdgeSequence> edgeSequences, float outlineWidth)
		{
			return null;
		}

		[Token(Token = "0x600351B")]
		[Address(RVA = "0x12FC874", Offset = "0x12FC874", VA = "0x12FC874")]
		private static List<Area.EdgeSequence> PadEdgeSequences(List<Area.EdgeSequence> edgeSequences)
		{
			return null;
		}

		[Token(Token = "0x600351C")]
		[Address(RVA = "0x12FCD40", Offset = "0x12FCD40", VA = "0x12FCD40")]
		private static bool CanMakeLoft(Vector2[] footprintVertices, Material extrusionMaterial, Vector2[] crossSection, float thickness, string loftName, out GameObject createdLoft)
		{
			return default(bool);
		}

		[Token(Token = "0x600351D")]
		[Address(RVA = "0x12FD4C0", Offset = "0x12FD4C0", VA = "0x12FD4C0")]
		private static bool CanLoft(Vector2[] paddedPath, Vector2[] crossSection, float thickness, out Vector3[] vertices, out int[] triangleIndices, out Vector2[] uvs)
		{
			return default(bool);
		}

		[Token(Token = "0x600351E")]
		[Address(RVA = "0x12FDB10", Offset = "0x12FDB10", VA = "0x12FDB10")]
		private static int SafeMod(int mod, int val)
		{
			return default(int);
		}

		[Token(Token = "0x600351F")]
		[Address(RVA = "0x12FDB20", Offset = "0x12FDB20", VA = "0x12FDB20")]
		private static Vector2[] MakeVector2Array(params float[] floats)
		{
			return null;
		}
	}
	[Token(Token = "0x20006D2")]
	public sealed class FloatingOriginUpdater : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20006D3")]
		public class OriginEvent : UnityEvent<Vector3>
		{
			[Token(Token = "0x600352A")]
			[Address(RVA = "0xBE96A4", Offset = "0xBE96A4", VA = "0xBE96A4")]
			public OriginEvent()
			{
			}
		}

		[Token(Token = "0x4002E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x922A60", Offset = "0x922A60")]
		private Vector3 <FloatingOrigin>k__BackingField;

		[Token(Token = "0x4002E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public OriginEvent OnFloatingOriginUpdate;

		[Token(Token = "0x4002E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x922A70", Offset = "0x922A70")]
		public CameraController CameraController;

		[Token(Token = "0x4002E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x922AA8", Offset = "0x922AA8")]
		public float FloatingOriginRange;

		[Token(Token = "0x4002E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x922AE0", Offset = "0x922AE0")]
		public bool DebugFloatingOrigin;

		[Token(Token = "0x4002E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public MapsService MapsService;

		[Token(Token = "0x4002E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GameObject[] AdditionalGameObjects;

		[Token(Token = "0x1700073C")]
		public Vector3 FloatingOrigin
		{
			[Token(Token = "0x6003521")]
			[Address(RVA = "0x130C8CC", Offset = "0x130C8CC", VA = "0x130C8CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x932688", Offset = "0x932688")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6003522")]
			[Address(RVA = "0x130C8D8", Offset = "0x130C8D8", VA = "0x130C8D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x932698", Offset = "0x932698")]
			private set
			{
			}
		}

		[Token(Token = "0x6003523")]
		[Address(RVA = "0x130C8E4", Offset = "0x130C8E4", VA = "0x130C8E4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6003524")]
		[Address(RVA = "0x130CB5C", Offset = "0x130CB5C", VA = "0x130CB5C")]
		private Vector3 GetCameraPositionOnGroundPlane()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6003525")]
		[Address(RVA = "0x130CB94", Offset = "0x130CB94", VA = "0x130CB94")]
		private void TryMoveFloatingOrigin(Vector3 moveAmount)
		{
		}

		[Token(Token = "0x6003526")]
		[Address(RVA = "0x130CDC8", Offset = "0x130CDC8", VA = "0x130CDC8")]
		public void SetAdditionalGameObjects(ICollection<GameObject> objects)
		{
		}

		[Token(Token = "0x6003527")]
		[Address(RVA = "0x130CF3C", Offset = "0x130CF3C", VA = "0x130CF3C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6003528")]
		[Address(RVA = "0x130D000", Offset = "0x130D000", VA = "0x130D000")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6003529")]
		[Address(RVA = "0x130D0C4", Offset = "0x130D0C4", VA = "0x130D0C4")]
		public FloatingOriginUpdater()
		{
		}
	}
	[Token(Token = "0x20006D4")]
	public class GyroController : MonoBehaviour
	{
		[Token(Token = "0x4002E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform CameraRig;

		[Token(Token = "0x4002E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text InfoTxt;

		[Token(Token = "0x4002E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float AngleX;

		[Token(Token = "0x4002E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform CameraTransform;

		[Token(Token = "0x4002E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Gyroscope Gyro;

		[Token(Token = "0x4002E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool GyroSupported;

		[Token(Token = "0x600352B")]
		[Address(RVA = "0x141366C", Offset = "0x141366C", VA = "0x141366C")]
		private void Start()
		{
		}

		[Token(Token = "0x600352C")]
		[Address(RVA = "0x1413824", Offset = "0x1413824", VA = "0x1413824")]
		private void Update()
		{
		}

		[Token(Token = "0x600352D")]
		[Address(RVA = "0x1413964", Offset = "0x1413964", VA = "0x1413964")]
		public GyroController()
		{
		}
	}
	[Token(Token = "0x20006D5")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x91A1B8", Offset = "0x91A1B8")]
	public sealed class InstructionsButton : MonoBehaviour
	{
		[Token(Token = "0x20006D6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91A218", Offset = "0x91A218")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4002E3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Button button;

			[Token(Token = "0x4002E3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public InstructionsButton <>4__this;

			[Token(Token = "0x6003530")]
			[Address(RVA = "0xE64BE8", Offset = "0xE64BE8", VA = "0xE64BE8")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6003531")]
			[Address(RVA = "0xE64BF0", Offset = "0xE64BF0", VA = "0xE64BF0")]
			internal void <Start>b__0()
			{
			}
		}

		[Token(Token = "0x4002E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x922B18", Offset = "0x922B18")]
		public Slider Slider;

		[Token(Token = "0x600352E")]
		[Address(RVA = "0x13AC3E4", Offset = "0x13AC3E4", VA = "0x13AC3E4")]
		private void Start()
		{
		}

		[Token(Token = "0x600352F")]
		[Address(RVA = "0x13AC4D0", Offset = "0x13AC4D0", VA = "0x13AC4D0")]
		public InstructionsButton()
		{
		}
	}
	[Token(Token = "0x20006D7")]
	public class InstructionsHandler : MonoBehaviour
	{
		[Token(Token = "0x4002E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text InstructionsText;

		[Token(Token = "0x4002E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject InstructionsDialog;

		[Token(Token = "0x4002E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject HelpButton;

		[Token(Token = "0x4002E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject GlassPanel;

		[Token(Token = "0x4002E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Multiline]
		public string InstructionsContent;

		[Token(Token = "0x6003532")]
		[Address(RVA = "0x13AC4D8", Offset = "0x13AC4D8", VA = "0x13AC4D8")]
		private void Start()
		{
		}

		[Token(Token = "0x6003533")]
		[Address(RVA = "0x13AC5C4", Offset = "0x13AC5C4", VA = "0x13AC5C4")]
		public void OnClick()
		{
		}

		[Token(Token = "0x6003534")]
		[Address(RVA = "0x13AC5CC", Offset = "0x13AC5CC", VA = "0x13AC5CC")]
		public void OnClose()
		{
		}

		[Token(Token = "0x6003535")]
		[Address(RVA = "0x13AC560", Offset = "0x13AC560", VA = "0x13AC560")]
		private void ShowHideDialog(bool isVisible)
		{
		}

		[Token(Token = "0x6003536")]
		[Address(RVA = "0x13AC5D4", Offset = "0x13AC5D4", VA = "0x13AC5D4")]
		public InstructionsHandler()
		{
		}
	}
	[Token(Token = "0x20006D8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x91A228", Offset = "0x91A228")]
	public class Label : MonoBehaviour
	{
		[Token(Token = "0x20006D9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91A288", Offset = "0x91A288")]
		private sealed class <TrackCamera>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002E50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002E51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002E52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Label <>4__this;

			[Token(Token = "0x1700073E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003557")]
				[Address(RVA = "0xE6837C", Offset = "0xE6837C", VA = "0xE6837C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700073F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003559")]
				[Address(RVA = "0xE683C4", Offset = "0xE683C4", VA = "0xE683C4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003554")]
			[Address(RVA = "0xE6823C", Offset = "0xE6823C", VA = "0xE6823C")]
			[DebuggerHidden]
			public <TrackCamera>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x6003555")]
			[Address(RVA = "0xE68268", Offset = "0xE68268", VA = "0xE68268", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003556")]
			[Address(RVA = "0xE6826C", Offset = "0xE6826C", VA = "0xE6826C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003558")]
			[Address(RVA = "0xE68384", Offset = "0xE68384", VA = "0xE68384", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006DA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91A298", Offset = "0x91A298")]
		private sealed class <Fade>d__31 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002E53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002E54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002E55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Label <>4__this;

			[Token(Token = "0x17000740")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600355D")]
				[Address(RVA = "0xE681EC", Offset = "0xE681EC", VA = "0xE681EC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000741")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600355F")]
				[Address(RVA = "0xE68234", Offset = "0xE68234", VA = "0xE68234", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600355A")]
			[Address(RVA = "0xE6808C", Offset = "0xE6808C", VA = "0xE6808C")]
			[DebuggerHidden]
			public <Fade>d__31(int <>1__state)
			{
			}

			[Token(Token = "0x600355B")]
			[Address(RVA = "0xE680B8", Offset = "0xE680B8", VA = "0xE680B8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600355C")]
			[Address(RVA = "0xE680BC", Offset = "0xE680BC", VA = "0xE680BC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600355E")]
			[Address(RVA = "0xE681F4", Offset = "0xE681F4", VA = "0xE681F4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x922B60", Offset = "0x922B60")]
		public Text Text;

		[Token(Token = "0x4002E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x922B98", Offset = "0x922B98")]
		public bool TurnOnly;

		[Token(Token = "0x4002E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x922BD0", Offset = "0x922BD0")]
		public bool FadeWithView;

		[Token(Token = "0x4002E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x922C08", Offset = "0x922C08")]
		public float FadeTime;

		[Token(Token = "0x4002E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x922C40", Offset = "0x922C40")]
		public bool StartFadedOut;

		[Token(Token = "0x4002E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x922C78", Offset = "0x922C78")]
		public bool AutoFadeIn;

		[Token(Token = "0x4002E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		private bool IsTrackingCamera;

		[Token(Token = "0x4002E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
		private bool IsFading;

		[Token(Token = "0x4002E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool? HasText;

		[Token(Token = "0x4002E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
		private bool FadingIn;

		[Token(Token = "0x4002E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float FadeTimer;

		[Token(Token = "0x4002E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float AlphaMultiplier;

		[Token(Token = "0x4002E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CanvasGroup _CanvasGroup;

		[Token(Token = "0x4002E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool IsSetup;

		[Token(Token = "0x4002E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly List<Label> AllLabels;

		[Token(Token = "0x1700073D")]
		private CanvasGroup CanvasGroup
		{
			[Token(Token = "0x6003537")]
			[Address(RVA = "0x1135118", Offset = "0x1135118", VA = "0x1135118")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6003538")]
		[Address(RVA = "0x11351B8", Offset = "0x11351B8", VA = "0x11351B8")]
		private void Start()
		{
		}

		[Token(Token = "0x6003539")]
		[Address(RVA = "0x11351BC", Offset = "0x11351BC", VA = "0x11351BC")]
		protected void TrySetup()
		{
		}

		[Token(Token = "0x600353A")]
		[Address(RVA = "0x1135280", Offset = "0x1135280", VA = "0x1135280")]
		internal void SetText(string text)
		{
		}

		[Token(Token = "0x600353B")]
		[Address(RVA = "0x1135604", Offset = "0x1135604", VA = "0x1135604")]
		internal void SetAlpha(float newAlpha)
		{
		}

		[Token(Token = "0x600353C")]
		[Address(RVA = "0x11355FC", Offset = "0x11355FC", VA = "0x11355FC")]
		internal void StartFadingIn()
		{
		}

		[Token(Token = "0x600353D")]
		[Address(RVA = "0x1135A50", Offset = "0x1135A50", VA = "0x1135A50")]
		internal void StartFadingOut()
		{
		}

		[Token(Token = "0x600353E")]
		[Address(RVA = "0x1135A58", Offset = "0x1135A58", VA = "0x1135A58")]
		internal static void StartFadingAllIn()
		{
		}

		[Token(Token = "0x600353F")]
		[Address(RVA = "0x1135E50", Offset = "0x1135E50", VA = "0x1135E50")]
		internal static void StartFadingAllOut()
		{
		}

		[Token(Token = "0x6003540")]
		[Address(RVA = "0x1135EAC", Offset = "0x1135EAC", VA = "0x1135EAC")]
		internal static void ScaleAll(float multiplier)
		{
		}

		[Token(Token = "0x6003541")]
		[Address(RVA = "0x113606C", Offset = "0x113606C", VA = "0x113606C")]
		internal static void HideAll(bool hide = true)
		{
		}

		[Token(Token = "0x6003542")]
		[Address(RVA = "0x113621C", Offset = "0x113621C", VA = "0x113621C")]
		internal static void ShowAll(bool show = true)
		{
		}

		[Token(Token = "0x6003543")]
		[Address(RVA = "0x1136280", Offset = "0x1136280", VA = "0x1136280")]
		internal static void HideAllText(bool hide = true)
		{
		}

		[Token(Token = "0x6003544")]
		[Address(RVA = "0x1136430", Offset = "0x1136430", VA = "0x1136430")]
		internal static void ShowAllText(bool show = true)
		{
		}

		[Token(Token = "0x6003545")]
		[Address(RVA = "0x1135590", Offset = "0x1135590", VA = "0x1135590")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9326A8", Offset = "0x9326A8")]
		private IEnumerator TrackCamera()
		{
			return null;
		}

		[Token(Token = "0x6003546")]
		[Address(RVA = "0x1136494", Offset = "0x1136494", VA = "0x1136494")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x932708", Offset = "0x932708")]
		private IEnumerator Fade()
		{
			return null;
		}

		[Token(Token = "0x6003547")]
		[Address(RVA = "0x113583C", Offset = "0x113583C", VA = "0x113583C")]
		private void StartFading(bool fadeIn)
		{
		}

		[Token(Token = "0x6003548")]
		[Address(RVA = "0x1135AB4", Offset = "0x1135AB4", VA = "0x1135AB4")]
		private static void StartFadingAll(bool fadeIn)
		{
		}

		[Token(Token = "0x6003549")]
		[Address(RVA = "0x11357F4", Offset = "0x11357F4", VA = "0x11357F4")]
		private void ApplyAlpha(float newAlpha)
		{
		}

		[Token(Token = "0x600354A")]
		[Address(RVA = "0x1136500", Offset = "0x1136500", VA = "0x1136500")]
		private void FadeWithViewAngle()
		{
		}

		[Token(Token = "0x600354B")]
		[Address(RVA = "0x1136000", Offset = "0x1136000", VA = "0x1136000")]
		private void Scale(float multiplier)
		{
		}

		[Token(Token = "0x600354C")]
		[Address(RVA = "0x11360CC", Offset = "0x11360CC", VA = "0x11360CC")]
		private static void HideOrShowAll(bool hide)
		{
		}

		[Token(Token = "0x600354D")]
		[Address(RVA = "0x11366CC", Offset = "0x11366CC", VA = "0x11366CC")]
		private void HideOrShow(bool hide)
		{
		}

		[Token(Token = "0x600354E")]
		[Address(RVA = "0x11362E0", Offset = "0x11362E0", VA = "0x11362E0")]
		private static void HideOrShowAllText(bool hide)
		{
		}

		[Token(Token = "0x600354F")]
		[Address(RVA = "0x1136710", Offset = "0x1136710", VA = "0x1136710")]
		private void HideOrShowText(bool hide)
		{
		}

		[Token(Token = "0x6003550")]
		[Address(RVA = "0x11354AC", Offset = "0x11354AC", VA = "0x11354AC")]
		private bool CanFindText()
		{
			return default(bool);
		}

		[Token(Token = "0x6003551")]
		[Address(RVA = "0x11366B4", Offset = "0x11366B4", VA = "0x11366B4")]
		private static float Smooth(float value)
		{
			return default(float);
		}

		[Token(Token = "0x6003552")]
		[Address(RVA = "0x1136770", Offset = "0x1136770", VA = "0x1136770")]
		public Label()
		{
		}
	}
	[Token(Token = "0x20006DB")]
	public class MeshCleaner : MonoBehaviour
	{
		[Token(Token = "0x6003560")]
		[Address(RVA = "0x1368E78", Offset = "0x1368E78", VA = "0x1368E78")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6003561")]
		[Address(RVA = "0x1368FAC", Offset = "0x1368FAC", VA = "0x1368FAC")]
		public MeshCleaner()
		{
		}
	}
	[Token(Token = "0x20006DC")]
	public class PanelAnimationController : MonoBehaviour
	{
		[Token(Token = "0x4002E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Button ClosePanelButton;

		[Token(Token = "0x4002E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Button OpenPanelButton;

		[Token(Token = "0x4002E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Animator Animator;

		[Token(Token = "0x4002E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string TriggerKey;

		[Token(Token = "0x4002E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ScreenOrientation CurrentScreenOrientation;

		[Token(Token = "0x6003562")]
		[Address(RVA = "0x1738568", Offset = "0x1738568", VA = "0x1738568")]
		private void Start()
		{
		}

		[Token(Token = "0x6003563")]
		[Address(RVA = "0x1738590", Offset = "0x1738590", VA = "0x1738590")]
		private void Update()
		{
		}

		[Token(Token = "0x6003564")]
		[Address(RVA = "0x1738670", Offset = "0x1738670", VA = "0x1738670")]
		public void OnPanelOpen()
		{
		}

		[Token(Token = "0x6003565")]
		[Address(RVA = "0x1738630", Offset = "0x1738630", VA = "0x1738630")]
		public void OnPanelClose()
		{
		}

		[Token(Token = "0x6003566")]
		[Address(RVA = "0x17386B0", Offset = "0x17386B0", VA = "0x17386B0")]
		public void ShowOpenPanelButton(bool isOpened)
		{
		}

		[Token(Token = "0x6003567")]
		[Address(RVA = "0x1738714", Offset = "0x1738714", VA = "0x1738714")]
		public PanelAnimationController()
		{
		}
	}
	[Token(Token = "0x20006DD")]
	public class ZoomPinch : MonoBehaviour
	{
		[Token(Token = "0x4002E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x922CB0", Offset = "0x922CB0")]
		public float PerspectiveZoomSpeed;

		[Token(Token = "0x4002E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x922CE8", Offset = "0x922CE8")]
		public float OrthoZoomSpeed;

		[Token(Token = "0x4002E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Camera ActiveCamera;

		[Token(Token = "0x4002E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x922D20", Offset = "0x922D20")]
		public float MinFieldOfView;

		[Token(Token = "0x4002E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x922D58", Offset = "0x922D58")]
		public float MaxFieldOfView;

		[Token(Token = "0x4002E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x922D90", Offset = "0x922D90")]
		public float MaxOrthographicSize;

		[Token(Token = "0x4002E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x922DC8", Offset = "0x922DC8")]
		public float MinOrthographicSize;

		[Token(Token = "0x6003568")]
		[Address(RVA = "0xBD7ABC", Offset = "0xBD7ABC", VA = "0xBD7ABC")]
		private void Start()
		{
		}

		[Token(Token = "0x6003569")]
		[Address(RVA = "0xBD7B3C", Offset = "0xBD7B3C", VA = "0xBD7B3C")]
		private void Update()
		{
		}

		[Token(Token = "0x600356A")]
		[Address(RVA = "0xBD7D5C", Offset = "0xBD7D5C", VA = "0xBD7D5C")]
		public ZoomPinch()
		{
		}
	}
}
namespace Bhaptics.Tact.Unity
{
	[Token(Token = "0x20006DE")]
	public class HapticSourceMixer : MonoBehaviour
	{
		[Token(Token = "0x4002E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HapticClip first;

		[Token(Token = "0x4002E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HapticClip second;

		[Token(Token = "0x4002E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x922E00", Offset = "0x922E00")]
		public float blend;

		[Token(Token = "0x4002E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool play;

		[Token(Token = "0x4002E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float timeFirst;

		[Token(Token = "0x4002E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float timeSecond;

		[Token(Token = "0x4002E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float noiseStep;

		[Token(Token = "0x4002E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float checkTime;

		[Token(Token = "0x4002E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool isPlaying;

		[Token(Token = "0x4002E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private HapticClip current;

		[Token(Token = "0x600356B")]
		[Address(RVA = "0x141CFFC", Offset = "0x141CFFC", VA = "0x141CFFC")]
		private void Awake()
		{
		}

		[Token(Token = "0x600356C")]
		[Address(RVA = "0x141D0FC", Offset = "0x141D0FC", VA = "0x141D0FC")]
		private void Update()
		{
		}

		[Token(Token = "0x600356D")]
		[Address(RVA = "0x141D358", Offset = "0x141D358", VA = "0x141D358")]
		private float GetIntensity()
		{
			return default(float);
		}

		[Token(Token = "0x600356E")]
		[Address(RVA = "0x141D37C", Offset = "0x141D37C", VA = "0x141D37C")]
		private float GetSpeed()
		{
			return default(float);
		}

		[Token(Token = "0x600356F")]
		[Address(RVA = "0x141D39C", Offset = "0x141D39C", VA = "0x141D39C")]
		private float GetOffset()
		{
			return default(float);
		}

		[Token(Token = "0x6003570")]
		[Address(RVA = "0x141D3F4", Offset = "0x141D3F4", VA = "0x141D3F4")]
		public HapticSourceMixer()
		{
		}
	}
	[Token(Token = "0x20006DF")]
	public class AndroidHaptic : IHaptic
	{
		[Token(Token = "0x4002E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static AndroidJavaObject androidJavaObject;

		[Token(Token = "0x4002E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected List<HapticDevice> deviceList;

		[Token(Token = "0x4002E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<string> registeredCache;

		[Token(Token = "0x4002E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly object[] SubmitRegisteredParams;

		[Token(Token = "0x4002E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly int[] Empty;

		[Token(Token = "0x4002E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly object[] EmptyParams;

		[Token(Token = "0x4002E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static readonly RotationOption DefaultRotationOption;

		[Token(Token = "0x4002E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly object syncLock;

		[Token(Token = "0x4002E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<PositionType, int[]> updatedList;

		[Token(Token = "0x4002E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected IntPtr AndroidJavaObjectPtr;

		[Token(Token = "0x4002E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected IntPtr SubmitRegisteredPtr;

		[Token(Token = "0x4002E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected IntPtr SubmitRegisteredWithTimePtr;

		[Token(Token = "0x4002E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected IntPtr RegisterPtr;

		[Token(Token = "0x4002E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected IntPtr RegisterReflectedPtr;

		[Token(Token = "0x4002E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected IntPtr PingPtr;

		[Token(Token = "0x4002E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected IntPtr PingAllPtr;

		[Token(Token = "0x4002E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected IntPtr IsRegisteredPtr;

		[Token(Token = "0x4002E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected IntPtr IsPlayingPtr;

		[Token(Token = "0x4002E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected IntPtr IsPlayingAnythingPtr;

		[Token(Token = "0x4002E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected IntPtr ToggleStreamPtr;

		[Token(Token = "0x4002E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected IntPtr IsStreamingEnablePtr;

		[Token(Token = "0x4002E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected IntPtr GetStreamingHostsPtr;

		[Token(Token = "0x4002E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected IntPtr ShowBluetoothPtr;

		[Token(Token = "0x4002E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected IntPtr RefreshPairingInfoPtr;

		[Token(Token = "0x4002E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected IntPtr EnableDevicePtr;

		[Token(Token = "0x6003571")]
		[Address(RVA = "0x1847B04", Offset = "0x1847B04", VA = "0x1847B04")]
		public AndroidHaptic()
		{
		}

		[Token(Token = "0x6003572")]
		[Address(RVA = "0x184855C", Offset = "0x184855C", VA = "0x184855C")]
		public List<AndroidUtils.StreamHost> GetStreamingHosts()
		{
			return null;
		}

		[Token(Token = "0x6003573")]
		[Address(RVA = "0x1848998", Offset = "0x1848998", VA = "0x1848998")]
		public bool IsStreamingEnable()
		{
			return default(bool);
		}

		[Token(Token = "0x6003574")]
		[Address(RVA = "0x1848AB0", Offset = "0x1848AB0", VA = "0x1848AB0")]
		public void ToggleStreaming()
		{
		}

		[Token(Token = "0x6003575")]
		[Address(RVA = "0x1848BF8", Offset = "0x1848BF8", VA = "0x1848BF8", Slot = "4")]
		public bool IsConnect(PositionType type)
		{
			return default(bool);
		}

		[Token(Token = "0x6003576")]
		[Address(RVA = "0x1848D48", Offset = "0x1848D48", VA = "0x1848D48", Slot = "5")]
		public bool IsConnect(HapticDeviceType type, bool isLeft = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6003577")]
		[Address(RVA = "0x1848EEC", Offset = "0x1848EEC", VA = "0x1848EEC", Slot = "6")]
		public bool IsPlaying(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6003578")]
		[Address(RVA = "0x1848FF0", Offset = "0x1848FF0", VA = "0x1848FF0", Slot = "7")]
		public bool IsFeedbackRegistered(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6003579")]
		[Address(RVA = "0x1849148", Offset = "0x1849148", VA = "0x1849148", Slot = "8")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x600357A")]
		[Address(RVA = "0x18491FC", Offset = "0x18491FC", VA = "0x18491FC", Slot = "9")]
		public void RegisterTactFileStr(string key, string tactFileStr)
		{
		}

		[Token(Token = "0x600357B")]
		[Address(RVA = "0x1849334", Offset = "0x1849334", VA = "0x1849334", Slot = "10")]
		public void RegisterTactFileStrReflected(string key, string tactFileStr)
		{
		}

		[Token(Token = "0x600357C")]
		[Address(RVA = "0x184946C", Offset = "0x184946C", VA = "0x184946C", Slot = "11")]
		public void Submit(string key, PositionType position, List<DotPoint> points, int durationMillis)
		{
		}

		[Token(Token = "0x600357D")]
		[Address(RVA = "0x18499CC", Offset = "0x18499CC", VA = "0x18499CC", Slot = "12")]
		public void Submit(string key, PositionType position, List<PathPoint> points, int durationMillis)
		{
		}

		[Token(Token = "0x600357E")]
		[Address(RVA = "0x184A008", Offset = "0x184A008", VA = "0x184A008", Slot = "13")]
		public void SubmitRegistered(string key, string altKey, ScaleOption option)
		{
		}

		[Token(Token = "0x600357F")]
		[Address(RVA = "0x184A09C", Offset = "0x184A09C", VA = "0x184A09C", Slot = "14")]
		public void SubmitRegistered(string key, string altKey, RotationOption rOption, ScaleOption sOption)
		{
		}

		[Token(Token = "0x6003580")]
		[Address(RVA = "0x184A364", Offset = "0x184A364", VA = "0x184A364", Slot = "15")]
		public void SubmitRegistered(string key)
		{
		}

		[Token(Token = "0x6003581")]
		[Address(RVA = "0x184A37C", Offset = "0x184A37C", VA = "0x184A37C", Slot = "16")]
		public void SubmitRegistered(string key, int startTimeMillis)
		{
		}

		[Token(Token = "0x6003582")]
		[Address(RVA = "0x184A4A0", Offset = "0x184A4A0", VA = "0x184A4A0", Slot = "17")]
		public void TurnOff(string key)
		{
		}

		[Token(Token = "0x6003583")]
		[Address(RVA = "0x184A714", Offset = "0x184A714", VA = "0x184A714", Slot = "18")]
		public void TurnOff()
		{
		}

		[Token(Token = "0x6003584")]
		[Address(RVA = "0x184A9AC", Offset = "0x184A9AC", VA = "0x184A9AC", Slot = "19")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6003585")]
		[Address(RVA = "0x184A0C0", Offset = "0x184A0C0", VA = "0x184A0C0")]
		private void SubmitRequest(string key, string altKey, float intensity, float duration, float offsetAngleX, float offsetY)
		{
		}

		[Token(Token = "0x6003586")]
		[Address(RVA = "0x184AB0C", Offset = "0x184AB0C", VA = "0x184AB0C", Slot = "20")]
		public int[] GetCurrentFeedback(PositionType pos)
		{
			return null;
		}

		[Token(Token = "0x6003587")]
		[Address(RVA = "0x184840C", Offset = "0x184840C", VA = "0x184840C")]
		public List<HapticDevice> GetDevices()
		{
			return null;
		}

		[Token(Token = "0x6003588")]
		[Address(RVA = "0x184AF54", Offset = "0x184AF54", VA = "0x184AF54")]
		public void TogglePosition(string address)
		{
		}

		[Token(Token = "0x6003589")]
		[Address(RVA = "0x184B0AC", Offset = "0x184B0AC", VA = "0x184B0AC")]
		public void PingAll()
		{
		}

		[Token(Token = "0x600358A")]
		[Address(RVA = "0x184B15C", Offset = "0x184B15C", VA = "0x184B15C")]
		public void Ping(string address)
		{
		}

		[Token(Token = "0x600358B")]
		[Address(RVA = "0x184B25C", Offset = "0x184B25C", VA = "0x184B25C")]
		public void ShowBluetoothSetting()
		{
		}

		[Token(Token = "0x600358C")]
		[Address(RVA = "0x184B304", Offset = "0x184B304", VA = "0x184B304")]
		public void EnableDevice(string address, bool boo)
		{
		}

		[Token(Token = "0x600358D")]
		[Address(RVA = "0x184B458", Offset = "0x184B458", VA = "0x184B458")]
		public void RefreshPairingInfo()
		{
		}

		[Token(Token = "0x600358E")]
		[Address(RVA = "0x1848B60", Offset = "0x1848B60", VA = "0x1848B60")]
		private void CallNativeVoidMethod(IntPtr methodPtr, object[] param)
		{
		}

		[Token(Token = "0x600358F")]
		[Address(RVA = "0x1848A14", Offset = "0x1848A14", VA = "0x1848A14")]
		private bool CallNativeBoolMethod(IntPtr methodPtr, object[] param)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x20006E0")]
	public class HapticDevice
	{
		[Token(Token = "0x4002E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool IsPaired;

		[Token(Token = "0x4002E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool IsConnected;

		[Token(Token = "0x4002E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string DeviceName;

		[Token(Token = "0x4002E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PositionType Position;

		[Token(Token = "0x4002E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string Address;

		[Token(Token = "0x4002E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PositionType[] Candidates;

		[Token(Token = "0x4002E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool IsEnable;

		[Token(Token = "0x4002E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool IsAudioJack;

		[Token(Token = "0x4002E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int Battery;

		[Token(Token = "0x6003591")]
		[Address(RVA = "0x141AF80", Offset = "0x141AF80", VA = "0x141AF80")]
		public HapticDevice()
		{
		}
	}
	[Token(Token = "0x20006E1")]
	public static class AndroidUtils
	{
		[Serializable]
		[Token(Token = "0x20006E2")]
		private class Wrapper<T>
		{
			[Token(Token = "0x4002E8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T[] array;

			[Token(Token = "0x600359B")]
			public Wrapper()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20006E3")]
		private class Device
		{
			[Token(Token = "0x4002E8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool paired;

			[Token(Token = "0x4002E90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string deviceName;

			[Token(Token = "0x4002E91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int position;

			[Token(Token = "0x4002E92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public bool connected;

			[Token(Token = "0x4002E93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string address;

			[Token(Token = "0x4002E94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int battery;

			[Token(Token = "0x4002E95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public bool enable;

			[Token(Token = "0x4002E96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
			public bool audioJackIn;

			[Token(Token = "0x600359C")]
			[Address(RVA = "0xBDA9DC", Offset = "0xBDA9DC", VA = "0xBDA9DC")]
			public Device()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20006E4")]
		public class StreamHost
		{
			[Token(Token = "0x4002E97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string ip;

			[Token(Token = "0x4002E98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool connected;

			[Token(Token = "0x600359D")]
			[Address(RVA = "0xBDA9E4", Offset = "0xBDA9E4", VA = "0xBDA9E4")]
			public StreamHost()
			{
			}
		}

		[Token(Token = "0x6003592")]
		[Address(RVA = "0x184BCB0", Offset = "0x184BCB0", VA = "0x184BCB0")]
		private static PositionType ToDeviceType(int type)
		{
			return default(PositionType);
		}

		[Token(Token = "0x6003593")]
		[Address(RVA = "0x184BCD4", Offset = "0x184BCD4", VA = "0x184BCD4")]
		private static PositionType[] ToCandidates(int type)
		{
			return null;
		}

		[Token(Token = "0x6003594")]
		[Address(RVA = "0x184BE54", Offset = "0x184BE54", VA = "0x184BE54")]
		public static bool IsLeft(PositionType pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6003595")]
		[Address(RVA = "0x184BE7C", Offset = "0x184BE7C", VA = "0x184BE7C")]
		public static bool CanChangePosition(PositionType pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6003596")]
		public static T[] GetJsonArray<T>(string json)
		{
			return null;
		}

		[Token(Token = "0x6003597")]
		[Address(RVA = "0x184BE8C", Offset = "0x184BE8C", VA = "0x184BE8C")]
		private static HapticDevice Convert(Device d)
		{
			return null;
		}

		[Token(Token = "0x6003598")]
		[Address(RVA = "0x184AE44", Offset = "0x184AE44", VA = "0x184AE44")]
		public static List<HapticDevice> ConvertToBhapticsDevices(string[] deviceJson)
		{
			return null;
		}

		[Token(Token = "0x6003599")]
		[Address(RVA = "0x184B500", Offset = "0x184B500", VA = "0x184B500")]
		public static void CallNativeVoidMethod(IntPtr androidObjPtr, IntPtr methodPtr, object[] param)
		{
		}

		[Token(Token = "0x600359A")]
		[Address(RVA = "0x184B700", Offset = "0x184B700", VA = "0x184B700")]
		public static bool CallNativeBoolMethod(IntPtr androidObjPtr, IntPtr methodPtr, object[] param)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20006E5")]
	public class AndroidWidget_ControlButton : MonoBehaviour
	{
		[Token(Token = "0x4002E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PositionType DeviceType;

		[Token(Token = "0x4002E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x922E28", Offset = "0x922E28")]
		[SerializeField]
		private Sprite defaultImage;

		[Token(Token = "0x4002E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Sprite pairImage;

		[Token(Token = "0x4002E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Sprite defaultHoverImage;

		[Token(Token = "0x4002E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Sprite pairHoverImage;

		[Token(Token = "0x4002E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform pairDeviceCount;

		[Token(Token = "0x4002E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Button button;

		[Token(Token = "0x600359E")]
		[Address(RVA = "0x184BF68", Offset = "0x184BF68", VA = "0x184BF68")]
		private void Awake()
		{
		}

		[Token(Token = "0x600359F")]
		[Address(RVA = "0x184C024", Offset = "0x184C024", VA = "0x184C024")]
		public void Refresh()
		{
		}

		[Token(Token = "0x60035A0")]
		[Address(RVA = "0x184C5EC", Offset = "0x184C5EC", VA = "0x184C5EC")]
		public void OnPingDevice()
		{
		}

		[Token(Token = "0x60035A1")]
		[Address(RVA = "0x184C654", Offset = "0x184C654", VA = "0x184C654")]
		public void OnClickDevice()
		{
		}

		[Token(Token = "0x60035A2")]
		[Address(RVA = "0x184C6F0", Offset = "0x184C6F0", VA = "0x184C6F0")]
		public AndroidWidget_ControlButton()
		{
		}
	}
	[Token(Token = "0x20006E6")]
	public class AndroidWidget_ObjectPool : MonoBehaviour
	{
		[Token(Token = "0x4002EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ScrollRect pariedDeviceScrollrect;

		[Token(Token = "0x4002EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AndroidWidget_PairedDeviceUI pairedDeviceUIGameObject;

		[Token(Token = "0x4002EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private int objectCount;

		[Token(Token = "0x4002EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<AndroidWidget_PairedDeviceUI> pairedUIList;

		[Token(Token = "0x60035A3")]
		[Address(RVA = "0x184C6F8", Offset = "0x184C6F8", VA = "0x184C6F8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60035A4")]
		[Address(RVA = "0x184C888", Offset = "0x184C888", VA = "0x184C888")]
		public AndroidWidget_PairedDeviceUI GetPairedDeviceUI()
		{
			return null;
		}

		[Token(Token = "0x60035A5")]
		[Address(RVA = "0x184C968", Offset = "0x184C968", VA = "0x184C968")]
		public void DisableAll()
		{
		}

		[Token(Token = "0x60035A6")]
		[Address(RVA = "0x184CA18", Offset = "0x184CA18", VA = "0x184CA18")]
		public AndroidWidget_ObjectPool()
		{
		}
	}
	[Token(Token = "0x20006E7")]
	public class AndroidWidget_PairedDeviceUI : MonoBehaviour
	{
		[Token(Token = "0x4002EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x922EE4", Offset = "0x922EE4")]
		[SerializeField]
		private Image deviceImage;

		[Token(Token = "0x4002EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text deviceName;

		[Token(Token = "0x4002EA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Button pingButton;

		[Token(Token = "0x4002EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Button toggleButton;

		[Token(Token = "0x4002EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x922F60", Offset = "0x922F60")]
		[SerializeField]
		private Sprite leftSide;

		[Token(Token = "0x4002EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Sprite rightSide;

		[Token(Token = "0x4002EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private HapticDevice device;

		[Token(Token = "0x60035A7")]
		[Address(RVA = "0x184CA20", Offset = "0x184CA20", VA = "0x184CA20")]
		private void Start()
		{
		}

		[Token(Token = "0x60035A8")]
		[Address(RVA = "0x184CB0C", Offset = "0x184CB0C", VA = "0x184CB0C")]
		public void Refresh(HapticDevice tactDevice, Bhaptics_Widget_Setting setting)
		{
		}

		[Token(Token = "0x60035A9")]
		[Address(RVA = "0x184CCA8", Offset = "0x184CCA8", VA = "0x184CCA8")]
		private void OnPing()
		{
		}

		[Token(Token = "0x60035AA")]
		[Address(RVA = "0x184CD2C", Offset = "0x184CD2C", VA = "0x184CD2C")]
		private void OnSwap()
		{
		}

		[Token(Token = "0x60035AB")]
		[Address(RVA = "0x184CE08", Offset = "0x184CE08", VA = "0x184CE08")]
		public AndroidWidget_PairedDeviceUI()
		{
		}
	}
	[Token(Token = "0x20006E8")]
	public class AndroidWidget_SettingUIAnimation : MonoBehaviour
	{
		[Token(Token = "0x4002EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject SettingUI;

		[Token(Token = "0x4002EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator animator;

		[Token(Token = "0x4002EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool settingPanelEnable;

		[Token(Token = "0x60035AC")]
		[Address(RVA = "0x184CE10", Offset = "0x184CE10", VA = "0x184CE10")]
		private void Start()
		{
		}

		[Token(Token = "0x60035AD")]
		[Address(RVA = "0x184CE7C", Offset = "0x184CE7C", VA = "0x184CE7C")]
		public void Hide()
		{
		}

		[Token(Token = "0x60035AE")]
		[Address(RVA = "0x184CE9C", Offset = "0x184CE9C", VA = "0x184CE9C")]
		public void Show()
		{
		}

		[Token(Token = "0x60035AF")]
		[Address(RVA = "0x184CEBC", Offset = "0x184CEBC", VA = "0x184CEBC")]
		public void ToggleSettingButton()
		{
		}

		[Token(Token = "0x60035B0")]
		[Address(RVA = "0x184CFE0", Offset = "0x184CFE0", VA = "0x184CFE0")]
		public AndroidWidget_SettingUIAnimation()
		{
		}
	}
	[Token(Token = "0x20006E9")]
	public class AndroidWidget_UI : MonoBehaviour
	{
		[Token(Token = "0x4002EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject uiContainer;

		[Token(Token = "0x4002EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Button pingAllButton;

		[Token(Token = "0x4002EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x922FEC", Offset = "0x922FEC")]
		[SerializeField]
		private Bhaptics_Widget_Setting WidgetSetting;

		[Token(Token = "0x4002EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AndroidWidget_ObjectPool settingObjectPool;

		[Token(Token = "0x4002EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AudioSource buttonClickAudio;

		[Token(Token = "0x4002EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Animator animator;

		[Token(Token = "0x4002EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool widgetActive;

		[Token(Token = "0x4002EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private AndroidWidget_ControlButton[] controllButtons;

		[Token(Token = "0x4002EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static AndroidWidget_UI Instance;

		[Token(Token = "0x60035B1")]
		[Address(RVA = "0x184CFE8", Offset = "0x184CFE8", VA = "0x184CFE8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60035B2")]
		[Address(RVA = "0x184D3F8", Offset = "0x184D3F8", VA = "0x184D3F8")]
		private void Start()
		{
		}

		[Token(Token = "0x60035B3")]
		[Address(RVA = "0x184D190", Offset = "0x184D190", VA = "0x184D190")]
		private void InitializeButtons()
		{
		}

		[Token(Token = "0x60035B4")]
		[Address(RVA = "0x184D680", Offset = "0x184D680", VA = "0x184D680")]
		public void ToggleWidgetButton()
		{
		}

		[Token(Token = "0x60035B5")]
		[Address(RVA = "0x184D720", Offset = "0x184D720", VA = "0x184D720")]
		public void ShowWidget()
		{
		}

		[Token(Token = "0x60035B6")]
		[Address(RVA = "0x184D740", Offset = "0x184D740", VA = "0x184D740")]
		public void HideWidget()
		{
		}

		[Token(Token = "0x60035B7")]
		[Address(RVA = "0x184D760", Offset = "0x184D760", VA = "0x184D760")]
		public void ButtonClickSound()
		{
		}

		[Token(Token = "0x60035B8")]
		[Address(RVA = "0x184D77C", Offset = "0x184D77C", VA = "0x184D77C")]
		private void RefreshPairedDevices(List<HapticDevice> devices)
		{
		}

		[Token(Token = "0x60035B9")]
		[Address(RVA = "0x184D560", Offset = "0x184D560", VA = "0x184D560")]
		public void Refresh()
		{
		}

		[Token(Token = "0x60035BA")]
		[Address(RVA = "0x184D960", Offset = "0x184D960", VA = "0x184D960")]
		public AndroidWidget_UI()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006EA")]
	public class PositonIconSetting
	{
		[Token(Token = "0x4002EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Sprite connect;

		[Token(Token = "0x4002EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sprite disconnect;

		[Token(Token = "0x60035BB")]
		[Address(RVA = "0x117DBB0", Offset = "0x117DBB0", VA = "0x117DBB0")]
		public PositonIconSetting()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006EB")]
	public class IconSetting
	{
		[Token(Token = "0x4002EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x923038", Offset = "0x923038")]
		public PositonIconSetting Vest;

		[Token(Token = "0x4002EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PositonIconSetting Head;

		[Token(Token = "0x4002EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PositonIconSetting Arm;

		[Token(Token = "0x4002EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PositonIconSetting Foot;

		[Token(Token = "0x4002EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PositonIconSetting Hand;

		[Token(Token = "0x60035BC")]
		[Address(RVA = "0x13A9A7C", Offset = "0x13A9A7C", VA = "0x13A9A7C")]
		public IconSetting()
		{
		}
	}
	[Token(Token = "0x20006EC")]
	public class Android_DeviceController : MonoBehaviour
	{
		[Token(Token = "0x4002EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x923070", Offset = "0x923070")]
		[SerializeField]
		private Image icon;

		[Token(Token = "0x4002EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private IconSetting widgetSetting;

		[Token(Token = "0x4002EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Sprite TactsuitWiredIcon;

		[Token(Token = "0x4002EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Image batteryLowImage;

		[Token(Token = "0x4002EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9230EC", Offset = "0x9230EC")]
		[SerializeField]
		private GameObject ConnectMenu;

		[Token(Token = "0x4002EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Button pingButton;

		[Token(Token = "0x4002EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Button lButton;

		[Token(Token = "0x4002EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Button rButton;

		[Token(Token = "0x4002EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject wiredNotification;

		[Token(Token = "0x4002EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x923178", Offset = "0x923178")]
		[SerializeField]
		private GameObject DisconnectMenu;

		[Token(Token = "0x4002EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string SelectHexColor;

		[Token(Token = "0x4002EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string SelectHoverHexColor;

		[Token(Token = "0x4002ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string DisableHexColor;

		[Token(Token = "0x4002ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static string DisableHoverHexColor;

		[Token(Token = "0x4002ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private HapticDevice device;

		[Token(Token = "0x60035BD")]
		[Address(RVA = "0x184D970", Offset = "0x184D970", VA = "0x184D970")]
		private void Awake()
		{
		}

		[Token(Token = "0x60035BE")]
		[Address(RVA = "0x184DB70", Offset = "0x184DB70", VA = "0x184DB70")]
		public void RefreshDevice(HapticDevice d)
		{
		}

		[Token(Token = "0x60035BF")]
		[Address(RVA = "0x184DD14", Offset = "0x184DD14", VA = "0x184DD14")]
		private void RenderConnectMenu()
		{
		}

		[Token(Token = "0x60035C0")]
		[Address(RVA = "0x184DDA8", Offset = "0x184DDA8", VA = "0x184DDA8")]
		private void RenderDisconnectMenu()
		{
		}

		[Token(Token = "0x60035C1")]
		[Address(RVA = "0x184DE24", Offset = "0x184DE24", VA = "0x184DE24")]
		private void UpdateButtons()
		{
		}

		[Token(Token = "0x60035C2")]
		[Address(RVA = "0x184DC0C", Offset = "0x184DC0C", VA = "0x184DC0C")]
		private void UpdateIcon(HapticDevice d)
		{
		}

		[Token(Token = "0x60035C3")]
		[Address(RVA = "0x184E2A4", Offset = "0x184E2A4", VA = "0x184E2A4")]
		private Sprite GetSprite(PositonIconSetting icon, bool connected)
		{
			return null;
		}

		[Token(Token = "0x60035C4")]
		[Address(RVA = "0x184E2CC", Offset = "0x184E2CC", VA = "0x184E2CC")]
		private void Ping()
		{
		}

		[Token(Token = "0x60035C5")]
		[Address(RVA = "0x184E344", Offset = "0x184E344", VA = "0x184E344")]
		private void ToLeft()
		{
		}

		[Token(Token = "0x60035C6")]
		[Address(RVA = "0x184E430", Offset = "0x184E430", VA = "0x184E430")]
		private void ToRight()
		{
		}

		[Token(Token = "0x60035C7")]
		[Address(RVA = "0x184E51C", Offset = "0x184E51C", VA = "0x184E51C")]
		private Color ToColor(string hex)
		{
			return default(Color);
		}

		[Token(Token = "0x60035C8")]
		[Address(RVA = "0x184E13C", Offset = "0x184E13C", VA = "0x184E13C")]
		private void ChangeButtonColor(Button targetButton, bool isSelect)
		{
		}

		[Token(Token = "0x60035C9")]
		[Address(RVA = "0x184E0D4", Offset = "0x184E0D4", VA = "0x184E0D4")]
		private static bool IsLeft(PositionType pos)
		{
			return default(bool);
		}

		[Token(Token = "0x60035CA")]
		[Address(RVA = "0x184E108", Offset = "0x184E108", VA = "0x184E108")]
		private static bool IsRight(PositionType pos)
		{
			return default(bool);
		}

		[Token(Token = "0x60035CB")]
		[Address(RVA = "0x184E568", Offset = "0x184E568", VA = "0x184E568")]
		public Android_DeviceController()
		{
		}
	}
	[Token(Token = "0x20006ED")]
	public class Android_UIController : MonoBehaviour
	{
		[Token(Token = "0x4002ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private RectTransform mainPanel;

		[Token(Token = "0x4002ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform devicesContainer;

		[Token(Token = "0x4002ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform deviceListPageUi;

		[Token(Token = "0x4002ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Button deviceListNextPageButton;

		[Token(Token = "0x4002ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Button deviceListBackPageButton;

		[Token(Token = "0x4002ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Text deviceListPageText;

		[Token(Token = "0x4002ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Android_DeviceController devicePrefab;

		[Token(Token = "0x4002ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x923234", Offset = "0x923234")]
		[SerializeField]
		private GameObject noPairedDeviceUi;

		[Token(Token = "0x4002ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Button helpButton;

		[Token(Token = "0x4002ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Button bHpaticsLinkButton;

		[Token(Token = "0x4002ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject helpUi;

		[Token(Token = "0x4002ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Button helpCloseButton;

		[Token(Token = "0x4002ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<Android_DeviceController> controllers;

		[Token(Token = "0x4002EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private BoxCollider mainPanelCollider;

		[Token(Token = "0x4002EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector2 defaultMainPanelSize;

		[Token(Token = "0x4002EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector2 defaultDeviceContainerSize;

		[Token(Token = "0x4002EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int deviceListSize;

		[Token(Token = "0x4002EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private int deviceListPageIndex;

		[Token(Token = "0x4002EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private int expandHeight;

		[Token(Token = "0x4002EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private int expandDeviceCount;

		[Token(Token = "0x4002EE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int pageActivateDeviceCount;

		[Token(Token = "0x4002EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private int pageExpandHeight;

		[Token(Token = "0x4002EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private int maxPageIndex;

		[Token(Token = "0x60035CD")]
		[Address(RVA = "0x184E638", Offset = "0x184E638", VA = "0x184E638")]
		private void Awake()
		{
		}

		[Token(Token = "0x60035CE")]
		[Address(RVA = "0x184EB00", Offset = "0x184EB00", VA = "0x184EB00")]
		private void Refresh()
		{
		}

		[Token(Token = "0x60035CF")]
		[Address(RVA = "0x184F16C", Offset = "0x184F16C", VA = "0x184F16C")]
		private void OnHelp()
		{
		}

		[Token(Token = "0x60035D0")]
		[Address(RVA = "0x184F200", Offset = "0x184F200", VA = "0x184F200")]
		private void CloseHelpNotification()
		{
		}

		[Token(Token = "0x60035D1")]
		[Address(RVA = "0x184F294", Offset = "0x184F294", VA = "0x184F294")]
		private void OpenLink()
		{
		}

		[Token(Token = "0x60035D2")]
		[Address(RVA = "0x184F2DC", Offset = "0x184F2DC", VA = "0x184F2DC")]
		private void NextPage()
		{
		}

		[Token(Token = "0x60035D3")]
		[Address(RVA = "0x184F314", Offset = "0x184F314", VA = "0x184F314")]
		private void BackPage()
		{
		}

		[Token(Token = "0x60035D4")]
		[Address(RVA = "0x184F34C", Offset = "0x184F34C", VA = "0x184F34C")]
		public Android_UIController()
		{
		}
	}
	[Token(Token = "0x20006EE")]
	public class BhapticsAndroidManager : MonoBehaviour
	{
		[Token(Token = "0x4002EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static BhapticsAndroidManager Instance;

		[Token(Token = "0x4002EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static bool pcAndoidTestMode;

		[Token(Token = "0x4002EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<HapticDevice> Devices;

		[Token(Token = "0x4002EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static List<UnityAction> refreshActions;

		[Token(Token = "0x60035D5")]
		[Address(RVA = "0xC1ED48", Offset = "0xC1ED48", VA = "0xC1ED48")]
		private void Awake()
		{
		}

		[Token(Token = "0x60035D6")]
		[Address(RVA = "0xC1EE70", Offset = "0xC1EE70", VA = "0xC1EE70")]
		private void Start()
		{
		}

		[Token(Token = "0x60035D7")]
		[Address(RVA = "0xC1EF14", Offset = "0xC1EF14", VA = "0xC1EF14")]
		private void RefreshDevices()
		{
		}

		[Token(Token = "0x60035D8")]
		[Address(RVA = "0xC1F410", Offset = "0xC1F410", VA = "0xC1F410")]
		public static void Ping(PositionType pos)
		{
		}

		[Token(Token = "0x60035D9")]
		[Address(RVA = "0xC1FA04", Offset = "0xC1FA04", VA = "0xC1FA04")]
		public static void TogglePosition(string address)
		{
		}

		[Token(Token = "0x60035DA")]
		[Address(RVA = "0xC1F824", Offset = "0xC1F824", VA = "0xC1F824")]
		public static void Ping(HapticDevice device)
		{
		}

		[Token(Token = "0x60035DB")]
		[Address(RVA = "0xC1FAC8", Offset = "0xC1FAC8", VA = "0xC1FAC8")]
		public static void PingAll()
		{
		}

		[Token(Token = "0x60035DC")]
		[Address(RVA = "0xC1FB84", Offset = "0xC1FB84", VA = "0xC1FB84")]
		public static List<HapticDevice> GetDevices()
		{
			return null;
		}

		[Token(Token = "0x60035DD")]
		[Address(RVA = "0xC1F654", Offset = "0xC1F654", VA = "0xC1F654")]
		public static List<HapticDevice> GetConnectedDevices(PositionType pos)
		{
			return null;
		}

		[Token(Token = "0x60035DE")]
		[Address(RVA = "0xC1FCA0", Offset = "0xC1FCA0", VA = "0xC1FCA0")]
		public static List<HapticDevice> GetPairedDevices(PositionType pos)
		{
			return null;
		}

		[Token(Token = "0x60035DF")]
		[Address(RVA = "0xC1FE68", Offset = "0xC1FE68", VA = "0xC1FE68")]
		public static void AddRefreshAction(UnityAction action)
		{
		}

		[Token(Token = "0x60035E0")]
		[Address(RVA = "0xC1FEF4", Offset = "0xC1FEF4", VA = "0xC1FEF4")]
		public static void RemoveRefreshAction()
		{
		}

		[Token(Token = "0x60035E1")]
		[Address(RVA = "0xC1FF78", Offset = "0xC1FF78", VA = "0xC1FF78")]
		public static bool IsStreaming()
		{
			return default(bool);
		}

		[Token(Token = "0x60035E2")]
		[Address(RVA = "0xC20038", Offset = "0xC20038", VA = "0xC20038")]
		public static void ToggleStreaming()
		{
		}

		[Token(Token = "0x60035E3")]
		[Address(RVA = "0xC200F4", Offset = "0xC200F4", VA = "0xC200F4")]
		public static List<AndroidUtils.StreamHost> GetStreamingHosts()
		{
			return null;
		}

		[Token(Token = "0x60035E4")]
		[Address(RVA = "0xC201E4", Offset = "0xC201E4", VA = "0xC201E4")]
		public static void ShowBluetoothSetting()
		{
		}

		[Token(Token = "0x60035E5")]
		[Address(RVA = "0xC202A0", Offset = "0xC202A0", VA = "0xC202A0")]
		public static void ToggleEnableDevice(HapticDevice device)
		{
		}

		[Token(Token = "0x60035E6")]
		[Address(RVA = "0xC20374", Offset = "0xC20374", VA = "0xC20374")]
		private void OnApplicationFocus(bool pauseStatus)
		{
		}

		[Token(Token = "0x60035E7")]
		[Address(RVA = "0xC20438", Offset = "0xC20438", VA = "0xC20438")]
		public BhapticsAndroidManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006EF")]
	public class SettingDeviceIcon
	{
		[Token(Token = "0x4002EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Sprite pairImage;

		[Token(Token = "0x4002EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sprite unpairImage;

		[Token(Token = "0x60035E9")]
		[Address(RVA = "0x10A5988", Offset = "0x10A5988", VA = "0x10A5988")]
		public SettingDeviceIcon()
		{
		}
	}
	[Token(Token = "0x20006F0")]
	public class Bhaptics_Widget_Setting : ScriptableObject
	{
		[Token(Token = "0x4002EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9232C0", Offset = "0x9232C0")]
		public SettingDeviceIcon SettingTactot;

		[Token(Token = "0x4002EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SettingDeviceIcon SettingTactal;

		[Token(Token = "0x4002EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SettingDeviceIcon SettingTactosyArm;

		[Token(Token = "0x4002EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SettingDeviceIcon SettingTactosyFoot;

		[Token(Token = "0x4002EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public SettingDeviceIcon SettingTactosyHand;

		[Token(Token = "0x60035EA")]
		[Address(RVA = "0xC21A90", Offset = "0xC21A90", VA = "0xC21A90")]
		public Sprite GetPairedDeviceSprite(HapticDevice device)
		{
			return null;
		}

		[Token(Token = "0x60035EB")]
		[Address(RVA = "0xC21BF8", Offset = "0xC21BF8", VA = "0xC21BF8")]
		public Bhaptics_Widget_Setting()
		{
		}
	}
	[Token(Token = "0x20006F1")]
	public class HapticApi
	{
		[Token(Token = "0x20006F2")]
		public struct point
		{
			[Token(Token = "0x4002EEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float x;

			[Token(Token = "0x4002EF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float y;

			[Token(Token = "0x4002EF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int intensity;

			[Token(Token = "0x4002EF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int motorCount;
		}

		[Token(Token = "0x20006F3")]
		public struct status
		{
			[Token(Token = "0x4002EF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int[] values;
		}

		[PreserveSig]
		[Token(Token = "0x60035EC")]
		[Address(RVA = "0x14199C8", Offset = "0x14199C8", VA = "0x14199C8")]
		public static extern bool TryGetExePath(byte[] buf, ref int size);

		[PreserveSig]
		[Token(Token = "0x60035ED")]
		[Address(RVA = "0x1419A68", Offset = "0x1419A68", VA = "0x1419A68")]
		public static extern void Initialise(string appId, string appName);

		[PreserveSig]
		[Token(Token = "0x60035EE")]
		[Address(RVA = "0x1419B20", Offset = "0x1419B20", VA = "0x1419B20")]
		public static extern void Destroy();

		[PreserveSig]
		[Token(Token = "0x60035EF")]
		[Address(RVA = "0x1419B90", Offset = "0x1419B90", VA = "0x1419B90")]
		public static extern void RegisterFeedback(string str, string projectJson);

		[PreserveSig]
		[Token(Token = "0x60035F0")]
		[Address(RVA = "0x1419C44", Offset = "0x1419C44", VA = "0x1419C44")]
		public static extern void RegisterFeedbackFromTactFile(string str, string tactFileStr);

		[PreserveSig]
		[Token(Token = "0x60035F1")]
		[Address(RVA = "0x1419CFC", Offset = "0x1419CFC", VA = "0x1419CFC")]
		public static extern void RegisterFeedbackFromTactFileReflected(string str, string tactFileStr);

		[PreserveSig]
		[Token(Token = "0x60035F2")]
		[Address(RVA = "0x1419DB4", Offset = "0x1419DB4", VA = "0x1419DB4")]
		public static extern void SubmitRegistered(string key);

		[PreserveSig]
		[Token(Token = "0x60035F3")]
		[Address(RVA = "0x1419E44", Offset = "0x1419E44", VA = "0x1419E44")]
		public static extern void SubmitRegisteredStartMillis(string key, int startTimeMillis);

		[PreserveSig]
		[Token(Token = "0x60035F4")]
		[Address(RVA = "0x1419EE4", Offset = "0x1419EE4", VA = "0x1419EE4")]
		public static extern void SubmitRegisteredWithOption(string key, string altKey, float intensity, float duration, float offsetX, float offsetY);

		[PreserveSig]
		[Token(Token = "0x60035F5")]
		[Address(RVA = "0x1419FCC", Offset = "0x1419FCC", VA = "0x1419FCC")]
		public static extern void SubmitByteArray(string key, PositionType pos, byte[] charPtr, int length, int durationMillis);

		[PreserveSig]
		[Token(Token = "0x60035F6")]
		[Address(RVA = "0x141A094", Offset = "0x141A094", VA = "0x141A094")]
		public static extern void SubmitPathArray(string key, PositionType pos, point[] charPtr, int length, int durationMillis);

		[PreserveSig]
		[Token(Token = "0x60035F7")]
		[Address(RVA = "0x141A15C", Offset = "0x141A15C", VA = "0x141A15C")]
		public static extern bool IsFeedbackRegistered(string key);

		[PreserveSig]
		[Token(Token = "0x60035F8")]
		[Address(RVA = "0x141A1F8", Offset = "0x141A1F8", VA = "0x141A1F8")]
		public static extern bool IsPlaying();

		[PreserveSig]
		[Token(Token = "0x60035F9")]
		[Address(RVA = "0x141A274", Offset = "0x141A274", VA = "0x141A274")]
		public static extern bool IsPlayingKey(string key);

		[PreserveSig]
		[Token(Token = "0x60035FA")]
		[Address(RVA = "0x141A310", Offset = "0x141A310", VA = "0x141A310")]
		public static extern void TurnOff();

		[PreserveSig]
		[Token(Token = "0x60035FB")]
		[Address(RVA = "0x141A380", Offset = "0x141A380", VA = "0x141A380")]
		public static extern void TurnOffKey(string key);

		[PreserveSig]
		[Token(Token = "0x60035FC")]
		[Address(RVA = "0x141A410", Offset = "0x141A410", VA = "0x141A410")]
		public static extern void EnableFeedback();

		[PreserveSig]
		[Token(Token = "0x60035FD")]
		[Address(RVA = "0x141A47C", Offset = "0x141A47C", VA = "0x141A47C")]
		public static extern void DisableFeedback();

		[PreserveSig]
		[Token(Token = "0x60035FE")]
		[Address(RVA = "0x141A4EC", Offset = "0x141A4EC", VA = "0x141A4EC")]
		public static extern void ToggleFeedback();

		[PreserveSig]
		[Token(Token = "0x60035FF")]
		[Address(RVA = "0x141A558", Offset = "0x141A558", VA = "0x141A558")]
		public static extern bool IsDevicePlaying(PositionType pos);

		[PreserveSig]
		[Token(Token = "0x6003600")]
		[Address(RVA = "0x141A5E0", Offset = "0x141A5E0", VA = "0x141A5E0")]
		public static extern bool TryGetResponseForPosition(PositionType pos, out status status);

		[Token(Token = "0x6003601")]
		[Address(RVA = "0x141A6AC", Offset = "0x141A6AC", VA = "0x141A6AC")]
		public HapticApi()
		{
		}
	}
	[Token(Token = "0x20006F4")]
	public class ArmsHapticClip : FileHapticClip
	{
		[Token(Token = "0x4002EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool IsReflect;

		[Token(Token = "0x6003602")]
		[Address(RVA = "0xC17DC8", Offset = "0xC17DC8", VA = "0xC17DC8", Slot = "12")]
		public override void Play(float intensity, float duration, float vestRotationAngleX, float vestRotationOffsetY, string identifier = "")
		{
		}

		[Token(Token = "0x6003603")]
		[Address(RVA = "0xC185D0", Offset = "0xC185D0", VA = "0xC185D0", Slot = "17")]
		public override void ResetValues()
		{
		}

		[Token(Token = "0x6003604")]
		[Address(RVA = "0xC185F8", Offset = "0xC185F8", VA = "0xC185F8")]
		public ArmsHapticClip()
		{
		}
	}
	[Token(Token = "0x20006F5")]
	public class BhapticsHaptic : IHaptic
	{
		[Token(Token = "0x6003605")]
		[Address(RVA = "0xC20554", Offset = "0xC20554", VA = "0xC20554")]
		public BhapticsHaptic()
		{
		}

		[Token(Token = "0x6003606")]
		[Address(RVA = "0xC20594", Offset = "0xC20594", VA = "0xC20594", Slot = "4")]
		public bool IsConnect(PositionType type)
		{
			return default(bool);
		}

		[Token(Token = "0x6003607")]
		[Address(RVA = "0xC205A0", Offset = "0xC205A0", VA = "0xC205A0", Slot = "5")]
		public bool IsConnect(HapticDeviceType type, bool isLeft = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6003608")]
		[Address(RVA = "0xC206B4", Offset = "0xC206B4", VA = "0xC206B4", Slot = "6")]
		public bool IsPlaying(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6003609")]
		[Address(RVA = "0xC206C0", Offset = "0xC206C0", VA = "0xC206C0", Slot = "7")]
		public bool IsFeedbackRegistered(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x600360A")]
		[Address(RVA = "0xC206CC", Offset = "0xC206CC", VA = "0xC206CC", Slot = "8")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x600360B")]
		[Address(RVA = "0xC206D4", Offset = "0xC206D4", VA = "0xC206D4", Slot = "9")]
		public void RegisterTactFileStr(string key, string tactFileStr)
		{
		}

		[Token(Token = "0x600360C")]
		[Address(RVA = "0xC206E4", Offset = "0xC206E4", VA = "0xC206E4", Slot = "10")]
		public void RegisterTactFileStrReflected(string key, string tactFileStr)
		{
		}

		[Token(Token = "0x600360D")]
		[Address(RVA = "0xC206F4", Offset = "0xC206F4", VA = "0xC206F4", Slot = "11")]
		public void Submit(string key, PositionType position, List<DotPoint> points, int durationMillis)
		{
		}

		[Token(Token = "0x600360E")]
		[Address(RVA = "0xC20808", Offset = "0xC20808", VA = "0xC20808", Slot = "12")]
		public void Submit(string key, PositionType position, List<PathPoint> points, int durationMillis)
		{
		}

		[Token(Token = "0x600360F")]
		[Address(RVA = "0xC209D8", Offset = "0xC209D8", VA = "0xC209D8", Slot = "13")]
		public void SubmitRegistered(string key, string altKey, ScaleOption option)
		{
		}

		[Token(Token = "0x6003610")]
		[Address(RVA = "0xC20A04", Offset = "0xC20A04", VA = "0xC20A04", Slot = "14")]
		public void SubmitRegistered(string key, string altKey, RotationOption rOption, ScaleOption sOption)
		{
		}

		[Token(Token = "0x6003611")]
		[Address(RVA = "0xC20A34", Offset = "0xC20A34", VA = "0xC20A34", Slot = "15")]
		public void SubmitRegistered(string key)
		{
		}

		[Token(Token = "0x6003612")]
		[Address(RVA = "0xC20A40", Offset = "0xC20A40", VA = "0xC20A40", Slot = "16")]
		public void SubmitRegistered(string key, int startTimeMillis)
		{
		}

		[Token(Token = "0x6003613")]
		[Address(RVA = "0xC20A50", Offset = "0xC20A50", VA = "0xC20A50", Slot = "17")]
		public void TurnOff(string key)
		{
		}

		[Token(Token = "0x6003614")]
		[Address(RVA = "0xC20A5C", Offset = "0xC20A5C", VA = "0xC20A5C", Slot = "18")]
		public void TurnOff()
		{
		}

		[Token(Token = "0x6003615")]
		[Address(RVA = "0xC20A64", Offset = "0xC20A64", VA = "0xC20A64", Slot = "19")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6003616")]
		[Address(RVA = "0xC20A6C", Offset = "0xC20A6C", VA = "0xC20A6C", Slot = "20")]
		public int[] GetCurrentFeedback(PositionType pos)
		{
			return null;
		}
	}
	[Token(Token = "0x20006F6")]
	public class BhapticsProject
	{
		[Token(Token = "0x4002EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9232F8", Offset = "0x9232F8")]
		private Track[] <Tracks>k__BackingField;

		[Token(Token = "0x4002EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x923308", Offset = "0x923308")]
		private Layout <Layout>k__BackingField;

		[Token(Token = "0x17000742")]
		public Track[] Tracks
		{
			[Token(Token = "0x6003617")]
			[Address(RVA = "0xC20FFC", Offset = "0xC20FFC", VA = "0xC20FFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x932808", Offset = "0x932808")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003618")]
			[Address(RVA = "0xC21004", Offset = "0xC21004", VA = "0xC21004")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x932818", Offset = "0x932818")]
			set
			{
			}
		}

		[Token(Token = "0x17000743")]
		public Layout Layout
		{
			[Token(Token = "0x6003619")]
			[Address(RVA = "0xC2100C", Offset = "0xC2100C", VA = "0xC2100C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x932828", Offset = "0x932828")]
			get
			{
				return null;
			}
			[Token(Token = "0x600361A")]
			[Address(RVA = "0xC21014", Offset = "0xC21014", VA = "0xC21014")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x932838", Offset = "0x932838")]
			set
			{
			}
		}

		[Token(Token = "0x600361B")]
		[Address(RVA = "0xC2101C", Offset = "0xC2101C", VA = "0xC2101C")]
		public static BhapticsProject ToProject(JSONObject jsonObject)
		{
			return null;
		}

		[Token(Token = "0x600361C")]
		[Address(RVA = "0xC2122C", Offset = "0xC2122C", VA = "0xC2122C")]
		public JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x600361D")]
		[Address(RVA = "0xC21224", Offset = "0xC21224", VA = "0xC21224")]
		public BhapticsProject()
		{
		}
	}
	[Token(Token = "0x20006F7")]
	public class HapticFeedbackFile
	{
		[Token(Token = "0x4002EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BhapticsProject Project;

		[Token(Token = "0x600361E")]
		[Address(RVA = "0x141BA60", Offset = "0x141BA60", VA = "0x141BA60")]
		public static HapticFeedbackFile ToHapticFeedbackFile(string jsonStr)
		{
			return null;
		}

		[Token(Token = "0x600361F")]
		[Address(RVA = "0x141BB2C", Offset = "0x141BB2C", VA = "0x141BB2C")]
		public HapticFeedbackFile()
		{
		}
	}
	[Token(Token = "0x20006F8")]
	public class Track
	{
		[Token(Token = "0x4002EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x923318", Offset = "0x923318")]
		private HapticEffect[] <Effects>k__BackingField;

		[Token(Token = "0x17000744")]
		public HapticEffect[] Effects
		{
			[Token(Token = "0x6003620")]
			[Address(RVA = "0xF1405C", Offset = "0xF1405C", VA = "0xF1405C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x932848", Offset = "0x932848")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003621")]
			[Address(RVA = "0xF14064", Offset = "0xF14064", VA = "0xF14064")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x932858", Offset = "0x932858")]
			set
			{
			}
		}

		[Token(Token = "0x6003622")]
		[Address(RVA = "0xF1406C", Offset = "0xF1406C", VA = "0xF1406C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6003623")]
		[Address(RVA = "0xF140F4", Offset = "0xF140F4", VA = "0xF140F4")]
		internal static Track ToTrack(JSONObject jsonObj)
		{
			return null;
		}

		[Token(Token = "0x6003624")]
		[Address(RVA = "0xF142EC", Offset = "0xF142EC", VA = "0xF142EC")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6003625")]
		[Address(RVA = "0xF142E4", Offset = "0xF142E4", VA = "0xF142E4")]
		public Track()
		{
		}
	}
	[Token(Token = "0x20006F9")]
	public class HapticEffect
	{
		[Token(Token = "0x4002EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x923328", Offset = "0x923328")]
		private int <StartTime>k__BackingField;

		[Token(Token = "0x4002EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x923338", Offset = "0x923338")]
		private int <OffsetTime>k__BackingField;

		[Token(Token = "0x4002EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x923348", Offset = "0x923348")]
		private Dictionary<string, HapticEffectMode> <Modes>k__BackingField;

		[Token(Token = "0x17000745")]
		public int StartTime
		{
			[Token(Token = "0x6003626")]
			[Address(RVA = "0x141AF88", Offset = "0x141AF88", VA = "0x141AF88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x932868", Offset = "0x932868")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6003627")]
			[Address(RVA = "0x141AF90", Offset = "0x141AF90", VA = "0x141AF90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x932878", Offset = "0x932878")]
			set
			{
			}
		}

		[Token(Token = "0x17000746")]
		public int OffsetTime
		{
			[Token(Token = "0x6003628")]
			[Address(RVA = "0x141AF98", Offset = "0x141AF98", VA = "0x141AF98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x932888", Offset = "0x932888")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6003629")]
			[Address(RVA = "0x141AFA0", Offset = "0x141AFA0", VA = "0x141AFA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x932898", Offset = "0x932898")]
			set
			{
			}
		}

		[Token(Token = "0x17000747")]
		public Dictionary<string, HapticEffectMode> Modes
		{
			[Token(Token = "0x600362A")]
			[Address(RVA = "0x141AFA8", Offset = "0x141AFA8", VA = "0x141AFA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9328A8", Offset = "0x9328A8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600362B")]
			[Address(RVA = "0x141AFB0", Offset = "0x141AFB0", VA = "0x141AFB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9328B8", Offset = "0x9328B8")]
			set
			{
			}
		}

		[Token(Token = "0x600362C")]
		[Address(RVA = "0x141AFB8", Offset = "0x141AFB8", VA = "0x141AFB8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600362D")]
		[Address(RVA = "0x141B208", Offset = "0x141B208", VA = "0x141B208")]
		internal static HapticEffect ToEffect(JSONObject jsonObj)
		{
			return null;
		}

		[Token(Token = "0x600362E")]
		[Address(RVA = "0x141B614", Offset = "0x141B614", VA = "0x141B614")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x600362F")]
		[Address(RVA = "0x141B498", Offset = "0x141B498", VA = "0x141B498")]
		public HapticEffect()
		{
		}
	}
	[Token(Token = "0x20006FA")]
	public class Layout
	{
		[Token(Token = "0x4002EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x923358", Offset = "0x923358")]
		private string <Type>k__BackingField;

		[Token(Token = "0x4002EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x923368", Offset = "0x923368")]
		private Dictionary<string, LayoutObject[]> <Layouts>k__BackingField;

		[Token(Token = "0x17000748")]
		public string Type
		{
			[Token(Token = "0x6003630")]
			[Address(RVA = "0x1139B08", Offset = "0x1139B08", VA = "0x1139B08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9328C8", Offset = "0x9328C8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003631")]
			[Address(RVA = "0x1139B10", Offset = "0x1139B10", VA = "0x1139B10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9328D8", Offset = "0x9328D8")]
			set
			{
			}
		}

		[Token(Token = "0x17000749")]
		public Dictionary<string, LayoutObject[]> Layouts
		{
			[Token(Token = "0x6003632")]
			[Address(RVA = "0x1139B18", Offset = "0x1139B18", VA = "0x1139B18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9328E8", Offset = "0x9328E8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003633")]
			[Address(RVA = "0x1139B20", Offset = "0x1139B20", VA = "0x1139B20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9328F8", Offset = "0x9328F8")]
			set
			{
			}
		}

		[Token(Token = "0x6003634")]
		[Address(RVA = "0x1139B28", Offset = "0x1139B28", VA = "0x1139B28")]
		internal static Layout ToLayout(JSONObject jsonObj)
		{
			return null;
		}

		[Token(Token = "0x6003635")]
		[Address(RVA = "0x113A008", Offset = "0x113A008", VA = "0x113A008")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6003636")]
		[Address(RVA = "0x1139EBC", Offset = "0x1139EBC", VA = "0x1139EBC")]
		public Layout()
		{
		}
	}
	[Token(Token = "0x20006FB")]
	public class LayoutObject
	{
		[Token(Token = "0x4002EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x923378", Offset = "0x923378")]
		private int <Index>k__BackingField;

		[Token(Token = "0x4002EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x923388", Offset = "0x923388")]
		private float <X>k__BackingField;

		[Token(Token = "0x4002F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x923398", Offset = "0x923398")]
		private float <Y>k__BackingField;

		[Token(Token = "0x1700074A")]
		public int Index
		{
			[Token(Token = "0x6003637")]
			[Address(RVA = "0x113A440", Offset = "0x113A440", VA = "0x113A440")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x932908", Offset = "0x932908")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6003638")]
			[Address(RVA = "0x113A448", Offset = "0x113A448", VA = "0x113A448")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x932918", Offset = "0x932918")]
			set
			{
			}
		}

		[Token(Token = "0x1700074B")]
		public float X
		{
			[Token(Token = "0x6003639")]
			[Address(RVA = "0x113A450", Offset = "0x113A450", VA = "0x113A450")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x932928", Offset = "0x932928")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600363A")]
			[Address(RVA = "0x113A458", Offset = "0x113A458", VA = "0x113A458")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x932938", Offset = "0x932938")]
			set
			{
			}
		}

		[Token(Token = "0x1700074C")]
		public float Y
		{
			[Token(Token = "0x600363B")]
			[Address(RVA = "0x113A460", Offset = "0x113A460", VA = "0x113A460")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x932948", Offset = "0x932948")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600363C")]
			[Address(RVA = "0x113A468", Offset = "0x113A468", VA = "0x113A468")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x932958", Offset = "0x932958")]
			set
			{
			}
		}

		[Token(Token = "0x600363D")]
		[Address(RVA = "0x1139EC4", Offset = "0x1139EC4", VA = "0x1139EC4")]
		internal static LayoutObject ToLayoutObject(JSONObject jsonObj)
		{
			return null;
		}

		[Token(Token = "0x600363E")]
		[Address(RVA = "0x113A2FC", Offset = "0x113A2FC", VA = "0x113A2FC")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x600363F")]
		[Address(RVA = "0x113A470", Offset = "0x113A470", VA = "0x113A470")]
		public LayoutObject()
		{
		}
	}
	[Token(Token = "0x20006FC")]
	public class HapticEffectMode
	{
		[Token(Token = "0x4002F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9233A8", Offset = "0x9233A8")]
		private FeedbackMode <Mode>k__BackingField;

		[Token(Token = "0x4002F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9233B8", Offset = "0x9233B8")]
		private DotMode <DotMode>k__BackingField;

		[Token(Token = "0x4002F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9233C8", Offset = "0x9233C8")]
		private PathMode <PathMode>k__BackingField;

		[Token(Token = "0x1700074D")]
		public FeedbackMode Mode
		{
			[Token(Token = "0x6003640")]
			[Address(RVA = "0x141BA28", Offset = "0x141BA28", VA = "0x141BA28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x932968", Offset = "0x932968")]
			get
			{
				return default(FeedbackMode);
			}
			[Token(Token = "0x6003641")]
			[Address(RVA = "0x141BA30", Offset = "0x141BA30", VA = "0x141BA30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x932978", Offset = "0x932978")]
			set
			{
			}
		}

		[Token(Token = "0x1700074E")]
		public DotMode DotMode
		{
			[Token(Token = "0x6003642")]
			[Address(RVA = "0x141BA38", Offset = "0x141BA38", VA = "0x141BA38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x932988", Offset = "0x932988")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003643")]
			[Address(RVA = "0x141BA40", Offset = "0x141BA40", VA = "0x141BA40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x932998", Offset = "0x932998")]
			set
			{
			}
		}

		[Token(Token = "0x1700074F")]
		public PathMode PathMode
		{
			[Token(Token = "0x6003644")]
			[Address(RVA = "0x141BA48", Offset = "0x141BA48", VA = "0x141BA48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9329A8", Offset = "0x9329A8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003645")]
			[Address(RVA = "0x141BA50", Offset = "0x141BA50", VA = "0x141BA50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9329B8", Offset = "0x9329B8")]
			set
			{
			}
		}

		[Token(Token = "0x6003646")]
		[Address(RVA = "0x141B4A0", Offset = "0x141B4A0", VA = "0x141B4A0")]
		internal static HapticEffectMode ToMode(JSONObject jsonObj)
		{
			return null;
		}

		[Token(Token = "0x6003647")]
		[Address(RVA = "0x141B888", Offset = "0x141B888", VA = "0x141B888")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6003648")]
		[Address(RVA = "0x141BA58", Offset = "0x141BA58", VA = "0x141BA58")]
		public HapticEffectMode()
		{
		}
	}
	[Token(Token = "0x20006FD")]
	public class DotMode
	{
		[Token(Token = "0x4002F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9233D8", Offset = "0x9233D8")]
		private bool <DotConnected>k__BackingField;

		[Token(Token = "0x4002F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9233E8", Offset = "0x9233E8")]
		private DotModeObjectCollection[] <Feedback>k__BackingField;

		[Token(Token = "0x17000750")]
		public bool DotConnected
		{
			[Token(Token = "0x6003649")]
			[Address(RVA = "0xD96398", Offset = "0xD96398", VA = "0xD96398")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9329C8", Offset = "0x9329C8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600364A")]
			[Address(RVA = "0xD963A0", Offset = "0xD963A0", VA = "0xD963A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9329D8", Offset = "0x9329D8")]
			set
			{
			}
		}

		[Token(Token = "0x17000751")]
		public DotModeObjectCollection[] Feedback
		{
			[Token(Token = "0x600364B")]
			[Address(RVA = "0xD963AC", Offset = "0xD963AC", VA = "0xD963AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9329E8", Offset = "0x9329E8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600364C")]
			[Address(RVA = "0xD963B4", Offset = "0xD963B4", VA = "0xD963B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9329F8", Offset = "0x9329F8")]
			set
			{
			}
		}

		[Token(Token = "0x600364D")]
		[Address(RVA = "0xD963BC", Offset = "0xD963BC", VA = "0xD963BC")]
		internal static DotMode ToDotMode(JSONObject jsonObj)
		{
			return null;
		}

		[Token(Token = "0x600364E")]
		[Address(RVA = "0xD96898", Offset = "0xD96898", VA = "0xD96898")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x600364F")]
		[Address(RVA = "0xD965EC", Offset = "0xD965EC", VA = "0xD965EC")]
		public DotMode()
		{
		}
	}
	[Token(Token = "0x20006FE")]
	public class DotModeObjectCollection
	{
		[Token(Token = "0x4002F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9233F8", Offset = "0x9233F8")]
		private int <StartTime>k__BackingField;

		[Token(Token = "0x4002F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x923408", Offset = "0x923408")]
		private int <EndTime>k__BackingField;

		[Token(Token = "0x4002F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlaybackType PlaybackType;

		[Token(Token = "0x4002F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x923418", Offset = "0x923418")]
		private DotModeObject[] <PointList>k__BackingField;

		[Token(Token = "0x17000752")]
		public int StartTime
		{
			[Token(Token = "0x6003650")]
			[Address(RVA = "0xD96E5C", Offset = "0xD96E5C", VA = "0xD96E5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x932A08", Offset = "0x932A08")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6003651")]
			[Address(RVA = "0xD96E64", Offset = "0xD96E64", VA = "0xD96E64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x932A18", Offset = "0x932A18")]
			set
			{
			}
		}

		[Token(Token = "0x17000753")]
		public int EndTime
		{
			[Token(Token = "0x6003652")]
			[Address(RVA = "0xD96E6C", Offset = "0xD96E6C", VA = "0xD96E6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x932A28", Offset = "0x932A28")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6003653")]
			[Address(RVA = "0xD96E74", Offset = "0xD96E74", VA = "0xD96E74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x932A38", Offset = "0x932A38")]
			set
			{
			}
		}

		[Token(Token = "0x17000754")]
		public DotModeObject[] PointList
		{
			[Token(Token = "0x6003654")]
			[Address(RVA = "0xD96E7C", Offset = "0xD96E7C", VA = "0xD96E7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x932A48", Offset = "0x932A48")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003655")]
			[Address(RVA = "0xD96E84", Offset = "0xD96E84", VA = "0xD96E84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x932A58", Offset = "0x932A58")]
			set
			{
			}
		}

		[Token(Token = "0x6003656")]
		[Address(RVA = "0xD965F4", Offset = "0xD965F4", VA = "0xD965F4")]
		internal static DotModeObjectCollection ToObject(JSONObject val)
		{
			return null;
		}

		[Token(Token = "0x6003657")]
		[Address(RVA = "0xD96A28", Offset = "0xD96A28", VA = "0xD96A28")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6003658")]
		[Address(RVA = "0xD96E8C", Offset = "0xD96E8C", VA = "0xD96E8C")]
		public DotModeObjectCollection()
		{
		}
	}
	[Token(Token = "0x20006FF")]
	public class DotModeObject
	{
		[Token(Token = "0x4002F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x923428", Offset = "0x923428")]
		private int <Index>k__BackingField;

		[Token(Token = "0x4002F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x923438", Offset = "0x923438")]
		private float <Intensity>k__BackingField;

		[Token(Token = "0x17000755")]
		public int Index
		{
			[Token(Token = "0x6003659")]
			[Address(RVA = "0xD96C6C", Offset = "0xD96C6C", VA = "0xD96C6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x932A68", Offset = "0x932A68")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600365A")]
			[Address(RVA = "0xD96C74", Offset = "0xD96C74", VA = "0xD96C74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x932A78", Offset = "0x932A78")]
			set
			{
			}
		}

		[Token(Token = "0x17000756")]
		public float Intensity
		{
			[Token(Token = "0x600365B")]
			[Address(RVA = "0xD96C7C", Offset = "0xD96C7C", VA = "0xD96C7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x932A88", Offset = "0x932A88")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600365C")]
			[Address(RVA = "0xD96C84", Offset = "0xD96C84", VA = "0xD96C84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x932A98", Offset = "0x932A98")]
			set
			{
			}
		}

		[Token(Token = "0x600365D")]
		[Address(RVA = "0xD96C8C", Offset = "0xD96C8C", VA = "0xD96C8C")]
		internal static DotModeObject ToObject(JSONObject jsonObject)
		{
			return null;
		}

		[Token(Token = "0x600365E")]
		[Address(RVA = "0xD96D50", Offset = "0xD96D50", VA = "0xD96D50")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x600365F")]
		[Address(RVA = "0xD96D48", Offset = "0xD96D48", VA = "0xD96D48")]
		public DotModeObject()
		{
		}
	}
	[Token(Token = "0x2000700")]
	public class PathMode
	{
		[Token(Token = "0x4002F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x923448", Offset = "0x923448")]
		private PathModeObjectCollection[] <Feedback>k__BackingField;

		[Token(Token = "0x17000757")]
		public PathModeObjectCollection[] Feedback
		{
			[Token(Token = "0x6003660")]
			[Address(RVA = "0x1739400", Offset = "0x1739400", VA = "0x1739400")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x932AA8", Offset = "0x932AA8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003661")]
			[Address(RVA = "0x1739408", Offset = "0x1739408", VA = "0x1739408")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x932AB8", Offset = "0x932AB8")]
			set
			{
			}
		}

		[Token(Token = "0x6003662")]
		[Address(RVA = "0x1739410", Offset = "0x1739410", VA = "0x1739410")]
		internal static PathMode ToPathMode(JSONObject jsonObject)
		{
			return null;
		}

		[Token(Token = "0x6003663")]
		[Address(RVA = "0x17398A8", Offset = "0x17398A8", VA = "0x17398A8")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6003664")]
		[Address(RVA = "0x17395E4", Offset = "0x17395E4", VA = "0x17395E4")]
		public PathMode()
		{
		}
	}
	[Token(Token = "0x2000701")]
	public class PathModeObjectCollection
	{
		[Token(Token = "0x4002F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlaybackType PlaybackType;

		[Token(Token = "0x4002F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public PathMovingPattern MovingPattern;

		[Token(Token = "0x4002F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x923458", Offset = "0x923458")]
		private PathModeObject[] <PointList>k__BackingField;

		[Token(Token = "0x17000758")]
		public PathModeObject[] PointList
		{
			[Token(Token = "0x6003665")]
			[Address(RVA = "0x1739EFC", Offset = "0x1739EFC", VA = "0x1739EFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x932AC8", Offset = "0x932AC8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003666")]
			[Address(RVA = "0x1739F04", Offset = "0x1739F04", VA = "0x1739F04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x932AD8", Offset = "0x932AD8")]
			set
			{
			}
		}

		[Token(Token = "0x6003667")]
		[Address(RVA = "0x17395EC", Offset = "0x17395EC", VA = "0x17395EC")]
		internal static PathModeObjectCollection ToObject(JSONObject jsonObject)
		{
			return null;
		}

		[Token(Token = "0x6003668")]
		[Address(RVA = "0x17399CC", Offset = "0x17399CC", VA = "0x17399CC")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6003669")]
		[Address(RVA = "0x1739F0C", Offset = "0x1739F0C", VA = "0x1739F0C")]
		public PathModeObjectCollection()
		{
		}
	}
	[Token(Token = "0x2000702")]
	public class PathModeObject
	{
		[Token(Token = "0x4002F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x923468", Offset = "0x923468")]
		private float <X>k__BackingField;

		[Token(Token = "0x4002F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x923478", Offset = "0x923478")]
		private float <Y>k__BackingField;

		[Token(Token = "0x4002F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x923488", Offset = "0x923488")]
		private float <Intensity>k__BackingField;

		[Token(Token = "0x4002F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x923498", Offset = "0x923498")]
		private int <Time>k__BackingField;

		[Token(Token = "0x17000759")]
		public float X
		{
			[Token(Token = "0x600366A")]
			[Address(RVA = "0x1739C28", Offset = "0x1739C28", VA = "0x1739C28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x932AE8", Offset = "0x932AE8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600366B")]
			[Address(RVA = "0x1739C30", Offset = "0x1739C30", VA = "0x1739C30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x932AF8", Offset = "0x932AF8")]
			set
			{
			}
		}

		[Token(Token = "0x1700075A")]
		public float Y
		{
			[Token(Token = "0x600366C")]
			[Address(RVA = "0x1739C38", Offset = "0x1739C38", VA = "0x1739C38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x932B08", Offset = "0x932B08")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600366D")]
			[Address(RVA = "0x1739C40", Offset = "0x1739C40", VA = "0x1739C40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x932B18", Offset = "0x932B18")]
			set
			{
			}
		}

		[Token(Token = "0x1700075B")]
		public float Intensity
		{
			[Token(Token = "0x600366E")]
			[Address(RVA = "0x1739C48", Offset = "0x1739C48", VA = "0x1739C48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x932B28", Offset = "0x932B28")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600366F")]
			[Address(RVA = "0x1739C50", Offset = "0x1739C50", VA = "0x1739C50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x932B38", Offset = "0x932B38")]
			set
			{
			}
		}

		[Token(Token = "0x1700075C")]
		public int Time
		{
			[Token(Token = "0x6003670")]
			[Address(RVA = "0x1739C58", Offset = "0x1739C58", VA = "0x1739C58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x932B48", Offset = "0x932B48")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6003671")]
			[Address(RVA = "0x1739C60", Offset = "0x1739C60", VA = "0x1739C60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x932B58", Offset = "0x932B58")]
			set
			{
			}
		}

		[Token(Token = "0x6003672")]
		[Address(RVA = "0x1739C68", Offset = "0x1739C68", VA = "0x1739C68")]
		internal static PathModeObject ToObject(JSONObject jsonObject)
		{
			return null;
		}

		[Token(Token = "0x6003673")]
		[Address(RVA = "0x1739D80", Offset = "0x1739D80", VA = "0x1739D80")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6003674")]
		[Address(RVA = "0x1739D78", Offset = "0x1739D78", VA = "0x1739D78")]
		public PathModeObject()
		{
		}
	}
	[Token(Token = "0x2000703")]
	internal class ParseUtil
	{
		[Token(Token = "0x6003675")]
		[Address(RVA = "0x1738E5C", Offset = "0x1738E5C", VA = "0x1738E5C")]
		internal static float GetFloat(JSONObject obj, string key, float defaultValue = -1f)
		{
			return default(float);
		}

		[Token(Token = "0x6003676")]
		[Address(RVA = "0x1738FBC", Offset = "0x1738FBC", VA = "0x1738FBC")]
		internal static int GetInt(JSONObject obj, string key, int defaultValue = -1)
		{
			return default(int);
		}

		[Token(Token = "0x6003677")]
		[Address(RVA = "0x173911C", Offset = "0x173911C", VA = "0x173911C")]
		public ParseUtil()
		{
		}
	}
	[Token(Token = "0x2000704")]
	public class BhapticsUtils
	{
		[Token(Token = "0x4002F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool isInit;

		[Token(Token = "0x4002F15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string exeFilePath;

		[Token(Token = "0x4002F16")]
		public const string TypeHead = "Head";

		[Token(Token = "0x4002F17")]
		public const string TypeTactal = "Tactal";

		[Token(Token = "0x4002F18")]
		public const string TypeVest = "Vest";

		[Token(Token = "0x4002F19")]
		public const string TypeTactot = "Tactot";

		[Token(Token = "0x4002F1A")]
		public const string TypeTactosy = "Tactosy";

		[Token(Token = "0x4002F1B")]
		public const string TypeTactosy2 = "Tactosy2";

		[Token(Token = "0x4002F1C")]
		public const string TypeHand = "Hand";

		[Token(Token = "0x4002F1D")]
		public const string TypeFoot = "Foot";

		[Token(Token = "0x6003678")]
		private static T[] SubArray<T>(T[] data, int index, int length)
		{
			return null;
		}

		[Token(Token = "0x6003679")]
		[Address(RVA = "0xC21398", Offset = "0xC21398", VA = "0xC21398")]
		public static string GetExePath()
		{
			return null;
		}

		[Token(Token = "0x600367A")]
		[Address(RVA = "0xC213DC", Offset = "0xC213DC", VA = "0xC213DC")]
		public static bool IsPlayerInstalled()
		{
			return default(bool);
		}

		[Token(Token = "0x600367B")]
		[Address(RVA = "0xC213E4", Offset = "0xC213E4", VA = "0xC213E4")]
		public static bool IsPlayerRunning()
		{
			return default(bool);
		}

		[Token(Token = "0x600367C")]
		[Address(RVA = "0xC213EC", Offset = "0xC213EC", VA = "0xC213EC")]
		private static bool Is64BitBuild()
		{
			return default(bool);
		}

		[Token(Token = "0x600367D")]
		[Address(RVA = "0xC2140C", Offset = "0xC2140C", VA = "0xC2140C")]
		public static void LaunchPlayer(bool tryLaunch)
		{
		}

		[Token(Token = "0x600367E")]
		[Address(RVA = "0xC21410", Offset = "0xC21410", VA = "0xC21410")]
		public static float Angle(Vector3 fwd, Vector3 targetDir)
		{
			return default(float);
		}

		[Token(Token = "0x600367F")]
		[Address(RVA = "0xC21530", Offset = "0xC21530", VA = "0xC21530")]
		private static int AngleDir(Vector3 fwd, Vector3 targetDir, Vector3 up)
		{
			return default(int);
		}

		[Token(Token = "0x6003680")]
		[Address(RVA = "0xC21588", Offset = "0xC21588", VA = "0xC21588")]
		public static PositionType ToPositionType(HapticClipPositionType pos)
		{
			return default(PositionType);
		}

		[Token(Token = "0x6003681")]
		[Address(RVA = "0xC2065C", Offset = "0xC2065C", VA = "0xC2065C")]
		public static PositionType ToPositionType(HapticDeviceType pos, bool isLeft = true)
		{
			return default(PositionType);
		}

		[Token(Token = "0x6003682")]
		[Address(RVA = "0xC215A8", Offset = "0xC215A8", VA = "0xC215A8")]
		public BhapticsUtils()
		{
		}
	}
	[Token(Token = "0x2000705")]
	public class FeetHapticClip : ArmsHapticClip
	{
		[Token(Token = "0x6003684")]
		[Address(RVA = "0x1307768", Offset = "0x1307768", VA = "0x1307768")]
		public FeetHapticClip()
		{
		}
	}
	[Token(Token = "0x2000706")]
	public class FileHapticClip : HapticClip
	{
		[Token(Token = "0x4002F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9234A8", Offset = "0x9234A8")]
		public float Intensity;

		[Token(Token = "0x4002F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9234C4", Offset = "0x9234C4")]
		public float Duration;

		[Token(Token = "0x4002F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HapticDeviceType ClipType;

		[Token(Token = "0x4002F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string JsonValue;

		[Token(Token = "0x4002F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		protected int _clipDurationTime;

		[Token(Token = "0x1700075D")]
		public int ClipDurationTime
		{
			[Token(Token = "0x6003685")]
			[Address(RVA = "0x1307770", Offset = "0x1307770", VA = "0x1307770")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6003686")]
		[Address(RVA = "0x1307864", Offset = "0x1307864", VA = "0x1307864", Slot = "4")]
		public override void Play()
		{
		}

		[Token(Token = "0x6003687")]
		[Address(RVA = "0x13078C4", Offset = "0x13078C4", VA = "0x13078C4", Slot = "5")]
		public override void Play(string identifier)
		{
		}

		[Token(Token = "0x6003688")]
		[Address(RVA = "0x13078DC", Offset = "0x13078DC", VA = "0x13078DC", Slot = "6")]
		public override void Play(float intensity, string identifier = "")
		{
		}

		[Token(Token = "0x6003689")]
		[Address(RVA = "0x13078F4", Offset = "0x13078F4", VA = "0x13078F4", Slot = "7")]
		public override void Play(float intensity, float duration, string identifier = "")
		{
		}

		[Token(Token = "0x600368A")]
		[Address(RVA = "0x1307908", Offset = "0x1307908", VA = "0x1307908", Slot = "8")]
		public override void Play(float intensity, float duration, float vestRotationAngleX, string identifier = "")
		{
		}

		[Token(Token = "0x600368B")]
		[Address(RVA = "0x1307918", Offset = "0x1307918", VA = "0x1307918", Slot = "9")]
		public override void Play(Vector3 contactPos, Collider targetCollider, string identifier = "")
		{
		}

		[Token(Token = "0x600368C")]
		[Address(RVA = "0x1307A48", Offset = "0x1307A48", VA = "0x1307A48", Slot = "10")]
		public override void Play(Vector3 contactPos, Vector3 targetPos, Vector3 targetForward, float targetHeight, string identifier = "")
		{
		}

		[Token(Token = "0x600368D")]
		[Address(RVA = "0x1307B60", Offset = "0x1307B60", VA = "0x1307B60", Slot = "12")]
		public override void Play(float intensity, float duration, float vestRotationAngleX, float vestRotationOffsetY, string identifier = "")
		{
		}

		[Token(Token = "0x600368E")]
		[Address(RVA = "0x1307DF8", Offset = "0x1307DF8", VA = "0x1307DF8", Slot = "17")]
		public override void ResetValues()
		{
		}

		[Token(Token = "0x600368F")]
		[Address(RVA = "0x13077AC", Offset = "0x13077AC", VA = "0x13077AC")]
		private int CalculateClipDutationTime(HapticFeedbackFile hapticFeedbackFile)
		{
			return default(int);
		}

		[Token(Token = "0x6003690")]
		[Address(RVA = "0x1307E24", Offset = "0x1307E24", VA = "0x1307E24")]
		public FileHapticClip()
		{
		}
	}
	[Token(Token = "0x2000707")]
	public class HandsHapticClip : ArmsHapticClip
	{
		[Token(Token = "0x6003691")]
		[Address(RVA = "0x14199C0", Offset = "0x14199C0", VA = "0x14199C0")]
		public HandsHapticClip()
		{
		}
	}
	[Token(Token = "0x2000708")]
	public enum HapticDeviceType
	{
		[Token(Token = "0x4002F24")]
		None,
		[Token(Token = "0x4002F25")]
		Tactal,
		[Token(Token = "0x4002F26")]
		TactSuit,
		[Token(Token = "0x4002F27")]
		Tactosy_arms,
		[Token(Token = "0x4002F28")]
		Tactosy_hands,
		[Token(Token = "0x4002F29")]
		Tactosy_feet
	}
	[Serializable]
	[Token(Token = "0x2000709")]
	public enum HapticClipPositionType
	{
		[Token(Token = "0x4002F2B")]
		VestFront,
		[Token(Token = "0x4002F2C")]
		VestBack,
		[Token(Token = "0x4002F2D")]
		Head,
		[Token(Token = "0x4002F2E")]
		RightForearm,
		[Token(Token = "0x4002F2F")]
		LeftForearm,
		[Token(Token = "0x4002F30")]
		LeftHand,
		[Token(Token = "0x4002F31")]
		RightHand,
		[Token(Token = "0x4002F32")]
		LeftFoot,
		[Token(Token = "0x4002F33")]
		RightFoot
	}
	[Token(Token = "0x200070A")]
	public class HapticClip : ScriptableObject
	{
		[NonSerialized]
		[Token(Token = "0x4002F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected string assetId;

		[NonSerialized]
		[Token(Token = "0x4002F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string keyId;

		[Token(Token = "0x6003692")]
		[Address(RVA = "0x141A6B4", Offset = "0x141A6B4", VA = "0x141A6B4", Slot = "4")]
		public virtual void Play()
		{
		}

		[Token(Token = "0x6003693")]
		[Address(RVA = "0x141A718", Offset = "0x141A718", VA = "0x141A718", Slot = "5")]
		public virtual void Play(string identifier)
		{
		}

		[Token(Token = "0x6003694")]
		[Address(RVA = "0x141A734", Offset = "0x141A734", VA = "0x141A734", Slot = "6")]
		public virtual void Play(float intensity, string identifier = "")
		{
		}

		[Token(Token = "0x6003695")]
		[Address(RVA = "0x141A74C", Offset = "0x141A74C", VA = "0x141A74C", Slot = "7")]
		public virtual void Play(float intensity, float duration, string identifier = "")
		{
		}

		[Token(Token = "0x6003696")]
		[Address(RVA = "0x141A760", Offset = "0x141A760", VA = "0x141A760", Slot = "8")]
		public virtual void Play(float intensity, float duration, float vestRotationAngleX, string identifier = "")
		{
		}

		[Token(Token = "0x6003697")]
		[Address(RVA = "0x141A770", Offset = "0x141A770", VA = "0x141A770", Slot = "9")]
		public virtual void Play(Vector3 contactPos, Collider targetCollider, string identifier = "")
		{
		}

		[Token(Token = "0x6003698")]
		[Address(RVA = "0x141A8A0", Offset = "0x141A8A0", VA = "0x141A8A0", Slot = "10")]
		public virtual void Play(Vector3 contactPos, Vector3 targetPos, Vector3 targetForward, float targetHeight, string identifier = "")
		{
		}

		[Token(Token = "0x6003699")]
		[Address(RVA = "0x141A9B4", Offset = "0x141A9B4", VA = "0x141A9B4", Slot = "11")]
		public virtual void Play(float intensity, float duration, Vector3 contactPos, Vector3 targetPos, Vector3 targetForward, float targetHeight, string identifier = "")
		{
		}

		[Token(Token = "0x600369A")]
		[Address(RVA = "0x141AAC0", Offset = "0x141AAC0", VA = "0x141AAC0", Slot = "12")]
		public virtual void Play(float intensity, float duration, float vestRotationAngleX, float vestRotationOffsetY, string identifier = "")
		{
		}

		[Token(Token = "0x600369B")]
		[Address(RVA = "0x141AAC4", Offset = "0x141AAC4", VA = "0x141AAC4", Slot = "13")]
		public virtual void Stop()
		{
		}

		[Token(Token = "0x600369C")]
		[Address(RVA = "0x141ABAC", Offset = "0x141ABAC", VA = "0x141ABAC", Slot = "14")]
		public virtual void Stop(string identifier)
		{
		}

		[Token(Token = "0x600369D")]
		[Address(RVA = "0x141ACC0", Offset = "0x141ACC0", VA = "0x141ACC0", Slot = "15")]
		public virtual bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x600369E")]
		[Address(RVA = "0x141ADB4", Offset = "0x141ADB4", VA = "0x141ADB4", Slot = "16")]
		public virtual bool IsPlaying(string identifier)
		{
			return default(bool);
		}

		[Token(Token = "0x600369F")]
		[Address(RVA = "0x141AEC8", Offset = "0x141AEC8", VA = "0x141AEC8", Slot = "17")]
		public virtual void ResetValues()
		{
		}

		[Token(Token = "0x60036A0")]
		[Address(RVA = "0x141AECC", Offset = "0x141AECC", VA = "0x141AECC")]
		public string GetAssetID()
		{
			return null;
		}

		[Token(Token = "0x60036A1")]
		[Address(RVA = "0x141AED4", Offset = "0x141AED4", VA = "0x141AED4")]
		public HapticClip()
		{
		}
	}
	[Token(Token = "0x200070B")]
	public class HapticReceiver : MonoBehaviour
	{
		[Token(Token = "0x4002F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool IsActive;

		[Token(Token = "0x4002F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public PositionTag PositionTag;

		[Token(Token = "0x60036A2")]
		[Address(RVA = "0x141BB34", Offset = "0x141BB34", VA = "0x141BB34")]
		private void Awake()
		{
		}

		[Token(Token = "0x60036A3")]
		[Address(RVA = "0x141BCBC", Offset = "0x141BCBC", VA = "0x141BCBC")]
		private void OnTriggerEnter(Collider bullet)
		{
		}

		[Token(Token = "0x60036A4")]
		[Address(RVA = "0x141BE78", Offset = "0x141BE78", VA = "0x141BE78")]
		private void OnCollisionEnter(Collision bullet)
		{
		}

		[Token(Token = "0x60036A5")]
		[Address(RVA = "0x141BD88", Offset = "0x141BD88", VA = "0x141BD88")]
		private void Handle(Vector3 contactPoint, HapticSender tactSender)
		{
		}

		[Token(Token = "0x60036A6")]
		[Address(RVA = "0x141C080", Offset = "0x141C080", VA = "0x141C080")]
		public HapticReceiver()
		{
		}
	}
	[Token(Token = "0x200070C")]
	public class HapticSender : MonoBehaviour
	{
		[Token(Token = "0x4002F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HapticClip[] DefaultClips;

		[Token(Token = "0x4002F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HeadHapticClip[] HeadClips;

		[Token(Token = "0x4002F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public VestHapticClip[] BodyClips;

		[Token(Token = "0x4002F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ArmsHapticClip[] LeftArmClips;

		[Token(Token = "0x4002F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ArmsHapticClip[] RightArmClips;

		[Token(Token = "0x4002F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float yOffsetMultiplier;

		[Token(Token = "0x60036A7")]
		[Address(RVA = "0x141C090", Offset = "0x141C090", VA = "0x141C090")]
		public void Play(PositionTag posTag = PositionTag.Default)
		{
		}

		[Token(Token = "0x60036A8")]
		[Address(RVA = "0x141BF68", Offset = "0x141BF68", VA = "0x141BF68")]
		public void Play(PositionTag posTag, Vector3 contactPos, Collider targetCollider)
		{
		}

		[Token(Token = "0x60036A9")]
		[Address(RVA = "0x141C304", Offset = "0x141C304", VA = "0x141C304")]
		private void Play(PositionTag posTag, Vector3 contactPos, Vector3 targetPos, Vector3 targetForward, float targetHeight)
		{
		}

		[Token(Token = "0x60036AA")]
		[Address(RVA = "0x141C414", Offset = "0x141C414", VA = "0x141C414")]
		public void Play(PositionTag posTag, RaycastHit hit)
		{
		}

		[Token(Token = "0x60036AB")]
		[Address(RVA = "0x141C548", Offset = "0x141C548", VA = "0x141C548")]
		private HapticClip GetClip(PositionTag posTag)
		{
			return null;
		}

		[Token(Token = "0x60036AC")]
		[Address(RVA = "0x141C670", Offset = "0x141C670", VA = "0x141C670")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x60036AD")]
		[Address(RVA = "0x141C09C", Offset = "0x141C09C", VA = "0x141C09C")]
		public void Play(PositionTag posTag, float angleX, float offsetY)
		{
		}

		[Token(Token = "0x60036AE")]
		[Address(RVA = "0x141C678", Offset = "0x141C678", VA = "0x141C678")]
		public HapticSender()
		{
		}
	}
	[Token(Token = "0x200070D")]
	public enum PositionTag
	{
		[Token(Token = "0x4002F3F")]
		Body,
		[Token(Token = "0x4002F40")]
		Head,
		[Token(Token = "0x4002F41")]
		LeftArm,
		[Token(Token = "0x4002F42")]
		RightArm,
		[Token(Token = "0x4002F43")]
		Default
	}
	[Token(Token = "0x200070E")]
	public class HapticSource : MonoBehaviour
	{
		[Token(Token = "0x200070F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91A2A8", Offset = "0x91A2A8")]
		private sealed class <PlayCoroutine>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002F4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002F4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delaySecond;

			[Token(Token = "0x4002F4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public HapticSource <>4__this;

			[Token(Token = "0x1700075E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60036BD")]
				[Address(RVA = "0xE5DD00", Offset = "0xE5DD00", VA = "0xE5DD00", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700075F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60036BF")]
				[Address(RVA = "0xE5DD48", Offset = "0xE5DD48", VA = "0xE5DD48", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60036BA")]
			[Address(RVA = "0xE5DC04", Offset = "0xE5DC04", VA = "0xE5DC04")]
			[DebuggerHidden]
			public <PlayCoroutine>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x60036BB")]
			[Address(RVA = "0xE5DC30", Offset = "0xE5DC30", VA = "0xE5DC30", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60036BC")]
			[Address(RVA = "0xE5DC34", Offset = "0xE5DC34", VA = "0xE5DC34", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60036BE")]
			[Address(RVA = "0xE5DD08", Offset = "0xE5DD08", VA = "0xE5DD08", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000710")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x91A2B8", Offset = "0x91A2B8")]
		private sealed class <PlayLoopCoroutine>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002F50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002F51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HapticSource <>4__this;

			[Token(Token = "0x4002F52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private WaitForSeconds <duration>5__2;

			[Token(Token = "0x17000760")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60036C3")]
				[Address(RVA = "0xE5DF50", Offset = "0xE5DF50", VA = "0xE5DF50", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000761")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60036C5")]
				[Address(RVA = "0xE5DF98", Offset = "0xE5DF98", VA = "0xE5DF98", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60036C0")]
			[Address(RVA = "0xE5DD50", Offset = "0xE5DD50", VA = "0xE5DD50")]
			[DebuggerHidden]
			public <PlayLoopCoroutine>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x60036C1")]
			[Address(RVA = "0xE5DD7C", Offset = "0xE5DD7C", VA = "0xE5DD7C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60036C2")]
			[Address(RVA = "0xE5DD80", Offset = "0xE5DD80", VA = "0xE5DD80", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60036C4")]
			[Address(RVA = "0xE5DF58", Offset = "0xE5DF58", VA = "0xE5DF58", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HapticClip clip;

		[Token(Token = "0x4002F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool playOnAwake;

		[Token(Token = "0x4002F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool loop;

		[Token(Token = "0x4002F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float loopDelaySeconds;

		[Token(Token = "0x4002F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Coroutine currentCoroutine;

		[Token(Token = "0x4002F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Coroutine loopCoroutine;

		[Token(Token = "0x4002F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool isLooping;

		[Token(Token = "0x60036AF")]
		[Address(RVA = "0x141C688", Offset = "0x141C688", VA = "0x141C688")]
		private void Awake()
		{
		}

		[Token(Token = "0x60036B0")]
		[Address(RVA = "0x141CB7C", Offset = "0x141CB7C", VA = "0x141CB7C")]
		public void Play(float intensity = 1f)
		{
		}

		[Token(Token = "0x60036B1")]
		[Address(RVA = "0x141C9D4", Offset = "0x141C9D4", VA = "0x141C9D4")]
		public void PlayLoop()
		{
		}

		[Token(Token = "0x60036B2")]
		[Address(RVA = "0x141CC58", Offset = "0x141CC58", VA = "0x141CC58")]
		public void PlayDelayed(float delaySecond = 0f)
		{
		}

		[Token(Token = "0x60036B3")]
		[Address(RVA = "0x141CE68", Offset = "0x141CE68", VA = "0x141CE68")]
		public void Stop()
		{
		}

		[Token(Token = "0x60036B4")]
		[Address(RVA = "0x141CF34", Offset = "0x141CF34", VA = "0x141CF34")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x60036B5")]
		[Address(RVA = "0x141CDEC", Offset = "0x141CDEC", VA = "0x141CDEC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x932B68", Offset = "0x932B68")]
		private IEnumerator PlayCoroutine(float delaySecond)
		{
			return null;
		}

		[Token(Token = "0x60036B6")]
		[Address(RVA = "0x141CB80", Offset = "0x141CB80", VA = "0x141CB80")]
		private void PlayHapticClip(float intensity)
		{
		}

		[Token(Token = "0x60036B7")]
		[Address(RVA = "0x141CB5C", Offset = "0x141CB5C", VA = "0x141CB5C")]
		private void PlayHapticClip()
		{
		}

		[Token(Token = "0x60036B8")]
		[Address(RVA = "0x141CBEC", Offset = "0x141CBEC", VA = "0x141CBEC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x932BC8", Offset = "0x932BC8")]
		private IEnumerator PlayLoopCoroutine()
		{
			return null;
		}

		[Token(Token = "0x60036B9")]
		[Address(RVA = "0x141CFD0", Offset = "0x141CFD0", VA = "0x141CFD0")]
		public HapticSource()
		{
		}
	}
	[Token(Token = "0x2000711")]
	public class HapticSourceHands : HapticSource
	{
		[Token(Token = "0x4002F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public HapticClip clipLeft;

		[Token(Token = "0x4002F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public HapticClip clipRight;

		[Token(Token = "0x60036C6")]
		[Address(RVA = "0x141CFD8", Offset = "0x141CFD8", VA = "0x141CFD8")]
		public void PlayWithHand(HandType hand, float intensity = 1f)
		{
		}

		[Token(Token = "0x60036C7")]
		[Address(RVA = "0x141CFF4", Offset = "0x141CFF4", VA = "0x141CFF4")]
		public HapticSourceHands()
		{
		}
	}
	[Token(Token = "0x2000712")]
	public class HeadHapticClip : FileHapticClip
	{
		[Token(Token = "0x60036C8")]
		[Address(RVA = "0x141DF30", Offset = "0x141DF30", VA = "0x141DF30")]
		public HeadHapticClip()
		{
		}
	}
	[Token(Token = "0x2000713")]
	public interface IHaptic
	{
		[Token(Token = "0x60036C9")]
		bool IsConnect(PositionType type);

		[Token(Token = "0x60036CA")]
		bool IsConnect(HapticDeviceType type, bool isLeft = true);

		[Token(Token = "0x60036CB")]
		bool IsPlaying(string key);

		[Token(Token = "0x60036CC")]
		bool IsFeedbackRegistered(string key);

		[Token(Token = "0x60036CD")]
		bool IsPlaying();

		[Token(Token = "0x60036CE")]
		void RegisterTactFileStr(string key, string tactFileStr);

		[Token(Token = "0x60036CF")]
		void RegisterTactFileStrReflected(string key, string tactFileStr);

		[Token(Token = "0x60036D0")]
		void Submit(string key, PositionType position, List<DotPoint> points, int durationMillis);

		[Token(Token = "0x60036D1")]
		void Submit(string key, PositionType position, List<PathPoint> points, int durationMillis);

		[Token(Token = "0x60036D2")]
		void SubmitRegistered(string key, string altKey, ScaleOption option);

		[Token(Token = "0x60036D3")]
		void SubmitRegistered(string key, string altKey, RotationOption rOption, ScaleOption sOption);

		[Token(Token = "0x60036D4")]
		void SubmitRegistered(string key);

		[Token(Token = "0x60036D5")]
		void SubmitRegistered(string key, int startTimeMillis);

		[Token(Token = "0x60036D6")]
		void TurnOff(string key);

		[Token(Token = "0x60036D7")]
		void TurnOff();

		[Token(Token = "0x60036D8")]
		void Dispose();

		[Token(Token = "0x60036D9")]
		int[] GetCurrentFeedback(PositionType pos);
	}
	[Token(Token = "0x2000714")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x91A2C8", Offset = "0x91A2C8")]
	public class SimpleHapticClip : HapticClip
	{
		[Token(Token = "0x4002F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Point[] DefaultPoints;

		[Token(Token = "0x4002F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HapticClipPositionType Position;

		[Token(Token = "0x4002F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private SimpleHapticType Mode;

		[Token(Token = "0x4002F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private int[] DotPoints;

		[Token(Token = "0x4002F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Point[] Points;

		[Token(Token = "0x4002F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x923530", Offset = "0x923530")]
		public int TimeMillis;

		[Token(Token = "0x60036DA")]
		[Address(RVA = "0x10AE450", Offset = "0x10AE450", VA = "0x10AE450", Slot = "12")]
		public override void Play(float intensity, float duration, float vestRotationAngleX, float vestRotationOffsetY, string identifier = "")
		{
		}

		[Token(Token = "0x60036DB")]
		[Address(RVA = "0x10AE974", Offset = "0x10AE974", VA = "0x10AE974", Slot = "17")]
		public override void ResetValues()
		{
		}

		[Token(Token = "0x60036DC")]
		[Address(RVA = "0x10AE704", Offset = "0x10AE704", VA = "0x10AE704")]
		private static List<DotPoint> Convert(int[] points)
		{
			return null;
		}

		[Token(Token = "0x60036DD")]
		[Address(RVA = "0x10AE834", Offset = "0x10AE834", VA = "0x10AE834")]
		private static List<PathPoint> Convert(Point[] points)
		{
			return null;
		}

		[Token(Token = "0x60036DE")]
		[Address(RVA = "0x10AEA10", Offset = "0x10AEA10", VA = "0x10AEA10")]
		public SimpleHapticClip()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000715")]
	public class Point
	{
		[Token(Token = "0x4002F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x92354C", Offset = "0x92354C")]
		public float X;

		[Token(Token = "0x4002F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x923564", Offset = "0x923564")]
		public float Y;

		[Token(Token = "0x4002F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x92357C", Offset = "0x92357C")]
		public int Intensity;

		[Token(Token = "0x60036E0")]
		[Address(RVA = "0x117C868", Offset = "0x117C868", VA = "0x117C868")]
		public Point(float x, float y, int intensity)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000716")]
	public enum SimpleHapticType
	{
		[Token(Token = "0x4002F5F")]
		DotMode = 1,
		[Token(Token = "0x4002F60")]
		PathMode
	}
	[Token(Token = "0x2000717")]
	public class VestHapticClip : FileHapticClip
	{
		[Token(Token = "0x4002F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x923598", Offset = "0x923598")]
		[SerializeField]
		protected float TactFileAngleX;

		[Token(Token = "0x4002F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9235DC", Offset = "0x9235DC")]
		protected float TactFileOffsetY;

		[Token(Token = "0x4002F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private RotationOption _rotationOption;

		[Token(Token = "0x4002F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ScaleOption _scaleOption;

		[Token(Token = "0x60036E1")]
		[Address(RVA = "0xE1AF6C", Offset = "0xE1AF6C", VA = "0xE1AF6C", Slot = "4")]
		public override void Play()
		{
		}

		[Token(Token = "0x60036E2")]
		[Address(RVA = "0xE1AFC8", Offset = "0xE1AFC8", VA = "0xE1AFC8", Slot = "5")]
		public override void Play(string identifier)
		{
		}

		[Token(Token = "0x60036E3")]
		[Address(RVA = "0xE1AFDC", Offset = "0xE1AFDC", VA = "0xE1AFDC", Slot = "6")]
		public override void Play(float intensity, string identifier = "")
		{
		}

		[Token(Token = "0x60036E4")]
		[Address(RVA = "0xE1AFF0", Offset = "0xE1AFF0", VA = "0xE1AFF0", Slot = "7")]
		public override void Play(float intensity, float duration, string identifier = "")
		{
		}

		[Token(Token = "0x60036E5")]
		[Address(RVA = "0xE1B000", Offset = "0xE1B000", VA = "0xE1B000", Slot = "8")]
		public override void Play(float intensity, float duration, float vestRotationAngleX, string identifier = "")
		{
		}

		[Token(Token = "0x60036E6")]
		[Address(RVA = "0xE1B010", Offset = "0xE1B010", VA = "0xE1B010", Slot = "12")]
		public override void Play(float intensity, float duration, float vestRotationAngleX, float vestRotationOffsetY, string identifier = "")
		{
		}

		[Token(Token = "0x60036E7")]
		[Address(RVA = "0xE1B2D4", Offset = "0xE1B2D4", VA = "0xE1B2D4", Slot = "17")]
		public override void ResetValues()
		{
		}

		[Token(Token = "0x60036E8")]
		[Address(RVA = "0xE1B2FC", Offset = "0xE1B2FC", VA = "0xE1B2FC")]
		public VestHapticClip()
		{
		}
	}
	[Token(Token = "0x2000718")]
	public class VisualFeedback : MonoBehaviour
	{
		[Token(Token = "0x4002F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HapticClipPositionType devicePos;

		[Token(Token = "0x4002F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform motorContainer;

		[Token(Token = "0x4002F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Gradient motorFeedbackGradient;

		[Token(Token = "0x4002F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform[] motors;

		[Token(Token = "0x4002F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float motorScaleOffset;

		[Token(Token = "0x60036E9")]
		[Address(RVA = "0xE1FDA0", Offset = "0xE1FDA0", VA = "0xE1FDA0")]
		private void Start()
		{
		}

		[Token(Token = "0x60036EA")]
		[Address(RVA = "0xE20124", Offset = "0xE20124", VA = "0xE20124")]
		public void UpdateFeedback(HapticFeedback feedback)
		{
		}

		[Token(Token = "0x60036EB")]
		[Address(RVA = "0xE201F0", Offset = "0xE201F0", VA = "0xE201F0")]
		public void UpdateFeedback(int[] feedbackValues)
		{
		}

		[Token(Token = "0x60036EC")]
		[Address(RVA = "0xE203B8", Offset = "0xE203B8", VA = "0xE203B8")]
		public VisualFeedback()
		{
		}
	}
}
