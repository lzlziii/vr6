using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using AOT;
using DG.Tweening;
using Il2CppDummyDll;
using Oculus.Platform;
using Oculus.Platform.Models;
using Pixelplacement;
using Pixelplacement.TweenSystem;
using TMPro;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.InputSystem;
using UnityEngine.Networking;
using UnityEngine.Rendering;
using UnityEngine.Rendering.Universal;
using UnityEngine.SceneManagement;
using UnityEngine.Serialization;
using UnityEngine.UI;
using UnityEngine.Video;
using UnityEngine.XR;
using UnityEngine.XR.Interaction.Toolkit;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
public class CustomScrollBar : Scrollbar
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	[SerializeField]
	private float fixedSize;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0xCE8504", Offset = "0xCE8504", VA = "0xCE8504")]
	public void SetFixedSize()
	{
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0xCE8634", Offset = "0xCE8634", VA = "0xCE8634")]
	public CustomScrollBar()
	{
	}
}
[Token(Token = "0x2000003")]
public class Boss_1 : Enemy
{
	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[SerializeField]
	private GameObject explosion;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public GameObject Horns;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public GameObject heartPos;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public GameObject meteorite;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public GameObject insMeteo;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public GameObject PitPOS;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public Material HornsSteamMat;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private BOSSSTATE state;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private float StartTime;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private bool summon;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	private int meteo;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private int meteoKilled;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	private bool achievement;

	[Token(Token = "0x6000003")]
	[Address(RVA = "0xCE8648", Offset = "0xCE8648", VA = "0xCE8648", Slot = "4")]
	public override void Init(uint _id, List<IconsType> _iconTypeList, int _spawnerId, float _timeStamp, Vector3 _goal)
	{
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0xCE88D0", Offset = "0xCE88D0", VA = "0xCE88D0")]
	public void EndAppear()
	{
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0xCE8950", Offset = "0xCE8950", VA = "0xCE8950")]
	public void EndEntrySummon()
	{
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0xCE89DC", Offset = "0xCE89DC", VA = "0xCE89DC")]
	public void EndReceive()
	{
	}

	[Token(Token = "0x6000007")]
	[Address(RVA = "0xCE8A60", Offset = "0xCE8A60", VA = "0xCE8A60")]
	public void EndTaunt()
	{
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0xCE8AE4", Offset = "0xCE8AE4", VA = "0xCE8AE4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0xCE8E8C", Offset = "0xCE8E8C", VA = "0xCE8E8C", Slot = "25")]
	protected override void Move(float _offset = 0f)
	{
	}

	[Token(Token = "0x600000A")]
	[Address(RVA = "0xCE8EF4", Offset = "0xCE8EF4", VA = "0xCE8EF4", Slot = "13")]
	public override List<IconsType> GetIcons()
	{
		return null;
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0xCE8F64", Offset = "0xCE8F64", VA = "0xCE8F64")]
	private void Summon()
	{
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0xCE8FF8", Offset = "0xCE8FF8", VA = "0xCE8FF8")]
	private void Appear()
	{
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0xCE9078", Offset = "0xCE9078", VA = "0xCE9078")]
	public void Taunt()
	{
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0xCE90F8", Offset = "0xCE90F8", VA = "0xCE90F8")]
	public void ReceiveDamage(IconsType _icon)
	{
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0xCE8AF8", Offset = "0xCE8AF8", VA = "0xCE8AF8")]
	private void Behaviour()
	{
	}

	[Token(Token = "0x6000010")]
	[Address(RVA = "0xCE9320", Offset = "0xCE9320", VA = "0xCE9320")]
	public float GetTimeMeteo()
	{
		return default(float);
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0xCE9340", Offset = "0xCE9340", VA = "0xCE9340", Slot = "26")]
	public override void Die()
	{
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0xCE9418", Offset = "0xCE9418", VA = "0xCE9418")]
	public void Destroy()
	{
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0xCE94B4", Offset = "0xCE94B4", VA = "0xCE94B4")]
	private void InstantiateMeteorite()
	{
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0xCE979C", Offset = "0xCE979C", VA = "0xCE979C", Slot = "21")]
	public override void StateMesh(bool _state)
	{
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0xCE97A0", Offset = "0xCE97A0", VA = "0xCE97A0")]
	private void StartMoveMeteorite()
	{
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0xCE9848", Offset = "0xCE9848", VA = "0xCE9848")]
	private void StartMovePositionMeteorite()
	{
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0xCE98E4", Offset = "0xCE98E4", VA = "0xCE98E4")]
	public void BigScale()
	{
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0xCE919C", Offset = "0xCE919C", VA = "0xCE919C")]
	public void Explosion(IconsType _icon)
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0xCE9988", Offset = "0xCE9988", VA = "0xCE9988")]
	private void ActivateColorExplosion(IconsType _icon, GameObject _go)
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0xCEADB8", Offset = "0xCEADB8", VA = "0xCEADB8")]
	public Boss_1()
	{
	}
}
[Token(Token = "0x2000004")]
public enum BOSSSTATE
{
	[Token(Token = "0x4000010")]
	PAUSE,
	[Token(Token = "0x4000011")]
	APPEAR,
	[Token(Token = "0x4000012")]
	IDLE,
	[Token(Token = "0x4000013")]
	SUMMON,
	[Token(Token = "0x4000014")]
	IDLESUMMON,
	[Token(Token = "0x4000015")]
	TAUNT,
	[Token(Token = "0x4000016")]
	RECEIVE
}
[Token(Token = "0x2000005")]
public class Boss_2 : Enemy
{
	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[SerializeField]
	private GameObject explosion;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[SerializeField]
	private GameObject ceiling;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	[SerializeField]
	private GameObject floorImpact;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[SerializeField]
	private GameObject roar;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public GameObject Horns;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public GameObject heartPos;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public GameObject meteorite;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public GameObject insMeteo;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public GameObject PitPOS;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private BOSSSTATE state;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	private float StartTime;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private int summon;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	private int meteo;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private int meteoKilled;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	private bool achievement;

	[Token(Token = "0x600001B")]
	[Address(RVA = "0xCEADE8", Offset = "0xCEADE8", VA = "0xCEADE8", Slot = "4")]
	public override void Init(uint _id, List<IconsType> _iconTypeList, int _spawnerId, float _timeStamp, Vector3 _goal)
	{
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0xCEB048", Offset = "0xCEB048", VA = "0xCEB048")]
	public void EndAppear()
	{
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0xCEB0C8", Offset = "0xCEB0C8", VA = "0xCEB0C8")]
	public void EndEntrySummon()
	{
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0xCEB154", Offset = "0xCEB154", VA = "0xCEB154")]
	public void EndReceive()
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0xCEB1D4", Offset = "0xCEB1D4", VA = "0xCEB1D4")]
	public void EndTaunt()
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0xCEB254", Offset = "0xCEB254", VA = "0xCEB254")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0xCEB614", Offset = "0xCEB614", VA = "0xCEB614", Slot = "25")]
	protected override void Move(float _offset = 0f)
	{
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0xCEB67C", Offset = "0xCEB67C", VA = "0xCEB67C", Slot = "13")]
	public override List<IconsType> GetIcons()
	{
		return null;
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0xCEB6EC", Offset = "0xCEB6EC", VA = "0xCEB6EC")]
	private void Summon()
	{
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0xCEB7E8", Offset = "0xCEB7E8", VA = "0xCEB7E8")]
	private void Disappear()
	{
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0xCEB85C", Offset = "0xCEB85C", VA = "0xCEB85C")]
	private void Appear()
	{
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0xCEB8DC", Offset = "0xCEB8DC", VA = "0xCEB8DC")]
	public void Taunt()
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0xCEB95C", Offset = "0xCEB95C", VA = "0xCEB95C")]
	public void ReceiveDamage(IconsType _icon)
	{
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0xCEB268", Offset = "0xCEB268", VA = "0xCEB268")]
	private void Behaviour()
	{
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0xCEBBE4", Offset = "0xCEBBE4", VA = "0xCEBBE4")]
	public float GetTimeMeteo()
	{
		return default(float);
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0xCEBC0C", Offset = "0xCEBC0C", VA = "0xCEBC0C", Slot = "26")]
	public override void Die()
	{
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0xCEBCDC", Offset = "0xCEBCDC", VA = "0xCEBCDC")]
	public void Destroy()
	{
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0xCEBD78", Offset = "0xCEBD78", VA = "0xCEBD78")]
	private void InstantiateMeteorite()
	{
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0xCEC06C", Offset = "0xCEC06C", VA = "0xCEC06C", Slot = "21")]
	public override void StateMesh(bool _state)
	{
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0xCEC070", Offset = "0xCEC070", VA = "0xCEC070")]
	public void BossRoar()
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0xCEB028", Offset = "0xCEB028", VA = "0xCEB028")]
	public void BossCeilParticle()
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0xCEC090", Offset = "0xCEC090", VA = "0xCEC090")]
	public void BossFloorParticle()
	{
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0xCEC0B0", Offset = "0xCEC0B0", VA = "0xCEC0B0")]
	private void StartMoveMeteorite()
	{
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0xCEC158", Offset = "0xCEC158", VA = "0xCEC158")]
	private void StartMovePositionMeteorite()
	{
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0xCEC1F4", Offset = "0xCEC1F4", VA = "0xCEC1F4")]
	public void BigScale()
	{
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0xCEBA60", Offset = "0xCEBA60", VA = "0xCEBA60")]
	public void Explosion(IconsType _icon)
	{
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0xCEC298", Offset = "0xCEC298", VA = "0xCEC298")]
	private void ActivateColorExplosion(IconsType _icon, GameObject _go)
	{
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0xCED6C8", Offset = "0xCED6C8", VA = "0xCED6C8")]
	public Boss_2()
	{
	}
}
[Token(Token = "0x2000006")]
public class Boss_3 : Enemy
{
	[Token(Token = "0x2000008")]
	[CompilerGenerated]
	private sealed class <DeadLightAnimationIE>d__34 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Boss_3 <>4__this;

		[Token(Token = "0x400003A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float[] <waitTimeStamps>5__2;

		[Token(Token = "0x400003B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <i>5__3;

		[Token(Token = "0x17000001")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000058")]
			[Address(RVA = "0xCF0878", Offset = "0xCF0878", VA = "0xCF0878", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000002")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600005A")]
			[Address(RVA = "0xCF08C0", Offset = "0xCF08C0", VA = "0xCF08C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000055")]
		[Address(RVA = "0xCEEE08", Offset = "0xCEEE08", VA = "0xCEEE08")]
		[DebuggerHidden]
		public <DeadLightAnimationIE>d__34(int <>1__state)
		{
		}

		[Token(Token = "0x6000056")]
		[Address(RVA = "0xCF056C", Offset = "0xCF056C", VA = "0xCF056C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000057")]
		[Address(RVA = "0xCF0570", Offset = "0xCF0570", VA = "0xCF0570", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000059")]
		[Address(RVA = "0xCF0880", Offset = "0xCF0880", VA = "0xCF0880", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[SerializeField]
	private GameObject explosion;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public GameObject heartPos;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public GameObject meteorite;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public GameObject insMeteo;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public GameObject PitPOS;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private BOSSSTATE state;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	private float StartTime;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private bool summon;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	private int meteo;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private int meteoKilled;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	[SerializeField]
	private GameObject PS_Glow;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	[SerializeField]
	private GameObject[] PS_Light;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[SerializeField]
	private GameObject[] PS_Turbo;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public bool endDeadAnimation;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A1")]
	private bool achievement;

	[Token(Token = "0x6000037")]
	[Address(RVA = "0xCED6E0", Offset = "0xCED6E0", VA = "0xCED6E0", Slot = "4")]
	public override void Init(uint _id, List<IconsType> _iconTypeList, int _spawnerId, float _timeStamp, Vector3 _goal)
	{
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0xCED93C", Offset = "0xCED93C", VA = "0xCED93C")]
	public void EndAppear()
	{
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0xCED9BC", Offset = "0xCED9BC", VA = "0xCED9BC")]
	public void EndEntrySummon()
	{
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0xCEDA48", Offset = "0xCEDA48", VA = "0xCEDA48")]
	public void EndReceive()
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0xCEDACC", Offset = "0xCEDACC", VA = "0xCEDACC")]
	public void EndTaunt()
	{
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0xCEDB50", Offset = "0xCEDB50", VA = "0xCEDB50")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0xCEE12C", Offset = "0xCEE12C", VA = "0xCEE12C", Slot = "25")]
	protected override void Move(float _offset = 0f)
	{
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0xCEE194", Offset = "0xCEE194", VA = "0xCEE194", Slot = "13")]
	public override List<IconsType> GetIcons()
	{
		return null;
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0xCEE204", Offset = "0xCEE204", VA = "0xCEE204")]
	private void Summon()
	{
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0xCEE298", Offset = "0xCEE298", VA = "0xCEE298")]
	private void Appear()
	{
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0xCEE318", Offset = "0xCEE318", VA = "0xCEE318")]
	public void Taunt()
	{
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0xCEE398", Offset = "0xCEE398", VA = "0xCEE398")]
	public void ReceiveDamage(IconsType _icon)
	{
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0xCEDCA0", Offset = "0xCEDCA0", VA = "0xCEDCA0")]
	private void Behaviour()
	{
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0xCEE628", Offset = "0xCEE628", VA = "0xCEE628")]
	public float GetTimeMeteo()
	{
		return default(float);
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0xCEE650", Offset = "0xCEE650", VA = "0xCEE650", Slot = "26")]
	public override void Die()
	{
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0xCEE87C", Offset = "0xCEE87C", VA = "0xCEE87C")]
	public void Destroy()
	{
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0xCEE918", Offset = "0xCEE918", VA = "0xCEE918")]
	private void InstantiateMeteorite()
	{
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0xCEEC1C", Offset = "0xCEEC1C", VA = "0xCEEC1C")]
	public void SetEndDeadAnimation()
	{
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0xCEECF8", Offset = "0xCEECF8", VA = "0xCEECF8")]
	public void DeadLightAnimation()
	{
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0xCEED94", Offset = "0xCEED94", VA = "0xCEED94")]
	[IteratorStateMachine(typeof(<DeadLightAnimationIE>d__34))]
	private IEnumerator DeadLightAnimationIE()
	{
		return null;
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0xCEEE30", Offset = "0xCEEE30", VA = "0xCEEE30", Slot = "21")]
	public override void StateMesh(bool _state)
	{
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0xCEEE34", Offset = "0xCEEE34", VA = "0xCEEE34")]
	private void StartMoveMeteorite()
	{
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0xCEEF10", Offset = "0xCEEF10", VA = "0xCEEF10")]
	private void StartMovePositionMeteorite()
	{
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0xCEEFAC", Offset = "0xCEEFAC", VA = "0xCEEFAC")]
	public void BigScale()
	{
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0xCEE4A4", Offset = "0xCEE4A4", VA = "0xCEE4A4")]
	public void Explosion(IconsType _icon)
	{
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0xCEF050", Offset = "0xCEF050", VA = "0xCEF050")]
	private void ActivateColorExplosion(IconsType _icon, GameObject _go)
	{
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0xCF0480", Offset = "0xCF0480", VA = "0xCF0480")]
	public Boss_3()
	{
	}
}
[Token(Token = "0x2000009")]
public class GordiEnemy : Enemy
{
	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public TextMeshPro textHP;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private DG.Tweening.Tween activeTween;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private DG.Tweening.Tween textTween;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private float divTempo;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private bool llampKilled;

	[Token(Token = "0x600005B")]
	[Address(RVA = "0xCF08C8", Offset = "0xCF08C8", VA = "0xCF08C8", Slot = "4")]
	public override void Init(uint _id, List<IconsType> _iconTypeList, int _spawnerId, float _timeStamp, Vector3 _goal)
	{
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0xCF1654", Offset = "0xCF1654", VA = "0xCF1654", Slot = "5")]
	protected override void InitVariation()
	{
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0xCF18CC", Offset = "0xCF18CC", VA = "0xCF18CC")]
	public void SetTutorialHelper(GameObject _animPrefab)
	{
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0xCF19C0", Offset = "0xCF19C0", VA = "0xCF19C0", Slot = "16")]
	public override bool ReceiveHit(IconsType iconsType, ushort spins_count)
	{
		return default(bool);
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0xCF20F4", Offset = "0xCF20F4", VA = "0xCF20F4", Slot = "17")]
	public override bool ReceiveHit(Hit _hit, ushort spins_count)
	{
		return default(bool);
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0xCF1DB8", Offset = "0xCF1DB8", VA = "0xCF1DB8")]
	private void Recoil()
	{
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0xCF2584", Offset = "0xCF2584", VA = "0xCF2584", Slot = "26")]
	public override void Die()
	{
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0xCF28A8", Offset = "0xCF28A8", VA = "0xCF28A8", Slot = "34")]
	public override void Miss()
	{
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0xCF2B5C", Offset = "0xCF2B5C", VA = "0xCF2B5C", Slot = "31")]
	public override void ChangeTextState(bool _state)
	{
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0xCF2B8C", Offset = "0xCF2B8C", VA = "0xCF2B8C")]
	public GordiEnemy()
	{
	}
}
[Token(Token = "0x200000A")]
[RequireComponent(typeof(ChangeFresnel))]
public class Enemy : MonoBehaviour
{
	[Token(Token = "0x200000B")]
	[CompilerGenerated]
	private sealed class <ReturnToOrigin>d__91 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Enemy <>4__this;

		[Token(Token = "0x17000003")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000092")]
			[Address(RVA = "0xCF57E8", Offset = "0xCF57E8", VA = "0xCF57E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000004")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000094")]
			[Address(RVA = "0xCF5830", Offset = "0xCF5830", VA = "0xCF5830", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600008F")]
		[Address(RVA = "0xCF5638", Offset = "0xCF5638", VA = "0xCF5638")]
		[DebuggerHidden]
		public <ReturnToOrigin>d__91(int <>1__state)
		{
		}

		[Token(Token = "0x6000090")]
		[Address(RVA = "0xCF5660", Offset = "0xCF5660", VA = "0xCF5660", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000091")]
		[Address(RVA = "0xCF5664", Offset = "0xCF5664", VA = "0xCF5664", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000093")]
		[Address(RVA = "0xCF57F0", Offset = "0xCF57F0", VA = "0xCF57F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject deathPS;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject goodDeathPS;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject perfectDeathPS;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject killPS;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject timingPS;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject timingFailPS;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject llampPS;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject failPS;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject x3PS;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject[] variations;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Vector3 goal;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Material[] baseMtList;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Material[] baseLitMtList;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Material[] activatedMtList;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public SkinnedMeshRenderer Mesh;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public IconEnemy[] buttonToDie;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected List<IconsType> iconsTypesList;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected Vector3 direction;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	protected Vector3 spawnPos;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	protected EnemyState enemyState;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	protected Coroutine _coroutine;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	protected float speed;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	protected float velocity;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	protected float timeStamp;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	protected float secPerBeat;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	protected float gravity;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	protected float AngleSpawn;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	protected float OGAnimSpeed;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	protected int spawnerID;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	protected uint id;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	protected uint hp;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	protected uint enemyType;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	protected uint score;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	protected short damage;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x102")]
	protected bool hasToActivate;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x103")]
	protected bool canReceiveHit;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	protected bool hasReachedMissZoneOnce;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x105")]
	protected bool hasReachedUIZoneOnce;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x106")]
	protected bool hasActivatedPSs;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x107")]
	protected bool hasBeenCharged;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	protected byte iconMaxLength;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x109")]
	protected byte iconsDoneCount;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10A")]
	protected bool can_only_recieve_damage_with_spin;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10B")]
	protected bool killed;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[SerializeField]
	protected Sprite[] VariationHelpImage;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	protected GameObject VariationHelp;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[SerializeField]
	protected GameObject ChargePSs;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	protected Vector3 perfectPos;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	protected float diferenciaInicial;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	protected float lastTimeStamp;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	protected float initialTimeStamp;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	protected float deltaMovement;

	[Token(Token = "0x6000066")]
	[Address(RVA = "0xCF2CC8", Offset = "0xCF2CC8", VA = "0xCF2CC8", Slot = "4")]
	public virtual void Init(uint _id, List<IconsType> _iconTypeList, int _spawnerId, float _timeStamp, Vector3 _goal)
	{
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0xCF39A0", Offset = "0xCF39A0", VA = "0xCF39A0", Slot = "5")]
	protected virtual void InitVariation()
	{
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0xCF3AB8", Offset = "0xCF3AB8", VA = "0xCF3AB8")]
	public bool GetHasBeenCharged()
	{
		return default(bool);
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0xCF3AC0", Offset = "0xCF3AC0", VA = "0xCF3AC0", Slot = "6")]
	public virtual void SetCanOnlyRecieveDamageWithSpin(bool _can_only_recieve_damage_with_spin)
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0xCF3CFC", Offset = "0xCF3CFC", VA = "0xCF3CFC")]
	public uint GetHP()
	{
		return default(uint);
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0xCF3D04", Offset = "0xCF3D04", VA = "0xCF3D04")]
	public uint GetID()
	{
		return default(uint);
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0xCF3D0C", Offset = "0xCF3D0C", VA = "0xCF3D0C")]
	public int GetSpawnerID()
	{
		return default(int);
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0xCF3D14", Offset = "0xCF3D14", VA = "0xCF3D14")]
	public void SetSpawnerID(int _id)
	{
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0xCF3D1C", Offset = "0xCF3D1C", VA = "0xCF3D1C", Slot = "7")]
	public virtual uint GetEnenemyType()
	{
		return default(uint);
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0xCF3D24", Offset = "0xCF3D24", VA = "0xCF3D24", Slot = "8")]
	public virtual void ChangeEnemyState(EnemyState _state)
	{
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0xCF3D2C", Offset = "0xCF3D2C", VA = "0xCF3D2C", Slot = "9")]
	public virtual void PauseAnimation()
	{
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0xCF3DC4", Offset = "0xCF3DC4", VA = "0xCF3DC4", Slot = "10")]
	public virtual void PlayAnimation()
	{
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0xCF3E20", Offset = "0xCF3E20", VA = "0xCF3E20", Slot = "11")]
	public virtual void PauseParticles()
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0xCF3EA0", Offset = "0xCF3EA0", VA = "0xCF3EA0", Slot = "12")]
	public virtual void PlayParticles()
	{
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0xCF3F20", Offset = "0xCF3F20", VA = "0xCF3F20")]
	public IconsType GetCurrentIcon()
	{
		return default(IconsType);
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0xCF3FEC", Offset = "0xCF3FEC", VA = "0xCF3FEC", Slot = "13")]
	public virtual List<IconsType> GetIcons()
	{
		return null;
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0xCF3FF4", Offset = "0xCF3FF4", VA = "0xCF3FF4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0xCF4018", Offset = "0xCF4018", VA = "0xCF4018", Slot = "14")]
	public virtual bool CheckReceiveHit(Hit iconsType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0xCF409C", Offset = "0xCF409C", VA = "0xCF409C", Slot = "15")]
	public virtual void ResetButtons()
	{
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0xCF40EC", Offset = "0xCF40EC", VA = "0xCF40EC", Slot = "16")]
	public virtual bool ReceiveHit(IconsType iconsType, ushort spins_count)
	{
		return default(bool);
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0xCF4450", Offset = "0xCF4450", VA = "0xCF4450", Slot = "17")]
	public virtual bool ReceiveHit(Hit _hit, ushort spins_count)
	{
		return default(bool);
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0xCF4854", Offset = "0xCF4854", VA = "0xCF4854", Slot = "18")]
	public virtual bool ReceiveHit(List<Hit> iconsType)
	{
		return default(bool);
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0xCF485C", Offset = "0xCF485C", VA = "0xCF485C", Slot = "19")]
	public virtual bool IsInMissZone()
	{
		return default(bool);
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0xCF4864", Offset = "0xCF4864", VA = "0xCF4864", Slot = "20")]
	public virtual bool IsInIUZone()
	{
		return default(bool);
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0xCF486C", Offset = "0xCF486C", VA = "0xCF486C", Slot = "21")]
	public virtual void StateMesh(bool _state)
	{
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0xCF494C", Offset = "0xCF494C", VA = "0xCF494C", Slot = "22")]
	public virtual void ActivateTarget()
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0xCF4958", Offset = "0xCF4958", VA = "0xCF4958", Slot = "23")]
	public virtual void DesactivateTarget()
	{
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0xCF1648", Offset = "0xCF1648", VA = "0xCF1648")]
	public void StartMove()
	{
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0xCF4960", Offset = "0xCF4960", VA = "0xCF4960", Slot = "24")]
	public virtual void Hit()
	{
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0xCF49C0", Offset = "0xCF49C0", VA = "0xCF49C0", Slot = "25")]
	protected virtual void Move(float _offset = 0f)
	{
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0xCF26D8", Offset = "0xCF26D8", VA = "0xCF26D8", Slot = "26")]
	public virtual void Die()
	{
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0xCF5028", Offset = "0xCF5028", VA = "0xCF5028", Slot = "27")]
	public virtual void ActiveExplosion()
	{
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0xCF50E8", Offset = "0xCF50E8", VA = "0xCF50E8", Slot = "28")]
	public virtual void ActivePerfectExplosion()
	{
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0xCF51A8", Offset = "0xCF51A8", VA = "0xCF51A8", Slot = "29")]
	public virtual void ActiveGoodExplosion()
	{
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0xCF5268", Offset = "0xCF5268", VA = "0xCF5268", Slot = "30")]
	public virtual void ActiveKillExplosion()
	{
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0xCF5364", Offset = "0xCF5364", VA = "0xCF5364", Slot = "31")]
	public virtual void ChangeTextState(bool _state)
	{
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0xCF5368", Offset = "0xCF5368", VA = "0xCF5368", Slot = "32")]
	public virtual bool CheckTrajectoriaNormal()
	{
		return default(bool);
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0xCF53BC", Offset = "0xCF53BC", VA = "0xCF53BC", Slot = "33")]
	public virtual bool CheckTrajectoriaEasy()
	{
		return default(bool);
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0xCF5410", Offset = "0xCF5410", VA = "0xCF5410", Slot = "34")]
	public virtual void Miss()
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0xCF2AE8", Offset = "0xCF2AE8", VA = "0xCF2AE8")]
	[IteratorStateMachine(typeof(<ReturnToOrigin>d__91))]
	protected IEnumerator ReturnToOrigin()
	{
		return null;
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0xCEADD0", Offset = "0xCEADD0", VA = "0xCEADD0")]
	public Enemy()
	{
	}
}
[Token(Token = "0x200000C")]
public enum EnemyState
{
	[Token(Token = "0x4000079")]
	NONE,
	[Token(Token = "0x400007A")]
	MOVE,
	[Token(Token = "0x400007B")]
	ATTACK,
	[Token(Token = "0x400007C")]
	RECOIL
}
[Token(Token = "0x200000D")]
public class MinionLobbyAnimation : MonoBehaviour
{
	[Token(Token = "0x200000E")]
	[CompilerGenerated]
	private sealed class <Animation>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400007F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MinionLobbyAnimation <>4__this;

		[Token(Token = "0x17000005")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600009E")]
			[Address(RVA = "0xCF5BC0", Offset = "0xCF5BC0", VA = "0xCF5BC0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000006")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000A0")]
			[Address(RVA = "0xCF5C08", Offset = "0xCF5C08", VA = "0xCF5C08", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600009B")]
		[Address(RVA = "0xCF5968", Offset = "0xCF5968", VA = "0xCF5968")]
		[DebuggerHidden]
		public <Animation>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x600009C")]
		[Address(RVA = "0xCF5AD0", Offset = "0xCF5AD0", VA = "0xCF5AD0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600009D")]
		[Address(RVA = "0xCF5AD4", Offset = "0xCF5AD4", VA = "0xCF5AD4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600009F")]
		[Address(RVA = "0xCF5BC8", Offset = "0xCF5BC8", VA = "0xCF5BC8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource audioSource;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float initialVolume;

	[Token(Token = "0x6000095")]
	[Address(RVA = "0xCF5838", Offset = "0xCF5838", VA = "0xCF5838")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0xCF5860", Offset = "0xCF5860", VA = "0xCF5860")]
	public void RestartAnimation()
	{
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0xCF58F4", Offset = "0xCF58F4", VA = "0xCF58F4")]
	public void falseAnimator()
	{
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0xCF5880", Offset = "0xCF5880", VA = "0xCF5880")]
	[IteratorStateMachine(typeof(<Animation>d__5))]
	private IEnumerator Animation()
	{
		return null;
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0xCF5990", Offset = "0xCF5990", VA = "0xCF5990")]
	public void PlaySFX()
	{
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0xCF5AC8", Offset = "0xCF5AC8", VA = "0xCF5AC8")]
	public MinionLobbyAnimation()
	{
	}
}
[Token(Token = "0x200000F")]
public class SiameseEnemy : Enemy
{
	[Token(Token = "0x2000010")]
	public delegate void MultiDelegate();

	[Token(Token = "0x2000011")]
	public class SiameseOrder
	{
		[Token(Token = "0x4000091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IconsType type;

		[Token(Token = "0x4000092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int order;

		[Token(Token = "0x60000B3")]
		[Address(RVA = "0xCF9BF8", Offset = "0xCF9BF8", VA = "0xCF9BF8")]
		public SiameseOrder(IconsType _type)
		{
		}

		[Token(Token = "0x60000B4")]
		[Address(RVA = "0xCF9C44", Offset = "0xCF9C44", VA = "0xCF9C44")]
		public static List<IconsType> OrderIconType(List<IconsType> _iconTypeList)
		{
			return null;
		}
	}

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public SkinnedMeshRenderer mesh;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public float left_icon_hit_timestamp;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	private ushort left_spin_count;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public float right_icon_hit_timestamp;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	private ushort right_spin_count;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public MultiDelegate myMultiDelegate;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public bool split;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	private float goalOffset;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public GameObject[] splitSiameses;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	[SerializeField]
	private GameObject splitLine;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	[SerializeField]
	private GameObject PS_SiamesGlow;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private float[] lineVtxLocal_z;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private float[] lineVtxLocal_y;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private float fadeInicialLinea;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	private Vector3 deltaPos;

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0xCF5C10", Offset = "0xCF5C10", VA = "0xCF5C10")]
	private float GetSiamesGoalOffset(List<IconsType> iconList)
	{
		return default(float);
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0xCF5E0C", Offset = "0xCF5E0C", VA = "0xCF5E0C", Slot = "25")]
	protected override void Move(float _offset = 0f)
	{
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0xCF6780", Offset = "0xCF6780", VA = "0xCF6780", Slot = "4")]
	public override void Init(uint _id, List<IconsType> _iconTypeList, int _spawnerId, float _timeStamp, Vector3 _goal)
	{
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0xCF7980", Offset = "0xCF7980", VA = "0xCF7980")]
	private void CheckSplitSiamese()
	{
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0xCF5E50", Offset = "0xCF5E50", VA = "0xCF5E50")]
	private void UpdateLineRenderer()
	{
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0xCF79A8", Offset = "0xCF79A8", VA = "0xCF79A8", Slot = "5")]
	protected override void InitVariation()
	{
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0xCF7C54", Offset = "0xCF7C54", VA = "0xCF7C54", Slot = "16")]
	public override bool ReceiveHit(IconsType iconsType, ushort spins_count)
	{
		return default(bool);
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0xCF83D0", Offset = "0xCF83D0", VA = "0xCF83D0", Slot = "17")]
	public override bool ReceiveHit(Hit iconsType, ushort spins_count)
	{
		return default(bool);
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0xCF8B5C", Offset = "0xCF8B5C", VA = "0xCF8B5C", Slot = "18")]
	public override bool ReceiveHit(List<Hit> _iconsType)
	{
		return default(bool);
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0xCF96E4", Offset = "0xCF96E4", VA = "0xCF96E4", Slot = "6")]
	public override void SetCanOnlyRecieveDamageWithSpin(bool _can_only_recieve_damage_with_spin)
	{
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0xCF9A10", Offset = "0xCF9A10", VA = "0xCF9A10", Slot = "22")]
	public override void ActivateTarget()
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0xCF9A28", Offset = "0xCF9A28", VA = "0xCF9A28", Slot = "23")]
	public override void DesactivateTarget()
	{
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0xCF9A38", Offset = "0xCF9A38", VA = "0xCF9A38", Slot = "26")]
	public override void Die()
	{
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0xCF9A6C", Offset = "0xCF9A6C", VA = "0xCF9A6C")]
	public SiameseEnemy()
	{
	}
}
[Token(Token = "0x2000012")]
public class SiameseSplit : Enemy
{
	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private int splitIdx;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public GameObject PS_SiamesGlow;

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0xCF9F88", Offset = "0xCF9F88", VA = "0xCF9F88")]
	public void InitType(int _iconType, float _timeStamp, int _splitIdx)
	{
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0xCFA2FC", Offset = "0xCFA2FC", VA = "0xCFA2FC", Slot = "25")]
	protected override void Move(float _offset = 0f)
	{
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0xCFA4A8", Offset = "0xCFA4A8", VA = "0xCFA4A8")]
	public void EnableChargePS()
	{
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0xCFA4C8", Offset = "0xCFA4C8", VA = "0xCFA4C8")]
	public SiameseSplit()
	{
	}
}
[Token(Token = "0x2000013")]
public class StartAnimation : MonoBehaviour
{
	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float offset;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool hasAnimationName;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string animationName;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Animator a;

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0xCFA4D0", Offset = "0xCFA4D0", VA = "0xCFA4D0")]
	private void Start()
	{
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0xCFA5A0", Offset = "0xCFA5A0", VA = "0xCFA5A0")]
	private void Update()
	{
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0xCFA5A4", Offset = "0xCFA5A4", VA = "0xCFA5A4")]
	public StartAnimation()
	{
	}
}
[Token(Token = "0x2000014")]
public class OvrAvatarTestDriver : OvrAvatarDriver
{
	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 headPos;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion headRot;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0xCFA5AC", Offset = "0xCFA5AC", VA = "0xCFA5AC")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0xCFA6EC", Offset = "0xCFA6EC", VA = "0xCFA6EC")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0xCFAA1C", Offset = "0xCFAA1C", VA = "0xCFAA1C")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0xCFABB4", Offset = "0xCFABB4", VA = "0xCFABB4", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0xCFAE28", Offset = "0xCFAE28", VA = "0xCFAE28")]
	public OvrAvatarTestDriver()
	{
	}
}
[Token(Token = "0x2000015")]
public class PoseEditHelper : MonoBehaviour
{
	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform poseRoot;

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0xCFAEA8", Offset = "0xCFAEA8", VA = "0xCFAEA8")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0xCFAF24", Offset = "0xCFAF24", VA = "0xCFAF24")]
	private void DrawJoints(Transform joint)
	{
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0xCFB094", Offset = "0xCFB094", VA = "0xCFB094")]
	public PoseEditHelper()
	{
	}
}
[Token(Token = "0x2000016")]
public class GazeTargetSpawner : MonoBehaviour
{
	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject GazeTargetPrefab;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int NumberOfDummyTargets;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int RadiusMultiplier;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool isVisible;

	[Token(Token = "0x17000007")]
	public bool IsVisible
	{
		[Token(Token = "0x60000C4")]
		[Address(RVA = "0xCFB09C", Offset = "0xCFB09C", VA = "0xCFB09C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000C5")]
		[Address(RVA = "0xCFB0A4", Offset = "0xCFB0A4", VA = "0xCFB0A4")]
		set
		{
		}
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0xCFB1C8", Offset = "0xCFB1C8", VA = "0xCFB1C8")]
	private void Start()
	{
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0xCFB3B8", Offset = "0xCFB3B8", VA = "0xCFB3B8")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0xCFB3C0", Offset = "0xCFB3C0", VA = "0xCFB3C0")]
	public GazeTargetSpawner()
	{
	}
}
[Token(Token = "0x2000017")]
public class RemoteLoopbackManager : MonoBehaviour
{
	[Token(Token = "0x2000018")]
	private class PacketLatencyPair
	{
		[Token(Token = "0x40000A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte[] PacketData;

		[Token(Token = "0x40000A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float FakeLatency;

		[Token(Token = "0x60000CF")]
		[Address(RVA = "0xCFC1F0", Offset = "0xCFC1F0", VA = "0xCFC1F0")]
		public PacketLatencyPair()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000019")]
	public class SimulatedLatencySettings
	{
		[Token(Token = "0x40000A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Range(0f, 0.5f)]
		public float FakeLatencyMax;

		[Token(Token = "0x40000A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[Range(0f, 0.5f)]
		public float FakeLatencyMin;

		[Token(Token = "0x40000AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Range(0f, 1f)]
		public float LatencyWeight;

		[Token(Token = "0x40000AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Range(0f, 10f)]
		public int MaxSamples;

		[Token(Token = "0x40000AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal float AverageWindow;

		[Token(Token = "0x40000AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal float LatencySum;

		[Token(Token = "0x40000AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal LinkedList<float> LatencyValues;

		[Token(Token = "0x60000D0")]
		[Address(RVA = "0xCFC1F8", Offset = "0xCFC1F8", VA = "0xCFC1F8")]
		public float NextValue()
		{
			return default(float);
		}

		[Token(Token = "0x60000D1")]
		[Address(RVA = "0xCFC8F0", Offset = "0xCFC8F0", VA = "0xCFC8F0")]
		public SimulatedLatencySettings()
		{
		}
	}

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OvrAvatar LocalAvatar;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar LoopbackAvatar;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimulatedLatencySettings LatencySettings;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int PacketSequence;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LinkedList<PacketLatencyPair> packetQueue;

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0xCFB3D4", Offset = "0xCFB3D4", VA = "0xCFB3D4")]
	private void Start()
	{
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0xCFB52C", Offset = "0xCFB52C", VA = "0xCFB52C")]
	private void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0xCFBB48", Offset = "0xCFBB48", VA = "0xCFBB48")]
	private void Update()
	{
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0xCFBA9C", Offset = "0xCFBA9C", VA = "0xCFBA9C")]
	private void SendPacketData(byte[] data)
	{
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0xCFBEDC", Offset = "0xCFBEDC", VA = "0xCFBEDC")]
	private void ReceivePacketData(byte[] data)
	{
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0xCFC830", Offset = "0xCFC830", VA = "0xCFC830")]
	public RemoteLoopbackManager()
	{
	}
}
[Token(Token = "0x200001A")]
public class P2PManager
{
	[Token(Token = "0x200001B")]
	private enum MessageType : byte
	{
		[Token(Token = "0x40000B0")]
		Update = 1
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0xCFC990", Offset = "0xCFC990", VA = "0xCFC990")]
	public P2PManager()
	{
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0xCFCA5C", Offset = "0xCFCA5C", VA = "0xCFCA5C")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0xCFCC9C", Offset = "0xCFCC9C", VA = "0xCFCC9C")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0xCFCDE4", Offset = "0xCFCDE4", VA = "0xCFCDE4")]
	private void PeerConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0xCFCF34", Offset = "0xCFCF34", VA = "0xCFCF34")]
	private void ConnectionStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0xCFD120", Offset = "0xCFD120", VA = "0xCFD120")]
	public void SendAvatarUpdate(ulong userID, Transform rootTransform, uint sequence, byte[] avatarPacket)
	{
	}

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0xCFD4D8", Offset = "0xCFD4D8", VA = "0xCFD4D8")]
	public void GetRemotePackets()
	{
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0xCFD760", Offset = "0xCFD760", VA = "0xCFD760")]
	public void processAvatarPacket(RemotePlayer remote, ref byte[] packet, ref int offset)
	{
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0xCFD2E4", Offset = "0xCFD2E4", VA = "0xCFD2E4")]
	private void PackByte(byte b, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0xCFD6AC", Offset = "0xCFD6AC", VA = "0xCFD6AC")]
	private byte ReadByte(byte[] buf, ref int offset)
	{
		return default(byte);
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0xCFD3B0", Offset = "0xCFD3B0", VA = "0xCFD3B0")]
	private void PackFloat(float f, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0xCFD984", Offset = "0xCFD984", VA = "0xCFD984")]
	private float ReadFloat(byte[] buf, ref int offset)
	{
		return default(float);
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0xCFD320", Offset = "0xCFD320", VA = "0xCFD320")]
	private void PackULong(ulong u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0xCFD6E4", Offset = "0xCFD6E4", VA = "0xCFD6E4")]
	private ulong ReadULong(byte[] buf, ref int offset)
	{
		return default(ulong);
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0xCFD448", Offset = "0xCFD448", VA = "0xCFD448")]
	private void PackUInt32(uint u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0xCFDA00", Offset = "0xCFDA00", VA = "0xCFDA00")]
	private uint ReadUInt32(byte[] buf, ref int offset)
	{
		return default(uint);
	}
}
[Token(Token = "0x200001C")]
public class RemotePlayer
{
	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong remoteUserID;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool stillInRoom;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public PeerConnectionState p2pConnectionState;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PeerConnectionState voipConnectionState;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar RemoteAvatar;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 receivedRootPosition;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 receivedRootPositionPrior;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Quaternion receivedRootRotation;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Quaternion receivedRootRotationPrior;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public VoipAudioSourceHiLevel voipSource;

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0xCFDA7C", Offset = "0xCFDA7C", VA = "0xCFDA7C")]
	public RemotePlayer()
	{
	}
}
[Token(Token = "0x200001D")]
public class RoomManager
{
	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong roomID;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ulong invitedRoomID;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool amIServer;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool startupDone;

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0xCFDA84", Offset = "0xCFDA84", VA = "0xCFDA84")]
	public RoomManager()
	{
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0xCFDB68", Offset = "0xCFDB68", VA = "0xCFDB68")]
	private void AcceptingInviteCallback(Message<string> msg)
	{
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0xCFDD68", Offset = "0xCFDD68", VA = "0xCFDD68")]
	public bool CheckForInvite()
	{
		return default(bool);
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0xCFDE80", Offset = "0xCFDE80", VA = "0xCFDE80")]
	public void CreateRoom()
	{
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0xCFDF38", Offset = "0xCFDF38", VA = "0xCFDF38")]
	private void CreateAndJoinPrivateRoomCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0xCFE324", Offset = "0xCFE324", VA = "0xCFE324")]
	private void OnLaunchInviteWorkflowComplete(Message msg)
	{
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0xCFDD94", Offset = "0xCFDD94", VA = "0xCFDD94")]
	public void JoinExistingRoom(ulong roomID)
	{
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0xCFE39C", Offset = "0xCFE39C", VA = "0xCFE39C")]
	private void JoinRoomCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0xCFEB2C", Offset = "0xCFEB2C", VA = "0xCFEB2C")]
	private void RoomUpdateCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0xCFEE78", Offset = "0xCFEE78", VA = "0xCFEE78")]
	public void LeaveCurrentRoom()
	{
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0xCFE6DC", Offset = "0xCFE6DC", VA = "0xCFE6DC")]
	private void ProcessRoomData(Message<Room> msg)
	{
	}
}
[Token(Token = "0x200001E")]
public class SocialPlatformManager : MonoBehaviour
{
	[Token(Token = "0x200001F")]
	public enum State
	{
		[Token(Token = "0x40000E5")]
		INITIALIZING,
		[Token(Token = "0x40000E6")]
		CHECKING_LAUNCH_STATE,
		[Token(Token = "0x40000E7")]
		CREATING_A_ROOM,
		[Token(Token = "0x40000E8")]
		WAITING_IN_A_ROOM,
		[Token(Token = "0x40000E9")]
		JOINING_A_ROOM,
		[Token(Token = "0x40000EA")]
		CONNECTED_IN_A_ROOM,
		[Token(Token = "0x40000EB")]
		LEAVING_A_ROOM,
		[Token(Token = "0x40000EC")]
		SHUTDOWN
	}

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3 START_ROTATION_ONE;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly Vector3 START_POSITION_ONE;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 START_ROTATION_TWO;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static readonly Vector3 START_POSITION_TWO;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static readonly Vector3 START_ROTATION_THREE;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private static readonly Vector3 START_POSITION_THREE;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static readonly Vector3 START_ROTATION_FOUR;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private static readonly Vector3 START_POSITION_FOUR;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static readonly Color BLACK;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static readonly Color WHITE;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static readonly Color CYAN;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static readonly Color BLUE;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static readonly Color GREEN;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float voiceCurrent;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private uint packetSequence;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar localAvatarPrefab;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar remoteAvatarPrefab;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject helpPanel;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected MeshRenderer helpMesh;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material riftMaterial;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material gearMaterial;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected OvrAvatar localAvatar;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected GameObject localTrackingSpace;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected GameObject localPlayerHead;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Dictionary<ulong, RemotePlayer> remoteUsers;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject roomSphere;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected MeshRenderer sphereMesh;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject roomFloor;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected MeshRenderer floorMesh;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected State currentState;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected static SocialPlatformManager s_instance;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected RoomManager roomManager;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected P2PManager p2pManager;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected VoipManager voipManager;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected ulong myID;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected string myOculusID;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public static readonly float VOIP_SCALE;

	[Token(Token = "0x17000008")]
	public static State CurrentState
	{
		[Token(Token = "0x60000FA")]
		[Address(RVA = "0xD0138C", Offset = "0xD0138C", VA = "0xD0138C")]
		get
		{
			return default(State);
		}
	}

	[Token(Token = "0x17000009")]
	public static ulong MyID
	{
		[Token(Token = "0x60000FB")]
		[Address(RVA = "0xCFCB24", Offset = "0xCFCB24", VA = "0xCFCB24")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x1700000A")]
	public static string MyOculusID
	{
		[Token(Token = "0x60000FC")]
		[Address(RVA = "0xD013F0", Offset = "0xD013F0", VA = "0xD013F0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0xCFF7AC", Offset = "0xCFF7AC", VA = "0xCFF7AC", Slot = "4")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0xCFFB44", Offset = "0xCFFB44", VA = "0xCFFB44", Slot = "5")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0xD00070", Offset = "0xD00070", VA = "0xD00070")]
	private void InitCallback(Message<PlatformInitialize> msg)
	{
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0xD001F8", Offset = "0xD001F8", VA = "0xD001F8", Slot = "6")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0xD001FC", Offset = "0xD001FC", VA = "0xD001FC")]
	private void IsEntitledCallback(Message msg)
	{
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0xD002F4", Offset = "0xD002F4", VA = "0xD002F4")]
	private void GetLoggedInUserCallback(Message<User> msg)
	{
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0xD00ADC", Offset = "0xD00ADC", VA = "0xD00ADC")]
	private void GetLoggedInUserFriendsAndRoomsCallback(Message<UserAndRoomList> msg)
	{
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0xD00EF4", Offset = "0xD00EF4", VA = "0xD00EF4")]
	public void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0xD01118", Offset = "0xD01118", VA = "0xD01118")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0xD01324", Offset = "0xD01324", VA = "0xD01324")]
	public void AddUser(ulong userID, ref RemotePlayer remoteUser)
	{
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0xCFFEFC", Offset = "0xCFFEFC", VA = "0xCFFEFC")]
	public void LogOutputLine(string line)
	{
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0xCFDCBC", Offset = "0xCFDCBC", VA = "0xCFDCBC")]
	public static void TerminateWithError(Message msg)
	{
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0xCFE024", Offset = "0xCFE024", VA = "0xCFE024")]
	public static void TransitionToState(State newState)
	{
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0xD014F4", Offset = "0xD014F4", VA = "0xD014F4")]
	private static void SetSphereColorForState()
	{
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0xCFE264", Offset = "0xCFE264", VA = "0xCFE264")]
	public static void SetFloorColorForState(bool host)
	{
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0xCFEEE0", Offset = "0xCFEEE0", VA = "0xCFEEE0")]
	public static void MarkAllRemoteUsersAsNotInRoom()
	{
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0xCFF2D8", Offset = "0xCFF2D8", VA = "0xCFF2D8")]
	public static void MarkRemoteUserInRoom(ulong userID)
	{
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0xCFF3B8", Offset = "0xCFF3B8", VA = "0xCFF3B8")]
	public static void ForgetRemoteUsersNotInRoom()
	{
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0xCFCBE8", Offset = "0xCFCBE8", VA = "0xCFCBE8")]
	public static void LogOutput(string line)
	{
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0xCFF064", Offset = "0xCFF064", VA = "0xCFF064")]
	public static bool IsUserInRoom(ulong userID)
	{
		return default(bool);
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0xCFF0EC", Offset = "0xCFF0EC", VA = "0xCFF0EC")]
	public static void AddRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0xD01678", Offset = "0xD01678", VA = "0xD01678")]
	public static void RemoveRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0xD0193C", Offset = "0xD0193C", VA = "0xD0193C")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0xCFF734", Offset = "0xCFF734", VA = "0xCFF734")]
	[MonoPInvokeCallback(typeof(CAPI.FilterCallback))]
	public static void MicFilter(short[] pcmData, UIntPtr pcmDataLength, int frequency, int numChannels)
	{
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0xCFCD0C", Offset = "0xCFCD0C", VA = "0xCFCD0C")]
	public static RemotePlayer GetRemoteUser(ulong userID)
	{
		return null;
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0xD01B30", Offset = "0xD01B30", VA = "0xD01B30")]
	public SocialPlatformManager()
	{
	}
}
[Token(Token = "0x2000020")]
public class VoipManager
{
	[Token(Token = "0x600010C")]
	[Address(RVA = "0xCFFFA4", Offset = "0xCFFFA4", VA = "0xCFFFA4")]
	public VoipManager()
	{
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0xD01874", Offset = "0xD01874", VA = "0xD01874")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0xD012B4", Offset = "0xD012B4", VA = "0xD012B4")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0xD01D00", Offset = "0xD01D00", VA = "0xD01D00")]
	private void VoipConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0xD01E50", Offset = "0xD01E50", VA = "0xD01E50")]
	private void VoipStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}
}
[Token(Token = "0x2000021")]
public class GazeTarget : MonoBehaviour
{
	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarGazeTargetType Type;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ovrAvatarGazeTargets RuntimeTargetList;

	[Token(Token = "0x6000111")]
	[Address(RVA = "0xD0203C", Offset = "0xD0203C", VA = "0xD0203C")]
	static GazeTarget()
	{
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0xD020C0", Offset = "0xD020C0", VA = "0xD020C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0xD02204", Offset = "0xD02204", VA = "0xD02204")]
	private void Update()
	{
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0xD02258", Offset = "0xD02258", VA = "0xD02258")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000115")]
	[Address(RVA = "0xD020F0", Offset = "0xD020F0", VA = "0xD020F0")]
	private void UpdateGazeTarget()
	{
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0xD02308", Offset = "0xD02308", VA = "0xD02308")]
	private ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0xD02320", Offset = "0xD02320", VA = "0xD02320")]
	public GazeTarget()
	{
	}
}
[Serializable]
[Token(Token = "0x2000022")]
public class AvatarLayer
{
	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int layerIndex;

	[Token(Token = "0x6000118")]
	[Address(RVA = "0xD02328", Offset = "0xD02328", VA = "0xD02328")]
	public AvatarLayer()
	{
	}
}
[Serializable]
[Token(Token = "0x2000023")]
public class PacketRecordSettings
{
	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	internal bool RecordingFrames;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float UpdateRate;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	internal float AccumulatedTime;

	[Token(Token = "0x6000119")]
	[Address(RVA = "0xD02330", Offset = "0xD02330", VA = "0xD02330")]
	public PacketRecordSettings()
	{
	}
}
[Token(Token = "0x2000024")]
public class OvrAvatar : MonoBehaviour
{
	[Token(Token = "0x2000025")]
	public class PacketEventArgs : EventArgs
	{
		[Token(Token = "0x400014C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly OvrAvatarPacket Packet;

		[Token(Token = "0x600014E")]
		[Address(RVA = "0xD05C9C", Offset = "0xD05C9C", VA = "0xD05C9C")]
		public PacketEventArgs(OvrAvatarPacket packet)
		{
		}
	}

	[Token(Token = "0x2000026")]
	public enum HandType
	{
		[Token(Token = "0x400014E")]
		Right,
		[Token(Token = "0x400014F")]
		Left,
		[Token(Token = "0x4000150")]
		Max
	}

	[Token(Token = "0x2000027")]
	public enum HandJoint
	{
		[Token(Token = "0x4000152")]
		HandBase,
		[Token(Token = "0x4000153")]
		IndexBase,
		[Token(Token = "0x4000154")]
		IndexTip,
		[Token(Token = "0x4000155")]
		ThumbBase,
		[Token(Token = "0x4000156")]
		ThumbTip,
		[Token(Token = "0x4000157")]
		Max
	}

	[Token(Token = "0x2000028")]
	[CompilerGenerated]
	private sealed class <WaitForMouthAudioSource>d__137 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400015A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatar <>4__this;

		[Token(Token = "0x1700000B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000152")]
			[Address(RVA = "0xD07F2C", Offset = "0xD07F2C", VA = "0xD07F2C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000154")]
			[Address(RVA = "0xD07F74", Offset = "0xD07F74", VA = "0xD07F74", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600014F")]
		[Address(RVA = "0xD079E8", Offset = "0xD079E8", VA = "0xD079E8")]
		[DebuggerHidden]
		public <WaitForMouthAudioSource>d__137(int <>1__state)
		{
		}

		[Token(Token = "0x6000150")]
		[Address(RVA = "0xD07D84", Offset = "0xD07D84", VA = "0xD07D84", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000151")]
		[Address(RVA = "0xD07D88", Offset = "0xD07D88", VA = "0xD07D88", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000153")]
		[Address(RVA = "0xD07F34", Offset = "0xD07F34", VA = "0xD07F34", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Avatar")]
	public IntPtr sdkAvatar;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string oculusUserID;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatarDriver Driver;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Header("Capabilities")]
	public bool EnableBody;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool EnableHands;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool EnableBase;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public bool EnableExpressive;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Header("Network")]
	public bool RecordPackets;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool UseSDKPackets;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PacketRecordSettings PacketSettings;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Header("Visibility")]
	public bool StartWithControllers;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AvatarLayer FirstPersonLayer;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AvatarLayer ThirdPersonLayer;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool ShowFirstPerson;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool ShowThirdPerson;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	internal ovrAvatarCapabilities Capabilities;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Tooltip("LOD mesh complexity and texture resolution. Highest LOD recommended on PC and simple mobile apps. Medium LOD recommended on mobile devices or for background characters on PC. Lowest LOD recommended for background characters on mobile.")]
	[Header("Performance")]
	[SerializeField]
	internal ovrAvatarAssetLevelOfDetail LevelOfDetail;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[Tooltip("Enable to use combined meshes to reduce draw calls. Currently only available on mobile devices. Will be forced to false on PC.")]
	private bool CombineMeshes;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	[Tooltip("Enable to use transparent queue, disable to use geometry queue. Requires restart to take effect.")]
	public bool UseTransparentRenderQueue;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[Header("Shaders")]
	public Shader Monochrome_SurfaceShader;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Shader Monochrome_SurfaceShader_SelfOccluding;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Shader Monochrome_SurfaceShader_PBS;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Shader Skinshaded_SurfaceShader_SingleComponent;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Shader Skinshaded_VertFrag_SingleComponent;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Shader Skinshaded_VertFrag_CombinedMesh;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Shader Skinshaded_Expressive_SurfaceShader_SingleComponent;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Shader Skinshaded_Expressive_VertFrag_SingleComponent;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Shader Skinshaded_Expressive_VertFrag_CombinedMesh;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Shader Loader_VertFrag_CombinedMesh;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Shader EyeLens;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Shader ControllerShader;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[Header("Other")]
	public bool CanOwnMicrophone;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	[Tooltip("Enable laughter detection and animation as part of OVRLipSync.")]
	public bool EnableLaughter;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject MouthAnchor;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform LeftHandCustomPose;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform RightHandCustomPose;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private HashSet<ulong> assetLoadingIds;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool assetsFinishedLoading;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private OvrAvatarMaterialManager materialManager;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool waitingForCombinedMesh;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool doneExpressiveGlobalInit;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private Vector4 clothingAlphaOffset;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private ulong clothingAlphaTexture;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private OVRLipSyncMicInput micInput;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private OVRLipSyncContext lipsyncContext;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private OVRLipSync.Frame currentFrame;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float[] visemes;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private AudioSource audioSource;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private ONSPAudioSource spatializedSource;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private List<float[]> voiceUpdates;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ovrAvatarVisemes RuntimeVisemes;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Transform cachedLeftHandCustomPose;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Transform[] cachedCustomLeftHandJoints;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private ovrAvatarTransform[] cachedLeftHandTransforms;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private Transform cachedRightHandCustomPose;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Transform[] cachedCustomRightHandJoints;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private ovrAvatarTransform[] cachedRightHandTransforms;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private bool showLeftController;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x189")]
	private bool showRightController;

	[Token(Token = "0x400012E")]
	private const bool USE_MOBILE_TEXTURE_FORMAT = true;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 MOUTH_HEAD_OFFSET;

	[Token(Token = "0x4000130")]
	private const string MOUTH_HELPER_NAME = "MouthAnchor";

	[Token(Token = "0x4000131")]
	private const int VISEME_COUNT = 16;

	[Token(Token = "0x4000132")]
	private const float ACTION_UNIT_ONSET_SPEED = 30f;

	[Token(Token = "0x4000133")]
	private const float ACTION_UNIT_FALLOFF_SPEED = 20f;

	[Token(Token = "0x4000134")]
	private const float VISEME_LEVEL_MULTIPLIER = 1.5f;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	internal ulong oculusUserIDInternal;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	internal OvrAvatarBase Base;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	internal OvrAvatarTouchController ControllerLeft;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	internal OvrAvatarTouchController ControllerRight;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	internal OvrAvatarBody Body;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	internal OvrAvatarHand HandLeft;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	internal OvrAvatarHand HandRight;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	internal ovrAvatarLookAndFeelVersion LookAndFeelVersion;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	internal ovrAvatarLookAndFeelVersion FallbackLookAndFeelVersion;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private OvrAvatarPacket CurrentUnityPacket;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public EventHandler<PacketEventArgs> PacketRecorded;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static string[,] HandJoints;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static Vector3 MOUTH_POSITION_OFFSET;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static string VOICE_PROPERTY;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static string MOUTH_POSITION_PROPERTY;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static string MOUTH_DIRECTION_PROPERTY;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static string MOUTH_SCALE_PROPERTY;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static float MOUTH_SCALE_GLOBAL;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private static float MOUTH_MAX_GLOBAL;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static string NECK_JONT;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public float VoiceAmplitude;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	public bool EnableMouthVertexAnimation;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static ovrAvatarLights ovrLights;

	[Token(Token = "0x600011A")]
	[Address(RVA = "0xD02344", Offset = "0xD02344", VA = "0xD02344")]
	static OvrAvatar()
	{
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0xD027D8", Offset = "0xD027D8", VA = "0xD027D8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0xD02870", Offset = "0xD02870", VA = "0xD02870")]
	public void AssetLoadedCallback(OvrAvatarAsset asset)
	{
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0xD028CC", Offset = "0xD028CC", VA = "0xD028CC")]
	public void CombinedMeshLoadedCallback(IntPtr assetPtr)
	{
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0xD029E0", Offset = "0xD029E0", VA = "0xD029E0")]
	private OvrAvatarSkinnedMeshRenderComponent AddSkinnedMeshRenderComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender)
	{
		return null;
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0xD02ABC", Offset = "0xD02ABC", VA = "0xD02ABC")]
	private OvrAvatarSkinnedMeshRenderPBSComponent AddSkinnedMeshRenderPBSComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS)
	{
		return null;
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0xD02B8C", Offset = "0xD02B8C", VA = "0xD02B8C")]
	private OvrAvatarSkinnedMeshPBSV2RenderComponent AddSkinnedMeshRenderPBSV2Component(IntPtr renderPart, GameObject go, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRenderPBSV2, bool isBodyPartZero, bool isControllerModel)
	{
		return null;
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0xD02D5C", Offset = "0xD02D5C", VA = "0xD02D5C")]
	public static IntPtr GetRenderPart(ovrAvatarComponent component, uint renderPartIndex)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0xD02E24", Offset = "0xD02E24", VA = "0xD02E24")]
	private static string GetRenderPartName(ovrAvatarComponent component, uint renderPartIndex)
	{
		return null;
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0xD02E98", Offset = "0xD02E98", VA = "0xD02E98")]
	internal static void ConvertTransform(float[] transform, ref ovrAvatarTransform target)
	{
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0xD02F50", Offset = "0xD02F50", VA = "0xD02F50")]
	internal static void ConvertTransform(ovrAvatarTransform transform, Transform target)
	{
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0xD02FD8", Offset = "0xD02FD8", VA = "0xD02FD8")]
	public static ovrAvatarTransform CreateOvrAvatarTransform(Vector3 position, Quaternion orientation)
	{
		return default(ovrAvatarTransform);
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0xD0307C", Offset = "0xD0307C", VA = "0xD0307C")]
	private static ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0xD03094", Offset = "0xD03094", VA = "0xD03094")]
	private void BuildRenderComponents()
	{
	}

	[Token(Token = "0x6000128")]
	private void AddAvatarComponent<T>(ref T root, ovrAvatarComponent nativeComponent) where T : OvrAvatarComponent
	{
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0xD034A0", Offset = "0xD034A0", VA = "0xD034A0")]
	private void UpdateCustomPoses()
	{
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0xD037CC", Offset = "0xD037CC", VA = "0xD037CC")]
	private static bool UpdatePoseRoot(Transform poseRoot, ref Transform cachedPoseRoot, ref Transform[] cachedPoseJoints, ref ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0xD039A4", Offset = "0xD039A4", VA = "0xD039A4")]
	private static bool UpdateTransforms(Transform[] joints, ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0xD03BE0", Offset = "0xD03BE0", VA = "0xD03BE0")]
	private static void OrderJoints(Transform transform, List<Transform> joints)
	{
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0xD03D14", Offset = "0xD03D14", VA = "0xD03D14")]
	private void AvatarSpecificationCallback(IntPtr avatarSpecification)
	{
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0xD04104", Offset = "0xD04104", VA = "0xD04104")]
	private void Start()
	{
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0xD04424", Offset = "0xD04424", VA = "0xD04424")]
	private void Update()
	{
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0xD04EF4", Offset = "0xD04EF4", VA = "0xD04EF4")]
	public static ovrAvatarHandInputState CreateInputState(ovrAvatarTransform transform, OvrAvatarDriver.ControllerPose pose)
	{
		return default(ovrAvatarHandInputState);
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0xD04F38", Offset = "0xD04F38", VA = "0xD04F38")]
	public void ShowControllers(bool show)
	{
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0xD03FB4", Offset = "0xD03FB4", VA = "0xD03FB4")]
	public void ShowLeftController(bool show)
	{
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0xD0405C", Offset = "0xD0405C", VA = "0xD0405C")]
	public void ShowRightController(bool show)
	{
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0xD04F64", Offset = "0xD04F64", VA = "0xD04F64")]
	public void UpdateVoiceVisualization(float[] voiceSamples)
	{
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0xD04810", Offset = "0xD04810", VA = "0xD04810")]
	private void RecordFrame()
	{
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0xD051EC", Offset = "0xD051EC", VA = "0xD051EC")]
	private void RecordUnityFrame()
	{
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0xD05014", Offset = "0xD05014", VA = "0xD05014")]
	private void RecordSDKFrame()
	{
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0xD05D10", Offset = "0xD05D10", VA = "0xD05D10")]
	private void AddRenderParts(OvrAvatarComponent ovrComponent, ovrAvatarComponent component, Transform parent)
	{
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0xD06194", Offset = "0xD06194", VA = "0xD06194")]
	public void RefreshBodyParts()
	{
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0xD065AC", Offset = "0xD065AC", VA = "0xD065AC")]
	public ovrAvatarBodyComponent? GetBodyComponent()
	{
		return null;
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0xD066E4", Offset = "0xD066E4", VA = "0xD066E4")]
	public Transform GetHandTransform(HandType hand, HandJoint joint)
	{
		return null;
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0xD068B0", Offset = "0xD068B0", VA = "0xD068B0")]
	public void GetPointingDirection(HandType hand, ref Vector3 forward, ref Vector3 up)
	{
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0xD049CC", Offset = "0xD049CC", VA = "0xD049CC")]
	private void UpdateVoiceBehavior()
	{
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0xD06978", Offset = "0xD06978", VA = "0xD06978")]
	private bool IsValidMic()
	{
		return default(bool);
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0xD04820", Offset = "0xD04820", VA = "0xD04820")]
	private void InitPostLoad()
	{
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0xD06A54", Offset = "0xD06A54", VA = "0xD06A54")]
	private static void ExpressiveGlobalInit()
	{
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0xD07084", Offset = "0xD07084", VA = "0xD07084")]
	private static void InitializeLights()
	{
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0xD0750C", Offset = "0xD0750C", VA = "0xD0750C")]
	private static ovrAvatarLight CreateLightDirectional(uint id, Vector3 direction, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0xD07534", Offset = "0xD07534", VA = "0xD07534")]
	private static ovrAvatarLight CreateLightPoint(uint id, Vector3 position, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0xD0755C", Offset = "0xD0755C", VA = "0xD0755C")]
	private static ovrAvatarLight CreateLightSpot(uint id, Vector3 position, Vector3 direction, float spotAngleDeg, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0xD04D9C", Offset = "0xD04D9C", VA = "0xD04D9C")]
	private void UpdateExpressive()
	{
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0xD06B10", Offset = "0xD06B10", VA = "0xD06B10")]
	private void ConfigureHelpers()
	{
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0xD07974", Offset = "0xD07974", VA = "0xD07974")]
	[IteratorStateMachine(typeof(<WaitForMouthAudioSource>d__137))]
	private IEnumerator WaitForMouthAudioSource()
	{
		return null;
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0xD07A10", Offset = "0xD07A10", VA = "0xD07A10")]
	public void DestroyHelperObjects()
	{
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0xD07808", Offset = "0xD07808", VA = "0xD07808")]
	public GameObject CreateHelperObject(Transform parent, Vector3 localPositionOffset, string helperName, string helperTag = "")
	{
		return null;
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0xD01A68", Offset = "0xD01A68", VA = "0xD01A68")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0xD07AB4", Offset = "0xD07AB4", VA = "0xD07AB4")]
	public void UpdateVoiceData(float[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x600014C")]
	[Address(RVA = "0xD07598", Offset = "0xD07598", VA = "0xD07598")]
	private void UpdateFacewave()
	{
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0xD07B7C", Offset = "0xD07B7C", VA = "0xD07B7C")]
	public OvrAvatar()
	{
	}
}
[Token(Token = "0x2000029")]
public class OvrAvatarAsset
{
	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong assetID;

	[Token(Token = "0x6000155")]
	[Address(RVA = "0xD07F7C", Offset = "0xD07F7C", VA = "0xD07F7C")]
	public OvrAvatarAsset()
	{
	}
}
[Token(Token = "0x200002A")]
public class OvrAvatarAssetMesh : OvrAvatarAsset
{
	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mesh mesh;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAvatarSkinnedMeshPose skinnedBindPose;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string[] jointNames;

	[Token(Token = "0x6000156")]
	[Address(RVA = "0xD07F84", Offset = "0xD07F84", VA = "0xD07F84")]
	public OvrAvatarAssetMesh(ulong _assetId, IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0xD09118", Offset = "0xD09118", VA = "0xD09118")]
	private void LoadSubmeshes(IntPtr asset, IntPtr indexBufferPtr, ulong indexCount)
	{
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0xD08D64", Offset = "0xD08D64", VA = "0xD08D64")]
	private void LoadBlendShapes(IntPtr asset, long vertexCount)
	{
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0xD08AE8", Offset = "0xD08AE8", VA = "0xD08AE8")]
	private void SetSkinnedBindPose(IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0xD08BC8", Offset = "0xD08BC8", VA = "0xD08BC8")]
	private void GetVertexAndIndexData(IntPtr asset, ovrAvatarAssetType meshType, out long vertexCount, out IntPtr vertexBuffer, out uint indexCount, out IntPtr indexBuffer)
	{
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0xD09364", Offset = "0xD09364", VA = "0xD09364")]
	public SkinnedMeshRenderer CreateSkinnedMeshRendererOnObject(GameObject target)
	{
		return null;
	}
}
[Token(Token = "0x200002B")]
public class OvrAvatarAssetTexture : OvrAvatarAsset
{
	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D texture;

	[Token(Token = "0x4000160")]
	private const int ASTCHeaderSize = 16;

	[Token(Token = "0x600015C")]
	[Address(RVA = "0xD098F4", Offset = "0xD098F4", VA = "0xD098F4")]
	public OvrAvatarAssetTexture(ulong _assetId, IntPtr asset)
	{
	}
}
[Token(Token = "0x200002C")]
public class OvrAvatarBase : OvrAvatarComponent
{
	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ovrAvatarBaseComponent component;

	[Token(Token = "0x600015D")]
	[Address(RVA = "0xD09B3C", Offset = "0xD09B3C", VA = "0xD09B3C")]
	private void Update()
	{
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0xD09F64", Offset = "0xD09F64", VA = "0xD09F64")]
	public OvrAvatarBase()
	{
	}
}
[Token(Token = "0x200002D")]
public class OvrAvatarBody : OvrAvatarComponent
{
	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ovrAvatarBodyComponent component;

	[Token(Token = "0x600015F")]
	[Address(RVA = "0xD06460", Offset = "0xD06460", VA = "0xD06460")]
	public ovrAvatarComponent? GetNativeAvatarComponent()
	{
		return null;
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0xD0A090", Offset = "0xD0A090", VA = "0xD0A090")]
	private void Update()
	{
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0xD0A1A4", Offset = "0xD0A1A4", VA = "0xD0A1A4")]
	public OvrAvatarBody()
	{
	}
}
[Token(Token = "0x200002E")]
public class OvrAvatarComponent : MonoBehaviour
{
	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string[] LayerKeywords;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly string[] LayerSampleModeParameters;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly string[] LayerBlendModeParameters;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly string[] LayerMaskTypeParameters;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static readonly string[] LayerColorParameters;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static readonly string[] LayerSurfaceParameters;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static readonly string[] LayerSampleParametersParameters;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static readonly string[] LayerMaskParametersParameters;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static readonly string[] LayerMaskAxisParameters;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<Material, ovrAvatarMaterialState> materialStates;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<OvrAvatarRenderComponent> RenderParts;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected OvrAvatar owner;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected ovrAvatarComponent nativeAvatarComponent;

	[Token(Token = "0x6000162")]
	[Address(RVA = "0xD0A1F8", Offset = "0xD0A1F8", VA = "0xD0A1F8")]
	public void SetOvrAvatarOwner(OvrAvatar ovrAvatarOwner)
	{
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0xD09C50", Offset = "0xD09C50", VA = "0xD09C50")]
	public void UpdateAvatar(IntPtr nativeComponent)
	{
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0xD0A200", Offset = "0xD0A200", VA = "0xD0A200")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0xD0A254", Offset = "0xD0A254", VA = "0xD0A254")]
	public void UpdateAvatarMaterial(Material mat, ovrAvatarMaterialState matState)
	{
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0xD0A95C", Offset = "0xD0A95C", VA = "0xD0A95C")]
	public static Texture2D GetLoadedTexture(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0xD09FB8", Offset = "0xD09FB8", VA = "0xD09FB8")]
	public OvrAvatarComponent()
	{
	}
}
[Token(Token = "0x200002F")]
public abstract class OvrAvatarDriver : MonoBehaviour
{
	[Token(Token = "0x2000030")]
	public enum PacketMode
	{
		[Token(Token = "0x4000174")]
		SDK,
		[Token(Token = "0x4000175")]
		Unity
	}

	[Token(Token = "0x2000031")]
	public struct ControllerPose
	{
		[Token(Token = "0x4000176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarButton buttons;

		[Token(Token = "0x4000177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ovrAvatarTouch touches;

		[Token(Token = "0x4000178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 joystickPosition;

		[Token(Token = "0x4000179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float indexTrigger;

		[Token(Token = "0x400017A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float handTrigger;

		[Token(Token = "0x400017B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isActive;

		[Token(Token = "0x600016F")]
		[Address(RVA = "0xD0C674", Offset = "0xD0C674", VA = "0xD0C674")]
		public static ControllerPose Interpolate(ControllerPose a, ControllerPose b, float t)
		{
			return default(ControllerPose);
		}
	}

	[Token(Token = "0x2000032")]
	public struct PoseFrame
	{
		[Token(Token = "0x400017C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 headPosition;

		[Token(Token = "0x400017D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion headRotation;

		[Token(Token = "0x400017E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 handLeftPosition;

		[Token(Token = "0x400017F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Quaternion handLeftRotation;

		[Token(Token = "0x4000180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 handRightPosition;

		[Token(Token = "0x4000181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Quaternion handRightRotation;

		[Token(Token = "0x4000182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float voiceAmplitude;

		[Token(Token = "0x4000183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ControllerPose controllerLeftPose;

		[Token(Token = "0x4000184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public ControllerPose controllerRightPose;

		[Token(Token = "0x6000170")]
		[Address(RVA = "0xD059A4", Offset = "0xD059A4", VA = "0xD059A4")]
		public static PoseFrame Interpolate(PoseFrame a, PoseFrame b, float t)
		{
			return default(PoseFrame);
		}
	}

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PacketMode Mode;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected PoseFrame CurrentPose;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private ovrAvatarControllerType ControllerType;

	[Token(Token = "0x6000169")]
	[Address(RVA = "0xD0C5E0", Offset = "0xD0C5E0", VA = "0xD0C5E0")]
	public PoseFrame GetCurrentPose()
	{
		return default(PoseFrame);
	}

	[Token(Token = "0x600016A")]
	public abstract void UpdateTransforms(IntPtr sdkAvatar);

	[Token(Token = "0x600016B")]
	[Address(RVA = "0xD0C5F0", Offset = "0xD0C5F0", VA = "0xD0C5F0")]
	private void Start()
	{
	}

	[Token(Token = "0x600016C")]
	[Address(RVA = "0xCFABDC", Offset = "0xCFABDC", VA = "0xCFABDC")]
	public void UpdateTransformsFromPose(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0xD0C66C", Offset = "0xD0C66C", VA = "0xD0C66C")]
	public static bool GetIsTrackedRemote()
	{
		return default(bool);
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0xCFAE98", Offset = "0xCFAE98", VA = "0xCFAE98")]
	protected OvrAvatarDriver()
	{
	}
}
[Token(Token = "0x2000033")]
public class OvrAvatarHand : OvrAvatarComponent
{
	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarHandComponent component;

	[Token(Token = "0x6000171")]
	[Address(RVA = "0xD0C6E4", Offset = "0xD0C6E4", VA = "0xD0C6E4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0xD0C824", Offset = "0xD0C824", VA = "0xD0C824")]
	public OvrAvatarHand()
	{
	}
}
[Token(Token = "0x2000034")]
public class OvrAvatarLocalDriver : OvrAvatarDriver
{
	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 centerEyePosition;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion centerEyeRotation;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x6000173")]
	[Address(RVA = "0xD0C880", Offset = "0xD0C880", VA = "0xD0C880")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0xD0C9C0", Offset = "0xD0C9C0", VA = "0xD0C9C0")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0xD0CCF0", Offset = "0xD0CCF0", VA = "0xD0CCF0")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0xD0CF0C", Offset = "0xD0CF0C", VA = "0xD0CF0C", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0xD0CF34", Offset = "0xD0CF34", VA = "0xD0CF34")]
	public OvrAvatarLocalDriver()
	{
	}
}
[Token(Token = "0x2000035")]
public class OvrAvatarMaterialManager : MonoBehaviour
{
	[Token(Token = "0x2000036")]
	public enum TextureType
	{
		[Token(Token = "0x40001AB")]
		DiffuseTextures,
		[Token(Token = "0x40001AC")]
		NormalMaps,
		[Token(Token = "0x40001AD")]
		RoughnessMaps,
		[Token(Token = "0x40001AE")]
		Count
	}

	[Token(Token = "0x2000037")]
	public struct AvatarComponentMaterialProperties
	{
		[Token(Token = "0x40001AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarBodyPartType TypeIndex;

		[Token(Token = "0x40001B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Color Color;

		[Token(Token = "0x40001B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture2D[] Textures;

		[Token(Token = "0x40001B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float DiffuseIntensity;

		[Token(Token = "0x40001B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float RimIntensity;

		[Token(Token = "0x40001B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float ReflectionIntensity;
	}

	[Token(Token = "0x2000038")]
	public struct AvatarTextureArrayProperties
	{
		[Token(Token = "0x40001B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture2D[] Textures;

		[Token(Token = "0x40001B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2DArray TextureArray;
	}

	[Token(Token = "0x2000039")]
	public struct AvatarMaterialPropertyBlock
	{
		[Token(Token = "0x40001B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector4[] Colors;

		[Token(Token = "0x40001B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float[] DiffuseIntensities;

		[Token(Token = "0x40001B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float[] RimIntensities;

		[Token(Token = "0x40001BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] ReflectionIntensities;
	}

	[Serializable]
	[Token(Token = "0x200003A")]
	public class AvatarMaterialConfig
	{
		[Token(Token = "0x40001BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AvatarComponentMaterialProperties[] ComponentMaterialProperties;

		[Token(Token = "0x40001BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AvatarMaterialPropertyBlock MaterialPropertyBlock;

		[Token(Token = "0x6000187")]
		[Address(RVA = "0xD0EEFC", Offset = "0xD0EEFC", VA = "0xD0EEFC")]
		public AvatarMaterialConfig()
		{
		}
	}

	[Token(Token = "0x200003B")]
	[CompilerGenerated]
	private sealed class <RunLoadingAnimation>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatarMaterialManager <>4__this;

		[Token(Token = "0x40001C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action callBack;

		[Token(Token = "0x40001C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <srcBlend>5__2;

		[Token(Token = "0x40001C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <dstBlend>5__3;

		[Token(Token = "0x40001C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string <lightModeTag>5__4;

		[Token(Token = "0x40001C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string <renderTypeTag>5__5;

		[Token(Token = "0x40001C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string <renderQueueTag>5__6;

		[Token(Token = "0x40001C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string <ignoreProjectorTag>5__7;

		[Token(Token = "0x40001C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int <renderQueue>5__8;

		[Token(Token = "0x40001C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool <transparentQueue>5__9;

		[Token(Token = "0x1700000D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600018B")]
			[Address(RVA = "0xD0F9BC", Offset = "0xD0F9BC", VA = "0xD0F9BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600018D")]
			[Address(RVA = "0xD0FA04", Offset = "0xD0FA04", VA = "0xD0FA04", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000188")]
		[Address(RVA = "0xD0ECB8", Offset = "0xD0ECB8", VA = "0xD0ECB8")]
		[DebuggerHidden]
		public <RunLoadingAnimation>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x6000189")]
		[Address(RVA = "0xD0F354", Offset = "0xD0F354", VA = "0xD0F354", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600018A")]
		[Address(RVA = "0xD0F358", Offset = "0xD0F358", VA = "0xD0F358", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600018C")]
		[Address(RVA = "0xD0F9C4", Offset = "0xD0F9C4", VA = "0xD0F9C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer TargetRenderer;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AvatarTextureArrayProperties[] TextureArrays;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly string[] TextureTypeToShaderProperties;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AvatarMaterialConfig LocalAvatarConfig;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<ReflectionProbeBlendInfo> ReflectionProbes;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader CombinedShader;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string AVATAR_SHADER_LOADER;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string AVATAR_SHADER_MAINTEX;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string AVATAR_SHADER_NORMALMAP;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string AVATAR_SHADER_ROUGHNESSMAP;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string AVATAR_SHADER_COLOR;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static string AVATAR_SHADER_DIFFUSEINTENSITY;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static string AVATAR_SHADER_RIMINTENSITY;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static string AVATAR_SHADER_REFLECTIONINTENSITY;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static string AVATAR_SHADER_CUBEMAP;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static string AVATAR_SHADER_ALPHA;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static string AVATAR_SHADER_LOADING_DIMMER;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static string AVATAR_SHADER_IRIS_COLOR;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static string AVATAR_SHADER_LIP_COLOR;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static string AVATAR_SHADER_BROW_COLOR;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static string AVATAR_SHADER_LASH_COLOR;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static string AVATAR_SHADER_SCLERA_COLOR;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static string AVATAR_SHADER_GUM_COLOR;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static string AVATAR_SHADER_TEETH_COLOR;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static string AVATAR_SHADER_LIP_SMOOTHNESS;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public static float[] DiffuseIntensities;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public static float[] RimIntensities;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public static float[] ReflectionIntensities;

	[Token(Token = "0x40001A6")]
	private const float LOADING_ANIMATION_AMPLITUDE = 0.5f;

	[Token(Token = "0x40001A7")]
	private const float LOADING_ANIMATION_PERIOD = 0.35f;

	[Token(Token = "0x40001A8")]
	private const float LOADING_ANIMATION_CURVE_SCALE = 0.25f;

	[Token(Token = "0x40001A9")]
	private const float LOADING_ANIMATION_DIMMER_MIN = 0.3f;

	[Token(Token = "0x6000178")]
	[Address(RVA = "0xD0CFD4", Offset = "0xD0CFD4", VA = "0xD0CFD4")]
	public void CreateTextureArrays()
	{
	}

	[Token(Token = "0x6000179")]
	[Address(RVA = "0xD0D1A8", Offset = "0xD0D1A8", VA = "0xD0D1A8")]
	public void SetRenderer(Renderer renderer)
	{
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0xD0D1E4", Offset = "0xD0D1E4", VA = "0xD0D1E4")]
	public void OnCombinedMeshReady()
	{
	}

	[Token(Token = "0x600017B")]
	[Address(RVA = "0xD0D918", Offset = "0xD0D918", VA = "0xD0D918")]
	public void AddTextureIDToTextureManager(ulong assetID, bool isSingleComponent)
	{
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0xD0D980", Offset = "0xD0D980", VA = "0xD0D980")]
	private void DeleteTextureSet()
	{
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0xD0D284", Offset = "0xD0D284", VA = "0xD0D284")]
	public void InitTextureArrays()
	{
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0xD0D9D0", Offset = "0xD0D9D0", VA = "0xD0D9D0")]
	private void ProcessTexturesWithMips(Texture2D[] textures, int texArrayResolution, Texture2DArray texArray)
	{
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0xD0D6D0", Offset = "0xD0D6D0", VA = "0xD0D6D0")]
	private void SetMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0xD0DAAC", Offset = "0xD0DAAC", VA = "0xD0DAAC")]
	private void ApplyMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0xD0DD30", Offset = "0xD0DD30", VA = "0xD0DD30")]
	public static ovrAvatarBodyPartType GetComponentType(string objectName)
	{
		return default(ovrAvatarBodyPartType);
	}

	[Token(Token = "0x6000182")]
	[Address(RVA = "0xD0DE54", Offset = "0xD0DE54", VA = "0xD0DE54")]
	private ulong GetTextureIDForType(ovrAvatarPBSMaterialState materialState, TextureType type)
	{
		return default(ulong);
	}

	[Token(Token = "0x6000183")]
	[Address(RVA = "0xD0DE8C", Offset = "0xD0DE8C", VA = "0xD0DE8C")]
	public void ValidateTextures(ovrAvatarPBSMaterialState[] materialStates)
	{
	}

	[Token(Token = "0x6000184")]
	[Address(RVA = "0xD0D888", Offset = "0xD0D888", VA = "0xD0D888")]
	[IteratorStateMachine(typeof(<RunLoadingAnimation>d__49))]
	private IEnumerator RunLoadingAnimation(Action callBack)
	{
		return null;
	}

	[Token(Token = "0x6000185")]
	[Address(RVA = "0xD0ECE0", Offset = "0xD0ECE0", VA = "0xD0ECE0")]
	public OvrAvatarMaterialManager()
	{
	}
}
[Token(Token = "0x200003C")]
public class OvrAvatarPacket
{
	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr ovrNativePacket;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<float> frameTimes;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<OvrAvatarDriver.PoseFrame> frames;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<byte[]> encodedAudioPackets;

	[Token(Token = "0x1700000F")]
	public float Duration
	{
		[Token(Token = "0x600018E")]
		[Address(RVA = "0xD05734", Offset = "0xD05734", VA = "0xD05734")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000010")]
	public OvrAvatarDriver.PoseFrame FinalFrame
	{
		[Token(Token = "0x600018F")]
		[Address(RVA = "0xD0591C", Offset = "0xD0591C", VA = "0xD0591C")]
		get
		{
			return default(OvrAvatarDriver.PoseFrame);
		}
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0xCFC32C", Offset = "0xCFC32C", VA = "0xCFC32C")]
	public OvrAvatarPacket()
	{
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0xD0549C", Offset = "0xD0549C", VA = "0xD0549C")]
	public OvrAvatarPacket(OvrAvatarDriver.PoseFrame initialPose)
	{
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0xD0FA0C", Offset = "0xD0FA0C", VA = "0xD0FA0C")]
	private OvrAvatarPacket(List<float> frameTimes, List<OvrAvatarDriver.PoseFrame> frames, List<byte[]> audioPackets)
	{
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0xD05798", Offset = "0xD05798", VA = "0xD05798")]
	public void AddFrame(OvrAvatarDriver.PoseFrame frame, float deltaSeconds)
	{
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0xD0FB98", Offset = "0xD0FB98", VA = "0xD0FB98")]
	public OvrAvatarDriver.PoseFrame GetPoseFrame(float seconds)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0xCFC480", Offset = "0xCFC480", VA = "0xCFC480")]
	public static OvrAvatarPacket Read(Stream stream)
	{
		return null;
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0xCFB878", Offset = "0xCFB878", VA = "0xCFB878")]
	public void Write(Stream stream)
	{
	}
}
[Token(Token = "0x200003D")]
internal static class BinaryWriterExtensions
{
	[Token(Token = "0x6000197")]
	[Address(RVA = "0xD0FF10", Offset = "0xD0FF10", VA = "0xD0FF10")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.PoseFrame frame)
	{
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0xD10018", Offset = "0xD10018", VA = "0xD10018")]
	public static void Write(this BinaryWriter writer, Vector3 vec3)
	{
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0xD101A4", Offset = "0xD101A4", VA = "0xD101A4")]
	public static void Write(this BinaryWriter writer, Vector2 vec2)
	{
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0xD1007C", Offset = "0xD1007C", VA = "0xD1007C")]
	public static void Write(this BinaryWriter writer, Quaternion quat)
	{
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0xD10104", Offset = "0xD10104", VA = "0xD10104")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.ControllerPose pose)
	{
	}
}
[Token(Token = "0x200003E")]
internal static class BinaryReaderExtensions
{
	[Token(Token = "0x600019C")]
	[Address(RVA = "0xD0FD74", Offset = "0xD0FD74", VA = "0xD0FD74")]
	public static OvrAvatarDriver.PoseFrame ReadPoseFrame(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0xD103CC", Offset = "0xD103CC", VA = "0xD103CC")]
	public static Vector2 ReadVector2(this BinaryReader reader)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0xD101EC", Offset = "0xD101EC", VA = "0xD101EC")]
	public static Vector3 ReadVector3(this BinaryReader reader)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0xD10258", Offset = "0xD10258", VA = "0xD10258")]
	public static Quaternion ReadQuaternion(this BinaryReader reader)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0xD102E8", Offset = "0xD102E8", VA = "0xD102E8")]
	public static OvrAvatarDriver.ControllerPose ReadControllerPose(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.ControllerPose);
	}
}
[Token(Token = "0x200003F")]
public class OvrAvatarRemoteDriver : OvrAvatarDriver
{
	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Queue<OvrAvatarPacket> packetQueue;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private IntPtr CurrentSDKPacket;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float CurrentPacketTime;

	[Token(Token = "0x40001D0")]
	private const int MinPacketQueue = 1;

	[Token(Token = "0x40001D1")]
	private const int MaxPacketQueue = 4;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int CurrentSequence;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool isStreaming;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private OvrAvatarPacket currentPacket;

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0xDA9FFC", Offset = "0xDA9FFC", VA = "0xDA9FFC")]
	public void QueuePacket(int sequence, OvrAvatarPacket packet)
	{
	}

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0xDAA080", Offset = "0xDAA080", VA = "0xDAA080", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0xDAA09C", Offset = "0xDAA09C", VA = "0xDAA09C")]
	private void UpdateFromSDKPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0xDAA24C", Offset = "0xDAA24C", VA = "0xDAA24C")]
	private void UpdateFromUnityPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0xDAA43C", Offset = "0xDAA43C", VA = "0xDAA43C")]
	public OvrAvatarRemoteDriver()
	{
	}
}
[Token(Token = "0x2000040")]
public class OvrAvatarRenderComponent : MonoBehaviour
{
	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool firstSkinnedUpdate;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SkinnedMeshRenderer mesh;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] bones;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isBodyComponent;

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0xDAA4F0", Offset = "0xDAA4F0", VA = "0xDAA4F0")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0xDAA5CC", Offset = "0xDAA5CC", VA = "0xDAA5CC")]
	protected SkinnedMeshRenderer CreateSkinnedMesh(ulong assetID, ovrAvatarVisibilityFlags visibilityMask, int thirdPersonLayer, int firstPersonLayer)
	{
		return null;
	}

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0xDAAA1C", Offset = "0xDAAA1C", VA = "0xDAAA1C")]
	protected void UpdateSkinnedMesh(OvrAvatar avatar, Transform[] bones, ovrAvatarTransform localTransform, ovrAvatarVisibilityFlags visibilityMask, IntPtr renderPart)
	{
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0xDAAD64", Offset = "0xDAAD64", VA = "0xDAAD64")]
	protected Material CreateAvatarMaterial(string name, Shader shader)
	{
		return null;
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0xDAAE68", Offset = "0xDAAE68", VA = "0xDAAE68")]
	public OvrAvatarRenderComponent()
	{
	}
}
[Token(Token = "0x2000041")]
[Flags]
public enum ovrAvatarCapabilities
{
	[Token(Token = "0x40001DA")]
	Body = 1,
	[Token(Token = "0x40001DB")]
	Hands = 2,
	[Token(Token = "0x40001DC")]
	Base = 4,
	[Token(Token = "0x40001DD")]
	BodyTilt = 0x10,
	[Token(Token = "0x40001DE")]
	Expressive = 0x20,
	[Token(Token = "0x40001DF")]
	All = -1
}
[Token(Token = "0x2000042")]
public enum ovrAvatarMessageType
{
	[Token(Token = "0x40001E1")]
	AvatarSpecification,
	[Token(Token = "0x40001E2")]
	AssetLoaded,
	[Token(Token = "0x40001E3")]
	Count
}
[Token(Token = "0x2000043")]
public struct ovrAvatarMessage_AvatarSpecification
{
	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public IntPtr avatarSpec;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ulong oculusUserID;
}
[Token(Token = "0x2000044")]
public struct ovrAvatarMessage_AssetLoaded
{
	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ulong assetID;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr asset;
}
[Token(Token = "0x2000045")]
public enum ovrAvatarAssetType
{
	[Token(Token = "0x40001E9")]
	Mesh,
	[Token(Token = "0x40001EA")]
	Texture,
	[Token(Token = "0x40001EB")]
	Pose,
	[Token(Token = "0x40001EC")]
	Material,
	[Token(Token = "0x40001ED")]
	CombinedMesh,
	[Token(Token = "0x40001EE")]
	PBSMaterial,
	[Token(Token = "0x40001EF")]
	FailedLoad,
	[Token(Token = "0x40001F0")]
	Count
}
[Token(Token = "0x2000046")]
public struct ovrAvatarMeshVertex
{
	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public byte[] blendIndices;

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float[] blendWeights;
}
[Token(Token = "0x2000047")]
public struct ovrAvatarMeshVertexV2
{
	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float r;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float g;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float b;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float a;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public byte[] blendIndices;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float[] blendWeights;
}
[Token(Token = "0x2000048")]
public struct ovrAvatarBlendVertex
{
	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;
}
[Token(Token = "0x2000049")]
public struct ovrAvatarMeshAssetData
{
	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x200004A")]
public struct ovrAvatarMeshAssetDataV2
{
	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x200004B")]
public enum ovrAvatarTextureFormat
{
	[Token(Token = "0x4000225")]
	RGB24,
	[Token(Token = "0x4000226")]
	DXT1,
	[Token(Token = "0x4000227")]
	DXT5,
	[Token(Token = "0x4000228")]
	ASTC_RGB_6x6,
	[Token(Token = "0x4000229")]
	ASTC_RGB_6x6_MIPMAPS,
	[Token(Token = "0x400022A")]
	Count
}
[Token(Token = "0x200004C")]
public struct ovrAvatarTextureAssetData
{
	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTextureFormat format;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint sizeX;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public uint sizeY;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public uint mipCount;

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong textureDataSize;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr textureData;
}
[Token(Token = "0x200004D")]
public enum ovrAvatarRenderPartType
{
	[Token(Token = "0x4000232")]
	SkinnedMeshRender,
	[Token(Token = "0x4000233")]
	SkinnedMeshRenderPBS,
	[Token(Token = "0x4000234")]
	ProjectorRender,
	[Token(Token = "0x4000235")]
	SkinnedMeshRenderPBS_V2,
	[Token(Token = "0x4000236")]
	Count
}
[Token(Token = "0x200004E")]
public enum ovrAvatarLogLevel
{
	[Token(Token = "0x4000238")]
	Unknown,
	[Token(Token = "0x4000239")]
	Default,
	[Token(Token = "0x400023A")]
	Verbose,
	[Token(Token = "0x400023B")]
	Debug,
	[Token(Token = "0x400023C")]
	Info,
	[Token(Token = "0x400023D")]
	Warn,
	[Token(Token = "0x400023E")]
	Error,
	[Token(Token = "0x400023F")]
	Fatal,
	[Token(Token = "0x4000240")]
	Silent
}
[Token(Token = "0x200004F")]
public struct ovrAvatarTransform
{
	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 position;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Quaternion orientation;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 scale;
}
[Token(Token = "0x2000050")]
[Flags]
public enum ovrAvatarButton
{
	[Token(Token = "0x4000245")]
	One = 1,
	[Token(Token = "0x4000246")]
	Two = 2,
	[Token(Token = "0x4000247")]
	Three = 4,
	[Token(Token = "0x4000248")]
	Joystick = 8
}
[Token(Token = "0x2000051")]
[Flags]
public enum ovrAvatarTouch
{
	[Token(Token = "0x400024A")]
	One = 1,
	[Token(Token = "0x400024B")]
	Two = 2,
	[Token(Token = "0x400024C")]
	Joystick = 4,
	[Token(Token = "0x400024D")]
	ThumbRest = 8,
	[Token(Token = "0x400024E")]
	Index = 0x10,
	[Token(Token = "0x400024F")]
	Pointing = 0x40,
	[Token(Token = "0x4000250")]
	ThumbUp = 0x80
}
[Token(Token = "0x2000052")]
public struct ovrAvatarHandInputState
{
	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarButton buttonMask;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public ovrAvatarTouch touchMask;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float joystickX;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float joystickY;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float indexTrigger;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float handTrigger;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isActive;
}
[Token(Token = "0x2000053")]
public struct ovrAvatarComponent
{
	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint renderPartCount;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr renderParts;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string name;
}
[Token(Token = "0x2000054")]
internal struct ovrAvatarComponent_Offsets
{
	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long transform;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int renderPartCount;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int renderParts;

	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int name;
}
[Token(Token = "0x2000055")]
public struct ovrAvatarBaseComponent
{
	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 basePosition;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000056")]
public struct ovrAvatarBodyComponent
{
	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform leftEyeTransform;

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarTransform rightEyeTransform;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ovrAvatarTransform centerEyeTransform;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000057")]
public struct ovrAvatarBodyComponent_Offsets
{
	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long leftEyeTransform;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long rightEyeTransform;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long centerEyeTransform;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long renderComponent;
}
[Token(Token = "0x2000058")]
public struct ovrAvatarControllerComponent
{
	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000059")]
public struct ovrAvatarHandComponent
{
	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x200005A")]
public enum ovrAvatarMaterialLayerBlendMode
{
	[Token(Token = "0x4000270")]
	Add,
	[Token(Token = "0x4000271")]
	Multiply,
	[Token(Token = "0x4000272")]
	Count
}
[Token(Token = "0x200005B")]
public enum ovrAvatarMaterialLayerSampleMode
{
	[Token(Token = "0x4000274")]
	Color,
	[Token(Token = "0x4000275")]
	Texture,
	[Token(Token = "0x4000276")]
	TextureSingleChannel,
	[Token(Token = "0x4000277")]
	Parallax,
	[Token(Token = "0x4000278")]
	Count
}
[Token(Token = "0x200005C")]
public enum ovrAvatarMaterialMaskType
{
	[Token(Token = "0x400027A")]
	None,
	[Token(Token = "0x400027B")]
	Positional,
	[Token(Token = "0x400027C")]
	ViewReflection,
	[Token(Token = "0x400027D")]
	Fresnel,
	[Token(Token = "0x400027E")]
	Pulse,
	[Token(Token = "0x400027F")]
	Count
}
[Token(Token = "0x200005D")]
public enum ovrAvatarControllerType
{
	[Token(Token = "0x4000281")]
	Touch,
	[Token(Token = "0x4000282")]
	Malibu,
	[Token(Token = "0x4000283")]
	Go,
	[Token(Token = "0x4000284")]
	Quest,
	[Token(Token = "0x4000285")]
	Count
}
[Token(Token = "0x200005E")]
public enum ovrAvatarAssetLevelOfDetail
{
	[Token(Token = "0x4000287")]
	Lowest = 1,
	[Token(Token = "0x4000288")]
	Medium = 3,
	[Token(Token = "0x4000289")]
	Highest = 5
}
[Token(Token = "0x200005F")]
public enum ovrAvatarLookAndFeelVersion
{
	[Token(Token = "0x400028B")]
	Unknown = -1,
	[Token(Token = "0x400028C")]
	One,
	[Token(Token = "0x400028D")]
	Two
}
[Token(Token = "0x2000060")]
public struct ovrAvatarMaterialLayerState
{
	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarMaterialLayerBlendMode blendMode;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarMaterialMaskType maskType;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector4 layerColor;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector4 sampleParameters;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong sampleTexture;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector4 sampleScaleOffset;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector4 maskParameters;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 maskAxis;

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0xDAB240", Offset = "0xDAB240", VA = "0xDAB240")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0xDAB270", Offset = "0xDAB270", VA = "0xDAB270", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0xDAB480", Offset = "0xDAB480", VA = "0xDAB480", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000061")]
public struct ovrAvatarMaterialState
{
	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarMaterialMaskType baseMaskType;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector4 baseMaskParameters;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector4 baseMaskAxis;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong alphaMaskTextureID;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 alphaMaskScaleOffset;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong normalMapTextureID;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 normalMapScaleOffset;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong parallaxMapTextureID;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector4 parallaxMapScaleOffset;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ulong roughnessMapTextureID;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector4 roughnessMapScaleOffset;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public uint layerCount;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public ovrAvatarMaterialLayerState[] layers;

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0xDAB6C4", Offset = "0xDAB6C4", VA = "0xDAB6C4")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0xDAB6F4", Offset = "0xDAB6F4", VA = "0xDAB6F4", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0xDABA84", Offset = "0xDABA84", VA = "0xDABA84", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000062")]
public struct ovrAvatarExpressiveParameters
{
	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 irisColor;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector4 scleraColor;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector4 lashColor;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector4 browColor;

	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 lipColor;

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector4 teethColor;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector4 gumColor;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float browLashIntensity;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float lipSmoothness;

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0xDABE2C", Offset = "0xDABE2C", VA = "0xDABE2C")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0xDABE5C", Offset = "0xDABE5C", VA = "0xDABE5C", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0xDAC0A4", Offset = "0xDAC0A4", VA = "0xDAC0A4", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000063")]
public struct ovrAvatarPBSMaterialState
{
	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong albedoTextureID;

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector4 albedoMultiplier;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ulong metallicnessTextureID;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float glossinessScale;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong normalTextureID;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong heightTextureID;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ulong occlusionTextureID;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong emissionTextureID;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 emissionMultiplier;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong detailMaskTextureID;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ulong detailAlbedoTextureID;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ulong detailNormalTextureID;

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0xDAC378", Offset = "0xDAC378", VA = "0xDAC378")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0xDAC3A8", Offset = "0xDAC3A8", VA = "0xDAC3A8", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0xDAC570", Offset = "0xDAC570", VA = "0xDAC570", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000064")]
public class OvrAvatarAssetMaterial : OvrAvatarAsset
{
	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarMaterialState material;

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0xDAC784", Offset = "0xDAC784", VA = "0xDAC784")]
	public OvrAvatarAssetMaterial(ulong id, IntPtr mat)
	{
	}
}
[Token(Token = "0x2000065")]
public struct ovrAvatarSkinnedMeshPose
{
	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint jointCount;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarTransform[] jointTransform;

	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int[] jointParents;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr[] jointNames;
}
[Token(Token = "0x2000066")]
[Flags]
public enum ovrAvatarVisibilityFlags
{
	[Token(Token = "0x40002C2")]
	FirstPerson = 1,
	[Token(Token = "0x40002C3")]
	ThirdPerson = 2,
	[Token(Token = "0x40002C4")]
	SelfOccluding = 4
}
[Token(Token = "0x2000067")]
public struct ovrAvatarRenderPart_SkinnedMeshRender
{
	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarMaterialState materialState;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x2000068")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS
{
	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong albedoTextureAssetID;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong surfaceTextureAssetID;

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x2000069")]
public struct ovrAvatarRenderPart_ProjectorRender
{
	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint componentIndex;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public uint renderPartIndex;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ovrAvatarMaterialState materialState;
}
[Token(Token = "0x200006A")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2
{
	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarPBSMaterialState materialState;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x200006B")]
public enum ovrAvatarHandGesture
{
	[Token(Token = "0x40002DA")]
	Default,
	[Token(Token = "0x40002DB")]
	GripSphere,
	[Token(Token = "0x40002DC")]
	GripCube,
	[Token(Token = "0x40002DD")]
	Count
}
[Token(Token = "0x200006C")]
public enum ovrAvatarBodyPartType
{
	[Token(Token = "0x40002DF")]
	Body,
	[Token(Token = "0x40002E0")]
	Clothing,
	[Token(Token = "0x40002E1")]
	Eyewear,
	[Token(Token = "0x40002E2")]
	Hair,
	[Token(Token = "0x40002E3")]
	Beard,
	[Token(Token = "0x40002E4")]
	Count
}
[Token(Token = "0x200006D")]
public struct ovrAvatarBlendShapeParams
{
	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint blendShapeParamCount;

	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] blendShapeParams;
}
[Token(Token = "0x200006E")]
internal struct ovrAvatarBlendShapeParams_Offsets
{
	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int blendShapeParamCount;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long blendShapeParams;
}
[Token(Token = "0x200006F")]
public struct ovrAvatarVisemes
{
	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint visemeParamCount;

	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] visemeParams;
}
[Token(Token = "0x2000070")]
internal struct ovrAvatarVisemes_Offsets
{
	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int visemeParamCount;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long visemeParams;
}
[Token(Token = "0x2000071")]
public enum ovrAvatarGazeTargetType
{
	[Token(Token = "0x40002EE")]
	AvatarHead,
	[Token(Token = "0x40002EF")]
	AvatarHand,
	[Token(Token = "0x40002F0")]
	Object,
	[Token(Token = "0x40002F1")]
	ObjectStatic,
	[Token(Token = "0x40002F2")]
	Count
}
[Token(Token = "0x2000072")]
public struct ovrAvatarGazeTarget
{
	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public Vector3 worldPosition;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarGazeTargetType type;
}
[Token(Token = "0x2000073")]
internal struct ovrAvatarGazeTarget_Offsets
{
	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int id;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int worldPosition;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int type;
}
[Token(Token = "0x2000074")]
public struct ovrAvatarGazeTargets
{
	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint targetCount;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarGazeTarget[] targets;
}
[Token(Token = "0x2000075")]
internal struct ovrAvatarGazeTargets_Offsets
{
	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int targetCount;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long targets;
}
[Token(Token = "0x2000076")]
public enum ovrAvatarLightType
{
	[Token(Token = "0x40002FE")]
	Point,
	[Token(Token = "0x40002FF")]
	Direction,
	[Token(Token = "0x4000300")]
	Spot,
	[Token(Token = "0x4000301")]
	Count
}
[Token(Token = "0x2000077")]
public struct ovrAvatarLight
{
	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarLightType type;

	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float intensity;

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 worldDirection;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 worldPosition;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float range;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float spotAngleDeg;
}
[Token(Token = "0x2000078")]
internal struct ovrAvatarLight_Offsets
{
	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long id;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long type;

	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long intensity;

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long worldDirection;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static long worldPosition;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static long range;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static long spotAngleDeg;
}
[Token(Token = "0x2000079")]
public struct ovrAvatarLights
{
	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float ambientIntensity;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint lightCount;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarLight[] lights;
}
[Token(Token = "0x200007A")]
internal struct ovrAvatarLights_Offsets
{
	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long ambientIntensity;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long lightCount;

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long lights;
}
[Token(Token = "0x200007B")]
[Flags]
public enum ovrAvatarDebugContext : uint
{
	[Token(Token = "0x4000317")]
	None = 0u,
	[Token(Token = "0x4000318")]
	GazeTarget = 1u,
	[Token(Token = "0x4000319")]
	Any = uint.MaxValue
}
[Token(Token = "0x200007C")]
public struct ovrAvatarDebugLine
{
	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 startPoint;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 endPoint;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 color;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public IntPtr text;
}
[Token(Token = "0x200007D")]
public struct ovrAvatarDebugTransform
{
	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr text;
}
[Token(Token = "0x200007E")]
public delegate void specificationCallback(IntPtr specification);
[Token(Token = "0x200007F")]
public delegate void assetLoadedCallback(OvrAvatarAsset asset);
[Token(Token = "0x2000080")]
public delegate void combinedMeshLoadedCallback(IntPtr asset);
[Token(Token = "0x2000081")]
public class OvrAvatarSDKManager : MonoBehaviour
{
	[Token(Token = "0x2000082")]
	public struct AvatarSpecRequestParams
	{
		[Token(Token = "0x400032F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong _userId;

		[Token(Token = "0x4000330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public specificationCallback _callback;

		[Token(Token = "0x4000331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool _useCombinedMesh;

		[Token(Token = "0x4000332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public ovrAvatarAssetLevelOfDetail _lod;

		[Token(Token = "0x4000333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool _forceMobileTextureFormat;

		[Token(Token = "0x4000334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ovrAvatarLookAndFeelVersion _lookVersion;

		[Token(Token = "0x4000335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ovrAvatarLookAndFeelVersion _fallbackVersion;

		[Token(Token = "0x4000336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool _enableExpressive;

		[Token(Token = "0x60001DD")]
		[Address(RVA = "0xDAE924", Offset = "0xDAE924", VA = "0xDAE924")]
		public AvatarSpecRequestParams(ulong userId, specificationCallback callback, bool useCombinedMesh, ovrAvatarAssetLevelOfDetail lod, bool forceMobileTextureFormat, ovrAvatarLookAndFeelVersion lookVersion, ovrAvatarLookAndFeelVersion fallbackVersion, bool enableExpressive)
		{
		}
	}

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSDKManager _instance;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool initialized;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<ulong, HashSet<specificationCallback>> specificationCallbacks;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<ulong, HashSet<assetLoadedCallback>> assetLoadedCallbacks;

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<IntPtr, combinedMeshLoadedCallback> combinedMeshLoadedCallbacks;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<ulong, OvrAvatarAsset> assetCache;

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OvrAvatarTextureCopyManager textureCopyManager;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarLogLevel LoggingLevel;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Queue<AvatarSpecRequestParams> avatarSpecificationQueue;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<int> loadingAvatars;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool avatarSpecRequestAvailable;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float lastDispatchedAvatarSpecRequestTime;

	[Token(Token = "0x400032E")]
	private const float AVATAR_SPEC_REQUEST_TIMEOUT = 5f;

	[Token(Token = "0x17000011")]
	public static OvrAvatarSDKManager Instance
	{
		[Token(Token = "0x60001CC")]
		[Address(RVA = "0xDAA7B8", Offset = "0xDAA7B8", VA = "0xDAA7B8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0xDAD5E0", Offset = "0xDAD5E0", VA = "0xDAD5E0")]
	private bool Initialize()
	{
		return default(bool);
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0xDAD930", Offset = "0xDAD930", VA = "0xDAD930")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0xDAD994", Offset = "0xDAD994", VA = "0xDAD994")]
	private void Update()
	{
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0xDAE334", Offset = "0xDAE334", VA = "0xDAE334")]
	public bool IsAvatarSpecWaiting()
	{
		return default(bool);
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0xDAE384", Offset = "0xDAE384", VA = "0xDAE384")]
	public bool IsAvatarLoading()
	{
		return default(bool);
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0xDAE3D4", Offset = "0xDAE3D4", VA = "0xDAE3D4")]
	public void AddLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0xDAE47C", Offset = "0xDAE47C", VA = "0xDAE47C")]
	public void RemoveLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0xDAE4D4", Offset = "0xDAE4D4", VA = "0xDAE4D4")]
	public void RequestAvatarSpecification(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0xDAE158", Offset = "0xDAE158", VA = "0xDAE158")]
	private void DispatchAvatarSpecificationRequest(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0xDAE598", Offset = "0xDAE598", VA = "0xDAE598")]
	public void BeginLoadingAsset(ulong assetId, ovrAvatarAssetLevelOfDetail lod, assetLoadedCallback callback)
	{
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0xDAE6E4", Offset = "0xDAE6E4", VA = "0xDAE6E4")]
	public void RegisterCombinedMeshCallback(IntPtr sdkAvatar, combinedMeshLoadedCallback callback)
	{
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0xDAA9A4", Offset = "0xDAA9A4", VA = "0xDAA9A4")]
	public OvrAvatarAsset GetAsset(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0xDAE7D0", Offset = "0xDAE7D0", VA = "0xDAE7D0")]
	public void DeleteAssetFromCache(ulong assetId)
	{
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0xDAD8F0", Offset = "0xDAD8F0", VA = "0xDAD8F0")]
	public string GetAppId()
	{
		return null;
	}

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0xDAE898", Offset = "0xDAE898", VA = "0xDAE898")]
	public OvrAvatarTextureCopyManager GetTextureCopyManager()
	{
		return null;
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0xDAE90C", Offset = "0xDAE90C", VA = "0xDAE90C")]
	public OvrAvatarSDKManager()
	{
	}
}
[Token(Token = "0x2000083")]
public sealed class OvrAvatarSettings : ScriptableObject
{
	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSettings instance;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string ovrAppID;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string ovrGearAppID;

	[Token(Token = "0x17000012")]
	public static string AppID
	{
		[Token(Token = "0x60001DE")]
		[Address(RVA = "0xDAE860", Offset = "0xDAE860", VA = "0xDAE860")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001DF")]
		[Address(RVA = "0xDAEAD0", Offset = "0xDAEAD0", VA = "0xDAEAD0")]
		set
		{
		}
	}

	[Token(Token = "0x17000013")]
	public static string MobileAppID
	{
		[Token(Token = "0x60001E0")]
		[Address(RVA = "0xDAE87C", Offset = "0xDAE87C", VA = "0xDAE87C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001E1")]
		[Address(RVA = "0xDAEAF4", Offset = "0xDAEAF4", VA = "0xDAEAF4")]
		set
		{
		}
	}

	[Token(Token = "0x17000014")]
	public static OvrAvatarSettings Instance
	{
		[Token(Token = "0x60001E2")]
		[Address(RVA = "0xDAE98C", Offset = "0xDAE98C", VA = "0xDAE98C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001E3")]
		[Address(RVA = "0xDAEB18", Offset = "0xDAEB18", VA = "0xDAEB18")]
		set
		{
		}
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0xDAEB70", Offset = "0xDAEB70", VA = "0xDAEB70")]
	public OvrAvatarSettings()
	{
	}
}
[Token(Token = "0x2000084")]
public class OvrAvatarSkinnedMeshRenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Shader surface;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader surfaceSelfOccluding;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool previouslyActive;

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0xDAEBD8", Offset = "0xDAEBD8", VA = "0xDAEBD8")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender, Shader surface, Shader surfaceSelfOccluding, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0xDAEE9C", Offset = "0xDAEE9C", VA = "0xDAEE9C")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0xDAED54", Offset = "0xDAED54", VA = "0xDAED54")]
	private void UpdateMeshMaterial(ovrAvatarVisibilityFlags visibilityMask, SkinnedMeshRenderer rootMesh)
	{
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0xDAF0AC", Offset = "0xDAF0AC", VA = "0xDAF0AC")]
	public OvrAvatarSkinnedMeshRenderComponent()
	{
	}
}
[Token(Token = "0x2000085")]
public class OvrAvatarSkinnedMeshRenderPBSComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool isMaterialInitilized;

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0xDAF0BC", Offset = "0xDAF0BC", VA = "0xDAF0BC")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS, Shader shader, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0xDAF20C", Offset = "0xDAF20C", VA = "0xDAF20C")]
	internal void UpdateSkinnedMeshRenderPBS(OvrAvatar avatar, IntPtr renderPart, Material mat)
	{
	}

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0xDAF3BC", Offset = "0xDAF3BC", VA = "0xDAF3BC")]
	public OvrAvatarSkinnedMeshRenderPBSComponent()
	{
	}
}
[Token(Token = "0x2000086")]
public class OvrAvatarSkinnedMeshPBSV2RenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OvrAvatarMaterialManager avatarMaterialManager;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool previouslyActive;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool isCombinedMaterial;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private ovrAvatarExpressiveParameters ExpressiveParameters;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool EnableExpressive;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int blendShapeCount;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private ovrAvatarBlendShapeParams blendShapeParams;

	[Token(Token = "0x4000345")]
	private const string MAIN_MATERIAL_NAME = "main_material";

	[Token(Token = "0x4000346")]
	private const string EYE_MATERIAL_NAME = "eye_material";

	[Token(Token = "0x4000347")]
	private const string DEFAULT_MATERIAL_NAME = "_material";

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0xDAF3CC", Offset = "0xDAF3CC", VA = "0xDAF3CC")]
	internal void Initialize(IntPtr renderPart, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRender, OvrAvatarMaterialManager materialManager, int thirdPersonLayer, int firstPersonLayer, bool combinedMesh, ovrAvatarAssetLevelOfDetail lod, bool assignExpressiveParams, OvrAvatar avatar, bool isControllerModel)
	{
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0xDB0398", Offset = "0xDB0398", VA = "0xDB0398")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0xDB05A4", Offset = "0xDB05A4", VA = "0xDB05A4")]
	private void InitializeSingleComponentMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0xDAFB14", Offset = "0xDAFB14", VA = "0xDAFB14")]
	private void InitializeCombinedMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0xDAF810", Offset = "0xDAF810", VA = "0xDAF810")]
	private void SetMaterialTransparent(Material mat)
	{
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0xDAF988", Offset = "0xDAF988", VA = "0xDAF988")]
	private void SetMaterialOpaque(Material mat)
	{
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0xDB0DC8", Offset = "0xDB0DC8", VA = "0xDB0DC8")]
	public OvrAvatarSkinnedMeshPBSV2RenderComponent()
	{
	}
}
[Token(Token = "0x2000087")]
public class OvrAvatarTextureCopyManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000088")]
	public struct FallbackTextureSet
	{
		[Token(Token = "0x4000356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool Initialized;

		[Token(Token = "0x4000357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2D DiffuseRoughness;

		[Token(Token = "0x4000358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Texture2D Normal;
	}

	[Token(Token = "0x2000089")]
	private struct CopyTextureParams
	{
		[Token(Token = "0x4000359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture Src;

		[Token(Token = "0x400035A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture Dst;

		[Token(Token = "0x400035B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Mip;

		[Token(Token = "0x400035C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int SrcSize;

		[Token(Token = "0x400035D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int DstElement;

		[Token(Token = "0x60001FD")]
		[Address(RVA = "0xDB1728", Offset = "0xDB1728", VA = "0xDB1728")]
		public CopyTextureParams(Texture src, Texture dst, int mip, int srcSize, int dstElement)
		{
		}
	}

	[Token(Token = "0x200008A")]
	public struct TextureSet
	{
		[Token(Token = "0x400035E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Dictionary<ulong, bool> TextureIDSingleMeshPair;

		[Token(Token = "0x400035F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool IsProcessed;

		[Token(Token = "0x60001FE")]
		[Address(RVA = "0xDB1978", Offset = "0xDB1978", VA = "0xDB1978")]
		public TextureSet(Dictionary<ulong, bool> textureIDSingleMeshPair, bool isProcessed)
		{
		}
	}

	[Token(Token = "0x200008B")]
	[CompilerGenerated]
	private sealed class <DeleteTextureSetCoroutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextureSet textureSetToDelete;

		[Token(Token = "0x4000363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public OvrAvatarTextureCopyManager <>4__this;

		[Token(Token = "0x4000364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int gameobjectID;

		[Token(Token = "0x17000015")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000202")]
			[Address(RVA = "0xDB2244", Offset = "0xDB2244", VA = "0xDB2244", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000016")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000204")]
			[Address(RVA = "0xDB228C", Offset = "0xDB228C", VA = "0xDB228C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001FF")]
		[Address(RVA = "0xDB1AE0", Offset = "0xDB1AE0", VA = "0xDB1AE0")]
		[DebuggerHidden]
		public <DeleteTextureSetCoroutine>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6000200")]
		[Address(RVA = "0xDB1C6C", Offset = "0xDB1C6C", VA = "0xDB1C6C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000201")]
		[Address(RVA = "0xDB1C70", Offset = "0xDB1C70", VA = "0xDB1C70", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000203")]
		[Address(RVA = "0xDB224C", Offset = "0xDB224C", VA = "0xDB224C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FallbackTextureSet[] FallbackTextureSets;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Queue<CopyTextureParams> texturesToCopy;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, TextureSet> textureSets;

	[Token(Token = "0x400034B")]
	private const int TEXTURES_TO_COPY_QUEUE_CAPACITY = 256;

	[Token(Token = "0x400034C")]
	private const int COPIES_PER_FRAME = 8;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_DIFFUSE_ROUGHNESS;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_NORMAL;

	[Token(Token = "0x400034F")]
	private const string PATH_HIGHEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_2048";

	[Token(Token = "0x4000350")]
	private const string PATH_MEDIUM_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_1024";

	[Token(Token = "0x4000351")]
	private const string PATH_LOWEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_256";

	[Token(Token = "0x4000352")]
	private const string PATH_HIGHEST_NORMAL = "FallbackTextures/fallback_normal_2048";

	[Token(Token = "0x4000353")]
	private const string PATH_MEDIUM_NORMAL = "FallbackTextures/fallback_normal_1024";

	[Token(Token = "0x4000354")]
	private const string PATH_LOWEST_NORMAL = "FallbackTextures/fallback_normal_256";

	[Token(Token = "0x4000355")]
	private const int GPU_TEXTURE_COPY_WAIT_TIME = 10;

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0xDB0DD8", Offset = "0xDB0DD8", VA = "0xDB0DD8")]
	public OvrAvatarTextureCopyManager()
	{
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0xDB133C", Offset = "0xDB133C", VA = "0xDB133C")]
	public void Update()
	{
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0xDB1520", Offset = "0xDB1520", VA = "0xDB1520")]
	public int GetTextureCount()
	{
		return default(int);
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0xDB1568", Offset = "0xDB1568", VA = "0xDB1568")]
	public void CopyTexture(Texture src, Texture dst, int mipLevel, int mipSize, int dstElement, bool useQueue = true)
	{
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0xDB14A0", Offset = "0xDB14A0", VA = "0xDB14A0")]
	private void CopyTexture(CopyTextureParams copyTextureParams)
	{
	}

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0xDB1778", Offset = "0xDB1778", VA = "0xDB1778")]
	public void AddTextureIDToTextureSet(int gameobjectID, ulong textureID, bool isSingleMesh)
	{
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0xDB19A0", Offset = "0xDB19A0", VA = "0xDB19A0")]
	public void DeleteTextureSet(int gameobjectID)
	{
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0xDB1A38", Offset = "0xDB1A38", VA = "0xDB1A38")]
	[IteratorStateMachine(typeof(<DeleteTextureSetCoroutine>d__24))]
	private IEnumerator DeleteTextureSetCoroutine(TextureSet textureSetToDelete, int gameobjectID)
	{
		return null;
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0xDAE558", Offset = "0xDAE558", VA = "0xDAE558")]
	public void CheckFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0xDB1B08", Offset = "0xDB1B08", VA = "0xDB1B08")]
	private void InitFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}
}
[Token(Token = "0x200008C")]
public class OvrAvatarTouchController : OvrAvatarComponent
{
	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarControllerComponent component;

	[Token(Token = "0x6000205")]
	[Address(RVA = "0xDB2294", Offset = "0xDB2294", VA = "0xDB2294")]
	private void Update()
	{
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0xDB23D8", Offset = "0xDB23D8", VA = "0xDB23D8")]
	public OvrAvatarTouchController()
	{
	}
}
[Token(Token = "0x200008D")]
public class DebugUIBuilder : MonoBehaviour
{
	[Token(Token = "0x200008E")]
	public delegate void OnClick();

	[Token(Token = "0x200008F")]
	public delegate void OnToggleValueChange(Toggle t);

	[Token(Token = "0x2000090")]
	public delegate void OnSlider(float f);

	[Token(Token = "0x2000091")]
	public delegate bool ActiveUpdate();

	[Token(Token = "0x4000367")]
	public const int DEBUG_PANE_CENTER = 0;

	[Token(Token = "0x4000368")]
	public const int DEBUG_PANE_RIGHT = 1;

	[Token(Token = "0x4000369")]
	public const int DEBUG_PANE_LEFT = 2;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform buttonPrefab;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform[] additionalButtonPrefab;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform labelPrefab;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RectTransform sliderPrefab;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RectTransform dividerPrefab;

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private RectTransform togglePrefab;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private RectTransform radioPrefab;

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private RectTransform textPrefab;

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject uiHelpersToInstantiate;

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Transform[] targetContentPanels;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool[] reEnable;

	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private List<GameObject> toEnable;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private List<GameObject> toDisable;

	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugUIBuilder instance;

	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float elementSpacing;

	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float marginH;

	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float marginV;

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector2[] insertPositions;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<RectTransform>[] insertedElements;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 menuOffset;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private OVRCameraRig rig;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Dictionary<string, ToggleGroup> radioGroups;

	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private LaserPointer lp;

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private LineRenderer lr;

	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public LaserPointer.LaserBeamBehavior laserBeamBehavior;

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public bool isHorizontal;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5")]
	public bool usePanelCentricRelayout;

	[Token(Token = "0x6000207")]
	[Address(RVA = "0xDB2438", Offset = "0xDB2438", VA = "0xDB2438")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0xDB29A4", Offset = "0xDB29A4", VA = "0xDB29A4")]
	public void Show()
	{
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0xDB2D20", Offset = "0xDB2D20", VA = "0xDB2D20")]
	public void Hide()
	{
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0xDB2E9C", Offset = "0xDB2E9C", VA = "0xDB2E9C")]
	private void StackedRelayout()
	{
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0xDB30B4", Offset = "0xDB30B4", VA = "0xDB30B4")]
	private void PanelCentricRelayout()
	{
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0xDB2D10", Offset = "0xDB2D10", VA = "0xDB2D10")]
	private void Relayout()
	{
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0xDB33A8", Offset = "0xDB33A8", VA = "0xDB33A8")]
	private void AddRect(RectTransform r, int targetCanvas)
	{
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0xDB3724", Offset = "0xDB3724", VA = "0xDB3724")]
	public RectTransform AddButton(string label, [Optional] OnClick handler, int buttonIndex = -1, int targetCanvas = 0, bool highResolutionText = false)
	{
		return null;
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0xDB3AD4", Offset = "0xDB3AD4", VA = "0xDB3AD4")]
	public RectTransform AddLabel(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0xDB3BCC", Offset = "0xDB3BCC", VA = "0xDB3BCC")]
	public RectTransform AddSlider(string label, float min, float max, OnSlider onValueChanged, bool wholeNumbersOnly = false, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0xDB3D9C", Offset = "0xDB3D9C", VA = "0xDB3D9C")]
	public RectTransform AddDivider(int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0xDB3E34", Offset = "0xDB3E34", VA = "0xDB3E34")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0xDB4010", Offset = "0xDB4010", VA = "0xDB4010")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, bool defaultValue, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0xDB420C", Offset = "0xDB420C", VA = "0xDB420C")]
	public RectTransform AddRadio(string label, string group, OnToggleValueChange handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0xDB4504", Offset = "0xDB4504", VA = "0xDB4504")]
	public RectTransform AddTextField(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0xDB45F4", Offset = "0xDB45F4", VA = "0xDB45F4")]
	public void ToggleLaserPointer(bool isOn)
	{
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0xDB4688", Offset = "0xDB4688", VA = "0xDB4688")]
	public DebugUIBuilder()
	{
	}
}
[Token(Token = "0x2000097")]
public class HandedInputSelector : MonoBehaviour
{
	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRCameraRig m_CameraRig;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRInputModule m_InputModule;

	[Token(Token = "0x6000232")]
	[Address(RVA = "0xDB4D08", Offset = "0xDB4D08", VA = "0xDB4D08")]
	private void Start()
	{
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0xDB4DAC", Offset = "0xDB4DAC", VA = "0xDB4DAC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0xDB4E48", Offset = "0xDB4E48", VA = "0xDB4E48")]
	private void SetActiveController(OVRInput.Controller c)
	{
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0xDB4E80", Offset = "0xDB4E80", VA = "0xDB4E80")]
	public HandedInputSelector()
	{
	}
}
[Token(Token = "0x2000098")]
public class LaserPointer : OVRCursor
{
	[Token(Token = "0x2000099")]
	public enum LaserBeamBehavior
	{
		[Token(Token = "0x4000399")]
		On,
		[Token(Token = "0x400039A")]
		Off,
		[Token(Token = "0x400039B")]
		OnWhenHitTarget
	}

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cursorVisual;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxLength;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private LaserBeamBehavior _laserBeamBehavior;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_restoreOnInputAcquired;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 _startPoint;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _forward;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 _endPoint;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _hitTarget;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x17000017")]
	public LaserBeamBehavior laserBeamBehavior
	{
		[Token(Token = "0x6000237")]
		[Address(RVA = "0xDB4E88", Offset = "0xDB4E88", VA = "0xDB4E88")]
		get
		{
			return default(LaserBeamBehavior);
		}
		[Token(Token = "0x6000236")]
		[Address(RVA = "0xDB2964", Offset = "0xDB2964", VA = "0xDB2964")]
		set
		{
		}
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0xDB4E90", Offset = "0xDB4E90", VA = "0xDB4E90")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0xDB4EE8", Offset = "0xDB4EE8", VA = "0xDB4EE8")]
	private void Start()
	{
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0xDB5020", Offset = "0xDB5020", VA = "0xDB5020", Slot = "5")]
	public override void SetCursorStartDest(Vector3 start, Vector3 dest, Vector3 normal)
	{
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0xDB503C", Offset = "0xDB503C", VA = "0xDB503C", Slot = "4")]
	public override void SetCursorRay(Transform t)
	{
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0xDB508C", Offset = "0xDB508C", VA = "0xDB508C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0xDB522C", Offset = "0xDB522C", VA = "0xDB522C")]
	private void UpdateLaserBeam(Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x600023E")]
	[Address(RVA = "0xDB533C", Offset = "0xDB533C", VA = "0xDB533C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0xDB53C0", Offset = "0xDB53C0", VA = "0xDB53C0")]
	public void OnInputFocusLost()
	{
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0xDB5480", Offset = "0xDB5480", VA = "0xDB5480")]
	public void OnInputFocusAcquired()
	{
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0xDB5528", Offset = "0xDB5528", VA = "0xDB5528")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0xDB5614", Offset = "0xDB5614", VA = "0xDB5614")]
	public LaserPointer()
	{
	}
}
[Token(Token = "0x200009A")]
public class CharacterCameraConstraint : MonoBehaviour
{
	[Token(Token = "0x400039C")]
	private const float FADE_RAY_LENGTH = 0.25f;

	[Token(Token = "0x400039D")]
	private const float FADE_OVERLAP_MAXIMUM = 0.1f;

	[Token(Token = "0x400039E")]
	private const float FADE_AMOUNT_MAXIMUM = 1f;

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("This should be a reference to the OVRCameraRig that is usually a child of the PlayerController.")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("Collision layers to be used for the purposes of fading out the screen when the HMD is inside world geometry and adjusting the capsule height.")]
	public LayerMask CollideLayers;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Tooltip("Offset is added to camera's real world height, effectively treating it as though the player was taller/standing higher.")]
	public float HeightOffset;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("Minimum height that the character capsule can shrink to.  To disable, set to capsule's height.")]
	public float MinimumHeight;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Tooltip("Maximum height that the character capsule can grow to.  To disable, set to capsule's height.")]
	public float MaximumHeight;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CapsuleCollider _character;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SimpleCapsuleWithStickMovement _simplePlayerController;

	[Token(Token = "0x6000243")]
	[Address(RVA = "0xDB5624", Offset = "0xDB5624", VA = "0xDB5624")]
	private CharacterCameraConstraint()
	{
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0xDB562C", Offset = "0xDB562C", VA = "0xDB562C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0xDB56BC", Offset = "0xDB56BC", VA = "0xDB56BC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0xDB57E0", Offset = "0xDB57E0", VA = "0xDB57E0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0xDB5904", Offset = "0xDB5904", VA = "0xDB5904")]
	private void CameraUpdate()
	{
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0xDB5C24", Offset = "0xDB5C24", VA = "0xDB5C24")]
	private bool CheckCameraOverlapped()
	{
		return default(bool);
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0xDB5E84", Offset = "0xDB5E84", VA = "0xDB5E84")]
	private bool CheckCameraNearClipping(out float result)
	{
		return default(bool);
	}
}
[Token(Token = "0x200009B")]
public class LocomotionController : MonoBehaviour
{
	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CapsuleCollider CharacterController;

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimpleCapsuleWithStickMovement PlayerController;

	[Token(Token = "0x600024A")]
	[Address(RVA = "0xDB65DC", Offset = "0xDB65DC", VA = "0xDB65DC")]
	private void Start()
	{
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0xDB6688", Offset = "0xDB6688", VA = "0xDB6688")]
	public LocomotionController()
	{
	}
}
[Token(Token = "0x200009C")]
public class LocomotionTeleport : MonoBehaviour
{
	[Token(Token = "0x200009D")]
	public enum States
	{
		[Token(Token = "0x40003CC")]
		Ready,
		[Token(Token = "0x40003CD")]
		Aim,
		[Token(Token = "0x40003CE")]
		CancelAim,
		[Token(Token = "0x40003CF")]
		PreTeleport,
		[Token(Token = "0x40003D0")]
		CancelTeleport,
		[Token(Token = "0x40003D1")]
		Teleporting,
		[Token(Token = "0x40003D2")]
		PostTeleport
	}

	[Token(Token = "0x200009E")]
	public enum TeleportIntentions
	{
		[Token(Token = "0x40003D4")]
		None,
		[Token(Token = "0x40003D5")]
		Aim,
		[Token(Token = "0x40003D6")]
		PreTeleport,
		[Token(Token = "0x40003D7")]
		Teleport
	}

	[Token(Token = "0x200009F")]
	public enum AimCollisionTypes
	{
		[Token(Token = "0x40003D9")]
		Point,
		[Token(Token = "0x40003DA")]
		Sphere,
		[Token(Token = "0x40003DB")]
		Capsule
	}

	[Token(Token = "0x20000A0")]
	public class AimData
	{
		[Token(Token = "0x40003DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RaycastHit TargetHitInfo;

		[Token(Token = "0x40003DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool TargetValid;

		[Token(Token = "0x40003DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3? Destination;

		[Token(Token = "0x40003DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float Radius;

		[Token(Token = "0x1700001B")]
		public List<Vector3> Points
		{
			[Token(Token = "0x6000281")]
			[Address(RVA = "0xDB83C8", Offset = "0xDB83C8", VA = "0xDB83C8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000282")]
			[Address(RVA = "0xDB83D0", Offset = "0xDB83D0", VA = "0xDB83D0")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6000280")]
		[Address(RVA = "0xDB8340", Offset = "0xDB8340", VA = "0xDB8340")]
		public AimData()
		{
		}

		[Token(Token = "0x6000283")]
		[Address(RVA = "0xDB83D8", Offset = "0xDB83D8", VA = "0xDB83D8")]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x20000A1")]
	[CompilerGenerated]
	private sealed class <ReadyStateCoroutine>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700001C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000287")]
			[Address(RVA = "0xDB8540", Offset = "0xDB8540", VA = "0xDB8540", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000289")]
			[Address(RVA = "0xDB8588", Offset = "0xDB8588", VA = "0xDB8588", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000284")]
		[Address(RVA = "0xDB7094", Offset = "0xDB7094", VA = "0xDB7094")]
		[DebuggerHidden]
		public <ReadyStateCoroutine>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x6000285")]
		[Address(RVA = "0xDB8430", Offset = "0xDB8430", VA = "0xDB8430", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000286")]
		[Address(RVA = "0xDB8434", Offset = "0xDB8434", VA = "0xDB8434", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000288")]
		[Address(RVA = "0xDB8548", Offset = "0xDB8548", VA = "0xDB8548", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000A2")]
	[CompilerGenerated]
	private sealed class <AimStateCoroutine>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700001E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600028D")]
			[Address(RVA = "0xDB86EC", Offset = "0xDB86EC", VA = "0xDB86EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600028F")]
			[Address(RVA = "0xDB8734", Offset = "0xDB8734", VA = "0xDB8734", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600028A")]
		[Address(RVA = "0xDB751C", Offset = "0xDB751C", VA = "0xDB751C")]
		[DebuggerHidden]
		public <AimStateCoroutine>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x600028B")]
		[Address(RVA = "0xDB8590", Offset = "0xDB8590", VA = "0xDB8590", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600028C")]
		[Address(RVA = "0xDB8594", Offset = "0xDB8594", VA = "0xDB8594", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600028E")]
		[Address(RVA = "0xDB86F4", Offset = "0xDB86F4", VA = "0xDB86F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000A3")]
	[CompilerGenerated]
	private sealed class <CancelAimStateCoroutine>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000020")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000293")]
			[Address(RVA = "0xDB87EC", Offset = "0xDB87EC", VA = "0xDB87EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000021")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000295")]
			[Address(RVA = "0xDB8834", Offset = "0xDB8834", VA = "0xDB8834", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000290")]
		[Address(RVA = "0xDB76F0", Offset = "0xDB76F0", VA = "0xDB76F0")]
		[DebuggerHidden]
		public <CancelAimStateCoroutine>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x6000291")]
		[Address(RVA = "0xDB873C", Offset = "0xDB873C", VA = "0xDB873C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000292")]
		[Address(RVA = "0xDB8740", Offset = "0xDB8740", VA = "0xDB8740", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000294")]
		[Address(RVA = "0xDB87F4", Offset = "0xDB87F4", VA = "0xDB87F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000A4")]
	[CompilerGenerated]
	private sealed class <PreTeleportStateCoroutine>d__72 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000022")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000299")]
			[Address(RVA = "0xDB8924", Offset = "0xDB8924", VA = "0xDB8924", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000023")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600029B")]
			[Address(RVA = "0xDB896C", Offset = "0xDB896C", VA = "0xDB896C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000296")]
		[Address(RVA = "0xDB78C4", Offset = "0xDB78C4", VA = "0xDB78C4")]
		[DebuggerHidden]
		public <PreTeleportStateCoroutine>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x6000297")]
		[Address(RVA = "0xDB883C", Offset = "0xDB883C", VA = "0xDB883C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000298")]
		[Address(RVA = "0xDB8840", Offset = "0xDB8840", VA = "0xDB8840", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600029A")]
		[Address(RVA = "0xDB892C", Offset = "0xDB892C", VA = "0xDB892C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000A5")]
	[CompilerGenerated]
	private sealed class <CancelTeleportStateCoroutine>d__76 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000024")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600029F")]
			[Address(RVA = "0xDB8A24", Offset = "0xDB8A24", VA = "0xDB8A24", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000025")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002A1")]
			[Address(RVA = "0xDB8A6C", Offset = "0xDB8A6C", VA = "0xDB8A6C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600029C")]
		[Address(RVA = "0xDB7A98", Offset = "0xDB7A98", VA = "0xDB7A98")]
		[DebuggerHidden]
		public <CancelTeleportStateCoroutine>d__76(int <>1__state)
		{
		}

		[Token(Token = "0x600029D")]
		[Address(RVA = "0xDB8974", Offset = "0xDB8974", VA = "0xDB8974", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600029E")]
		[Address(RVA = "0xDB8978", Offset = "0xDB8978", VA = "0xDB8978", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002A0")]
		[Address(RVA = "0xDB8A2C", Offset = "0xDB8A2C", VA = "0xDB8A2C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000A6")]
	[CompilerGenerated]
	private sealed class <TeleportingStateCoroutine>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000026")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002A5")]
			[Address(RVA = "0xDB8B58", Offset = "0xDB8B58", VA = "0xDB8B58", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000027")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002A7")]
			[Address(RVA = "0xDB8BA0", Offset = "0xDB8BA0", VA = "0xDB8BA0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002A2")]
		[Address(RVA = "0xDB7C6C", Offset = "0xDB7C6C", VA = "0xDB7C6C")]
		[DebuggerHidden]
		public <TeleportingStateCoroutine>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x60002A3")]
		[Address(RVA = "0xDB8A74", Offset = "0xDB8A74", VA = "0xDB8A74", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002A4")]
		[Address(RVA = "0xDB8A78", Offset = "0xDB8A78", VA = "0xDB8A78", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002A6")]
		[Address(RVA = "0xDB8B60", Offset = "0xDB8B60", VA = "0xDB8B60", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000A7")]
	[CompilerGenerated]
	private sealed class <PostTeleportStateCoroutine>d__84 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000028")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002AB")]
			[Address(RVA = "0xDB8CA8", Offset = "0xDB8CA8", VA = "0xDB8CA8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000029")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002AD")]
			[Address(RVA = "0xDB8CF0", Offset = "0xDB8CF0", VA = "0xDB8CF0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002A8")]
		[Address(RVA = "0xDB7E40", Offset = "0xDB7E40", VA = "0xDB7E40")]
		[DebuggerHidden]
		public <PostTeleportStateCoroutine>d__84(int <>1__state)
		{
		}

		[Token(Token = "0x60002A9")]
		[Address(RVA = "0xDB8BA8", Offset = "0xDB8BA8", VA = "0xDB8BA8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002AA")]
		[Address(RVA = "0xDB8BAC", Offset = "0xDB8BAC", VA = "0xDB8BAC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002AC")]
		[Address(RVA = "0xDB8CB0", Offset = "0xDB8CB0", VA = "0xDB8CB0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("Allow linear movement prior to the teleport system being activated.")]
	public bool EnableMovementDuringReady;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[Tooltip("Allow linear movement while the teleport system is in the process of aiming for a teleport target.")]
	public bool EnableMovementDuringAim;

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[Tooltip("Allow linear movement while the teleport system is in the process of configuring the landing orientation.")]
	public bool EnableMovementDuringPreTeleport;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[Tooltip("Allow linear movement after the teleport has occurred but before the system has returned to the ready state.")]
	public bool EnableMovementDuringPostTeleport;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Tooltip("Allow rotation prior to the teleport system being activated.")]
	public bool EnableRotationDuringReady;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[Tooltip("Allow rotation while the teleport system is in the process of aiming for a teleport target.")]
	public bool EnableRotationDuringAim;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[Tooltip("Allow rotation while the teleport system is in the process of configuring the landing orientation.")]
	public bool EnableRotationDuringPreTeleport;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	[Tooltip("Allow rotation after the teleport has occurred but before the system has returned to the ready state.")]
	public bool EnableRotationDuringPostTeleport;

	[NonSerialized]
	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TeleportAimHandler AimHandler;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("This prefab will be instantiated as needed and updated to match the current aim target.")]
	public TeleportDestination TeleportDestinationPrefab;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Tooltip("TeleportDestinationPrefab will be instantiated into this layer.")]
	public int TeleportDestinationLayer;

	[NonSerialized]
	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TeleportInputHandler InputHandler;

	[NonSerialized]
	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TeleportIntentions CurrentIntention;

	[NonSerialized]
	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool IsPreTeleportRequested;

	[NonSerialized]
	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool IsTransitioning;

	[NonSerialized]
	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool IsPostTeleportRequested;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TeleportDestination _teleportDestination;

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[Tooltip("When aiming at possible destinations, the aim collision type determines which shape to use for collision tests.")]
	public AimCollisionTypes AimCollisionType;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[Tooltip("Use the character collision radius/height/skinwidth for sphere/capsule collision tests.")]
	public bool UseCharacterCollisionData;

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[Tooltip("Radius of the sphere or capsule used for collision testing when aiming to possible teleport destinations. Ignored if UseCharacterCollisionData is true.")]
	public float AimCollisionRadius;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[Tooltip("Height of the capsule used for collision testing when aiming to possible teleport destinations. Ignored if UseCharacterCollisionData is true.")]
	public float AimCollisionHeight;

	[Token(Token = "0x17000018")]
	public States CurrentState
	{
		[Token(Token = "0x600024E")]
		[Address(RVA = "0xDB66D8", Offset = "0xDB66D8", VA = "0xDB66D8")]
		[CompilerGenerated]
		get
		{
			return default(States);
		}
		[Token(Token = "0x600024F")]
		[Address(RVA = "0xDB66E0", Offset = "0xDB66E0", VA = "0xDB66E0")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000019")]
	public Quaternion DestinationRotation
	{
		[Token(Token = "0x6000253")]
		[Address(RVA = "0xDB68B0", Offset = "0xDB68B0", VA = "0xDB68B0")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x1700001A")]
	public LocomotionController LocomotionController
	{
		[Token(Token = "0x6000254")]
		[Address(RVA = "0xDB68D4", Offset = "0xDB68D4", VA = "0xDB68D4")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000255")]
		[Address(RVA = "0xDB68DC", Offset = "0xDB68DC", VA = "0xDB68DC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x14000001")]
	public event Action<bool, Vector3?, Quaternion?, Quaternion?> UpdateTeleportDestination
	{
		[Token(Token = "0x6000250")]
		[Address(RVA = "0xDB66E8", Offset = "0xDB66E8", VA = "0xDB66E8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000251")]
		[Address(RVA = "0xDB6798", Offset = "0xDB6798", VA = "0xDB6798")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000002")]
	public event Action EnterStateReady
	{
		[Token(Token = "0x600025F")]
		[Address(RVA = "0xDB6F5C", Offset = "0xDB6F5C", VA = "0xDB6F5C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000260")]
		[Address(RVA = "0xDB6FF8", Offset = "0xDB6FF8", VA = "0xDB6FF8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000003")]
	public event Action EnterStateAim
	{
		[Token(Token = "0x6000262")]
		[Address(RVA = "0xDB70BC", Offset = "0xDB70BC", VA = "0xDB70BC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000263")]
		[Address(RVA = "0xDB7158", Offset = "0xDB7158", VA = "0xDB7158")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event Action<AimData> UpdateAimData
	{
		[Token(Token = "0x6000264")]
		[Address(RVA = "0xDB71F4", Offset = "0xDB71F4", VA = "0xDB71F4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000265")]
		[Address(RVA = "0xDB72A4", Offset = "0xDB72A4", VA = "0xDB72A4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event Action ExitStateAim
	{
		[Token(Token = "0x6000267")]
		[Address(RVA = "0xDB7370", Offset = "0xDB7370", VA = "0xDB7370")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000268")]
		[Address(RVA = "0xDB740C", Offset = "0xDB740C", VA = "0xDB740C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event Action EnterStateCancelAim
	{
		[Token(Token = "0x600026A")]
		[Address(RVA = "0xDB7544", Offset = "0xDB7544", VA = "0xDB7544")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600026B")]
		[Address(RVA = "0xDB75E0", Offset = "0xDB75E0", VA = "0xDB75E0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event Action EnterStatePreTeleport
	{
		[Token(Token = "0x600026D")]
		[Address(RVA = "0xDB7718", Offset = "0xDB7718", VA = "0xDB7718")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600026E")]
		[Address(RVA = "0xDB77B4", Offset = "0xDB77B4", VA = "0xDB77B4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event Action EnterStateCancelTeleport
	{
		[Token(Token = "0x6000270")]
		[Address(RVA = "0xDB78EC", Offset = "0xDB78EC", VA = "0xDB78EC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000271")]
		[Address(RVA = "0xDB7988", Offset = "0xDB7988", VA = "0xDB7988")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public event Action EnterStateTeleporting
	{
		[Token(Token = "0x6000273")]
		[Address(RVA = "0xDB7AC0", Offset = "0xDB7AC0", VA = "0xDB7AC0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000274")]
		[Address(RVA = "0xDB7B5C", Offset = "0xDB7B5C", VA = "0xDB7B5C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event Action EnterStatePostTeleport
	{
		[Token(Token = "0x6000276")]
		[Address(RVA = "0xDB7C94", Offset = "0xDB7C94", VA = "0xDB7C94")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000277")]
		[Address(RVA = "0xDB7D30", Offset = "0xDB7D30", VA = "0xDB7D30")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event Action<Transform, Vector3, Quaternion> Teleported
	{
		[Token(Token = "0x6000279")]
		[Address(RVA = "0xDB7E68", Offset = "0xDB7E68", VA = "0xDB7E68")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600027A")]
		[Address(RVA = "0xDB7F18", Offset = "0xDB7F18", VA = "0xDB7F18")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0xDB6690", Offset = "0xDB6690", VA = "0xDB6690")]
	public void EnableMovement(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0xDB66B4", Offset = "0xDB66B4", VA = "0xDB66B4")]
	public void EnableRotation(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0xDB6848", Offset = "0xDB6848", VA = "0xDB6848")]
	public void OnUpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0xDB68E4", Offset = "0xDB68E4", VA = "0xDB68E4")]
	public bool AimCollisionTest(Vector3 start, Vector3 end, LayerMask aimCollisionLayerMask, out RaycastHit hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0xDB6BAC", Offset = "0xDB6BAC", VA = "0xDB6BAC")]
	[Conditional("DEBUG_TELEPORT_STATES")]
	protected void LogState(string msg)
	{
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0xDB6C54", Offset = "0xDB6C54", VA = "0xDB6C54")]
	protected void CreateNewTeleportDestination()
	{
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0xDB6D40", Offset = "0xDB6D40", VA = "0xDB6D40")]
	private void DeactivateDestination()
	{
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0xDB6D7C", Offset = "0xDB6D7C", VA = "0xDB6D7C")]
	public void RecycleTeleportDestination(TeleportDestination oldDestination)
	{
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0xDB6E2C", Offset = "0xDB6E2C", VA = "0xDB6E2C")]
	private void EnableMotion(bool enableLinear, bool enableRotation)
	{
	}

	[Token(Token = "0x600025C")]
	[Address(RVA = "0xDB6E5C", Offset = "0xDB6E5C", VA = "0xDB6E5C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0xDB6EBC", Offset = "0xDB6EBC", VA = "0xDB6EBC", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0xDB6F54", Offset = "0xDB6F54", VA = "0xDB6F54", Slot = "5")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0xDB6EE0", Offset = "0xDB6EE0", VA = "0xDB6EE0")]
	[IteratorStateMachine(typeof(<ReadyStateCoroutine>d__52))]
	protected IEnumerator ReadyStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0xDB7354", Offset = "0xDB7354", VA = "0xDB7354")]
	public void OnUpdateAimData(AimData aimData)
	{
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0xDB74A8", Offset = "0xDB74A8", VA = "0xDB74A8")]
	[IteratorStateMachine(typeof(<AimStateCoroutine>d__64))]
	protected IEnumerator AimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0xDB767C", Offset = "0xDB767C", VA = "0xDB767C")]
	[IteratorStateMachine(typeof(<CancelAimStateCoroutine>d__68))]
	protected IEnumerator CancelAimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0xDB7850", Offset = "0xDB7850", VA = "0xDB7850")]
	[IteratorStateMachine(typeof(<PreTeleportStateCoroutine>d__72))]
	protected IEnumerator PreTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0xDB7A24", Offset = "0xDB7A24", VA = "0xDB7A24")]
	[IteratorStateMachine(typeof(<CancelTeleportStateCoroutine>d__76))]
	protected IEnumerator CancelTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0xDB7BF8", Offset = "0xDB7BF8", VA = "0xDB7BF8")]
	[IteratorStateMachine(typeof(<TeleportingStateCoroutine>d__80))]
	protected IEnumerator TeleportingStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0xDB7DCC", Offset = "0xDB7DCC", VA = "0xDB7DCC")]
	[IteratorStateMachine(typeof(<PostTeleportStateCoroutine>d__84))]
	protected IEnumerator PostTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0xDB7FC8", Offset = "0xDB7FC8", VA = "0xDB7FC8")]
	public void DoTeleport()
	{
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0xDB80DC", Offset = "0xDB80DC", VA = "0xDB80DC")]
	public Vector3 GetCharacterPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600027D")]
	[Address(RVA = "0xDB810C", Offset = "0xDB810C", VA = "0xDB810C")]
	public Quaternion GetHeadRotationY()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0xDB8248", Offset = "0xDB8248", VA = "0xDB8248")]
	public void DoWarp(Vector3 startPos, float positionPercent)
	{
	}

	[Token(Token = "0x600027F")]
	[Address(RVA = "0xDB8330", Offset = "0xDB8330", VA = "0xDB8330")]
	public LocomotionTeleport()
	{
	}
}
[Token(Token = "0x20000A8")]
public class SimpleCapsuleWithStickMovement : MonoBehaviour
{
	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool EnableLinearMovement;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool EnableRotation;

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool HMDRotatesPlayer;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool RotationEitherThumbstick;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float RotationAngle;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Speed;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool ReadyToSnapTurn;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x1400000C")]
	public event Action CameraUpdated
	{
		[Token(Token = "0x60002AE")]
		[Address(RVA = "0xDB5744", Offset = "0xDB5744", VA = "0xDB5744")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60002AF")]
		[Address(RVA = "0xDB5868", Offset = "0xDB5868", VA = "0xDB5868")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400000D")]
	public event Action PreCharacterMove
	{
		[Token(Token = "0x60002B0")]
		[Address(RVA = "0xDB8CF8", Offset = "0xDB8CF8", VA = "0xDB8CF8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60002B1")]
		[Address(RVA = "0xDB8D94", Offset = "0xDB8D94", VA = "0xDB8D94")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0xDB8E30", Offset = "0xDB8E30", VA = "0xDB8E30")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0xDB8F10", Offset = "0xDB8F10", VA = "0xDB8F10")]
	private void Start()
	{
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0xDB8F14", Offset = "0xDB8F14", VA = "0xDB8F14")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0xDB8F88", Offset = "0xDB8F88", VA = "0xDB8F88")]
	private void RotatePlayerToHMD()
	{
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0xDB90AC", Offset = "0xDB90AC", VA = "0xDB90AC")]
	private void StickMovement()
	{
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0xDB9324", Offset = "0xDB9324", VA = "0xDB9324")]
	private void SnapTurn()
	{
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0xDB9544", Offset = "0xDB9544", VA = "0xDB9544")]
	public SimpleCapsuleWithStickMovement()
	{
	}
}
[Token(Token = "0x20000A9")]
public abstract class TeleportAimHandler : TeleportSupport
{
	[Token(Token = "0x60002B9")]
	[Address(RVA = "0xDB9564", Offset = "0xDB9564", VA = "0xDB9564", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0xDB95F4", Offset = "0xDB95F4", VA = "0xDB95F4", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x60002BB")]
	public abstract void GetPoints(List<Vector3> points);

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0xDB96C4", Offset = "0xDB96C4", VA = "0xDB96C4")]
	protected TeleportAimHandler()
	{
	}
}
[Token(Token = "0x20000AA")]
public class TeleportAimHandlerLaser : TeleportAimHandler
{
	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Tooltip("Maximum range for aiming.")]
	public float Range;

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0xDB96D4", Offset = "0xDB96D4", VA = "0xDB96D4", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0xDB9864", Offset = "0xDB9864", VA = "0xDB9864")]
	public TeleportAimHandlerLaser()
	{
	}
}
[Token(Token = "0x20000AB")]
public class TeleportAimHandlerParabolic : TeleportAimHandler
{
	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Tooltip("Maximum range for aiming.")]
	public float Range;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("The MinimumElevation is relative to the AimPosition.")]
	public float MinimumElevation;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Tooltip("The Gravity is used in conjunction with AimVelocity and the aim direction to simulate a projectile.")]
	public float Gravity;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("The AimVelocity is the initial speed of the faked projectile.")]
	[Range(0.001f, 50f)]
	public float AimVelocity;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Tooltip("The AimStep is the how much to subdivide the iteration.")]
	[Range(0.001f, 1f)]
	public float AimStep;

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0xDB9874", Offset = "0xDB9874", VA = "0xDB9874", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0xDB9A48", Offset = "0xDB9A48", VA = "0xDB9A48")]
	public TeleportAimHandlerParabolic()
	{
	}
}
[Token(Token = "0x20000AC")]
public class TeleportAimVisualLaser : TeleportSupport
{
	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("This prefab will be instantiated when the aim visual is awakened, and will be set active when the user is aiming, and deactivated when they are done aiming.")]
	public LineRenderer LaserPrefab;

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _enterAimStateAction;

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _exitAimStateAction;

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] _linePoints;

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0xDB9A5C", Offset = "0xDB9A5C", VA = "0xDB9A5C")]
	public TeleportAimVisualLaser()
	{
	}

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0xDB9B88", Offset = "0xDB9B88", VA = "0xDB9B88")]
	private void EnterAimState()
	{
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0xDB9BB4", Offset = "0xDB9BB4", VA = "0xDB9BB4")]
	private void ExitAimState()
	{
	}

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0xDB9BE0", Offset = "0xDB9BE0", VA = "0xDB9BE0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0xDB9C84", Offset = "0xDB9C84", VA = "0xDB9C84", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0xDB9CD8", Offset = "0xDB9CD8", VA = "0xDB9CD8", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0xDB9D28", Offset = "0xDB9D28", VA = "0xDB9D28")]
	private void UpdateAimData(LocomotionTeleport.AimData obj)
	{
	}
}
[Token(Token = "0x20000AD")]
public class TeleportDestination : MonoBehaviour
{
	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("If the target handler provides a target position, this transform will be moved to that position and it's game object enabled. A target position being provided does not mean the position is valid, only that the aim handler found something to test as a destination.")]
	public Transform PositionIndicator;

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("This transform will be rotated to match the rotation of the aiming target. Simple teleport destinations should assign this to the object containing this component. More complex teleport destinations might assign this to a sub-object that is used to indicate the landing orientation independently from the rest of the destination indicator, such as when world space effects are required. This will typically be a child of the PositionIndicator.")]
	public Transform OrientationIndicator;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("After the player teleports, the character controller will have it's rotation set to this value. It is different from the OrientationIndicator transform.rotation in order to support both head-relative and forward-facing teleport modes (See TeleportOrientationHandlerThumbstick.cs).")]
	public Quaternion LandingRotation;

	[NonSerialized]
	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LocomotionTeleport LocomotionTeleport;

	[NonSerialized]
	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LocomotionTeleport.States TeleportState;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly Action<bool, Vector3?, Quaternion?, Quaternion?> _updateTeleportDestinationAction;

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _eventsActive;

	[Token(Token = "0x1700002A")]
	public bool IsValidDestination
	{
		[Token(Token = "0x60002C8")]
		[Address(RVA = "0xDB9E24", Offset = "0xDB9E24", VA = "0xDB9E24")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002C9")]
		[Address(RVA = "0xDB9E2C", Offset = "0xDB9E2C", VA = "0xDB9E2C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public event Action<TeleportDestination> Deactivated
	{
		[Token(Token = "0x60002CE")]
		[Address(RVA = "0xDB9FB4", Offset = "0xDB9FB4", VA = "0xDB9FB4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60002CF")]
		[Address(RVA = "0xDBA064", Offset = "0xDBA064", VA = "0xDBA064")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0xDB9E38", Offset = "0xDB9E38", VA = "0xDB9E38")]
	private TeleportDestination()
	{
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0xDB9EBC", Offset = "0xDB9EBC", VA = "0xDB9EBC")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0xDB9F80", Offset = "0xDB9F80", VA = "0xDB9F80")]
	private void TryDisableEventHandlers()
	{
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0xDB9FB0", Offset = "0xDB9FB0", VA = "0xDB9FB0")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0xDB6D58", Offset = "0xDB6D58", VA = "0xDB6D58")]
	public void OnDeactivated()
	{
	}

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0xDBA114", Offset = "0xDBA114", VA = "0xDBA114")]
	public void Recycle()
	{
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0xDBA130", Offset = "0xDBA130", VA = "0xDBA130", Slot = "4")]
	public virtual void UpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}
}
[Token(Token = "0x20000AE")]
public abstract class TeleportInputHandler : TeleportSupport
{
	[Token(Token = "0x20000AF")]
	[CompilerGenerated]
	private sealed class <TeleportReadyCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400041A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x1700002B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002DF")]
			[Address(RVA = "0xDBA6F8", Offset = "0xDBA6F8", VA = "0xDBA6F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002E1")]
			[Address(RVA = "0xDBA740", Offset = "0xDBA740", VA = "0xDBA740", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002DC")]
		[Address(RVA = "0xDBA564", Offset = "0xDBA564", VA = "0xDBA564")]
		[DebuggerHidden]
		public <TeleportReadyCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x60002DD")]
		[Address(RVA = "0xDBA668", Offset = "0xDBA668", VA = "0xDBA668", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002DE")]
		[Address(RVA = "0xDBA66C", Offset = "0xDBA66C", VA = "0xDBA66C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002E0")]
		[Address(RVA = "0xDBA700", Offset = "0xDBA700", VA = "0xDBA700", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000B0")]
	[CompilerGenerated]
	private sealed class <TeleportAimCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400041B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400041C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400041D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x1700002D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002E5")]
			[Address(RVA = "0xDBA7E4", Offset = "0xDBA7E4", VA = "0xDBA7E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002E7")]
			[Address(RVA = "0xDBA82C", Offset = "0xDBA82C", VA = "0xDBA82C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002E2")]
		[Address(RVA = "0xDBA600", Offset = "0xDBA600", VA = "0xDBA600")]
		[DebuggerHidden]
		public <TeleportAimCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60002E3")]
		[Address(RVA = "0xDBA748", Offset = "0xDBA748", VA = "0xDBA748", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002E4")]
		[Address(RVA = "0xDBA74C", Offset = "0xDBA74C", VA = "0xDBA74C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002E6")]
		[Address(RVA = "0xDBA7EC", Offset = "0xDBA7EC", VA = "0xDBA7EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _startReadyAction;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0xDBA324", Offset = "0xDBA324", VA = "0xDBA324")]
	protected TeleportInputHandler()
	{
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0xDBA3F8", Offset = "0xDBA3F8", VA = "0xDBA3F8", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0xDBA444", Offset = "0xDBA444", VA = "0xDBA444", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0xDBA4F0", Offset = "0xDBA4F0", VA = "0xDBA4F0")]
	[IteratorStateMachine(typeof(<TeleportReadyCoroutine>d__5))]
	private IEnumerator TeleportReadyCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0xDBA58C", Offset = "0xDBA58C", VA = "0xDBA58C")]
	[IteratorStateMachine(typeof(<TeleportAimCoroutine>d__6))]
	private IEnumerator TeleportAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002D8")]
	public abstract LocomotionTeleport.TeleportIntentions GetIntention();

	[Token(Token = "0x60002D9")]
	public abstract void GetAimData(out Ray aimRay);
}
[Token(Token = "0x20000B1")]
public class TeleportInputHandlerHMD : TeleportInputHandler
{
	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Tooltip("The button used to begin aiming for a teleport.")]
	public OVRInput.RawButton AimButton;

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Tooltip("The button used to trigger the teleport after aiming. It can be the same button as the AimButton, however you cannot abort a teleport if it is.")]
	public OVRInput.RawButton TeleportButton;

	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Tooltip("When true, the system will not use the PreTeleport intention which will allow a teleport to occur on a button downpress. When false, the button downpress will trigger the PreTeleport intention and the Teleport intention when the button is released.")]
	public bool FastTeleport;

	[Token(Token = "0x1700002F")]
	public Transform Pointer
	{
		[Token(Token = "0x60002E8")]
		[Address(RVA = "0xDBA834", Offset = "0xDBA834", VA = "0xDBA834")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60002E9")]
		[Address(RVA = "0xDBA83C", Offset = "0xDBA83C", VA = "0xDBA83C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0xDBA844", Offset = "0xDBA844", VA = "0xDBA844", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0xDBA970", Offset = "0xDBA970", VA = "0xDBA970", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0xDBAA24", Offset = "0xDBAA24", VA = "0xDBAA24")]
	public TeleportInputHandlerHMD()
	{
	}
}
[Token(Token = "0x20000B2")]
public class TeleportInputHandlerTouch : TeleportInputHandlerHMD
{
	[Token(Token = "0x20000B3")]
	public enum InputModes
	{
		[Token(Token = "0x400042C")]
		CapacitiveButtonForAimAndTeleport,
		[Token(Token = "0x400042D")]
		SeparateButtonsForAimAndTeleport,
		[Token(Token = "0x400042E")]
		ThumbstickTeleport,
		[Token(Token = "0x400042F")]
		ThumbstickTeleportForwardBackOnly
	}

	[Token(Token = "0x20000B4")]
	public enum AimCapTouchButtons
	{
		[Token(Token = "0x4000431")]
		A,
		[Token(Token = "0x4000432")]
		B,
		[Token(Token = "0x4000433")]
		LeftTrigger,
		[Token(Token = "0x4000434")]
		LeftThumbstick,
		[Token(Token = "0x4000435")]
		RightTrigger,
		[Token(Token = "0x4000436")]
		RightThumbstick,
		[Token(Token = "0x4000437")]
		X,
		[Token(Token = "0x4000438")]
		Y
	}

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform LeftHand;

	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform RightHand;

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Tooltip("CapacitiveButtonForAimAndTeleport=Activate aiming via cap touch detection, press the same button to teleport.\nSeparateButtonsForAimAndTeleport=Use one button to begin aiming, and another to trigger the teleport.\nThumbstickTeleport=Push a thumbstick to begin aiming, release to teleport.")]
	public InputModes InputMode;

	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly OVRInput.RawButton[] _rawButtons;

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly OVRInput.RawTouch[] _rawTouch;

	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[Tooltip("Select the controller to be used for aiming. Supports LTouch, RTouch, or Touch for either.")]
	public OVRInput.Controller AimingController;

	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private OVRInput.Controller InitiatingController;

	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[Tooltip("Select the button to use for triggering aim and teleport when InputMode==CapacitiveButtonForAimAndTeleport")]
	public AimCapTouchButtons CapacitiveAimAndTeleportButton;

	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[Tooltip("The thumbstick magnitude required to trigger aiming and teleports when InputMode==InputModes.ThumbstickTeleport")]
	public float ThumbstickTeleportThreshold;

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0xDBAA28", Offset = "0xDBAA28", VA = "0xDBAA28")]
	private void Start()
	{
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0xDBAA2C", Offset = "0xDBAA2C", VA = "0xDBAA2C", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0xDBAE60", Offset = "0xDBAE60", VA = "0xDBAE60", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0xDBAF1C", Offset = "0xDBAF1C", VA = "0xDBAF1C")]
	public TeleportInputHandlerTouch()
	{
	}
}
[Token(Token = "0x20000B5")]
public abstract class TeleportOrientationHandler : TeleportSupport
{
	[Token(Token = "0x20000B6")]
	public enum OrientationModes
	{
		[Token(Token = "0x400043D")]
		HeadRelative,
		[Token(Token = "0x400043E")]
		ForwardFacing
	}

	[Token(Token = "0x20000B7")]
	[CompilerGenerated]
	private sealed class <UpdateOrientationCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400043F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportOrientationHandler <>4__this;

		[Token(Token = "0x17000030")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002FD")]
			[Address(RVA = "0xDBB3CC", Offset = "0xDBB3CC", VA = "0xDBB3CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000031")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002FF")]
			[Address(RVA = "0xDBB414", Offset = "0xDBB414", VA = "0xDBB414", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002FA")]
		[Address(RVA = "0xDBB1DC", Offset = "0xDBB1DC", VA = "0xDBB1DC")]
		[DebuggerHidden]
		public <UpdateOrientationCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60002FB")]
		[Address(RVA = "0xDBB31C", Offset = "0xDBB31C", VA = "0xDBB31C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002FC")]
		[Address(RVA = "0xDBB320", Offset = "0xDBB320", VA = "0xDBB320", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002FE")]
		[Address(RVA = "0xDBB3D4", Offset = "0xDBB3D4", VA = "0xDBB3D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _updateOrientationAction;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected LocomotionTeleport.AimData AimData;

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0xDBB00C", Offset = "0xDBB00C", VA = "0xDBB00C")]
	protected TeleportOrientationHandler()
	{
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0xDBB0F4", Offset = "0xDBB0F4", VA = "0xDBB0F4")]
	private void UpdateAimData(LocomotionTeleport.AimData aimData)
	{
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0xDBB0FC", Offset = "0xDBB0FC", VA = "0xDBB0FC", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0xDBB134", Offset = "0xDBB134", VA = "0xDBB134", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0xDBB168", Offset = "0xDBB168", VA = "0xDBB168")]
	[IteratorStateMachine(typeof(<UpdateOrientationCoroutine>d__7))]
	private IEnumerator UpdateOrientationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002F6")]
	protected abstract void InitializeTeleportDestination();

	[Token(Token = "0x60002F7")]
	protected abstract void UpdateTeleportDestination();

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0xDBB204", Offset = "0xDBB204", VA = "0xDBB204")]
	protected Quaternion GetLandingOrientation(OrientationModes mode, Quaternion rotation)
	{
		return default(Quaternion);
	}
}
[Token(Token = "0x20000B8")]
public class TeleportOrientationHandler360 : TeleportOrientationHandler
{
	[Token(Token = "0x6000300")]
	[Address(RVA = "0xDBB41C", Offset = "0xDBB41C", VA = "0xDBB41C", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0xDBB420", Offset = "0xDBB420", VA = "0xDBB420", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000302")]
	[Address(RVA = "0xDBB4C8", Offset = "0xDBB4C8", VA = "0xDBB4C8")]
	public TeleportOrientationHandler360()
	{
	}
}
[Token(Token = "0x20000B9")]
public class TeleportOrientationHandlerHMD : TeleportOrientationHandler
{
	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Tooltip("HeadRelative=Character will orient to match the arrow. ForwardFacing=When user orients to match the arrow, they will be facing the sensors.")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Tooltip("Should the destination orientation be updated during the aim state in addition to the PreTeleport state?")]
	public bool UpdateOrientationDuringAim;

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Tooltip("How far from the destination must the HMD be pointing before using it for orientation")]
	public float AimDistanceThreshold;

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Tooltip("How far from the destination must the HMD be pointing before rejecting the teleport")]
	public float AimDistanceMaxRange;

	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion _initialRotation;

	[Token(Token = "0x6000303")]
	[Address(RVA = "0xDBB4CC", Offset = "0xDBB4CC", VA = "0xDBB4CC", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0xDBB51C", Offset = "0xDBB51C", VA = "0xDBB51C", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000305")]
	[Address(RVA = "0xDBB9E0", Offset = "0xDBB9E0", VA = "0xDBB9E0")]
	public TeleportOrientationHandlerHMD()
	{
	}
}
[Token(Token = "0x20000BA")]
public class TeleportOrientationHandlerThumbstick : TeleportOrientationHandler
{
	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Tooltip("HeadRelative=Character will orient to match the arrow. ForwardFacing=When user orients to match the arrow, they will be facing the sensors.")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Tooltip("Which thumbstick is to be used for adjusting the teleport orientation. Supports LTouch, RTouch, or Touch for either.")]
	public OVRInput.Controller Thumbstick;

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Tooltip("The orientation will only change if the thumbstick magnitude is above this value. This will usually be larger than the TeleportInputHandlerTouch.ThumbstickTeleportThreshold.")]
	public float RotateStickThreshold;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion _initialRotation;

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion _currentRotation;

	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector2 _lastValidDirection;

	[Token(Token = "0x6000306")]
	[Address(RVA = "0xDBB9E4", Offset = "0xDBB9E4", VA = "0xDBB9E4", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0xDBBA18", Offset = "0xDBBA18", VA = "0xDBBA18", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0xDBBF14", Offset = "0xDBBF14", VA = "0xDBBF14")]
	public TeleportOrientationHandlerThumbstick()
	{
	}
}
[Token(Token = "0x20000BB")]
public class TeleportPoint : MonoBehaviour
{
	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dimmingSpeed;

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fullIntensity;

	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lowIntensity;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform destTransform;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastLookAtTime;

	[Token(Token = "0x6000309")]
	[Address(RVA = "0xDBBF24", Offset = "0xDBBF24", VA = "0xDBBF24")]
	private void Start()
	{
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0xDBBF28", Offset = "0xDBBF28", VA = "0xDBBF28")]
	public Transform GetDestTransform()
	{
		return null;
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0xDBBF30", Offset = "0xDBBF30", VA = "0xDBBF30")]
	private void Update()
	{
	}

	[Token(Token = "0x600030C")]
	[Address(RVA = "0xDBC01C", Offset = "0xDBC01C", VA = "0xDBC01C")]
	public void OnLookAt()
	{
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0xDBC038", Offset = "0xDBC038", VA = "0xDBC038")]
	public TeleportPoint()
	{
	}
}
[Token(Token = "0x20000BC")]
public abstract class TeleportSupport : MonoBehaviour
{
	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _eventsActive;

	[Token(Token = "0x17000032")]
	protected LocomotionTeleport LocomotionTeleport
	{
		[Token(Token = "0x600030E")]
		[Address(RVA = "0xDBC050", Offset = "0xDBC050", VA = "0xDBC050")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600030F")]
		[Address(RVA = "0xDBC058", Offset = "0xDBC058", VA = "0xDBC058")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0xDB958C", Offset = "0xDB958C", VA = "0xDB958C", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000311")]
	[Address(RVA = "0xDB969C", Offset = "0xDB969C", VA = "0xDB969C", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000312")]
	[Address(RVA = "0xDBC060", Offset = "0xDBC060", VA = "0xDBC060")]
	[Conditional("DEBUG_TELEPORT_EVENT_HANDLERS")]
	private void LogEventHandler(string msg)
	{
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0xDB9CCC", Offset = "0xDB9CCC", VA = "0xDB9CCC", Slot = "6")]
	protected virtual void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0xDB9D20", Offset = "0xDB9D20", VA = "0xDB9D20", Slot = "7")]
	protected virtual void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000315")]
	[Address(RVA = "0xDB96CC", Offset = "0xDB96CC", VA = "0xDB96CC")]
	protected TeleportSupport()
	{
	}
}
[Token(Token = "0x20000BD")]
public abstract class TeleportTargetHandler : TeleportSupport
{
	[Token(Token = "0x20000BE")]
	[CompilerGenerated]
	private sealed class <TargetAimCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400045A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400045B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTargetHandler <>4__this;

		[Token(Token = "0x17000033")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000321")]
			[Address(RVA = "0xDBC750", Offset = "0xDBC750", VA = "0xDBC750", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000034")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000323")]
			[Address(RVA = "0xDBC798", Offset = "0xDBC798", VA = "0xDBC798", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600031E")]
		[Address(RVA = "0xDBC308", Offset = "0xDBC308", VA = "0xDBC308")]
		[DebuggerHidden]
		public <TargetAimCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x600031F")]
		[Address(RVA = "0xDBC484", Offset = "0xDBC484", VA = "0xDBC484", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000320")]
		[Address(RVA = "0xDBC488", Offset = "0xDBC488", VA = "0xDBC488", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000322")]
		[Address(RVA = "0xDBC758", Offset = "0xDBC758", VA = "0xDBC758", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Tooltip("This bitmask controls which game object layers will be included in the targeting collision tests.")]
	public LayerMask AimCollisionLayerMask;

	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected readonly LocomotionTeleport.AimData AimData;

	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly List<Vector3> _aimPoints;

	[Token(Token = "0x4000458")]
	private const float ERROR_MARGIN = 0.1f;

	[Token(Token = "0x6000316")]
	[Address(RVA = "0xDBC130", Offset = "0xDBC130", VA = "0xDBC130")]
	protected TeleportTargetHandler()
	{
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0xDBC248", Offset = "0xDBC248", VA = "0xDBC248", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0xDBC270", Offset = "0xDBC270", VA = "0xDBC270", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0xDBC294", Offset = "0xDBC294", VA = "0xDBC294")]
	[IteratorStateMachine(typeof(<TargetAimCoroutine>d__7))]
	private IEnumerator TargetAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0xDBC330", Offset = "0xDBC330", VA = "0xDBC330", Slot = "8")]
	protected virtual void ResetAimData()
	{
	}

	[Token(Token = "0x600031B")]
	protected abstract bool ConsiderTeleport(Vector3 start, ref Vector3 end);

	[Token(Token = "0x600031C")]
	[Address(RVA = "0xDBC348", Offset = "0xDBC348", VA = "0xDBC348", Slot = "10")]
	public virtual Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}
}
[Token(Token = "0x20000BF")]
public class TeleportTargetHandlerNavMesh : TeleportTargetHandler
{
	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int NavMeshAreaMask;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NavMeshPath _path;

	[Token(Token = "0x6000324")]
	[Address(RVA = "0xDBC7A0", Offset = "0xDBC7A0", VA = "0xDBC7A0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000325")]
	[Address(RVA = "0xDBC808", Offset = "0xDBC808", VA = "0xDBC808", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000326")]
	[Address(RVA = "0xDBC970", Offset = "0xDBC970", VA = "0xDBC970", Slot = "10")]
	public override Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x6000327")]
	[Address(RVA = "0xDBCA5C", Offset = "0xDBCA5C", VA = "0xDBCA5C")]
	[Conditional("SHOW_PATH_RESULT")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0xDBCA60", Offset = "0xDBCA60", VA = "0xDBCA60")]
	public TeleportTargetHandlerNavMesh()
	{
	}
}
[Token(Token = "0x20000C0")]
public class TeleportTargetHandlerNode : TeleportTargetHandler
{
	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Tooltip("When checking line of sight to the destination, add this value to the vertical offset for targeting collision checks.")]
	public float LOSOffset;

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Tooltip("Teleport logic will only work with TeleportPoint components that exist in the layers specified by this mask.")]
	public LayerMask TeleportLayerMask;

	[Token(Token = "0x6000329")]
	[Address(RVA = "0xDBCA6C", Offset = "0xDBCA6C", VA = "0xDBCA6C", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0xDBCC64", Offset = "0xDBCC64", VA = "0xDBCC64")]
	public TeleportTargetHandlerNode()
	{
	}
}
[Token(Token = "0x20000C1")]
public class TeleportTargetHandlerPhysical : TeleportTargetHandler
{
	[Token(Token = "0x600032B")]
	[Address(RVA = "0xDBCC70", Offset = "0xDBCC70", VA = "0xDBCC70", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0xDBCDD8", Offset = "0xDBCDD8", VA = "0xDBCDD8")]
	public TeleportTargetHandlerPhysical()
	{
	}
}
[Token(Token = "0x20000C2")]
public abstract class TeleportTransition : TeleportSupport
{
	[Token(Token = "0x600032D")]
	[Address(RVA = "0xDBCDDC", Offset = "0xDBCDDC", VA = "0xDBCDDC", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0xDBCE60", Offset = "0xDBCE60", VA = "0xDBCE60", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600032F")]
	protected abstract void LocomotionTeleportOnEnterStateTeleporting();

	[Token(Token = "0x6000330")]
	[Address(RVA = "0xDBCEE0", Offset = "0xDBCEE0", VA = "0xDBCEE0")]
	protected TeleportTransition()
	{
	}
}
[Token(Token = "0x20000C3")]
public class TeleportTransitionBlink : TeleportTransition
{
	[Token(Token = "0x20000C4")]
	[CompilerGenerated]
	private sealed class <BlinkCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionBlink <>4__this;

		[Token(Token = "0x4000466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x4000467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <teleportTime>5__3;

		[Token(Token = "0x4000468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <teleported>5__4;

		[Token(Token = "0x17000035")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000337")]
			[Address(RVA = "0xDBD244", Offset = "0xDBD244", VA = "0xDBD244", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000036")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000339")]
			[Address(RVA = "0xDBD28C", Offset = "0xDBD28C", VA = "0xDBD28C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000334")]
		[Address(RVA = "0xDBCF7C", Offset = "0xDBCF7C", VA = "0xDBCF7C")]
		[DebuggerHidden]
		public <BlinkCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000335")]
		[Address(RVA = "0xDBD140", Offset = "0xDBD140", VA = "0xDBD140", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000336")]
		[Address(RVA = "0xDBD144", Offset = "0xDBD144", VA = "0xDBD144", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000338")]
		[Address(RVA = "0xDBD24C", Offset = "0xDBD24C", VA = "0xDBD24C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Range(0.01f, 2f)]
	[Tooltip("How long the transition takes. Usually this is greater than Teleport Delay.")]
	public float TransitionDuration;

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("At what percentage of the elapsed transition time does the teleport occur?")]
	[Range(0f, 1f)]
	public float TeleportDelay;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("Fade to black over the duration of the transition")]
	public AnimationCurve FadeLevels;

	[Token(Token = "0x6000331")]
	[Address(RVA = "0xDBCEE8", Offset = "0xDBCEE8", VA = "0xDBCEE8", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000332")]
	[Address(RVA = "0xDBCF08", Offset = "0xDBCF08", VA = "0xDBCF08")]
	[IteratorStateMachine(typeof(<BlinkCoroutine>d__4))]
	protected IEnumerator BlinkCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0xDBCFA4", Offset = "0xDBCFA4", VA = "0xDBCFA4")]
	public TeleportTransitionBlink()
	{
	}
}
[Token(Token = "0x20000C5")]
public class TeleportTransitionInstant : TeleportTransition
{
	[Token(Token = "0x600033A")]
	[Address(RVA = "0xDBD294", Offset = "0xDBD294", VA = "0xDBD294", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0xDBD2AC", Offset = "0xDBD2AC", VA = "0xDBD2AC")]
	public TeleportTransitionInstant()
	{
	}
}
[Token(Token = "0x20000C6")]
public class TeleportTransitionWarp : TeleportTransition
{
	[Token(Token = "0x20000C7")]
	[CompilerGenerated]
	private sealed class <DoWarp>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400046B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400046C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400046D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionWarp <>4__this;

		[Token(Token = "0x400046E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <startPosition>5__2;

		[Token(Token = "0x400046F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x17000037")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000342")]
			[Address(RVA = "0xDBD4D0", Offset = "0xDBD4D0", VA = "0xDBD4D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000038")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000344")]
			[Address(RVA = "0xDBD518", Offset = "0xDBD518", VA = "0xDBD518", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600033F")]
		[Address(RVA = "0xDBD348", Offset = "0xDBD348", VA = "0xDBD348")]
		[DebuggerHidden]
		public <DoWarp>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000340")]
		[Address(RVA = "0xDBD3B8", Offset = "0xDBD3B8", VA = "0xDBD3B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000341")]
		[Address(RVA = "0xDBD3BC", Offset = "0xDBD3BC", VA = "0xDBD3BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000343")]
		[Address(RVA = "0xDBD4D8", Offset = "0xDBD4D8", VA = "0xDBD4D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Range(0.01f, 1f)]
	[Tooltip("How much time the warp transition takes to complete.")]
	public float TransitionDuration;

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public AnimationCurve PositionLerp;

	[Token(Token = "0x600033C")]
	[Address(RVA = "0xDBD2B4", Offset = "0xDBD2B4", VA = "0xDBD2B4", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0xDBD2D4", Offset = "0xDBD2D4", VA = "0xDBD2D4")]
	[IteratorStateMachine(typeof(<DoWarp>d__3))]
	private IEnumerator DoWarp()
	{
		return null;
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0xDBD370", Offset = "0xDBD370", VA = "0xDBD370")]
	public TeleportTransitionWarp()
	{
	}
}
[Token(Token = "0x20000C8")]
public static class NativeVideoPlayer
{
	[Token(Token = "0x20000C9")]
	public enum PlabackState
	{
		[Token(Token = "0x4000488")]
		Idle = 1,
		[Token(Token = "0x4000489")]
		Preparing,
		[Token(Token = "0x400048A")]
		Buffering,
		[Token(Token = "0x400048B")]
		Ready,
		[Token(Token = "0x400048C")]
		Ended
	}

	[Token(Token = "0x20000CA")]
	public enum StereoMode
	{
		[Token(Token = "0x400048E")]
		Unknown = -1,
		[Token(Token = "0x400048F")]
		Mono,
		[Token(Token = "0x4000490")]
		TopBottom,
		[Token(Token = "0x4000491")]
		LeftRight,
		[Token(Token = "0x4000492")]
		Mesh
	}

	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IntPtr? _Activity;

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static IntPtr? _VideoPlayerClass;

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly jvalue[] EmptyParams;

	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static IntPtr getIsPlayingMethodId;

	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static IntPtr getCurrentPlaybackStateMethodId;

	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static IntPtr getDurationMethodId;

	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static IntPtr getStereoModeMethodId;

	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static IntPtr getWidthMethodId;

	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static IntPtr getHeightMethodId;

	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static IntPtr getPlaybackPositionMethodId;

	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static IntPtr setPlaybackPositionMethodId;

	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static jvalue[] setPlaybackPositionParams;

	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static IntPtr playVideoMethodId;

	[Token(Token = "0x400047D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static jvalue[] playVideoParams;

	[Token(Token = "0x400047E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static IntPtr stopMethodId;

	[Token(Token = "0x400047F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static IntPtr resumeMethodId;

	[Token(Token = "0x4000480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static IntPtr pauseMethodId;

	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private static IntPtr setPlaybackSpeedMethodId;

	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static jvalue[] setPlaybackSpeedParams;

	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private static IntPtr setLoopingMethodId;

	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private static jvalue[] setLoopingParams;

	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private static IntPtr setListenerRotationQuaternionMethodId;

	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private static jvalue[] setListenerRotationQuaternionParams;

	[Token(Token = "0x17000039")]
	private static IntPtr VideoPlayerClass
	{
		[Token(Token = "0x6000345")]
		[Address(RVA = "0xDBD520", Offset = "0xDBD520", VA = "0xDBD520")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x1700003A")]
	private static IntPtr Activity
	{
		[Token(Token = "0x6000346")]
		[Address(RVA = "0xDBD810", Offset = "0xDBD810", VA = "0xDBD810")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x1700003B")]
	public static bool IsAvailable
	{
		[Token(Token = "0x6000347")]
		[Address(RVA = "0xDBDA90", Offset = "0xDBDA90", VA = "0xDBDA90")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700003C")]
	public static bool IsPlaying
	{
		[Token(Token = "0x6000348")]
		[Address(RVA = "0xDBDB04", Offset = "0xDBDB04", VA = "0xDBDB04")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700003D")]
	public static PlabackState CurrentPlaybackState
	{
		[Token(Token = "0x6000349")]
		[Address(RVA = "0xDBDC08", Offset = "0xDBDC08", VA = "0xDBDC08")]
		get
		{
			return default(PlabackState);
		}
	}

	[Token(Token = "0x1700003E")]
	public static long Duration
	{
		[Token(Token = "0x600034A")]
		[Address(RVA = "0xDBDD10", Offset = "0xDBDD10", VA = "0xDBDD10")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x1700003F")]
	public static StereoMode VideoStereoMode
	{
		[Token(Token = "0x600034B")]
		[Address(RVA = "0xDBDE18", Offset = "0xDBDE18", VA = "0xDBDE18")]
		get
		{
			return default(StereoMode);
		}
	}

	[Token(Token = "0x17000040")]
	public static int VideoWidth
	{
		[Token(Token = "0x600034C")]
		[Address(RVA = "0xDBDF20", Offset = "0xDBDF20", VA = "0xDBDF20")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000041")]
	public static int VideoHeight
	{
		[Token(Token = "0x600034D")]
		[Address(RVA = "0xDBE028", Offset = "0xDBE028", VA = "0xDBE028")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000042")]
	public static long PlaybackPosition
	{
		[Token(Token = "0x600034E")]
		[Address(RVA = "0xDBE130", Offset = "0xDBE130", VA = "0xDBE130")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x600034F")]
		[Address(RVA = "0xDBE238", Offset = "0xDBE238", VA = "0xDBE238")]
		set
		{
		}
	}

	[Token(Token = "0x6000350")]
	[Address(RVA = "0xDBE3A0", Offset = "0xDBE3A0", VA = "0xDBE3A0")]
	public static void PlayVideo(string path, string drmLicenseUrl, IntPtr surfaceObj)
	{
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0xDBE5B8", Offset = "0xDBE5B8", VA = "0xDBE5B8")]
	public static void Stop()
	{
	}

	[Token(Token = "0x6000352")]
	[Address(RVA = "0xDBE6C0", Offset = "0xDBE6C0", VA = "0xDBE6C0")]
	public static void Play()
	{
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0xDBE7C8", Offset = "0xDBE7C8", VA = "0xDBE7C8")]
	public static void Pause()
	{
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0xDBE8D0", Offset = "0xDBE8D0", VA = "0xDBE8D0")]
	public static void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x6000355")]
	[Address(RVA = "0xDBEA40", Offset = "0xDBEA40", VA = "0xDBEA40")]
	public static void SetLooping(bool looping)
	{
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0xDBEBAC", Offset = "0xDBEBAC", VA = "0xDBEBAC")]
	public static void SetListenerRotation(Quaternion rotation)
	{
	}
}
[Token(Token = "0x20000CB")]
public class ButtonDownListener : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
{
	[Token(Token = "0x1400000F")]
	public event Action onButtonDown
	{
		[Token(Token = "0x6000358")]
		[Address(RVA = "0xDBEE00", Offset = "0xDBEE00", VA = "0xDBEE00")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000359")]
		[Address(RVA = "0xDBEE9C", Offset = "0xDBEE9C", VA = "0xDBEE9C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0xDBEF38", Offset = "0xDBEF38", VA = "0xDBEF38", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0xDBEF54", Offset = "0xDBEF54", VA = "0xDBEF54")]
	public ButtonDownListener()
	{
	}
}
[Token(Token = "0x20000CC")]
public class MediaPlayerImage : Image
{
	[Token(Token = "0x20000CD")]
	public enum ButtonType
	{
		[Token(Token = "0x4000496")]
		Play,
		[Token(Token = "0x4000497")]
		Pause,
		[Token(Token = "0x4000498")]
		FastForward,
		[Token(Token = "0x4000499")]
		Rewind,
		[Token(Token = "0x400049A")]
		SkipForward,
		[Token(Token = "0x400049B")]
		SkipBack,
		[Token(Token = "0x400049C")]
		Stop
	}

	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private ButtonType m_ButtonType;

	[Token(Token = "0x17000043")]
	public ButtonType buttonType
	{
		[Token(Token = "0x600035C")]
		[Address(RVA = "0xDBEF5C", Offset = "0xDBEF5C", VA = "0xDBEF5C")]
		get
		{
			return default(ButtonType);
		}
		[Token(Token = "0x600035D")]
		[Address(RVA = "0xDBEF64", Offset = "0xDBEF64", VA = "0xDBEF64")]
		set
		{
		}
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0xDBEF88", Offset = "0xDBEF88", VA = "0xDBEF88", Slot = "44")]
	protected override void OnPopulateMesh(VertexHelper toFill)
	{
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0xDBFDDC", Offset = "0xDBFDDC", VA = "0xDBFDDC")]
	public MediaPlayerImage()
	{
	}
}
[Token(Token = "0x20000CE")]
public class MoviePlayerSample : MonoBehaviour
{
	[Token(Token = "0x20000CF")]
	public enum VideoShape
	{
		[Token(Token = "0x40004B1")]
		_360,
		[Token(Token = "0x40004B2")]
		_180,
		[Token(Token = "0x40004B3")]
		Quad
	}

	[Token(Token = "0x20000D0")]
	public enum VideoStereo
	{
		[Token(Token = "0x40004B5")]
		Mono,
		[Token(Token = "0x40004B6")]
		TopBottom,
		[Token(Token = "0x40004B7")]
		LeftRight,
		[Token(Token = "0x40004B8")]
		BottomTop
	}

	[Token(Token = "0x20000D1")]
	[CompilerGenerated]
	private sealed class <Start>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x17000047")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000376")]
			[Address(RVA = "0xDC1338", Offset = "0xDC1338", VA = "0xDC1338", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000048")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000378")]
			[Address(RVA = "0xDC1380", Offset = "0xDC1380", VA = "0xDC1380", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000373")]
		[Address(RVA = "0xDC04D0", Offset = "0xDC04D0", VA = "0xDC04D0")]
		[DebuggerHidden]
		public <Start>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x6000374")]
		[Address(RVA = "0xDC118C", Offset = "0xDC118C", VA = "0xDC118C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000375")]
		[Address(RVA = "0xDC1190", Offset = "0xDC1190", VA = "0xDC1190", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000377")]
		[Address(RVA = "0xDC1340", Offset = "0xDC1340", VA = "0xDC1340", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool videoPausedBeforeAppPause;

	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VideoPlayer videoPlayer;

	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVROverlay overlay;

	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer mediaRenderer;

	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RenderTexture copyTexture;

	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material externalTex2DMaterial;

	[Token(Token = "0x40004A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string MovieName;

	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string DrmLicenseUrl;

	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool LoopVideo;

	[Token(Token = "0x40004A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public VideoShape Shape;

	[Token(Token = "0x40004AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public VideoStereo Stereo;

	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool AutoDetectStereoLayout;

	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	public bool DisplayMono;

	[Token(Token = "0x40004AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private VideoShape _LastShape;

	[Token(Token = "0x40004AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private VideoStereo _LastStereo;

	[Token(Token = "0x40004AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _LastDisplayMono;

	[Token(Token = "0x17000044")]
	public bool IsPlaying
	{
		[Token(Token = "0x6000360")]
		[Address(RVA = "0xDBFE34", Offset = "0xDBFE34", VA = "0xDBFE34")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000361")]
		[Address(RVA = "0xDBFE3C", Offset = "0xDBFE3C", VA = "0xDBFE3C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000045")]
	public long Duration
	{
		[Token(Token = "0x6000362")]
		[Address(RVA = "0xDBFE48", Offset = "0xDBFE48", VA = "0xDBFE48")]
		[CompilerGenerated]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000363")]
		[Address(RVA = "0xDBFE50", Offset = "0xDBFE50", VA = "0xDBFE50")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000046")]
	public long PlaybackPosition
	{
		[Token(Token = "0x6000364")]
		[Address(RVA = "0xDBFE58", Offset = "0xDBFE58", VA = "0xDBFE58")]
		[CompilerGenerated]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000365")]
		[Address(RVA = "0xDBFE60", Offset = "0xDBFE60", VA = "0xDBFE60")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0xDBFE68", Offset = "0xDBFE68", VA = "0xDBFE68")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0xDC00F0", Offset = "0xDC00F0", VA = "0xDC00F0")]
	private bool IsLocalVideo(string movieName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0xDC0150", Offset = "0xDC0150", VA = "0xDC0150")]
	private void UpdateShapeAndStereo()
	{
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0xDC045C", Offset = "0xDC045C", VA = "0xDC045C")]
	[IteratorStateMachine(typeof(<Start>d__33))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0xDC04F8", Offset = "0xDC04F8", VA = "0xDC04F8")]
	public void Play(string moviePath, string drmLicencesUrl)
	{
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0xDC07D0", Offset = "0xDC07D0", VA = "0xDC07D0")]
	public void Play()
	{
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0xDC0858", Offset = "0xDC0858", VA = "0xDC0858")]
	public void Pause()
	{
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0xDC08DC", Offset = "0xDC08DC", VA = "0xDC08DC")]
	public void SeekTo(long position)
	{
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0xDC09CC", Offset = "0xDC09CC", VA = "0xDC09CC")]
	private void Update()
	{
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0xDC0F78", Offset = "0xDC0F78", VA = "0xDC0F78")]
	public void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0xDC1018", Offset = "0xDC1018", VA = "0xDC1018")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0xDC109C", Offset = "0xDC109C", VA = "0xDC109C")]
	private void OnApplicationPause(bool appWasPaused)
	{
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0xDC117C", Offset = "0xDC117C", VA = "0xDC117C")]
	public MoviePlayerSample()
	{
	}
}
[Token(Token = "0x20000D3")]
public class MoviePlayerSampleControls : MonoBehaviour
{
	[Token(Token = "0x20000D4")]
	private enum PlaybackState
	{
		[Token(Token = "0x40004D5")]
		Playing,
		[Token(Token = "0x40004D6")]
		Paused,
		[Token(Token = "0x40004D7")]
		Rewinding,
		[Token(Token = "0x40004D8")]
		FastForwarding
	}

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MoviePlayerSample Player;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRInputModule InputModule;

	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRGazePointer GazePointer;

	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject LeftHand;

	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject RightHand;

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Canvas Canvas;

	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ButtonDownListener PlayPause;

	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MediaPlayerImage PlayPauseImage;

	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Slider ProgressBar;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ButtonDownListener FastForward;

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MediaPlayerImage FastForwardImage;

	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ButtonDownListener Rewind;

	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MediaPlayerImage RewindImage;

	[Token(Token = "0x40004CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float TimeoutTime;

	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool _isVisible;

	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _lastButtonTime;

	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool _didSeek;

	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private long _seekPreviousPosition;

	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private long _rewindStartPosition;

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float _rewindStartTime;

	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private PlaybackState _state;

	[Token(Token = "0x600037B")]
	[Address(RVA = "0xDC1464", Offset = "0xDC1464", VA = "0xDC1464")]
	private void Start()
	{
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0xDC1790", Offset = "0xDC1790", VA = "0xDC1790")]
	private void OnPlayPauseClicked()
	{
	}

	[Token(Token = "0x600037D")]
	[Address(RVA = "0xDC1960", Offset = "0xDC1960", VA = "0xDC1960")]
	private void OnFastForwardClicked()
	{
	}

	[Token(Token = "0x600037E")]
	[Address(RVA = "0xDC1A84", Offset = "0xDC1A84", VA = "0xDC1A84")]
	private void OnRewindClicked()
	{
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0xDC1B80", Offset = "0xDC1B80", VA = "0xDC1B80")]
	private void OnSeekBarMoved(float value)
	{
	}

	[Token(Token = "0x6000380")]
	[Address(RVA = "0xDC1A58", Offset = "0xDC1A58", VA = "0xDC1A58")]
	private void Seek(long pos)
	{
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0xDC1BE0", Offset = "0xDC1BE0", VA = "0xDC1BE0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0xDC1690", Offset = "0xDC1690", VA = "0xDC1690")]
	private void SetVisible(bool visible)
	{
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0xDC1F10", Offset = "0xDC1F10", VA = "0xDC1F10")]
	public MoviePlayerSampleControls()
	{
	}
}
[Token(Token = "0x20000D5")]
public static class VectorUtil
{
	[Token(Token = "0x6000384")]
	[Address(RVA = "0xDC0F00", Offset = "0xDC0F00", VA = "0xDC0F00")]
	public static Vector4 ToVector(this Rect rect)
	{
		return default(Vector4);
	}
}
[Token(Token = "0x20000D6")]
public class AppDeeplinkUI : MonoBehaviour
{
	[Token(Token = "0x40004D9")]
	private const ulong UNITY_COMPANION_APP_ID = 3535750239844224uL;

	[Token(Token = "0x40004DA")]
	private const ulong UNREAL_COMPANION_APP_ID = 4055411724486843uL;

	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform deeplinkAppId;

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform deeplinkMessage;

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform uiLaunchType;

	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RectTransform uiLaunchSource;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RectTransform uiDeepLinkMessage;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool inMenu;

	[Token(Token = "0x6000385")]
	[Address(RVA = "0xDC1F20", Offset = "0xDC1F20", VA = "0xDC1F20")]
	private void Start()
	{
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0xDC2574", Offset = "0xDC2574", VA = "0xDC2574")]
	private void Update()
	{
	}

	[Token(Token = "0x6000387")]
	[Address(RVA = "0xDC27D0", Offset = "0xDC27D0", VA = "0xDC27D0")]
	private void LaunchUnrealDeeplinkSample()
	{
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0xDC2934", Offset = "0xDC2934", VA = "0xDC2934")]
	private void LaunchSelf()
	{
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0xDC2A9C", Offset = "0xDC2A9C", VA = "0xDC2A9C")]
	private void LaunchOtherApp()
	{
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0xDC2C20", Offset = "0xDC2C20", VA = "0xDC2C20")]
	public AppDeeplinkUI()
	{
	}
}
[Token(Token = "0x20000D7")]
public class CustomDebugUI : MonoBehaviour
{
	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform textPrefab;

	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static CustomDebugUI instance;

	[Token(Token = "0x40004E3")]
	private const BindingFlags privateFlags = BindingFlags.Instance | BindingFlags.NonPublic;

	[Token(Token = "0x600038B")]
	[Address(RVA = "0xDC2C30", Offset = "0xDC2C30", VA = "0xDC2C30")]
	private void Awake()
	{
	}

	[Token(Token = "0x600038C")]
	[Address(RVA = "0xDC2C88", Offset = "0xDC2C88", VA = "0xDC2C88")]
	private void Start()
	{
	}

	[Token(Token = "0x600038D")]
	[Address(RVA = "0xDC2C8C", Offset = "0xDC2C8C", VA = "0xDC2C8C")]
	private void Update()
	{
	}

	[Token(Token = "0x600038E")]
	[Address(RVA = "0xDC231C", Offset = "0xDC231C", VA = "0xDC231C")]
	public RectTransform AddTextField(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0xDC2C90", Offset = "0xDC2C90", VA = "0xDC2C90")]
	public void RemoveFromCanvas(RectTransform element, int targetCanvas = 0)
	{
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0xDC2EAC", Offset = "0xDC2EAC", VA = "0xDC2EAC")]
	public CustomDebugUI()
	{
	}
}
[Token(Token = "0x20000D8")]
public class DebugUISample : MonoBehaviour
{
	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool inMenu;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text sliderText;

	[Token(Token = "0x6000391")]
	[Address(RVA = "0xDC2EB4", Offset = "0xDC2EB4", VA = "0xDC2EB4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000392")]
	[Address(RVA = "0xDC3414", Offset = "0xDC3414", VA = "0xDC3414")]
	public void TogglePressed(Toggle t)
	{
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0xDC34C0", Offset = "0xDC34C0", VA = "0xDC34C0")]
	public void RadioPressed(string radioLabel, string group, Toggle t)
	{
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0xDC3750", Offset = "0xDC3750", VA = "0xDC3750")]
	public void SliderPressed(float f)
	{
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0xDC3824", Offset = "0xDC3824", VA = "0xDC3824")]
	private void Update()
	{
	}

	[Token(Token = "0x6000396")]
	[Address(RVA = "0xDC38FC", Offset = "0xDC38FC", VA = "0xDC38FC")]
	private void LogButtonPressed()
	{
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0xDC3964", Offset = "0xDC3964", VA = "0xDC3964")]
	public DebugUISample()
	{
	}
}
[Token(Token = "0x20000D9")]
public class AnalyticsUI : MonoBehaviour
{
	[Token(Token = "0x600039C")]
	[Address(RVA = "0xDC3B0C", Offset = "0xDC3B0C", VA = "0xDC3B0C")]
	public AnalyticsUI()
	{
	}
}
[Token(Token = "0x20000DA")]
public class SampleUI : MonoBehaviour
{
	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform collectionButton;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform inputText;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform valueText;

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool inMenu;

	[Token(Token = "0x600039D")]
	[Address(RVA = "0xDC3B14", Offset = "0xDC3B14", VA = "0xDC3B14")]
	private void Start()
	{
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0xDC3BAC", Offset = "0xDC3BAC", VA = "0xDC3BAC")]
	private void Update()
	{
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0xDC3C84", Offset = "0xDC3C84", VA = "0xDC3C84")]
	private string GetText()
	{
		return null;
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0xDC3CE0", Offset = "0xDC3CE0", VA = "0xDC3CE0")]
	public SampleUI()
	{
	}
}
[Token(Token = "0x20000DB")]
public class StartCrashlytics : MonoBehaviour
{
	[Token(Token = "0x60003A1")]
	[Address(RVA = "0xDC3CE8", Offset = "0xDC3CE8", VA = "0xDC3CE8")]
	public StartCrashlytics()
	{
	}
}
[Token(Token = "0x20000DC")]
public class HandsActiveChecker : MonoBehaviour
{
	[Token(Token = "0x20000DD")]
	[CompilerGenerated]
	private sealed class <GetCenterEye>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandsActiveChecker <>4__this;

		[Token(Token = "0x17000049")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003A9")]
			[Address(RVA = "0xDC40F8", Offset = "0xDC40F8", VA = "0xDC40F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003AB")]
			[Address(RVA = "0xDC4140", Offset = "0xDC4140", VA = "0xDC4140", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003A6")]
		[Address(RVA = "0xDC3F94", Offset = "0xDC3F94", VA = "0xDC3F94")]
		[DebuggerHidden]
		public <GetCenterEye>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60003A7")]
		[Address(RVA = "0xDC3FC4", Offset = "0xDC3FC4", VA = "0xDC3FC4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003A8")]
		[Address(RVA = "0xDC3FC8", Offset = "0xDC3FC8", VA = "0xDC3FC8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003AA")]
		[Address(RVA = "0xDC4100", Offset = "0xDC4100", VA = "0xDC4100", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _notificationPrefab;

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject _notification;

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRCameraRig _cameraRig;

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _centerEye;

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0xDC3CF0", Offset = "0xDC3CF0", VA = "0xDC3CF0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0xDC3DFC", Offset = "0xDC3DFC", VA = "0xDC3DFC")]
	private void Update()
	{
	}

	[Token(Token = "0x60003A4")]
	[Address(RVA = "0xDC3D88", Offset = "0xDC3D88", VA = "0xDC3D88")]
	[IteratorStateMachine(typeof(<GetCenterEye>d__6))]
	private IEnumerator GetCenterEye()
	{
		return null;
	}

	[Token(Token = "0x60003A5")]
	[Address(RVA = "0xDC3FBC", Offset = "0xDC3FBC", VA = "0xDC3FBC")]
	public HandsActiveChecker()
	{
	}
}
[Token(Token = "0x20000DE")]
[ExecuteInEditMode]
public class CharacterCapsule : MonoBehaviour
{
	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CharacterController _character;

	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter _meshFilter;

	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _height;

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _radius;

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Range(4f, 32f)]
	public int SubdivisionsU;

	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Range(4f, 32f)]
	public int SubdivisionsV;

	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _subdivisionU;

	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _subdivisionV;

	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] _vertices;

	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int[] _triangles;

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0xDC4148", Offset = "0xDC4148", VA = "0xDC4148")]
	private void Update()
	{
	}

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0xDC5AF0", Offset = "0xDC5AF0", VA = "0xDC5AF0")]
	public CharacterCapsule()
	{
	}
}
[Token(Token = "0x20000DF")]
public class LocomotionSampleSupport : MonoBehaviour
{
	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LocomotionController lc;

	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool inMenu;

	[Token(Token = "0x1700004B")]
	private LocomotionTeleport TeleportController
	{
		[Token(Token = "0x60003AE")]
		[Address(RVA = "0xDC5AF8", Offset = "0xDC5AF8", VA = "0xDC5AF8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0xDC5B48", Offset = "0xDC5B48", VA = "0xDC5B48")]
	public void Start()
	{
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0xDC5F80", Offset = "0xDC5F80", VA = "0xDC5F80")]
	public void Update()
	{
	}

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0xDC6058", Offset = "0xDC6058", VA = "0xDC6058")]
	[Conditional("DEBUG_LOCOMOTION_PANEL")]
	private static void Log(string msg)
	{
	}

	[Token(Token = "0x60003B2")]
	public static TActivate ActivateCategory<TCategory, TActivate>(GameObject target) where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x60003B3")]
	protected void ActivateHandlers<TInput, TAim, TTarget, TOrientation, TTransition>() where TInput : TeleportInputHandler where TAim : TeleportAimHandler where TTarget : TeleportTargetHandler where TOrientation : TeleportOrientationHandler where TTransition : TeleportTransition
	{
	}

	[Token(Token = "0x60003B4")]
	protected void ActivateInput<TActivate>() where TActivate : TeleportInputHandler
	{
	}

	[Token(Token = "0x60003B5")]
	protected void ActivateAim<TActivate>() where TActivate : TeleportAimHandler
	{
	}

	[Token(Token = "0x60003B6")]
	protected void ActivateTarget<TActivate>() where TActivate : TeleportTargetHandler
	{
	}

	[Token(Token = "0x60003B7")]
	protected void ActivateOrientation<TActivate>() where TActivate : TeleportOrientationHandler
	{
	}

	[Token(Token = "0x60003B8")]
	protected void ActivateTransition<TActivate>() where TActivate : TeleportTransition
	{
	}

	[Token(Token = "0x60003B9")]
	protected TActivate ActivateCategory<TCategory, TActivate>() where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0xDC60B0", Offset = "0xDC60B0", VA = "0xDC60B0")]
	protected void UpdateToggle(Toggle toggle, bool enabled)
	{
	}

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0xDC60F0", Offset = "0xDC60F0", VA = "0xDC60F0")]
	private void SetupNonCap()
	{
	}

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0xDC615C", Offset = "0xDC615C", VA = "0xDC615C")]
	private void SetupTeleportDefaults()
	{
	}

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0xDC62A8", Offset = "0xDC62A8", VA = "0xDC62A8")]
	protected GameObject AddInstance(GameObject template, string label)
	{
		return null;
	}

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0xDC6378", Offset = "0xDC6378", VA = "0xDC6378")]
	private void SetupNodeTeleport()
	{
	}

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0xDC5E5C", Offset = "0xDC5E5C", VA = "0xDC5E5C")]
	private void SetupTwoStickTeleport()
	{
	}

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0xDC6448", Offset = "0xDC6448", VA = "0xDC6448")]
	private void SetupWalkOnly()
	{
	}

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0xDC6494", Offset = "0xDC6494", VA = "0xDC6494")]
	private void SetupLeftStrafeRightTeleport()
	{
	}

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0xDC65A4", Offset = "0xDC65A4", VA = "0xDC65A4")]
	public LocomotionSampleSupport()
	{
	}
}
[Token(Token = "0x20000E0")]
[RequireComponent(typeof(Canvas))]
public class OVROverlayCanvas : MonoBehaviour
{
	[Token(Token = "0x20000E1")]
	public enum DrawMode
	{
		[Token(Token = "0x4000512")]
		Opaque,
		[Token(Token = "0x4000513")]
		OpaqueWithClip,
		[Token(Token = "0x4000514")]
		TransparentDefaultAlpha,
		[Token(Token = "0x4000515")]
		TransparentCorrectAlpha
	}

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[HideInInspector]
	private Shader _transparentShader;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[HideInInspector]
	private Shader _opaqueShader;

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform _rectTransform;

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Canvas _canvas;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera _camera;

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OVROverlay _overlay;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RenderTexture _renderTexture;

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Mesh _quad;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material _defaultMat;

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int MaxTextureSize;

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int MinTextureSize;

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float PixelsPerUnit;

	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int DrawRate;

	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int DrawFrameOffset;

	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool Expensive;

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int Layer;

	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public DrawMode Opacity;

	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool ScaleViewport;

	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Plane[] _FrustumPlanes;

	[Token(Token = "0x1700004C")]
	public bool overlayEnabled
	{
		[Token(Token = "0x60003C9")]
		[Address(RVA = "0xDC7BE8", Offset = "0xDC7BE8", VA = "0xDC7BE8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003CA")]
		[Address(RVA = "0xDC7C6C", Offset = "0xDC7C6C", VA = "0xDC7C6C")]
		set
		{
		}
	}

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0xDC65AC", Offset = "0xDC65AC", VA = "0xDC65AC")]
	private void Start()
	{
	}

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0xDC7270", Offset = "0xDC7270", VA = "0xDC7270")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0xDC72E4", Offset = "0xDC72E4", VA = "0xDC72E4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0xDC73B4", Offset = "0xDC73B4", VA = "0xDC73B4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0xDC7484", Offset = "0xDC7484", VA = "0xDC7484", Slot = "4")]
	protected virtual bool ShouldRender()
	{
		return default(bool);
	}

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0xDC7688", Offset = "0xDC7688", VA = "0xDC7688")]
	private void Update()
	{
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0xDC7D28", Offset = "0xDC7D28", VA = "0xDC7D28")]
	public OVROverlayCanvas()
	{
	}
}
[Token(Token = "0x20000E2")]
public class AugmentedObject : MonoBehaviour
{
	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerHand;

	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform shadow;

	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool groundShadow;

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0xDC7DE4", Offset = "0xDC7DE4", VA = "0xDC7DE4")]
	private void Start()
	{
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0xDC8184", Offset = "0xDC8184", VA = "0xDC8184")]
	private void Update()
	{
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0xDC8318", Offset = "0xDC8318", VA = "0xDC8318")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0xDC8320", Offset = "0xDC8320", VA = "0xDC8320")]
	public void Release()
	{
	}

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0xDC8308", Offset = "0xDC8308", VA = "0xDC8308")]
	private void ToggleShadowType()
	{
	}

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0xDC8328", Offset = "0xDC8328", VA = "0xDC8328")]
	public AugmentedObject()
	{
	}
}
[Token(Token = "0x20000E3")]
public class BrushController : MonoBehaviour
{
	[Token(Token = "0x20000E4")]
	[CompilerGenerated]
	private sealed class <FadeCameraClearColor>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400051D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400051E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400051F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float fadeTime;

		[Token(Token = "0x4000520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Color newColor;

		[Token(Token = "0x4000521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <timer>5__2;

		[Token(Token = "0x4000522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color <currentColor>5__3;

		[Token(Token = "0x1700004D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003DD")]
			[Address(RVA = "0xDC8A70", Offset = "0xDC8A70", VA = "0xDC8A70", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003DF")]
			[Address(RVA = "0xDC8AB8", Offset = "0xDC8AB8", VA = "0xDC8AB8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003DA")]
		[Address(RVA = "0xDC8914", Offset = "0xDC8914", VA = "0xDC8914")]
		[DebuggerHidden]
		public <FadeCameraClearColor>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x60003DB")]
		[Address(RVA = "0xDC896C", Offset = "0xDC896C", VA = "0xDC896C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003DC")]
		[Address(RVA = "0xDC8970", Offset = "0xDC8970", VA = "0xDC8970", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003DE")]
		[Address(RVA = "0xDC8A78", Offset = "0xDC8A78", VA = "0xDC8A78", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000E5")]
	[CompilerGenerated]
	private sealed class <FadeSphere>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BrushController <>4__this;

		[Token(Token = "0x4000526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x4000527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Color newColor;

		[Token(Token = "0x4000528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool disableOnFinish;

		[Token(Token = "0x4000529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <timer>5__2;

		[Token(Token = "0x400052A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Color <currentColor>5__3;

		[Token(Token = "0x1700004F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003E3")]
			[Address(RVA = "0xDC8C3C", Offset = "0xDC8C3C", VA = "0xDC8C3C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000050")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003E5")]
			[Address(RVA = "0xDC8C84", Offset = "0xDC8C84", VA = "0xDC8C84", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003E0")]
		[Address(RVA = "0xDC893C", Offset = "0xDC893C", VA = "0xDC893C")]
		[DebuggerHidden]
		public <FadeSphere>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x60003E1")]
		[Address(RVA = "0xDC8AC0", Offset = "0xDC8AC0", VA = "0xDC8AC0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003E2")]
		[Address(RVA = "0xDC8AC4", Offset = "0xDC8AC4", VA = "0xDC8AC4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003E4")]
		[Address(RVA = "0xDC8C44", Offset = "0xDC8C44", VA = "0xDC8C44", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PassthroughBrush brush;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshRenderer backgroundSphere;

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IEnumerator grabRoutine;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IEnumerator releaseRoutine;

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0xDC8330", Offset = "0xDC8330", VA = "0xDC8330")]
	private void Start()
	{
	}

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0xDC8610", Offset = "0xDC8610", VA = "0xDC8610")]
	private void Update()
	{
	}

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0xDC8660", Offset = "0xDC8660", VA = "0xDC8660")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x60003D6")]
	[Address(RVA = "0xDC87D8", Offset = "0xDC87D8", VA = "0xDC87D8")]
	public void Release()
	{
	}

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0xDC887C", Offset = "0xDC887C", VA = "0xDC887C")]
	[IteratorStateMachine(typeof(<FadeCameraClearColor>d__8))]
	private IEnumerator FadeCameraClearColor(Color newColor, float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x60003D8")]
	[Address(RVA = "0xDC8718", Offset = "0xDC8718", VA = "0xDC8718")]
	[IteratorStateMachine(typeof(<FadeSphere>d__9))]
	private IEnumerator FadeSphere(Color newColor, float fadeTime, bool disableOnFinish = false)
	{
		return null;
	}

	[Token(Token = "0x60003D9")]
	[Address(RVA = "0xDC8964", Offset = "0xDC8964", VA = "0xDC8964")]
	public BrushController()
	{
	}
}
[Token(Token = "0x20000E6")]
public class EnableUnpremultipliedAlpha : MonoBehaviour
{
	[Token(Token = "0x60003E6")]
	[Address(RVA = "0xDC8C8C", Offset = "0xDC8C8C", VA = "0xDC8C8C")]
	private void Start()
	{
	}

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0xDC8CE0", Offset = "0xDC8CE0", VA = "0xDC8CE0")]
	public EnableUnpremultipliedAlpha()
	{
	}
}
[Token(Token = "0x20000E7")]
public class Flashlight : MonoBehaviour
{
	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject lightVolume;

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Light spotlight;

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject bulbGlow;

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0xDC8CE8", Offset = "0xDC8CE8", VA = "0xDC8CE8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0xDC8EBC", Offset = "0xDC8EBC", VA = "0xDC8EBC")]
	public void ToggleFlashlight()
	{
	}

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0xDC8F4C", Offset = "0xDC8F4C", VA = "0xDC8F4C")]
	public void EnableFlashlight(bool doEnable)
	{
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0xDC8FA8", Offset = "0xDC8FA8", VA = "0xDC8FA8")]
	public Flashlight()
	{
	}
}
[Token(Token = "0x20000E8")]
public class FlashlightController : MonoBehaviour
{
	[Token(Token = "0x20000E9")]
	[CompilerGenerated]
	private sealed class <FadeLighting>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400053A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FlashlightController <>4__this;

		[Token(Token = "0x400053B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x400053C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Color newColor;

		[Token(Token = "0x400053D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float sceneLightIntensity;

		[Token(Token = "0x400053E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <timer>5__2;

		[Token(Token = "0x400053F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Color <currentColor>5__3;

		[Token(Token = "0x4000540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float <currentLight>5__4;

		[Token(Token = "0x17000051")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003F8")]
			[Address(RVA = "0xDCA180", Offset = "0xDCA180", VA = "0xDCA180", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000052")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003FA")]
			[Address(RVA = "0xDCA1C8", Offset = "0xDCA1C8", VA = "0xDCA1C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003F5")]
		[Address(RVA = "0xDC9EE8", Offset = "0xDC9EE8", VA = "0xDC9EE8")]
		[DebuggerHidden]
		public <FadeLighting>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x60003F6")]
		[Address(RVA = "0xDC9FB0", Offset = "0xDC9FB0", VA = "0xDC9FB0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003F7")]
		[Address(RVA = "0xDC9FB4", Offset = "0xDC9FB4", VA = "0xDC9FB4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003F9")]
		[Address(RVA = "0xDCA188", Offset = "0xDCA188", VA = "0xDCA188", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Light sceneLight;

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform flashlightRoot;

	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 localPosition;

	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Quaternion localRotation;

	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMesh infoText;

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GrabObject externalController;

	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private OVRSkeleton[] skeletons;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private OVRHand[] hands;

	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int handIndex;

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool pinching;

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0xDC8FB0", Offset = "0xDC8FB0", VA = "0xDC8FB0")]
	private void Start()
	{
	}

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0xDC9298", Offset = "0xDC9298", VA = "0xDC9298")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0xDC9584", Offset = "0xDC9584", VA = "0xDC9584")]
	private void FindHands()
	{
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0xDC98AC", Offset = "0xDC98AC", VA = "0xDC98AC")]
	private void AlignWithHand(OVRHand hand, OVRSkeleton skeleton)
	{
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0xDC9B84", Offset = "0xDC9B84", VA = "0xDC9B84")]
	private void AlignWithController(OVRInput.Controller controller)
	{
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0xDC9C6C", Offset = "0xDC9C6C", VA = "0xDC9C6C")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0xDC9E04", Offset = "0xDC9E04", VA = "0xDC9E04")]
	public void Release()
	{
	}

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0xDC9D54", Offset = "0xDC9D54", VA = "0xDC9D54")]
	[IteratorStateMachine(typeof(<FadeLighting>d__17))]
	private IEnumerator FadeLighting(Color newColor, float sceneLightIntensity, float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0xDC9F10", Offset = "0xDC9F10", VA = "0xDC9F10")]
	public FlashlightController()
	{
	}
}
[Token(Token = "0x20000EA")]
public class GrabObject : MonoBehaviour
{
	[Token(Token = "0x20000EB")]
	public enum ManipulationType
	{
		[Token(Token = "0x400054A")]
		Default,
		[Token(Token = "0x400054B")]
		ForcedHand,
		[Token(Token = "0x400054C")]
		DollyHand,
		[Token(Token = "0x400054D")]
		DollyAttached,
		[Token(Token = "0x400054E")]
		HorizontalScaled,
		[Token(Token = "0x400054F")]
		VerticalScaled,
		[Token(Token = "0x4000550")]
		Menu
	}

	[Token(Token = "0x20000EC")]
	public delegate void GrabbedObject(OVRInput.Controller grabHand);

	[Token(Token = "0x20000ED")]
	public delegate void ReleasedObject();

	[Token(Token = "0x20000EE")]
	public delegate void SetCursorPosition(Vector3 cursorPosition);

	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[TextArea]
	public string ObjectName;

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[TextArea]
	public string ObjectInstructions;

	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ManipulationType objectManipulationType;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool showLaserWhileGrabbed;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Quaternion grabbedRotation;

	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GrabbedObject GrabbedObjectDelegate;

	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ReleasedObject ReleasedObjectDelegate;

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SetCursorPosition CursorPositionDelegate;

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0xDCA1D0", Offset = "0xDCA1D0", VA = "0xDCA1D0")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0xDCA230", Offset = "0xDCA230", VA = "0xDCA230")]
	public void Release()
	{
	}

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0xDCA24C", Offset = "0xDCA24C", VA = "0xDCA24C")]
	public void CursorPos(Vector3 cursorPos)
	{
	}

	[Token(Token = "0x60003FE")]
	[Address(RVA = "0xDCA268", Offset = "0xDCA268", VA = "0xDCA268")]
	public GrabObject()
	{
	}
}
[Token(Token = "0x20000EF")]
public class HandMeshMask : MonoBehaviour
{
	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRSkeleton referenceHand;

	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material maskMaterial;

	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("The segments around the tip of a finger")]
	public int radialDivisions;

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Tooltip("The fade range (finger width is 2x this)")]
	public float borderSize;

	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("Along the fingers, each knuckle scales down by this amount.  Default is zero for uniform width along entire finger.")]
	public float fingerTaper;

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Tooltip("Shorten the last bone of each finger; need this to account for bone structure (end bone is at finger tip instead of center). Default is 1.")]
	public float fingerTipLength;

	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Tooltip("Move the base of the 4 main fingers towards the tips, to avoid a visible mesh crack between finger webbing. Default is 0.")]
	public float webOffset;

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float handScale;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject maskMeshObject;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Mesh maskMesh;

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] handVertices;

	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector2[] handUVs;

	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color32[] handColors;

	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int[] handTriangles;

	[Token(Token = "0x400055F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int vertCounter;

	[Token(Token = "0x4000560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int triCounter;

	[Token(Token = "0x600040B")]
	[Address(RVA = "0xDCA520", Offset = "0xDCA520", VA = "0xDCA520")]
	private void Awake()
	{
	}

	[Token(Token = "0x600040C")]
	[Address(RVA = "0xDCA780", Offset = "0xDCA780", VA = "0xDCA780")]
	private void Update()
	{
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0xDCA948", Offset = "0xDCA948", VA = "0xDCA948")]
	private void CreateHandMesh()
	{
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0xDCAF9C", Offset = "0xDCAF9C", VA = "0xDCAF9C")]
	private void AddKnuckleMesh(int knuckleVerts, float point1scale, float point2scale, Vector3 point1, Vector3 point2)
	{
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0xDCB534", Offset = "0xDCB534", VA = "0xDCB534")]
	private void AddPalmMesh(int knuckleVerts)
	{
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0xDCD83C", Offset = "0xDCD83C", VA = "0xDCD83C")]
	private void AddVertex(Vector3 position, Vector2 uv, Color color)
	{
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0xDCDBB0", Offset = "0xDCDBB0", VA = "0xDCDBB0")]
	public HandMeshMask()
	{
	}
}
[Token(Token = "0x20000F0")]
public class HandMeshUI : MonoBehaviour
{
	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SphereCollider[] knobs;

	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMesh[] readouts;

	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int rightHeldKnob;

	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int leftHeldKnob;

	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public OVRSkeleton leftHand;

	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public OVRSkeleton rightHand;

	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public HandMeshMask leftMask;

	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public HandMeshMask rightMask;

	[Token(Token = "0x6000412")]
	[Address(RVA = "0xDCDBD4", Offset = "0xDCDBD4", VA = "0xDCDBD4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0xDCDF3C", Offset = "0xDCDF3C", VA = "0xDCDF3C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000414")]
	[Address(RVA = "0xDCDC70", Offset = "0xDCDC70", VA = "0xDCDC70")]
	private void SetSliderValue(int sliderID, float value, bool isNormalized)
	{
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0xDCE3A4", Offset = "0xDCE3A4", VA = "0xDCE3A4")]
	private void CheckForHands()
	{
	}

	[Token(Token = "0x6000416")]
	[Address(RVA = "0xDCE914", Offset = "0xDCE914", VA = "0xDCE914")]
	public HandMeshUI()
	{
	}
}
[Token(Token = "0x20000F1")]
public class ObjectManipulator : MonoBehaviour
{
	[Token(Token = "0x20000F2")]
	[CompilerGenerated]
	private sealed class <StartDemo>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400057C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400057D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400057E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObjectManipulator <>4__this;

		[Token(Token = "0x400057F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timer>5__2;

		[Token(Token = "0x4000580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <fadeTime>5__3;

		[Token(Token = "0x17000053")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000426")]
			[Address(RVA = "0xDD11BC", Offset = "0xDD11BC", VA = "0xDD11BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000054")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000428")]
			[Address(RVA = "0xDD1204", Offset = "0xDD1204", VA = "0xDD1204", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000423")]
		[Address(RVA = "0xDD0EBC", Offset = "0xDD0EBC", VA = "0xDD0EBC")]
		[DebuggerHidden]
		public <StartDemo>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6000424")]
		[Address(RVA = "0xDD0EE4", Offset = "0xDD0EE4", VA = "0xDD0EE4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000425")]
		[Address(RVA = "0xDD0EE8", Offset = "0xDD0EE8", VA = "0xDD0EE8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000427")]
		[Address(RVA = "0xDD11C4", Offset = "0xDD11C4", VA = "0xDD11C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRInput.Controller controller;

	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject hoverObject;

	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject grabObject;

	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float grabTime;

	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 localGrabOffset;

	[Token(Token = "0x400056E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Quaternion localGrabRotation;

	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 camGrabPosition;

	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion camGrabRotation;

	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 handGrabPosition;

	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Quaternion handGrabRotation;

	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 cursorPosition;

	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float rotationOffset;

	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public LineRenderer laser;

	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform objectInfo;

	[Token(Token = "0x4000577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public TextMesh objectNameLabel;

	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public TextMesh objectInstructionsLabel;

	[Token(Token = "0x4000579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Image objectInfoBG;

	[Token(Token = "0x400057A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject demoObjects;

	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public OVRPassthroughLayer passthrough;

	[Token(Token = "0x6000417")]
	[Address(RVA = "0xDCE924", Offset = "0xDCE924", VA = "0xDCE924")]
	private void Start()
	{
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0xDCEB20", Offset = "0xDCEB20", VA = "0xDCEB20")]
	private void Update()
	{
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0xDCFA5C", Offset = "0xDCFA5C", VA = "0xDCFA5C")]
	private void GrabHoverObject(GameObject grbObj, Vector3 controllerPos, Quaternion controllerRot)
	{
	}

	[Token(Token = "0x600041A")]
	[Address(RVA = "0xDD07F0", Offset = "0xDD07F0", VA = "0xDD07F0")]
	private void ReleaseObject()
	{
	}

	[Token(Token = "0x600041B")]
	[Address(RVA = "0xDCEAAC", Offset = "0xDCEAAC", VA = "0xDCEAAC")]
	[IteratorStateMachine(typeof(<StartDemo>d__23))]
	private IEnumerator StartDemo()
	{
		return null;
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0xDCED70", Offset = "0xDCED70", VA = "0xDCED70")]
	private void FindHoverObject(Vector3 controllerPos, Quaternion controllerRot)
	{
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0xDCFD50", Offset = "0xDCFD50", VA = "0xDCFD50")]
	private void ManipulateObject(GameObject obj, Vector3 controllerPos, Quaternion controllerRot)
	{
	}

	[Token(Token = "0x600041E")]
	[Address(RVA = "0xDD0AFC", Offset = "0xDD0AFC", VA = "0xDD0AFC")]
	private void ClampGrabOffset(ref Vector3 localOffset, float thumbY)
	{
	}

	[Token(Token = "0x600041F")]
	[Address(RVA = "0xDD0BB0", Offset = "0xDD0BB0", VA = "0xDD0BB0")]
	private Vector3 ClampScale(Vector3 localScale, Vector2 thumb)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000420")]
	[Address(RVA = "0xDD0BE0", Offset = "0xDD0BE0", VA = "0xDD0BE0")]
	private void CheckForDominantHand()
	{
	}

	[Token(Token = "0x6000421")]
	[Address(RVA = "0xDD09E0", Offset = "0xDD09E0", VA = "0xDD09E0")]
	private void AssignInstructions(GrabObject targetObject)
	{
	}

	[Token(Token = "0x6000422")]
	[Address(RVA = "0xDD0CD0", Offset = "0xDD0CD0", VA = "0xDD0CD0")]
	public ObjectManipulator()
	{
	}
}
[Token(Token = "0x20000F3")]
public class OverlayPassthrough : MonoBehaviour
{
	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x6000429")]
	[Address(RVA = "0xDD120C", Offset = "0xDD120C", VA = "0xDD120C")]
	private void Start()
	{
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0xDD1378", Offset = "0xDD1378", VA = "0xDD1378")]
	private void Update()
	{
	}

	[Token(Token = "0x600042B")]
	[Address(RVA = "0xDD142C", Offset = "0xDD142C", VA = "0xDD142C")]
	public OverlayPassthrough()
	{
	}
}
[Token(Token = "0x20000F4")]
public class PassthroughBrush : MonoBehaviour
{
	[Token(Token = "0x20000F5")]
	public enum BrushState
	{
		[Token(Token = "0x400058D")]
		Idle,
		[Token(Token = "0x400058E")]
		Inking
	}

	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerHand;

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject lineSegmentPrefab;

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject lineContainer;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool forceActive;

	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LineRenderer currentLineSegment;

	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<Vector3> inkPositions;

	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float minInkDist;

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float strokeWidth;

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float strokeLength;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private BrushState brushStatus;

	[Token(Token = "0x600042C")]
	[Address(RVA = "0xDD1434", Offset = "0xDD1434", VA = "0xDD1434")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600042D")]
	[Address(RVA = "0xDD143C", Offset = "0xDD143C", VA = "0xDD143C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600042E")]
	[Address(RVA = "0xDD16EC", Offset = "0xDD16EC", VA = "0xDD16EC")]
	private void StartLine(Vector3 inkPos)
	{
	}

	[Token(Token = "0x600042F")]
	[Address(RVA = "0xDD1920", Offset = "0xDD1920", VA = "0xDD1920")]
	private void UpdateLine(Vector3 inkPos)
	{
	}

	[Token(Token = "0x6000430")]
	[Address(RVA = "0xDD1B60", Offset = "0xDD1B60", VA = "0xDD1B60")]
	public void ClearLines()
	{
	}

	[Token(Token = "0x6000431")]
	[Address(RVA = "0xDD1604", Offset = "0xDD1604", VA = "0xDD1604")]
	public void UndoInkLine()
	{
	}

	[Token(Token = "0x6000432")]
	[Address(RVA = "0xDD1C30", Offset = "0xDD1C30", VA = "0xDD1C30")]
	public PassthroughBrush()
	{
	}
}
[Token(Token = "0x20000F6")]
public class PassthroughController : MonoBehaviour
{
	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x6000433")]
	[Address(RVA = "0xDD1CCC", Offset = "0xDD1CCC", VA = "0xDD1CCC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000434")]
	[Address(RVA = "0xDD1E38", Offset = "0xDD1E38", VA = "0xDD1E38")]
	private void Update()
	{
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0xDD2024", Offset = "0xDD2024", VA = "0xDD2024")]
	public PassthroughController()
	{
	}
}
[Token(Token = "0x20000F7")]
public class PassthroughProjectionSurface : MonoBehaviour
{
	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter projectionObject;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MeshRenderer quadOutline;

	[Token(Token = "0x6000436")]
	[Address(RVA = "0xDD202C", Offset = "0xDD202C", VA = "0xDD202C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000437")]
	[Address(RVA = "0xDD2214", Offset = "0xDD2214", VA = "0xDD2214")]
	private void Update()
	{
	}

	[Token(Token = "0x6000438")]
	[Address(RVA = "0xDD23B4", Offset = "0xDD23B4", VA = "0xDD23B4")]
	public PassthroughProjectionSurface()
	{
	}
}
[Token(Token = "0x20000F8")]
public class PassthroughStyler : MonoBehaviour
{
	[Token(Token = "0x20000F9")]
	[CompilerGenerated]
	private sealed class <FadeToCurrentStyle>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PassthroughStyler <>4__this;

		[Token(Token = "0x40005A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x40005A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <timer>5__2;

		[Token(Token = "0x40005A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <brightness>5__3;

		[Token(Token = "0x40005A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <contrast>5__4;

		[Token(Token = "0x40005A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color <edgeCol>5__5;

		[Token(Token = "0x17000055")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600044A")]
			[Address(RVA = "0xDD3018", Offset = "0xDD3018", VA = "0xDD3018", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000056")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600044C")]
			[Address(RVA = "0xDD3060", Offset = "0xDD3060", VA = "0xDD3060", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000447")]
		[Address(RVA = "0xDD2D80", Offset = "0xDD2D80", VA = "0xDD2D80")]
		[DebuggerHidden]
		public <FadeToCurrentStyle>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6000448")]
		[Address(RVA = "0xDD2EC4", Offset = "0xDD2EC4", VA = "0xDD2EC4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000449")]
		[Address(RVA = "0xDD2EC8", Offset = "0xDD2EC8", VA = "0xDD2EC8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600044B")]
		[Address(RVA = "0xDD3020", Offset = "0xDD3020", VA = "0xDD3020", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000FA")]
	[CompilerGenerated]
	private sealed class <FadeToDefaultPassthrough>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PassthroughStyler <>4__this;

		[Token(Token = "0x40005AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x40005AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <timer>5__2;

		[Token(Token = "0x40005AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <brightness>5__3;

		[Token(Token = "0x40005AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <contrast>5__4;

		[Token(Token = "0x40005B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color <edgeCol>5__5;

		[Token(Token = "0x17000057")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000450")]
			[Address(RVA = "0xDD31D4", Offset = "0xDD31D4", VA = "0xDD31D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000058")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000452")]
			[Address(RVA = "0xDD321C", Offset = "0xDD321C", VA = "0xDD321C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600044D")]
		[Address(RVA = "0xDD2DA8", Offset = "0xDD2DA8", VA = "0xDD2DA8")]
		[DebuggerHidden]
		public <FadeToDefaultPassthrough>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x600044E")]
		[Address(RVA = "0xDD3068", Offset = "0xDD3068", VA = "0xDD3068", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600044F")]
		[Address(RVA = "0xDD306C", Offset = "0xDD306C", VA = "0xDD306C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000451")]
		[Address(RVA = "0xDD31DC", Offset = "0xDD31DC", VA = "0xDD31DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerHand;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IEnumerator fadeIn;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IEnumerator fadeOut;

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public RectTransform[] menuOptions;

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RectTransform colorWheel;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Texture2D colorTexture;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 cursorPosition;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool settingColor;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color savedColor;

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float savedBrightness;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float savedContrast;

	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public CanvasGroup mainCanvas;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject[] compactObjects;

	[Token(Token = "0x6000439")]
	[Address(RVA = "0xDD23BC", Offset = "0xDD23BC", VA = "0xDD23BC")]
	private void Start()
	{
	}

	[Token(Token = "0x600043A")]
	[Address(RVA = "0xDD2704", Offset = "0xDD2704", VA = "0xDD2704")]
	private void Update()
	{
	}

	[Token(Token = "0x600043B")]
	[Address(RVA = "0xDD2AA4", Offset = "0xDD2AA4", VA = "0xDD2AA4")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x600043C")]
	[Address(RVA = "0xDD2C18", Offset = "0xDD2C18", VA = "0xDD2C18")]
	public void Release()
	{
	}

	[Token(Token = "0x600043D")]
	[Address(RVA = "0xDD2B94", Offset = "0xDD2B94", VA = "0xDD2B94")]
	[IteratorStateMachine(typeof(<FadeToCurrentStyle>d__18))]
	private IEnumerator FadeToCurrentStyle(float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x600043E")]
	[Address(RVA = "0xDD2CFC", Offset = "0xDD2CFC", VA = "0xDD2CFC")]
	[IteratorStateMachine(typeof(<FadeToDefaultPassthrough>d__19))]
	private IEnumerator FadeToDefaultPassthrough(float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0xDD2DD0", Offset = "0xDD2DD0", VA = "0xDD2DD0")]
	public void OnBrightnessChanged(float newValue)
	{
	}

	[Token(Token = "0x6000440")]
	[Address(RVA = "0xDD2DF0", Offset = "0xDD2DF0", VA = "0xDD2DF0")]
	public void OnContrastChanged(float newValue)
	{
	}

	[Token(Token = "0x6000441")]
	[Address(RVA = "0xDD2E10", Offset = "0xDD2E10", VA = "0xDD2E10")]
	public void OnAlphaChanged(float newValue)
	{
	}

	[Token(Token = "0x6000442")]
	[Address(RVA = "0xDD269C", Offset = "0xDD269C", VA = "0xDD269C")]
	private void ShowFullMenu(bool doShow)
	{
	}

	[Token(Token = "0x6000443")]
	[Address(RVA = "0xDD2E44", Offset = "0xDD2E44", VA = "0xDD2E44")]
	public void Cursor(Vector3 cP)
	{
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0xDD2E50", Offset = "0xDD2E50", VA = "0xDD2E50")]
	public void DoColorDrag(bool doDrag)
	{
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0xDD271C", Offset = "0xDD271C", VA = "0xDD271C")]
	public void GetColorFromWheel()
	{
	}

	[Token(Token = "0x6000446")]
	[Address(RVA = "0xDD2E5C", Offset = "0xDD2E5C", VA = "0xDD2E5C")]
	public PassthroughStyler()
	{
	}
}
[Token(Token = "0x20000FB")]
public class PassthroughSurface : MonoBehaviour
{
	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter projectionObject;

	[Token(Token = "0x6000453")]
	[Address(RVA = "0xDD3224", Offset = "0xDD3224", VA = "0xDD3224")]
	private void Start()
	{
	}

	[Token(Token = "0x6000454")]
	[Address(RVA = "0xDD32D8", Offset = "0xDD32D8", VA = "0xDD32D8")]
	public PassthroughSurface()
	{
	}
}
[Token(Token = "0x20000FC")]
public class SceneSampler : MonoBehaviour
{
	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int currentSceneIndex;

	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject displayText;

	[Token(Token = "0x6000455")]
	[Address(RVA = "0xDD32E0", Offset = "0xDD32E0", VA = "0xDD32E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000456")]
	[Address(RVA = "0xDD334C", Offset = "0xDD334C", VA = "0xDD334C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000457")]
	[Address(RVA = "0xDD3640", Offset = "0xDD3640", VA = "0xDD3640")]
	public SceneSampler()
	{
	}
}
[Token(Token = "0x20000FD")]
public class SelectivePassthroughExperience : MonoBehaviour
{
	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject leftMaskObject;

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject rightMaskObject;

	[Token(Token = "0x6000458")]
	[Address(RVA = "0xDD3648", Offset = "0xDD3648", VA = "0xDD3648")]
	private void Update()
	{
	}

	[Token(Token = "0x6000459")]
	[Address(RVA = "0xDD3A9C", Offset = "0xDD3A9C", VA = "0xDD3A9C")]
	public SelectivePassthroughExperience()
	{
	}
}
[Token(Token = "0x20000FE")]
public class SPPquad : MonoBehaviour
{
	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter projectionObject;

	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRInput.Controller controllerHand;

	[Token(Token = "0x600045A")]
	[Address(RVA = "0xDD3AA4", Offset = "0xDD3AA4", VA = "0xDD3AA4")]
	private void Start()
	{
	}

	[Token(Token = "0x600045B")]
	[Address(RVA = "0xDD3D0C", Offset = "0xDD3D0C", VA = "0xDD3D0C")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x600045C")]
	[Address(RVA = "0xDD3D58", Offset = "0xDD3D58", VA = "0xDD3D58")]
	public void Release()
	{
	}

	[Token(Token = "0x600045D")]
	[Address(RVA = "0xDD3D98", Offset = "0xDD3D98", VA = "0xDD3D98")]
	public SPPquad()
	{
	}
}
[Token(Token = "0x20000FF")]
public class BouncingBallLogic : MonoBehaviour
{
	[Token(Token = "0x2000100")]
	[CompilerGenerated]
	private sealed class <PlayPopCallback>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float clipLength;

		[Token(Token = "0x40005C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BouncingBallLogic <>4__this;

		[Token(Token = "0x17000059")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000469")]
			[Address(RVA = "0xDD44B4", Offset = "0xDD44B4", VA = "0xDD44B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600046B")]
			[Address(RVA = "0xDD44FC", Offset = "0xDD44FC", VA = "0xDD44FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000466")]
		[Address(RVA = "0xDD437C", Offset = "0xDD437C", VA = "0xDD437C")]
		[DebuggerHidden]
		public <PlayPopCallback>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6000467")]
		[Address(RVA = "0xDD43BC", Offset = "0xDD43BC", VA = "0xDD43BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000468")]
		[Address(RVA = "0xDD43C0", Offset = "0xDD43C0", VA = "0xDD43C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600046A")]
		[Address(RVA = "0xDD44BC", Offset = "0xDD44BC", VA = "0xDD44BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float TTL;

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioClip pop;

	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioClip bounce;

	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioClip loadball;

	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Material visibleMat;

	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Material hiddenMat;

	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AudioSource audioSource;

	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform centerEyeCamera;

	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool isVisible;

	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float timer;

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool isReleased;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool isReadyForDestroy;

	[Token(Token = "0x600045E")]
	[Address(RVA = "0xDD3DA0", Offset = "0xDD3DA0", VA = "0xDD3DA0")]
	private void OnCollisionEnter()
	{
	}

	[Token(Token = "0x600045F")]
	[Address(RVA = "0xDD3DC4", Offset = "0xDD3DC4", VA = "0xDD3DC4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000460")]
	[Address(RVA = "0xDD3ECC", Offset = "0xDD3ECC", VA = "0xDD3ECC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000461")]
	[Address(RVA = "0xDD3F70", Offset = "0xDD3F70", VA = "0xDD3F70")]
	private void UpdateVisibility()
	{
	}

	[Token(Token = "0x6000462")]
	[Address(RVA = "0xDD41C4", Offset = "0xDD41C4", VA = "0xDD41C4")]
	private void SetVisible(bool setVisible)
	{
	}

	[Token(Token = "0x6000463")]
	[Address(RVA = "0xDD4268", Offset = "0xDD4268", VA = "0xDD4268")]
	public void Release(Vector3 pos, Vector3 vel, Vector3 angVel)
	{
	}

	[Token(Token = "0x6000464")]
	[Address(RVA = "0xDD4140", Offset = "0xDD4140", VA = "0xDD4140")]
	[IteratorStateMachine(typeof(<PlayPopCallback>d__18))]
	private IEnumerator PlayPopCallback(float clipLength)
	{
		return null;
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0xDD43A4", Offset = "0xDD43A4", VA = "0xDD43A4")]
	public BouncingBallLogic()
	{
	}
}
[Token(Token = "0x2000101")]
public class BouncingBallMgr : MonoBehaviour
{
	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform trackingspace;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject rightControllerPivot;

	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private OVRInput.RawButton actionBtn;

	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject ball;

	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject currentBall;

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool ballGrabbed;

	[Token(Token = "0x600046C")]
	[Address(RVA = "0xDD4504", Offset = "0xDD4504", VA = "0xDD4504")]
	private void Update()
	{
	}

	[Token(Token = "0x600046D")]
	[Address(RVA = "0xDD4814", Offset = "0xDD4814", VA = "0xDD4814")]
	public BouncingBallMgr()
	{
	}
}
[Token(Token = "0x2000102")]
[RequireComponent(typeof(OVRSceneAnchor))]
[DefaultExecutionOrder(30)]
public class FurnitureSpawner : MonoBehaviour
{
	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("Add a point at ceiling.")]
	public GameObject RoomLightPrefab;

	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Spawnable> SpawnablePrefabs;

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRSceneAnchor _sceneAnchor;

	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private OVRSemanticClassification _classification;

	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameObject _roomLightRef;

	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _frameCounter;

	[Token(Token = "0x600046E")]
	[Address(RVA = "0xDD481C", Offset = "0xDD481C", VA = "0xDD481C")]
	private void Start()
	{
	}

	[Token(Token = "0x600046F")]
	[Address(RVA = "0xDD4A34", Offset = "0xDD4A34", VA = "0xDD4A34")]
	private void SpawnSpawnable()
	{
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0xDD4EA4", Offset = "0xDD4EA4", VA = "0xDD4EA4")]
	private bool FindValidSpawnable(out Spawnable currentSpawnable)
	{
		return default(bool);
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0xDD48BC", Offset = "0xDD48BC", VA = "0xDD48BC")]
	private void AddRoomLight()
	{
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0xDD50C4", Offset = "0xDD50C4", VA = "0xDD50C4")]
	private void GetVolumeFromTopPlane(Transform plane, Vector2 dimensions, float height, out Vector3 position, out Quaternion rotation, out Vector3 localScale)
	{
	}

	[Token(Token = "0x6000473")]
	[Address(RVA = "0xDD55B0", Offset = "0xDD55B0", VA = "0xDD55B0")]
	public FurnitureSpawner()
	{
	}
}
[Token(Token = "0x2000103")]
public class MyCustomSceneModelLoader : OVRSceneModelLoader
{
	[Token(Token = "0x2000104")]
	[CompilerGenerated]
	private sealed class <DelayedLoad>d__0 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MyCustomSceneModelLoader <>4__this;

		[Token(Token = "0x1700005B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600047B")]
			[Address(RVA = "0xDD57E4", Offset = "0xDD57E4", VA = "0xDD57E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600047D")]
			[Address(RVA = "0xDD582C", Offset = "0xDD582C", VA = "0xDD582C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000478")]
		[Address(RVA = "0xDD562C", Offset = "0xDD562C", VA = "0xDD562C")]
		[DebuggerHidden]
		public <DelayedLoad>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x6000479")]
		[Address(RVA = "0xDD56E4", Offset = "0xDD56E4", VA = "0xDD56E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600047A")]
		[Address(RVA = "0xDD56E8", Offset = "0xDD56E8", VA = "0xDD56E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600047C")]
		[Address(RVA = "0xDD57EC", Offset = "0xDD57EC", VA = "0xDD57EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000474")]
	[Address(RVA = "0xDD55B8", Offset = "0xDD55B8", VA = "0xDD55B8")]
	[IteratorStateMachine(typeof(<DelayedLoad>d__0))]
	private IEnumerator DelayedLoad()
	{
		return null;
	}

	[Token(Token = "0x6000475")]
	[Address(RVA = "0xDD5654", Offset = "0xDD5654", VA = "0xDD5654", Slot = "4")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x6000476")]
	[Address(RVA = "0xDD5674", Offset = "0xDD5674", VA = "0xDD5674", Slot = "6")]
	protected override void OnNoSceneModelToLoad()
	{
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0xDD56DC", Offset = "0xDD56DC", VA = "0xDD56DC")]
	public MyCustomSceneModelLoader()
	{
	}
}
[Token(Token = "0x2000105")]
[RequireComponent(typeof(OVRManager))]
public class PassthroughPlayInEditor : MonoBehaviour
{
	[Token(Token = "0x600047E")]
	[Address(RVA = "0xDD5834", Offset = "0xDD5834", VA = "0xDD5834")]
	private void Awake()
	{
	}

	[Token(Token = "0x600047F")]
	[Address(RVA = "0xDD5838", Offset = "0xDD5838", VA = "0xDD5838")]
	public PassthroughPlayInEditor()
	{
	}
}
[Token(Token = "0x2000106")]
public class RequestCaptureFlow : MonoBehaviour
{
	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Button RequestCaptureBtn;

	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRSceneManager _sceneManager;

	[Token(Token = "0x6000480")]
	[Address(RVA = "0xDD5840", Offset = "0xDD5840", VA = "0xDD5840")]
	private void Start()
	{
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0xDD58B8", Offset = "0xDD58B8", VA = "0xDD58B8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000482")]
	[Address(RVA = "0xDD593C", Offset = "0xDD593C", VA = "0xDD593C")]
	public RequestCaptureFlow()
	{
	}
}
[Token(Token = "0x2000107")]
[ExecuteInEditMode]
public class SimpleResizable : MonoBehaviour
{
	[Token(Token = "0x2000108")]
	public enum Method
	{
		[Token(Token = "0x40005EA")]
		Adapt,
		[Token(Token = "0x40005EB")]
		AdaptWithAsymmetricalPadding,
		[Token(Token = "0x40005EC")]
		Scale,
		[Token(Token = "0x40005ED")]
		None
	}

	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Space(15f)]
	public Method ScalingX;

	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Range(0f, 0.5f)]
	public float PaddingX;

	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Range(-0.5f, 0f)]
	public float PaddingXMax;

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Space(15f)]
	public Method ScalingY;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Range(0f, 0.5f)]
	public float PaddingY;

	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Range(-0.5f, 0f)]
	public float PaddingYMax;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Space(15f)]
	public Method ScalingZ;

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Range(0f, 0.5f)]
	public float PaddingZ;

	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Range(-0.5f, 0f)]
	public float PaddingZMax;

	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Bounds _bounds;

	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Transform _pivotTransform;

	[Token(Token = "0x1700005D")]
	public Vector3 PivotPosition
	{
		[Token(Token = "0x6000483")]
		[Address(RVA = "0xDD594C", Offset = "0xDD594C", VA = "0xDD594C")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700005E")]
	public Vector3 NewSize
	{
		[Token(Token = "0x6000484")]
		[Address(RVA = "0xDD5968", Offset = "0xDD5968", VA = "0xDD5968")]
		[CompilerGenerated]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000485")]
		[Address(RVA = "0xDD5974", Offset = "0xDD5974", VA = "0xDD5974")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x1700005F")]
	public Vector3 DefaultSize
	{
		[Token(Token = "0x6000486")]
		[Address(RVA = "0xDD5980", Offset = "0xDD5980", VA = "0xDD5980")]
		[CompilerGenerated]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000487")]
		[Address(RVA = "0xDD598C", Offset = "0xDD598C", VA = "0xDD598C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000060")]
	public Mesh Mesh
	{
		[Token(Token = "0x6000488")]
		[Address(RVA = "0xDD5998", Offset = "0xDD5998", VA = "0xDD5998")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000489")]
		[Address(RVA = "0xDD59A0", Offset = "0xDD59A0", VA = "0xDD59A0")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x600048A")]
	[Address(RVA = "0xDD59A8", Offset = "0xDD59A8", VA = "0xDD59A8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600048B")]
	[Address(RVA = "0xDD5AE4", Offset = "0xDD5AE4", VA = "0xDD5AE4")]
	public SimpleResizable()
	{
	}
}
[Token(Token = "0x2000109")]
public class SimpleResizer
{
	[Token(Token = "0x600048C")]
	[Address(RVA = "0xDD521C", Offset = "0xDD521C", VA = "0xDD521C")]
	public void CreateResizedObject(Vector3 newSize, GameObject parent, SimpleResizable sourcePrefab)
	{
	}

	[Token(Token = "0x600048D")]
	[Address(RVA = "0xDD5AEC", Offset = "0xDD5AEC", VA = "0xDD5AEC")]
	private Mesh ProcessVertices(SimpleResizable resizable, Vector3 newSize)
	{
		return null;
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0xDD5D70", Offset = "0xDD5D70", VA = "0xDD5D70")]
	private float CalculateNewVertexPosition(SimpleResizable.Method resizeMethod, float currentPosition, float currentSize, float newSize, float padding, float paddingMax, float pivot)
	{
		return default(float);
	}

	[Token(Token = "0x600048F")]
	[Address(RVA = "0xDD5214", Offset = "0xDD5214", VA = "0xDD5214")]
	public SimpleResizer()
	{
	}
}
[Serializable]
[Token(Token = "0x200010A")]
public class Spawnable : ISerializationCallbackReceiver
{
	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public SimpleResizable ResizablePrefab;

	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string ClassificationLabel;

	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private int _editorClassificationIndex;

	[Token(Token = "0x6000490")]
	[Address(RVA = "0xDD5E18", Offset = "0xDD5E18", VA = "0xDD5E18", Slot = "4")]
	public void OnBeforeSerialize()
	{
	}

	[Token(Token = "0x6000491")]
	[Address(RVA = "0xDD5E1C", Offset = "0xDD5E1C", VA = "0xDD5E1C", Slot = "5")]
	public void OnAfterDeserialize()
	{
	}

	[Token(Token = "0x6000492")]
	[Address(RVA = "0xDD6284", Offset = "0xDD6284", VA = "0xDD6284")]
	public Spawnable()
	{
	}
}
[Token(Token = "0x200010B")]
[RequireComponent(typeof(OVRSceneAnchor))]
public class VolumeAndPlaneSwitcher : MonoBehaviour
{
	[Token(Token = "0x200010C")]
	public enum GeometryType
	{
		[Token(Token = "0x40005F5")]
		Plane,
		[Token(Token = "0x40005F6")]
		Volume
	}

	[Serializable]
	[Token(Token = "0x200010D")]
	public struct LabelGeometryPair
	{
		[Token(Token = "0x40005F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string label;

		[Token(Token = "0x40005F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GeometryType desiredGeometryType;
	}

	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRSceneAnchor planePrefab;

	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRSceneAnchor volumePrefab;

	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<LabelGeometryPair> desiredSwitches;

	[Token(Token = "0x6000494")]
	[Address(RVA = "0xDD62DC", Offset = "0xDD62DC", VA = "0xDD62DC")]
	private void ReplaceAnchor(OVRSceneAnchor prefab, Vector3 position, Quaternion rotation, Vector3 localScale)
	{
	}

	[Token(Token = "0x6000495")]
	[Address(RVA = "0xDD6708", Offset = "0xDD6708", VA = "0xDD6708")]
	private void Start()
	{
	}

	[Token(Token = "0x6000496")]
	[Address(RVA = "0xDD7040", Offset = "0xDD7040", VA = "0xDD7040")]
	private void GetVolumeFromTopPlane(Transform plane, Vector2 dimensions, float height, out Vector3 position, out Quaternion rotation, out Vector3 localScale)
	{
	}

	[Token(Token = "0x6000497")]
	[Address(RVA = "0xDD6F18", Offset = "0xDD6F18", VA = "0xDD6F18")]
	private void GetTopPlaneFromVolume(Transform volume, Vector3 dimensions, out Vector3 position, out Quaternion rotation, out Vector3 localScale)
	{
	}

	[Token(Token = "0x6000498")]
	[Address(RVA = "0xDD70C0", Offset = "0xDD70C0", VA = "0xDD70C0")]
	public VolumeAndPlaneSwitcher()
	{
	}
}
[Token(Token = "0x200010E")]
[RequireComponent(typeof(OVRSpatialAnchor))]
public class Anchor : MonoBehaviour
{
	[Token(Token = "0x200010F")]
	[CompilerGenerated]
	private sealed class <Start>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400060C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400060D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400060E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Anchor <>4__this;

		[Token(Token = "0x17000062")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004AC")]
			[Address(RVA = "0xDD7E88", Offset = "0xDD7E88", VA = "0xDD7E88", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000063")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004AE")]
			[Address(RVA = "0xDD7ED0", Offset = "0xDD7ED0", VA = "0xDD7ED0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004A9")]
		[Address(RVA = "0xDD72BC", Offset = "0xDD72BC", VA = "0xDD72BC")]
		[DebuggerHidden]
		public <Start>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x60004AA")]
		[Address(RVA = "0xDD7D0C", Offset = "0xDD7D0C", VA = "0xDD7D0C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004AB")]
		[Address(RVA = "0xDD7D10", Offset = "0xDD7D10", VA = "0xDD7D10", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004AD")]
		[Address(RVA = "0xDD7E90", Offset = "0xDD7E90", VA = "0xDD7E90", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005F9")]
	public const string NumUuidsPlayerPref = "numUuids";

	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[FormerlySerializedAs("canvas_")]
	private Canvas _canvas;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[FormerlySerializedAs("pivot_")]
	[SerializeField]
	private Transform _pivot;

	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[FormerlySerializedAs("anchorMenu_")]
	[SerializeField]
	private GameObject _anchorMenu;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _isSelected;

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool _isHovered;

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[FormerlySerializedAs("anchorName_")]
	private TextMeshProUGUI _anchorName;

	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[FormerlySerializedAs("saveIcon_")]
	private GameObject _saveIcon;

	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	[FormerlySerializedAs("labelImage_")]
	private Image _labelImage;

	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	[FormerlySerializedAs("labelBaseColor_")]
	private Color _labelBaseColor;

	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	[FormerlySerializedAs("labelHighlightColor_")]
	private Color _labelHighlightColor;

	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[FormerlySerializedAs("labelSelectedColor_")]
	[SerializeField]
	private Color _labelSelectedColor;

	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[FormerlySerializedAs("uiManager_")]
	[SerializeField]
	private AnchorUIManager _uiManager;

	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[FormerlySerializedAs("renderers_")]
	[SerializeField]
	private MeshRenderer[] _renderers;

	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int _menuIndex;

	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[FormerlySerializedAs("buttonList_")]
	[SerializeField]
	private List<Button> _buttonList;

	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Button _selectedButton;

	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private OVRSpatialAnchor _spatialAnchor;

	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private GameObject _icon;

	[Token(Token = "0x17000061")]
	public bool ShowSaveIcon
	{
		[Token(Token = "0x600049F")]
		[Address(RVA = "0xDD7768", Offset = "0xDD7768", VA = "0xDD7768")]
		set
		{
		}
	}

	[Token(Token = "0x6000499")]
	[Address(RVA = "0xDD70C8", Offset = "0xDD70C8", VA = "0xDD70C8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0xDD7248", Offset = "0xDD7248", VA = "0xDD7248")]
	[IteratorStateMachine(typeof(<Start>d__20))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600049B")]
	[Address(RVA = "0xDD72E4", Offset = "0xDD72E4", VA = "0xDD72E4")]
	private void Update()
	{
	}

	[Token(Token = "0x600049C")]
	[Address(RVA = "0xDD755C", Offset = "0xDD755C", VA = "0xDD755C")]
	public void OnSaveLocalButtonPressed()
	{
	}

	[Token(Token = "0x600049D")]
	[Address(RVA = "0xDD762C", Offset = "0xDD762C", VA = "0xDD762C")]
	public void OnHideButtonPressed()
	{
	}

	[Token(Token = "0x600049E")]
	[Address(RVA = "0xDD7698", Offset = "0xDD7698", VA = "0xDD7698")]
	public void OnEraseButtonPressed()
	{
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0xDD7788", Offset = "0xDD7788", VA = "0xDD7788")]
	public void OnHoverStart()
	{
	}

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0xDD78A4", Offset = "0xDD78A4", VA = "0xDD78A4")]
	public void OnHoverEnd()
	{
	}

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0xDD79AC", Offset = "0xDD79AC", VA = "0xDD79AC")]
	public void OnSelect()
	{
	}

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0xDD7334", Offset = "0xDD7334", VA = "0xDD7334")]
	private void BillboardPanel(Transform panel)
	{
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0xDD7468", Offset = "0xDD7468", VA = "0xDD7468")]
	private void HandleMenuNavigation()
	{
	}

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0xDD7A7C", Offset = "0xDD7A7C", VA = "0xDD7A7C")]
	private void NavigateToIndexInMenu(bool moveNext)
	{
	}

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0xDD7BB4", Offset = "0xDD7BB4", VA = "0xDD7BB4")]
	public Anchor()
	{
	}
}
[Token(Token = "0x2000110")]
[RequireComponent(typeof(SpatialAnchorLoader))]
public class AnchorUIManager : MonoBehaviour
{
	[Token(Token = "0x2000111")]
	public enum AnchorMode
	{
		[Token(Token = "0x4000622")]
		Create,
		[Token(Token = "0x4000623")]
		Select
	}

	[Token(Token = "0x2000112")]
	private delegate void PrimaryPressDelegate();

	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AnchorUIManager Instance;

	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[FormerlySerializedAs("createModeButton_")]
	private GameObject _createModeButton;

	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[FormerlySerializedAs("selectModeButton_")]
	private GameObject _selectModeButton;

	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[FormerlySerializedAs("trackedDevice_")]
	[SerializeField]
	private Transform _trackedDevice;

	[Token(Token = "0x4000613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _raycastOrigin;

	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _drawRaycast;

	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[FormerlySerializedAs("lineRenderer_")]
	[SerializeField]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x4000616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Anchor _hoveredAnchor;

	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Anchor _selectedAnchor;

	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AnchorMode _mode;

	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	[FormerlySerializedAs("buttonList_")]
	private List<Button> _buttonList;

	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int _menuIndex;

	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Button _selectedButton;

	[Token(Token = "0x400061C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Anchor _anchorPrefab;

	[Token(Token = "0x400061D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	[FormerlySerializedAs("placementPreview_")]
	private GameObject _placementPreview;

	[Token(Token = "0x400061E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	[FormerlySerializedAs("anchorPlacementTransform_")]
	private Transform _anchorPlacementTransform;

	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private PrimaryPressDelegate _primaryPressDelegate;

	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool _isFocused;

	[Token(Token = "0x17000064")]
	public Anchor AnchorPrefab
	{
		[Token(Token = "0x60004AF")]
		[Address(RVA = "0xDD7ED8", Offset = "0xDD7ED8", VA = "0xDD7ED8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0xDD7EE0", Offset = "0xDD7EE0", VA = "0xDD7EE0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0xDD7FAC", Offset = "0xDD7FAC", VA = "0xDD7FAC")]
	private void Start()
	{
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0xDD80FC", Offset = "0xDD80FC", VA = "0xDD80FC")]
	private void Update()
	{
	}

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0xDD856C", Offset = "0xDD856C", VA = "0xDD856C")]
	public void OnCreateModeButtonPressed()
	{
	}

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0xDD85D8", Offset = "0xDD85D8", VA = "0xDD85D8")]
	public void OnLoadAnchorsButtonPressed()
	{
	}

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0xDD8094", Offset = "0xDD8094", VA = "0xDD8094")]
	private void ToggleCreateMode()
	{
	}

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0xDD8860", Offset = "0xDD8860", VA = "0xDD8860")]
	private void StartPlacementMode()
	{
	}

	[Token(Token = "0x60004B7")]
	[Address(RVA = "0xDD88E8", Offset = "0xDD88E8", VA = "0xDD88E8")]
	private void EndPlacementMode()
	{
	}

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0xDD8908", Offset = "0xDD8908", VA = "0xDD8908")]
	private void StartSelectMode()
	{
	}

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0xDD8840", Offset = "0xDD8840", VA = "0xDD8840")]
	private void EndSelectMode()
	{
	}

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0xDD8478", Offset = "0xDD8478", VA = "0xDD8478")]
	private void HandleMenuNavigation()
	{
	}

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0xDD8B08", Offset = "0xDD8B08", VA = "0xDD8B08")]
	private void NavigateToIndexInMenu(bool moveNext)
	{
	}

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0xDD8990", Offset = "0xDD8990", VA = "0xDD8990")]
	private void ShowAnchorPreview()
	{
	}

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0xDD8A7C", Offset = "0xDD8A7C", VA = "0xDD8A7C")]
	private void HideAnchorPreview()
	{
	}

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0xDD8C08", Offset = "0xDD8C08", VA = "0xDD8C08")]
	private void PlaceAnchor()
	{
	}

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0xDD8A9C", Offset = "0xDD8A9C", VA = "0xDD8A9C")]
	private void ShowRaycastLine()
	{
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0xDD8AD4", Offset = "0xDD8AD4", VA = "0xDD8AD4")]
	private void HideRaycastLine()
	{
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0xDD81FC", Offset = "0xDD81FC", VA = "0xDD81FC")]
	private void ControllerRaycast()
	{
	}

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0xDD8CF4", Offset = "0xDD8CF4", VA = "0xDD8CF4")]
	private void HoverAnchor(Anchor anchor)
	{
	}

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0xDD8D1C", Offset = "0xDD8D1C", VA = "0xDD8D1C")]
	private void UnhoverAnchor()
	{
	}

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0xDD8DAC", Offset = "0xDD8DAC", VA = "0xDD8DAC")]
	private void SelectAnchor()
	{
	}

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0xDD8EF4", Offset = "0xDD8EF4", VA = "0xDD8EF4")]
	public AnchorUIManager()
	{
	}
}
[Token(Token = "0x2000113")]
public class SpatialAnchorLoader : MonoBehaviour
{
	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private OVRSpatialAnchor _anchorPrefab;

	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Action<OVRSpatialAnchor.UnboundAnchor, bool> _onLoadAnchor;

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0xDD862C", Offset = "0xDD862C", VA = "0xDD862C")]
	public void LoadAnchorsByUuid()
	{
	}

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0xDD90B0", Offset = "0xDD90B0", VA = "0xDD90B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0xDD8FD0", Offset = "0xDD8FD0", VA = "0xDD8FD0")]
	private void Load(OVRSpatialAnchor.LoadOptions options)
	{
	}

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0xDD9134", Offset = "0xDD9134", VA = "0xDD9134")]
	private void OnLocalized(OVRSpatialAnchor.UnboundAnchor unboundAnchor, bool success)
	{
	}

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0xDD8F44", Offset = "0xDD8F44", VA = "0xDD8F44")]
	private static void Log(string message)
	{
	}

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0xDD92E4", Offset = "0xDD92E4", VA = "0xDD92E4")]
	public SpatialAnchorLoader()
	{
	}
}
[Token(Token = "0x2000114")]
public class StartMenu : MonoBehaviour
{
	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVROverlay overlay;

	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVROverlay text;

	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig vrRig;

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0xDD941C", Offset = "0xDD941C", VA = "0xDD941C")]
	private void Start()
	{
	}

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0xDD9630", Offset = "0xDD9630", VA = "0xDD9630")]
	private void LoadScene(int idx)
	{
	}

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0xDD9734", Offset = "0xDD9734", VA = "0xDD9734")]
	public StartMenu()
	{
	}
}
[Token(Token = "0x2000116")]
[RequireComponent(typeof(Collider))]
public class ColliderButtonInteraction : MonoBehaviour
{
	[Token(Token = "0x60004D6")]
	[Address(RVA = "0xDD9758", Offset = "0xDD9758", VA = "0xDD9758")]
	private void Reset()
	{
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0xDD97B4", Offset = "0xDD97B4", VA = "0xDD97B4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0xDD9810", Offset = "0xDD9810", VA = "0xDD9810")]
	public ColliderButtonInteraction()
	{
	}
}
[Token(Token = "0x2000117")]
public class ColliderButtonSelector : MonoBehaviour
{
	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Chooser chooser;

	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool loopAround;

	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public KeyCode previousKey;

	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public KeyCode nextKey;

	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ColliderButton[] colliderButtons;

	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _index;

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0xDD9818", Offset = "0xDD9818", VA = "0xDD9818")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0xDD98C8", Offset = "0xDD98C8", VA = "0xDD98C8")]
	private void Reset()
	{
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0xDD9920", Offset = "0xDD9920", VA = "0xDD9920")]
	private void Update()
	{
	}

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0xDD9824", Offset = "0xDD9824", VA = "0xDD9824")]
	public void Next()
	{
	}

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0xDD9964", Offset = "0xDD9964", VA = "0xDD9964")]
	public void Previous()
	{
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0xDD9A00", Offset = "0xDD9A00", VA = "0xDD9A00")]
	public ColliderButtonSelector()
	{
	}
}
[Token(Token = "0x2000118")]
[ExecuteInEditMode]
[RequireComponent(typeof(Spline))]
public class SplineControlledParticleSystem : MonoBehaviour
{
	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float startRadius;

	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float endRadius;

	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ParticleSystem _particleSystem;

	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Spline _spline;

	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ParticleSystem.Particle[] _particles;

	[Token(Token = "0x4000636")]
	private const float _previousDiff = 0.01f;

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0xDD9A14", Offset = "0xDD9A14", VA = "0xDD9A14")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0xDD9A6C", Offset = "0xDD9A6C", VA = "0xDD9A6C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0xDDA0A4", Offset = "0xDDA0A4", VA = "0xDDA0A4")]
	public SplineControlledParticleSystem()
	{
	}
}
[Token(Token = "0x2000119")]
public class ActionAssetEnabler : MonoBehaviour
{
	[Token(Token = "0x4000637")]
	private const string RightHand_Id = "fd87d126-5dc2-445c-82df-1abc6c9f8076";

	[Token(Token = "0x4000638")]
	private const string LeftHand_Id = "272f6d14-89ba-496f-b7ff-215263d3219f";

	[Token(Token = "0x4000639")]
	private const string HMD_Id = "21d522e0-0295-43ef-b60a-3b355794717b";

	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private InputActionAsset m_ActionAsset;

	[Token(Token = "0x17000065")]
	public InputActionAsset actionAsset
	{
		[Token(Token = "0x60004E2")]
		[Address(RVA = "0xDDA0AC", Offset = "0xDDA0AC", VA = "0xDDA0AC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60004E3")]
		[Address(RVA = "0xDDA0B4", Offset = "0xDDA0B4", VA = "0xDDA0B4")]
		set
		{
		}
	}

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0xDDA0BC", Offset = "0xDDA0BC", VA = "0xDDA0BC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0xDDA140", Offset = "0xDDA140", VA = "0xDDA140")]
	public InputActionMap GetHandInputMap(HandEnum _handEnum)
	{
		return null;
	}

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0xDDA1B8", Offset = "0xDDA1B8", VA = "0xDDA1B8")]
	public InputActionMap GetHMDInputMap()
	{
		return null;
	}

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0xDDA210", Offset = "0xDDA210", VA = "0xDDA210")]
	public ActionAssetEnabler()
	{
	}
}
[Token(Token = "0x200011A")]
public class ActivateInputLineCollider : MonoBehaviour
{
	[Token(Token = "0x60004E8")]
	[Address(RVA = "0xDDA218", Offset = "0xDDA218", VA = "0xDDA218")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60004E9")]
	[Address(RVA = "0xDDA240", Offset = "0xDDA240", VA = "0xDDA240")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60004EA")]
	[Address(RVA = "0xDDA268", Offset = "0xDDA268", VA = "0xDDA268")]
	public ActivateInputLineCollider()
	{
	}
}
[Token(Token = "0x200011B")]
public class AutoDestroy : MonoBehaviour
{
	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float lifeSpan;

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float timestamp;

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0xDDA270", Offset = "0xDDA270", VA = "0xDDA270")]
	private void Start()
	{
	}

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0xDDA28C", Offset = "0xDDA28C", VA = "0xDDA28C")]
	private void Update()
	{
	}

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0xDDA31C", Offset = "0xDDA31C", VA = "0xDDA31C")]
	public AutoDestroy()
	{
	}
}
[Token(Token = "0x200011C")]
public class ButtonTween : MonoBehaviour
{
	[Token(Token = "0x200011D")]
	[CompilerGenerated]
	private sealed class <SetExitCollider>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400064A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400064B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ButtonTween <>4__this;

		[Token(Token = "0x17000066")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000500")]
			[Address(RVA = "0xDDAF14", Offset = "0xDDAF14", VA = "0xDDAF14", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000067")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000502")]
			[Address(RVA = "0xDDAF5C", Offset = "0xDDAF5C", VA = "0xDDAF5C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004FD")]
		[Address(RVA = "0xDDAB78", Offset = "0xDDAB78", VA = "0xDDAB78")]
		[DebuggerHidden]
		public <SetExitCollider>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x60004FE")]
		[Address(RVA = "0xDDAE00", Offset = "0xDDAE00", VA = "0xDDAE00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004FF")]
		[Address(RVA = "0xDDAE04", Offset = "0xDDAE04", VA = "0xDDAE04", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000501")]
		[Address(RVA = "0xDDAF1C", Offset = "0xDDAF1C", VA = "0xDDAF1C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Target;

	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 OGScale;

	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 OGPosition;

	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 OGBoxScale;

	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 TargetScale;

	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 TargetScale2;

	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private DG.Tweening.Tween scaling;

	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private DG.Tweening.Tween shaking;

	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float shakeStrength;

	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float shakeRandomness;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int cursorsHovering;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool BlockReturnToScaleOne;

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0xDDA32C", Offset = "0xDDA32C", VA = "0xDDA32C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0xDDA564", Offset = "0xDDA564", VA = "0xDDA564")]
	private void Start()
	{
	}

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0xDDA708", Offset = "0xDDA708", VA = "0xDDA708")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0xDDA7C8", Offset = "0xDDA7C8", VA = "0xDDA7C8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0xDDA8C0", Offset = "0xDDA8C0", VA = "0xDDA8C0")]
	public void OnHover()
	{
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0xDDAB04", Offset = "0xDDAB04", VA = "0xDDAB04")]
	[IteratorStateMachine(typeof(<SetExitCollider>d__17))]
	private IEnumerator SetExitCollider()
	{
		return null;
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0xDDABA0", Offset = "0xDDABA0", VA = "0xDDABA0")]
	public void Return()
	{
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0xDDAD48", Offset = "0xDDAD48", VA = "0xDDAD48")]
	public void ResetCursors()
	{
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0xDDAD50", Offset = "0xDDAD50", VA = "0xDDAD50")]
	public void CursorOut()
	{
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0xDDAD60", Offset = "0xDDAD60", VA = "0xDDAD60")]
	public void SetScale1(Vector3 _newScale)
	{
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0xDDAD6C", Offset = "0xDDAD6C", VA = "0xDDAD6C")]
	public void SetScale2(Vector3 _newScale)
	{
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0xDDAD78", Offset = "0xDDAD78", VA = "0xDDAD78")]
	public void SetShake(float strength, float randomness)
	{
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0xDDA76C", Offset = "0xDDA76C", VA = "0xDDA76C")]
	public void KillTweens()
	{
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0xDDAD80", Offset = "0xDDAD80", VA = "0xDDAD80")]
	public ButtonTween()
	{
	}
}
[Token(Token = "0x200011E")]
public class ChangeFresnel : MonoBehaviour
{
	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color[] esceneFresnelColor;

	[Token(Token = "0x6000503")]
	[Address(RVA = "0xDDAF64", Offset = "0xDDAF64", VA = "0xDDAF64")]
	private void Start()
	{
	}

	[Token(Token = "0x6000504")]
	[Address(RVA = "0xDDB534", Offset = "0xDDB534", VA = "0xDDB534")]
	public void ActivateFresnelCharged()
	{
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0xDDB974", Offset = "0xDDB974", VA = "0xDDB974")]
	public ChangeFresnel()
	{
	}
}
[Token(Token = "0x200011F")]
public class CinematicCamera : MonoBehaviour
{
	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float smoothValue;

	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private Vector3 positionOffset;

	[Token(Token = "0x6000506")]
	[Address(RVA = "0xDDB97C", Offset = "0xDDB97C", VA = "0xDDB97C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000507")]
	[Address(RVA = "0xDDBBE8", Offset = "0xDDBBE8", VA = "0xDDBBE8")]
	public CinematicCamera()
	{
	}
}
[Token(Token = "0x2000120")]
public class ComboLedProp : MonoBehaviour
{
	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material base_material;

	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material activated_material;

	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool is_feedback_activated;

	[Token(Token = "0x6000508")]
	[Address(RVA = "0xDDBC50", Offset = "0xDDBC50", VA = "0xDDBC50")]
	private void Start()
	{
	}

	[Token(Token = "0x6000509")]
	[Address(RVA = "0xDDBC54", Offset = "0xDDBC54", VA = "0xDDBC54")]
	private void Update()
	{
	}

	[Token(Token = "0x600050A")]
	[Address(RVA = "0xDDBC58", Offset = "0xDDBC58", VA = "0xDDBC58")]
	public void ActivateFeedBack()
	{
	}

	[Token(Token = "0x600050B")]
	[Address(RVA = "0xDDBCC0", Offset = "0xDDBCC0", VA = "0xDDBCC0")]
	public void DesactivateFeedback()
	{
	}

	[Token(Token = "0x600050C")]
	[Address(RVA = "0xDDBD24", Offset = "0xDDBD24", VA = "0xDDBD24")]
	public ComboLedProp()
	{
	}
}
[Token(Token = "0x2000121")]
public class ComboMachineProp : MonoBehaviour
{
	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool is_feedback_activated;

	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<ComboSpotlightProp> spotlightPropList;

	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<ComboLedProp> ledPropsList;

	[Token(Token = "0x600050D")]
	[Address(RVA = "0xDDBD2C", Offset = "0xDDBD2C", VA = "0xDDBD2C")]
	private void Start()
	{
	}

	[Token(Token = "0x600050E")]
	[Address(RVA = "0xDDBD30", Offset = "0xDDBD30", VA = "0xDDBD30")]
	private void Update()
	{
	}

	[Token(Token = "0x600050F")]
	[Address(RVA = "0xDDBD70", Offset = "0xDDBD70", VA = "0xDDBD70")]
	public void ActivateFeedBack()
	{
	}

	[Token(Token = "0x6000510")]
	[Address(RVA = "0xDDBE64", Offset = "0xDDBE64", VA = "0xDDBE64")]
	public void DesactivateFeedback()
	{
	}

	[Token(Token = "0x6000511")]
	[Address(RVA = "0xDDBFB8", Offset = "0xDDBFB8", VA = "0xDDBFB8")]
	public ComboMachineProp()
	{
	}
}
[Token(Token = "0x2000122")]
public class ComboSpotlightProp : MonoBehaviour
{
	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject godLight;

	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool is_feedback_activated;

	[Token(Token = "0x6000512")]
	[Address(RVA = "0xDDBFC0", Offset = "0xDDBFC0", VA = "0xDDBFC0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000513")]
	[Address(RVA = "0xDDBFC4", Offset = "0xDDBFC4", VA = "0xDDBFC4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000514")]
	[Address(RVA = "0xDDBF54", Offset = "0xDDBF54", VA = "0xDDBF54")]
	public void ActivateFeedBack()
	{
	}

	[Token(Token = "0x6000515")]
	[Address(RVA = "0xDDBF8C", Offset = "0xDDBF8C", VA = "0xDDBF8C")]
	public void DesactivateFeedback()
	{
	}

	[Token(Token = "0x6000516")]
	[Address(RVA = "0xDDBFC8", Offset = "0xDDBFC8", VA = "0xDDBFC8")]
	public ComboSpotlightProp()
	{
	}
}
[Token(Token = "0x2000123")]
public class ContentBlock : MonoBehaviour
{
	[Token(Token = "0x2000124")]
	public enum ContentBlockTypeEnum
	{
		[Token(Token = "0x4000676")]
		NONE,
		[Token(Token = "0x4000677")]
		SONG_CHALLENGE,
		[Token(Token = "0x4000678")]
		SONG_CAMPAIGN,
		[Token(Token = "0x4000679")]
		CHAPTER_CAMPAING,
		[Token(Token = "0x400067A")]
		CHAPTER_TO_UNLOCK,
		[Token(Token = "0x400067B")]
		UNLOCK_MORE_SONGS
	}

	[Token(Token = "0x2000125")]
	[CompilerGenerated]
	private sealed class <PickSongAfterTime>d__41 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400067C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400067D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400067E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ContentBlock <>4__this;

		[Token(Token = "0x17000068")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000530")]
			[Address(RVA = "0xDDE6E4", Offset = "0xDDE6E4", VA = "0xDDE6E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000069")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000532")]
			[Address(RVA = "0xDDE72C", Offset = "0xDDE72C", VA = "0xDDE72C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600052D")]
		[Address(RVA = "0xDDE214", Offset = "0xDDE214", VA = "0xDDE214")]
		[DebuggerHidden]
		public <PickSongAfterTime>d__41(int <>1__state)
		{
		}

		[Token(Token = "0x600052E")]
		[Address(RVA = "0xDDE5AC", Offset = "0xDDE5AC", VA = "0xDDE5AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600052F")]
		[Address(RVA = "0xDDE5B0", Offset = "0xDDE5B0", VA = "0xDDE5B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000531")]
		[Address(RVA = "0xDDE6EC", Offset = "0xDDE6EC", VA = "0xDDE6EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ContentBlockTypeEnum type;

	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int TrackID;

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Song _Info;

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int Id_SongsInfoCampaign;

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ChapterBase _ChapterInfo;

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool isActive;

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Escenario sceneToLoad;

	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool is_initialized;

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Coroutine pickSongDelay;

	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Sprite[] Rank;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Sprite[] BGFrames;

	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Sprite[] Frames;

	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Sprite[] Stars;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Sprite[] LockSprites;

	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[Header("Chapter")]
	[SerializeField]
	private GameObject Chapter;

	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private TextMeshProUGUI ChapterText;

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private TextMeshProUGUI StarsChapterText;

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	[Header("ChapterToUnlock")]
	private GameObject ChapterToUnlock;

	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private TextMeshProUGUI ChapterToUnlockText;

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	[Header("Song")]
	private GameObject Song;

	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private TextMeshProUGUI SongName;

	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private TextMeshProUGUI AutorName;

	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private TextMeshProUGUI Duration;

	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private TextMeshProUGUI Difficulty;

	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private GameObject StarsParent;

	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private GameObject Variation;

	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private Image Note;

	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private Image Background;

	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private Image Frame;

	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private GameObject Lock;

	[Token(Token = "0x6000517")]
	[Address(RVA = "0xDDBFD0", Offset = "0xDDBFD0", VA = "0xDDBFD0")]
	public void Start()
	{
	}

	[Token(Token = "0x6000518")]
	[Address(RVA = "0xDDC160", Offset = "0xDDC160", VA = "0xDDC160")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000519")]
	[Address(RVA = "0xDDC2F0", Offset = "0xDDC2F0", VA = "0xDDC2F0")]
	public void InitChallenge(Song _info, bool _ChapterHeader, bool isVisible)
	{
	}

	[Token(Token = "0x600051A")]
	[Address(RVA = "0xDDC624", Offset = "0xDDC624", VA = "0xDDC624")]
	public void SetChallengeInfo()
	{
	}

	[Token(Token = "0x600051B")]
	[Address(RVA = "0xDDD16C", Offset = "0xDDD16C", VA = "0xDDD16C")]
	public void CheckPosition()
	{
	}

	[Token(Token = "0x600051C")]
	[Address(RVA = "0xDDD91C", Offset = "0xDDD91C", VA = "0xDDD91C")]
	public void InitCampaignSong(int _Id_SongsInfoCampaign, Song _info, bool isVisible)
	{
	}

	[Token(Token = "0x600051D")]
	[Address(RVA = "0xDDD2AC", Offset = "0xDDD2AC", VA = "0xDDD2AC")]
	public void SetCampaingInfo()
	{
	}

	[Token(Token = "0x600051E")]
	[Address(RVA = "0xDDDA08", Offset = "0xDDDA08", VA = "0xDDDA08")]
	public void InitCampaignChapter(ChapterBase _info)
	{
	}

	[Token(Token = "0x600051F")]
	[Address(RVA = "0xDDDB18", Offset = "0xDDDB18", VA = "0xDDDB18")]
	public void SetChapterStarsCount(byte _starsCount, byte _songsCount)
	{
	}

	[Token(Token = "0x6000520")]
	[Address(RVA = "0xDDDC14", Offset = "0xDDDC14", VA = "0xDDDC14")]
	public void InitCampaignHasToUnlock(ChapterBase _info)
	{
	}

	[Token(Token = "0x6000521")]
	[Address(RVA = "0xDDDF04", Offset = "0xDDDF04", VA = "0xDDDF04")]
	private void ActualizeDifficulty()
	{
	}

	[Token(Token = "0x6000522")]
	[Address(RVA = "0xDDE1A0", Offset = "0xDDE1A0", VA = "0xDDE1A0")]
	[IteratorStateMachine(typeof(<PickSongAfterTime>d__41))]
	private IEnumerator PickSongAfterTime()
	{
		return null;
	}

	[Token(Token = "0x6000523")]
	[Address(RVA = "0xDDE23C", Offset = "0xDDE23C", VA = "0xDDE23C")]
	private void ChangeTrack()
	{
	}

	[Token(Token = "0x6000524")]
	[Address(RVA = "0xDDCD88", Offset = "0xDDCD88", VA = "0xDDCD88")]
	private Sprite GetRankSprite(Ranking _rank)
	{
		return null;
	}

	[Token(Token = "0x6000525")]
	[Address(RVA = "0xDDCE88", Offset = "0xDDCE88", VA = "0xDDCE88")]
	private Sprite GetDifficultyBGFrame()
	{
		return null;
	}

	[Token(Token = "0x6000526")]
	[Address(RVA = "0xDDCFC8", Offset = "0xDDCFC8", VA = "0xDDCFC8")]
	private Sprite GetDifficultyFrame()
	{
		return null;
	}

	[Token(Token = "0x6000527")]
	[Address(RVA = "0xDDD10C", Offset = "0xDDD10C", VA = "0xDDD10C")]
	private void GreyBGsImage()
	{
	}

	[Token(Token = "0x6000528")]
	[Address(RVA = "0xDDE278", Offset = "0xDDE278", VA = "0xDDE278")]
	private void WhiteBGsImage()
	{
	}

	[Token(Token = "0x6000529")]
	[Address(RVA = "0xDDE2D8", Offset = "0xDDE2D8", VA = "0xDDE2D8")]
	public void PickSong()
	{
	}

	[Token(Token = "0x600052A")]
	[Address(RVA = "0xDDD98C", Offset = "0xDDD98C", VA = "0xDDD98C")]
	private SongInfoCampaign GetSongInfoCampaign(int _Id_SongsInfoCampaign)
	{
		return null;
	}

	[Token(Token = "0x600052B")]
	[Address(RVA = "0xDDE59C", Offset = "0xDDE59C", VA = "0xDDE59C")]
	public Song GetSongInfo()
	{
		return null;
	}

	[Token(Token = "0x600052C")]
	[Address(RVA = "0xDDE5A4", Offset = "0xDDE5A4", VA = "0xDDE5A4")]
	public ContentBlock()
	{
	}
}
[Token(Token = "0x2000126")]
public class AchievementsController : MonoBehaviour
{
	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AchievementsController instance;

	[Token(Token = "0x6000533")]
	[Address(RVA = "0xDDE734", Offset = "0xDDE734", VA = "0xDDE734")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000534")]
	[Address(RVA = "0xDDE800", Offset = "0xDDE800", VA = "0xDDE800")]
	private int GetPSNTrophyID(string _achievementReference)
	{
		return default(int);
	}

	[Token(Token = "0x6000535")]
	[Address(RVA = "0xDDEE2C", Offset = "0xDDEE2C", VA = "0xDDEE2C")]
	private void UnlockPSNTrophy(int trophyID)
	{
	}

	[Token(Token = "0x6000536")]
	[Address(RVA = "0xDDEE30", Offset = "0xDDEE30", VA = "0xDDEE30")]
	public void UnlockAchievement(string _achievementReference)
	{
	}

	[Token(Token = "0x6000537")]
	[Address(RVA = "0xDDEECC", Offset = "0xDDEECC", VA = "0xDDEECC")]
	public AchievementsController()
	{
	}
}
[Token(Token = "0x2000127")]
public class CustomChallengeController : MonoBehaviour
{
	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject StageButtons;

	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Material[] StageMat;

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TextMeshProUGUI StageText;

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject StageName;

	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject BossWarning;

	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject VariationObjects;

	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject RankingObjects;

	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject RankingFrame;

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject VariationsBtn;

	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private GameObject[] VariationsList;

	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Sprite[] VariationsSpriteList;

	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private string[] VariationsKeysList;

	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Sprite[] EntryFrames;

	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private GameObject VariationsMessage;

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private GameObject ScrollBar;

	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private GameObject ScrollBarUp;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private GameObject ScrollBarDown;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private GameObject CancelBtn;

	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool hasPickedStage;

	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
	private bool pickedBoss;

	[Token(Token = "0x4000694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private int lastStageID;

	[Token(Token = "0x4000695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int lastVariationID;

	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private Vector3 animButtonPosition;

	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float final_pag_scroll_speed;

	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float final_axis_scroll_speed;

	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool variationsScreen;

	[Token(Token = "0x6000538")]
	[Address(RVA = "0xDDEED4", Offset = "0xDDEED4", VA = "0xDDEED4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000539")]
	[Address(RVA = "0xDDF000", Offset = "0xDDF000", VA = "0xDDF000")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600053A")]
	[Address(RVA = "0xDDF0F8", Offset = "0xDDF0F8", VA = "0xDDF0F8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600053B")]
	[Address(RVA = "0xDDF9E4", Offset = "0xDDF9E4", VA = "0xDDF9E4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600053C")]
	[Address(RVA = "0xDDFA24", Offset = "0xDDFA24", VA = "0xDDFA24")]
	private void ActivateButtons()
	{
	}

	[Token(Token = "0x600053D")]
	[Address(RVA = "0xDDFBDC", Offset = "0xDDFBDC", VA = "0xDDFBDC")]
	private void DesactivateButtons()
	{
	}

	[Token(Token = "0x600053E")]
	[Address(RVA = "0xDDF1A4", Offset = "0xDDF1A4", VA = "0xDDF1A4")]
	private void EnableButtons()
	{
	}

	[Token(Token = "0x600053F")]
	[Address(RVA = "0xDDFD68", Offset = "0xDDFD68", VA = "0xDDFD68")]
	private void DisableButtons()
	{
	}

	[Token(Token = "0x6000540")]
	[Address(RVA = "0xDE001C", Offset = "0xDE001C", VA = "0xDE001C")]
	private void SetStage(int id_stage)
	{
	}

	[Token(Token = "0x6000541")]
	[Address(RVA = "0xDE0EA4", Offset = "0xDE0EA4", VA = "0xDE0EA4")]
	public bool BossSongSelected()
	{
		return default(bool);
	}

	[Token(Token = "0x6000542")]
	[Address(RVA = "0xDE0FC4", Offset = "0xDE0FC4", VA = "0xDE0FC4")]
	public void StagePicked(int id_stage)
	{
	}

	[Token(Token = "0x6000543")]
	[Address(RVA = "0xDDF5D4", Offset = "0xDDF5D4", VA = "0xDDF5D4")]
	public void ChangeStage(int id_stage)
	{
	}

	[Token(Token = "0x6000544")]
	[Address(RVA = "0xDE13E0", Offset = "0xDE13E0", VA = "0xDE13E0")]
	private void PickDefaultStage()
	{
	}

	[Token(Token = "0x6000545")]
	[Address(RVA = "0xDE1514", Offset = "0xDE1514", VA = "0xDE1514")]
	public void ShowVariations()
	{
	}

	[Token(Token = "0x6000546")]
	[Address(RVA = "0xDE1BCC", Offset = "0xDE1BCC", VA = "0xDE1BCC")]
	public void HideVariations()
	{
	}

	[Token(Token = "0x6000547")]
	[Address(RVA = "0xDE1AD0", Offset = "0xDE1AD0", VA = "0xDE1AD0")]
	private void SwapRankingFrame()
	{
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0xDE1C50", Offset = "0xDE1C50", VA = "0xDE1C50")]
	private void ChangeDifficultyEffect()
	{
	}

	[Token(Token = "0x6000549")]
	[Address(RVA = "0xDE1DBC", Offset = "0xDE1DBC", VA = "0xDE1DBC")]
	public bool IsVariationsEnabled()
	{
		return default(bool);
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0xDE15A0", Offset = "0xDE15A0", VA = "0xDE15A0")]
	private void InitVariations()
	{
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0xDE103C", Offset = "0xDE103C", VA = "0xDE103C")]
	public void SelectVariation(int _variation)
	{
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0xDE0F1C", Offset = "0xDE0F1C", VA = "0xDE0F1C")]
	private void SetVariationsScreenMessage(bool showMessage)
	{
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0xDE1DC4", Offset = "0xDE1DC4", VA = "0xDE1DC4")]
	public void AddScrollBarValue(Vector2 axis)
	{
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0xDE1FA0", Offset = "0xDE1FA0", VA = "0xDE1FA0")]
	public void AddScrollBarValuePag(float y)
	{
	}

	[Token(Token = "0x600054F")]
	[Address(RVA = "0xDE17B4", Offset = "0xDE17B4", VA = "0xDE17B4")]
	private void CheckActiveScrollbar(int count)
	{
	}

	[Token(Token = "0x6000550")]
	[Address(RVA = "0xDE1A04", Offset = "0xDE1A04", VA = "0xDE1A04")]
	public void CheckScrollBarValue()
	{
	}

	[Token(Token = "0x6000551")]
	[Address(RVA = "0xDE2178", Offset = "0xDE2178", VA = "0xDE2178")]
	private void CheckEntryPosition()
	{
	}

	[Token(Token = "0x6000552")]
	[Address(RVA = "0xDE22A4", Offset = "0xDE22A4", VA = "0xDE22A4")]
	public void ResetVariationsLayout()
	{
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0xDE2368", Offset = "0xDE2368", VA = "0xDE2368")]
	public CustomChallengeController()
	{
	}
}
[Token(Token = "0x200012A")]
public class EnemyController : MonoBehaviour
{
	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static EnemyController instance;

	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<GameObject> spawnedEnemiesList;

	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<GameObject> nearEnemiesList;

	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<GameObject> specialSpawnedEnemiesList;

	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<GameObject> targets;

	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<TemplateEnemy> TemplateEnemysList;

	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<KeyValuePair<float, bool>> HapticsList;

	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<Hit> iconsHit;

	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject[] boss;

	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform[] spawnPointsList;

	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform[] bossSpawnPoint;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private UnityEngine.Object currentCSV;

	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private UnityEngine.Object currentHapticsCSV;

	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float startPlaytimeStamp;

	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float ogStartPlaytimeStamp;

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float timeInPause;

	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float timeLastMiss;

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float timeToReMiss;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float timeToActivateThoughWarning;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int nEnemies;

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private int nEnemiesKilled;

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private uint id_count;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private uint missesDoneInFrame;

	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private uint maxMissesInFrame;

	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private bool canMiss;

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA5")]
	private bool canSpawn;

	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int bossNum;

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[HideInInspector]
	public int nEnemiesSpawned;

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[HideInInspector]
	public int lastEnemiesCanOnlyRecieveDamageWithSpinCount;

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[HideInInspector]
	public int lastEnemiesSwapDrumsCount;

	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject liniaPerfect;

	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public MeshRenderer liniaPerfectMesh;

	[Token(Token = "0x600055E")]
	[Address(RVA = "0xDE2870", Offset = "0xDE2870", VA = "0xDE2870")]
	private void Awake()
	{
	}

	[Token(Token = "0x600055F")]
	[Address(RVA = "0xDE2AA0", Offset = "0xDE2AA0", VA = "0xDE2AA0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000560")]
	[Address(RVA = "0xDE2F28", Offset = "0xDE2F28", VA = "0xDE2F28")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000561")]
	[Address(RVA = "0xDE2E6C", Offset = "0xDE2E6C", VA = "0xDE2E6C")]
	private void InitPerfectLine()
	{
	}

	[Token(Token = "0x6000562")]
	[Address(RVA = "0xDE4410", Offset = "0xDE4410", VA = "0xDE4410")]
	private void CheckThoughWarning()
	{
	}

	[Token(Token = "0x6000563")]
	[Address(RVA = "0xDE44DC", Offset = "0xDE44DC", VA = "0xDE44DC")]
	public void IncreaseTimeInPause(float _time)
	{
	}

	[Token(Token = "0x6000564")]
	[Address(RVA = "0xDE44EC", Offset = "0xDE44EC", VA = "0xDE44EC")]
	public float GetTimeInPause()
	{
		return default(float);
	}

	[Token(Token = "0x6000565")]
	[Address(RVA = "0xDE44F4", Offset = "0xDE44F4", VA = "0xDE44F4")]
	public void ResetTimeInPause()
	{
	}

	[Token(Token = "0x6000566")]
	[Address(RVA = "0xDE44FC", Offset = "0xDE44FC", VA = "0xDE44FC")]
	public void StartSpawn()
	{
	}

	[Token(Token = "0x6000567")]
	[Address(RVA = "0xDE45E0", Offset = "0xDE45E0", VA = "0xDE45E0")]
	public void ResetSpawn()
	{
	}

	[Token(Token = "0x6000568")]
	[Address(RVA = "0xDE4584", Offset = "0xDE4584", VA = "0xDE4584")]
	public void UpdateSongTime()
	{
	}

	[Token(Token = "0x6000569")]
	[Address(RVA = "0xDE4658", Offset = "0xDE4658", VA = "0xDE4658")]
	public bool GetCanSpawn()
	{
		return default(bool);
	}

	[Token(Token = "0x600056A")]
	[Address(RVA = "0xDE4660", Offset = "0xDE4660", VA = "0xDE4660")]
	public int GetNEnemies()
	{
		return default(int);
	}

	[Token(Token = "0x600056B")]
	[Address(RVA = "0xDE4668", Offset = "0xDE4668", VA = "0xDE4668")]
	public int GetNEnemiesKilled()
	{
		return default(int);
	}

	[Token(Token = "0x600056C")]
	[Address(RVA = "0xDE4670", Offset = "0xDE4670", VA = "0xDE4670")]
	public void IncreaseNEnemiesKilled()
	{
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0xDE4680", Offset = "0xDE4680", VA = "0xDE4680")]
	public void SetNEnemiesKilled(int _number)
	{
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0xDE4688", Offset = "0xDE4688", VA = "0xDE4688")]
	public void setCanSpawn(bool _state)
	{
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0xDE4694", Offset = "0xDE4694", VA = "0xDE4694")]
	public uint GetIdCount()
	{
		return default(uint);
	}

	[Token(Token = "0x6000570")]
	[Address(RVA = "0xDE469C", Offset = "0xDE469C", VA = "0xDE469C")]
	public uint GetIdCountAndIncrease()
	{
		return default(uint);
	}

	[Token(Token = "0x6000571")]
	[Address(RVA = "0xDE46B0", Offset = "0xDE46B0", VA = "0xDE46B0")]
	public List<GameObject> GetSpecialSpawnedEnemiesList()
	{
		return null;
	}

	[Token(Token = "0x6000572")]
	[Address(RVA = "0xDE46B8", Offset = "0xDE46B8", VA = "0xDE46B8")]
	public GameObject GetSpecialSpawnedEnemy(int _id)
	{
		return null;
	}

	[Token(Token = "0x6000573")]
	[Address(RVA = "0xDE47A0", Offset = "0xDE47A0", VA = "0xDE47A0")]
	public void AddToSpecialSpawnedEnemiesList(GameObject _GoToAdd)
	{
	}

	[Token(Token = "0x6000574")]
	[Address(RVA = "0xDE4850", Offset = "0xDE4850", VA = "0xDE4850")]
	public GameObject GetSpawnedEnemy(int _id)
	{
		return null;
	}

	[Token(Token = "0x6000575")]
	[Address(RVA = "0xDE4938", Offset = "0xDE4938", VA = "0xDE4938")]
	public void SpawnBoss(TemplateEnemy _boss)
	{
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0xDE3028", Offset = "0xDE3028", VA = "0xDE3028")]
	public void CheckHmdHaptics()
	{
	}

	[Token(Token = "0x6000577")]
	[Address(RVA = "0xDE3078", Offset = "0xDE3078", VA = "0xDE3078")]
	public void Spawn()
	{
	}

	[Token(Token = "0x6000578")]
	[Address(RVA = "0xDE4B70", Offset = "0xDE4B70", VA = "0xDE4B70")]
	public void SnapTimeToActivate()
	{
	}

	[Token(Token = "0x6000579")]
	[Address(RVA = "0xDE4BE0", Offset = "0xDE4BE0", VA = "0xDE4BE0")]
	private float CheckNextThoughTime()
	{
		return default(float);
	}

	[Token(Token = "0x600057A")]
	[Address(RVA = "0xDE4CE4", Offset = "0xDE4CE4", VA = "0xDE4CE4")]
	public GameObject ForceSpawn(TemplateEnemy _templateEnemy)
	{
		return null;
	}

	[Token(Token = "0x600057B")]
	[Address(RVA = "0xDE4D8C", Offset = "0xDE4D8C", VA = "0xDE4D8C")]
	public int FixEnemySpawnById(IconsType _type)
	{
		return default(int);
	}

	[Token(Token = "0x600057C")]
	[Address(RVA = "0xDE4DB0", Offset = "0xDE4DB0", VA = "0xDE4DB0")]
	private void LoadEnemiesFromCSV()
	{
	}

	[Token(Token = "0x600057D")]
	[Address(RVA = "0xDE59C0", Offset = "0xDE59C0", VA = "0xDE59C0")]
	private void LoadHapticsFromCSV()
	{
	}

	[Token(Token = "0x600057E")]
	[Address(RVA = "0xDE5C88", Offset = "0xDE5C88", VA = "0xDE5C88")]
	public void LoadEnemiesTutorial()
	{
	}

	[Token(Token = "0x600057F")]
	[Address(RVA = "0xDE6118", Offset = "0xDE6118", VA = "0xDE6118")]
	public void LoadEnemiesTutorialPerfect()
	{
	}

	[Token(Token = "0x6000580")]
	[Address(RVA = "0xDE669C", Offset = "0xDE669C", VA = "0xDE669C")]
	private void LoadEnemiesTutorialSpecialDemons()
	{
	}

	[Token(Token = "0x6000581")]
	[Address(RVA = "0xDE6DA0", Offset = "0xDE6DA0", VA = "0xDE6DA0")]
	private void LoadEnemiesTutorialWithMusic()
	{
	}

	[Token(Token = "0x6000582")]
	[Address(RVA = "0xDE59B0", Offset = "0xDE59B0", VA = "0xDE59B0")]
	private IconsType IdToIconType(int _id)
	{
		return default(IconsType);
	}

	[Token(Token = "0x6000583")]
	[Address(RVA = "0xDE4AC4", Offset = "0xDE4AC4", VA = "0xDE4AC4")]
	public float GetSpawnTime()
	{
		return default(float);
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0xDE2D70", Offset = "0xDE2D70", VA = "0xDE2D70")]
	public void LoadEnemiesCSV()
	{
	}

	[Token(Token = "0x6000585")]
	[Address(RVA = "0xDE452C", Offset = "0xDE452C", VA = "0xDE452C")]
	public void InitSpanwers()
	{
	}

	[Token(Token = "0x6000586")]
	[Address(RVA = "0xDE8948", Offset = "0xDE8948", VA = "0xDE8948")]
	private void ChangeFileToLoad()
	{
	}

	[Token(Token = "0x6000587")]
	[Address(RVA = "0xDE8A64", Offset = "0xDE8A64", VA = "0xDE8A64")]
	public void PauseEnemies()
	{
	}

	[Token(Token = "0x6000588")]
	[Address(RVA = "0xDE9020", Offset = "0xDE9020", VA = "0xDE9020")]
	public void PlayEnemies()
	{
	}

	[Token(Token = "0x6000589")]
	[Address(RVA = "0xDE934C", Offset = "0xDE934C", VA = "0xDE934C")]
	public void DestroyCloseEnemies(float _radious)
	{
	}

	[Token(Token = "0x600058A")]
	[Address(RVA = "0xDE9910", Offset = "0xDE9910", VA = "0xDE9910")]
	public bool AreEnemiesInMissZone()
	{
		return default(bool);
	}

	[Token(Token = "0x600058B")]
	[Address(RVA = "0xDE99E4", Offset = "0xDE99E4", VA = "0xDE99E4")]
	public List<GameObject> GetEnemiesInMissZone()
	{
		return null;
	}

	[Token(Token = "0x600058C")]
	[Address(RVA = "0xDE9B7C", Offset = "0xDE9B7C", VA = "0xDE9B7C")]
	public int AreGordiEnemiesInMissZone()
	{
		return default(int);
	}

	[Token(Token = "0x600058D")]
	[Address(RVA = "0xDE9C84", Offset = "0xDE9C84", VA = "0xDE9C84")]
	public void EnemiesInUIZone(bool _state)
	{
	}

	[Token(Token = "0x600058E")]
	[Address(RVA = "0xDE9F24", Offset = "0xDE9F24", VA = "0xDE9F24")]
	public float IsIconTypeOnTargets(IconsType _iconType)
	{
		return default(float);
	}

	[Token(Token = "0x600058F")]
	[Address(RVA = "0xDEA294", Offset = "0xDEA294", VA = "0xDEA294")]
	public void OnDrumHit(IconsType iconsType, ushort spins_count)
	{
	}

	[Token(Token = "0x6000590")]
	[Address(RVA = "0xDEA400", Offset = "0xDEA400", VA = "0xDEA400")]
	private void Miss()
	{
	}

	[Token(Token = "0x6000591")]
	[Address(RVA = "0xDE3660", Offset = "0xDE3660", VA = "0xDE3660")]
	private void CheckInputBuffer()
	{
	}

	[Token(Token = "0x6000592")]
	[Address(RVA = "0xDEA69C", Offset = "0xDEA69C", VA = "0xDEA69C")]
	private void ResetSpawnEnemiesBool()
	{
	}

	[Token(Token = "0x6000593")]
	[Address(RVA = "0xDEA724", Offset = "0xDEA724", VA = "0xDEA724")]
	public TemplateEnemy GetTemplateEnemy(int _id)
	{
		return null;
	}

	[Token(Token = "0x6000594")]
	[Address(RVA = "0xDEA7A0", Offset = "0xDEA7A0", VA = "0xDEA7A0")]
	public int GetTemplateEnemyCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0xDEA7E8", Offset = "0xDEA7E8", VA = "0xDEA7E8")]
	public void DestroyAllEnemies()
	{
	}

	[Token(Token = "0x6000596")]
	[Address(RVA = "0xDEA984", Offset = "0xDEA984", VA = "0xDEA984")]
	public void DestroyEnemiesScreen()
	{
	}

	[Token(Token = "0x6000597")]
	[Address(RVA = "0xDEAA80", Offset = "0xDEAA80", VA = "0xDEAA80")]
	private bool AreSameInput(List<IconsType> _enemy1, List<IconsType> _enemy2)
	{
		return default(bool);
	}

	[Token(Token = "0x6000598")]
	[Address(RVA = "0xDE3AA0", Offset = "0xDE3AA0", VA = "0xDE3AA0")]
	public void CheckTargets()
	{
	}

	[Token(Token = "0x6000599")]
	[Address(RVA = "0xDEAB70", Offset = "0xDEAB70", VA = "0xDEAB70")]
	private int SortByDistanceToGoalReverse(GameObject a, GameObject b)
	{
		return default(int);
	}

	[Token(Token = "0x600059A")]
	[Address(RVA = "0xDEACF8", Offset = "0xDEACF8", VA = "0xDEACF8")]
	public EnemyController()
	{
	}
}
[Token(Token = "0x200012B")]
public enum EnemyType
{
	[Token(Token = "0x40006BF")]
	NONE,
	[Token(Token = "0x40006C0")]
	ENEMY,
	[Token(Token = "0x40006C1")]
	SIAMESE,
	[Token(Token = "0x40006C2")]
	BOSS
}
[Serializable]
[Token(Token = "0x200012C")]
public class Hit
{
	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float timeStamp;

	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float timeStampHold;

	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IconsType iconType;

	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float lifeTime;

	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lifeHold;

	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public ushort spins_count;

	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint IDEnemy;

	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool hasToRemove;

	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public bool RHit;

	[Token(Token = "0x600059B")]
	[Address(RVA = "0xE07034", Offset = "0xE07034", VA = "0xE07034")]
	public Hit()
	{
	}

	[Token(Token = "0x600059C")]
	[Address(RVA = "0xE07060", Offset = "0xE07060", VA = "0xE07060")]
	public void hold(uint _IDEnemy)
	{
	}

	[Token(Token = "0x600059D")]
	[Address(RVA = "0xE07098", Offset = "0xE07098", VA = "0xE07098")]
	public bool isValid()
	{
		return default(bool);
	}

	[Token(Token = "0x600059E")]
	[Address(RVA = "0xE070E8", Offset = "0xE070E8", VA = "0xE070E8")]
	public bool isHold()
	{
		return default(bool);
	}
}
[Token(Token = "0x200012D")]
public class EventController
{
	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action ChangeDifficulty;

	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Action OnChangeAct;

	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Action ChangeTrack;

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static Action<bool> OnSave;

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static Action OnLoad;

	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static Action OnChangeLobbyScreen;

	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static Action OnPauseStart;

	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static Action OnPauseEnd;

	[Token(Token = "0x600059F")]
	[Address(RVA = "0xE07114", Offset = "0xE07114", VA = "0xE07114")]
	public static void OnChangeDifficulty()
	{
	}

	[Token(Token = "0x60005A0")]
	[Address(RVA = "0xE07178", Offset = "0xE07178", VA = "0xE07178")]
	public static void ChangeAct()
	{
	}

	[Token(Token = "0x60005A1")]
	[Address(RVA = "0xE071DC", Offset = "0xE071DC", VA = "0xE071DC")]
	public static void OnChangeTrack()
	{
	}

	[Token(Token = "0x60005A2")]
	[Address(RVA = "0xE07240", Offset = "0xE07240", VA = "0xE07240")]
	public static void Save(bool manualSave = false)
	{
	}

	[Token(Token = "0x60005A3")]
	[Address(RVA = "0xE072AC", Offset = "0xE072AC", VA = "0xE072AC")]
	public static void Load()
	{
	}

	[Token(Token = "0x60005A4")]
	[Address(RVA = "0xE07310", Offset = "0xE07310", VA = "0xE07310")]
	public static void ChangeLobbyScreen()
	{
	}

	[Token(Token = "0x60005A5")]
	[Address(RVA = "0xE07374", Offset = "0xE07374", VA = "0xE07374")]
	public static void PauseStart()
	{
	}

	[Token(Token = "0x60005A6")]
	[Address(RVA = "0xE073D8", Offset = "0xE073D8", VA = "0xE073D8")]
	public static void PauseEnd()
	{
	}

	[Token(Token = "0x60005A7")]
	[Address(RVA = "0xE0743C", Offset = "0xE0743C", VA = "0xE0743C")]
	public EventController()
	{
	}
}
[Token(Token = "0x200012E")]
public class GameController : MonoBehaviour
{
	[Token(Token = "0x200012F")]
	[CompilerGenerated]
	private sealed class <GenerateTemplateCustomSong>d__87 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400071A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400071B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400071C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string _folderPath;

		[Token(Token = "0x400071D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string <destPath>5__2;

		[Token(Token = "0x400071E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UnityWebRequest <www>5__3;

		[Token(Token = "0x1700006E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000645")]
			[Address(RVA = "0xE07F54", Offset = "0xE07F54", VA = "0xE07F54", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000647")]
			[Address(RVA = "0xE07F9C", Offset = "0xE07F9C", VA = "0xE07F9C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000642")]
		[Address(RVA = "0xE07444", Offset = "0xE07444", VA = "0xE07444")]
		[DebuggerHidden]
		public <GenerateTemplateCustomSong>d__87(int <>1__state)
		{
		}

		[Token(Token = "0x6000643")]
		[Address(RVA = "0xE0746C", Offset = "0xE0746C", VA = "0xE0746C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000644")]
		[Address(RVA = "0xE07470", Offset = "0xE07470", VA = "0xE07470", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000646")]
		[Address(RVA = "0xE07F5C", Offset = "0xE07F5C", VA = "0xE07F5C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000130")]
	[CompilerGenerated]
	private sealed class <InitFirstAudioLatencyCheck>d__99 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400071F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float waitOffset;

		[Token(Token = "0x4000722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameController <>4__this;

		[Token(Token = "0x4000723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private double <lastDspTime>5__2;

		[Token(Token = "0x17000070")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600064B")]
			[Address(RVA = "0xE082A0", Offset = "0xE082A0", VA = "0xE082A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000071")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600064D")]
			[Address(RVA = "0xE082E8", Offset = "0xE082E8", VA = "0xE082E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000648")]
		[Address(RVA = "0xE07FA4", Offset = "0xE07FA4", VA = "0xE07FA4")]
		[DebuggerHidden]
		public <InitFirstAudioLatencyCheck>d__99(int <>1__state)
		{
		}

		[Token(Token = "0x6000649")]
		[Address(RVA = "0xE07FCC", Offset = "0xE07FCC", VA = "0xE07FCC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600064A")]
		[Address(RVA = "0xE07FD0", Offset = "0xE07FD0", VA = "0xE07FD0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600064C")]
		[Address(RVA = "0xE082A8", Offset = "0xE082A8", VA = "0xE082A8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000136")]
	[CompilerGenerated]
	private sealed class <CheckSteamOverlay>d__164 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400072D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400072E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400072F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameController <>4__this;

		[Token(Token = "0x17000072")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600065B")]
			[Address(RVA = "0xE08738", Offset = "0xE08738", VA = "0xE08738", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000073")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600065D")]
			[Address(RVA = "0xE08780", Offset = "0xE08780", VA = "0xE08780", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000658")]
		[Address(RVA = "0xE084B0", Offset = "0xE084B0", VA = "0xE084B0")]
		[DebuggerHidden]
		public <CheckSteamOverlay>d__164(int <>1__state)
		{
		}

		[Token(Token = "0x6000659")]
		[Address(RVA = "0xE084D8", Offset = "0xE084D8", VA = "0xE084D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600065A")]
		[Address(RVA = "0xE084DC", Offset = "0xE084DC", VA = "0xE084DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600065C")]
		[Address(RVA = "0xE08740", Offset = "0xE08740", VA = "0xE08740", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private BuildOS buildOS;

	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string version;

	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int version_code;

	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GameController instance;

	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool IsProductionVersion;

	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	[SerializeField]
	private bool demoVersion;

	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<ActBase> Acts;

	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<ChapterBase> Chapters;

	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private List<Song> Songs;

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private List<Song> ChallengeSongs;

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private List<ChallengeSongSaveData> ChallengeSongSaveData;

	[NonSerialized]
	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<CustomSong> customSongs;

	[NonSerialized]
	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public CustomSong currentCustomSong;

	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<SongInfoCampaign> SongInfoCampaignBase;

	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<SongInfoCampaign> SongInfoCampaign;

	[Token(Token = "0x40006E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public List<SongInfoCampaignSaveData> SongInfoCampaignSaveData;

	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<StoreItemSaveData> StoreItems;

	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private List<StoreItemSaveData> StoreItemsToVisit;

	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private List<UnlockStoreItemsCond> UnlockStoreItemsCondList;

	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool is_tutorial_done_first_time;

	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private uint player_money_earned;

	[Token(Token = "0x40006E9")]
	private const int DifficultiesLength = 4;

	[Token(Token = "0x40006EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private SongDifficulty difficulty;

	[Token(Token = "0x40006EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private SongTrack track;

	[Token(Token = "0x40006EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private GameMode gameMode;

	[Token(Token = "0x40006ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private VariationMode variationMode;

	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Escenario currentEscenario;

	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private uint id_equipped_hands;

	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private uint id_equipped_drums;

	[Token(Token = "0x40006F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private uint id_equipped_drumsstick;

	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int Current_Id_SongsInfoCampaign;

	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float SongVelocity;

	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float SongOffset;

	[Token(Token = "0x40006F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float SongBPM;

	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float lastGarbageCollectorTimestamp;

	[Token(Token = "0x40006F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public string lang;

	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
	private byte hitBetweenSticksCount;

	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE2")]
	public bool IsSongStarted;

	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float lastHitBetweenSticksCountTimestamp;

	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float lastHitBetweenSticksCounterTimestamp;

	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xED")]
	public bool TestAudio;

	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEE")]
	public bool IsOnsettings;

	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[HideInInspector]
	public float drumsLowtomHeightOffset;

	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	[HideInInspector]
	public float drumsHighTomHeightOffset;

	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[HideInInspector]
	public float drumsKickHeightOffset;

	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	[HideInInspector]
	public float drumsSnareHeightOffset;

	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[HideInInspector]
	public float drumsCrushHeightOffset;

	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	[HideInInspector]
	public float drumsRideHeightOffset;

	[Token(Token = "0x4000706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[HideInInspector]
	public Vector2 drumsLowtomOffset;

	[Token(Token = "0x4000707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[HideInInspector]
	public Vector2 drumsHighTomOffset;

	[Token(Token = "0x4000708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[HideInInspector]
	public Vector2 drumsKickOffset;

	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[HideInInspector]
	public Vector2 drumsSnareOffset;

	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[HideInInspector]
	public Vector2 drumsCrushOffset;

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[HideInInspector]
	public Vector2 drumsRideOffset;

	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public SettingsController.OptionsSettings optionsSettings;

	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private List<int> TvCinematicsSeenSaveData;

	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private Song lastRankingSong;

	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private LastCampaignPlayedInfo lastCampaignPlayedInfo;

	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private LastChallengePlayedInfo lastChallengePlayedInfo;

	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private List<BindModeFade> blindModeFadeList;

	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public PopupNewUnlockScreenEnum currentPopupNewUnlockScreenType;

	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public CanvasLoading canvasLoading;

	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Dictionary<string, string> sceneNames;

	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public bool isSteamOverlayEnabled;

	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x181")]
	private bool wasExternalAudioConnected;

	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	public ExternalAudioState externalAudioState;

	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public bool ignoreSpawnCSV;

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x189")]
	public bool newsClicked;

	[Token(Token = "0x1700006A")]
	public bool IsDemoVersion
	{
		[Token(Token = "0x60005A8")]
		[Address(RVA = "0xDEBD30", Offset = "0xDEBD30", VA = "0xDEBD30")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700006B")]
	public int difficultiesLength
	{
		[Token(Token = "0x60005A9")]
		[Address(RVA = "0xDEBD38", Offset = "0xDEBD38", VA = "0xDEBD38")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700006C")]
	public bool isPractice
	{
		[Token(Token = "0x60005AA")]
		[Address(RVA = "0xDEBD40", Offset = "0xDEBD40", VA = "0xDEBD40")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60005AB")]
		[Address(RVA = "0xDEBD48", Offset = "0xDEBD48", VA = "0xDEBD48")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x1700006D")]
	public bool InputLostWhileCD
	{
		[Token(Token = "0x60005AC")]
		[Address(RVA = "0xDEBD54", Offset = "0xDEBD54", VA = "0xDEBD54")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60005AD")]
		[Address(RVA = "0xDEBD5C", Offset = "0xDEBD5C", VA = "0xDEBD5C")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x60005AE")]
	[Address(RVA = "0xDEBD68", Offset = "0xDEBD68", VA = "0xDEBD68")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005AF")]
	[Address(RVA = "0xDF6B88", Offset = "0xDF6B88", VA = "0xDF6B88")]
	private void Start()
	{
	}

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0xDF6D20", Offset = "0xDF6D20", VA = "0xDF6D20")]
	public void SetEscenario(Escenario _scene)
	{
	}

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0xDEC7B4", Offset = "0xDEC7B4", VA = "0xDEC7B4")]
	private void InitSceneNames()
	{
	}

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0xDF6D28", Offset = "0xDF6D28", VA = "0xDF6D28")]
	public bool ScenesReady()
	{
		return default(bool);
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0xDF6A88", Offset = "0xDF6A88", VA = "0xDF6A88")]
	public void InitModes()
	{
	}

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0xDEC338", Offset = "0xDEC338", VA = "0xDEC338")]
	private void InitCustomSongs()
	{
	}

	[Token(Token = "0x60005B5")]
	[Address(RVA = "0xDF6D38", Offset = "0xDF6D38", VA = "0xDF6D38")]
	[IteratorStateMachine(typeof(<GenerateTemplateCustomSong>d__87))]
	private IEnumerator GenerateTemplateCustomSong(string _folderPath)
	{
		return null;
	}

	[Token(Token = "0x60005B6")]
	[Address(RVA = "0xDF6DAC", Offset = "0xDF6DAC", VA = "0xDF6DAC")]
	public bool IsValidCustomSong(string _folder)
	{
		return default(bool);
	}

	[Token(Token = "0x60005B7")]
	[Address(RVA = "0xDEC6BC", Offset = "0xDEC6BC", VA = "0xDEC6BC")]
	private void InitXRRig()
	{
	}

	[Token(Token = "0x60005B8")]
	[Address(RVA = "0xDEC65C", Offset = "0xDEC65C", VA = "0xDEC65C")]
	private void InitSOList()
	{
	}

	[Token(Token = "0x60005B9")]
	[Address(RVA = "0xDECA14", Offset = "0xDECA14", VA = "0xDECA14")]
	private void InitActs()
	{
	}

	[Token(Token = "0x60005BA")]
	[Address(RVA = "0xDECDAC", Offset = "0xDECDAC", VA = "0xDECDAC")]
	private void InitChapters()
	{
	}

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0xDEE278", Offset = "0xDEE278", VA = "0xDEE278")]
	private void InitSongInfoCampaign()
	{
	}

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0xDF3358", Offset = "0xDF3358", VA = "0xDF3358")]
	private void InitUnlockStoreItemsCond()
	{
	}

	[Token(Token = "0x60005BD")]
	[Address(RVA = "0xDF6EA0", Offset = "0xDF6EA0", VA = "0xDF6EA0")]
	private void Update()
	{
	}

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0xDF73D0", Offset = "0xDF73D0", VA = "0xDF73D0")]
	private void OnAudioConfigurationChanged(bool deviceWasChanged)
	{
	}

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0xDF7324", Offset = "0xDF7324", VA = "0xDF7324")]
	private ExternalAudioState GetExternalAudioState()
	{
		return default(ExternalAudioState);
	}

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0xDF74A8", Offset = "0xDF74A8", VA = "0xDF74A8")]
	private bool DetectExternalAudio()
	{
		return default(bool);
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0xDF6B04", Offset = "0xDF6B04", VA = "0xDF6B04")]
	[IteratorStateMachine(typeof(<InitFirstAudioLatencyCheck>d__99))]
	private IEnumerator InitFirstAudioLatencyCheck(float waitOffset = 0f)
	{
		return null;
	}

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0xDF74B0", Offset = "0xDF74B0", VA = "0xDF74B0")]
	private void checkAudioSystemLatency()
	{
	}

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0xDF7574", Offset = "0xDF7574", VA = "0xDF7574")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60005C4")]
	[Address(RVA = "0xDF7794", Offset = "0xDF7794", VA = "0xDF7794")]
	public int GetNumberSongs()
	{
		return default(int);
	}

	[Token(Token = "0x60005C5")]
	[Address(RVA = "0xDF77EC", Offset = "0xDF77EC", VA = "0xDF77EC")]
	public CustomSong GetCustomSongFromCustomSongOrder(int _order)
	{
		return null;
	}

	[Token(Token = "0x60005C6")]
	[Address(RVA = "0xDF78C8", Offset = "0xDF78C8", VA = "0xDF78C8")]
	public Song GetSongInfo(int _track)
	{
		return null;
	}

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0xDF79F0", Offset = "0xDF79F0", VA = "0xDF79F0")]
	public void SetSongInfo(Song _newInfo, int _track)
	{
	}

	[Token(Token = "0x60005C8")]
	[Address(RVA = "0xDF7AD4", Offset = "0xDF7AD4", VA = "0xDF7AD4")]
	public void UnlockChallengeSong(int id)
	{
	}

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0xDF7B90", Offset = "0xDF7B90", VA = "0xDF7B90")]
	public void UnlockAll()
	{
	}

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0xDF78EC", Offset = "0xDF78EC", VA = "0xDF78EC")]
	public Song GetChallengeSong(int id)
	{
		return null;
	}

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0xDF7A00", Offset = "0xDF7A00", VA = "0xDF7A00")]
	public void SetChallengeSong(int id, Song _newInfo)
	{
	}

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0xDF79B0", Offset = "0xDF79B0", VA = "0xDF79B0")]
	public Song GetSongInfo()
	{
		return null;
	}

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0xDF7B94", Offset = "0xDF7B94", VA = "0xDF7B94")]
	public int GetRankCountPerDifficulty(Ranking _ranking, SongDifficulty _difficulty)
	{
		return default(int);
	}

	[Token(Token = "0x60005CE")]
	[Address(RVA = "0xDF7D48", Offset = "0xDF7D48", VA = "0xDF7D48")]
	public SongDifficulty GetSongDifficulty()
	{
		return default(SongDifficulty);
	}

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0xDF7D50", Offset = "0xDF7D50", VA = "0xDF7D50")]
	public float GetSongVelocity()
	{
		return default(float);
	}

	[Token(Token = "0x60005D0")]
	[Address(RVA = "0xDF7D8C", Offset = "0xDF7D8C", VA = "0xDF7D8C")]
	public void SetSongVelocity(float _songVelocity)
	{
	}

	[Token(Token = "0x60005D1")]
	[Address(RVA = "0xDF7D94", Offset = "0xDF7D94", VA = "0xDF7D94")]
	public float GetSongOffset()
	{
		return default(float);
	}

	[Token(Token = "0x60005D2")]
	[Address(RVA = "0xDF7DD0", Offset = "0xDF7DD0", VA = "0xDF7DD0")]
	public void SetSongOffset(float _songOffset)
	{
	}

	[Token(Token = "0x60005D3")]
	[Address(RVA = "0xDF7DD8", Offset = "0xDF7DD8", VA = "0xDF7DD8")]
	public float GetSongBPM()
	{
		return default(float);
	}

	[Token(Token = "0x60005D4")]
	[Address(RVA = "0xDF7E14", Offset = "0xDF7E14", VA = "0xDF7E14")]
	public SongTrack GetSongTrack()
	{
		return default(SongTrack);
	}

	[Token(Token = "0x60005D5")]
	[Address(RVA = "0xDF7E1C", Offset = "0xDF7E1C", VA = "0xDF7E1C")]
	public string GetSongDifficultyText()
	{
		return null;
	}

	[Token(Token = "0x60005D6")]
	[Address(RVA = "0xDF7F9C", Offset = "0xDF7F9C", VA = "0xDF7F9C")]
	public string GetSongDifficultyText(int _difficulty)
	{
		return null;
	}

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0xDF80F8", Offset = "0xDF80F8", VA = "0xDF80F8")]
	public string GetSongDifficultyRanking(int _difficulty)
	{
		return null;
	}

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0xDF8184", Offset = "0xDF8184", VA = "0xDF8184")]
	public int GetIntegerLeaderboardID()
	{
		return default(int);
	}

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0xDF8200", Offset = "0xDF8200", VA = "0xDF8200")]
	public void SetLastOnlineRankingSong(Song _tempSong)
	{
	}

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0xDF8210", Offset = "0xDF8210", VA = "0xDF8210")]
	public void CheckSendScore(Message message)
	{
	}

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0xDF8398", Offset = "0xDF8398", VA = "0xDF8398")]
	public void SetSongDifficulty(int _difficulty)
	{
	}

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0xDF83A0", Offset = "0xDF83A0", VA = "0xDF83A0")]
	public void SetTrack(int _track)
	{
	}

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0xDF83C8", Offset = "0xDF83C8", VA = "0xDF83C8")]
	public void SetTrackCampaign(int _track, int id_songs_info_campaign)
	{
	}

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0xDF83F4", Offset = "0xDF83F4", VA = "0xDF83F4")]
	public bool IsInTutorial()
	{
		return default(bool);
	}

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0xDF8420", Offset = "0xDF8420", VA = "0xDF8420")]
	public bool IsInTutorialWithoutMusic()
	{
		return default(bool);
	}

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0xDF8444", Offset = "0xDF8444", VA = "0xDF8444")]
	public bool IsInTutorialPerfectLoop()
	{
		return default(bool);
	}

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0xDF8458", Offset = "0xDF8458", VA = "0xDF8458")]
	public string GetTrackName(int _track)
	{
		return null;
	}

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0xDF84D8", Offset = "0xDF84D8", VA = "0xDF84D8")]
	public GameMode GetGameMode()
	{
		return default(GameMode);
	}

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0xDF84E0", Offset = "0xDF84E0", VA = "0xDF84E0")]
	public string GetGameModeText()
	{
		return null;
	}

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0xDF865C", Offset = "0xDF865C", VA = "0xDF865C")]
	public void SetGameMode(GameMode _gameMode)
	{
	}

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0xDF8664", Offset = "0xDF8664", VA = "0xDF8664")]
	public void StartSong()
	{
	}

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0xDF87DC", Offset = "0xDF87DC", VA = "0xDF87DC")]
	private void Save(bool manualSave)
	{
	}

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0xDF89A0", Offset = "0xDF89A0", VA = "0xDF89A0")]
	private void PrepareSaveSongs()
	{
	}

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0xDF8C1C", Offset = "0xDF8C1C", VA = "0xDF8C1C")]
	private void CheckSave()
	{
	}

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0xDF8ED0", Offset = "0xDF8ED0", VA = "0xDF8ED0")]
	private bool HasChallengeSongSaveData(int id)
	{
		return default(bool);
	}

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0xDF8F78", Offset = "0xDF8F78", VA = "0xDF8F78")]
	private bool HasSongInfoCampaignSaveData(int id)
	{
		return default(bool);
	}

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0xDF9020", Offset = "0xDF9020", VA = "0xDF9020")]
	public Color GetDifficultyColor(int _difficulty)
	{
		return default(Color);
	}

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0xDF9064", Offset = "0xDF9064", VA = "0xDF9064")]
	public Color GetDifficultyColor()
	{
		return default(Color);
	}

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0xDF90CC", Offset = "0xDF90CC", VA = "0xDF90CC")]
	public string GetSongDiffcultyColorTextHTML(int _difficulty)
	{
		return null;
	}

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0xDF9158", Offset = "0xDF9158", VA = "0xDF9158")]
	public List<ActBase> GetActs()
	{
		return null;
	}

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0xDF9160", Offset = "0xDF9160", VA = "0xDF9160")]
	public ActBase GetAct(int id)
	{
		return null;
	}

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0xDF9224", Offset = "0xDF9224", VA = "0xDF9224")]
	public ActBase GetActWithIdSongInfoCampaign(int id_song_info_campaign)
	{
		return null;
	}

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0xDF9488", Offset = "0xDF9488", VA = "0xDF9488")]
	public List<ChapterBase> GetChapters()
	{
		return null;
	}

	[Token(Token = "0x60005F2")]
	[Address(RVA = "0xDF9490", Offset = "0xDF9490", VA = "0xDF9490")]
	public ChapterBase GetChapter(int id)
	{
		return null;
	}

	[Token(Token = "0x60005F3")]
	[Address(RVA = "0xDF9368", Offset = "0xDF9368", VA = "0xDF9368")]
	public ChapterBase GetChapterWithIdSongInfoCampaign(int id_song_info_campaign)
	{
		return null;
	}

	[Token(Token = "0x60005F4")]
	[Address(RVA = "0xDF9554", Offset = "0xDF9554", VA = "0xDF9554")]
	public List<SongInfoCampaign> GetCampaignSongs()
	{
		return null;
	}

	[Token(Token = "0x60005F5")]
	[Address(RVA = "0xDF955C", Offset = "0xDF955C", VA = "0xDF955C")]
	public Song GetCampaignSongInfo(int id_song_info_campaign)
	{
		return null;
	}

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0xDF96B8", Offset = "0xDF96B8", VA = "0xDF96B8")]
	public Song GetCampaignSongInfo()
	{
		return null;
	}

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0xDF96D8", Offset = "0xDF96D8", VA = "0xDF96D8")]
	public SongInfoCampaign GetSongInfoCampaign()
	{
		return null;
	}

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0xDF97BC", Offset = "0xDF97BC", VA = "0xDF97BC")]
	public void SetSongInfoCampaign(SongInfoCampaign _newInfo)
	{
	}

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0xDF8784", Offset = "0xDF8784", VA = "0xDF8784")]
	public string GetSceneName(string _key)
	{
		return null;
	}

	[Token(Token = "0x60005FA")]
	[Address(RVA = "0xDF98A4", Offset = "0xDF98A4", VA = "0xDF98A4")]
	public string GetSceneKey(string _name)
	{
		return null;
	}

	[Token(Token = "0x60005FB")]
	[Address(RVA = "0xDF9994", Offset = "0xDF9994", VA = "0xDF9994")]
	private void Load()
	{
	}

	[Token(Token = "0x60005FC")]
	[Address(RVA = "0xDF9F64", Offset = "0xDF9F64", VA = "0xDF9F64")]
	private void OldVersionCheck(CustomSaveData _tempSave)
	{
	}

	[Token(Token = "0x60005FD")]
	[Address(RVA = "0xDFAFF4", Offset = "0xDFAFF4", VA = "0xDFAFF4")]
	public void CheckInitialLatency()
	{
	}

	[Token(Token = "0x60005FE")]
	[Address(RVA = "0xDFABC8", Offset = "0xDFABC8", VA = "0xDFABC8")]
	private void CheckSongSaves()
	{
	}

	[Token(Token = "0x60005FF")]
	[Address(RVA = "0xDFA94C", Offset = "0xDFA94C", VA = "0xDFA94C")]
	public void LoadSongs()
	{
	}

	[Token(Token = "0x6000600")]
	[Address(RVA = "0xDFA4BC", Offset = "0xDFA4BC", VA = "0xDFA4BC")]
	private void CheckHasDefaultStoreItems()
	{
	}

	[Token(Token = "0x6000601")]
	[Address(RVA = "0xDFB2EC", Offset = "0xDFB2EC", VA = "0xDFB2EC")]
	public void KillAllTweens()
	{
	}

	[Token(Token = "0x6000602")]
	[Address(RVA = "0xDF6CAC", Offset = "0xDF6CAC", VA = "0xDF6CAC")]
	[IteratorStateMachine(typeof(<CheckSteamOverlay>d__164))]
	private IEnumerator CheckSteamOverlay()
	{
		return null;
	}

	[Token(Token = "0x6000603")]
	[Address(RVA = "0xDFB340", Offset = "0xDFB340", VA = "0xDFB340")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x6000604")]
	[Address(RVA = "0xDFB38C", Offset = "0xDFB38C", VA = "0xDFB38C")]
	private void OverlayMenuPause(bool _pauseStatus)
	{
	}

	[Token(Token = "0x6000605")]
	[Address(RVA = "0xDFB4E8", Offset = "0xDFB4E8", VA = "0xDFB4E8")]
	private void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x6000606")]
	[Address(RVA = "0xDFB7D4", Offset = "0xDFB7D4", VA = "0xDFB7D4")]
	private void OnPicoLostFocus()
	{
	}

	[Token(Token = "0x6000607")]
	[Address(RVA = "0xDFB7F4", Offset = "0xDFB7F4", VA = "0xDFB7F4")]
	private void OnPicoAcquiredFocus()
	{
	}

	[Token(Token = "0x6000608")]
	[Address(RVA = "0xDFB484", Offset = "0xDFB484", VA = "0xDFB484")]
	private void GarbageCollect()
	{
	}

	[Token(Token = "0x6000609")]
	[Address(RVA = "0xDF72EC", Offset = "0xDF72EC", VA = "0xDF72EC")]
	private void CheckGarbageCollect()
	{
	}

	[Token(Token = "0x600060A")]
	[Address(RVA = "0xDFB814", Offset = "0xDFB814", VA = "0xDFB814")]
	public int GetToughEnemiesRate()
	{
		return default(int);
	}

	[Token(Token = "0x600060B")]
	[Address(RVA = "0xDFB81C", Offset = "0xDFB81C", VA = "0xDFB81C")]
	public int GetSwapDrumsRate()
	{
		return default(int);
	}

	[Token(Token = "0x600060C")]
	[Address(RVA = "0xDFB824", Offset = "0xDFB824", VA = "0xDFB824")]
	public void InitLoadBlindMode()
	{
	}

	[Token(Token = "0x600060D")]
	[Address(RVA = "0xE032F8", Offset = "0xE032F8", VA = "0xE032F8")]
	public void InitBlindMode(int _track)
	{
	}

	[Token(Token = "0x600060E")]
	[Address(RVA = "0xDF6F9C", Offset = "0xDF6F9C", VA = "0xDF6F9C")]
	public void BlindModeUpdate()
	{
	}

	[Token(Token = "0x600060F")]
	[Address(RVA = "0xE032FC", Offset = "0xE032FC", VA = "0xE032FC")]
	public void ResetBlindModeFadeList()
	{
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0xE033A0", Offset = "0xE033A0", VA = "0xE033A0")]
	public void AddHitBetweenSticksCountToStartSong()
	{
	}

	[Token(Token = "0x6000611")]
	[Address(RVA = "0xDF6EF8", Offset = "0xDF6EF8", VA = "0xDF6EF8")]
	private void UpdateHitBetweenSticks()
	{
	}

	[Token(Token = "0x6000612")]
	[Address(RVA = "0xE03494", Offset = "0xE03494", VA = "0xE03494")]
	public Color GetColorFresnel()
	{
		return default(Color);
	}

	[Token(Token = "0x6000613")]
	[Address(RVA = "0xE034E8", Offset = "0xE034E8", VA = "0xE034E8")]
	public Escenario GetEscenario()
	{
		return default(Escenario);
	}

	[Token(Token = "0x6000614")]
	[Address(RVA = "0xE034F0", Offset = "0xE034F0", VA = "0xE034F0")]
	public BuildOS GetBuildVersion()
	{
		return default(BuildOS);
	}

	[Token(Token = "0x6000615")]
	[Address(RVA = "0xE034F8", Offset = "0xE034F8", VA = "0xE034F8")]
	public string GetStringEscenarioToLoad()
	{
		return null;
	}

	[Token(Token = "0x6000616")]
	[Address(RVA = "0xE03580", Offset = "0xE03580", VA = "0xE03580")]
	public void ResetHitBetweenSticksCountToStartSong()
	{
	}

	[Token(Token = "0x6000617")]
	[Address(RVA = "0xE0358C", Offset = "0xE0358C", VA = "0xE0358C")]
	public bool IsTutorialDoneFirstTime()
	{
		return default(bool);
	}

	[Token(Token = "0x6000618")]
	[Address(RVA = "0xE03594", Offset = "0xE03594", VA = "0xE03594")]
	public void CompleteTutorialDoneFirstTime()
	{
	}

	[Token(Token = "0x6000619")]
	[Address(RVA = "0xE035FC", Offset = "0xE035FC", VA = "0xE035FC")]
	public int GetCurrentIdSongsInfoCampaign()
	{
		return default(int);
	}

	[Token(Token = "0x600061A")]
	[Address(RVA = "0xDF96F8", Offset = "0xDF96F8", VA = "0xDF96F8")]
	public SongInfoCampaign GetSongInfoCampaign(int _Id_SongsInfoCampaign)
	{
		return null;
	}

	[Token(Token = "0x600061B")]
	[Address(RVA = "0xE03604", Offset = "0xE03604", VA = "0xE03604")]
	public int GetStarsUnlockedCount()
	{
		return default(int);
	}

	[Token(Token = "0x600061C")]
	[Address(RVA = "0xE036A8", Offset = "0xE036A8", VA = "0xE036A8")]
	public int GetTotalStarsCount()
	{
		return default(int);
	}

	[Token(Token = "0x600061D")]
	[Address(RVA = "0xE0374C", Offset = "0xE0374C", VA = "0xE0374C")]
	public string GetPaperStarsText(StarCondition starCondition)
	{
		return null;
	}

	[Token(Token = "0x600061E")]
	[Address(RVA = "0xE04424", Offset = "0xE04424", VA = "0xE04424")]
	public string GetVariationText(VariationMode variationMode)
	{
		return null;
	}

	[Token(Token = "0x600061F")]
	[Address(RVA = "0xE046AC", Offset = "0xE046AC", VA = "0xE046AC")]
	public void SetVariationMode(VariationMode variationMode)
	{
	}

	[Token(Token = "0x6000620")]
	[Address(RVA = "0xE046B4", Offset = "0xE046B4", VA = "0xE046B4")]
	public VariationMode GetCurrentVariation()
	{
		return default(VariationMode);
	}

	[Token(Token = "0x6000621")]
	[Address(RVA = "0xE046BC", Offset = "0xE046BC", VA = "0xE046BC")]
	public void AddMoney(int money_to_add)
	{
	}

	[Token(Token = "0x6000622")]
	[Address(RVA = "0xE046E4", Offset = "0xE046E4", VA = "0xE046E4")]
	public uint GetMoney()
	{
		return default(uint);
	}

	[Token(Token = "0x6000623")]
	[Address(RVA = "0xE046EC", Offset = "0xE046EC", VA = "0xE046EC")]
	public ChapterBase GetCurrentChapter()
	{
		return null;
	}

	[Token(Token = "0x6000624")]
	[Address(RVA = "0xE04814", Offset = "0xE04814", VA = "0xE04814")]
	public ChapterBase GetCurrentChapter(int current_total_stars_count)
	{
		return null;
	}

	[Token(Token = "0x6000625")]
	[Address(RVA = "0xE0492C", Offset = "0xE0492C", VA = "0xE0492C")]
	public ActBase GetCurrentAct()
	{
		return null;
	}

	[Token(Token = "0x6000626")]
	[Address(RVA = "0xE04B4C", Offset = "0xE04B4C", VA = "0xE04B4C")]
	public ActBase GetCurrentAct(int current_total_stars_count)
	{
		return null;
	}

	[Token(Token = "0x6000627")]
	[Address(RVA = "0xE04D5C", Offset = "0xE04D5C", VA = "0xE04D5C")]
	public bool HasStoreItemUnlocked(uint id_item, StoreItemType type)
	{
		return default(bool);
	}

	[Token(Token = "0x6000628")]
	[Address(RVA = "0xDFAFF8", Offset = "0xDFAFF8", VA = "0xDFAFF8")]
	public bool HasStoreItemPurchased(uint id_item, StoreItemType type)
	{
		return default(bool);
	}

	[Token(Token = "0x6000629")]
	[Address(RVA = "0xE04E50", Offset = "0xE04E50", VA = "0xE04E50")]
	public int StoreItemPurchasedCount(StoreItemType type)
	{
		return default(int);
	}

	[Token(Token = "0x600062A")]
	[Address(RVA = "0xE04F14", Offset = "0xE04F14", VA = "0xE04F14")]
	public void UnlockStoreItem(uint id_item, StoreItemType type)
	{
	}

	[Token(Token = "0x600062B")]
	[Address(RVA = "0xDFB0EC", Offset = "0xDFB0EC", VA = "0xDFB0EC")]
	public void PurchaseStoreItem(uint id_item, StoreItemType type)
	{
	}

	[Token(Token = "0x600062C")]
	[Address(RVA = "0xE050FC", Offset = "0xE050FC", VA = "0xE050FC")]
	public uint GetIdEquippedItem(StoreItemType type)
	{
		return default(uint);
	}

	[Token(Token = "0x600062D")]
	[Address(RVA = "0xE05130", Offset = "0xE05130", VA = "0xE05130")]
	public void EquipItem(uint id_item, StoreItemType type)
	{
	}

	[Token(Token = "0x600062E")]
	[Address(RVA = "0xE05164", Offset = "0xE05164", VA = "0xE05164")]
	public List<UnlockStoreItemsCond> GetUnlockStoreItemsCondList()
	{
		return null;
	}

	[Token(Token = "0x600062F")]
	[Address(RVA = "0xE0516C", Offset = "0xE0516C", VA = "0xE0516C")]
	public string GetRankingLetterText(Ranking ranking)
	{
		return null;
	}

	[Token(Token = "0x6000630")]
	[Address(RVA = "0xE05220", Offset = "0xE05220", VA = "0xE05220")]
	public string GetRankingLetterColorText(Ranking ranking)
	{
		return null;
	}

	[Token(Token = "0x6000631")]
	[Address(RVA = "0xE052C8", Offset = "0xE052C8", VA = "0xE052C8")]
	public bool GetIfPendentStoreItemsToVisit()
	{
		return default(bool);
	}

	[Token(Token = "0x6000632")]
	[Address(RVA = "0xE05508", Offset = "0xE05508", VA = "0xE05508")]
	public bool GetIfStoreItemIsPendentToVisit(uint id, StoreItemType type)
	{
		return default(bool);
	}

	[Token(Token = "0x6000633")]
	[Address(RVA = "0xE055F8", Offset = "0xE055F8", VA = "0xE055F8")]
	public void RemoveStoreItemToVisit(uint id, StoreItemType type)
	{
	}

	[Token(Token = "0x6000634")]
	[Address(RVA = "0xDF669C", Offset = "0xDF669C", VA = "0xDF669C")]
	public void CheckAllUnlockStoreItems()
	{
	}

	[Token(Token = "0x6000635")]
	[Address(RVA = "0xE05750", Offset = "0xE05750", VA = "0xE05750")]
	public void CheckUnlockStoreItem(Song _tempSong, int starsUnlockedCount, int id_track, int currentIdSongsInfoCampaing, SongDifficulty difficulty, GameMode gameMode, bool afterSong)
	{
	}

	[Token(Token = "0x6000636")]
	[Address(RVA = "0xE05B8C", Offset = "0xE05B8C", VA = "0xE05B8C")]
	public string GetUnlockIdCampaingCompletedText(uint id_campaign_song_completed)
	{
		return null;
	}

	[Token(Token = "0x6000637")]
	[Address(RVA = "0xE05D20", Offset = "0xE05D20", VA = "0xE05D20")]
	public bool HasTVCinematicSeen(TVCinematicType tvCinematicType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000638")]
	[Address(RVA = "0xE05DC0", Offset = "0xE05DC0", VA = "0xE05DC0")]
	public void AddTVCinematicSeen(TVCinematicType tvCinematicType)
	{
	}

	[Token(Token = "0x6000639")]
	[Address(RVA = "0xE05E88", Offset = "0xE05E88", VA = "0xE05E88")]
	public void SetLastCampaignPlayedInfo(int last_id_act, float last_scroll_value)
	{
	}

	[Token(Token = "0x600063A")]
	[Address(RVA = "0xE05EA8", Offset = "0xE05EA8", VA = "0xE05EA8")]
	public void SetLastCampaignPlayedInfoReturnFromContinue(bool is_return_from_continue)
	{
	}

	[Token(Token = "0x600063B")]
	[Address(RVA = "0xE05EC8", Offset = "0xE05EC8", VA = "0xE05EC8")]
	public void SetLastCampaignPlayedInfoReturnFromFinal(bool is_from_final_campaign)
	{
	}

	[Token(Token = "0x600063C")]
	[Address(RVA = "0xE05EE8", Offset = "0xE05EE8", VA = "0xE05EE8")]
	public LastCampaignPlayedInfo GetLastCampaingPlayedInfo()
	{
		return null;
	}

	[Token(Token = "0x600063D")]
	[Address(RVA = "0xE05EF0", Offset = "0xE05EF0", VA = "0xE05EF0")]
	public void SetLastChallengePlayedInfo(float last_scroll_value, int _difficulty)
	{
	}

	[Token(Token = "0x600063E")]
	[Address(RVA = "0xE05F10", Offset = "0xE05F10", VA = "0xE05F10")]
	public void SetLastChallengePlayedInfoReturnFromContinue(bool is_return_from_continue)
	{
	}

	[Token(Token = "0x600063F")]
	[Address(RVA = "0xE05F30", Offset = "0xE05F30", VA = "0xE05F30")]
	public LastChallengePlayedInfo GetLastChallengePlayedInfo()
	{
		return null;
	}

	[Token(Token = "0x6000640")]
	[Address(RVA = "0xE05F38", Offset = "0xE05F38", VA = "0xE05F38")]
	public GameController()
	{
	}
}
[Token(Token = "0x2000138")]
public enum SongDifficulty
{
	[Token(Token = "0x4000733")]
	Easy,
	[Token(Token = "0x4000734")]
	Normal,
	[Token(Token = "0x4000735")]
	Hard,
	[Token(Token = "0x4000736")]
	Extreme,
	[Token(Token = "0x4000737")]
	Custom_Songs
}
[Token(Token = "0x2000139")]
public enum SongTrack
{
	[Token(Token = "0x4000739")]
	None = 0,
	[Token(Token = "0x400073A")]
	Track1 = 1,
	[Token(Token = "0x400073B")]
	Track2 = 2,
	[Token(Token = "0x400073C")]
	Track3 = 3,
	[Token(Token = "0x400073D")]
	Track4 = 4,
	[Token(Token = "0x400073E")]
	Track5 = 5,
	[Token(Token = "0x400073F")]
	Track6 = 6,
	[Token(Token = "0x4000740")]
	Track7 = 7,
	[Token(Token = "0x4000741")]
	Track8 = 8,
	[Token(Token = "0x4000742")]
	Track9 = 9,
	[Token(Token = "0x4000743")]
	Track10 = 10,
	[Token(Token = "0x4000744")]
	Track11 = 11,
	[Token(Token = "0x4000745")]
	Track12 = 12,
	[Token(Token = "0x4000746")]
	Track13 = 13,
	[Token(Token = "0x4000747")]
	Track14 = 14,
	[Token(Token = "0x4000748")]
	Track15 = 15,
	[Token(Token = "0x4000749")]
	Track16 = 16,
	[Token(Token = "0x400074A")]
	Track17 = 17,
	[Token(Token = "0x400074B")]
	Track18 = 18,
	[Token(Token = "0x400074C")]
	Track19 = 19,
	[Token(Token = "0x400074D")]
	Track20 = 20,
	[Token(Token = "0x400074E")]
	Track21 = 21,
	[Token(Token = "0x400074F")]
	Track22 = 22,
	[Token(Token = "0x4000750")]
	Track23 = 23,
	[Token(Token = "0x4000751")]
	Track24 = 24,
	[Token(Token = "0x4000752")]
	Track25 = 25,
	[Token(Token = "0x4000753")]
	Track26 = 26,
	[Token(Token = "0x4000754")]
	Track27 = 27,
	[Token(Token = "0x4000755")]
	Track28 = 28,
	[Token(Token = "0x4000756")]
	Track29 = 29,
	[Token(Token = "0x4000757")]
	Track30 = 30,
	[Token(Token = "0x4000758")]
	Track31 = 31,
	[Token(Token = "0x4000759")]
	Track32 = 32,
	[Token(Token = "0x400075A")]
	Track33 = 33,
	[Token(Token = "0x400075B")]
	Track34 = 34,
	[Token(Token = "0x400075C")]
	Track35 = 35,
	[Token(Token = "0x400075D")]
	Track36 = 36,
	[Token(Token = "0x400075E")]
	Track37 = 37,
	[Token(Token = "0x400075F")]
	Track38 = 38,
	[Token(Token = "0x4000760")]
	Track39 = 39,
	[Token(Token = "0x4000761")]
	Tutorial = 10000,
	[Token(Token = "0x4000762")]
	TutorialWithSong = 10001,
	[Token(Token = "0x4000763")]
	TutorialLoopPerfect = 10002,
	[Token(Token = "0x4000764")]
	TutorialSpecialDemons = 10003,
	[Token(Token = "0x4000765")]
	CustomSong = 10004
}
[Token(Token = "0x200013A")]
public enum GameMode
{
	[Token(Token = "0x4000767")]
	Lobby,
	[Token(Token = "0x4000768")]
	Shop,
	[Token(Token = "0x4000769")]
	Campaign,
	[Token(Token = "0x400076A")]
	Challenge,
	[Token(Token = "0x400076B")]
	Settings
}
[Token(Token = "0x200013B")]
public enum VariationMode
{
	[Token(Token = "0x400076D")]
	NONE,
	[Token(Token = "0x400076E")]
	PUNCHING_GLOVES,
	[Token(Token = "0x400076F")]
	ONE_DRUMSSTICK_HERO,
	[Token(Token = "0x4000770")]
	BE_A_HERO,
	[Token(Token = "0x4000771")]
	UNSTABLE_DRUMSSTICK,
	[Token(Token = "0x4000772")]
	WITHOUT_HELP,
	[Token(Token = "0x4000773")]
	SMASHING_DRUMS,
	[Token(Token = "0x4000774")]
	BLIND,
	[Token(Token = "0x4000775")]
	THOUGH_ENEMIES,
	[Token(Token = "0x4000776")]
	SWAPPING_DRUMS
}
[Token(Token = "0x200013C")]
public enum Escenario
{
	[Token(Token = "0x4000778")]
	VULCAN,
	[Token(Token = "0x4000779")]
	DESERT,
	[Token(Token = "0x400077A")]
	HIGHWAY,
	[Token(Token = "0x400077B")]
	MENU
}
[Token(Token = "0x200013D")]
public enum SongOrigin
{
	[Token(Token = "0x400077D")]
	ORIGINAL,
	[Token(Token = "0x400077E")]
	GROUP,
	[Token(Token = "0x400077F")]
	VIDEOGAME,
	[Token(Token = "0x4000780")]
	CUSTOM_SONG
}
[Token(Token = "0x200013E")]
public enum BuildOS
{
	[Token(Token = "0x4000782")]
	ANDROID,
	[Token(Token = "0x4000783")]
	STEAM,
	[Token(Token = "0x4000784")]
	PS5
}
[Token(Token = "0x200013F")]
public enum VRPlugin
{
	[Token(Token = "0x4000786")]
	XR_INTERACTIONS,
	[Token(Token = "0x4000787")]
	STEAM_VR,
	[Token(Token = "0x4000788")]
	YVR,
	[Token(Token = "0x4000789")]
	PICO,
	[Token(Token = "0x400078A")]
	QIYU,
	[Token(Token = "0x400078B")]
	PSVR2
}
[Token(Token = "0x2000140")]
public enum ExternalAudioState
{
	[Token(Token = "0x400078D")]
	CONNECTING,
	[Token(Token = "0x400078E")]
	CONNECTED,
	[Token(Token = "0x400078F")]
	DISCONNECTING,
	[Token(Token = "0x4000790")]
	DISCONNECTED,
	[Token(Token = "0x4000791")]
	CHANGED
}
[Token(Token = "0x2000141")]
public enum AndroidRenderMode
{
	[Token(Token = "0x4000793")]
	QUALITY,
	[Token(Token = "0x4000794")]
	PERFORMANCE
}
[Token(Token = "0x2000142")]
public enum GrabMode
{
	[Token(Token = "0x4000796")]
	HOLD,
	[Token(Token = "0x4000797")]
	TOGGLE,
	[Token(Token = "0x4000798")]
	STICKY
}
[Serializable]
[Token(Token = "0x2000143")]
public class Song
{
	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	public int ID;

	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	public int Order;

	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public int DemoOrder;

	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public string Name;

	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public string AutorName;

	[Token(Token = "0x400079E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	public float Duration;

	[Token(Token = "0x400079F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	public bool is_unlocked_challenge;

	[Token(Token = "0x40007A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	[SerializeField]
	public bool is_enabled;

	[Token(Token = "0x40007A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	public Escenario AsignedEscenario;

	[Token(Token = "0x40007A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	public SongOrigin songOrigin;

	[Token(Token = "0x40007A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<SongInfo> DifficultiesInfo;

	[Token(Token = "0x6000661")]
	[Address(RVA = "0xE08808", Offset = "0xE08808", VA = "0xE08808")]
	public void Load(ChallengeSongSaveData cssd)
	{
	}

	[Token(Token = "0x6000662")]
	[Address(RVA = "0xE08B68", Offset = "0xE08B68", VA = "0xE08B68")]
	public string GetName()
	{
		return null;
	}

	[Token(Token = "0x6000663")]
	[Address(RVA = "0xE08C28", Offset = "0xE08C28", VA = "0xE08C28")]
	public float GetDuration()
	{
		return default(float);
	}

	[Token(Token = "0x6000664")]
	[Address(RVA = "0xE08C30", Offset = "0xE08C30", VA = "0xE08C30")]
	public int GetID()
	{
		return default(int);
	}

	[Token(Token = "0x6000665")]
	[Address(RVA = "0xE08C38", Offset = "0xE08C38", VA = "0xE08C38")]
	public Escenario GetScene()
	{
		return default(Escenario);
	}

	[Token(Token = "0x6000666")]
	[Address(RVA = "0xE08C40", Offset = "0xE08C40", VA = "0xE08C40")]
	public Song()
	{
	}
}
[Serializable]
[Token(Token = "0x2000144")]
public class ChapterBase
{
	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	public int Id;

	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public string Name;

	[Token(Token = "0x40007A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public int[] Id_SongsInfoCampaign;

	[Token(Token = "0x40007A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public int min_stars;

	[Token(Token = "0x6000667")]
	[Address(RVA = "0xE08CC8", Offset = "0xE08CC8", VA = "0xE08CC8")]
	public ChapterBase()
	{
	}
}
[Serializable]
[Token(Token = "0x2000145")]
public class ActBase
{
	[Token(Token = "0x40007A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	public int ID;

	[Token(Token = "0x40007A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public string Name;

	[Token(Token = "0x40007AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public int[] Id_Chapter;

	[Token(Token = "0x6000668")]
	[Address(RVA = "0xE08CD0", Offset = "0xE08CD0", VA = "0xE08CD0")]
	public ActBase()
	{
	}
}
[Serializable]
[Token(Token = "0x2000146")]
public class CustomSong
{
	[Token(Token = "0x40007AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	public int ID;

	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public string path;

	[Token(Token = "0x40007AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public SongDifficulty difficultyInfo;

	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public Song song;

	[Token(Token = "0x40007AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	public AudioClip preview;

	[Token(Token = "0x6000669")]
	[Address(RVA = "0xE08CD8", Offset = "0xE08CD8", VA = "0xE08CD8")]
	public CustomSong(int _ID, string _path)
	{
	}

	[Token(Token = "0x600066A")]
	[Address(RVA = "0xE095F0", Offset = "0xE095F0", VA = "0xE095F0")]
	public string GetCSV()
	{
		return null;
	}

	[Token(Token = "0x600066B")]
	[Address(RVA = "0xE09644", Offset = "0xE09644", VA = "0xE09644")]
	public AudioClip[] GetSongClips()
	{
		return null;
	}
}
[Serializable]
[Token(Token = "0x2000147")]
public class BindModeFade
{
	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float time;

	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool is_fade_in;

	[Token(Token = "0x40007B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	public bool has_done;

	[Token(Token = "0x40007B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
	public bool has_warning_show_up;

	[Token(Token = "0x600066C")]
	[Address(RVA = "0xE097DC", Offset = "0xE097DC", VA = "0xE097DC")]
	public BindModeFade(float time, bool is_fade_in)
	{
	}
}
[Serializable]
[Token(Token = "0x2000148")]
public class UnlockStoreItemsCond
{
	[Token(Token = "0x40007B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint id_item;

	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public StoreItemType item_type;

	[Token(Token = "0x40007B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnlockStoreItemsCondType unlock_type;

	[Token(Token = "0x40007B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int id_campaign_song_completed;

	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int min_stars;

	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int min_letter_rank_id_song_challenge;

	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SongDifficulty min_letter_rank_difficulty_challenge;

	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Ranking min_letter_rank_challenge;

	[Token(Token = "0x600066D")]
	[Address(RVA = "0xE09818", Offset = "0xE09818", VA = "0xE09818")]
	public UnlockStoreItemsCond()
	{
	}
}
[Token(Token = "0x2000149")]
public enum UnlockStoreItemsCondType
{
	[Token(Token = "0x40007BD")]
	NONE,
	[Token(Token = "0x40007BE")]
	SONG_CAMPAIGN_COMPLETED,
	[Token(Token = "0x40007BF")]
	MIN_STARS,
	[Token(Token = "0x40007C0")]
	MIN_LETTER_RANK_CHALLENGE
}
[Token(Token = "0x200014A")]
public class LastCampaignPlayedInfo
{
	[Token(Token = "0x40007C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int last_id_act;

	[Token(Token = "0x40007C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float last_scroll_value;

	[Token(Token = "0x40007C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool is_return_from_continue;

	[Token(Token = "0x40007C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool is_from_final_campaign;

	[Token(Token = "0x600066E")]
	[Address(RVA = "0xE09820", Offset = "0xE09820", VA = "0xE09820")]
	public LastCampaignPlayedInfo()
	{
	}
}
[Token(Token = "0x200014B")]
public class LastChallengePlayedInfo
{
	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float last_scroll_value;

	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool is_return_from_continue;

	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int difficulty;

	[Token(Token = "0x600066F")]
	[Address(RVA = "0xE09848", Offset = "0xE09848", VA = "0xE09848")]
	public LastChallengePlayedInfo()
	{
	}
}
[Token(Token = "0x200014C")]
public class GamePurchaseController : MonoBehaviour
{
	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject Notification;

	[Token(Token = "0x6000670")]
	[Address(RVA = "0xE09870", Offset = "0xE09870", VA = "0xE09870")]
	private void Start()
	{
	}

	[Token(Token = "0x6000671")]
	[Address(RVA = "0xE09874", Offset = "0xE09874", VA = "0xE09874")]
	private void NotificationAnimation()
	{
	}

	[Token(Token = "0x6000672")]
	[Address(RVA = "0xE099D4", Offset = "0xE099D4", VA = "0xE099D4")]
	public void HideNotification()
	{
	}

	[Token(Token = "0x6000673")]
	[Address(RVA = "0xE099F4", Offset = "0xE099F4", VA = "0xE099F4")]
	public void ShowGamePurchaseOnWebBrowser()
	{
	}

	[Token(Token = "0x6000674")]
	[Address(RVA = "0xE099F8", Offset = "0xE099F8", VA = "0xE099F8")]
	public GamePurchaseController()
	{
	}
}
[Token(Token = "0x200014E")]
public class HapticController : MonoBehaviour
{
	[Token(Token = "0x200014F")]
	private struct HapticImpulse
	{
		[Token(Token = "0x40007D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float frequency;

		[Token(Token = "0x40007D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float amplitude;

		[Token(Token = "0x40007D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float duration;

		[Token(Token = "0x40007D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float timeStamp;

		[Token(Token = "0x6000682")]
		[Address(RVA = "0xE0A53C", Offset = "0xE0A53C", VA = "0xE0A53C")]
		public HapticImpulse(float _frequency, float _amplitude, float _duration)
		{
		}
	}

	[Token(Token = "0x2000150")]
	[CompilerGenerated]
	private sealed class <PS5Vibration>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float _duration;

		[Token(Token = "0x40007DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioSource _audioSource;

		[Token(Token = "0x17000074")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000686")]
			[Address(RVA = "0xE0A668", Offset = "0xE0A668", VA = "0xE0A668", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000075")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000688")]
			[Address(RVA = "0xE0A6B0", Offset = "0xE0A6B0", VA = "0xE0A6B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000683")]
		[Address(RVA = "0xE0A008", Offset = "0xE0A008", VA = "0xE0A008")]
		[DebuggerHidden]
		public <PS5Vibration>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6000684")]
		[Address(RVA = "0xE0A56C", Offset = "0xE0A56C", VA = "0xE0A56C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000685")]
		[Address(RVA = "0xE0A570", Offset = "0xE0A570", VA = "0xE0A570", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000687")]
		[Address(RVA = "0xE0A670", Offset = "0xE0A670", VA = "0xE0A670", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000151")]
	[CompilerGenerated]
	private sealed class <OculusVibration>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float _duration;

		[Token(Token = "0x40007E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float _frequency;

		[Token(Token = "0x40007E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float _amplitude;

		[Token(Token = "0x40007E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public OVRInput.Controller _controller;

		[Token(Token = "0x17000076")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600068C")]
			[Address(RVA = "0xE0A7E4", Offset = "0xE0A7E4", VA = "0xE0A7E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000077")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600068E")]
			[Address(RVA = "0xE0A82C", Offset = "0xE0A82C", VA = "0xE0A82C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000689")]
		[Address(RVA = "0xE0A030", Offset = "0xE0A030", VA = "0xE0A030")]
		[DebuggerHidden]
		public <OculusVibration>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x600068A")]
		[Address(RVA = "0xE0A6B8", Offset = "0xE0A6B8", VA = "0xE0A6B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600068B")]
		[Address(RVA = "0xE0A6BC", Offset = "0xE0A6BC", VA = "0xE0A6BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600068D")]
		[Address(RVA = "0xE0A7EC", Offset = "0xE0A7EC", VA = "0xE0A7EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static HapticController instance;

	[Token(Token = "0x40007CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private UnityEngine.XR.InputDevice rightHand;

	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private UnityEngine.XR.InputDevice leftHand;

	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float last_left_haptic_timestamp;

	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float last_left_haptic_duration;

	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float last_right_haptic_timestamp;

	[Token(Token = "0x40007D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float last_right_haptic_duration;

	[Token(Token = "0x40007D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool yvr_vibration_left;

	[Token(Token = "0x40007D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool yvr_vibration_right;

	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<HapticImpulse> leftHapticImpulses;

	[Token(Token = "0x40007D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<HapticImpulse> rightHapticImpulses;

	[Token(Token = "0x6000677")]
	[Address(RVA = "0xE09A6C", Offset = "0xE09A6C", VA = "0xE09A6C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000678")]
	[Address(RVA = "0xE09B38", Offset = "0xE09B38", VA = "0xE09B38")]
	private void Start()
	{
	}

	[Token(Token = "0x6000679")]
	[Address(RVA = "0xE09C04", Offset = "0xE09C04", VA = "0xE09C04")]
	public void PlayHmdHaptics(float _amplitude = 0.49f, float _duration = 0.19f)
	{
	}

	[Token(Token = "0x600067A")]
	[Address(RVA = "0xE09C08", Offset = "0xE09C08", VA = "0xE09C08")]
	public void PlayHapticRightHand(uint channel, float amplitude, float duration, float frequency = 0.8f, bool overrideHaptics = true, IconsType iconsType = IconsType.NONE)
	{
	}

	[Token(Token = "0x600067B")]
	[Address(RVA = "0xE09F84", Offset = "0xE09F84", VA = "0xE09F84")]
	[IteratorStateMachine(typeof(<PS5Vibration>d__15))]
	private IEnumerator PS5Vibration(AudioSource _audioSource, float _duration)
	{
		return null;
	}

	[Token(Token = "0x600067C")]
	[Address(RVA = "0xE09EF8", Offset = "0xE09EF8", VA = "0xE09EF8")]
	[IteratorStateMachine(typeof(<OculusVibration>d__16))]
	private IEnumerator OculusVibration(float _duration, float _amplitude, float _frequency, OVRInput.Controller _controller)
	{
		return null;
	}

	[Token(Token = "0x600067D")]
	[Address(RVA = "0xE0A058", Offset = "0xE0A058", VA = "0xE0A058")]
	public void PlayHapticLeftHand(uint channel, float amplitude, float duration, float frequency = 0.8f, bool overrideHaptics = true, IconsType iconsType = IconsType.NONE)
	{
	}

	[Token(Token = "0x600067E")]
	[Address(RVA = "0xE0A348", Offset = "0xE0A348", VA = "0xE0A348")]
	public void PlayHapticRightHandOverride(uint channel, float amplitude, float duration)
	{
	}

	[Token(Token = "0x600067F")]
	[Address(RVA = "0xE0A43C", Offset = "0xE0A43C", VA = "0xE0A43C")]
	public void PlayHapticLeftHandOverride(uint channel, float amplitude, float duration)
	{
	}

	[Token(Token = "0x6000680")]
	[Address(RVA = "0xE0A530", Offset = "0xE0A530", VA = "0xE0A530")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000681")]
	[Address(RVA = "0xE0A534", Offset = "0xE0A534", VA = "0xE0A534")]
	public HapticController()
	{
	}
}
[Token(Token = "0x2000152")]
public class LobbyController : MonoBehaviour
{
	[Token(Token = "0x40007E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject Chapter;

	[Token(Token = "0x40007E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject Stars;

	[Token(Token = "0x40007E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject NewSong;

	[Token(Token = "0x40007E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject NewItem;

	[Token(Token = "0x40007E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject Settings;

	[Token(Token = "0x40007E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject Tutorial;

	[Token(Token = "0x40007EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject QuitBtn;

	[Token(Token = "0x40007EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject RoadmapBtn;

	[Token(Token = "0x40007EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject Roadmap;

	[Token(Token = "0x40007ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private GameObject CloseRoadmapBtn;

	[Token(Token = "0x40007EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private GameObject GamePurchasePopUpBtn;

	[Token(Token = "0x40007EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private GameObject GamePurchaseBtn;

	[Token(Token = "0x40007F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private GameObject GamePurchase;

	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private GameObject CloseGamePurchaseBtn;

	[Token(Token = "0x40007F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private GameObject HideUIBtn;

	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private GameObject ShopNotification;

	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private GameObject NewsNotification;

	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private GameObject ApplicationQuitPopUp;

	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private GameObject ApplicationQuitCancelBtn;

	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private GameObject ApplicationQuitExitBtn;

	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private GameObject NewsBtn;

	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private GameObject News;

	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private GameObject CloseNewsBtn;

	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private GameObject Scrollbar;

	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float final_axis_scroll_speed;

	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float final_pag_scroll_speed;

	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private GameObject[] Frames;

	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private GameObject[] DemoStickers;

	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[HideInInspector]
	public List<XRCustomButtonInteractable> backButtons;

	[Token(Token = "0x4000801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private float lastHideNewsTimeStamp;

	[Token(Token = "0x600068F")]
	[Address(RVA = "0xE0A834", Offset = "0xE0A834", VA = "0xE0A834")]
	private void Start()
	{
	}

	[Token(Token = "0x6000690")]
	[Address(RVA = "0xE0AF68", Offset = "0xE0AF68", VA = "0xE0AF68")]
	private void NotificationAnimation(GameObject notificationObj)
	{
	}

	[Token(Token = "0x6000691")]
	[Address(RVA = "0xE0B188", Offset = "0xE0B188", VA = "0xE0B188")]
	public void HideNotification()
	{
	}

	[Token(Token = "0x6000692")]
	[Address(RVA = "0xE0B1A8", Offset = "0xE0B1A8", VA = "0xE0B1A8")]
	public void HideUI()
	{
	}

	[Token(Token = "0x6000693")]
	[Address(RVA = "0xE0B318", Offset = "0xE0B318", VA = "0xE0B318")]
	public void ShowSettings()
	{
	}

	[Token(Token = "0x6000694")]
	[Address(RVA = "0xE0B370", Offset = "0xE0B370", VA = "0xE0B370")]
	public void QuitApplication()
	{
	}

	[Token(Token = "0x6000695")]
	[Address(RVA = "0xE0B378", Offset = "0xE0B378", VA = "0xE0B378")]
	public void ShowRoadmap()
	{
	}

	[Token(Token = "0x6000696")]
	[Address(RVA = "0xE0B4F4", Offset = "0xE0B4F4", VA = "0xE0B4F4")]
	public void HideRoadmap()
	{
	}

	[Token(Token = "0x6000697")]
	[Address(RVA = "0xE0B644", Offset = "0xE0B644", VA = "0xE0B644")]
	public void ShowNews()
	{
	}

	[Token(Token = "0x6000698")]
	[Address(RVA = "0xE0B7F0", Offset = "0xE0B7F0", VA = "0xE0B7F0")]
	public void HideNews()
	{
	}

	[Token(Token = "0x6000699")]
	[Address(RVA = "0xE0BA14", Offset = "0xE0BA14", VA = "0xE0BA14")]
	public void ShowGamePurchase()
	{
	}

	[Token(Token = "0x600069A")]
	[Address(RVA = "0xE0BBC0", Offset = "0xE0BBC0", VA = "0xE0BBC0")]
	public void HideGamePurchase()
	{
	}

	[Token(Token = "0x600069B")]
	[Address(RVA = "0xE0BDE4", Offset = "0xE0BDE4", VA = "0xE0BDE4")]
	public void ShowGameQuit()
	{
	}

	[Token(Token = "0x600069C")]
	[Address(RVA = "0xE0BFD8", Offset = "0xE0BFD8", VA = "0xE0BFD8")]
	public void HideGameQuit()
	{
	}

	[Token(Token = "0x600069D")]
	[Address(RVA = "0xE0B0FC", Offset = "0xE0B0FC", VA = "0xE0B0FC")]
	private void InitScrollbarSpeed()
	{
	}

	[Token(Token = "0x600069E")]
	[Address(RVA = "0xE0C1B8", Offset = "0xE0C1B8", VA = "0xE0C1B8")]
	public void AddScrollBarValue(Vector2 axis)
	{
	}

	[Token(Token = "0x600069F")]
	[Address(RVA = "0xE0C3D0", Offset = "0xE0C3D0", VA = "0xE0C3D0")]
	public void AddScrollBarValuePag(float y)
	{
	}

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0xE0C5E4", Offset = "0xE0C5E4", VA = "0xE0C5E4")]
	public LobbyController()
	{
	}
}
[Token(Token = "0x200015B")]
public class PlayerController : MonoBehaviour
{
	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PlayerController instance;

	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<UserLevelInfoCSVRow> userInfoCSVRowList;

	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public byte current_user_level;

	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public ushort current_user_total_hp;

	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public ushort current_user_hp;

	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
	public ushort current_user_damage;

	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ushort current_user_base_points_per_hit;

	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public DrumStickSpawner leftDrumStickSpawner;

	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public DrumStickSpawner rightDrumStrickSpawner;

	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public uint last_id_drum_stick_grabbed;

	[Token(Token = "0x4000821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float explosionRadious;

	[Token(Token = "0x4000822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float damageMulModifier;

	[Token(Token = "0x4000823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float missesToPunish;

	[Token(Token = "0x4000824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float consecutiveMisses;

	[Token(Token = "0x4000825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float missMulModifier;

	[Token(Token = "0x4000826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private ushort healCounter;

	[Token(Token = "0x4000827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	private ushort hitsToHeal;

	[Token(Token = "0x4000828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private ushort oldHealCounter;

	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
	public ushort hits_received_count;

	[Token(Token = "0x400082A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float inmune_timestamp;

	[Token(Token = "0x400082B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private GameObject UIpointToFollowRight;

	[Token(Token = "0x400082C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private GameObject UIpointToFollowRightEasy;

	[Token(Token = "0x400082D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private GameObject UIpointToFollowWarning;

	[Token(Token = "0x400082E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private GameObject UIpointToFollowLeft;

	[Token(Token = "0x400082F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private GameObject PSPosDamage;

	[Token(Token = "0x4000830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private GameObject PSDamage;

	[Token(Token = "0x4000831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private GameObject Ink;

	[Token(Token = "0x60006BA")]
	[Address(RVA = "0xE0DB30", Offset = "0xE0DB30", VA = "0xE0DB30")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006BB")]
	[Address(RVA = "0xE0DC90", Offset = "0xE0DC90", VA = "0xE0DC90")]
	private void Start()
	{
	}

	[Token(Token = "0x60006BC")]
	[Address(RVA = "0xE0DE20", Offset = "0xE0DE20", VA = "0xE0DE20")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60006BD")]
	[Address(RVA = "0xE0DFB0", Offset = "0xE0DFB0", VA = "0xE0DFB0")]
	public void StartPlayer()
	{
	}

	[Token(Token = "0x60006BE")]
	[Address(RVA = "0xE0E064", Offset = "0xE0E064", VA = "0xE0E064")]
	private void LoadPlayerLevelInfoCSV()
	{
	}

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0xE0E4E0", Offset = "0xE0E4E0", VA = "0xE0E4E0")]
	public bool InitCurrentPlayerValues()
	{
		return default(bool);
	}

	[Token(Token = "0x60006C0")]
	[Address(RVA = "0xE0E5F0", Offset = "0xE0E5F0", VA = "0xE0E5F0")]
	public void InitGameStats()
	{
	}

	[Token(Token = "0x60006C1")]
	[Address(RVA = "0xE0E6BC", Offset = "0xE0E6BC", VA = "0xE0E6BC")]
	public float GetHPPercentage()
	{
		return default(float);
	}

	[Token(Token = "0x60006C2")]
	[Address(RVA = "0xE0E6D4", Offset = "0xE0E6D4", VA = "0xE0E6D4")]
	public void ReceiveDamage(float damage)
	{
	}

	[Token(Token = "0x60006C3")]
	[Address(RVA = "0xE0EA44", Offset = "0xE0EA44", VA = "0xE0EA44")]
	public void ReceiveDamageNoExplosion(float damage)
	{
	}

	[Token(Token = "0x60006C4")]
	[Address(RVA = "0xE0EC0C", Offset = "0xE0EC0C", VA = "0xE0EC0C")]
	public void AddHealCounter()
	{
	}

	[Token(Token = "0x60006C5")]
	[Address(RVA = "0xE0E9FC", Offset = "0xE0E9FC", VA = "0xE0E9FC")]
	public void ResetHealCounter()
	{
	}

	[Token(Token = "0x60006C6")]
	[Address(RVA = "0xE0EE08", Offset = "0xE0EE08", VA = "0xE0EE08")]
	public void AddConsecutiveMisses(IconsType _iconsType)
	{
	}

	[Token(Token = "0x60006C7")]
	[Address(RVA = "0xE0EF14", Offset = "0xE0EF14", VA = "0xE0EF14")]
	public void AddConsecutiveMisses(IconsType _iconsType, int _nEnemies)
	{
	}

	[Token(Token = "0x60006C8")]
	[Address(RVA = "0xE0E9EC", Offset = "0xE0E9EC", VA = "0xE0E9EC")]
	public void ResetConsecutiveMisses()
	{
	}

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0xE0ED74", Offset = "0xE0ED74", VA = "0xE0ED74")]
	public void Heal(int heal)
	{
	}

	[Token(Token = "0x60006CA")]
	[Address(RVA = "0xE0F044", Offset = "0xE0F044", VA = "0xE0F044")]
	public void CheckHP()
	{
	}

	[Token(Token = "0x60006CB")]
	[Address(RVA = "0xE0F200", Offset = "0xE0F200", VA = "0xE0F200")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0xE0F3C8", Offset = "0xE0F3C8", VA = "0xE0F3C8")]
	public Transform GetUIPointToFollowTransform()
	{
		return null;
	}

	[Token(Token = "0x60006CD")]
	[Address(RVA = "0xE0F3E4", Offset = "0xE0F3E4", VA = "0xE0F3E4")]
	public Transform GetUIWarningPointToFollowTransform()
	{
		return null;
	}

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0xE0F400", Offset = "0xE0F400", VA = "0xE0F400", Slot = "4")]
	public virtual void ActiveExplosionDamage()
	{
	}

	[Token(Token = "0x60006CF")]
	[Address(RVA = "0xE0F5FC", Offset = "0xE0F5FC", VA = "0xE0F5FC")]
	public void InkState(bool _state)
	{
	}

	[Token(Token = "0x60006D0")]
	[Address(RVA = "0xE0F678", Offset = "0xE0F678", VA = "0xE0F678")]
	private void PauseInk()
	{
	}

	[Token(Token = "0x60006D1")]
	[Address(RVA = "0xE0F728", Offset = "0xE0F728", VA = "0xE0F728")]
	private void PlayInk()
	{
	}

	[Token(Token = "0x60006D2")]
	[Address(RVA = "0xE0EA04", Offset = "0xE0EA04", VA = "0xE0EA04")]
	private void ActivateInmune(float duration)
	{
	}

	[Token(Token = "0x60006D3")]
	[Address(RVA = "0xE0E9C8", Offset = "0xE0E9C8", VA = "0xE0E9C8")]
	private bool IsInmune()
	{
		return default(bool);
	}

	[Token(Token = "0x60006D4")]
	[Address(RVA = "0xE0F7D8", Offset = "0xE0F7D8", VA = "0xE0F7D8")]
	public PlayerController()
	{
	}
}
[Token(Token = "0x200015C")]
public class UserLevelInfoCSVRow
{
	[Token(Token = "0x4000832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public byte level;

	[Token(Token = "0x4000833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	public ushort hp;

	[Token(Token = "0x4000834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public ushort damage;

	[Token(Token = "0x4000835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
	public ushort points_per_hit;

	[Token(Token = "0x4000836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ushort exp;

	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public ushort sum_exp;

	[Token(Token = "0x60006D5")]
	[Address(RVA = "0xE0E6B4", Offset = "0xE0E6B4", VA = "0xE0E6B4")]
	public UserLevelInfoCSVRow()
	{
	}
}
[Token(Token = "0x200015D")]
public class PS5UserController
{
	[Token(Token = "0x60006D6")]
	[Address(RVA = "0xE0F7EC", Offset = "0xE0F7EC", VA = "0xE0F7EC")]
	public PS5UserController()
	{
	}
}
[Token(Token = "0x200015E")]
public class PSNController : MonoBehaviour
{
	[Token(Token = "0x60006D7")]
	[Address(RVA = "0xE0F7F4", Offset = "0xE0F7F4", VA = "0xE0F7F4")]
	public PSNController()
	{
	}
}
[Token(Token = "0x200015F")]
public class RankingController : MonoBehaviour
{
	[Token(Token = "0x2000160")]
	public enum RankingState
	{
		[Token(Token = "0x400084A")]
		GLOBAL,
		[Token(Token = "0x400084B")]
		PERSONAL,
		[Token(Token = "0x400084C")]
		FRIENDS
	}

	[Token(Token = "0x2000161")]
	private enum RankingMessages
	{
		[Token(Token = "0x400084E")]
		NO_INTERNET,
		[Token(Token = "0x400084F")]
		NO_RANKING,
		[Token(Token = "0x4000850")]
		UNKNOWN_ERROR,
		[Token(Token = "0x4000851")]
		TIMED_OUT
	}

	[Token(Token = "0x2000162")]
	[CompilerGenerated]
	private sealed class <>c__DisplayClass23_0
	{
		[Token(Token = "0x4000852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RankingController <>4__this;

		[Token(Token = "0x4000853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float callRef;

		[Token(Token = "0x60006E5")]
		[Address(RVA = "0xE10A90", Offset = "0xE10A90", VA = "0xE10A90")]
		public <>c__DisplayClass23_0()
		{
		}

		[Token(Token = "0x60006E6")]
		[Address(RVA = "0xE10A98", Offset = "0xE10A98", VA = "0xE10A98")]
		internal bool <WaitForRankingResponse>b__0()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000163")]
	[CompilerGenerated]
	private sealed class <WaitForRankingResponse>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RankingController <>4__this;

		[Token(Token = "0x4000857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private <>c__DisplayClass23_0 <>8__1;

		[Token(Token = "0x17000078")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006EA")]
			[Address(RVA = "0xE10D40", Offset = "0xE10D40", VA = "0xE10D40", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000079")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006EC")]
			[Address(RVA = "0xE10D88", Offset = "0xE10D88", VA = "0xE10D88", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006E7")]
		[Address(RVA = "0xE104DC", Offset = "0xE104DC", VA = "0xE104DC")]
		[DebuggerHidden]
		public <WaitForRankingResponse>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x60006E8")]
		[Address(RVA = "0xE10AE4", Offset = "0xE10AE4", VA = "0xE10AE4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006E9")]
		[Address(RVA = "0xE10AE8", Offset = "0xE10AE8", VA = "0xE10AE8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006EB")]
		[Address(RVA = "0xE10D48", Offset = "0xE10D48", VA = "0xE10D48", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000164")]
	[CompilerGenerated]
	private sealed class <RankingQueue>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x1700007A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006F0")]
			[Address(RVA = "0xE10DAC", Offset = "0xE10DAC", VA = "0xE10DAC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006F2")]
			[Address(RVA = "0xE10DF4", Offset = "0xE10DF4", VA = "0xE10DF4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006ED")]
		[Address(RVA = "0xE105D8", Offset = "0xE105D8", VA = "0xE105D8")]
		[DebuggerHidden]
		public <RankingQueue>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x60006EE")]
		[Address(RVA = "0xE10D90", Offset = "0xE10D90", VA = "0xE10D90", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006EF")]
		[Address(RVA = "0xE10D94", Offset = "0xE10D94", VA = "0xE10D94", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006F1")]
		[Address(RVA = "0xE10DB4", Offset = "0xE10DB4", VA = "0xE10DB4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000165")]
	[CompilerGenerated]
	private sealed class <UpdateThreeEllipsis>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400085A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400085B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400085C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RankingController <>4__this;

		[Token(Token = "0x1700007C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006F6")]
			[Address(RVA = "0xE10FA0", Offset = "0xE10FA0", VA = "0xE10FA0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006F8")]
			[Address(RVA = "0xE10FE8", Offset = "0xE10FE8", VA = "0xE10FE8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006F3")]
		[Address(RVA = "0xE10600", Offset = "0xE10600", VA = "0xE10600")]
		[DebuggerHidden]
		public <UpdateThreeEllipsis>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x60006F4")]
		[Address(RVA = "0xE10DFC", Offset = "0xE10DFC", VA = "0xE10DFC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006F5")]
		[Address(RVA = "0xE10E00", Offset = "0xE10E00", VA = "0xE10E00", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006F7")]
		[Address(RVA = "0xE10FA8", Offset = "0xE10FA8", VA = "0xE10FA8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RankingState rankingState;

	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject[] rankingEntries;

	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Sprite myPlayerImage;

	[Token(Token = "0x400083B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Sprite regularPlayerImage;

	[Token(Token = "0x400083C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string rankingName;

	[Token(Token = "0x400083D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float cooldownRef;

	[Token(Token = "0x400083E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private float btnCooldown;

	[Token(Token = "0x400083F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject[] rankingButtons;

	[Token(Token = "0x4000840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject rankingMessages;

	[Token(Token = "0x4000841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private TextMeshProUGUI loadingTextMeshPro;

	[Token(Token = "0x4000842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private TextMeshProUGUI messageTextMeshPro;

	[Token(Token = "0x4000843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private GameObject DemoStickers;

	[Token(Token = "0x4000844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int currentThreeEllipsisCount;

	[Token(Token = "0x4000845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float lastTimestampThreeEllipsis;

	[Token(Token = "0x4000846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private string loadingText;

	[Token(Token = "0x4000847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private string messageText;

	[Token(Token = "0x4000848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool rankingRecived;

	[Token(Token = "0x60006D8")]
	[Address(RVA = "0xE0F7FC", Offset = "0xE0F7FC", VA = "0xE0F7FC")]
	private void Start()
	{
	}

	[Token(Token = "0x60006D9")]
	[Address(RVA = "0xE0F900", Offset = "0xE0F900", VA = "0xE0F900")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60006DA")]
	[Address(RVA = "0xE0FA40", Offset = "0xE0FA40", VA = "0xE0FA40")]
	public void InitValues()
	{
	}

	[Token(Token = "0x60006DB")]
	[Address(RVA = "0xE0FE44", Offset = "0xE0FE44", VA = "0xE0FE44")]
	public void GetEntries()
	{
	}

	[Token(Token = "0x60006DC")]
	[Address(RVA = "0xE10468", Offset = "0xE10468", VA = "0xE10468")]
	[IteratorStateMachine(typeof(<WaitForRankingResponse>d__23))]
	private IEnumerator WaitForRankingResponse()
	{
		return null;
	}

	[Token(Token = "0x60006DD")]
	[Address(RVA = "0xE10274", Offset = "0xE10274", VA = "0xE10274")]
	private void SetNoRankingMessage(RankingMessages rankingMessage)
	{
	}

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0xE0FC10", Offset = "0xE0FC10", VA = "0xE0FC10")]
	public void SetRankingMode(int _mode)
	{
	}

	[Token(Token = "0x60006DF")]
	[Address(RVA = "0xE10578", Offset = "0xE10578", VA = "0xE10578")]
	[IteratorStateMachine(typeof(<RankingQueue>d__26))]
	private IEnumerator RankingQueue()
	{
		return null;
	}

	[Token(Token = "0x60006E0")]
	[Address(RVA = "0xE10504", Offset = "0xE10504", VA = "0xE10504")]
	[IteratorStateMachine(typeof(<UpdateThreeEllipsis>d__27))]
	private IEnumerator UpdateThreeEllipsis()
	{
		return null;
	}

	[Token(Token = "0x60006E1")]
	[Address(RVA = "0xE10464", Offset = "0xE10464", VA = "0xE10464")]
	private void GetPlaystationLeaderboard(int _leaderboardID)
	{
	}

	[Token(Token = "0x60006E2")]
	[Address(RVA = "0xE10628", Offset = "0xE10628", VA = "0xE10628")]
	private void OculusEntriesCallback(Message<LeaderboardEntryList> message)
	{
	}

	[Token(Token = "0x60006E3")]
	[Address(RVA = "0xE10460", Offset = "0xE10460", VA = "0xE10460")]
	private void FindSteamLeaderboard(string _rankingname)
	{
	}

	[Token(Token = "0x60006E4")]
	[Address(RVA = "0xE10A88", Offset = "0xE10A88", VA = "0xE10A88")]
	public RankingController()
	{
	}
}
[Token(Token = "0x2000166")]
public class SelectorController : MonoBehaviour
{
	[Token(Token = "0x2000168")]
	[CompilerGenerated]
	private sealed class <InitChallengeIE>d__43 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SelectorController <>4__this;

		[Token(Token = "0x4000887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float last_scroll_value;

		[Token(Token = "0x4000888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <pos>5__2;

		[Token(Token = "0x4000889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<Song> <songToOrderList>5__3;

		[Token(Token = "0x400088A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <i>5__4;

		[Token(Token = "0x1700007E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600072D")]
			[Address(RVA = "0xE1693C", Offset = "0xE1693C", VA = "0xE1693C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600072F")]
			[Address(RVA = "0xE16984", Offset = "0xE16984", VA = "0xE16984", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600072A")]
		[Address(RVA = "0xE13320", Offset = "0xE13320", VA = "0xE13320")]
		[DebuggerHidden]
		public <InitChallengeIE>d__43(int <>1__state)
		{
		}

		[Token(Token = "0x600072B")]
		[Address(RVA = "0xE15A58", Offset = "0xE15A58", VA = "0xE15A58", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600072C")]
		[Address(RVA = "0xE15A5C", Offset = "0xE15A5C", VA = "0xE15A5C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600072E")]
		[Address(RVA = "0xE16944", Offset = "0xE16944", VA = "0xE16944", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200016B")]
	[CompilerGenerated]
	private sealed class <InitCampaignIE>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SelectorController <>4__this;

		[Token(Token = "0x4000893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int id_act;

		[Token(Token = "0x4000894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float last_scroll_value;

		[Token(Token = "0x4000895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ActBase <act>5__2;

		[Token(Token = "0x4000896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <pos>5__3;

		[Token(Token = "0x4000897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject <ButtonTemp>5__4;

		[Token(Token = "0x4000898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int <i>5__5;

		[Token(Token = "0x4000899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ChapterBase <chapter>5__6;

		[Token(Token = "0x400089A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private byte <songsCount>5__7;

		[Token(Token = "0x400089B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private ContentBlock <tempChapter>5__8;

		[Token(Token = "0x400089C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int <j>5__9;

		[Token(Token = "0x17000080")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000738")]
			[Address(RVA = "0xE17DC0", Offset = "0xE17DC0", VA = "0xE17DC0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000081")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600073A")]
			[Address(RVA = "0xE17E08", Offset = "0xE17E08", VA = "0xE17E08", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000735")]
		[Address(RVA = "0xE14170", Offset = "0xE14170", VA = "0xE14170")]
		[DebuggerHidden]
		public <InitCampaignIE>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x6000736")]
		[Address(RVA = "0xE16F7C", Offset = "0xE16F7C", VA = "0xE16F7C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000737")]
		[Address(RVA = "0xE16F80", Offset = "0xE16F80", VA = "0xE16F80", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000739")]
		[Address(RVA = "0xE17DC8", Offset = "0xE17DC8", VA = "0xE17DC8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200016C")]
	[CompilerGenerated]
	private sealed class <ShowStageSelector>d__56 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400089D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400089E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400089F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SelectorController <>4__this;

		[Token(Token = "0x17000082")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600073E")]
			[Address(RVA = "0xE17FD0", Offset = "0xE17FD0", VA = "0xE17FD0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000083")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000740")]
			[Address(RVA = "0xE18018", Offset = "0xE18018", VA = "0xE18018", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600073B")]
		[Address(RVA = "0xE17E10", Offset = "0xE17E10", VA = "0xE17E10")]
		[DebuggerHidden]
		public <ShowStageSelector>d__56(int <>1__state)
		{
		}

		[Token(Token = "0x600073C")]
		[Address(RVA = "0xE17E38", Offset = "0xE17E38", VA = "0xE17E38", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600073D")]
		[Address(RVA = "0xE17E3C", Offset = "0xE17E3C", VA = "0xE17E3C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600073F")]
		[Address(RVA = "0xE17FD8", Offset = "0xE17FD8", VA = "0xE17FD8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400085D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject Title;

	[Token(Token = "0x400085E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("Scroll")]
	private List<GameObject> ListSongs;

	[Token(Token = "0x400085F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject Content;

	[Token(Token = "0x4000860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject SongBlock;

	[Token(Token = "0x4000861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject ScrollBar;

	[Token(Token = "0x4000862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject ScrollBarUp;

	[Token(Token = "0x4000863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject ScrollBarDown;

	[Token(Token = "0x4000864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject Info;

	[Token(Token = "0x4000865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject DifficultyButtons;

	[Token(Token = "0x4000866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private GameObject ActButtons;

	[Token(Token = "0x4000867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private GameObject CustomSongButton;

	[Token(Token = "0x4000868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private GameObject FrameSupportStars;

	[Token(Token = "0x4000869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private GameObject Ranking;

	[Token(Token = "0x400086A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private GameObject StageSelector;

	[Token(Token = "0x400086B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private GameObject ActHeader;

	[Token(Token = "0x400086C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private Material[] ActHeaderMat;

	[Token(Token = "0x400086D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private GameObject FlechaBack;

	[Token(Token = "0x400086E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private GameObject DemoSticker;

	[Token(Token = "0x400086F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private Material BlockedBtnMat;

	[Token(Token = "0x4000870")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private Material CustomBtnMat;

	[Token(Token = "0x4000871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Coroutine initSongs;

	[Token(Token = "0x4000872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private DG.Tweening.Tween SnapSong;

	[Token(Token = "0x4000873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Vector3 OgPosition;

	[Token(Token = "0x4000874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private Vector3 RankingPosition;

	[Token(Token = "0x4000875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Vector3 OgDiffPosition;

	[Token(Token = "0x4000876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private Vector3 OgDiffScale;

	[Token(Token = "0x4000877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private SongDifficulty lastDifficultyBeforeCustom;

	[Token(Token = "0x4000878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private float final_axis_scroll_speed;

	[Token(Token = "0x4000879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private float final_pag_scroll_speed;

	[Token(Token = "0x400087A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public bool canCheckPosition;

	[Token(Token = "0x400087B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x105")]
	public byte lastChapterStarCount;

	[Token(Token = "0x400087C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private int current_act;

	[Token(Token = "0x400087D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private bool customChallengeList;

	[Token(Token = "0x400087E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10D")]
	private bool setOriginalSongButton;

	[Token(Token = "0x400087F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10E")]
	private bool appliedScrollOffset;

	[Token(Token = "0x4000880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private GameMode gameModeLocal;

	[Token(Token = "0x60006F9")]
	[Address(RVA = "0xE10FF0", Offset = "0xE10FF0", VA = "0xE10FF0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006FA")]
	[Address(RVA = "0xE11338", Offset = "0xE11338", VA = "0xE11338")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60006FB")]
	[Address(RVA = "0xE115F0", Offset = "0xE115F0", VA = "0xE115F0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006FC")]
	[Address(RVA = "0xE11CBC", Offset = "0xE11CBC", VA = "0xE11CBC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60006FD")]
	[Address(RVA = "0xE1227C", Offset = "0xE1227C", VA = "0xE1227C")]
	public void Clear(bool deleteicons = true)
	{
	}

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0xE11BF8", Offset = "0xE11BF8", VA = "0xE11BF8")]
	public void InitScreen()
	{
	}

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0xE1255C", Offset = "0xE1255C", VA = "0xE1255C")]
	private void InitSongs()
	{
	}

	[Token(Token = "0x6000700")]
	[Address(RVA = "0xE12930", Offset = "0xE12930", VA = "0xE12930")]
	[IteratorStateMachine(typeof(<InitChallengeIE>d__43))]
	private IEnumerator InitChallengeIE(float last_scroll_value = 1f)
	{
		return null;
	}

	[Token(Token = "0x6000701")]
	[Address(RVA = "0xE13348", Offset = "0xE13348", VA = "0xE13348")]
	public void CheckVisible()
	{
	}

	[Token(Token = "0x6000702")]
	[Address(RVA = "0xE13400", Offset = "0xE13400", VA = "0xE13400")]
	public void SetLastDifficultyBeforeCustomSongs()
	{
	}

	[Token(Token = "0x6000703")]
	[Address(RVA = "0xE134C0", Offset = "0xE134C0", VA = "0xE134C0")]
	public void DesactivateOriginalSongButtonDesactivation()
	{
	}

	[Token(Token = "0x6000704")]
	[Address(RVA = "0xE13548", Offset = "0xE13548", VA = "0xE13548")]
	public void SetCustomButtonFinalScale(bool _customBtn)
	{
	}

	[Token(Token = "0x6000705")]
	[Address(RVA = "0xE137B4", Offset = "0xE137B4", VA = "0xE137B4")]
	private void EnableButtons()
	{
	}

	[Token(Token = "0x6000706")]
	[Address(RVA = "0xE13924", Offset = "0xE13924", VA = "0xE13924")]
	private void DisableButtons()
	{
	}

	[Token(Token = "0x6000707")]
	[Address(RVA = "0xE129B4", Offset = "0xE129B4", VA = "0xE129B4")]
	public void HideDifficultyButtons()
	{
	}

	[Token(Token = "0x6000708")]
	[Address(RVA = "0xE13A9C", Offset = "0xE13A9C", VA = "0xE13A9C")]
	public void ShowDifficultyButtons()
	{
	}

	[Token(Token = "0x6000709")]
	[Address(RVA = "0xE12BF4", Offset = "0xE12BF4", VA = "0xE12BF4")]
	[IteratorStateMachine(typeof(<InitCampaignIE>d__52))]
	private IEnumerator InitCampaignIE(int id_act, float last_scroll_value)
	{
		return null;
	}

	[Token(Token = "0x600070A")]
	[Address(RVA = "0xE123F0", Offset = "0xE123F0", VA = "0xE123F0")]
	public void Deleteicons()
	{
	}

	[Token(Token = "0x600070B")]
	[Address(RVA = "0xE143F0", Offset = "0xE143F0", VA = "0xE143F0")]
	private void ActivateInfo()
	{
	}

	[Token(Token = "0x600070C")]
	[Address(RVA = "0xE1456C", Offset = "0xE1456C", VA = "0xE1456C")]
	public void ShowRanking()
	{
	}

	[Token(Token = "0x600070D")]
	[Address(RVA = "0xE1498C", Offset = "0xE1498C", VA = "0xE1498C")]
	[IteratorStateMachine(typeof(<ShowStageSelector>d__56))]
	public IEnumerator ShowStageSelector()
	{
		return null;
	}

	[Token(Token = "0x600070E")]
	[Address(RVA = "0xE14A00", Offset = "0xE14A00", VA = "0xE14A00")]
	public void HideStageSelector()
	{
	}

	[Token(Token = "0x600070F")]
	[Address(RVA = "0xE14B4C", Offset = "0xE14B4C", VA = "0xE14B4C")]
	public void ClearChallengeScrollValue()
	{
	}

	[Token(Token = "0x6000710")]
	[Address(RVA = "0xE14BF0", Offset = "0xE14BF0", VA = "0xE14BF0")]
	private void DeactivateInfo()
	{
	}

	[Token(Token = "0x6000711")]
	[Address(RVA = "0xE1481C", Offset = "0xE1481C", VA = "0xE1481C")]
	private void DesactivateRanking()
	{
	}

	[Token(Token = "0x6000712")]
	[Address(RVA = "0xE14D58", Offset = "0xE14D58", VA = "0xE14D58")]
	private void CheckLockDifficulty()
	{
	}

	[Token(Token = "0x6000713")]
	[Address(RVA = "0xE14F8C", Offset = "0xE14F8C", VA = "0xE14F8C")]
	public void ChangeAct(int id_act)
	{
	}

	[Token(Token = "0x6000714")]
	[Address(RVA = "0xE150CC", Offset = "0xE150CC", VA = "0xE150CC")]
	public void CheckScrollBarValue()
	{
	}

	[Token(Token = "0x6000715")]
	[Address(RVA = "0xE14198", Offset = "0xE14198", VA = "0xE14198")]
	private void CheckActiveScrollbar(int count)
	{
	}

	[Token(Token = "0x6000716")]
	[Address(RVA = "0xE151AC", Offset = "0xE151AC", VA = "0xE151AC")]
	public void BackFromTV()
	{
	}

	[Token(Token = "0x6000717")]
	[Address(RVA = "0xE131B0", Offset = "0xE131B0", VA = "0xE131B0")]
	private void SetActFrame(int id_act)
	{
	}

	[Token(Token = "0x6000718")]
	[Address(RVA = "0xE12C88", Offset = "0xE12C88", VA = "0xE12C88")]
	public void SetActButtonSelected(int id_act)
	{
	}

	[Token(Token = "0x6000719")]
	[Address(RVA = "0xE151CC", Offset = "0xE151CC", VA = "0xE151CC")]
	public void AddScrollBarValue(Vector2 axis)
	{
	}

	[Token(Token = "0x600071A")]
	[Address(RVA = "0xE153A8", Offset = "0xE153A8", VA = "0xE153A8")]
	public void AddScrollBarValuePag(float y)
	{
	}

	[Token(Token = "0x600071B")]
	[Address(RVA = "0xE12394", Offset = "0xE12394", VA = "0xE12394")]
	public float GetScrollBarCurrentValue()
	{
		return default(float);
	}

	[Token(Token = "0x600071C")]
	[Address(RVA = "0xE15580", Offset = "0xE15580", VA = "0xE15580")]
	public bool IsScrollbarSetOffset()
	{
		return default(bool);
	}

	[Token(Token = "0x600071D")]
	[Address(RVA = "0xE15588", Offset = "0xE15588", VA = "0xE15588")]
	private void InitScrollbarSpeed()
	{
	}

	[Token(Token = "0x600071E")]
	[Address(RVA = "0xE155E8", Offset = "0xE155E8", VA = "0xE155E8")]
	public int GetCurrentAct()
	{
		return default(int);
	}

	[Token(Token = "0x600071F")]
	[Address(RVA = "0xE155F0", Offset = "0xE155F0", VA = "0xE155F0")]
	public SelectorController()
	{
	}
}
[Token(Token = "0x200016D")]
public class SettingsController : MonoBehaviour
{
	[Token(Token = "0x200016E")]
	public enum SettingsScreen
	{
		[Token(Token = "0x40008D7")]
		GAMEPLAY = 0,
		[Token(Token = "0x40008D8")]
		AUDIO = 1,
		[Token(Token = "0x40008D9")]
		GRAPHICS = 2,
		[Token(Token = "0x40008DA")]
		LANGUAGE = 3,
		[Token(Token = "0x40008DB")]
		USABILITY = 4,
		[Token(Token = "0x40008DC")]
		CREDITS = 6,
		[Token(Token = "0x40008DD")]
		LIV = 7,
		[Token(Token = "0x40008DE")]
		WORKSHOP = 8,
		[Token(Token = "0x40008DF")]
		SIAMES = 9
	}

	[Token(Token = "0x200016F")]
	public enum DrumsScreen
	{
		[Token(Token = "0x40008E1")]
		HEIGHT,
		[Token(Token = "0x40008E2")]
		POSITION
	}

	[Token(Token = "0x2000170")]
	public enum SettingsValue
	{
		[Token(Token = "0x40008E4")]
		VISUAL_EFFECTS = 0,
		[Token(Token = "0x40008E5")]
		LANGUAGE = 1,
		[Token(Token = "0x40008E6")]
		MASTER_VOLUME = 2,
		[Token(Token = "0x40008E7")]
		TRACK_VOLUME = 3,
		[Token(Token = "0x40008E8")]
		VFX_VOLUME = 4,
		[Token(Token = "0x40008E9")]
		VIBRATION = 5,
		[Token(Token = "0x40008EA")]
		LIV_ACTIVATION = 6,
		[Token(Token = "0x40008EB")]
		GRAB_MODE = 7,
		[Token(Token = "0x40008EC")]
		QUALITY_SETTINGS = 8,
		[Token(Token = "0x40008ED")]
		RENDER_SCALE = 9,
		[Token(Token = "0x40008EE")]
		DEFAULT_GRAPHICS = 10,
		[Token(Token = "0x40008EF")]
		SHOW_HANDS = 11,
		[Token(Token = "0x40008F0")]
		SPLIT_SIAMES = 12,
		[Token(Token = "0x40008F1")]
		LATENCY = 13,
		[Token(Token = "0x40008F2")]
		DRUMS_VOLUME = 14,
		[Token(Token = "0x40008F3")]
		PERFECT_LINE = 15,
		[Token(Token = "0x40008F4")]
		DRUMS_LAYER_VOLUME = 16,
		[Token(Token = "0x40008F5")]
		RENDER_MODE = 17,
		[Token(Token = "0x40008F6")]
		DRUMSTICK_AUTOSPAWN = 18,
		[Token(Token = "0x40008F7")]
		REVERSED_MODE = 23,
		[Token(Token = "0x40008F8")]
		HEADSET_VIBRATION = 25
	}

	[Serializable]
	[Token(Token = "0x2000171")]
	public class OptionsSettings
	{
		[Token(Token = "0x40008F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Obsolete]
		public bool vibration;

		[Token(Token = "0x40008FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[Obsolete]
		public bool toggle;

		[Token(Token = "0x40008FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string language;

		[Token(Token = "0x40008FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int master;

		[Token(Token = "0x40008FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int track;

		[Token(Token = "0x40008FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int vfx;

		[Token(Token = "0x40008FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int drums;

		[Token(Token = "0x4000900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int drumsLayer;

		[Token(Token = "0x4000901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool visualEffects;

		[Token(Token = "0x4000902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		public bool mrc;

		[Token(Token = "0x4000903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GrabMode grabMode;

		[Token(Token = "0x4000904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool separateSiames;

		[Token(Token = "0x4000905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		public bool perfectLineGrid;

		[Token(Token = "0x4000906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
		public bool drumstick_autospawn;

		[Token(Token = "0x4000907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AndroidRenderMode renderMode;

		[Token(Token = "0x4000908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int vibrationPerc;

		[Token(Token = "0x4000909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool showHands;

		[Token(Token = "0x400090A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int latency_ms;

		[Token(Token = "0x17000084")]
		public float master_f
		{
			[Token(Token = "0x600076A")]
			[Address(RVA = "0xE1FEEC", Offset = "0xE1FEEC", VA = "0xE1FEEC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000085")]
		public float track_f
		{
			[Token(Token = "0x600076B")]
			[Address(RVA = "0xE1FF04", Offset = "0xE1FF04", VA = "0xE1FF04")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000086")]
		public float vfx_f
		{
			[Token(Token = "0x600076C")]
			[Address(RVA = "0xE1FF1C", Offset = "0xE1FF1C", VA = "0xE1FF1C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000087")]
		public float drums_f
		{
			[Token(Token = "0x600076D")]
			[Address(RVA = "0xE1FF34", Offset = "0xE1FF34", VA = "0xE1FF34")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000088")]
		public float drumsLayer_f
		{
			[Token(Token = "0x600076E")]
			[Address(RVA = "0xE1FF4C", Offset = "0xE1FF4C", VA = "0xE1FF4C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000089")]
		public float latency_f
		{
			[Token(Token = "0x600076F")]
			[Address(RVA = "0xE1FF64", Offset = "0xE1FF64", VA = "0xE1FF64")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000770")]
		[Address(RVA = "0xE1DFEC", Offset = "0xE1DFEC", VA = "0xE1DFEC")]
		public OptionsSettings()
		{
		}

		[Token(Token = "0x6000771")]
		[Address(RVA = "0xE1948C", Offset = "0xE1948C", VA = "0xE1948C")]
		public OptionsSettings(OptionsSettings settings)
		{
		}
	}

	[Token(Token = "0x40008A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SettingsScreen settingsScreen;

	[Token(Token = "0x40008A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public DrumsScreen drumsScreen;

	[Token(Token = "0x40008A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject gameplaySettings;

	[Token(Token = "0x40008A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject audioSettings;

	[Token(Token = "0x40008A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject graphicsSettings;

	[Token(Token = "0x40008A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject languageSettings;

	[Token(Token = "0x40008A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject usabilitySettings;

	[Token(Token = "0x40008A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject popUpDrumHeightAdjustment;

	[Token(Token = "0x40008A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject popUpLivSettings;

	[Token(Token = "0x40008A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject popUpWorkshop;

	[Token(Token = "0x40008AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private GameObject popUpSiamesSettings;

	[Token(Token = "0x40008AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private GameObject popUpDrumHeightAdjustmentExit;

	[Token(Token = "0x40008AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private GameObject popUpExit;

	[Token(Token = "0x40008AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private GameObject popUpInfo;

	[Token(Token = "0x40008AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private GameObject backArrow;

	[Token(Token = "0x40008AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private GameObject settingsAnimationParent;

	[Token(Token = "0x40008B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private GameObject backArrowDrumsSettings;

	[Token(Token = "0x40008B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private GameObject[] optionsButtons;

	[Token(Token = "0x40008B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private GameObject[] drumsButtons;

	[Token(Token = "0x40008B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private GameObject frameTitle;

	[Token(Token = "0x40008B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private GameObject offsetParticleEffectParent;

	[Token(Token = "0x40008B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private TextMeshProUGUI StateLogText;

	[Token(Token = "0x40008B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public TMP_Text heightInfoText;

	[Token(Token = "0x40008B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private Image drumScopeImage;

	[Token(Token = "0x40008B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private Sprite[] drumScopeSprites;

	[Token(Token = "0x40008B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private TMP_Text[] settingsValueTexts;

	[Token(Token = "0x40008BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private List<string> availableLocalizationList;

	[Token(Token = "0x40008BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private GameObject background;

	[Token(Token = "0x40008BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private GameObject backgroundMRC;

	[Token(Token = "0x40008BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private GameObject backgroundSiames;

	[Token(Token = "0x40008BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[SerializeField]
	private GameObject[] ScrollBar;

	[Token(Token = "0x40008BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private LocalizationTextLoader LIV_Warning;

	[Token(Token = "0x40008C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private string[] qualityNameKeys;

	[Token(Token = "0x40008C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private string[] grabModeNameKeys;

	[Token(Token = "0x40008C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private IconsType[] drumsScopeOrderList;

	[Token(Token = "0x40008C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private int drumsScopeIdx;

	[Token(Token = "0x40008C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private float final_axis_scroll_speed;

	[Token(Token = "0x40008C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private float final_pag_scroll_speed;

	[Token(Token = "0x40008C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private OptionsSettings oldSettings;

	[Token(Token = "0x40008C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private float drumsLowTomHeightOffsetBeforeSettings;

	[Token(Token = "0x40008C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private float drumsHighTomHeightOffsetBeforeSettings;

	[Token(Token = "0x40008C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private float drumsRideHeightOffsetBeforeSettings;

	[Token(Token = "0x40008CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private float drumsCrushHeightOffsetBeforeSettings;

	[Token(Token = "0x40008CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private float drumsKickHeightOffsetBeforeSettings;

	[Token(Token = "0x40008CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	private float drumsSnareHeightOffsetBeforeSettings;

	[Token(Token = "0x40008CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Vector2 drumsLowTomOffsetBeforeSettings;

	[Token(Token = "0x40008CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Vector2 drumsHighTomOffsetBeforeSettings;

	[Token(Token = "0x40008CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private Vector2 drumsRideOffsetBeforeSettings;

	[Token(Token = "0x40008D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private Vector2 drumsCrushOffsetBeforeSettings;

	[Token(Token = "0x40008D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Vector2 drumsKickOffsetBeforeSettings;

	[Token(Token = "0x40008D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private Vector2 drumsSnareOffsetBeforeSettings;

	[Token(Token = "0x40008D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private bool livEnabledBeforeSettings;

	[Token(Token = "0x40008D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x189")]
	private bool siamesSeparatedEnabledBeforeSettings;

	[Token(Token = "0x40008D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18A")]
	private bool transition;

	[Token(Token = "0x6000741")]
	[Address(RVA = "0xE18020", Offset = "0xE18020", VA = "0xE18020")]
	private void Start()
	{
	}

	[Token(Token = "0x6000742")]
	[Address(RVA = "0xE1882C", Offset = "0xE1882C", VA = "0xE1882C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000743")]
	[Address(RVA = "0xE195FC", Offset = "0xE195FC", VA = "0xE195FC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000744")]
	[Address(RVA = "0xE19D24", Offset = "0xE19D24", VA = "0xE19D24")]
	public void SwapSettingsContent(int _newScreen)
	{
	}

	[Token(Token = "0x6000745")]
	[Address(RVA = "0xE1A4CC", Offset = "0xE1A4CC", VA = "0xE1A4CC")]
	public void SwapDrumsScreen(int _newScreen)
	{
	}

	[Token(Token = "0x6000746")]
	[Address(RVA = "0xE1A998", Offset = "0xE1A998", VA = "0xE1A998")]
	public void SetDrumsScreen(int _newScreen)
	{
	}

	[Token(Token = "0x6000747")]
	[Address(RVA = "0xE1AE14", Offset = "0xE1AE14", VA = "0xE1AE14")]
	public void SwapDrumsScope(int _idxSum)
	{
	}

	[Token(Token = "0x6000748")]
	[Address(RVA = "0xE1B350", Offset = "0xE1B350", VA = "0xE1B350")]
	public void ActivateLivSettingsScreen()
	{
	}

	[Token(Token = "0x6000749")]
	[Address(RVA = "0xE1B670", Offset = "0xE1B670", VA = "0xE1B670")]
	public void ActivateWorkshopScreen()
	{
	}

	[Token(Token = "0x600074A")]
	[Address(RVA = "0xE1B674", Offset = "0xE1B674", VA = "0xE1B674")]
	public void ActivateSiamesSettingsScreen()
	{
	}

	[Token(Token = "0x600074B")]
	[Address(RVA = "0xE1B744", Offset = "0xE1B744", VA = "0xE1B744")]
	public void ActivateExitPopUpScreen()
	{
	}

	[Token(Token = "0x600074C")]
	[Address(RVA = "0xE1B858", Offset = "0xE1B858", VA = "0xE1B858")]
	public void UploadToWorkshop()
	{
	}

	[Token(Token = "0x600074D")]
	[Address(RVA = "0xE1B85C", Offset = "0xE1B85C", VA = "0xE1B85C")]
	public void SetLivSettings(bool _save)
	{
	}

	[Token(Token = "0x600074E")]
	[Address(RVA = "0xE1BA70", Offset = "0xE1BA70", VA = "0xE1BA70")]
	public void SetSiamesSettings(bool _save)
	{
	}

	[Token(Token = "0x600074F")]
	[Address(RVA = "0xE1BAF4", Offset = "0xE1BAF4", VA = "0xE1BAF4")]
	public void AdjustDrumsHeight()
	{
	}

	[Token(Token = "0x6000750")]
	[Address(RVA = "0xE1BD2C", Offset = "0xE1BD2C", VA = "0xE1BD2C")]
	private void UpdatePopUpInfo(SettingsValue _settingsValue)
	{
	}

	[Token(Token = "0x6000751")]
	[Address(RVA = "0xE18824", Offset = "0xE18824", VA = "0xE18824")]
	private string ParsePS5ButtonsSprites(string _textToParse)
	{
		return null;
	}

	[Token(Token = "0x6000752")]
	[Address(RVA = "0xE1C6D4", Offset = "0xE1C6D4", VA = "0xE1C6D4")]
	public void ActivateAnimationInfo(int _settingsOption)
	{
	}

	[Token(Token = "0x6000753")]
	[Address(RVA = "0xE1A334", Offset = "0xE1A334", VA = "0xE1A334")]
	public void DesctivateAnimationInfo()
	{
	}

	[Token(Token = "0x6000754")]
	[Address(RVA = "0xE1C86C", Offset = "0xE1C86C", VA = "0xE1C86C")]
	public void SetDrumsHeight()
	{
	}

	[Token(Token = "0x6000755")]
	[Address(RVA = "0xE1C97C", Offset = "0xE1C97C", VA = "0xE1C97C")]
	public void SetDefaultDrumsHeight()
	{
	}

	[Token(Token = "0x6000756")]
	[Address(RVA = "0xE1CCDC", Offset = "0xE1CCDC", VA = "0xE1CCDC")]
	public void SetDefaultGraphicsSettings()
	{
	}

	[Token(Token = "0x6000757")]
	[Address(RVA = "0xE199A8", Offset = "0xE199A8", VA = "0xE199A8")]
	private void SetGraphicsSettings()
	{
	}

	[Token(Token = "0x6000758")]
	[Address(RVA = "0xE1CF10", Offset = "0xE1CF10", VA = "0xE1CF10")]
	public void SetEverythingLikeBeforeSettings()
	{
	}

	[Token(Token = "0x6000759")]
	[Address(RVA = "0xE1D220", Offset = "0xE1D220", VA = "0xE1D220")]
	public void BackToSettings()
	{
	}

	[Token(Token = "0x600075A")]
	[Address(RVA = "0xE1DA50", Offset = "0xE1DA50", VA = "0xE1DA50")]
	public void ExitWithNoHeightSet()
	{
	}

	[Token(Token = "0x600075B")]
	[Address(RVA = "0xE1B420", Offset = "0xE1B420", VA = "0xE1B420")]
	private void swapArrows()
	{
	}

	[Token(Token = "0x600075C")]
	[Address(RVA = "0xE1B488", Offset = "0xE1B488", VA = "0xE1B488")]
	private void ExitAnimation(GameObject animObject, [Optional] GameObject enterAnimObject)
	{
	}

	[Token(Token = "0x600075D")]
	[Address(RVA = "0xE1D4F0", Offset = "0xE1D4F0", VA = "0xE1D4F0")]
	private void EnterAnimation(GameObject animObject)
	{
	}

	[Token(Token = "0x600075E")]
	[Address(RVA = "0xE1DED4", Offset = "0xE1DED4", VA = "0xE1DED4")]
	public void SetDefaultSettings()
	{
	}

	[Token(Token = "0x600075F")]
	[Address(RVA = "0xE1E128", Offset = "0xE1E128", VA = "0xE1E128")]
	public void ConfirmNewSettings()
	{
	}

	[Token(Token = "0x6000760")]
	[Address(RVA = "0xE1E1CC", Offset = "0xE1E1CC", VA = "0xE1E1CC")]
	public void SettingsAddValue(int settingsValue)
	{
	}

	[Token(Token = "0x6000761")]
	[Address(RVA = "0xE18930", Offset = "0xE18930", VA = "0xE18930")]
	private void UpdateTextValues()
	{
	}

	[Token(Token = "0x6000762")]
	[Address(RVA = "0xE19B24", Offset = "0xE19B24", VA = "0xE19B24")]
	private void UpdateLocalization()
	{
	}

	[Token(Token = "0x6000763")]
	[Address(RVA = "0xE1B8E0", Offset = "0xE1B8E0", VA = "0xE1B8E0")]
	public void InitFirstScreenOption()
	{
	}

	[Token(Token = "0x6000764")]
	[Address(RVA = "0xE196E4", Offset = "0xE196E4", VA = "0xE196E4")]
	private void SetVibrationSettings()
	{
	}

	[Token(Token = "0x6000765")]
	[Address(RVA = "0xE19528", Offset = "0xE19528", VA = "0xE19528")]
	private void InitScrollbarSpeed()
	{
	}

	[Token(Token = "0x6000766")]
	[Address(RVA = "0xE1F57C", Offset = "0xE1F57C", VA = "0xE1F57C")]
	public void AddScrollBarValue(Vector2 axis)
	{
	}

	[Token(Token = "0x6000767")]
	[Address(RVA = "0xE1F894", Offset = "0xE1F894", VA = "0xE1F894")]
	public void AddScrollBarValuePag(float y)
	{
	}

	[Token(Token = "0x6000768")]
	[Address(RVA = "0xE1B31C", Offset = "0xE1B31C", VA = "0xE1B31C")]
	public IconsType GetDrumScope()
	{
		return default(IconsType);
	}

	[Token(Token = "0x6000769")]
	[Address(RVA = "0xE1FBA8", Offset = "0xE1FBA8", VA = "0xE1FBA8")]
	public SettingsController()
	{
	}
}
[Token(Token = "0x2000177")]
public class SongController : MonoBehaviour
{
	[Token(Token = "0x2000178")]
	[CompilerGenerated]
	private sealed class <WaitForEnfOfSongWithOffset>d__79 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400095A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400095B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SongController <>4__this;

		[Token(Token = "0x400095C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <_time>5__2;

		[Token(Token = "0x1700008A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007D8")]
			[Address(RVA = "0xE288B0", Offset = "0xE288B0", VA = "0xE288B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007DA")]
			[Address(RVA = "0xE288F8", Offset = "0xE288F8", VA = "0xE288F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007D5")]
		[Address(RVA = "0xE285B4", Offset = "0xE285B4", VA = "0xE285B4")]
		[DebuggerHidden]
		public <WaitForEnfOfSongWithOffset>d__79(int <>1__state)
		{
		}

		[Token(Token = "0x60007D6")]
		[Address(RVA = "0xE285DC", Offset = "0xE285DC", VA = "0xE285DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007D7")]
		[Address(RVA = "0xE285E0", Offset = "0xE285E0", VA = "0xE285E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007D9")]
		[Address(RVA = "0xE288B8", Offset = "0xE288B8", VA = "0xE288B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000179")]
	[CompilerGenerated]
	private sealed class <StartSong>d__83 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400095D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400095E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400095F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float _time;

		[Token(Token = "0x4000960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SongController <>4__this;

		[Token(Token = "0x1700008C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007DE")]
			[Address(RVA = "0xE28D04", Offset = "0xE28D04", VA = "0xE28D04", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007E0")]
			[Address(RVA = "0xE28D4C", Offset = "0xE28D4C", VA = "0xE28D4C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007DB")]
		[Address(RVA = "0xE28900", Offset = "0xE28900", VA = "0xE28900")]
		[DebuggerHidden]
		public <StartSong>d__83(int <>1__state)
		{
		}

		[Token(Token = "0x60007DC")]
		[Address(RVA = "0xE28928", Offset = "0xE28928", VA = "0xE28928", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007DD")]
		[Address(RVA = "0xE2892C", Offset = "0xE2892C", VA = "0xE2892C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007DF")]
		[Address(RVA = "0xE28D0C", Offset = "0xE28D0C", VA = "0xE28D0C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200017A")]
	[CompilerGenerated]
	private sealed class <IncreaseVolumen>d__97 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SongController <>4__this;

		[Token(Token = "0x4000964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int _trackIdx;

		[Token(Token = "0x1700008E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007E4")]
			[Address(RVA = "0xE28ED8", Offset = "0xE28ED8", VA = "0xE28ED8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007E6")]
			[Address(RVA = "0xE28F20", Offset = "0xE28F20", VA = "0xE28F20", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007E1")]
		[Address(RVA = "0xE28D54", Offset = "0xE28D54", VA = "0xE28D54")]
		[DebuggerHidden]
		public <IncreaseVolumen>d__97(int <>1__state)
		{
		}

		[Token(Token = "0x60007E2")]
		[Address(RVA = "0xE28D7C", Offset = "0xE28D7C", VA = "0xE28D7C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007E3")]
		[Address(RVA = "0xE28D80", Offset = "0xE28D80", VA = "0xE28D80", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007E5")]
		[Address(RVA = "0xE28EE0", Offset = "0xE28EE0", VA = "0xE28EE0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200017B")]
	[CompilerGenerated]
	private sealed class <IncreaseVolumenExtra>d__98 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SongController <>4__this;

		[Token(Token = "0x4000968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int _trackIdx;

		[Token(Token = "0x17000090")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007EA")]
			[Address(RVA = "0xE290AC", Offset = "0xE290AC", VA = "0xE290AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000091")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007EC")]
			[Address(RVA = "0xE290F4", Offset = "0xE290F4", VA = "0xE290F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007E7")]
		[Address(RVA = "0xE28F28", Offset = "0xE28F28", VA = "0xE28F28")]
		[DebuggerHidden]
		public <IncreaseVolumenExtra>d__98(int <>1__state)
		{
		}

		[Token(Token = "0x60007E8")]
		[Address(RVA = "0xE28F50", Offset = "0xE28F50", VA = "0xE28F50", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007E9")]
		[Address(RVA = "0xE28F54", Offset = "0xE28F54", VA = "0xE28F54", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007EB")]
		[Address(RVA = "0xE290B4", Offset = "0xE290B4", VA = "0xE290B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200017C")]
	[CompilerGenerated]
	private sealed class <ReturnVolumen>d__106 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400096A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400096B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SongController <>4__this;

		[Token(Token = "0x17000092")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007F0")]
			[Address(RVA = "0xE29254", Offset = "0xE29254", VA = "0xE29254", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000093")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007F2")]
			[Address(RVA = "0xE2929C", Offset = "0xE2929C", VA = "0xE2929C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007ED")]
		[Address(RVA = "0xE290FC", Offset = "0xE290FC", VA = "0xE290FC")]
		[DebuggerHidden]
		public <ReturnVolumen>d__106(int <>1__state)
		{
		}

		[Token(Token = "0x60007EE")]
		[Address(RVA = "0xE29124", Offset = "0xE29124", VA = "0xE29124", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007EF")]
		[Address(RVA = "0xE29128", Offset = "0xE29128", VA = "0xE29128", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007F1")]
		[Address(RVA = "0xE2925C", Offset = "0xE2925C", VA = "0xE2925C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SongController instance;

	[Token(Token = "0x4000921")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject enemyGoal;

	[Token(Token = "0x4000922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject ViewPoint;

	[Token(Token = "0x4000923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMesh3D ScoreText;

	[Token(Token = "0x4000924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Coroutine SongStart;

	[Token(Token = "0x4000925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Coroutine VolumeSong;

	[Token(Token = "0x4000926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Coroutine VolumeSongExtra;

	[Token(Token = "0x4000927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioClip bassDrumClip;

	[Token(Token = "0x4000928")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioTrack[] SongTracks;

	[Token(Token = "0x4000929")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float startDateTime;

	[Token(Token = "0x400092A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float timeSpanCorutine;

	[Token(Token = "0x400092B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float offsetMusic;

	[Token(Token = "0x400092C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float velocity;

	[Token(Token = "0x400092D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float oldComboValue;

	[Token(Token = "0x400092E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float beatTimeStep;

	[Token(Token = "0x400092F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float beatLineLifeSpan;

	[Token(Token = "0x4000930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float startPlaytimestamp;

	[Token(Token = "0x4000931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float songDuration;

	[Token(Token = "0x4000932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float songBpm;

	[Token(Token = "0x4000933")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float secPerBeat;

	[Token(Token = "0x4000934")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float songPosition;

	[Token(Token = "0x4000935")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float songPositionInBeats;

	[Token(Token = "0x4000936")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float dspSongTime;

	[Token(Token = "0x4000937")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float moveTempo;

	[Token(Token = "0x4000938")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float timeInPause;

	[Token(Token = "0x4000939")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public uint beatTempo;

	[Token(Token = "0x400093A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private uint score;

	[Token(Token = "0x400093B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private uint numberNotes;

	[Token(Token = "0x400093C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private uint numberNotesToSubstractVariation;

	[Token(Token = "0x400093D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private uint numberNotesHitPerfect;

	[Token(Token = "0x400093E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private uint numberNotesHitGood;

	[Token(Token = "0x400093F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private uint numberNotesHitNormal;

	[Token(Token = "0x4000940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private ushort combo_score_count;

	[Token(Token = "0x4000941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB6")]
	private ushort high_combo;

	[Token(Token = "0x4000942")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private uint charged_hits_count;

	[Token(Token = "0x4000943")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool isDebug;

	[Token(Token = "0x4000944")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBD")]
	private bool songHasStarted;

	[Token(Token = "0x4000945")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBE")]
	private bool canStartDrumTrack;

	[Token(Token = "0x4000946")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBF")]
	private bool songIsPaused;

	[Token(Token = "0x4000947")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool songIsPlaying;

	[Token(Token = "0x4000948")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
	private bool coroutineWasStopped;

	[Token(Token = "0x4000949")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC2")]
	private bool canShowVictory;

	[Token(Token = "0x400094A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float volumenDrums;

	[Token(Token = "0x400094B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float oldVolumen;

	[Token(Token = "0x400094C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private GameObject OneStickMode;

	[Token(Token = "0x400094D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public AudioMixer Mixer;

	[Token(Token = "0x400094E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public AudioMixerSnapshot[] TrackSnapshot;

	[Token(Token = "0x400094F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Coroutine returnVolumenCo;

	[Token(Token = "0x4000950")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private DG.Tweening.Tween volumn0;

	[Token(Token = "0x4000951")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private DG.Tweening.Tween volumn1;

	[Token(Token = "0x4000952")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private DG.Tweening.Tween volumn2;

	[Token(Token = "0x4000953")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private DG.Tweening.Tween volumn3;

	[Token(Token = "0x4000954")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private float songTimeBeforePause;

	[Token(Token = "0x4000955")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private float min_seconds_duration_song;

	[Token(Token = "0x4000956")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private float auxTimePreview;

	[Token(Token = "0x4000957")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private List<AudioClip> _TutorialAClist;

	[Token(Token = "0x4000958")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private List<AudioClip> _TutorialPerfectLoopAClist;

	[Token(Token = "0x6000782")]
	[Address(RVA = "0xE209C8", Offset = "0xE209C8", VA = "0xE209C8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000783")]
	[Address(RVA = "0xE24628", Offset = "0xE24628", VA = "0xE24628")]
	private void Start()
	{
	}

	[Token(Token = "0x6000784")]
	[Address(RVA = "0xE24648", Offset = "0xE24648", VA = "0xE24648")]
	public float GetSongDuration()
	{
		return default(float);
	}

	[Token(Token = "0x6000785")]
	[Address(RVA = "0xE24780", Offset = "0xE24780", VA = "0xE24780")]
	public void ResetSongDuration()
	{
	}

	[Token(Token = "0x6000786")]
	[Address(RVA = "0xE245B8", Offset = "0xE245B8", VA = "0xE245B8")]
	public bool IsAudioThreadWorking()
	{
		return default(bool);
	}

	[Token(Token = "0x6000787")]
	[Address(RVA = "0xE2478C", Offset = "0xE2478C", VA = "0xE2478C")]
	public uint GetScore()
	{
		return default(uint);
	}

	[Token(Token = "0x6000788")]
	[Address(RVA = "0xE24794", Offset = "0xE24794", VA = "0xE24794")]
	public uint GetHighestCombo()
	{
		return default(uint);
	}

	[Token(Token = "0x6000789")]
	[Address(RVA = "0xE2479C", Offset = "0xE2479C", VA = "0xE2479C")]
	public uint GetNumberNotes()
	{
		return default(uint);
	}

	[Token(Token = "0x600078A")]
	[Address(RVA = "0xE247A8", Offset = "0xE247A8", VA = "0xE247A8")]
	public void IncreaseNumberNotes()
	{
	}

	[Token(Token = "0x600078B")]
	[Address(RVA = "0xE247B8", Offset = "0xE247B8", VA = "0xE247B8")]
	public void IncreaseNumberNotesToSubstractVariation(uint value_to_add)
	{
	}

	[Token(Token = "0x600078C")]
	[Address(RVA = "0xE247C8", Offset = "0xE247C8", VA = "0xE247C8")]
	public uint NumberNotesToSubstractVariation()
	{
		return default(uint);
	}

	[Token(Token = "0x600078D")]
	[Address(RVA = "0xE247D0", Offset = "0xE247D0", VA = "0xE247D0")]
	public uint GetNormalHits()
	{
		return default(uint);
	}

	[Token(Token = "0x600078E")]
	[Address(RVA = "0xE247D8", Offset = "0xE247D8", VA = "0xE247D8")]
	public uint GetPerfectHits()
	{
		return default(uint);
	}

	[Token(Token = "0x600078F")]
	[Address(RVA = "0xE247E0", Offset = "0xE247E0", VA = "0xE247E0")]
	public uint GetGoodHits()
	{
		return default(uint);
	}

	[Token(Token = "0x6000790")]
	[Address(RVA = "0xE247E8", Offset = "0xE247E8", VA = "0xE247E8")]
	public uint GetTotalHits()
	{
		return default(uint);
	}

	[Token(Token = "0x6000791")]
	[Address(RVA = "0xE247FC", Offset = "0xE247FC", VA = "0xE247FC")]
	public uint GetChargedHitsCount()
	{
		return default(uint);
	}

	[Token(Token = "0x6000792")]
	[Address(RVA = "0xE24804", Offset = "0xE24804", VA = "0xE24804")]
	public void ResetHits()
	{
	}

	[Token(Token = "0x6000793")]
	[Address(RVA = "0xE24814", Offset = "0xE24814", VA = "0xE24814")]
	public bool GetCanShowVictory()
	{
		return default(bool);
	}

	[Token(Token = "0x6000794")]
	[Address(RVA = "0xE2481C", Offset = "0xE2481C", VA = "0xE2481C")]
	public bool GetIsSongPlaying()
	{
		return default(bool);
	}

	[Token(Token = "0x6000795")]
	[Address(RVA = "0xE24824", Offset = "0xE24824", VA = "0xE24824")]
	public void SetRankLetterBonus(Ranking _rankLetter)
	{
	}

	[Token(Token = "0x6000796")]
	[Address(RVA = "0xE248C4", Offset = "0xE248C4", VA = "0xE248C4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000797")]
	[Address(RVA = "0xE24A1C", Offset = "0xE24A1C", VA = "0xE24A1C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000798")]
	[Address(RVA = "0xE24C1C", Offset = "0xE24C1C", VA = "0xE24C1C")]
	[IteratorStateMachine(typeof(<WaitForEnfOfSongWithOffset>d__79))]
	private IEnumerator WaitForEnfOfSongWithOffset()
	{
		return null;
	}

	[Token(Token = "0x6000799")]
	[Address(RVA = "0xE24C90", Offset = "0xE24C90", VA = "0xE24C90")]
	public void ActualizeTimeInPause()
	{
	}

	[Token(Token = "0x600079A")]
	[Address(RVA = "0xE24CFC", Offset = "0xE24CFC", VA = "0xE24CFC")]
	public void ExplodeAssistStick()
	{
	}

	[Token(Token = "0x600079B")]
	[Address(RVA = "0xE24DE0", Offset = "0xE24DE0", VA = "0xE24DE0")]
	public void StartPlay()
	{
	}

	[Token(Token = "0x600079C")]
	[Address(RVA = "0xE25358", Offset = "0xE25358", VA = "0xE25358")]
	[IteratorStateMachine(typeof(<StartSong>d__83))]
	private IEnumerator StartSong(float _time)
	{
		return null;
	}

	[Token(Token = "0x600079D")]
	[Address(RVA = "0xE24920", Offset = "0xE24920", VA = "0xE24920")]
	public float GetSongTime()
	{
		return default(float);
	}

	[Token(Token = "0x600079E")]
	[Address(RVA = "0xE253DC", Offset = "0xE253DC", VA = "0xE253DC")]
	public float GetOffsetMusic()
	{
		return default(float);
	}

	[Token(Token = "0x600079F")]
	[Address(RVA = "0xE253E4", Offset = "0xE253E4", VA = "0xE253E4")]
	public float GetMoveTempo()
	{
		return default(float);
	}

	[Token(Token = "0x60007A0")]
	[Address(RVA = "0xE253F4", Offset = "0xE253F4", VA = "0xE253F4")]
	public bool GetSongHasStarted()
	{
		return default(bool);
	}

	[Token(Token = "0x60007A1")]
	[Address(RVA = "0xE253FC", Offset = "0xE253FC", VA = "0xE253FC")]
	public float GetSecPerBeat()
	{
		return default(float);
	}

	[Token(Token = "0x60007A2")]
	[Address(RVA = "0xE25404", Offset = "0xE25404", VA = "0xE25404")]
	public bool GetSongIsPaused()
	{
		return default(bool);
	}

	[Token(Token = "0x60007A3")]
	[Address(RVA = "0xE2540C", Offset = "0xE2540C", VA = "0xE2540C")]
	public bool GetSongIsPlaying()
	{
		return default(bool);
	}

	[Token(Token = "0x60007A4")]
	[Address(RVA = "0xE25444", Offset = "0xE25444", VA = "0xE25444")]
	public void ActivateExtraTrack(int _pos)
	{
	}

	[Token(Token = "0x60007A5")]
	[Address(RVA = "0xE2550C", Offset = "0xE2550C", VA = "0xE2550C")]
	public void ActivateExtraTrack()
	{
	}

	[Token(Token = "0x60007A6")]
	[Address(RVA = "0xE255DC", Offset = "0xE255DC", VA = "0xE255DC")]
	public void NewActivateExtraTrack()
	{
	}

	[Token(Token = "0x60007A7")]
	[Address(RVA = "0xE25700", Offset = "0xE25700", VA = "0xE25700")]
	public void DeactivateExtraTrack(int _pos)
	{
	}

	[Token(Token = "0x60007A8")]
	[Address(RVA = "0xE257D4", Offset = "0xE257D4", VA = "0xE257D4")]
	public void DeactivateExtraTrack()
	{
	}

	[Token(Token = "0x60007A9")]
	[Address(RVA = "0xE25904", Offset = "0xE25904", VA = "0xE25904")]
	public void NewDeactivateExtraTrack()
	{
	}

	[Token(Token = "0x60007AA")]
	[Address(RVA = "0xE25AEC", Offset = "0xE25AEC", VA = "0xE25AEC")]
	[IteratorStateMachine(typeof(<IncreaseVolumen>d__97))]
	private IEnumerator IncreaseVolumen(int _trackIdx)
	{
		return null;
	}

	[Token(Token = "0x60007AB")]
	[Address(RVA = "0xE25B70", Offset = "0xE25B70", VA = "0xE25B70")]
	[IteratorStateMachine(typeof(<IncreaseVolumenExtra>d__98))]
	private IEnumerator IncreaseVolumenExtra(int _trackIdx)
	{
		return null;
	}

	[Token(Token = "0x60007AC")]
	[Address(RVA = "0xE25BF4", Offset = "0xE25BF4", VA = "0xE25BF4")]
	public void ActivateDrumTrack()
	{
	}

	[Token(Token = "0x60007AD")]
	[Address(RVA = "0xE25D54", Offset = "0xE25D54", VA = "0xE25D54")]
	public void DeactivateDrumTrack()
	{
	}

	[Token(Token = "0x60007AE")]
	[Address(RVA = "0xE252CC", Offset = "0xE252CC", VA = "0xE252CC")]
	private void PlayTracks()
	{
	}

	[Token(Token = "0x60007AF")]
	[Address(RVA = "0xE25EA8", Offset = "0xE25EA8", VA = "0xE25EA8")]
	private void PlayTrack(int _pos)
	{
	}

	[Token(Token = "0x60007B0")]
	[Address(RVA = "0xE25F1C", Offset = "0xE25F1C", VA = "0xE25F1C")]
	private void StopTracks()
	{
	}

	[Token(Token = "0x60007B1")]
	[Address(RVA = "0xE25FE0", Offset = "0xE25FE0", VA = "0xE25FE0")]
	public void HighlightDrumsLayer(int fadeSteps, int maxSteps)
	{
	}

	[Token(Token = "0x60007B2")]
	[Address(RVA = "0xE261D4", Offset = "0xE261D4", VA = "0xE261D4")]
	public void LowerVolumen()
	{
	}

	[Token(Token = "0x60007B3")]
	[Address(RVA = "0xE26468", Offset = "0xE26468", VA = "0xE26468")]
	[IteratorStateMachine(typeof(<ReturnVolumen>d__106))]
	private IEnumerator ReturnVolumen()
	{
		return null;
	}

	[Token(Token = "0x60007B4")]
	[Address(RVA = "0xE264DC", Offset = "0xE264DC", VA = "0xE264DC")]
	private void StopTrack(int _pos)
	{
	}

	[Token(Token = "0x60007B5")]
	[Address(RVA = "0xE2657C", Offset = "0xE2657C", VA = "0xE2657C")]
	private void PauseTracks()
	{
	}

	[Token(Token = "0x60007B6")]
	[Address(RVA = "0xE265E4", Offset = "0xE265E4", VA = "0xE265E4")]
	private void PauseTrack(int _pos)
	{
	}

	[Token(Token = "0x60007B7")]
	[Address(RVA = "0xE25254", Offset = "0xE25254", VA = "0xE25254")]
	private void SeekSongTracks(float _toSeek)
	{
	}

	[Token(Token = "0x60007B8")]
	[Address(RVA = "0xE2661C", Offset = "0xE2661C", VA = "0xE2661C")]
	public void AdvanceSong(float _seconds)
	{
	}

	[Token(Token = "0x60007B9")]
	[Address(RVA = "0xE2674C", Offset = "0xE2674C", VA = "0xE2674C")]
	public void RewindSong(float _seconds)
	{
	}

	[Token(Token = "0x60007BA")]
	[Address(RVA = "0xE25150", Offset = "0xE25150", VA = "0xE25150")]
	public void StopSong()
	{
	}

	[Token(Token = "0x60007BB")]
	[Address(RVA = "0xE26804", Offset = "0xE26804", VA = "0xE26804")]
	public void PauseSong()
	{
	}

	[Token(Token = "0x60007BC")]
	[Address(RVA = "0xE26990", Offset = "0xE26990", VA = "0xE26990")]
	public float GetStartPlaytimeStamp()
	{
		return default(float);
	}

	[Token(Token = "0x60007BD")]
	[Address(RVA = "0xE20BE0", Offset = "0xE20BE0", VA = "0xE20BE0")]
	public void LoadSongTracks()
	{
	}

	[Token(Token = "0x60007BE")]
	[Address(RVA = "0xE251F0", Offset = "0xE251F0", VA = "0xE251F0")]
	private void ResetScore()
	{
	}

	[Token(Token = "0x60007BF")]
	[Address(RVA = "0xE26A04", Offset = "0xE26A04", VA = "0xE26A04")]
	public int AddScore(uint scoreToAdd, float _timeStamp, ushort spins_count)
	{
		return default(int);
	}

	[Token(Token = "0x60007C0")]
	[Address(RVA = "0xE26DB0", Offset = "0xE26DB0", VA = "0xE26DB0")]
	public int AddScoreNoHitRate(uint scoreToAdd, float _timeStamp, ushort spins_count)
	{
		return default(int);
	}

	[Token(Token = "0x60007C1")]
	[Address(RVA = "0xE26C40", Offset = "0xE26C40", VA = "0xE26C40")]
	private bool HardcodedPerfectTutorialCondition(float _timeDiff)
	{
		return default(bool);
	}

	[Token(Token = "0x60007C2")]
	[Address(RVA = "0xE26FB0", Offset = "0xE26FB0", VA = "0xE26FB0")]
	public float GetVolumenDrums()
	{
		return default(float);
	}

	[Token(Token = "0x60007C3")]
	[Address(RVA = "0xE2707C", Offset = "0xE2707C", VA = "0xE2707C")]
	public void AddScoreKill(uint scoreToAdd, ushort spins_count)
	{
	}

	[Token(Token = "0x60007C4")]
	[Address(RVA = "0xE2710C", Offset = "0xE2710C", VA = "0xE2710C")]
	public bool AddComboScoreCount()
	{
		return default(bool);
	}

	[Token(Token = "0x60007C5")]
	[Address(RVA = "0xE26998", Offset = "0xE26998", VA = "0xE26998")]
	public void resetComboScoreCount()
	{
	}

	[Token(Token = "0x60007C6")]
	[Address(RVA = "0xE2723C", Offset = "0xE2723C", VA = "0xE2723C")]
	public void CheckSongTracks()
	{
	}

	[Token(Token = "0x60007C7")]
	[Address(RVA = "0xE26CB8", Offset = "0xE26CB8", VA = "0xE26CB8")]
	public float getComboScoreMulty()
	{
		return default(float);
	}

	[Token(Token = "0x60007C8")]
	[Address(RVA = "0xE272C8", Offset = "0xE272C8", VA = "0xE272C8")]
	private void SetTextComboScoreMulty()
	{
	}

	[Token(Token = "0x60007C9")]
	[Address(RVA = "0xE273F8", Offset = "0xE273F8", VA = "0xE273F8")]
	public bool HasSongStarted()
	{
		return default(bool);
	}

	[Token(Token = "0x60007CA")]
	[Address(RVA = "0xE27400", Offset = "0xE27400", VA = "0xE27400")]
	public bool GetIsDebug()
	{
		return default(bool);
	}

	[Token(Token = "0x60007CB")]
	[Address(RVA = "0xE27408", Offset = "0xE27408", VA = "0xE27408")]
	public void SetIsDebug(bool _state)
	{
	}

	[Token(Token = "0x60007CC")]
	[Address(RVA = "0xE27414", Offset = "0xE27414", VA = "0xE27414")]
	public SongController()
	{
	}
}
[Serializable]
[Token(Token = "0x200017D")]
public class TemplateEnemy
{
	[Token(Token = "0x400096C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<IconsType> iconTypeList;

	[Token(Token = "0x400096D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float time;

	[Token(Token = "0x400096E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int enemyType;

	[Token(Token = "0x400096F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int spawnerId;

	[Token(Token = "0x4000970")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public uint id;

	[Token(Token = "0x4000971")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool hasSpawned;

	[Token(Token = "0x4000972")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool can_only_recieve_damage_with_spin;

	[Token(Token = "0x60007F3")]
	[Address(RVA = "0xE292A4", Offset = "0xE292A4", VA = "0xE292A4")]
	public TemplateEnemy()
	{
	}
}
[Serializable]
[Token(Token = "0x200017E")]
public class AudioTrack
{
	[Token(Token = "0x4000973")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AudioSource audioSource;

	[Token(Token = "0x4000974")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool state;

	[Token(Token = "0x4000975")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int pos;

	[Token(Token = "0x60007F4")]
	[Address(RVA = "0xE2932C", Offset = "0xE2932C", VA = "0xE2932C")]
	public bool isActive()
	{
		return default(bool);
	}

	[Token(Token = "0x60007F5")]
	[Address(RVA = "0xE29334", Offset = "0xE29334", VA = "0xE29334")]
	public void Play()
	{
	}

	[Token(Token = "0x60007F6")]
	[Address(RVA = "0xE29350", Offset = "0xE29350", VA = "0xE29350")]
	public void Activate()
	{
	}

	[Token(Token = "0x60007F7")]
	[Address(RVA = "0xE2935C", Offset = "0xE2935C", VA = "0xE2935C")]
	public void Deactivate()
	{
	}

	[Token(Token = "0x60007F8")]
	[Address(RVA = "0xE29364", Offset = "0xE29364", VA = "0xE29364")]
	public void Seek(float _toSeek)
	{
	}

	[Token(Token = "0x60007F9")]
	[Address(RVA = "0xE29380", Offset = "0xE29380", VA = "0xE29380")]
	public void Stop()
	{
	}

	[Token(Token = "0x60007FA")]
	[Address(RVA = "0xE2939C", Offset = "0xE2939C", VA = "0xE2939C")]
	public void Pause()
	{
	}

	[Token(Token = "0x60007FB")]
	[Address(RVA = "0xE293B8", Offset = "0xE293B8", VA = "0xE293B8")]
	public AudioTrack()
	{
	}
}
[Token(Token = "0x200017F")]
public enum ScoreType
{
	[Token(Token = "0x4000977")]
	Normal,
	[Token(Token = "0x4000978")]
	Perfect,
	[Token(Token = "0x4000979")]
	Good
}
[Token(Token = "0x2000180")]
public class StoreController : MonoBehaviour
{
	[Token(Token = "0x2000183")]
	[CompilerGenerated]
	private sealed class <InitStoreItem>d__60 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StoreController <>4__this;

		[Token(Token = "0x40009B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public byte type;

		[Token(Token = "0x40009B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<StoreItemInfo> <storeItemInfoList>5__2;

		[Token(Token = "0x40009B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <i>5__3;

		[Token(Token = "0x17000094")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000830")]
			[Address(RVA = "0xE31018", Offset = "0xE31018", VA = "0xE31018", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000095")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000832")]
			[Address(RVA = "0xE31060", Offset = "0xE31060", VA = "0xE31060", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600082D")]
		[Address(RVA = "0xE2B03C", Offset = "0xE2B03C", VA = "0xE2B03C")]
		[DebuggerHidden]
		public <InitStoreItem>d__60(int <>1__state)
		{
		}

		[Token(Token = "0x600082E")]
		[Address(RVA = "0xE30944", Offset = "0xE30944", VA = "0xE30944", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600082F")]
		[Address(RVA = "0xE30948", Offset = "0xE30948", VA = "0xE30948", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000831")]
		[Address(RVA = "0xE31020", Offset = "0xE31020", VA = "0xE31020", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400097A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private byte currentType;

	[Token(Token = "0x400097B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public StoreContentBlockItem itemSelected;

	[Token(Token = "0x400097C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<StoreItemInfo> handsStoreItemInfoList;

	[Token(Token = "0x400097D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<StoreItemInfo> drumsStoreItemInfoList;

	[Token(Token = "0x400097E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<StoreItemInfo> sticksStoreItemInfoList;

	[Token(Token = "0x400097F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<StoreItemInfo> specialStoreItemInfoList;

	[Token(Token = "0x4000980")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject storeParent;

	[Token(Token = "0x4000981")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject Title;

	[Token(Token = "0x4000982")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private TextMeshProUGUI user_money_text;

	[Token(Token = "0x4000983")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Header("Scroll")]
	private List<GameObject> ListItemBlocks;

	[Token(Token = "0x4000984")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private GameObject Content;

	[Token(Token = "0x4000985")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private GameObject itemBlock;

	[Token(Token = "0x4000986")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private GameObject ScrollBar;

	[Token(Token = "0x4000987")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private GameObject ScrollBarUp;

	[Token(Token = "0x4000988")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private GameObject ScrollBarDown;

	[Token(Token = "0x4000989")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private GameObject Info;

	[Token(Token = "0x400098A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float final_axis_scroll_speed;

	[Token(Token = "0x400098B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float final_pag_scroll_speed;

	[Token(Token = "0x400098C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private DG.Tweening.Tween SnapStore;

	[Token(Token = "0x400098D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Vector3 OgPosition;

	[Token(Token = "0x400098E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private bool isLoading;

	[Token(Token = "0x400098F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[Header("Info")]
	[SerializeField]
	private GameObject info_button;

	[Token(Token = "0x4000990")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private Material info_button_default_MT;

	[Token(Token = "0x4000991")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private Material info_button_equip_MT;

	[Token(Token = "0x4000992")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private TextMeshProUGUI info_button_text;

	[Token(Token = "0x4000993")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private TextMeshProUGUI info_title_text;

	[Token(Token = "0x4000994")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private TextMeshProUGUI info_rarity_text;

	[Token(Token = "0x4000995")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private TextMeshProUGUI info_unlock_tip_text;

	[Token(Token = "0x4000996")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private TextMeshProUGUI info_question_text;

	[Token(Token = "0x4000997")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private Transform info_leftstick_parent;

	[Token(Token = "0x4000998")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[SerializeField]
	private Transform info_rightstick_parent;

	[Token(Token = "0x4000999")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private Transform info_lefthand_parent;

	[Token(Token = "0x400099A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[SerializeField]
	private Transform info_righthand_parent;

	[Token(Token = "0x400099B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private Transform info_drums_parent;

	[Token(Token = "0x400099C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[SerializeField]
	private Transform info_special_parent;

	[Token(Token = "0x400099D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[SerializeField]
	private Transform info_stick_rotation_parent;

	[Token(Token = "0x400099E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[SerializeField]
	private Transform info_hand_rotation_parent;

	[Token(Token = "0x400099F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[SerializeField]
	private Transform info_drums_rotation_parent;

	[Token(Token = "0x40009A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[SerializeField]
	private Transform info_special_rotation_parent;

	[Token(Token = "0x40009A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[SerializeField]
	private GameObject buy_PS;

	[Token(Token = "0x40009A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[SerializeField]
	private GameObject equip_PS;

	[Token(Token = "0x40009A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	[SerializeField]
	private GameObject unlock_Store_Item_Popup;

	[Token(Token = "0x40009A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public bool canCheckPosition;

	[Token(Token = "0x40009A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[SerializeField]
	[Header("Demo")]
	private GameObject DemoSticker;

	[Token(Token = "0x40009A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private Quaternion init_models_preview_parent_group_rotation;

	[Token(Token = "0x60007FC")]
	[Address(RVA = "0xE293C0", Offset = "0xE293C0", VA = "0xE293C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007FD")]
	[Address(RVA = "0xE293F8", Offset = "0xE293F8", VA = "0xE293F8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60007FE")]
	[Address(RVA = "0xE2965C", Offset = "0xE2965C", VA = "0xE2965C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007FF")]
	[Address(RVA = "0xE2A47C", Offset = "0xE2A47C", VA = "0xE2A47C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000800")]
	[Address(RVA = "0xE2A5C0", Offset = "0xE2A5C0", VA = "0xE2A5C0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000801")]
	[Address(RVA = "0xE2A5C4", Offset = "0xE2A5C4", VA = "0xE2A5C4")]
	private void RotatePreviewModel()
	{
	}

	[Token(Token = "0x6000802")]
	[Address(RVA = "0xE2A6B8", Offset = "0xE2A6B8", VA = "0xE2A6B8")]
	public void CheckScrollBarValue()
	{
	}

	[Token(Token = "0x6000803")]
	[Address(RVA = "0xE2A754", Offset = "0xE2A754", VA = "0xE2A754")]
	public void PickSong(uint _itemID)
	{
	}

	[Token(Token = "0x6000804")]
	[Address(RVA = "0xE2A8C8", Offset = "0xE2A8C8", VA = "0xE2A8C8")]
	private void InitScrollbarSpeed()
	{
	}

	[Token(Token = "0x6000805")]
	[Address(RVA = "0xE2A928", Offset = "0xE2A928", VA = "0xE2A928")]
	private void CheckActiveScrollbar(int count)
	{
	}

	[Token(Token = "0x6000806")]
	[Address(RVA = "0xE2AB80", Offset = "0xE2AB80", VA = "0xE2AB80")]
	public void AddScrollBarValue(Vector2 axis)
	{
	}

	[Token(Token = "0x6000807")]
	[Address(RVA = "0xE2AD5C", Offset = "0xE2AD5C", VA = "0xE2AD5C")]
	public void AddScrollBarValuePag(float y)
	{
	}

	[Token(Token = "0x6000808")]
	[Address(RVA = "0xE2956C", Offset = "0xE2956C", VA = "0xE2956C")]
	private void ClearStoreItemInfoList()
	{
	}

	[Token(Token = "0x6000809")]
	[Address(RVA = "0xE297B8", Offset = "0xE297B8", VA = "0xE297B8")]
	private void InitStoreItemInfoList()
	{
	}

	[Token(Token = "0x600080A")]
	[Address(RVA = "0xE2A474", Offset = "0xE2A474", VA = "0xE2A474")]
	private void InitScreen()
	{
	}

	[Token(Token = "0x600080B")]
	[Address(RVA = "0xE2AFB8", Offset = "0xE2AFB8", VA = "0xE2AFB8")]
	[IteratorStateMachine(typeof(<InitStoreItem>d__60))]
	private IEnumerator InitStoreItem(byte type)
	{
		return null;
	}

	[Token(Token = "0x600080C")]
	[Address(RVA = "0xE29418", Offset = "0xE29418", VA = "0xE29418")]
	public void Deleteicons()
	{
	}

	[Token(Token = "0x600080D")]
	[Address(RVA = "0xE2B064", Offset = "0xE2B064", VA = "0xE2B064")]
	private void ActivateInfo()
	{
	}

	[Token(Token = "0x600080E")]
	[Address(RVA = "0xE2B19C", Offset = "0xE2B19C", VA = "0xE2B19C")]
	private void DeactivateInfo()
	{
	}

	[Token(Token = "0x600080F")]
	[Address(RVA = "0xE2B2C0", Offset = "0xE2B2C0", VA = "0xE2B2C0")]
	public StoreItemInfo GetStoreItemInfo(uint id, StoreItemType type)
	{
		return null;
	}

	[Token(Token = "0x6000810")]
	[Address(RVA = "0xE2AF3C", Offset = "0xE2AF3C", VA = "0xE2AF3C")]
	public void SetStoreItemTab(int type)
	{
	}

	[Token(Token = "0x6000811")]
	[Address(RVA = "0xE2B498", Offset = "0xE2B498", VA = "0xE2B498")]
	public void ShowInfo(StoreContentBlockItem itemSelected, uint id_item, StoreItemType type)
	{
	}

	[Token(Token = "0x6000812")]
	[Address(RVA = "0xE2B5A0", Offset = "0xE2B5A0", VA = "0xE2B5A0")]
	private void SetInfo(uint id_item, StoreItemType type)
	{
	}

	[Token(Token = "0x6000813")]
	[Address(RVA = "0xE2D048", Offset = "0xE2D048", VA = "0xE2D048")]
	private void SetInfoUnlockTipText(uint id_item, StoreItemType item_type)
	{
	}

	[Token(Token = "0x6000814")]
	[Address(RVA = "0xE2CFD4", Offset = "0xE2CFD4", VA = "0xE2CFD4")]
	public bool HasEquippedItem(uint id_item, StoreItemType type)
	{
		return default(bool);
	}

	[Token(Token = "0x6000815")]
	[Address(RVA = "0xE2E420", Offset = "0xE2E420", VA = "0xE2E420")]
	private void InstanciateDrumsStickStoreModel(uint id)
	{
	}

	[Token(Token = "0x6000816")]
	[Address(RVA = "0xE2DD04", Offset = "0xE2DD04", VA = "0xE2DD04")]
	private void InstanciateHandsStoreModel(uint id)
	{
	}

	[Token(Token = "0x6000817")]
	[Address(RVA = "0xE2E18C", Offset = "0xE2E18C", VA = "0xE2E18C")]
	private void InstanciateDrumsStoreModel(uint id)
	{
	}

	[Token(Token = "0x6000818")]
	[Address(RVA = "0xE2E848", Offset = "0xE2E848", VA = "0xE2E848")]
	private void InstanciateSpecialStoreModel(uint id)
	{
	}

	[Token(Token = "0x6000819")]
	[Address(RVA = "0xE2BF54", Offset = "0xE2BF54", VA = "0xE2BF54")]
	private void DestroyPreviewInstanciateStoreModels()
	{
	}

	[Token(Token = "0x600081A")]
	[Address(RVA = "0xE2EC44", Offset = "0xE2EC44", VA = "0xE2EC44")]
	public void ButtonInfoOnClick()
	{
	}

	[Token(Token = "0x600081B")]
	[Address(RVA = "0xE2F2E0", Offset = "0xE2F2E0", VA = "0xE2F2E0")]
	private void BuyItemStore(StoreItemInfo itemInfo)
	{
	}

	[Token(Token = "0x600081C")]
	[Address(RVA = "0xE2EE88", Offset = "0xE2EE88", VA = "0xE2EE88")]
	private void EquipItemStore(StoreItemInfo itemInfo)
	{
	}

	[Token(Token = "0x600081D")]
	[Address(RVA = "0xE2F800", Offset = "0xE2F800", VA = "0xE2F800")]
	private void ActivateUnlockStoreItemPopup()
	{
	}

	[Token(Token = "0x600081E")]
	[Address(RVA = "0xE301F0", Offset = "0xE301F0", VA = "0xE301F0")]
	private void PlayShowUnlockStoreItemPopupAnimation()
	{
	}

	[Token(Token = "0x600081F")]
	[Address(RVA = "0xE303A4", Offset = "0xE303A4", VA = "0xE303A4")]
	public void AcceptUnlockStoreItemPopup()
	{
	}

	[Token(Token = "0x6000820")]
	[Address(RVA = "0xE304EC", Offset = "0xE304EC", VA = "0xE304EC")]
	private void PlayShowStoreParent()
	{
	}

	[Token(Token = "0x6000821")]
	[Address(RVA = "0xE306B4", Offset = "0xE306B4", VA = "0xE306B4")]
	public void CheckVisible()
	{
	}

	[Token(Token = "0x6000822")]
	[Address(RVA = "0xE30770", Offset = "0xE30770", VA = "0xE30770")]
	public StoreController()
	{
	}
}
[Token(Token = "0x2000188")]
public class StoreItemInfo
{
	[Token(Token = "0x40009BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint id;

	[Token(Token = "0x40009C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string title;

	[Token(Token = "0x40009C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public uint price;

	[Token(Token = "0x40009C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public byte id_rarity;

	[Token(Token = "0x40009C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public StoreItemType id_type;

	[Token(Token = "0x40009C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public uint order;

	[Token(Token = "0x40009C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SpecialItemScriptableType id_type_special;

	[Token(Token = "0x40009C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int id_song;

	[Token(Token = "0x600083F")]
	[Address(RVA = "0xE2AF34", Offset = "0xE2AF34", VA = "0xE2AF34")]
	public StoreItemInfo()
	{
	}
}
[Token(Token = "0x2000189")]
public enum StoreItemType
{
	[Token(Token = "0x40009C8")]
	HANDS,
	[Token(Token = "0x40009C9")]
	DRUMS,
	[Token(Token = "0x40009CA")]
	DRUMS_STICK,
	[Token(Token = "0x40009CB")]
	SPECIAL
}
[Token(Token = "0x200018A")]
public class WorkshopController : MonoBehaviour
{
	[Token(Token = "0x6000840")]
	[Address(RVA = "0xE3167C", Offset = "0xE3167C", VA = "0xE3167C")]
	public WorkshopController()
	{
	}
}
[Token(Token = "0x200018B")]
public class XRController : MonoBehaviour
{
	[Token(Token = "0x200018C")]
	[CompilerGenerated]
	private sealed class <WaitForSaveBeenLoaded>d__62 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public XRController <>4__this;

		[Token(Token = "0x17000096")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000882")]
			[Address(RVA = "0xE379D4", Offset = "0xE379D4", VA = "0xE379D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000097")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000884")]
			[Address(RVA = "0xE37A1C", Offset = "0xE37A1C", VA = "0xE37A1C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600087F")]
		[Address(RVA = "0xE33FDC", Offset = "0xE33FDC", VA = "0xE33FDC")]
		[DebuggerHidden]
		public <WaitForSaveBeenLoaded>d__62(int <>1__state)
		{
		}

		[Token(Token = "0x6000880")]
		[Address(RVA = "0xE3799C", Offset = "0xE3799C", VA = "0xE3799C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000881")]
		[Address(RVA = "0xE379A0", Offset = "0xE379A0", VA = "0xE379A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000883")]
		[Address(RVA = "0xE379DC", Offset = "0xE379DC", VA = "0xE379DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200018E")]
	[CompilerGenerated]
	private sealed class <LogInPlatform>d__66 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public XRController <>4__this;

		[Token(Token = "0x17000098")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600088B")]
			[Address(RVA = "0xE37E98", Offset = "0xE37E98", VA = "0xE37E98", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000099")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600088D")]
			[Address(RVA = "0xE37EE0", Offset = "0xE37EE0", VA = "0xE37EE0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000888")]
		[Address(RVA = "0xE34B0C", Offset = "0xE34B0C", VA = "0xE34B0C")]
		[DebuggerHidden]
		public <LogInPlatform>d__66(int <>1__state)
		{
		}

		[Token(Token = "0x6000889")]
		[Address(RVA = "0xE37AB8", Offset = "0xE37AB8", VA = "0xE37AB8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600088A")]
		[Address(RVA = "0xE37ABC", Offset = "0xE37ABC", VA = "0xE37ABC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600088C")]
		[Address(RVA = "0xE37EA0", Offset = "0xE37EA0", VA = "0xE37EA0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CustomXRInteractionManager xRInteractionManager;

	[Token(Token = "0x40009CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static XRController instance;

	[Token(Token = "0x40009CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Drumstick leftDrumStick;

	[Token(Token = "0x40009CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Drumstick rightDrumStick;

	[Token(Token = "0x40009D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public DrumStickSpawner leftDrumStickSpawner;

	[Token(Token = "0x40009D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public DrumStickSpawner rightDrumStickSpawner;

	[Token(Token = "0x40009D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<GameObject> xrGrabList;

	[Token(Token = "0x40009D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject cameraOffset;

	[Token(Token = "0x40009D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject leftHandControllerPrefab;

	[Token(Token = "0x40009D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject rightHandControllerPrefab;

	[Token(Token = "0x40009D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GameObject currentLeftHandController;

	[Token(Token = "0x40009D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GameObject currentRightHandController;

	[Token(Token = "0x40009D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public DrumController currentDrums;

	[Token(Token = "0x40009D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject mainCamera;

	[Token(Token = "0x40009DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject persistentCamera;

	[Token(Token = "0x40009DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Transform loadingPosToFollow;

	[Token(Token = "0x40009DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private XRInteractorLineVisual[] LineHands;

	[Token(Token = "0x40009DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private AudioClip perfectSound;

	[Token(Token = "0x40009DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private AudioClip goodSound;

	[Token(Token = "0x40009DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private AudioClip failSound;

	[Token(Token = "0x40009E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject leftRayInteractor;

	[Token(Token = "0x40009E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject rightRayInteractor;

	[Token(Token = "0x40009E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public HandEnum currentRayHand;

	[Token(Token = "0x40009E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float last_change_ray_interactor_timestamp;

	[Token(Token = "0x40009E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public bool isPointer;

	[Token(Token = "0x40009E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float trigger_pressed_timestamp;

	[Token(Token = "0x40009E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject equipDrumsPSPrefab;

	[Token(Token = "0x40009E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private GameObject livPrefab;

	[Token(Token = "0x40009E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private GameObject livManager;

	[Token(Token = "0x40009E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private GameObject InteractionManager;

	[Token(Token = "0x40009EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private GameObject Reticle;

	[Token(Token = "0x40009EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObject[] AuxiliarRecenterImgs;

	[Token(Token = "0x40009EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private GameObject ReticleObj;

	[Token(Token = "0x40009ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public User myUser;

	[Token(Token = "0x40009EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private float cooldownRequest;

	[Token(Token = "0x40009EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public bool entitled;

	[Token(Token = "0x40009F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public VRPlugin devicePlugin;

	[Token(Token = "0x40009F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private Vector3 offsetSteam;

	[Token(Token = "0x40009F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[Header("STEAM_ACTIONS")]
	[SerializeField]
	private GameObject steam_LeftHand;

	[Token(Token = "0x40009F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[SerializeField]
	private GameObject steam_RightHand;

	[Token(Token = "0x40009F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[SerializeField]
	private GameObject steam_ActionsManager;

	[Token(Token = "0x40009F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[Header("ANDROID RENDERERS")]
	public RenderPipelineAsset quality;

	[Token(Token = "0x40009F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public RenderPipelineAsset performance;

	[Token(Token = "0x40009F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public RenderPipelineAsset original;

	[Token(Token = "0x40009F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	[Header("STEAM RENDERERS")]
	public RenderPipelineAsset high;

	[Token(Token = "0x6000841")]
	[Address(RVA = "0xE31684", Offset = "0xE31684", VA = "0xE31684")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000842")]
	[Address(RVA = "0xE31C28", Offset = "0xE31C28", VA = "0xE31C28")]
	private void Start()
	{
	}

	[Token(Token = "0x6000843")]
	[Address(RVA = "0xE32254", Offset = "0xE32254", VA = "0xE32254")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000844")]
	[Address(RVA = "0xE32A6C", Offset = "0xE32A6C", VA = "0xE32A6C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000845")]
	[Address(RVA = "0xE32AE4", Offset = "0xE32AE4", VA = "0xE32AE4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000846")]
	[Address(RVA = "0xE32AE8", Offset = "0xE32AE8", VA = "0xE32AE8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000847")]
	[Address(RVA = "0xE31AB0", Offset = "0xE31AB0", VA = "0xE31AB0")]
	private void LoadXRPrefabs()
	{
	}

	[Token(Token = "0x6000848")]
	[Address(RVA = "0xE31CD4", Offset = "0xE31CD4", VA = "0xE31CD4")]
	private void InitDeviceType()
	{
	}

	[Token(Token = "0x6000849")]
	[Address(RVA = "0xE31D84", Offset = "0xE31D84", VA = "0xE31D84")]
	private void InitDeviceValues()
	{
	}

	[Token(Token = "0x600084A")]
	[Address(RVA = "0xE32BD4", Offset = "0xE32BD4", VA = "0xE32BD4")]
	public bool IsDisplayFrequencyAvaileable(float _desiredFrequency)
	{
		return default(bool);
	}

	[Token(Token = "0x600084B")]
	[Address(RVA = "0xE32CD8", Offset = "0xE32CD8", VA = "0xE32CD8")]
	public void CheckSteamTrackingChangeState()
	{
	}

	[Token(Token = "0x600084C")]
	[Address(RVA = "0xE32CDC", Offset = "0xE32CDC", VA = "0xE32CDC")]
	private void StopXRTracking()
	{
	}

	[Token(Token = "0x600084D")]
	[Address(RVA = "0xE33518", Offset = "0xE33518", VA = "0xE33518")]
	private void EnableXRTracking()
	{
	}

	[Token(Token = "0x600084E")]
	[Address(RVA = "0xE32258", Offset = "0xE32258", VA = "0xE32258")]
	private void checkXROffset()
	{
	}

	[Token(Token = "0x600084F")]
	[Address(RVA = "0xE33D68", Offset = "0xE33D68", VA = "0xE33D68")]
	public bool IsWithLookingBonus()
	{
		return default(bool);
	}

	[Token(Token = "0x6000850")]
	[Address(RVA = "0xE33D70", Offset = "0xE33D70", VA = "0xE33D70")]
	public void AfterEntitled(Message message)
	{
	}

	[Token(Token = "0x6000851")]
	[Address(RVA = "0xE33E78", Offset = "0xE33E78", VA = "0xE33E78")]
	private void GetUserID(Message<User> message)
	{
	}

	[Token(Token = "0x6000852")]
	[Address(RVA = "0xE321E0", Offset = "0xE321E0", VA = "0xE321E0")]
	[IteratorStateMachine(typeof(<WaitForSaveBeenLoaded>d__62))]
	private IEnumerator WaitForSaveBeenLoaded()
	{
		return null;
	}

	[Token(Token = "0x6000853")]
	[Address(RVA = "0xE320DC", Offset = "0xE320DC", VA = "0xE320DC")]
	private void InitHandsAndDrums()
	{
	}

	[Token(Token = "0x6000854")]
	[Address(RVA = "0xE34874", Offset = "0xE34874", VA = "0xE34874")]
	public void ActivateLiv()
	{
	}

	[Token(Token = "0x6000855")]
	[Address(RVA = "0xE349C0", Offset = "0xE349C0", VA = "0xE349C0")]
	public void DesactivateLiv()
	{
	}

	[Token(Token = "0x6000856")]
	[Address(RVA = "0xE32068", Offset = "0xE32068", VA = "0xE32068")]
	[IteratorStateMachine(typeof(<LogInPlatform>d__66))]
	private IEnumerator LogInPlatform()
	{
		return null;
	}

	[Token(Token = "0x6000857")]
	[Address(RVA = "0xE34B34", Offset = "0xE34B34", VA = "0xE34B34")]
	public void OnLoadBeginScene()
	{
	}

	[Token(Token = "0x6000858")]
	[Address(RVA = "0xE35158", Offset = "0xE35158", VA = "0xE35158")]
	public void UnregisterInteractable(GameObject go)
	{
	}

	[Token(Token = "0x6000859")]
	[Address(RVA = "0xE351F4", Offset = "0xE351F4", VA = "0xE351F4")]
	public void OnLoadEndScene()
	{
	}

	[Token(Token = "0x600085A")]
	[Address(RVA = "0xE3556C", Offset = "0xE3556C", VA = "0xE3556C")]
	private void SetRenderAsset()
	{
	}

	[Token(Token = "0x600085B")]
	[Address(RVA = "0xE3440C", Offset = "0xE3440C", VA = "0xE3440C")]
	private void SetVibrationSettings()
	{
	}

	[Token(Token = "0x600085C")]
	[Address(RVA = "0xE3548C", Offset = "0xE3548C", VA = "0xE3548C")]
	private void CheckHandPointer()
	{
	}

	[Token(Token = "0x600085D")]
	[Address(RVA = "0xE34004", Offset = "0xE34004", VA = "0xE34004")]
	private void CreateHands()
	{
	}

	[Token(Token = "0x600085E")]
	[Address(RVA = "0xE2FD14", Offset = "0xE2FD14", VA = "0xE2FD14")]
	public GameObject GetCurrentHand(HandEnum hand)
	{
		return null;
	}

	[Token(Token = "0x600085F")]
	[Address(RVA = "0xE356C8", Offset = "0xE356C8", VA = "0xE356C8")]
	public GameObject GetCurrentCamera()
	{
		return null;
	}

	[Token(Token = "0x6000860")]
	[Address(RVA = "0xE3502C", Offset = "0xE3502C", VA = "0xE3502C")]
	public void ForceDestroyOffScreenIndicators()
	{
	}

	[Token(Token = "0x6000861")]
	[Address(RVA = "0xE35720", Offset = "0xE35720", VA = "0xE35720")]
	public void ForceDestroyOffScreenIndicatorsChilds()
	{
	}

	[Token(Token = "0x6000862")]
	[Address(RVA = "0xE34DF0", Offset = "0xE34DF0", VA = "0xE34DF0")]
	private void DestroyHands()
	{
	}

	[Token(Token = "0x6000863")]
	[Address(RVA = "0xE2FAA4", Offset = "0xE2FAA4", VA = "0xE2FAA4")]
	public void DropAllCurrentDrumSticks(bool hasExplosion)
	{
	}

	[Token(Token = "0x6000864")]
	[Address(RVA = "0xE35AE8", Offset = "0xE35AE8", VA = "0xE35AE8")]
	public void DropDrumStickFail(IconsType iconsType)
	{
	}

	[Token(Token = "0x6000865")]
	[Address(RVA = "0xE35C14", Offset = "0xE35C14", VA = "0xE35C14")]
	public byte GetCurrentDrumStickGrabbedCount()
	{
		return default(byte);
	}

	[Token(Token = "0x6000866")]
	[Address(RVA = "0xE3468C", Offset = "0xE3468C", VA = "0xE3468C")]
	public void InstantiateDrums(uint id)
	{
	}

	[Token(Token = "0x6000867")]
	[Address(RVA = "0xE34F74", Offset = "0xE34F74", VA = "0xE34F74")]
	public void DestroyDrums()
	{
	}

	[Token(Token = "0x6000868")]
	[Address(RVA = "0xE35404", Offset = "0xE35404", VA = "0xE35404")]
	private void CheckBeAHeroMode()
	{
	}

	[Token(Token = "0x6000869")]
	[Address(RVA = "0xE35318", Offset = "0xE35318", VA = "0xE35318")]
	public void ChangeRayRendering()
	{
	}

	[Token(Token = "0x600086A")]
	[Address(RVA = "0xE35CB8", Offset = "0xE35CB8", VA = "0xE35CB8")]
	public void CheckSticksEquipped()
	{
	}

	[Token(Token = "0x600086B")]
	[Address(RVA = "0xE35D5C", Offset = "0xE35D5C", VA = "0xE35D5C")]
	public void PlayPerfectSound()
	{
	}

	[Token(Token = "0x600086C")]
	[Address(RVA = "0xE35E28", Offset = "0xE35E28", VA = "0xE35E28")]
	public void PlayGoodSound()
	{
	}

	[Token(Token = "0x600086D")]
	[Address(RVA = "0xE35F00", Offset = "0xE35F00", VA = "0xE35F00")]
	public void PlayFailSound()
	{
	}

	[Token(Token = "0x600086E")]
	[Address(RVA = "0xE335DC", Offset = "0xE335DC", VA = "0xE335DC")]
	public void ActivateAlwaysLineRender()
	{
	}

	[Token(Token = "0x600086F")]
	[Address(RVA = "0xE32D98", Offset = "0xE32D98", VA = "0xE32D98")]
	public void DeactivateAlwaysLineRender()
	{
	}

	[Token(Token = "0x6000870")]
	[Address(RVA = "0xE35FE8", Offset = "0xE35FE8", VA = "0xE35FE8")]
	public void SetHandIsPointer(bool isPointer)
	{
	}

	[Token(Token = "0x6000871")]
	[Address(RVA = "0xE34318", Offset = "0xE34318", VA = "0xE34318")]
	public void ActivateRayInteractor(HandEnum handEnum)
	{
	}

	[Token(Token = "0x6000872")]
	[Address(RVA = "0xE35FF4", Offset = "0xE35FF4", VA = "0xE35FF4")]
	public void DisableInteractorInteractions()
	{
	}

	[Token(Token = "0x6000873")]
	[Address(RVA = "0xE3631C", Offset = "0xE3631C", VA = "0xE3631C")]
	public void EnableInteractorInteractions()
	{
	}

	[Token(Token = "0x6000874")]
	[Address(RVA = "0xE2FF88", Offset = "0xE2FF88", VA = "0xE2FF88")]
	public void ActiveRenderHandsAndSticks(bool is_active)
	{
	}

	[Token(Token = "0x6000875")]
	[Address(RVA = "0xE36474", Offset = "0xE36474", VA = "0xE36474")]
	private void RecursiveHandRendererEnabler(Transform _transform, bool is_active)
	{
	}

	[Token(Token = "0x6000876")]
	[Address(RVA = "0xE36818", Offset = "0xE36818", VA = "0xE36818")]
	public void InputPrimary2DAxisCallback(Vector2 axis, HandEnum handEnum, float triggerValueInput)
	{
	}

	[Token(Token = "0x6000877")]
	[Address(RVA = "0xE37880", Offset = "0xE37880", VA = "0xE37880")]
	public void ActivateTriggerPressed()
	{
	}

	[Token(Token = "0x6000878")]
	[Address(RVA = "0xE3789C", Offset = "0xE3789C", VA = "0xE3789C")]
	public bool IsTriggerPressed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000879")]
	[Address(RVA = "0xE32AA8", Offset = "0xE32AA8", VA = "0xE32AA8")]
	private void CheckDesactivateButtonsPressed()
	{
	}

	[Token(Token = "0x600087A")]
	[Address(RVA = "0xE2FDD4", Offset = "0xE2FDD4", VA = "0xE2FDD4")]
	public void ReInstantiateHands()
	{
	}

	[Token(Token = "0x600087B")]
	[Address(RVA = "0xE2FB9C", Offset = "0xE2FB9C", VA = "0xE2FB9C")]
	public void ReInstantiateDrumsSticks()
	{
	}

	[Token(Token = "0x600087C")]
	[Address(RVA = "0xE378AC", Offset = "0xE378AC", VA = "0xE378AC")]
	private void InstantiateDrumsticksDelay()
	{
	}

	[Token(Token = "0x600087D")]
	[Address(RVA = "0xE2F954", Offset = "0xE2F954", VA = "0xE2F954")]
	public void ReInstantiateDrums()
	{
	}

	[Token(Token = "0x600087E")]
	[Address(RVA = "0xE37968", Offset = "0xE37968", VA = "0xE37968")]
	public XRController()
	{
	}
}
[Token(Token = "0x200018F")]
public class CreditsScreenController : MonoBehaviour
{
	[Token(Token = "0x4000A01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject creditsText;

	[Token(Token = "0x4000A02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float speedY;

	[Token(Token = "0x4000A03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float endYPos;

	[Token(Token = "0x4000A04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 initPos;

	[Token(Token = "0x4000A05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool initPosSettled;

	[Token(Token = "0x4000A06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private CreditsScreenStatus status;

	[Token(Token = "0x4000A07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float delayPlay;

	[Token(Token = "0x4000A08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TVCinematicFocus tVCinematicFocus;

	[Token(Token = "0x4000A09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool bInBack;

	[Token(Token = "0x4000A0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float frameFactor;

	[Token(Token = "0x600088E")]
	[Address(RVA = "0xE37EE8", Offset = "0xE37EE8", VA = "0xE37EE8")]
	private void Start()
	{
	}

	[Token(Token = "0x600088F")]
	[Address(RVA = "0xE37FDC", Offset = "0xE37FDC", VA = "0xE37FDC")]
	public void Init()
	{
	}

	[Token(Token = "0x6000890")]
	[Address(RVA = "0xE380C4", Offset = "0xE380C4", VA = "0xE380C4")]
	public void Play()
	{
	}

	[Token(Token = "0x6000891")]
	[Address(RVA = "0xE38114", Offset = "0xE38114", VA = "0xE38114")]
	private void PlayInvoke()
	{
	}

	[Token(Token = "0x6000892")]
	[Address(RVA = "0xE38120", Offset = "0xE38120", VA = "0xE38120")]
	private void Update()
	{
	}

	[Token(Token = "0x6000893")]
	[Address(RVA = "0xE38124", Offset = "0xE38124", VA = "0xE38124")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000894")]
	[Address(RVA = "0xE38128", Offset = "0xE38128", VA = "0xE38128")]
	private void UpdatePlay()
	{
	}

	[Token(Token = "0x6000895")]
	[Address(RVA = "0xE3828C", Offset = "0xE3828C", VA = "0xE3828C")]
	public void ButtonBack()
	{
	}

	[Token(Token = "0x6000896")]
	[Address(RVA = "0xE38340", Offset = "0xE38340", VA = "0xE38340")]
	public CreditsScreenController()
	{
	}
}
[Token(Token = "0x2000190")]
public enum CreditsScreenStatus
{
	[Token(Token = "0x4000A0C")]
	NONE,
	[Token(Token = "0x4000A0D")]
	PLAY,
	[Token(Token = "0x4000A0E")]
	STOP,
	[Token(Token = "0x4000A0F")]
	END
}
[Token(Token = "0x2000191")]
public class CSVReader
{
	[Token(Token = "0x4000A10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string SPLIT_RE;

	[Token(Token = "0x4000A11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string LINE_SPLIT_RE;

	[Token(Token = "0x4000A12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static char[] TRIM_CHARS;

	[Token(Token = "0x6000897")]
	[Address(RVA = "0xE38364", Offset = "0xE38364", VA = "0xE38364")]
	public static List<Dictionary<string, object>> Read(string file)
	{
		return null;
	}

	[Token(Token = "0x6000898")]
	[Address(RVA = "0xE38858", Offset = "0xE38858", VA = "0xE38858")]
	public static List<Dictionary<string, object>> ReadFromString(string file)
	{
		return null;
	}

	[Token(Token = "0x6000899")]
	[Address(RVA = "0xE38CC0", Offset = "0xE38CC0", VA = "0xE38CC0")]
	public static List<Dictionary<string, object>> ReadFromFile(UnityEngine.Object file)
	{
		return null;
	}

	[Token(Token = "0x600089A")]
	[Address(RVA = "0xE391A8", Offset = "0xE391A8", VA = "0xE391A8")]
	public static string[,] SplitCsvGrid(string csvText)
	{
		return null;
	}

	[Token(Token = "0x600089B")]
	[Address(RVA = "0xE39450", Offset = "0xE39450", VA = "0xE39450")]
	public static string[] SplitCsvLine(string line)
	{
		return null;
	}

	[Token(Token = "0x600089C")]
	[Address(RVA = "0xE395E0", Offset = "0xE395E0", VA = "0xE395E0")]
	public CSVReader()
	{
	}
}
[Token(Token = "0x2000193")]
public class CustomDeltaTime : MonoBehaviour
{
	[Token(Token = "0x4000A15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float deltaTime;

	[Token(Token = "0x4000A16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float timeStamp;

	[Token(Token = "0x60008A1")]
	[Address(RVA = "0xE39788", Offset = "0xE39788", VA = "0xE39788")]
	private void Start()
	{
	}

	[Token(Token = "0x60008A2")]
	[Address(RVA = "0xE397D8", Offset = "0xE397D8", VA = "0xE397D8")]
	private void Update()
	{
	}

	[Token(Token = "0x60008A3")]
	[Address(RVA = "0xE39840", Offset = "0xE39840", VA = "0xE39840")]
	public CustomDeltaTime()
	{
	}
}
[Token(Token = "0x2000194")]
public class CustomXRInteractionManager : XRInteractionManager
{
	[Token(Token = "0x4000A17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public bool isEnabled;

	[Token(Token = "0x60008A4")]
	[Address(RVA = "0xE39848", Offset = "0xE39848", VA = "0xE39848")]
	private void Start()
	{
	}

	[Token(Token = "0x60008A5")]
	[Address(RVA = "0xE3984C", Offset = "0xE3984C", VA = "0xE3984C", Slot = "6")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60008A6")]
	[Address(RVA = "0xE39860", Offset = "0xE39860", VA = "0xE39860", Slot = "8")]
	protected override void FixedUpdate()
	{
	}

	[Token(Token = "0x60008A7")]
	[Address(RVA = "0xE39874", Offset = "0xE39874", VA = "0xE39874")]
	public CustomXRInteractionManager()
	{
	}
}
[Token(Token = "0x2000195")]
public class DeactivateButtonOnGameplay : MonoBehaviour
{
	[Token(Token = "0x4000A18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Button butt;

	[Token(Token = "0x4000A19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Image img;

	[Token(Token = "0x60008A8")]
	[Address(RVA = "0xE398D4", Offset = "0xE398D4", VA = "0xE398D4")]
	private void Start()
	{
	}

	[Token(Token = "0x60008A9")]
	[Address(RVA = "0xE39994", Offset = "0xE39994", VA = "0xE39994")]
	public DeactivateButtonOnGameplay()
	{
	}
}
[Token(Token = "0x2000196")]
public class DeactivateCallback : MonoBehaviour
{
	[Token(Token = "0x60008AA")]
	[Address(RVA = "0xE3999C", Offset = "0xE3999C", VA = "0xE3999C")]
	public void OnParticleSystemStopped()
	{
	}

	[Token(Token = "0x60008AB")]
	[Address(RVA = "0xE39A88", Offset = "0xE39A88", VA = "0xE39A88")]
	public DeactivateCallback()
	{
	}
}
[Token(Token = "0x2000197")]
public class DebugText : MonoBehaviour
{
	[Token(Token = "0x4000A1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Stick;

	[Token(Token = "0x4000A1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro tmp;

	[Token(Token = "0x4000A1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugText instance;

	[Token(Token = "0x60008AC")]
	[Address(RVA = "0xE39A90", Offset = "0xE39A90", VA = "0xE39A90")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008AD")]
	[Address(RVA = "0xE39B5C", Offset = "0xE39B5C", VA = "0xE39B5C")]
	private void Start()
	{
	}

	[Token(Token = "0x60008AE")]
	[Address(RVA = "0xE39B60", Offset = "0xE39B60", VA = "0xE39B60")]
	private void Update()
	{
	}

	[Token(Token = "0x60008AF")]
	[Address(RVA = "0xE39B64", Offset = "0xE39B64", VA = "0xE39B64")]
	public void PrintText(string text)
	{
	}

	[Token(Token = "0x60008B0")]
	[Address(RVA = "0xE39B88", Offset = "0xE39B88", VA = "0xE39B88")]
	public DebugText()
	{
	}
}
[Token(Token = "0x2000198")]
public class BetweenPunchTrigger : MonoBehaviour
{
	[Token(Token = "0x4000A1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PunchingGlove drumStick;

	[Token(Token = "0x60008B1")]
	[Address(RVA = "0xE39B90", Offset = "0xE39B90", VA = "0xE39B90")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x60008B2")]
	[Address(RVA = "0xE39CDC", Offset = "0xE39CDC", VA = "0xE39CDC")]
	public BetweenPunchTrigger()
	{
	}
}
[Token(Token = "0x2000199")]
public class BetweenStickTrigger : MonoBehaviour
{
	[Token(Token = "0x4000A1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Drumstick drumStick;

	[Token(Token = "0x60008B3")]
	[Address(RVA = "0xE39CE4", Offset = "0xE39CE4", VA = "0xE39CE4")]
	private void Start()
	{
	}

	[Token(Token = "0x60008B4")]
	[Address(RVA = "0xE39CE8", Offset = "0xE39CE8", VA = "0xE39CE8")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x60008B5")]
	[Address(RVA = "0xE39DF0", Offset = "0xE39DF0", VA = "0xE39DF0")]
	public BetweenStickTrigger()
	{
	}
}
[Token(Token = "0x200019A")]
public class DrumController : MonoBehaviour
{
	[Token(Token = "0x200019B")]
	private enum DrumPartsOrder
	{
		[Token(Token = "0x4000A41")]
		LOW_TOM,
		[Token(Token = "0x4000A42")]
		KICK,
		[Token(Token = "0x4000A43")]
		SNARE,
		[Token(Token = "0x4000A44")]
		HIGH_TOM,
		[Token(Token = "0x4000A45")]
		BOMBO,
		[Token(Token = "0x4000A46")]
		BASE_RIDE,
		[Token(Token = "0x4000A47")]
		BASE_CRUSH,
		[Token(Token = "0x4000A48")]
		RIDE,
		[Token(Token = "0x4000A49")]
		CRUSH
	}

	[Token(Token = "0x4000A1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public DrumPart[] drumPartList;

	[Token(Token = "0x4000A20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject tutorial_helper_ps_prefab;

	[Token(Token = "0x4000A21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform tutorial_helper_pos;

	[Token(Token = "0x4000A22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject tutorial_helper_ps_spawned;

	[Token(Token = "0x4000A23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float startSwapRandomDrumsIconTypeTimestamp;

	[Token(Token = "0x4000A24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject[] hitCollPSPrefabList;

	[Token(Token = "0x4000A25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject[] drumsParts;

	[Token(Token = "0x4000A26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject[] crush_rideJoints;

	[Token(Token = "0x4000A27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Quaternion[] crush_rideInitialRotation;

	[Token(Token = "0x4000A28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float[] jointValuesCopy;

	[Token(Token = "0x4000A29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float[] drumsInitialPos;

	[Token(Token = "0x4000A2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float[] crush_rideInitialPos;

	[Token(Token = "0x4000A2B")]
	private const float drumsTopPosMaxOffset = 0.39f;

	[Token(Token = "0x4000A2C")]
	private const float drumsBottomPosMaxOffset = -0.13f;

	[Token(Token = "0x4000A2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float deltaYOffset;

	[Token(Token = "0x4000A2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[Header("Store Info")]
	public Vector3 storePos;

	[Token(Token = "0x4000A2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector3 storeRot;

	[Token(Token = "0x4000A30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public Vector3 storeScale;

	[Token(Token = "0x4000A31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Material storeLockedMT;

	[Token(Token = "0x4000A32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Material settingsMT;

	[Token(Token = "0x4000A33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject base_crush;

	[Token(Token = "0x4000A34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject base_ride;

	[Token(Token = "0x4000A35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject base_crush_store;

	[Token(Token = "0x4000A36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject base_ride_store;

	[Token(Token = "0x4000A37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[Header("Drums Parents")]
	public GameObject high_tom;

	[Token(Token = "0x4000A38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject low_tom;

	[Token(Token = "0x4000A39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject crush;

	[Token(Token = "0x4000A3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject ride;

	[Token(Token = "0x4000A3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject kick;

	[Token(Token = "0x4000A3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObject snare;

	[Token(Token = "0x4000A3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Vector2 min_drum_offset;

	[Token(Token = "0x4000A3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Vector2 max_drum_offset;

	[Token(Token = "0x4000A3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private List<KeyValuePair<MeshRenderer, Material[]>> tempDrumMaterials;

	[Token(Token = "0x60008B6")]
	[Address(RVA = "0xE39DF8", Offset = "0xE39DF8", VA = "0xE39DF8")]
	private void Start()
	{
	}

	[Token(Token = "0x60008B7")]
	[Address(RVA = "0xE3B93C", Offset = "0xE3B93C", VA = "0xE3B93C")]
	private void Update()
	{
	}

	[Token(Token = "0x60008B8")]
	[Address(RVA = "0xE2EA78", Offset = "0xE2EA78", VA = "0xE2EA78")]
	public void InitForStore(Transform parent, bool is_unlocked)
	{
	}

	[Token(Token = "0x60008B9")]
	[Address(RVA = "0xE3BE6C", Offset = "0xE3BE6C", VA = "0xE3BE6C")]
	public void SetAllChildrenSettingsRecursive(Transform parent)
	{
	}

	[Token(Token = "0x60008BA")]
	[Address(RVA = "0xE3C2E8", Offset = "0xE3C2E8", VA = "0xE3C2E8")]
	public void ResetAllChildrenSettings()
	{
	}

	[Token(Token = "0x60008BB")]
	[Address(RVA = "0xE3BA3C", Offset = "0xE3BA3C", VA = "0xE3BA3C")]
	private void SeAllChildrenStoreRecursive(Transform parent, bool is_unlocked)
	{
	}

	[Token(Token = "0x60008BC")]
	[Address(RVA = "0xE3C4D0", Offset = "0xE3C4D0", VA = "0xE3C4D0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60008BD")]
	[Address(RVA = "0xE3C63C", Offset = "0xE3C63C", VA = "0xE3C63C")]
	public void CheckStartSwapRandomDrumsIconType()
	{
	}

	[Token(Token = "0x60008BE")]
	[Address(RVA = "0xE3C794", Offset = "0xE3C794", VA = "0xE3C794")]
	public void UpdateSwapRandomDrumsIconType()
	{
	}

	[Token(Token = "0x60008BF")]
	[Address(RVA = "0xE3C858", Offset = "0xE3C858", VA = "0xE3C858")]
	private void SwapRandomDrumsIconType()
	{
	}

	[Token(Token = "0x60008C0")]
	[Address(RVA = "0xE3C7D8", Offset = "0xE3C7D8", VA = "0xE3C7D8")]
	private bool StartSwapRandomDrumsIconType()
	{
		return default(bool);
	}

	[Token(Token = "0x60008C1")]
	[Address(RVA = "0xE3CB4C", Offset = "0xE3CB4C", VA = "0xE3CB4C")]
	public void ActivateTutorialHelper(bool active)
	{
	}

	[Token(Token = "0x60008C2")]
	[Address(RVA = "0xE3CD7C", Offset = "0xE3CD7C", VA = "0xE3CD7C")]
	public void FailParticles(IconsType _fail)
	{
	}

	[Token(Token = "0x60008C3")]
	[Address(RVA = "0xE3B52C", Offset = "0xE3B52C", VA = "0xE3B52C")]
	public void DestroyParticles()
	{
	}

	[Token(Token = "0x60008C4")]
	[Address(RVA = "0xE3CE28", Offset = "0xE3CE28", VA = "0xE3CE28")]
	public GameObject GetHitCollPSPrefabList(IconsType iconsType)
	{
		return null;
	}

	[Token(Token = "0x60008C5")]
	[Address(RVA = "0xE36E1C", Offset = "0xE36E1C", VA = "0xE36E1C")]
	public void IncreaseAllDrumsHeight(float axisValue)
	{
	}

	[Token(Token = "0x60008C6")]
	[Address(RVA = "0xE36E8C", Offset = "0xE36E8C", VA = "0xE36E8C")]
	public void DecreaseAllDrumsHeight(float axisValue)
	{
	}

	[Token(Token = "0x60008C7")]
	[Address(RVA = "0xE36EFC", Offset = "0xE36EFC", VA = "0xE36EFC")]
	public void IncreaseDrumHeight(float axisValue, IconsType _drumType)
	{
	}

	[Token(Token = "0x60008C8")]
	[Address(RVA = "0xE3710C", Offset = "0xE3710C", VA = "0xE3710C")]
	public void DecreaseDrumHeight(float axisValue, IconsType _drumType)
	{
	}

	[Token(Token = "0x60008C9")]
	[Address(RVA = "0xE3CF0C", Offset = "0xE3CF0C", VA = "0xE3CF0C")]
	private float CalculateDrumsHeightIncrease(float _offset, float _axisValue)
	{
		return default(float);
	}

	[Token(Token = "0x60008CA")]
	[Address(RVA = "0xE3CF28", Offset = "0xE3CF28", VA = "0xE3CF28")]
	private float CalculateDrumsHeightDecrease(float _offset, float _axisValue)
	{
		return default(float);
	}

	[Token(Token = "0x60008CB")]
	[Address(RVA = "0xE3CF44", Offset = "0xE3CF44", VA = "0xE3CF44")]
	public void SetAllDrumsHeight(float drumsPosOffset)
	{
	}

	[Token(Token = "0x60008CC")]
	[Address(RVA = "0xE3A7C0", Offset = "0xE3A7C0", VA = "0xE3A7C0")]
	public void Set_Snare_Height(float _offset)
	{
	}

	[Token(Token = "0x60008CD")]
	[Address(RVA = "0xE3ABC8", Offset = "0xE3ABC8", VA = "0xE3ABC8")]
	public void Set_Kick_Height(float _offset)
	{
	}

	[Token(Token = "0x60008CE")]
	[Address(RVA = "0xE3A8EC", Offset = "0xE3A8EC", VA = "0xE3A8EC")]
	public void Set_Crush_Height(float _offset)
	{
	}

	[Token(Token = "0x60008CF")]
	[Address(RVA = "0xE3A4D4", Offset = "0xE3A4D4", VA = "0xE3A4D4")]
	public void Set_Ride_Height(float _offset)
	{
	}

	[Token(Token = "0x60008D0")]
	[Address(RVA = "0xE3A28C", Offset = "0xE3A28C", VA = "0xE3A28C")]
	public void Set_Low_Tom_Height(float _offset)
	{
	}

	[Token(Token = "0x60008D1")]
	[Address(RVA = "0xE3A3A8", Offset = "0xE3A3A8", VA = "0xE3A3A8")]
	public void Set_High_Tom_Height(float _offset)
	{
	}

	[Token(Token = "0x60008D2")]
	[Address(RVA = "0xE3B2AC", Offset = "0xE3B2AC", VA = "0xE3B2AC")]
	private void CopyInitialJointsValue()
	{
	}

	[Token(Token = "0x60008D3")]
	[Address(RVA = "0xE3CF9C", Offset = "0xE3CF9C", VA = "0xE3CF9C")]
	public void FreezeRideJoints()
	{
	}

	[Token(Token = "0x60008D4")]
	[Address(RVA = "0xE3D1A4", Offset = "0xE3D1A4", VA = "0xE3D1A4")]
	public void FreezeCrushJoints()
	{
	}

	[Token(Token = "0x60008D5")]
	[Address(RVA = "0xE3B58C", Offset = "0xE3B58C", VA = "0xE3B58C")]
	public void ResetJoints(int idx)
	{
	}

	[Token(Token = "0x60008D6")]
	[Address(RVA = "0xE3D398", Offset = "0xE3D398", VA = "0xE3D398")]
	private Vector2 CalculateDrumsOffset(GameObject _DrumToCheck, Vector2 _axisValue)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60008D7")]
	[Address(RVA = "0xE3731C", Offset = "0xE3731C", VA = "0xE3731C")]
	public void MoveAllDrumsPosition(Vector2 axisValue)
	{
	}

	[Token(Token = "0x60008D8")]
	[Address(RVA = "0xE375B0", Offset = "0xE375B0", VA = "0xE375B0")]
	public void Move_Drum_Position(Vector2 axisValue, IconsType _drumType)
	{
	}

	[Token(Token = "0x60008D9")]
	[Address(RVA = "0xE3AFD0", Offset = "0xE3AFD0", VA = "0xE3AFD0")]
	public void Set_Snare_Position(Vector2 _offset)
	{
	}

	[Token(Token = "0x60008DA")]
	[Address(RVA = "0xE3B1B8", Offset = "0xE3B1B8", VA = "0xE3B1B8")]
	public void Set_Kick_Position(Vector2 _offset)
	{
	}

	[Token(Token = "0x60008DB")]
	[Address(RVA = "0xE3B0C4", Offset = "0xE3B0C4", VA = "0xE3B0C4")]
	public void Set_Crush_Position(Vector2 _offset)
	{
	}

	[Token(Token = "0x60008DC")]
	[Address(RVA = "0xE3AEDC", Offset = "0xE3AEDC", VA = "0xE3AEDC")]
	public void Set_Ride_Position(Vector2 _offset)
	{
	}

	[Token(Token = "0x60008DD")]
	[Address(RVA = "0xE3ACF4", Offset = "0xE3ACF4", VA = "0xE3ACF4")]
	public void Set_Low_Tom_Position(Vector2 _offset)
	{
	}

	[Token(Token = "0x60008DE")]
	[Address(RVA = "0xE3ADE8", Offset = "0xE3ADE8", VA = "0xE3ADE8")]
	public void Set_High_Tom_Position(Vector2 _offset)
	{
	}

	[Token(Token = "0x60008DF")]
	[Address(RVA = "0xE3D4B4", Offset = "0xE3D4B4", VA = "0xE3D4B4")]
	public DrumController()
	{
	}
}
[Token(Token = "0x200019C")]
public class DrumPart : MonoBehaviour
{
	[Token(Token = "0x4000A4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Plane mPlane;

	[Token(Token = "0x4000A4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip soundClip;

	[Token(Token = "0x4000A4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip chargedHitClip;

	[Token(Token = "0x4000A4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material baseMaterial;

	[Token(Token = "0x4000A4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material hitMaterial;

	[Token(Token = "0x4000A4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<Material> allBaseMaterialList;

	[Token(Token = "0x4000A50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<Material> allHitMaterialList;

	[Token(Token = "0x4000A51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject hitParticlePrefab;

	[Token(Token = "0x4000A52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject auxHitParticlePrefab;

	[Token(Token = "0x4000A53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject hitChargedPrefab;

	[Token(Token = "0x4000A54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject hitChargedOnCollisionPrefab;

	[Token(Token = "0x4000A55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private GameObject hitOnCollPosPSPrefab;

	[Token(Token = "0x4000A56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject hitFailPrefab;

	[Token(Token = "0x4000A57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Transform hitParticleSpawnTrans;

	[Token(Token = "0x4000A58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public MeshRenderer drumsMesh;

	[Token(Token = "0x4000A59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[HideInInspector]
	public bool isOnTriggerStay;

	[Token(Token = "0x4000A5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
	[HideInInspector]
	public bool isOnTriggerStayLeft;

	[Token(Token = "0x4000A5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
	[HideInInspector]
	public bool isOnTriggerStayRight;

	[Token(Token = "0x4000A5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public IconsType iconsType;

	[Token(Token = "0x4000A5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float left_hit_last_timestamp;

	[Token(Token = "0x4000A5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float right_hit_last_timestamp;

	[Token(Token = "0x4000A5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float no_hands_hit_last_timestamp;

	[Token(Token = "0x4000A60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public float left_big_collision_enter_last_timestamp;

	[Token(Token = "0x4000A61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float right_big_collision_enter_last_timestamp;

	[Token(Token = "0x4000A62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public float left_big_collision_stay_last_timestamp;

	[Token(Token = "0x4000A63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float right_big_collision_stay_last_timestamp;

	[Token(Token = "0x4000A64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject goDotweening;

	[Token(Token = "0x4000A65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject goWithJoint;

	[Token(Token = "0x4000A66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Vector3 forceDotween;

	[Token(Token = "0x4000A67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public MeshCollider PSCollider;

	[Token(Token = "0x4000A68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float toBaseMaterialTimestamp;

	[Token(Token = "0x4000A69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private bool hasDestroyedStick;

	[Token(Token = "0x4000A6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private GameObject SwapWarning;

	[Token(Token = "0x4000A6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private GameObject SwapWarningGo;

	[Token(Token = "0x4000A6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool swapped;

	[Token(Token = "0x4000A6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private float initialVolume;

	[Token(Token = "0x4000A6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private float hapticAmplitude;

	[Token(Token = "0x4000A6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private byte maxHitParticleAmmount;

	[Token(Token = "0x4000A70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private List<ParticleSystem> hitParticleList;

	[Token(Token = "0x4000A71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private byte maxHitChargedAmmount;

	[Token(Token = "0x4000A72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private List<ParticleSystem> hitChargedList;

	[Token(Token = "0x4000A73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private byte maxhitChargedOnCollisionAmmount;

	[Token(Token = "0x4000A74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private List<ParticleSystem> hitChargedOnCollisionList;

	[Token(Token = "0x4000A75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private byte maxHitOnCollPosPSAmmount;

	[Token(Token = "0x4000A76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private List<ParticleSystem> hitOnCollPosPSList;

	[Token(Token = "0x4000A77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private byte maxFailAmmount;

	[Token(Token = "0x4000A78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private List<ParticleSystem> failList;

	[Token(Token = "0x60008E0")]
	[Address(RVA = "0xE3D554", Offset = "0xE3D554", VA = "0xE3D554")]
	private void Start()
	{
	}

	[Token(Token = "0x60008E1")]
	[Address(RVA = "0xE3DBC4", Offset = "0xE3DBC4", VA = "0xE3DBC4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60008E2")]
	[Address(RVA = "0xE3DDE8", Offset = "0xE3DDE8", VA = "0xE3DDE8")]
	public void ActivateWarning()
	{
	}

	[Token(Token = "0x60008E3")]
	[Address(RVA = "0xE3E074", Offset = "0xE3E074", VA = "0xE3E074")]
	public void StopWarning()
	{
	}

	[Token(Token = "0x60008E4")]
	[Address(RVA = "0xE3DBC8", Offset = "0xE3DBC8", VA = "0xE3DBC8")]
	private void InitParticleLists()
	{
	}

	[Token(Token = "0x60008E5")]
	[Address(RVA = "0xE3E14C", Offset = "0xE3E14C", VA = "0xE3E14C")]
	public void destroyParticlePool()
	{
	}

	[Token(Token = "0x60008E6")]
	[Address(RVA = "0xE3E714", Offset = "0xE3E714", VA = "0xE3E714")]
	private void Update()
	{
	}

	[Token(Token = "0x60008E7")]
	[Address(RVA = "0xE3D7CC", Offset = "0xE3D7CC", VA = "0xE3D7CC")]
	public void SetMaterial(IconsType iconsType)
	{
	}

	[Token(Token = "0x60008E8")]
	[Address(RVA = "0xE3E760", Offset = "0xE3E760", VA = "0xE3E760")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60008E9")]
	[Address(RVA = "0xE3E7B8", Offset = "0xE3E7B8", VA = "0xE3E7B8")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60008EA")]
	[Address(RVA = "0xE3E7BC", Offset = "0xE3E7BC", VA = "0xE3E7BC")]
	private void SetHitMaterial()
	{
	}

	[Token(Token = "0x60008EB")]
	[Address(RVA = "0xE3DB00", Offset = "0xE3DB00", VA = "0xE3DB00")]
	public void SetBaseMaterial()
	{
	}

	[Token(Token = "0x60008EC")]
	[Address(RVA = "0xE3E848", Offset = "0xE3E848", VA = "0xE3E848")]
	private void ActivateHitParticleWithDrumStick(ushort spint_count, Drumstick drumstick)
	{
	}

	[Token(Token = "0x60008ED")]
	[Address(RVA = "0xE3FAB4", Offset = "0xE3FAB4", VA = "0xE3FAB4")]
	private void ActivateHitParticleWithPunching()
	{
	}

	[Token(Token = "0x60008EE")]
	[Address(RVA = "0xE3E860", Offset = "0xE3E860", VA = "0xE3E860")]
	public void ActivateHitParticle(Drumstick drumstick)
	{
	}

	[Token(Token = "0x60008EF")]
	[Address(RVA = "0xE3FC7C", Offset = "0xE3FC7C", VA = "0xE3FC7C")]
	public void ActivateFailParticle()
	{
	}

	[Token(Token = "0x60008F0")]
	[Address(RVA = "0xE3F2A0", Offset = "0xE3F2A0", VA = "0xE3F2A0")]
	public void ActivateChargedParticle(Drumstick drumstick)
	{
	}

	[Token(Token = "0x60008F1")]
	[Address(RVA = "0xE3E718", Offset = "0xE3E718", VA = "0xE3E718")]
	public void CheckToBaseMaterial()
	{
	}

	[Token(Token = "0x60008F2")]
	[Address(RVA = "0xE40078", Offset = "0xE40078", VA = "0xE40078")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60008F3")]
	[Address(RVA = "0xE4007C", Offset = "0xE4007C", VA = "0xE4007C")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x60008F4")]
	[Address(RVA = "0xE41954", Offset = "0xE41954", VA = "0xE41954")]
	private void DoHitFeedback()
	{
	}

	[Token(Token = "0x60008F5")]
	[Address(RVA = "0xE41828", Offset = "0xE41828", VA = "0xE41828")]
	private void AddForceToJoin(Vector3 position)
	{
	}

	[Token(Token = "0x60008F6")]
	[Address(RVA = "0xE41FF8", Offset = "0xE41FF8", VA = "0xE41FF8")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60008F7")]
	[Address(RVA = "0xE42158", Offset = "0xE42158", VA = "0xE42158")]
	public void Swap()
	{
	}

	[Token(Token = "0x60008F8")]
	[Address(RVA = "0xE42168", Offset = "0xE42168", VA = "0xE42168")]
	public DrumPart()
	{
	}
}
[Token(Token = "0x200019D")]
public enum HandEnum
{
	[Token(Token = "0x4000A7A")]
	NONE,
	[Token(Token = "0x4000A7B")]
	LEFT,
	[Token(Token = "0x4000A7C")]
	RIGHT
}
[Token(Token = "0x200019E")]
public enum StickSpawnEnum
{
	[Token(Token = "0x4000A7E")]
	NONE,
	[Token(Token = "0x4000A7F")]
	LEFT,
	[Token(Token = "0x4000A80")]
	RIGHT
}
[Token(Token = "0x200019F")]
public class Drumstick : XRGrabInteractable
{
	[Token(Token = "0x20001A0")]
	[CompilerGenerated]
	private sealed class <DoJumpForce>d__94 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Drumstick <>4__this;

		[Token(Token = "0x4000ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 _collisionPos;

		[Token(Token = "0x1700009A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600092B")]
			[Address(RVA = "0xE47E18", Offset = "0xE47E18", VA = "0xE47E18", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600092D")]
			[Address(RVA = "0xE47E60", Offset = "0xE47E60", VA = "0xE47E60", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000928")]
		[Address(RVA = "0xE45FE4", Offset = "0xE45FE4", VA = "0xE45FE4")]
		[DebuggerHidden]
		public <DoJumpForce>d__94(int <>1__state)
		{
		}

		[Token(Token = "0x6000929")]
		[Address(RVA = "0xE47C10", Offset = "0xE47C10", VA = "0xE47C10", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600092A")]
		[Address(RVA = "0xE47C14", Offset = "0xE47C14", VA = "0xE47C14", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600092C")]
		[Address(RVA = "0xE47E20", Offset = "0xE47E20", VA = "0xE47E20", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x254")]
	public uint id;

	[Token(Token = "0x4000A82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	[HideInInspector]
	public HandEnum current_hand;

	[Token(Token = "0x4000A83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
	[HideInInspector]
	public HandEnum last_hand;

	[Token(Token = "0x4000A84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	public DrumStickSpawner spawner;

	[Token(Token = "0x4000A85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	[HideInInspector]
	public bool is_following_spawner;

	[Token(Token = "0x4000A86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26C")]
	[HideInInspector]
	public StickSpawnEnum spawn_type;

	[Token(Token = "0x4000A87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	[HideInInspector]
	public bool is_destroy_activated;

	[Token(Token = "0x4000A88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x274")]
	private float autoDestroyTimestamp;

	[Token(Token = "0x4000A89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	private float lifeSpan;

	[Token(Token = "0x4000A8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	public AudioClip sticks_sound;

	[Token(Token = "0x4000A8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	public AudioClip fail_sound;

	[Token(Token = "0x4000A8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	[HideInInspector]
	public float last_sticks_sound_timestamp;

	[Token(Token = "0x4000A8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	public GameObject hitDrumsCollider;

	[Token(Token = "0x4000A8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	private bool is_jumped;

	[Token(Token = "0x4000A8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A4")]
	[HideInInspector]
	public float lastjumpTimeStamp;

	[Token(Token = "0x4000A90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	public Transform pivotForLeft;

	[Token(Token = "0x4000A91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	public Transform pivotForRight;

	[Token(Token = "0x4000A92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	public Transform startLinePoint;

	[Token(Token = "0x4000A93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	public Transform endLinePoint;

	[Token(Token = "0x4000A94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	private Vector3 initialAttachLocalPosForRight;

	[Token(Token = "0x4000A95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D4")]
	private Quaternion initialAttachLocalRotForRight;

	[Token(Token = "0x4000A96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E4")]
	private Vector3 initialAttachLocalPosForLeft;

	[Token(Token = "0x4000A97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	private Quaternion initialAttachLocalRotForLeft;

	[Token(Token = "0x4000A98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
	private float torqueTimestamp;

	[Token(Token = "0x4000A99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
	[HideInInspector]
	public List<DrumPartCollision> drumPartCollisionsList;

	[Token(Token = "0x4000A9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	public List<GameObject> spinPSList;

	[Token(Token = "0x4000A9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
	private Quaternion spin_old_rotation;

	[Token(Token = "0x4000A9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
	[HideInInspector]
	public ushort spin_count;

	[Token(Token = "0x4000A9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32C")]
	private float spin_angle;

	[Token(Token = "0x4000A9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
	private bool is_on_floor;

	[Token(Token = "0x4000A9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
	public GameObject sticksCollisionPsPrefab;

	[Token(Token = "0x4000AA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
	public GameObject sticksExplosionPsPrefab;

	[Token(Token = "0x4000AA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
	public List<Transform> pointList;

	[Token(Token = "0x4000AA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
	public bool canUpdate;

	[Token(Token = "0x4000AA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x351")]
	public bool isSelectableEnabled;

	[Token(Token = "0x4000AA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x354")]
	[HideInInspector]
	public IconsType lastHitIconsType;

	[Token(Token = "0x4000AA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
	[HideInInspector]
	public float lastHitIconsTimestamp;

	[Token(Token = "0x4000AA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
	[SerializeField]
	private GameObject PosToSpawn;

	[Token(Token = "0x4000AA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
	private float dropFailTimestamp;

	[Token(Token = "0x4000AA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x36C")]
	private bool dropFailForceAdded;

	[Token(Token = "0x4000AA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x36D")]
	private bool is_final_destroying;

	[Token(Token = "0x4000AAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
	private Vector3 torqueForce;

	[Token(Token = "0x4000AAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x37C")]
	private bool torqueForceOnce;

	[Token(Token = "0x4000AAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x37D")]
	private bool jumpForceOnce;

	[Token(Token = "0x4000AAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
	public HitBetweenStickCollider hitBetweenStickCollider;

	[Token(Token = "0x4000AAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
	public AudioClip[] throw_sounds_list;

	[Token(Token = "0x4000AAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
	private bool throwUpLockXZ;

	[Token(Token = "0x4000AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
	private IXRHoverInteractor hoveredInteractor;

	[Token(Token = "0x4000AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
	private bool forceSpawned;

	[Token(Token = "0x4000AB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A4")]
	[Header("Store Info")]
	public Vector3 leftStorePos;

	[Token(Token = "0x4000AB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
	public Vector3 leftStoreRot;

	[Token(Token = "0x4000AB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3BC")]
	public Vector3 leftStoreScale;

	[Token(Token = "0x4000AB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C8")]
	public Vector3 rightStorePos;

	[Token(Token = "0x4000AB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D4")]
	public Vector3 rightStoreRot;

	[Token(Token = "0x4000AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E0")]
	public Vector3 rightStoreScale;

	[Token(Token = "0x4000AB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F0")]
	public Material storeLockedMT;

	[Token(Token = "0x4000AB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F8")]
	private float initialVolume;

	[Token(Token = "0x4000ABA")]
	private const int custom_k_ThrowSmoothingFrameCount = 20;

	[Token(Token = "0x4000ABB")]
	private const float custom_k_DefaultThrowSmoothingDuration = 0.25f;

	[Token(Token = "0x4000ABC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3FC")]
	private int custom_m_ThrowSmoothingCurrentFrame;

	[Token(Token = "0x4000ABD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x400")]
	private readonly float[] custom_m_ThrowSmoothingFrameTimes;

	[Token(Token = "0x4000ABE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x408")]
	private readonly Vector3[] custom_m_ThrowSmoothingVelocityFrames;

	[Token(Token = "0x4000ABF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x410")]
	private readonly Vector3[] custom_m_ThrowSmoothingAngularVelocityFrames;

	[Token(Token = "0x4000AC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x418")]
	private Vector3 custom_m_DetachVelocity;

	[Token(Token = "0x4000AC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x424")]
	private Vector3 custom_m_DetachAngularVelocity;

	[Token(Token = "0x4000AC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x430")]
	private Vector3 custom_m_LastPosition;

	[Token(Token = "0x4000AC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x43C")]
	private Quaternion custom_m_LastRotation;

	[Token(Token = "0x4000AC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44C")]
	private float custom_m_ThrowSmoothingDuration;

	[Token(Token = "0x4000AC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x450")]
	private AnimationCurve custom_m_ThrowSmoothingCurve;

	[Token(Token = "0x4000AC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x458")]
	private float custom_m_ThrowVelocityScale;

	[Token(Token = "0x4000AC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45C")]
	private float custom_m_ThrowAngularVelocityScale;

	[Token(Token = "0x60008F9")]
	[Address(RVA = "0xE421A4", Offset = "0xE421A4", VA = "0xE421A4")]
	private void Start()
	{
	}

	[Token(Token = "0x60008FA")]
	[Address(RVA = "0xE421B4", Offset = "0xE421B4", VA = "0xE421B4")]
	public void SetInitialValues()
	{
	}

	[Token(Token = "0x60008FB")]
	[Address(RVA = "0xE424F8", Offset = "0xE424F8", VA = "0xE424F8")]
	public void InitForStore(Transform parent, bool is_left, bool is_unlocked)
	{
	}

	[Token(Token = "0x60008FC")]
	[Address(RVA = "0xE429DC", Offset = "0xE429DC", VA = "0xE429DC")]
	private void SeAllChildrenStoreRecursive(Transform parent, bool is_unlocked)
	{
	}

	[Token(Token = "0x60008FD")]
	[Address(RVA = "0xE42D9C", Offset = "0xE42D9C", VA = "0xE42D9C")]
	private void Update()
	{
	}

	[Token(Token = "0x60008FE")]
	[Address(RVA = "0xE433B0", Offset = "0xE433B0", VA = "0xE433B0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60008FF")]
	[Address(RVA = "0xE443F8", Offset = "0xE443F8", VA = "0xE443F8", Slot = "60")]
	protected override void OnHoverEntering(HoverEnterEventArgs interactor)
	{
	}

	[Token(Token = "0x6000900")]
	[Address(RVA = "0xE44598", Offset = "0xE44598", VA = "0xE44598", Slot = "63")]
	protected override void OnHoverExited(HoverExitEventArgs interactor)
	{
	}

	[Token(Token = "0x6000901")]
	[Address(RVA = "0xE4468C", Offset = "0xE4468C", VA = "0xE4468C", Slot = "64")]
	protected override void OnSelectEntering(SelectEnterEventArgs interactor)
	{
	}

	[Token(Token = "0x6000902")]
	[Address(RVA = "0xE44914", Offset = "0xE44914", VA = "0xE44914", Slot = "65")]
	protected override void OnSelectEntered(SelectEnterEventArgs interactor)
	{
	}

	[Token(Token = "0x6000903")]
	[Address(RVA = "0xE42418", Offset = "0xE42418", VA = "0xE42418")]
	private void SetLargeHitCollider(BoxCollider _collider)
	{
	}

	[Token(Token = "0x6000904")]
	[Address(RVA = "0xE4502C", Offset = "0xE4502C", VA = "0xE4502C")]
	private void SmoothVelocityStart(IXRInteractor interactor)
	{
	}

	[Token(Token = "0x6000905")]
	[Address(RVA = "0xE4515C", Offset = "0xE4515C", VA = "0xE4515C")]
	private void StickGrabbed()
	{
	}

	[Token(Token = "0x6000906")]
	[Address(RVA = "0xE43510", Offset = "0xE43510", VA = "0xE43510")]
	public void FollowSpawn()
	{
	}

	[Token(Token = "0x6000907")]
	[Address(RVA = "0xE4545C", Offset = "0xE4545C", VA = "0xE4545C", Slot = "67")]
	protected override void OnSelectExited(SelectExitEventArgs interactor)
	{
	}

	[Token(Token = "0x6000908")]
	[Address(RVA = "0xE42DD4", Offset = "0xE42DD4", VA = "0xE42DD4")]
	private void SmoothVelocityUpdate()
	{
	}

	[Token(Token = "0x6000909")]
	[Address(RVA = "0xE45CC0", Offset = "0xE45CC0", VA = "0xE45CC0")]
	private Vector3 GetSmoothedVelocityValue(Vector3[] velocityFrames)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600090A")]
	[Address(RVA = "0xE458FC", Offset = "0xE458FC", VA = "0xE458FC")]
	private void SmoothVelocityEnd()
	{
	}

	[Token(Token = "0x600090B")]
	[Address(RVA = "0xE45EC4", Offset = "0xE45EC4", VA = "0xE45EC4", Slot = "89")]
	protected override void Detach()
	{
	}

	[Token(Token = "0x600090C")]
	[Address(RVA = "0xE45CBC", Offset = "0xE45CBC", VA = "0xE45CBC")]
	public void DoThrowSound()
	{
	}

	[Token(Token = "0x600090D")]
	[Address(RVA = "0xE45974", Offset = "0xE45974", VA = "0xE45974")]
	public void DoTorque()
	{
	}

	[Token(Token = "0x600090E")]
	[Address(RVA = "0xE4375C", Offset = "0xE4375C", VA = "0xE4375C")]
	private void TorqueStep()
	{
	}

	[Token(Token = "0x600090F")]
	[Address(RVA = "0xE41F10", Offset = "0xE41F10", VA = "0xE41F10")]
	public void DoJump()
	{
	}

	[Token(Token = "0x6000910")]
	[Address(RVA = "0xE45F4C", Offset = "0xE45F4C", VA = "0xE45F4C")]
	[IteratorStateMachine(typeof(<DoJumpForce>d__94))]
	private IEnumerator DoJumpForce(Vector3 _collisionPos)
	{
		return null;
	}

	[Token(Token = "0x6000911")]
	[Address(RVA = "0xE43894", Offset = "0xE43894", VA = "0xE43894")]
	private void JumpStep()
	{
	}

	[Token(Token = "0x6000912")]
	[Address(RVA = "0xE43620", Offset = "0xE43620", VA = "0xE43620")]
	public void CheckJumpOnExited()
	{
	}

	[Token(Token = "0x6000913")]
	[Address(RVA = "0xE4600C", Offset = "0xE4600C", VA = "0xE4600C")]
	public void OnCollisionEnterHitBetweenStickCollider(GameObject other, Vector3 hitPos)
	{
	}

	[Token(Token = "0x6000914")]
	[Address(RVA = "0xE46FB0", Offset = "0xE46FB0", VA = "0xE46FB0")]
	public void OnTriggerStayHitBetweenStickTrigger(Collider other)
	{
	}

	[Token(Token = "0x6000915")]
	[Address(RVA = "0xE47250", Offset = "0xE47250", VA = "0xE47250")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000916")]
	[Address(RVA = "0xE43D40", Offset = "0xE43D40", VA = "0xE43D40")]
	private void AutoDestroy()
	{
	}

	[Token(Token = "0x6000917")]
	[Address(RVA = "0xE46F68", Offset = "0xE46F68", VA = "0xE46F68")]
	public bool IsAutoDestroyNear()
	{
		return default(bool);
	}

	[Token(Token = "0x6000918")]
	[Address(RVA = "0xE47328", Offset = "0xE47328", VA = "0xE47328", Slot = "54")]
	public override bool IsSelectableBy(IXRSelectInteractor interactor)
	{
		return default(bool);
	}

	[Token(Token = "0x6000919")]
	[Address(RVA = "0xE41D18", Offset = "0xE41D18", VA = "0xE41D18")]
	public void AddDrumPartCollision(IconsType iconsType)
	{
	}

	[Token(Token = "0x600091A")]
	[Address(RVA = "0xE41764", Offset = "0xE41764", VA = "0xE41764")]
	public bool HasActiveDrumPartCollision()
	{
		return default(bool);
	}

	[Token(Token = "0x600091B")]
	[Address(RVA = "0xE4756C", Offset = "0xE4756C", VA = "0xE4756C")]
	private int GetDrumPartCollisionPos(IconsType iconsType)
	{
		return default(int);
	}

	[Token(Token = "0x600091C")]
	[Address(RVA = "0xE43B70", Offset = "0xE43B70", VA = "0xE43B70")]
	private void CountSpins()
	{
	}

	[Token(Token = "0x600091D")]
	[Address(RVA = "0xE43208", Offset = "0xE43208", VA = "0xE43208")]
	public void CheckSpinPS()
	{
	}

	[Token(Token = "0x600091E")]
	[Address(RVA = "0xE41A34", Offset = "0xE41A34", VA = "0xE41A34")]
	public void ResetSpin()
	{
	}

	[Token(Token = "0x600091F")]
	[Address(RVA = "0xE3FABC", Offset = "0xE3FABC", VA = "0xE3FABC")]
	public Vector3 GetNearestPoint(Plane plane, MeshCollider col)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000920")]
	[Address(RVA = "0xE47660", Offset = "0xE47660", VA = "0xE47660")]
	public void DropGrab(bool hasExplosion)
	{
	}

	[Token(Token = "0x6000921")]
	[Address(RVA = "0xE47948", Offset = "0xE47948", VA = "0xE47948")]
	public void DestroySelf()
	{
	}

	[Token(Token = "0x6000922")]
	[Address(RVA = "0xE41A40", Offset = "0xE41A40", VA = "0xE41A40")]
	public void DropGrabOnFail()
	{
	}

	[Token(Token = "0x6000923")]
	[Address(RVA = "0xE47A90", Offset = "0xE47A90", VA = "0xE47A90")]
	public void ActivateStickExplosion()
	{
	}

	[Token(Token = "0x6000924")]
	[Address(RVA = "0xE41A14", Offset = "0xE41A14", VA = "0xE41A14")]
	public void OnDrumHit(IconsType lastHitIconsType)
	{
	}

	[Token(Token = "0x6000925")]
	[Address(RVA = "0xE41754", Offset = "0xE41754", VA = "0xE41754")]
	public bool IsInDropFail()
	{
		return default(bool);
	}

	[Token(Token = "0x6000926")]
	[Address(RVA = "0xE43978", Offset = "0xE43978", VA = "0xE43978")]
	public void DropGrabOnFailStep()
	{
	}

	[Token(Token = "0x6000927")]
	[Address(RVA = "0xE47B10", Offset = "0xE47B10", VA = "0xE47B10")]
	public Drumstick()
	{
	}
}
[Token(Token = "0x20001A2")]
public class DrumPartCollision
{
	[Token(Token = "0x4000ACD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IconsType iconsType;

	[Token(Token = "0x4000ACE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float last_timestamp;

	[Token(Token = "0x4000ACF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 pos;

	[Token(Token = "0x6000930")]
	[Address(RVA = "0xE47610", Offset = "0xE47610", VA = "0xE47610")]
	public DrumPartCollision(IconsType iconsType, float last_timestamp, Vector3 pos)
	{
	}
}
[Token(Token = "0x20001A3")]
public class DrumStickSpawner : MonoBehaviour
{
	[Token(Token = "0x4000AD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static uint id_autoincrement_count;

	[Token(Token = "0x4000AD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject drumStickPrefab;

	[Token(Token = "0x4000AD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject currentSpawnedStick;

	[Token(Token = "0x4000AD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public StickSpawnEnum spawn_type;

	[Token(Token = "0x4000AD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float lastSpawnTimeStamp;

	[Token(Token = "0x4000AD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool hasToSpawn;

	[Token(Token = "0x4000AD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip grab_audio;

	[Token(Token = "0x4000AD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float initialVolume;

	[Token(Token = "0x6000931")]
	[Address(RVA = "0xE47E78", Offset = "0xE47E78", VA = "0xE47E78")]
	private void Start()
	{
	}

	[Token(Token = "0x6000932")]
	[Address(RVA = "0xE47ED8", Offset = "0xE47ED8", VA = "0xE47ED8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000933")]
	[Address(RVA = "0xE47EDC", Offset = "0xE47EDC", VA = "0xE47EDC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000934")]
	[Address(RVA = "0xE48270", Offset = "0xE48270", VA = "0xE48270")]
	public void LoadDrumsStickPrefab()
	{
	}

	[Token(Token = "0x6000935")]
	[Address(RVA = "0xE48378", Offset = "0xE48378", VA = "0xE48378")]
	public void ReLoadDrumsStickPrefab()
	{
	}

	[Token(Token = "0x6000936")]
	[Address(RVA = "0xE47EE0", Offset = "0xE47EE0", VA = "0xE47EE0")]
	public void Spawn()
	{
	}

	[Token(Token = "0x6000937")]
	[Address(RVA = "0xE483A0", Offset = "0xE483A0", VA = "0xE483A0")]
	public void SetHasToSpawn(bool _state)
	{
	}

	[Token(Token = "0x6000938")]
	[Address(RVA = "0xE45264", Offset = "0xE45264", VA = "0xE45264")]
	public void StickGrabbed(uint id)
	{
	}

	[Token(Token = "0x6000939")]
	[Address(RVA = "0xE483AC", Offset = "0xE483AC", VA = "0xE483AC")]
	public void Despawn()
	{
	}

	[Token(Token = "0x600093A")]
	[Address(RVA = "0xE485AC", Offset = "0xE485AC", VA = "0xE485AC")]
	public void DespawnDelay()
	{
	}

	[Token(Token = "0x600093B")]
	[Address(RVA = "0xE48798", Offset = "0xE48798", VA = "0xE48798")]
	private void DestroyDelay()
	{
	}

	[Token(Token = "0x600093C")]
	[Address(RVA = "0xE48804", Offset = "0xE48804", VA = "0xE48804")]
	public DrumStickSpawner()
	{
	}
}
[Token(Token = "0x20001A4")]
public class Hand : MonoBehaviour
{
	[Token(Token = "0x4000AD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Store Info")]
	public Vector3 storePos;

	[Token(Token = "0x4000AD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 storeRot;

	[Token(Token = "0x4000ADA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 storeScale;

	[Token(Token = "0x4000ADB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public HandStoreAnimationType handStoreAnimationType;

	[Token(Token = "0x4000ADC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material storeLockedMT;

	[Token(Token = "0x4000ADD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SkinnedMeshRenderer meshRenderer;

	[Token(Token = "0x4000ADE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool is_store_activated;

	[Token(Token = "0x4000ADF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float last_init_for_store_timestamp;

	[Token(Token = "0x600093D")]
	[Address(RVA = "0xE48814", Offset = "0xE48814", VA = "0xE48814")]
	private void Start()
	{
	}

	[Token(Token = "0x600093E")]
	[Address(RVA = "0xE48818", Offset = "0xE48818", VA = "0xE48818")]
	public void InitForStore(Transform parent, bool is_unlocked)
	{
	}

	[Token(Token = "0x600093F")]
	[Address(RVA = "0xE48938", Offset = "0xE48938", VA = "0xE48938")]
	private void SeAllChildrenStoreRecursive(Transform parent, bool is_unlocked)
	{
	}

	[Token(Token = "0x6000940")]
	[Address(RVA = "0xE48D68", Offset = "0xE48D68", VA = "0xE48D68")]
	public void SetStoreAnimation()
	{
	}

	[Token(Token = "0x6000941")]
	[Address(RVA = "0xE49064", Offset = "0xE49064", VA = "0xE49064")]
	private void Update()
	{
	}

	[Token(Token = "0x6000942")]
	[Address(RVA = "0xE49068", Offset = "0xE49068", VA = "0xE49068")]
	public Hand()
	{
	}
}
[Token(Token = "0x20001A5")]
public enum HandStoreAnimationType
{
	[Token(Token = "0x4000AE1")]
	NONE,
	[Token(Token = "0x4000AE2")]
	GRAB,
	[Token(Token = "0x4000AE3")]
	ROCK,
	[Token(Token = "0x4000AE4")]
	OPEN,
	[Token(Token = "0x4000AE5")]
	POINTER,
	[Token(Token = "0x4000AE6")]
	PUNCH
}
[Token(Token = "0x20001A6")]
public class PunchingGlove : MonoBehaviour
{
	[Token(Token = "0x4000AE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HandEnum current_hand;

	[Token(Token = "0x4000AE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public HandEnum last_hand;

	[Token(Token = "0x4000AE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<DrumPartCollision> drumPartCollisionsList;

	[Token(Token = "0x4000AEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public IconsType lastHitIconsType;

	[Token(Token = "0x4000AEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[HideInInspector]
	public float lastHitIconsTimestamp;

	[Token(Token = "0x4000AEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform startLinePoint;

	[Token(Token = "0x4000AED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform endLinePoint;

	[Token(Token = "0x4000AEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public float last_sticks_sound_timestamp;

	[Token(Token = "0x4000AEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioClip sticks_sound;

	[Token(Token = "0x4000AF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject sticksCollisionPsPrefab;

	[Token(Token = "0x4000AF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject hitDrumsCollider;

	[Token(Token = "0x6000943")]
	[Address(RVA = "0xE49070", Offset = "0xE49070", VA = "0xE49070")]
	private void Start()
	{
	}

	[Token(Token = "0x6000944")]
	[Address(RVA = "0xE491F4", Offset = "0xE491F4", VA = "0xE491F4")]
	public void OnCollisionEnterHitBetweenPunchingCollider(GameObject other, Vector3 hitPos)
	{
	}

	[Token(Token = "0x6000945")]
	[Address(RVA = "0xE4982C", Offset = "0xE4982C", VA = "0xE4982C")]
	public void OnTriggerStayHitBetweenPunchingTrigger(Collider other)
	{
	}

	[Token(Token = "0x6000946")]
	[Address(RVA = "0xE499CC", Offset = "0xE499CC", VA = "0xE499CC")]
	public void AddDrumPartCollision(IconsType iconsType)
	{
	}

	[Token(Token = "0x6000947")]
	[Address(RVA = "0xE490F8", Offset = "0xE490F8", VA = "0xE490F8")]
	public void SetPunchingGloveModeActivated(bool is_punching_glove_mode_activated)
	{
	}

	[Token(Token = "0x6000948")]
	[Address(RVA = "0xE49C54", Offset = "0xE49C54", VA = "0xE49C54")]
	public bool HasActiveDrumPartCollision()
	{
		return default(bool);
	}

	[Token(Token = "0x6000949")]
	[Address(RVA = "0xE49BB0", Offset = "0xE49BB0", VA = "0xE49BB0")]
	private int GetDrumPartCollisionPos(IconsType iconsType)
	{
		return default(int);
	}

	[Token(Token = "0x600094A")]
	[Address(RVA = "0xE41FD8", Offset = "0xE41FD8", VA = "0xE41FD8")]
	public void OnDrumHit(IconsType lastHitIconsType)
	{
	}

	[Token(Token = "0x600094B")]
	[Address(RVA = "0xE49D18", Offset = "0xE49D18", VA = "0xE49D18")]
	public PunchingGlove()
	{
	}
}
[Token(Token = "0x20001A7")]
public class DualsenseGamePad : MonoBehaviour
{
	[Token(Token = "0x20001A8")]
	public struct PS4GamePad
	{
		[Token(Token = "0x4000B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector2 thumbstick_left;

		[Token(Token = "0x4000B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 thumbstick_right;

		[Token(Token = "0x4000B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool cross;

		[Token(Token = "0x4000B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool circle;

		[Token(Token = "0x4000B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool triangle;

		[Token(Token = "0x4000B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		public bool square;

		[Token(Token = "0x4000B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool dpad_down;

		[Token(Token = "0x4000B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		public bool dpad_right;

		[Token(Token = "0x4000B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		public bool dpad_up;

		[Token(Token = "0x4000B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
		public bool dpad_left;

		[Token(Token = "0x4000B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool L1;

		[Token(Token = "0x4000B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool L2;

		[Token(Token = "0x4000B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool L3;

		[Token(Token = "0x4000B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public bool R1;

		[Token(Token = "0x4000B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool R2;

		[Token(Token = "0x4000B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		public bool R3;

		[Token(Token = "0x4000B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
		public bool options;

		[Token(Token = "0x4000B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
		public bool touchpad;
	}

	[Token(Token = "0x4000AF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DualsenseGamePad activeGamePad;

	[NonSerialized]
	[Token(Token = "0x4000AF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int playerId;

	[Token(Token = "0x4000AF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool enableInput;

	[Token(Token = "0x4000AF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static float timeout;

	[Token(Token = "0x4000AF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public PS4GamePad previousFrame;

	[Token(Token = "0x4000AF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public PS4GamePad currentFrame;

	[Token(Token = "0x4000AF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int stickID;

	[Token(Token = "0x4000AF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool hasSetupGamepad;

	[Token(Token = "0x4000AFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private KeyCode optionsBtnKeyCode;

	[Token(Token = "0x4000AFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private string leftStickHorizontalAxis;

	[Token(Token = "0x4000AFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private string leftStickVerticalAxis;

	[Token(Token = "0x4000AFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private string rightStickHorizontalAxis;

	[Token(Token = "0x4000AFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private string rightStickVerticalAxis;

	[Token(Token = "0x4000AFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private KeyCode L1BtnKeyCode;

	[Token(Token = "0x4000B00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private KeyCode R1BtnKeyCode;

	[Token(Token = "0x4000B01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private string L2Axis;

	[Token(Token = "0x4000B02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private string R2Axis;

	[Token(Token = "0x4000B03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private KeyCode L3BtnKeyCode;

	[Token(Token = "0x4000B04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private KeyCode R3BtnKeyCode;

	[Token(Token = "0x4000B05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private KeyCode CrossBtnKeyCode;

	[Token(Token = "0x4000B06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private KeyCode CircleBtnKeyCode;

	[Token(Token = "0x4000B07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private KeyCode SquareBtnKeyCode;

	[Token(Token = "0x4000B08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private KeyCode TriangleBtnKeyCode;

	[Token(Token = "0x4000B09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private string DPadRightAxis;

	[Token(Token = "0x4000B0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private string DPadLeftAxis;

	[Token(Token = "0x4000B0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private string DPadUpAxis;

	[Token(Token = "0x4000B0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private string DPadDownAxis;

	[Token(Token = "0x1700009C")]
	public static bool IsInputEnabled
	{
		[Token(Token = "0x600094D")]
		[Address(RVA = "0xE49DC4", Offset = "0xE49DC4", VA = "0xE49DC4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700009D")]
	public bool IsSquarePressed
	{
		[Token(Token = "0x600094E")]
		[Address(RVA = "0xE49E1C", Offset = "0xE49E1C", VA = "0xE49E1C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700009E")]
	public bool IsCirclePressed
	{
		[Token(Token = "0x600094F")]
		[Address(RVA = "0xE49E3C", Offset = "0xE49E3C", VA = "0xE49E3C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700009F")]
	public bool IsTrianglePressed
	{
		[Token(Token = "0x6000950")]
		[Address(RVA = "0xE49E5C", Offset = "0xE49E5C", VA = "0xE49E5C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000A0")]
	public bool IsCrossPressed
	{
		[Token(Token = "0x6000951")]
		[Address(RVA = "0xE49E7C", Offset = "0xE49E7C", VA = "0xE49E7C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000A1")]
	public bool IsDpadDownPressed
	{
		[Token(Token = "0x6000952")]
		[Address(RVA = "0xE49E9C", Offset = "0xE49E9C", VA = "0xE49E9C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000A2")]
	public bool IsDpadRightPressed
	{
		[Token(Token = "0x6000953")]
		[Address(RVA = "0xE49EBC", Offset = "0xE49EBC", VA = "0xE49EBC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000A3")]
	public bool IsDpadUpPressed
	{
		[Token(Token = "0x6000954")]
		[Address(RVA = "0xE49EDC", Offset = "0xE49EDC", VA = "0xE49EDC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000A4")]
	public bool IsDpadLeftPressed
	{
		[Token(Token = "0x6000955")]
		[Address(RVA = "0xE49EFC", Offset = "0xE49EFC", VA = "0xE49EFC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000A5")]
	public bool IsR3Pressed
	{
		[Token(Token = "0x6000956")]
		[Address(RVA = "0xE49F1C", Offset = "0xE49F1C", VA = "0xE49F1C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000A6")]
	public Vector2 GetThumbstickLeft
	{
		[Token(Token = "0x6000957")]
		[Address(RVA = "0xE49F3C", Offset = "0xE49F3C", VA = "0xE49F3C")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x170000A7")]
	public Vector2 GetThumbstickRight
	{
		[Token(Token = "0x6000958")]
		[Address(RVA = "0xE49F44", Offset = "0xE49F44", VA = "0xE49F44")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x170000A8")]
	private bool AnyInput
	{
		[Token(Token = "0x6000959")]
		[Address(RVA = "0xE49F4C", Offset = "0xE49F4C", VA = "0xE49F4C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000A9")]
	public bool IsConnected
	{
		[Token(Token = "0x600095A")]
		[Address(RVA = "0xE49FF8", Offset = "0xE49FF8", VA = "0xE49FF8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600094C")]
	[Address(RVA = "0xE49D20", Offset = "0xE49D20", VA = "0xE49D20")]
	public static void EnableInput(bool enable)
	{
	}

	[Token(Token = "0x600095B")]
	[Address(RVA = "0xE4A000", Offset = "0xE4A000", VA = "0xE4A000")]
	private void Start()
	{
	}

	[Token(Token = "0x600095C")]
	[Address(RVA = "0xE4A860", Offset = "0xE4A860", VA = "0xE4A860")]
	private void Update()
	{
	}

	[Token(Token = "0x600095D")]
	[Address(RVA = "0xE4A854", Offset = "0xE4A854", VA = "0xE4A854")]
	public void ToggleGamePad(bool active)
	{
	}

	[Token(Token = "0x600095E")]
	[Address(RVA = "0xE4A94C", Offset = "0xE4A94C", VA = "0xE4A94C")]
	private void Thumbsticks()
	{
	}

	[Token(Token = "0x600095F")]
	[Address(RVA = "0xE4A9D0", Offset = "0xE4A9D0", VA = "0xE4A9D0")]
	private void InputButtons()
	{
	}

	[Token(Token = "0x6000960")]
	[Address(RVA = "0xE4AA3C", Offset = "0xE4AA3C", VA = "0xE4AA3C")]
	private void DPadButtons()
	{
	}

	[Token(Token = "0x6000961")]
	[Address(RVA = "0xE4AAAC", Offset = "0xE4AAAC", VA = "0xE4AAAC")]
	private void TriggerShoulderButtons()
	{
	}

	[Token(Token = "0x6000962")]
	[Address(RVA = "0xE4AB18", Offset = "0xE4AB18", VA = "0xE4AB18")]
	public DualsenseGamePad()
	{
	}
}
[Token(Token = "0x20001A9")]
public static class ExtensionMethods
{
	[Token(Token = "0x6000964")]
	public static T Clone<T>(this T source)
	{
		return (T)null;
	}
}
[Token(Token = "0x20001AA")]
public static class RendererExtensions
{
	[Token(Token = "0x6000965")]
	[Address(RVA = "0xE4AB94", Offset = "0xE4AB94", VA = "0xE4AB94")]
	private static int CountCornersVisibleFrom(this RectTransform rectTransform, Camera camera)
	{
		return default(int);
	}

	[Token(Token = "0x6000966")]
	[Address(RVA = "0xE4ACB8", Offset = "0xE4ACB8", VA = "0xE4ACB8")]
	public static bool IsFullyVisibleFrom(this RectTransform rectTransform, Camera camera)
	{
		return default(bool);
	}

	[Token(Token = "0x6000967")]
	[Address(RVA = "0xE4ACD0", Offset = "0xE4ACD0", VA = "0xE4ACD0")]
	public static bool IsVisibleFrom(this RectTransform rectTransform, Camera camera)
	{
		return default(bool);
	}
}
[Token(Token = "0x20001AB")]
public static class RectTransformExtensions
{
	[Token(Token = "0x6000968")]
	[Address(RVA = "0xE4ACE8", Offset = "0xE4ACE8", VA = "0xE4ACE8")]
	public static bool WorldSpaceOverlaps(this RectTransform overlaping, RectTransform overlaped)
	{
		return default(bool);
	}
}
[Token(Token = "0x20001AC")]
public class ScreenFadeFeature : ScriptableRendererFeature
{
	[Token(Token = "0x4000B1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FadeSettings settings;

	[Token(Token = "0x4000B20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ScreenFadePass renderPass;

	[Token(Token = "0x6000969")]
	[Address(RVA = "0xE4ADFC", Offset = "0xE4ADFC", VA = "0xE4ADFC", Slot = "5")]
	public override void Create()
	{
	}

	[Token(Token = "0x600096A")]
	[Address(RVA = "0xE4AEAC", Offset = "0xE4AEAC", VA = "0xE4AEAC", Slot = "7")]
	public override void AddRenderPasses(ScriptableRenderer renderer, ref RenderingData renderingData)
	{
	}

	[Token(Token = "0x600096B")]
	[Address(RVA = "0xE4AF74", Offset = "0xE4AF74", VA = "0xE4AF74")]
	public ScreenFadeFeature()
	{
	}
}
[Serializable]
[Token(Token = "0x20001AD")]
public class FadeSettings
{
	[Token(Token = "0x4000B21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool isEnabled;

	[Token(Token = "0x4000B22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string profilerTag;

	[Token(Token = "0x4000B23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RenderPassEvent renderPassEvent;

	[Token(Token = "0x4000B24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material material;

	[NonSerialized]
	[Token(Token = "0x4000B25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material runTimeMaterial;

	[Token(Token = "0x600096C")]
	[Address(RVA = "0xE4AEF8", Offset = "0xE4AEF8", VA = "0xE4AEF8")]
	public bool AreValid()
	{
		return default(bool);
	}

	[Token(Token = "0x600096D")]
	[Address(RVA = "0xE4AF7C", Offset = "0xE4AF7C", VA = "0xE4AF7C")]
	public FadeSettings()
	{
	}
}
[Token(Token = "0x20001AE")]
public class ScreenFadePass : ScriptableRenderPass
{
	[Token(Token = "0x4000B26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private FadeSettings settings;

	[Token(Token = "0x600096E")]
	[Address(RVA = "0xE4AE68", Offset = "0xE4AE68", VA = "0xE4AE68")]
	public ScreenFadePass(FadeSettings newSettings)
	{
	}

	[Token(Token = "0x600096F")]
	[Address(RVA = "0xE4AFE4", Offset = "0xE4AFE4", VA = "0xE4AFE4", Slot = "9")]
	public override void Execute(ScriptableRenderContext context, ref RenderingData renderingData)
	{
	}
}
[Token(Token = "0x20001AF")]
public class ShowDistance : MonoBehaviour
{
	[Token(Token = "0x4000B27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Goal;

	[Token(Token = "0x4000B28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject EasyGoal;

	[Token(Token = "0x6000970")]
	[Address(RVA = "0xE4B12C", Offset = "0xE4B12C", VA = "0xE4B12C")]
	public ShowDistance()
	{
	}
}
[Token(Token = "0x20001B0")]
public class ShowLineToNextObject : MonoBehaviour
{
	[Token(Token = "0x4000B29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Target;

	[Token(Token = "0x6000971")]
	[Address(RVA = "0xE4B134", Offset = "0xE4B134", VA = "0xE4B134")]
	public ShowLineToNextObject()
	{
	}
}
[Token(Token = "0x20001B1")]
public class HandPressence : MonoBehaviour
{
	[Token(Token = "0x20001B2")]
	[CompilerGenerated]
	private sealed class <RegisterUnregisteredInteractableAfterBackButtonPressed>d__37 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandPressence <>4__this;

		[Token(Token = "0x4000B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public IXRSelectInteractable selectInteractable;

		[Token(Token = "0x170000AA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000984")]
			[Address(RVA = "0xE4CB60", Offset = "0xE4CB60", VA = "0xE4CB60", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000986")]
			[Address(RVA = "0xE4CBA8", Offset = "0xE4CBA8", VA = "0xE4CBA8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000981")]
		[Address(RVA = "0xE4C9AC", Offset = "0xE4C9AC", VA = "0xE4C9AC")]
		[DebuggerHidden]
		public <RegisterUnregisteredInteractableAfterBackButtonPressed>d__37(int <>1__state)
		{
		}

		[Token(Token = "0x6000982")]
		[Address(RVA = "0xE4CA1C", Offset = "0xE4CA1C", VA = "0xE4CA1C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000983")]
		[Address(RVA = "0xE4CA20", Offset = "0xE4CA20", VA = "0xE4CA20", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000985")]
		[Address(RVA = "0xE4CB68", Offset = "0xE4CB68", VA = "0xE4CB68", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public InputDeviceCharacteristics controllerCharacteristics;

	[Token(Token = "0x4000B2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject handModelPrefab;

	[Token(Token = "0x4000B2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public HandEnum handEnum;

	[Token(Token = "0x4000B2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Image autograbProgressbar;

	[Token(Token = "0x4000B2E")]
	private const float grabThreshold = 0.1f;

	[Token(Token = "0x4000B2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private UnityEngine.XR.InputDevice targetDevice;

	[Token(Token = "0x4000B30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject spawnedController;

	[Token(Token = "0x4000B31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject spawnedHandModel;

	[Token(Token = "0x4000B32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Animator handAnimator;

	[Token(Token = "0x4000B33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool hasStickGrabbed;

	[Token(Token = "0x4000B34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool old_is_menu_button_pressed;

	[Token(Token = "0x4000B35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject equip_hand_ps;

	[Token(Token = "0x4000B36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool firstGrab;

	[Token(Token = "0x4000B37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float triggerValue;

	[Token(Token = "0x4000B38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float grabValue;

	[Token(Token = "0x4000B39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private bool lastStickyState;

	[Token(Token = "0x4000B3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	private bool firstStickyState;

	[Token(Token = "0x4000B3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float firstStickyStateTimeStamp;

	[Token(Token = "0x4000B3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private int stickyClickCount;

	[Token(Token = "0x4000B3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float autograbPressBtnTimeStamp;

	[Token(Token = "0x4000B3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool autograbSpawnedByPressingBtn;

	[Token(Token = "0x4000B3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float autograbLastGrabTimeStamp;

	[Token(Token = "0x4000B40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private bool debugBackPerformed;

	[Token(Token = "0x4000B41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private IXRSelectInteractable lastBackButtonPressed;

	[Token(Token = "0x4000B42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float lastBackTimeStamp;

	[Token(Token = "0x6000972")]
	[Address(RVA = "0xE4B13C", Offset = "0xE4B13C", VA = "0xE4B13C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000973")]
	[Address(RVA = "0xE4B198", Offset = "0xE4B198", VA = "0xE4B198")]
	public void InitDeviceModels()
	{
	}

	[Token(Token = "0x6000974")]
	[Address(RVA = "0xE4B47C", Offset = "0xE4B47C", VA = "0xE4B47C")]
	private void InstantiateHand(UnityEngine.XR.InputDevice targetDevice)
	{
	}

	[Token(Token = "0x6000975")]
	[Address(RVA = "0xE4B788", Offset = "0xE4B788", VA = "0xE4B788")]
	public void ReInstantiateHand()
	{
	}

	[Token(Token = "0x6000976")]
	[Address(RVA = "0xE4B8EC", Offset = "0xE4B8EC", VA = "0xE4B8EC")]
	private void UpdateHandAnimation()
	{
	}

	[Token(Token = "0x6000977")]
	[Address(RVA = "0xE4BB04", Offset = "0xE4BB04", VA = "0xE4BB04")]
	private void CheckInputs()
	{
	}

	[Token(Token = "0x6000978")]
	[Address(RVA = "0xE4C108", Offset = "0xE4C108", VA = "0xE4C108")]
	private void HandleInteractionAction(bool pressed, ref InteractionState interactionState)
	{
	}

	[Token(Token = "0x6000979")]
	[Address(RVA = "0xE4C630", Offset = "0xE4C630", VA = "0xE4C630")]
	private void CheckStickySystem()
	{
	}

	[Token(Token = "0x600097A")]
	[Address(RVA = "0xE4C750", Offset = "0xE4C750", VA = "0xE4C750")]
	private void CheckInvertedSystem()
	{
	}

	[Token(Token = "0x600097B")]
	[Address(RVA = "0xE4C134", Offset = "0xE4C134", VA = "0xE4C134")]
	private void UpdateAutograb()
	{
	}

	[Token(Token = "0x600097C")]
	[Address(RVA = "0xE4C82C", Offset = "0xE4C82C", VA = "0xE4C82C")]
	public void ResetAutograbTimeStamp()
	{
	}

	[Token(Token = "0x600097D")]
	[Address(RVA = "0xE4C8CC", Offset = "0xE4C8CC", VA = "0xE4C8CC")]
	private void UpdateRecenterVFX()
	{
	}

	[Token(Token = "0x600097E")]
	[Address(RVA = "0xE4C91C", Offset = "0xE4C91C", VA = "0xE4C91C")]
	[IteratorStateMachine(typeof(<RegisterUnregisteredInteractableAfterBackButtonPressed>d__37))]
	private IEnumerator RegisterUnregisteredInteractableAfterBackButtonPressed(IXRSelectInteractable selectInteractable)
	{
		return null;
	}

	[Token(Token = "0x600097F")]
	[Address(RVA = "0xE4C9D4", Offset = "0xE4C9D4", VA = "0xE4C9D4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000980")]
	[Address(RVA = "0xE4CA14", Offset = "0xE4CA14", VA = "0xE4CA14")]
	public HandPressence()
	{
	}
}
[Token(Token = "0x20001B3")]
public class HitBetweenPunchCollider : MonoBehaviour
{
	[Token(Token = "0x4000B47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PunchingGlove drumStick;

	[Token(Token = "0x6000987")]
	[Address(RVA = "0xE4CBB0", Offset = "0xE4CBB0", VA = "0xE4CBB0")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000988")]
	[Address(RVA = "0xE4CD84", Offset = "0xE4CD84", VA = "0xE4CD84")]
	public HitBetweenPunchCollider()
	{
	}
}
[Token(Token = "0x20001B4")]
public class HitBetweenStickCollider : MonoBehaviour
{
	[Token(Token = "0x4000B48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Drumstick drumStick;

	[Token(Token = "0x4000B49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 initBoxColliderSixe;

	[Token(Token = "0x6000989")]
	[Address(RVA = "0xE4CD8C", Offset = "0xE4CD8C", VA = "0xE4CD8C")]
	private void Start()
	{
	}

	[Token(Token = "0x600098A")]
	[Address(RVA = "0xE4CE58", Offset = "0xE4CE58", VA = "0xE4CE58")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x600098B")]
	[Address(RVA = "0xE4CFE0", Offset = "0xE4CFE0", VA = "0xE4CFE0")]
	public HitBetweenStickCollider()
	{
	}
}
[Token(Token = "0x20001B5")]
public class IconEnemy : MonoBehaviour
{
	[Token(Token = "0x4000B4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject iconPlane;

	[Token(Token = "0x4000B4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material[] icons_MT_list;

	[Token(Token = "0x4000B4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material[] icons_activated_MT;

	[Token(Token = "0x4000B4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IconsType iconsType;

	[Token(Token = "0x4000B4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool done;

	[Token(Token = "0x600098C")]
	[Address(RVA = "0xE4CFE8", Offset = "0xE4CFE8", VA = "0xE4CFE8")]
	public void SetIcon(IconsType icon)
	{
	}

	[Token(Token = "0x600098D")]
	[Address(RVA = "0xE4D0C4", Offset = "0xE4D0C4", VA = "0xE4D0C4")]
	public void ActivateIcon()
	{
	}

	[Token(Token = "0x600098E")]
	[Address(RVA = "0xE4D18C", Offset = "0xE4D18C", VA = "0xE4D18C")]
	public void DesactivateIcon()
	{
	}

	[Token(Token = "0x600098F")]
	[Address(RVA = "0xE4D254", Offset = "0xE4D254", VA = "0xE4D254")]
	public IconEnemy()
	{
	}
}
[Token(Token = "0x20001B6")]
public enum IconsType
{
	[Token(Token = "0x4000B50")]
	NONE,
	[Token(Token = "0x4000B51")]
	SNARE,
	[Token(Token = "0x4000B52")]
	KICK,
	[Token(Token = "0x4000B53")]
	HIGH_TOM,
	[Token(Token = "0x4000B54")]
	LOW_TOM,
	[Token(Token = "0x4000B55")]
	CRUSH,
	[Token(Token = "0x4000B56")]
	RIDE
}
[Token(Token = "0x20001B7")]
public class LocalizationService : MonoBehaviour
{
	[Token(Token = "0x4000B57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LocalizationService Instance;

	[Token(Token = "0x4000B58")]
	private const string DefaultLocalizationName = "English";

	[Token(Token = "0x4000B59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string LocalizationPath;

	[Token(Token = "0x4000B5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Action OnChangeLocalization;

	[Token(Token = "0x4000B5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static string _localization;

	[Token(Token = "0x4000B5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<string, string> localizationLibrary;

	[Token(Token = "0x170000AC")]
	public static string LocalizationFilePath
	{
		[Token(Token = "0x6000990")]
		[Address(RVA = "0xE4D25C", Offset = "0xE4D25C", VA = "0xE4D25C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000AD")]
	public string Localization
	{
		[Token(Token = "0x6000991")]
		[Address(RVA = "0xE4D2B8", Offset = "0xE4D2B8", VA = "0xE4D2B8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000992")]
		[Address(RVA = "0xE4D310", Offset = "0xE4D310", VA = "0xE4D310")]
		set
		{
		}
	}

	[Token(Token = "0x6000993")]
	[Address(RVA = "0xE4D64C", Offset = "0xE4D64C", VA = "0xE4D64C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000994")]
	[Address(RVA = "0xE4D798", Offset = "0xE4D798", VA = "0xE4D798")]
	private void Initialize()
	{
	}

	[Token(Token = "0x6000995")]
	[Address(RVA = "0xE4D83C", Offset = "0xE4D83C", VA = "0xE4D83C")]
	public string GetLocale()
	{
		return null;
	}

	[Token(Token = "0x6000996")]
	[Address(RVA = "0xE4DD10", Offset = "0xE4DD10", VA = "0xE4DD10")]
	public string GetLanguage(string locale)
	{
		return null;
	}

	[Token(Token = "0x6000997")]
	[Address(RVA = "0xE4E490", Offset = "0xE4E490", VA = "0xE4E490")]
	private static Dictionary<string, string> ParseLocalizeFile(string[,] grid)
	{
		return null;
	}

	[Token(Token = "0x6000998")]
	[Address(RVA = "0xE4E710", Offset = "0xE4E710", VA = "0xE4E710")]
	public string GetTextByKey(string key)
	{
		return null;
	}

	[Token(Token = "0x6000999")]
	[Address(RVA = "0xE4E780", Offset = "0xE4E780", VA = "0xE4E780")]
	public string GetTextByKeyWithLocalize(string key, string localize)
	{
		return null;
	}

	[Token(Token = "0x600099A")]
	[Address(RVA = "0xE4D828", Offset = "0xE4D828", VA = "0xE4D828")]
	public string GetLocalization()
	{
		return null;
	}

	[Token(Token = "0x600099B")]
	[Address(RVA = "0xE4E85C", Offset = "0xE4E85C", VA = "0xE4E85C")]
	public string[] GetLocalizations()
	{
		return null;
	}

	[Token(Token = "0x600099C")]
	[Address(RVA = "0xE4D3BC", Offset = "0xE4D3BC", VA = "0xE4D3BC")]
	public Dictionary<string, string> LoadLocalizeFileHelper()
	{
		return null;
	}

	[Token(Token = "0x600099D")]
	[Address(RVA = "0xE4EA6C", Offset = "0xE4EA6C", VA = "0xE4EA6C")]
	private void LoadDefault()
	{
	}

	[Token(Token = "0x600099E")]
	[Address(RVA = "0xE4EAB4", Offset = "0xE4EAB4", VA = "0xE4EAB4")]
	public static string[] GetLocalizationKeys()
	{
		return null;
	}

	[Token(Token = "0x600099F")]
	[Address(RVA = "0xE4ECD0", Offset = "0xE4ECD0", VA = "0xE4ECD0")]
	public LocalizationService()
	{
	}
}
[Token(Token = "0x20001B8")]
public class LocalizationTextLoader : MonoBehaviour
{
	[Token(Token = "0x4000B5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string key;

	[Token(Token = "0x4000B5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextTypeEnum textType;

	[Token(Token = "0x60009A1")]
	[Address(RVA = "0xE4ED68", Offset = "0xE4ED68", VA = "0xE4ED68")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009A2")]
	[Address(RVA = "0xE4ED6C", Offset = "0xE4ED6C", VA = "0xE4ED6C")]
	public void LoadText()
	{
	}

	[Token(Token = "0x60009A3")]
	[Address(RVA = "0xE4EEBC", Offset = "0xE4EEBC", VA = "0xE4EEBC")]
	public LocalizationTextLoader()
	{
	}
}
[Token(Token = "0x20001B9")]
public enum TextTypeEnum
{
	[Token(Token = "0x4000B60")]
	NONE,
	[Token(Token = "0x4000B61")]
	CAPITALIZE,
	[Token(Token = "0x4000B62")]
	UPPERCASE,
	[Token(Token = "0x4000B63")]
	LOWERCASE
}
[Token(Token = "0x20001BA")]
public static class SafetyAction
{
	[Token(Token = "0x60009A4")]
	[Address(RVA = "0xE4D630", Offset = "0xE4D630", VA = "0xE4D630")]
	public static void SafeInvoke(this Action action)
	{
	}

	[Token(Token = "0x60009A5")]
	public static void SafeInvoke<T>(this Action<T> action, T arg1)
	{
	}

	[Token(Token = "0x60009A6")]
	public static void SafeInvoke<T1, T2>(this Action<T1, T2> action, T1 arg1, T2 arg2)
	{
	}
}
[Token(Token = "0x20001BB")]
public class Meteorite : MonoBehaviour
{
	[Token(Token = "0x4000B64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float speed;

	[Token(Token = "0x4000B65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float stopSpeed;

	[Token(Token = "0x4000B66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float accel;

	[Token(Token = "0x4000B67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 direction;

	[Token(Token = "0x4000B68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Vector3 posOrigen;

	[Token(Token = "0x4000B69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 targetScale;

	[Token(Token = "0x4000B6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int id;

	[Token(Token = "0x4000B6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool canMove;

	[Token(Token = "0x4000B6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	private bool shrink;

	[Token(Token = "0x4000B6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
	private bool isSFXPlayed;

	[Token(Token = "0x4000B6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private float timeInScaling;

	[Token(Token = "0x4000B6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float initialVolume;

	[Token(Token = "0x60009A7")]
	[Address(RVA = "0xE4EEC4", Offset = "0xE4EEC4", VA = "0xE4EEC4")]
	public void Init(Vector3 dir, int _id, Vector3 _targetScale)
	{
	}

	[Token(Token = "0x60009A8")]
	[Address(RVA = "0xE4F07C", Offset = "0xE4F07C", VA = "0xE4F07C")]
	private void Update()
	{
	}

	[Token(Token = "0x60009A9")]
	[Address(RVA = "0xE4F550", Offset = "0xE4F550", VA = "0xE4F550")]
	private void CheckPlayMeteoritesSFX()
	{
	}

	[Token(Token = "0x60009AA")]
	[Address(RVA = "0xE4F764", Offset = "0xE4F764", VA = "0xE4F764")]
	public int GetID()
	{
		return default(int);
	}

	[Token(Token = "0x60009AB")]
	[Address(RVA = "0xE4F76C", Offset = "0xE4F76C", VA = "0xE4F76C")]
	public void SetCanMove(bool _state)
	{
	}

	[Token(Token = "0x60009AC")]
	[Address(RVA = "0xE4F778", Offset = "0xE4F778", VA = "0xE4F778")]
	public Meteorite()
	{
	}
}
[Token(Token = "0x20001BC")]
public class MeteoriteBoss : Enemy
{
	[Token(Token = "0x4000B70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private float stopSpeed;

	[Token(Token = "0x4000B71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private float accel;

	[Token(Token = "0x4000B72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private Vector3 posOrigen;

	[Token(Token = "0x4000B73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Vector3 targetScale;

	[Token(Token = "0x4000B74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private bool canMove;

	[Token(Token = "0x4000B75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x165")]
	private bool canMovePosition;

	[Token(Token = "0x4000B76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x166")]
	private bool canAct;

	[Token(Token = "0x4000B77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x167")]
	private bool hasToStop;

	[Token(Token = "0x4000B78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[SerializeField]
	private float timeInScaling;

	[Token(Token = "0x4000B79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	[SerializeField]
	private GameObject fillBar;

	[Token(Token = "0x4000B7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	[SerializeField]
	private GameObject timeBar;

	[Token(Token = "0x4000B7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	[SerializeField]
	private GameObject summonMeteo;

	[Token(Token = "0x4000B7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	[SerializeField]
	private GameObject posExplo;

	[Token(Token = "0x4000B7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	[SerializeField]
	private GameObject posInten;

	[Token(Token = "0x4000B7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[SerializeField]
	private GameObject PSChange;

	[Token(Token = "0x4000B7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	[SerializeField]
	private GameObject PSInten;

	[Token(Token = "0x4000B80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	[SerializeField]
	private GameObject PSHit;

	[Token(Token = "0x4000B81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	[SerializeField]
	private GameObject PSPulse;

	[Token(Token = "0x4000B82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	[SerializeField]
	private GameObject PSBarra;

	[Token(Token = "0x4000B83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	[SerializeField]
	private GameObject StartBar;

	[Token(Token = "0x4000B84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	[SerializeField]
	private GameObject EndBar;

	[Token(Token = "0x4000B85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	[SerializeField]
	private GameObject MeteoFlame;

	[Token(Token = "0x4000B86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	[SerializeField]
	private GameObject MeteoCharge;

	[Token(Token = "0x4000B87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	[SerializeField]
	private GameObject Focus;

	[Token(Token = "0x4000B88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	[SerializeField]
	private GameObject Impulse;

	[Token(Token = "0x4000B89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	[SerializeField]
	private GameObject ImpulsePos;

	[Token(Token = "0x4000B8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public Material[] colorMatsBaseList;

	[Token(Token = "0x4000B8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public Material[] colorMatsFocList;

	[Token(Token = "0x4000B8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	private float divTempoNormal;

	[Token(Token = "0x4000B8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
	private float divTempo;

	[Token(Token = "0x4000B8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private float timeStart;

	[Token(Token = "0x4000B8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
	private float timeStartPause;

	[Token(Token = "0x4000B90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private float timeToDecide;

	[Token(Token = "0x4000B91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
	private float timeToChangeColor;

	[Token(Token = "0x4000B92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	private float timeToMiddle;

	[Token(Token = "0x4000B93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
	private float timeStopStart;

	[Token(Token = "0x4000B94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	private float timeStop;

	[Token(Token = "0x4000B95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	private DG.Tweening.Tween activeTween;

	[Token(Token = "0x4000B96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	private DG.Tweening.Tween scaleTween;

	[Token(Token = "0x4000B97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	protected MeteoriteBossState meteoriteState;

	[Token(Token = "0x4000B98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	private GameObject IntensityPSs;

	[Token(Token = "0x4000B99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	private GameObject FocusPSs;

	[Token(Token = "0x4000B9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	private IconsType _targetIcon;

	[Token(Token = "0x60009AE")]
	[Address(RVA = "0xD1141C", Offset = "0xD1141C", VA = "0xD1141C")]
	public void Init(List<IconsType> _iconTypeList, int _spawnerId, uint _id, float _time)
	{
	}

	[Token(Token = "0x60009AF")]
	[Address(RVA = "0xD142D0", Offset = "0xD142D0", VA = "0xD142D0")]
	private void ActivateColorExplosion(IconsType _icon, GameObject _go)
	{
	}

	[Token(Token = "0x60009B0")]
	[Address(RVA = "0xD11900", Offset = "0xD11900", VA = "0xD11900")]
	private void ActivateColor(IconsType _icon)
	{
	}

	[Token(Token = "0x60009B1")]
	[Address(RVA = "0xD15700", Offset = "0xD15700", VA = "0xD15700")]
	private void RandomColor()
	{
	}

	[Token(Token = "0x60009B2")]
	[Address(RVA = "0xD157FC", Offset = "0xD157FC", VA = "0xD157FC")]
	private void HitPSs()
	{
	}

	[Token(Token = "0x60009B3")]
	[Address(RVA = "0xD158E8", Offset = "0xD158E8", VA = "0xD158E8")]
	private void Update()
	{
	}

	[Token(Token = "0x60009B4")]
	[Address(RVA = "0xD16564", Offset = "0xD16564", VA = "0xD16564")]
	public void SetCanMove(bool _state)
	{
	}

	[Token(Token = "0x60009B5")]
	[Address(RVA = "0xD16574", Offset = "0xD16574", VA = "0xD16574")]
	public void SetCanMovePosition(bool _state)
	{
	}

	[Token(Token = "0x60009B6")]
	[Address(RVA = "0xD16580", Offset = "0xD16580", VA = "0xD16580")]
	public void BigScale()
	{
	}

	[Token(Token = "0x60009B7")]
	[Address(RVA = "0xD165D8", Offset = "0xD165D8", VA = "0xD165D8")]
	private IconsType GetIconToCheck()
	{
		return default(IconsType);
	}

	[Token(Token = "0x60009B8")]
	[Address(RVA = "0xD165E0", Offset = "0xD165E0", VA = "0xD165E0", Slot = "9")]
	public override void PauseAnimation()
	{
	}

	[Token(Token = "0x60009B9")]
	[Address(RVA = "0xD16610", Offset = "0xD16610", VA = "0xD16610", Slot = "10")]
	public override void PlayAnimation()
	{
	}

	[Token(Token = "0x60009BA")]
	[Address(RVA = "0xD1664C", Offset = "0xD1664C", VA = "0xD1664C", Slot = "11")]
	public override void PauseParticles()
	{
	}

	[Token(Token = "0x60009BB")]
	[Address(RVA = "0xD16650", Offset = "0xD16650", VA = "0xD16650", Slot = "12")]
	public override void PlayParticles()
	{
	}

	[Token(Token = "0x60009BC")]
	[Address(RVA = "0xD16654", Offset = "0xD16654", VA = "0xD16654", Slot = "8")]
	public override void ChangeEnemyState(EnemyState _state)
	{
	}

	[Token(Token = "0x60009BD")]
	[Address(RVA = "0xD16658", Offset = "0xD16658", VA = "0xD16658", Slot = "16")]
	public override bool ReceiveHit(IconsType iconsType, ushort spins_count)
	{
		return default(bool);
	}

	[Token(Token = "0x60009BE")]
	[Address(RVA = "0xD16C2C", Offset = "0xD16C2C", VA = "0xD16C2C", Slot = "17")]
	public override bool ReceiveHit(Hit _hit, ushort spins_count)
	{
		return default(bool);
	}

	[Token(Token = "0x60009BF")]
	[Address(RVA = "0xD16F5C", Offset = "0xD16F5C", VA = "0xD16F5C", Slot = "27")]
	public override void ActiveExplosion()
	{
	}

	[Token(Token = "0x60009C0")]
	[Address(RVA = "0xD16F60", Offset = "0xD16F60", VA = "0xD16F60", Slot = "28")]
	public override void ActivePerfectExplosion()
	{
	}

	[Token(Token = "0x60009C1")]
	[Address(RVA = "0xD16F64", Offset = "0xD16F64", VA = "0xD16F64", Slot = "29")]
	public override void ActiveGoodExplosion()
	{
	}

	[Token(Token = "0x60009C2")]
	[Address(RVA = "0xD16F68", Offset = "0xD16F68", VA = "0xD16F68", Slot = "30")]
	public override void ActiveKillExplosion()
	{
	}

	[Token(Token = "0x60009C3")]
	[Address(RVA = "0xD16980", Offset = "0xD16980", VA = "0xD16980")]
	private void Recoil()
	{
	}

	[Token(Token = "0x60009C4")]
	[Address(RVA = "0xD16F6C", Offset = "0xD16F6C", VA = "0xD16F6C", Slot = "26")]
	public override void Die()
	{
	}

	[Token(Token = "0x60009C5")]
	[Address(RVA = "0xD17064", Offset = "0xD17064", VA = "0xD17064")]
	public MeteoriteBoss()
	{
	}
}
[Token(Token = "0x20001BD")]
public enum MeteoriteBossState
{
	[Token(Token = "0x4000B9C")]
	NONE,
	[Token(Token = "0x4000B9D")]
	MOVE,
	[Token(Token = "0x4000B9E")]
	RECOIL,
	[Token(Token = "0x4000B9F")]
	PAUSE
}
[Token(Token = "0x20001BE")]
public class MeteoriteBoss2 : Enemy
{
	[Token(Token = "0x4000BA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private float stopSpeed;

	[Token(Token = "0x4000BA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private float accel;

	[Token(Token = "0x4000BA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private Vector3 posOrigen;

	[Token(Token = "0x4000BA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Vector3 targetScale;

	[Token(Token = "0x4000BA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private bool canMove;

	[Token(Token = "0x4000BA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x165")]
	private bool canMovePosition;

	[Token(Token = "0x4000BA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x166")]
	private bool canAct;

	[Token(Token = "0x4000BA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x167")]
	private bool hasToStop;

	[Token(Token = "0x4000BA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[SerializeField]
	private float timeInScaling;

	[Token(Token = "0x4000BA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	[SerializeField]
	private GameObject fillBar;

	[Token(Token = "0x4000BAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	[SerializeField]
	private GameObject timeBar;

	[Token(Token = "0x4000BAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	[SerializeField]
	private GameObject summonMeteo;

	[Token(Token = "0x4000BAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	[SerializeField]
	private GameObject posExplo;

	[Token(Token = "0x4000BAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	[SerializeField]
	private GameObject posInten;

	[Token(Token = "0x4000BAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[SerializeField]
	private GameObject PSChange;

	[Token(Token = "0x4000BAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	[SerializeField]
	private GameObject PSInten;

	[Token(Token = "0x4000BB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	[SerializeField]
	private GameObject PSHit;

	[Token(Token = "0x4000BB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	[SerializeField]
	private GameObject PSPulse;

	[Token(Token = "0x4000BB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	[SerializeField]
	private GameObject PSBarra;

	[Token(Token = "0x4000BB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	[SerializeField]
	private GameObject StartBar;

	[Token(Token = "0x4000BB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	[SerializeField]
	private GameObject EndBar;

	[Token(Token = "0x4000BB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	[SerializeField]
	private GameObject MeteoFlame;

	[Token(Token = "0x4000BB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	[SerializeField]
	private GameObject MeteoCharge;

	[Token(Token = "0x4000BB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	[SerializeField]
	private GameObject Focus;

	[Token(Token = "0x4000BB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	[SerializeField]
	private GameObject Impulse;

	[Token(Token = "0x4000BB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	[SerializeField]
	private GameObject ImpulsePos;

	[Token(Token = "0x4000BBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	[SerializeField]
	private GameObject clashParticles;

	[Token(Token = "0x4000BBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	[SerializeField]
	private GameObject poisonMeshCharge;

	[Token(Token = "0x4000BBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	[SerializeField]
	private GameObject poisonMeshClash;

	[Token(Token = "0x4000BBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public Material[] colorMatsBaseList;

	[Token(Token = "0x4000BBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private float divTempoNormal;

	[Token(Token = "0x4000BBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
	private float divTempo;

	[Token(Token = "0x4000BC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	private float timeStart;

	[Token(Token = "0x4000BC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
	private float timeStartPause;

	[Token(Token = "0x4000BC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	private float timeToDecide;

	[Token(Token = "0x4000BC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
	private float timeToChangeColor;

	[Token(Token = "0x4000BC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	private float timeToMiddle;

	[Token(Token = "0x4000BC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
	private float timeStopStart;

	[Token(Token = "0x4000BC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	private float timeStop;

	[Token(Token = "0x4000BC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	private DG.Tweening.Tween activeTween;

	[Token(Token = "0x4000BC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	private DG.Tweening.Tween scaleTween;

	[Token(Token = "0x4000BC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	protected MeteoriteBossState meteoriteState;

	[Token(Token = "0x4000BCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	private GameObject IntensityPSs;

	[Token(Token = "0x4000BCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	private GameObject FocusPSs;

	[Token(Token = "0x4000BCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	private IconsType _targetIcon;

	[Token(Token = "0x60009C7")]
	[Address(RVA = "0xD17114", Offset = "0xD17114", VA = "0xD17114")]
	public void Init(List<IconsType> _iconTypeList, int _spawnerId, uint _id, float _time)
	{
	}

	[Token(Token = "0x60009C8")]
	[Address(RVA = "0xD191C0", Offset = "0xD191C0", VA = "0xD191C0")]
	private void ActivateColorExplosion(IconsType _icon, GameObject _go)
	{
	}

	[Token(Token = "0x60009C9")]
	[Address(RVA = "0xD17600", Offset = "0xD17600", VA = "0xD17600")]
	private void ActivateColor(IconsType _icon)
	{
	}

	[Token(Token = "0x60009CA")]
	[Address(RVA = "0xD1A5F0", Offset = "0xD1A5F0", VA = "0xD1A5F0")]
	private void RandomColor()
	{
	}

	[Token(Token = "0x60009CB")]
	[Address(RVA = "0xD1A6EC", Offset = "0xD1A6EC", VA = "0xD1A6EC")]
	private void HitPSs()
	{
	}

	[Token(Token = "0x60009CC")]
	[Address(RVA = "0xD1A7D8", Offset = "0xD1A7D8", VA = "0xD1A7D8")]
	private void Update()
	{
	}

	[Token(Token = "0x60009CD")]
	[Address(RVA = "0xD1B514", Offset = "0xD1B514", VA = "0xD1B514")]
	public void SetCanMove(bool _state)
	{
	}

	[Token(Token = "0x60009CE")]
	[Address(RVA = "0xD1B558", Offset = "0xD1B558", VA = "0xD1B558")]
	public void SetCanMovePosition(bool _state)
	{
	}

	[Token(Token = "0x60009CF")]
	[Address(RVA = "0xD1B564", Offset = "0xD1B564", VA = "0xD1B564")]
	public void BigScale()
	{
	}

	[Token(Token = "0x60009D0")]
	[Address(RVA = "0xD1B5BC", Offset = "0xD1B5BC", VA = "0xD1B5BC")]
	private IconsType GetIconToCheck()
	{
		return default(IconsType);
	}

	[Token(Token = "0x60009D1")]
	[Address(RVA = "0xD1B5C4", Offset = "0xD1B5C4", VA = "0xD1B5C4", Slot = "9")]
	public override void PauseAnimation()
	{
	}

	[Token(Token = "0x60009D2")]
	[Address(RVA = "0xD1B5F4", Offset = "0xD1B5F4", VA = "0xD1B5F4", Slot = "10")]
	public override void PlayAnimation()
	{
	}

	[Token(Token = "0x60009D3")]
	[Address(RVA = "0xD1B630", Offset = "0xD1B630", VA = "0xD1B630", Slot = "11")]
	public override void PauseParticles()
	{
	}

	[Token(Token = "0x60009D4")]
	[Address(RVA = "0xD1B634", Offset = "0xD1B634", VA = "0xD1B634", Slot = "12")]
	public override void PlayParticles()
	{
	}

	[Token(Token = "0x60009D5")]
	[Address(RVA = "0xD1B638", Offset = "0xD1B638", VA = "0xD1B638", Slot = "8")]
	public override void ChangeEnemyState(EnemyState _state)
	{
	}

	[Token(Token = "0x60009D6")]
	[Address(RVA = "0xD1B63C", Offset = "0xD1B63C", VA = "0xD1B63C", Slot = "16")]
	public override bool ReceiveHit(IconsType iconsType, ushort spins_count)
	{
		return default(bool);
	}

	[Token(Token = "0x60009D7")]
	[Address(RVA = "0xD1BC10", Offset = "0xD1BC10", VA = "0xD1BC10", Slot = "17")]
	public override bool ReceiveHit(Hit _hit, ushort spins_count)
	{
		return default(bool);
	}

	[Token(Token = "0x60009D8")]
	[Address(RVA = "0xD1BF40", Offset = "0xD1BF40", VA = "0xD1BF40", Slot = "27")]
	public override void ActiveExplosion()
	{
	}

	[Token(Token = "0x60009D9")]
	[Address(RVA = "0xD1BF44", Offset = "0xD1BF44", VA = "0xD1BF44", Slot = "28")]
	public override void ActivePerfectExplosion()
	{
	}

	[Token(Token = "0x60009DA")]
	[Address(RVA = "0xD1BF48", Offset = "0xD1BF48", VA = "0xD1BF48", Slot = "29")]
	public override void ActiveGoodExplosion()
	{
	}

	[Token(Token = "0x60009DB")]
	[Address(RVA = "0xD1BF4C", Offset = "0xD1BF4C", VA = "0xD1BF4C", Slot = "30")]
	public override void ActiveKillExplosion()
	{
	}

	[Token(Token = "0x60009DC")]
	[Address(RVA = "0xD1B964", Offset = "0xD1B964", VA = "0xD1B964")]
	private void Recoil()
	{
	}

	[Token(Token = "0x60009DD")]
	[Address(RVA = "0xD1BF50", Offset = "0xD1BF50", VA = "0xD1BF50", Slot = "26")]
	public override void Die()
	{
	}

	[Token(Token = "0x60009DE")]
	[Address(RVA = "0xD1C048", Offset = "0xD1C048", VA = "0xD1C048")]
	public MeteoriteBoss2()
	{
	}
}
[Token(Token = "0x20001BF")]
public class MeteoriteBoss3 : Enemy
{
	[Token(Token = "0x4000BCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private float stopSpeed;

	[Token(Token = "0x4000BCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private float accel;

	[Token(Token = "0x4000BCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private Vector3 posOrigen;

	[Token(Token = "0x4000BD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Vector3 targetScale;

	[Token(Token = "0x4000BD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private bool canMove;

	[Token(Token = "0x4000BD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x165")]
	private bool canMovePosition;

	[Token(Token = "0x4000BD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x166")]
	private bool canAct;

	[Token(Token = "0x4000BD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x167")]
	private bool hasToStop;

	[Token(Token = "0x4000BD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[SerializeField]
	private float timeInScaling;

	[Token(Token = "0x4000BD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	[SerializeField]
	private GameObject fillBar;

	[Token(Token = "0x4000BD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	[SerializeField]
	private GameObject timeBar;

	[Token(Token = "0x4000BD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	[SerializeField]
	private GameObject summonMeteo;

	[Token(Token = "0x4000BD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	[SerializeField]
	private GameObject posExplo;

	[Token(Token = "0x4000BDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	[SerializeField]
	private GameObject posInten;

	[Token(Token = "0x4000BDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[SerializeField]
	private GameObject PSChange;

	[Token(Token = "0x4000BDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	[SerializeField]
	private GameObject PSInten;

	[Token(Token = "0x4000BDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	[SerializeField]
	private GameObject PSHit;

	[Token(Token = "0x4000BDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	[SerializeField]
	private GameObject PSPulse;

	[Token(Token = "0x4000BDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	[SerializeField]
	private GameObject PSBarra;

	[Token(Token = "0x4000BE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	[SerializeField]
	private GameObject StartBar;

	[Token(Token = "0x4000BE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	[SerializeField]
	private GameObject EndBar;

	[Token(Token = "0x4000BE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	[SerializeField]
	private GameObject MeteoFlame;

	[Token(Token = "0x4000BE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	[SerializeField]
	private GameObject MeteoCharge;

	[Token(Token = "0x4000BE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	[SerializeField]
	private GameObject Focus;

	[Token(Token = "0x4000BE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	[SerializeField]
	private GameObject Impulse;

	[Token(Token = "0x4000BE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	[SerializeField]
	private GameObject ImpulsePos;

	[Token(Token = "0x4000BE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public Material[] colorMatsFocList;

	[Token(Token = "0x4000BE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	private float divTempoNormal;

	[Token(Token = "0x4000BE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
	private float divTempo;

	[Token(Token = "0x4000BEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	private float timeStart;

	[Token(Token = "0x4000BEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
	private float timeStartPause;

	[Token(Token = "0x4000BEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private float timeToDecide;

	[Token(Token = "0x4000BED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
	private float timeToChangeColor;

	[Token(Token = "0x4000BEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private float timeToMiddle;

	[Token(Token = "0x4000BEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
	private float timeStopStart;

	[Token(Token = "0x4000BF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	private float timeStop;

	[Token(Token = "0x4000BF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	private DG.Tweening.Tween activeTween;

	[Token(Token = "0x4000BF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	private DG.Tweening.Tween scaleTween;

	[Token(Token = "0x4000BF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	protected MeteoriteBossState meteoriteState;

	[Token(Token = "0x4000BF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	private GameObject IntensityPSs;

	[Token(Token = "0x4000BF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	private GameObject FocusPSs;

	[Token(Token = "0x4000BF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	private IconsType _targetIcon;

	[Token(Token = "0x4000BF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x254")]
	private bool firstColor;

	[Token(Token = "0x60009E0")]
	[Address(RVA = "0xD1C0FC", Offset = "0xD1C0FC", VA = "0xD1C0FC")]
	public void Init(List<IconsType> _iconTypeList, int _spawnerId, uint _id, float _time)
	{
	}

	[Token(Token = "0x60009E1")]
	[Address(RVA = "0xD1ED7C", Offset = "0xD1ED7C", VA = "0xD1ED7C")]
	private void ActivateColorExplosion(IconsType _icon, GameObject _go)
	{
	}

	[Token(Token = "0x60009E2")]
	[Address(RVA = "0xD1C574", Offset = "0xD1C574", VA = "0xD1C574")]
	private void ActivateColor(IconsType _icon)
	{
	}

	[Token(Token = "0x60009E3")]
	[Address(RVA = "0xD201AC", Offset = "0xD201AC", VA = "0xD201AC")]
	private void RandomColor()
	{
	}

	[Token(Token = "0x60009E4")]
	[Address(RVA = "0xD20284", Offset = "0xD20284", VA = "0xD20284")]
	private void HitPSs()
	{
	}

	[Token(Token = "0x60009E5")]
	[Address(RVA = "0xD20370", Offset = "0xD20370", VA = "0xD20370")]
	private void Update()
	{
	}

	[Token(Token = "0x60009E6")]
	[Address(RVA = "0xD210D0", Offset = "0xD210D0", VA = "0xD210D0")]
	public void SetCanMove(bool _state)
	{
	}

	[Token(Token = "0x60009E7")]
	[Address(RVA = "0xD210E0", Offset = "0xD210E0", VA = "0xD210E0")]
	public void SetCanMovePosition(bool _state)
	{
	}

	[Token(Token = "0x60009E8")]
	[Address(RVA = "0xD210EC", Offset = "0xD210EC", VA = "0xD210EC")]
	public void BigScale()
	{
	}

	[Token(Token = "0x60009E9")]
	[Address(RVA = "0xD21144", Offset = "0xD21144", VA = "0xD21144")]
	private IconsType GetIconToCheck()
	{
		return default(IconsType);
	}

	[Token(Token = "0x60009EA")]
	[Address(RVA = "0xD2114C", Offset = "0xD2114C", VA = "0xD2114C", Slot = "9")]
	public override void PauseAnimation()
	{
	}

	[Token(Token = "0x60009EB")]
	[Address(RVA = "0xD2117C", Offset = "0xD2117C", VA = "0xD2117C", Slot = "10")]
	public override void PlayAnimation()
	{
	}

	[Token(Token = "0x60009EC")]
	[Address(RVA = "0xD21208", Offset = "0xD21208", VA = "0xD21208", Slot = "11")]
	public override void PauseParticles()
	{
	}

	[Token(Token = "0x60009ED")]
	[Address(RVA = "0xD2120C", Offset = "0xD2120C", VA = "0xD2120C", Slot = "12")]
	public override void PlayParticles()
	{
	}

	[Token(Token = "0x60009EE")]
	[Address(RVA = "0xD21210", Offset = "0xD21210", VA = "0xD21210", Slot = "8")]
	public override void ChangeEnemyState(EnemyState _state)
	{
	}

	[Token(Token = "0x60009EF")]
	[Address(RVA = "0xD21214", Offset = "0xD21214", VA = "0xD21214", Slot = "16")]
	public override bool ReceiveHit(IconsType iconsType, ushort spins_count)
	{
		return default(bool);
	}

	[Token(Token = "0x60009F0")]
	[Address(RVA = "0xD218E4", Offset = "0xD218E4", VA = "0xD218E4", Slot = "17")]
	public override bool ReceiveHit(Hit _hit, ushort spins_count)
	{
		return default(bool);
	}

	[Token(Token = "0x60009F1")]
	[Address(RVA = "0xD21C14", Offset = "0xD21C14", VA = "0xD21C14", Slot = "27")]
	public override void ActiveExplosion()
	{
	}

	[Token(Token = "0x60009F2")]
	[Address(RVA = "0xD21C18", Offset = "0xD21C18", VA = "0xD21C18", Slot = "28")]
	public override void ActivePerfectExplosion()
	{
	}

	[Token(Token = "0x60009F3")]
	[Address(RVA = "0xD21C1C", Offset = "0xD21C1C", VA = "0xD21C1C", Slot = "29")]
	public override void ActiveGoodExplosion()
	{
	}

	[Token(Token = "0x60009F4")]
	[Address(RVA = "0xD21C20", Offset = "0xD21C20", VA = "0xD21C20", Slot = "30")]
	public override void ActiveKillExplosion()
	{
	}

	[Token(Token = "0x60009F5")]
	[Address(RVA = "0xD2153C", Offset = "0xD2153C", VA = "0xD2153C")]
	private void Recoil()
	{
	}

	[Token(Token = "0x60009F6")]
	[Address(RVA = "0xD21C24", Offset = "0xD21C24", VA = "0xD21C24", Slot = "26")]
	public override void Die()
	{
	}

	[Token(Token = "0x60009F7")]
	[Address(RVA = "0xD21D1C", Offset = "0xD21D1C", VA = "0xD21D1C")]
	public MeteoriteBoss3()
	{
	}
}
[Token(Token = "0x20001C0")]
public class Meteospawner : MonoBehaviour
{
	[Token(Token = "0x4000BF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<GameObject> meteorites;

	[Token(Token = "0x4000BF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject meteorite;

	[Token(Token = "0x4000BFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform endPosition;

	[Token(Token = "0x4000BFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform endPosition2;

	[Token(Token = "0x4000BFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private int maxMeteorites;

	[Token(Token = "0x4000BFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private float minTimeToMeteorite;

	[Token(Token = "0x4000BFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float maxTimeToMeteorite;

	[Token(Token = "0x4000BFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private float radious;

	[Token(Token = "0x4000C00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private float minScale;

	[Token(Token = "0x4000C01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private float maxScale;

	[Token(Token = "0x4000C02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float timeLastSpawn;

	[Token(Token = "0x4000C03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int id;

	[Token(Token = "0x4000C04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float timeToMeteorite;

	[Token(Token = "0x60009F9")]
	[Address(RVA = "0xD21DCC", Offset = "0xD21DCC", VA = "0xD21DCC")]
	private void Start()
	{
	}

	[Token(Token = "0x60009FA")]
	[Address(RVA = "0xD21DE8", Offset = "0xD21DE8", VA = "0xD21DE8")]
	private void InstantiateMeteorite()
	{
	}

	[Token(Token = "0x60009FB")]
	[Address(RVA = "0xD22278", Offset = "0xD22278", VA = "0xD22278")]
	private void Update()
	{
	}

	[Token(Token = "0x60009FC")]
	[Address(RVA = "0xD222F8", Offset = "0xD222F8", VA = "0xD222F8")]
	public void RemoveMeteorite(int _id)
	{
	}

	[Token(Token = "0x60009FD")]
	[Address(RVA = "0xD223E4", Offset = "0xD223E4", VA = "0xD223E4")]
	public Meteospawner()
	{
	}
}
[Token(Token = "0x20001C1")]
[RequireComponent(typeof(MultiImageTargetGraphics))]
public class MultiImageButton : Button
{
	[Token(Token = "0x4000C05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Graphic[] graphics;

	[Token(Token = "0x4000C06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private MultiImageTargetGraphics targetGraphics;

	[Token(Token = "0x60009FE")]
	[Address(RVA = "0xD223EC", Offset = "0xD223EC", VA = "0xD223EC", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60009FF")]
	[Address(RVA = "0xD223F4", Offset = "0xD223F4", VA = "0xD223F4", Slot = "26")]
	protected override void DoStateTransition(SelectionState state, bool instant)
	{
	}

	[Token(Token = "0x6000A00")]
	[Address(RVA = "0xD22550", Offset = "0xD22550", VA = "0xD22550")]
	private bool GetGraphics()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A01")]
	[Address(RVA = "0xD22624", Offset = "0xD22624", VA = "0xD22624")]
	public MultiImageButton()
	{
	}
}
[Token(Token = "0x20001C2")]
public class MultiImageTargetGraphics : MonoBehaviour
{
	[Token(Token = "0x4000C07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Graphic[] targetGraphics;

	[Token(Token = "0x170000AE")]
	public Graphic[] GetTargetGraphics
	{
		[Token(Token = "0x6000A02")]
		[Address(RVA = "0xD2262C", Offset = "0xD2262C", VA = "0xD2262C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000A03")]
	[Address(RVA = "0xD22634", Offset = "0xD22634", VA = "0xD22634")]
	public MultiImageTargetGraphics()
	{
	}
}
[Token(Token = "0x20001C3")]
public class ParticleSystemParentPool : MonoBehaviour
{
	[Token(Token = "0x4000C08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public static ParticleSystemParentPool instance;

	[Token(Token = "0x4000C09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private byte maxSticksCollisionAmmount;

	[Token(Token = "0x4000C0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private byte maxEnemyHitFeedbackAmmount;

	[Token(Token = "0x4000C0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	private byte maxLlampAmmount;

	[Token(Token = "0x4000C0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	private byte maxX3Ammount;

	[Token(Token = "0x4000C0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private byte maxXFailAmmount;

	[Token(Token = "0x4000C0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private byte maxDeathAmmount;

	[Token(Token = "0x4000C0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<ParticleSystem> sticksCollisionList;

	[Token(Token = "0x4000C10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<ParticleSystem> stickExplosionList;

	[Token(Token = "0x4000C11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<ParticleSystem> enemyHitFeedbackList;

	[Token(Token = "0x4000C12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<ParticleSystem> enemyGoodHitFeedbackList;

	[Token(Token = "0x4000C13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<ParticleSystem> enemyPerfectHitFeedbackList;

	[Token(Token = "0x4000C14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<GameObject> llampList;

	[Token(Token = "0x4000C15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<ParticleSystem> x3List;

	[Token(Token = "0x4000C16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<ParticleSystem> xFailList;

	[Token(Token = "0x4000C17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<ParticleSystem> deathList;

	[Token(Token = "0x6000A04")]
	[Address(RVA = "0xD2263C", Offset = "0xD2263C", VA = "0xD2263C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A05")]
	[Address(RVA = "0xD226F0", Offset = "0xD226F0", VA = "0xD226F0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A06")]
	[Address(RVA = "0xD228DC", Offset = "0xD228DC", VA = "0xD228DC")]
	public void ActivateSticksCollision(GameObject sticksCollisionPsPrefab, Vector3 hitPos)
	{
	}

	[Token(Token = "0x6000A07")]
	[Address(RVA = "0xD22D50", Offset = "0xD22D50", VA = "0xD22D50")]
	public void ActivateSticksExplosion(GameObject sticksCollisionPsPrefab, Vector3 hitPos)
	{
	}

	[Token(Token = "0x6000A08")]
	[Address(RVA = "0xD231B0", Offset = "0xD231B0", VA = "0xD231B0")]
	public void ActivateLlampPrefab(GameObject llampPsPrefab, Vector3 pos, Quaternion rotation)
	{
	}

	[Token(Token = "0x6000A09")]
	[Address(RVA = "0xD236A0", Offset = "0xD236A0", VA = "0xD236A0")]
	public void ActivateX3Prefab(GameObject x3PsPrefab, Vector3 pos, Quaternion rotation)
	{
	}

	[Token(Token = "0x6000A0A")]
	[Address(RVA = "0xD23AE8", Offset = "0xD23AE8", VA = "0xD23AE8")]
	public void ActivateXFailPrefab(GameObject xFailPrefab, Vector3 spawn_pos, Quaternion rotation)
	{
	}

	[Token(Token = "0x6000A0B")]
	[Address(RVA = "0xD23F30", Offset = "0xD23F30", VA = "0xD23F30")]
	public void ActivateDeathPrefab(GameObject deathPSPrefab, Vector3 spawn_pos, Quaternion rotation)
	{
	}

	[Token(Token = "0x6000A0C")]
	[Address(RVA = "0xD24378", Offset = "0xD24378", VA = "0xD24378")]
	public void ActivateExploPrefab(GameObject exploPrefab, Vector3 hitPos, EnemyTypeFeedback _feedback)
	{
	}

	[Token(Token = "0x6000A0D")]
	[Address(RVA = "0xD252C4", Offset = "0xD252C4", VA = "0xD252C4")]
	public void DestroyAllChildren()
	{
	}

	[Token(Token = "0x6000A0E")]
	[Address(RVA = "0xD255CC", Offset = "0xD255CC", VA = "0xD255CC")]
	public ParticleSystemParentPool()
	{
	}
}
[Token(Token = "0x20001C4")]
public enum EnemyTypeFeedback
{
	[Token(Token = "0x4000C19")]
	Normal,
	[Token(Token = "0x4000C1A")]
	Good,
	[Token(Token = "0x4000C1B")]
	Perfect
}
[Token(Token = "0x20001C5")]
public class PerfectHelp : MonoBehaviour
{
	[Token(Token = "0x4000C1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject Barra;

	[Token(Token = "0x6000A0F")]
	[Address(RVA = "0xD255E4", Offset = "0xD255E4", VA = "0xD255E4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A10")]
	[Address(RVA = "0xD255E8", Offset = "0xD255E8", VA = "0xD255E8")]
	public PerfectHelp()
	{
	}
}
[Token(Token = "0x20001C6")]
public class Rotator : MonoBehaviour
{
	[Token(Token = "0x4000C1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x6000A11")]
	[Address(RVA = "0xD255F0", Offset = "0xD255F0", VA = "0xD255F0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A12")]
	[Address(RVA = "0xD255F4", Offset = "0xD255F4", VA = "0xD255F4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A13")]
	[Address(RVA = "0xD255F8", Offset = "0xD255F8", VA = "0xD255F8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000A14")]
	[Address(RVA = "0xD25678", Offset = "0xD25678", VA = "0xD25678")]
	public Rotator()
	{
	}
}
[Serializable]
[Token(Token = "0x20001C7")]
public class CustomSaveData
{
	[Token(Token = "0x4000C1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<ChallengeSongSaveData> challengeSongsSaveData;

	[Token(Token = "0x4000C1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<SongInfoCampaignSaveData> songInfoCampaignSaveData;

	[Token(Token = "0x4000C20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<StoreItemSaveData> storeItemSaveData;

	[Token(Token = "0x4000C21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<int> TvCinematicsSeenSaveData;

	[Token(Token = "0x4000C22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int XPearned;

	[Token(Token = "0x4000C23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int munnies;

	[Token(Token = "0x4000C24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool is_tutorial_done_first_time;

	[Token(Token = "0x4000C25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public uint money_earned;

	[Token(Token = "0x4000C26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public uint id_equipped_hands;

	[Token(Token = "0x4000C27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public uint id_equipped_drums;

	[Token(Token = "0x4000C28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public uint id_equipped_drumsstick;

	[Token(Token = "0x4000C29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Obsolete]
	public float drumsOffset;

	[Token(Token = "0x4000C2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SettingsController.OptionsSettings optionsSettings;

	[Token(Token = "0x4000C2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string version;

	[Token(Token = "0x4000C2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int version_code;

	[Token(Token = "0x4000C2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float lowTom_x_offset;

	[Token(Token = "0x4000C2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float lowTom_y_offset;

	[Token(Token = "0x4000C2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float highTom_x_offset;

	[Token(Token = "0x4000C30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float highTom_y_offset;

	[Token(Token = "0x4000C31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float ride_x_offset;

	[Token(Token = "0x4000C32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float ride_y_offset;

	[Token(Token = "0x4000C33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float crush_x_offset;

	[Token(Token = "0x4000C34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float crush_y_offset;

	[Token(Token = "0x4000C35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float kick_x_offset;

	[Token(Token = "0x4000C36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float kick_y_offset;

	[Token(Token = "0x4000C37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float snare_x_offset;

	[Token(Token = "0x4000C38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float snare_y_offset;

	[Token(Token = "0x4000C39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float lowTom_height_offset;

	[Token(Token = "0x4000C3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float highTom_height_offset;

	[Token(Token = "0x4000C3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float ride_height_offset;

	[Token(Token = "0x4000C3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float crush_height_offset;

	[Token(Token = "0x4000C3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float kick_height_offset;

	[Token(Token = "0x4000C3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float snare_height_offset;

	[Token(Token = "0x6000A15")]
	[Address(RVA = "0xD25680", Offset = "0xD25680", VA = "0xD25680")]
	public CustomSaveData()
	{
	}
}
[Serializable]
[Token(Token = "0x20001C8")]
public class StoreItemSaveData
{
	[Token(Token = "0x4000C3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint id;

	[Token(Token = "0x4000C40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public StoreItemType type;

	[Token(Token = "0x4000C41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool has_unlocked;

	[Token(Token = "0x4000C42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool has_purchased;

	[Token(Token = "0x4000C43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool has_clicked_first_time;

	[Token(Token = "0x6000A16")]
	[Address(RVA = "0xD25688", Offset = "0xD25688", VA = "0xD25688")]
	public StoreItemSaveData()
	{
	}
}
[Token(Token = "0x20001C9")]
public class AutoSavePS5
{
	[Token(Token = "0x6000A17")]
	[Address(RVA = "0xD25690", Offset = "0xD25690", VA = "0xD25690")]
	public AutoSavePS5()
	{
	}
}
[Serializable]
[Token(Token = "0x20001CA")]
public class ChallengeSongSaveData
{
	[Token(Token = "0x4000C44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	public int ID;

	[Token(Token = "0x4000C45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	public bool is_unlocked_challenge;

	[Token(Token = "0x4000C46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public List<ChallengeSongInfoSaveData> DifficultiesInfo;

	[Token(Token = "0x6000A18")]
	[Address(RVA = "0xD25698", Offset = "0xD25698", VA = "0xD25698")]
	public void CreateSave(int id)
	{
	}

	[Token(Token = "0x6000A19")]
	[Address(RVA = "0xD25848", Offset = "0xD25848", VA = "0xD25848")]
	public void UpdateSave(Song song)
	{
	}

	[Token(Token = "0x6000A1A")]
	[Address(RVA = "0xD25BB8", Offset = "0xD25BB8", VA = "0xD25BB8")]
	public ChallengeSongSaveData()
	{
	}
}
[Serializable]
[Token(Token = "0x20001CB")]
public class ChallengeSongInfoSaveData
{
	[Token(Token = "0x4000C47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	public SongDifficulty Difficulty;

	[Token(Token = "0x4000C48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	public uint HighScore;

	[Token(Token = "0x4000C49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public uint Chain;

	[Token(Token = "0x4000C4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	public uint HitRate;

	[Token(Token = "0x4000C4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public uint PerfectRate;

	[Token(Token = "0x4000C4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	public uint GoodRate;

	[Token(Token = "0x4000C4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public uint NormalRate;

	[Token(Token = "0x4000C4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	public bool Completed;

	[Token(Token = "0x4000C4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	[SerializeField]
	public bool Failed;

	[Token(Token = "0x4000C50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
	[SerializeField]
	public bool HasRanked;

	[Token(Token = "0x6000A1B")]
	[Address(RVA = "0xD25840", Offset = "0xD25840", VA = "0xD25840")]
	public ChallengeSongInfoSaveData()
	{
	}
}
[Serializable]
[Token(Token = "0x20001CC")]
public class SongInfoCampaignSaveData
{
	[Token(Token = "0x4000C51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	public int Id;

	[Token(Token = "0x4000C52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public StarConditionSaveData[] StarConditions;

	[Token(Token = "0x4000C53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public uint HighScore;

	[Token(Token = "0x4000C54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	public uint Chain;

	[Token(Token = "0x4000C55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public uint HitRate;

	[Token(Token = "0x4000C56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	public uint PerfectRate;

	[Token(Token = "0x4000C57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	public uint GoodRate;

	[Token(Token = "0x4000C58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	public uint NormalRate;

	[Token(Token = "0x4000C59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	public bool Completed;

	[Token(Token = "0x4000C5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[SerializeField]
	public bool Failed;

	[Token(Token = "0x6000A1C")]
	[Address(RVA = "0xD25C40", Offset = "0xD25C40", VA = "0xD25C40")]
	public void CreateSave(int id)
	{
	}

	[Token(Token = "0x6000A1D")]
	[Address(RVA = "0xD25DE4", Offset = "0xD25DE4", VA = "0xD25DE4")]
	public void UpdateSave(SongInfoCampaign songInfoCampaign)
	{
	}

	[Token(Token = "0x6000A1E")]
	[Address(RVA = "0xD25E8C", Offset = "0xD25E8C", VA = "0xD25E8C")]
	public SongInfoCampaignSaveData()
	{
	}
}
[Serializable]
[Token(Token = "0x20001CD")]
public class StarConditionSaveData
{
	[Token(Token = "0x4000C5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	public bool Completed;

	[Token(Token = "0x6000A1F")]
	[Address(RVA = "0xD25DDC", Offset = "0xD25DDC", VA = "0xD25DDC")]
	public StarConditionSaveData()
	{
	}
}
[Token(Token = "0x20001CE")]
public class SaveManager : MonoBehaviour
{
	[Token(Token = "0x6000A20")]
	[Address(RVA = "0xD25E94", Offset = "0xD25E94", VA = "0xD25E94")]
	public static void Save(CustomSaveData objectToSave, string key, bool manualSave)
	{
	}

	[Token(Token = "0x6000A21")]
	[Address(RVA = "0xD26214", Offset = "0xD26214", VA = "0xD26214")]
	public static CustomSaveData Load(string key, bool array)
	{
		return null;
	}

	[Token(Token = "0x6000A22")]
	[Address(RVA = "0xD265C0", Offset = "0xD265C0", VA = "0xD265C0")]
	public static bool SaveExists(string key)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A23")]
	[Address(RVA = "0xD2663C", Offset = "0xD2663C", VA = "0xD2663C")]
	public static void DeleteAllSaveFiles()
	{
	}

	[Token(Token = "0x6000A24")]
	[Address(RVA = "0xD266E0", Offset = "0xD266E0", VA = "0xD266E0")]
	public SaveManager()
	{
	}
}
[Token(Token = "0x20001CF")]
public class BuildLoader : MonoBehaviour
{
	[Token(Token = "0x20001D0")]
	[CompilerGenerated]
	private sealed class <LoadPersistentIE>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BuildLoader <>4__this;

		[Token(Token = "0x4000C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AsyncOperation <op>5__2;

		[Token(Token = "0x4000C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <waitTime>5__3;

		[Token(Token = "0x4000C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <waitTimeStamp>5__4;

		[Token(Token = "0x4000C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject[] <fadeObj>5__5;

		[Token(Token = "0x4000C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int <i>5__6;

		[Token(Token = "0x4000C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float <alphaMultiplier>5__7;

		[Token(Token = "0x170000AF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A2B")]
			[Address(RVA = "0xD27CA8", Offset = "0xD27CA8", VA = "0xD27CA8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A2D")]
			[Address(RVA = "0xD27CF0", Offset = "0xD27CF0", VA = "0xD27CF0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A28")]
		[Address(RVA = "0xD26808", Offset = "0xD26808", VA = "0xD26808")]
		[DebuggerHidden]
		public <LoadPersistentIE>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000A29")]
		[Address(RVA = "0xD26838", Offset = "0xD26838", VA = "0xD26838", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A2A")]
		[Address(RVA = "0xD2683C", Offset = "0xD2683C", VA = "0xD2683C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A2C")]
		[Address(RVA = "0xD27CB0", Offset = "0xD27CB0", VA = "0xD27CB0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject mainCamera;

	[Token(Token = "0x4000C5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject persistentCamera;

	[Token(Token = "0x4000C5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject canvasLoading;

	[Token(Token = "0x4000C5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ScreenFader screenFader;

	[Token(Token = "0x4000C60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool bootGameplayScene;

	[Token(Token = "0x6000A25")]
	[Address(RVA = "0xD266E8", Offset = "0xD266E8", VA = "0xD266E8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A26")]
	[Address(RVA = "0xD26794", Offset = "0xD26794", VA = "0xD26794")]
	[IteratorStateMachine(typeof(<LoadPersistentIE>d__6))]
	private IEnumerator LoadPersistentIE()
	{
		return null;
	}

	[Token(Token = "0x6000A27")]
	[Address(RVA = "0xD26830", Offset = "0xD26830", VA = "0xD26830")]
	public BuildLoader()
	{
	}
}
[Token(Token = "0x20001D1")]
public class CanvasLoading : MonoBehaviour
{
	[Token(Token = "0x4000C6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool bIsActivated;

	[Token(Token = "0x4000C6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject loadingLogoGroup;

	[Token(Token = "0x4000C6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject initLoadingGroup;

	[Token(Token = "0x4000C6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject loadingGroup;

	[Token(Token = "0x4000C6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject stickerSitImage;

	[Token(Token = "0x4000C6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshProUGUI initLoadingTipText;

	[Token(Token = "0x4000C70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMeshProUGUI loadingTipText;

	[Token(Token = "0x4000C71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMeshProUGUI initLoadingThreeEllipsisText;

	[Token(Token = "0x4000C72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TextMeshProUGUI loadingLoadingThreeEllipsisText;

	[Token(Token = "0x4000C73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TextMeshProUGUI pressText;

	[Token(Token = "0x4000C74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Image pressTextImage;

	[Token(Token = "0x4000C75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Sprite[] pressTextImageList;

	[Token(Token = "0x4000C76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Sprite[] stickerSitImageList;

	[Token(Token = "0x4000C77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Sprite[] spriteLogoWithGarageList;

	[Token(Token = "0x4000C78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Sprite[] spriteLogoList;

	[Token(Token = "0x4000C79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Image initLoadingImage;

	[Token(Token = "0x4000C7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Image loadingImage;

	[Token(Token = "0x4000C7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private GameObject LoadingDemoSticker;

	[Token(Token = "0x4000C7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private GameObject LogoLoadingDemoSticker;

	[Token(Token = "0x4000C7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private GameObject InitLoadingDemoSticker;

	[Token(Token = "0x4000C7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private GameObject TextInitInfo;

	[Token(Token = "0x4000C7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject InitProgressBar;

	[Token(Token = "0x4000C80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private int currentThreeEllipsisCount;

	[Token(Token = "0x4000C81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float lastTimestampThreeEllipsis;

	[Token(Token = "0x4000C82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Dictionary<int, string> tipsList;

	[Token(Token = "0x4000C83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private string loadingText;

	[Token(Token = "0x4000C84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float lerpTimeToCenter;

	[Token(Token = "0x4000C85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private bool isLerping;

	[Token(Token = "0x4000C86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE5")]
	private bool isLerpingOptionActivated;

	[Token(Token = "0x4000C87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE6")]
	private bool overrideLerp;

	[Token(Token = "0x6000A2E")]
	[Address(RVA = "0xD27CF8", Offset = "0xD27CF8", VA = "0xD27CF8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A2F")]
	[Address(RVA = "0xD27D74", Offset = "0xD27D74", VA = "0xD27D74")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A30")]
	[Address(RVA = "0xD28390", Offset = "0xD28390", VA = "0xD28390")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A31")]
	[Address(RVA = "0xD28898", Offset = "0xD28898", VA = "0xD28898")]
	public void ActivateLerping(bool _overrideLerp = false)
	{
	}

	[Token(Token = "0x6000A32")]
	[Address(RVA = "0xD28B30", Offset = "0xD28B30", VA = "0xD28B30")]
	public void DisableOverrideLerp()
	{
	}

	[Token(Token = "0x6000A33")]
	[Address(RVA = "0xD28B38", Offset = "0xD28B38", VA = "0xD28B38")]
	public void DisableLerping()
	{
	}

	[Token(Token = "0x6000A34")]
	[Address(RVA = "0xD28B40", Offset = "0xD28B40", VA = "0xD28B40")]
	public void InitCenterPosition()
	{
	}

	[Token(Token = "0x6000A35")]
	[Address(RVA = "0xD284BC", Offset = "0xD284BC", VA = "0xD284BC")]
	private void UpdatePosToCenter()
	{
	}

	[Token(Token = "0x6000A36")]
	[Address(RVA = "0xD283C0", Offset = "0xD283C0", VA = "0xD283C0")]
	private void UpdateThreeEllipsis()
	{
	}

	[Token(Token = "0x6000A37")]
	[Address(RVA = "0xD276EC", Offset = "0xD276EC", VA = "0xD276EC")]
	public void ActivateInitLoading()
	{
	}

	[Token(Token = "0x6000A38")]
	[Address(RVA = "0xD28C98", Offset = "0xD28C98", VA = "0xD28C98")]
	public void ActivateNextStepInitLoading()
	{
	}

	[Token(Token = "0x6000A39")]
	[Address(RVA = "0xD28F94", Offset = "0xD28F94", VA = "0xD28F94")]
	public void ActivateLoadingImage()
	{
	}

	[Token(Token = "0x6000A3A")]
	[Address(RVA = "0xD279A0", Offset = "0xD279A0", VA = "0xD279A0")]
	public void ActivatePressText()
	{
	}

	[Token(Token = "0x6000A3B")]
	[Address(RVA = "0xD27C68", Offset = "0xD27C68", VA = "0xD27C68")]
	public void DisableAll()
	{
	}

	[Token(Token = "0x6000A3C")]
	[Address(RVA = "0xD280C4", Offset = "0xD280C4", VA = "0xD280C4")]
	public void InitTexts()
	{
	}

	[Token(Token = "0x6000A3D")]
	[Address(RVA = "0xD27E38", Offset = "0xD27E38", VA = "0xD27E38")]
	public void InitTipList()
	{
	}

	[Token(Token = "0x6000A3E")]
	[Address(RVA = "0xD28190", Offset = "0xD28190", VA = "0xD28190")]
	private void StartProgressBar()
	{
	}

	[Token(Token = "0x6000A3F")]
	[Address(RVA = "0xD29194", Offset = "0xD29194", VA = "0xD29194")]
	private string GetRandomTip()
	{
		return null;
	}

	[Token(Token = "0x6000A40")]
	[Address(RVA = "0xD29258", Offset = "0xD29258", VA = "0xD29258")]
	private string GetDrumsSettingsTip()
	{
		return null;
	}

	[Token(Token = "0x6000A41")]
	[Address(RVA = "0xD29304", Offset = "0xD29304", VA = "0xD29304")]
	public CanvasLoading()
	{
	}
}
[Token(Token = "0x20001D3")]
public class PropRotation : MonoBehaviour
{
	[Token(Token = "0x4000C8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float xRotation;

	[Token(Token = "0x4000C8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float yRotation;

	[Token(Token = "0x4000C8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float zRotation;

	[Token(Token = "0x4000C8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float maxSizeLimit;

	[Token(Token = "0x4000C90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float minSizeLimit;

	[Token(Token = "0x4000C91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool makeSmall;

	[Token(Token = "0x4000C92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 size;

	[Token(Token = "0x4000C93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float frameFactor;

	[Token(Token = "0x6000A47")]
	[Address(RVA = "0xD29740", Offset = "0xD29740", VA = "0xD29740")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A48")]
	[Address(RVA = "0xD29744", Offset = "0xD29744", VA = "0xD29744")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A49")]
	[Address(RVA = "0xD298A0", Offset = "0xD298A0", VA = "0xD298A0")]
	public PropRotation()
	{
	}
}
[Token(Token = "0x20001D4")]
public class SceneLoader : Singleton<SceneLoader>
{
	[Token(Token = "0x20001D6")]
	[CompilerGenerated]
	private sealed class <LoadScene>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SceneLoader <>4__this;

		[Token(Token = "0x4000C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string _sceneName;

		[Token(Token = "0x4000CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <is_same_scene>5__2;

		[Token(Token = "0x170000B1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A5F")]
			[Address(RVA = "0xD2AF6C", Offset = "0xD2AF6C", VA = "0xD2AF6C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A61")]
			[Address(RVA = "0xD2AFB4", Offset = "0xD2AFB4", VA = "0xD2AFB4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A5C")]
		[Address(RVA = "0xD29B4C", Offset = "0xD29B4C", VA = "0xD29B4C")]
		[DebuggerHidden]
		public <LoadScene>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6000A5D")]
		[Address(RVA = "0xD2A04C", Offset = "0xD2A04C", VA = "0xD2A04C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A5E")]
		[Address(RVA = "0xD2A050", Offset = "0xD2A050", VA = "0xD2A050", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A60")]
		[Address(RVA = "0xD2AF74", Offset = "0xD2AF74", VA = "0xD2AF74", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001D7")]
	[CompilerGenerated]
	private sealed class <LastFadeOut>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SceneLoader <>4__this;

		[Token(Token = "0x170000B3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A65")]
			[Address(RVA = "0xD2B22C", Offset = "0xD2B22C", VA = "0xD2B22C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A67")]
			[Address(RVA = "0xD2B274", Offset = "0xD2B274", VA = "0xD2B274", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A62")]
		[Address(RVA = "0xD29BE8", Offset = "0xD29BE8", VA = "0xD29BE8")]
		[DebuggerHidden]
		public <LastFadeOut>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6000A63")]
		[Address(RVA = "0xD2AFBC", Offset = "0xD2AFBC", VA = "0xD2AFBC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A64")]
		[Address(RVA = "0xD2AFC0", Offset = "0xD2AFC0", VA = "0xD2AFC0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A66")]
		[Address(RVA = "0xD2B234", Offset = "0xD2B234", VA = "0xD2B234", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001D8")]
	[CompilerGenerated]
	private sealed class <UnloadCurrent>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool is_same_scene;

		[Token(Token = "0x4000CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AsyncOperation <unloadOperation>5__2;

		[Token(Token = "0x170000B5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A6B")]
			[Address(RVA = "0xD2B45C", Offset = "0xD2B45C", VA = "0xD2B45C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A6D")]
			[Address(RVA = "0xD2B4A4", Offset = "0xD2B4A4", VA = "0xD2B4A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A68")]
		[Address(RVA = "0xD29C7C", Offset = "0xD29C7C", VA = "0xD29C7C")]
		[DebuggerHidden]
		public <UnloadCurrent>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6000A69")]
		[Address(RVA = "0xD2B27C", Offset = "0xD2B27C", VA = "0xD2B27C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A6A")]
		[Address(RVA = "0xD2B280", Offset = "0xD2B280", VA = "0xD2B280", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A6C")]
		[Address(RVA = "0xD2B464", Offset = "0xD2B464", VA = "0xD2B464", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001D9")]
	[CompilerGenerated]
	private sealed class <LoadNew>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string _sceneName;

		[Token(Token = "0x4000CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AsyncOperation <loadOperation>5__2;

		[Token(Token = "0x170000B7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A71")]
			[Address(RVA = "0xD2B790", Offset = "0xD2B790", VA = "0xD2B790", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A73")]
			[Address(RVA = "0xD2B7D8", Offset = "0xD2B7D8", VA = "0xD2B7D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A6E")]
		[Address(RVA = "0xD29D18", Offset = "0xD29D18", VA = "0xD29D18")]
		[DebuggerHidden]
		public <LoadNew>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6000A6F")]
		[Address(RVA = "0xD2B4AC", Offset = "0xD2B4AC", VA = "0xD2B4AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A70")]
		[Address(RVA = "0xD2B4B0", Offset = "0xD2B4B0", VA = "0xD2B4B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A72")]
		[Address(RVA = "0xD2B798", Offset = "0xD2B798", VA = "0xD2B798", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent OnLoadBegin;

	[Token(Token = "0x4000C95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent OnLoadEnd;

	[Token(Token = "0x4000C96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ScreenFader screenFader;

	[Token(Token = "0x4000C97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject canvasLoading;

	[Token(Token = "0x4000C98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool isLoading;

	[Token(Token = "0x4000C99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool fastLoading;

	[Token(Token = "0x6000A4A")]
	[Address(RVA = "0xD298B4", Offset = "0xD298B4", VA = "0xD298B4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A4B")]
	[Address(RVA = "0xD29958", Offset = "0xD29958", VA = "0xD29958")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000A4C")]
	[Address(RVA = "0xD299FC", Offset = "0xD299FC", VA = "0xD299FC")]
	public bool IsLoading()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A4D")]
	[Address(RVA = "0xD29A04", Offset = "0xD29A04", VA = "0xD29A04")]
	public void SetLoadingState(bool _state)
	{
	}

	[Token(Token = "0x6000A4E")]
	[Address(RVA = "0xD29A10", Offset = "0xD29A10", VA = "0xD29A10")]
	public void SetFastLoading()
	{
	}

	[Token(Token = "0x6000A4F")]
	[Address(RVA = "0xD29A84", Offset = "0xD29A84", VA = "0xD29A84")]
	public bool IsFastLoadingEnabled()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A50")]
	[Address(RVA = "0xD29A8C", Offset = "0xD29A8C", VA = "0xD29A8C")]
	public void LoadNewScene(string _sceneName)
	{
	}

	[Token(Token = "0x6000A51")]
	[Address(RVA = "0xD29ABC", Offset = "0xD29ABC", VA = "0xD29ABC")]
	[IteratorStateMachine(typeof(<LoadScene>d__13))]
	private IEnumerator LoadScene(string _sceneName)
	{
		return null;
	}

	[Token(Token = "0x6000A52")]
	[Address(RVA = "0xD29B74", Offset = "0xD29B74", VA = "0xD29B74")]
	[IteratorStateMachine(typeof(<LastFadeOut>d__14))]
	private IEnumerator LastFadeOut()
	{
		return null;
	}

	[Token(Token = "0x6000A53")]
	[Address(RVA = "0xD29C10", Offset = "0xD29C10", VA = "0xD29C10")]
	[IteratorStateMachine(typeof(<UnloadCurrent>d__15))]
	private IEnumerator UnloadCurrent(bool is_same_scene)
	{
		return null;
	}

	[Token(Token = "0x6000A54")]
	[Address(RVA = "0xD29CA4", Offset = "0xD29CA4", VA = "0xD29CA4")]
	[IteratorStateMachine(typeof(<LoadNew>d__16))]
	private IEnumerator LoadNew(string _sceneName)
	{
		return null;
	}

	[Token(Token = "0x6000A55")]
	[Address(RVA = "0xD29D40", Offset = "0xD29D40", VA = "0xD29D40")]
	private void SetActiveScene(Scene _scene, LoadSceneMode _mode)
	{
	}

	[Token(Token = "0x6000A56")]
	[Address(RVA = "0xD29D98", Offset = "0xD29D98", VA = "0xD29D98")]
	public void OnLoadBeginCallback()
	{
	}

	[Token(Token = "0x6000A57")]
	[Address(RVA = "0xD29DEC", Offset = "0xD29DEC", VA = "0xD29DEC")]
	public void OnLoadEndCallback()
	{
	}

	[Token(Token = "0x6000A58")]
	[Address(RVA = "0xD29E7C", Offset = "0xD29E7C", VA = "0xD29E7C")]
	public SceneLoader()
	{
	}
}
[Token(Token = "0x20001DA")]
public class ScriptableController : MonoBehaviour
{
	[Token(Token = "0x4000CAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ScriptableController instance;

	[Token(Token = "0x4000CAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PrefabControllerScriptableObject m_prefabs_controller_SO;

	[Token(Token = "0x4000CAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SongControllerScriptableObject m_songs_controller_SO;

	[Token(Token = "0x4000CAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TVCinematicsShotControllerScriptableObject m_shots_controller_SO;

	[Token(Token = "0x170000B9")]
	public PrefabControllerScriptableObject _prefabs_controller_SO
	{
		[Token(Token = "0x6000A75")]
		[Address(RVA = "0xD2AEBC", Offset = "0xD2AEBC", VA = "0xD2AEBC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000BA")]
	public SongControllerScriptableObject _songs_controller_SO
	{
		[Token(Token = "0x6000A77")]
		[Address(RVA = "0xD2B8D4", Offset = "0xD2B8D4", VA = "0xD2B8D4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000BB")]
	public TVCinematicsShotControllerScriptableObject _shots_controller_SO
	{
		[Token(Token = "0x6000A79")]
		[Address(RVA = "0xD2B9AC", Offset = "0xD2B9AC", VA = "0xD2B9AC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000A74")]
	[Address(RVA = "0xD2B7E0", Offset = "0xD2B7E0", VA = "0xD2B7E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A76")]
	[Address(RVA = "0xD2B8AC", Offset = "0xD2B8AC", VA = "0xD2B8AC")]
	public void UnloadPrefabs()
	{
	}

	[Token(Token = "0x6000A78")]
	[Address(RVA = "0xD2B984", Offset = "0xD2B984", VA = "0xD2B984")]
	public void UnloadSongs()
	{
	}

	[Token(Token = "0x6000A7A")]
	[Address(RVA = "0xD2BA5C", Offset = "0xD2BA5C", VA = "0xD2BA5C")]
	public void UnloadShots()
	{
	}

	[Token(Token = "0x6000A7B")]
	[Address(RVA = "0xD2B3EC", Offset = "0xD2B3EC", VA = "0xD2B3EC")]
	public void UnloadAll()
	{
	}

	[Token(Token = "0x6000A7C")]
	[Address(RVA = "0xD2BA84", Offset = "0xD2BA84", VA = "0xD2BA84")]
	public ScriptableController()
	{
	}
}
[Token(Token = "0x20001DB")]
public enum PrefabType
{
	[Token(Token = "0x4000CB1")]
	NONE,
	[Token(Token = "0x4000CB2")]
	DRUMS,
	[Token(Token = "0x4000CB3")]
	DRUMSTICKS,
	[Token(Token = "0x4000CB4")]
	LEFT_HAND,
	[Token(Token = "0x4000CB5")]
	RIGHT_HAND,
	[Token(Token = "0x4000CB6")]
	HANDS,
	[Token(Token = "0x4000CB7")]
	SPECIAL_ITEM,
	[Token(Token = "0x4000CB8")]
	RIG
}
[Token(Token = "0x20001DC")]
public class Singleton<T> : MonoBehaviour where T : MonoBehaviour
{
	[Token(Token = "0x4000CB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool m_ShuttingDown;

	[Token(Token = "0x4000CBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static object m_Lock;

	[Token(Token = "0x4000CBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static T m_Instance;

	[Token(Token = "0x170000BC")]
	public static T Instance
	{
		[Token(Token = "0x6000A7D")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000A7E")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000A7F")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000A80")]
	public Singleton()
	{
	}
}
[Serializable]
[Token(Token = "0x20001DD")]
public class SongInfo
{
	[Token(Token = "0x4000CBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private SongDifficulty Difficulty;

	[Token(Token = "0x4000CBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	public uint HighScore;

	[Token(Token = "0x4000CBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public uint Chain;

	[Token(Token = "0x4000CBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	public uint HitRate;

	[Token(Token = "0x4000CC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public uint PerfectRate;

	[Token(Token = "0x4000CC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	public uint GoodRate;

	[Token(Token = "0x4000CC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public uint NormalRate;

	[Token(Token = "0x4000CC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	public bool Completed;

	[Token(Token = "0x4000CC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	[SerializeField]
	public bool Failed;

	[Token(Token = "0x4000CC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
	[SerializeField]
	public bool HasRanked;

	[Token(Token = "0x6000A82")]
	[Address(RVA = "0xD2BA8C", Offset = "0xD2BA8C", VA = "0xD2BA8C")]
	public SongInfo()
	{
	}

	[Token(Token = "0x6000A83")]
	[Address(RVA = "0xD2BA94", Offset = "0xD2BA94", VA = "0xD2BA94")]
	public SongInfo(SongDifficulty _Difficulty, uint _HighScore, uint _Chain, uint _HitRate, uint _PerfectRate, uint _GoodRate, uint _NormalRate, bool _Completed, bool _Failed, bool _HasRanked)
	{
	}

	[Token(Token = "0x6000A84")]
	[Address(RVA = "0xD2BB24", Offset = "0xD2BB24", VA = "0xD2BB24")]
	public Ranking GetRank()
	{
		return default(Ranking);
	}

	[Token(Token = "0x6000A85")]
	[Address(RVA = "0xD2BCA8", Offset = "0xD2BCA8", VA = "0xD2BCA8")]
	public SongDifficulty GetDifficulty()
	{
		return default(SongDifficulty);
	}
}
[Serializable]
[Token(Token = "0x20001DE")]
public struct UnlockConditionInfo
{
	[Token(Token = "0x4000CC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public UnlockCondition ConditionType;

	[Token(Token = "0x4000CC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public int Value;
}
[Token(Token = "0x20001DF")]
public enum UnlockCondition
{
	[Token(Token = "0x4000CC9")]
	CompleteSong,
	[Token(Token = "0x4000CCA")]
	NumberStars
}
[Token(Token = "0x20001E0")]
public enum Ranking
{
	[Token(Token = "0x4000CCC")]
	none,
	[Token(Token = "0x4000CCD")]
	D,
	[Token(Token = "0x4000CCE")]
	C,
	[Token(Token = "0x4000CCF")]
	B,
	[Token(Token = "0x4000CD0")]
	A,
	[Token(Token = "0x4000CD1")]
	S,
	[Token(Token = "0x4000CD2")]
	F,
	[Token(Token = "0x4000CD3")]
	SS
}
[Serializable]
[Token(Token = "0x20001E1")]
public class SongInfoCampaign
{
	[Token(Token = "0x4000CD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	public int Id;

	[Token(Token = "0x4000CD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	public int Id_Song;

	[Token(Token = "0x4000CD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public StarCondition[] StarConditions;

	[Token(Token = "0x4000CD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public SongDifficulty Difficulty;

	[Token(Token = "0x4000CD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	public VariationMode Variation;

	[Token(Token = "0x4000CD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public uint money_reward;

	[Token(Token = "0x4000CDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	public Escenario scene;

	[Token(Token = "0x4000CDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	public uint HighScore;

	[Token(Token = "0x4000CDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	public uint Chain;

	[Token(Token = "0x4000CDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	public uint HitRate;

	[Token(Token = "0x4000CDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	public uint PerfectRate;

	[Token(Token = "0x4000CDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	public uint GoodRate;

	[Token(Token = "0x4000CE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	public uint NormalRate;

	[Token(Token = "0x4000CE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	public bool Completed;

	[Token(Token = "0x4000CE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	[SerializeField]
	public bool Failed;

	[Token(Token = "0x6000A86")]
	[Address(RVA = "0xD2BCB0", Offset = "0xD2BCB0", VA = "0xD2BCB0")]
	public SongInfoCampaign()
	{
	}

	[Token(Token = "0x6000A87")]
	[Address(RVA = "0xD2BCB8", Offset = "0xD2BCB8", VA = "0xD2BCB8")]
	public SongInfoCampaign(int _Id, int _Id_Song, SongDifficulty _Difficulty, uint _HighScore, uint _Chain, uint _HitRate, uint _PerfectRate, uint _GoodRate, uint _NormalRate, bool _Completed, bool _Failed, StarCondition[] _StarConditions, VariationMode _Variation, uint _money_reward, Escenario _scene)
	{
	}

	[Token(Token = "0x6000A88")]
	[Address(RVA = "0xD2BD98", Offset = "0xD2BD98", VA = "0xD2BD98")]
	public SongInfoCampaign(int _Id, int _Id_Song, SongDifficulty _Difficulty, StarCondition[] _StarConditions, VariationMode _Variation, uint _money_reward, Escenario _scene)
	{
	}

	[Token(Token = "0x6000A89")]
	[Address(RVA = "0xD2BE0C", Offset = "0xD2BE0C", VA = "0xD2BE0C")]
	public void Load(SongInfoCampaignSaveData sicsd)
	{
	}

	[Token(Token = "0x6000A8A")]
	[Address(RVA = "0xD2BEB4", Offset = "0xD2BEB4", VA = "0xD2BEB4")]
	public Ranking GetRank()
	{
		return default(Ranking);
	}

	[Token(Token = "0x6000A8B")]
	[Address(RVA = "0xD2BFB8", Offset = "0xD2BFB8", VA = "0xD2BFB8")]
	public int GetStars()
	{
		return default(int);
	}

	[Token(Token = "0x6000A8C")]
	[Address(RVA = "0xD2BFD4", Offset = "0xD2BFD4", VA = "0xD2BFD4")]
	public int GetUnlockStars()
	{
		return default(int);
	}

	[Token(Token = "0x6000A8D")]
	[Address(RVA = "0xD2C034", Offset = "0xD2C034", VA = "0xD2C034")]
	public SongDifficulty GetDifficulty()
	{
		return default(SongDifficulty);
	}
}
[Token(Token = "0x20001E2")]
public class SongStats : MonoBehaviour
{
	[Token(Token = "0x4000CE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Sprite[] Rank;

	[Token(Token = "0x4000CE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject BaseNota;

	[Token(Token = "0x4000CE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Sprite[] StarsSpriteList;

	[Token(Token = "0x4000CE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Header("Campaign")]
	[SerializeField]
	private GameObject Campaign;

	[Token(Token = "0x4000CE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject Stars;

	[Token(Token = "0x4000CE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private TextMeshProUGUI Name;

	[Token(Token = "0x4000CE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private TextMeshProUGUI Difficulty;

	[Token(Token = "0x4000CEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private TextMeshProUGUI Score;

	[Token(Token = "0x4000CEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private TextMeshProUGUI Chain;

	[Token(Token = "0x4000CEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private TextMeshProUGUI HitRate;

	[Token(Token = "0x4000CED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private TextMeshProUGUI Variation;

	[Token(Token = "0x4000CEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private GameObject PaperParent;

	[Token(Token = "0x4000CEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private GameObject FrameSupportInfo;

	[Token(Token = "0x4000CF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private GameObject ButtonsCampaingParent;

	[Token(Token = "0x4000CF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[Header("Challenge")]
	[SerializeField]
	private GameObject Challenge;

	[Token(Token = "0x4000CF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private TextMeshProUGUI NameC;

	[Token(Token = "0x4000CF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private TextMeshProUGUI DifficultyC;

	[Token(Token = "0x4000CF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private TextMeshProUGUI ScoreC;

	[Token(Token = "0x4000CF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private TextMeshProUGUI ChainC;

	[Token(Token = "0x4000CF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private TextMeshProUGUI HitRateC;

	[Token(Token = "0x4000CF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private Image Note;

	[Token(Token = "0x4000CF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private GameObject ButtonsChallengeParent;

	[Token(Token = "0x4000CF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private GameObject UnlockMoreFrame;

	[Token(Token = "0x4000CFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	[Header("Custom Songs")]
	private GameObject CustomSongs;

	[Token(Token = "0x4000CFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private TextMeshProUGUI CustomSongName;

	[Token(Token = "0x4000CFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private TextMeshProUGUI CustomSongDiffculty;

	[Token(Token = "0x6000A8E")]
	[Address(RVA = "0xD2C03C", Offset = "0xD2C03C", VA = "0xD2C03C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A8F")]
	[Address(RVA = "0xD2C134", Offset = "0xD2C134", VA = "0xD2C134")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000A90")]
	[Address(RVA = "0xD2C22C", Offset = "0xD2C22C", VA = "0xD2C22C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A91")]
	[Address(RVA = "0xD2CDE0", Offset = "0xD2CDE0", VA = "0xD2CDE0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A92")]
	[Address(RVA = "0xD2C450", Offset = "0xD2C450", VA = "0xD2C450")]
	private void ActualizeInformation()
	{
	}

	[Token(Token = "0x6000A93")]
	[Address(RVA = "0xD2D158", Offset = "0xD2D158", VA = "0xD2D158")]
	private void InitPaperStars(SongInfoCampaign songInfoCampaign)
	{
	}

	[Token(Token = "0x6000A94")]
	[Address(RVA = "0xD2CFFC", Offset = "0xD2CFFC", VA = "0xD2CFFC")]
	private void InitStars(SongInfoCampaign songInfoCampaign)
	{
	}

	[Token(Token = "0x6000A95")]
	[Address(RVA = "0xD2D53C", Offset = "0xD2D53C", VA = "0xD2D53C")]
	private void InitVariation(SongInfoCampaign songInfoCampaign)
	{
	}

	[Token(Token = "0x6000A96")]
	[Address(RVA = "0xD2D5C0", Offset = "0xD2D5C0", VA = "0xD2D5C0")]
	private Sprite GetSprite(Ranking _rank)
	{
		return null;
	}

	[Token(Token = "0x6000A97")]
	[Address(RVA = "0xD2D6C0", Offset = "0xD2D6C0", VA = "0xD2D6C0")]
	public SongStats()
	{
	}
}
[Token(Token = "0x20001E3")]
public class AmbientSoundController : MonoBehaviour
{
	[Token(Token = "0x4000CFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isAmbientPlaying;

	[Token(Token = "0x6000A98")]
	[Address(RVA = "0xD2D6C8", Offset = "0xD2D6C8", VA = "0xD2D6C8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A99")]
	[Address(RVA = "0xD2D6CC", Offset = "0xD2D6CC", VA = "0xD2D6CC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A9A")]
	[Address(RVA = "0xD2D6D0", Offset = "0xD2D6D0", VA = "0xD2D6D0", Slot = "4")]
	public virtual void PlayAmbientSound()
	{
	}

	[Token(Token = "0x6000A9B")]
	[Address(RVA = "0xD2D6D4", Offset = "0xD2D6D4", VA = "0xD2D6D4", Slot = "5")]
	public virtual void PauseAmbientSound()
	{
	}

	[Token(Token = "0x6000A9C")]
	[Address(RVA = "0xD2D6D8", Offset = "0xD2D6D8", VA = "0xD2D6D8", Slot = "6")]
	public virtual void StopAmbientSound()
	{
	}

	[Token(Token = "0x6000A9D")]
	[Address(RVA = "0xD2D6DC", Offset = "0xD2D6DC", VA = "0xD2D6DC", Slot = "7")]
	public virtual void StopAll()
	{
	}

	[Token(Token = "0x6000A9E")]
	[Address(RVA = "0xD2D6E0", Offset = "0xD2D6E0", VA = "0xD2D6E0")]
	public AmbientSoundController()
	{
	}
}
[Token(Token = "0x20001E4")]
public class DesertSoundController : AmbientSoundController
{
	[Token(Token = "0x20001E5")]
	[CompilerGenerated]
	private sealed class <PlayAcidRandomSFXIE>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float timestamp;

		[Token(Token = "0x4000D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public DesertSoundController <>4__this;

		[Token(Token = "0x4000D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int randomAS;

		[Token(Token = "0x170000BD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AAF")]
			[Address(RVA = "0xD2E2AC", Offset = "0xD2E2AC", VA = "0xD2E2AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AB1")]
			[Address(RVA = "0xD2E2F4", Offset = "0xD2E2F4", VA = "0xD2E2F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AAC")]
		[Address(RVA = "0xD2DBC4", Offset = "0xD2DBC4", VA = "0xD2DBC4")]
		[DebuggerHidden]
		public <PlayAcidRandomSFXIE>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6000AAD")]
		[Address(RVA = "0xD2E104", Offset = "0xD2E104", VA = "0xD2E104", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AAE")]
		[Address(RVA = "0xD2E108", Offset = "0xD2E108", VA = "0xD2E108", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AB0")]
		[Address(RVA = "0xD2E2B4", Offset = "0xD2E2B4", VA = "0xD2E2B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001E6")]
	[CompilerGenerated]
	private sealed class <PlayDebrisRandomSFXIE>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float timestamp;

		[Token(Token = "0x4000D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public DesertSoundController <>4__this;

		[Token(Token = "0x4000D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int randomAS;

		[Token(Token = "0x170000BF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AB5")]
			[Address(RVA = "0xD2E4A4", Offset = "0xD2E4A4", VA = "0xD2E4A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AB7")]
			[Address(RVA = "0xD2E4EC", Offset = "0xD2E4EC", VA = "0xD2E4EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AB2")]
		[Address(RVA = "0xD2DC80", Offset = "0xD2DC80", VA = "0xD2DC80")]
		[DebuggerHidden]
		public <PlayDebrisRandomSFXIE>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6000AB3")]
		[Address(RVA = "0xD2E2FC", Offset = "0xD2E2FC", VA = "0xD2E2FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AB4")]
		[Address(RVA = "0xD2E300", Offset = "0xD2E300", VA = "0xD2E300", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AB6")]
		[Address(RVA = "0xD2E4AC", Offset = "0xD2E4AC", VA = "0xD2E4AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DesertSoundController instance;

	[Token(Token = "0x4000CFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float loopCaveAmbientASMaxVolume;

	[Token(Token = "0x4000D00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource loopCaveAmbientAS;

	[Token(Token = "0x4000D01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float loopAcidAmbientASMaxVolume;

	[Token(Token = "0x4000D02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioSource loopAcidAmbientAS;

	[Token(Token = "0x4000D03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float[] loopWindAmbientASMaxVolume;

	[Token(Token = "0x4000D04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioSource[] loopWindAmbientAS;

	[Token(Token = "0x4000D05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float loopSandAmbientASMaxVolume;

	[Token(Token = "0x4000D06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioSource loopSandAmbientAS;

	[Token(Token = "0x4000D07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float[] acidASMaxVolume;

	[Token(Token = "0x4000D08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioSource[] acidAS;

	[Token(Token = "0x4000D09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioClip[] acidClipList;

	[Token(Token = "0x4000D0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float lastAcidRandomTimestamp;

	[Token(Token = "0x4000D0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float[] debrisASMaxVolume;

	[Token(Token = "0x4000D0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AudioSource[] debrisAS;

	[Token(Token = "0x4000D0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public AudioClip[] debrisClipList;

	[Token(Token = "0x4000D0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float lastDebrisRandomTimestamp;

	[Token(Token = "0x6000A9F")]
	[Address(RVA = "0xD2D6E8", Offset = "0xD2D6E8", VA = "0xD2D6E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AA0")]
	[Address(RVA = "0xD2D740", Offset = "0xD2D740", VA = "0xD2D740")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AA1")]
	[Address(RVA = "0xD2D744", Offset = "0xD2D744", VA = "0xD2D744")]
	private void LoadMaxSound()
	{
	}

	[Token(Token = "0x6000AA2")]
	[Address(RVA = "0xD2D968", Offset = "0xD2D968", VA = "0xD2D968")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AA3")]
	[Address(RVA = "0xD2D980", Offset = "0xD2D980", VA = "0xD2D980")]
	private void UpdateAcidRandom()
	{
	}

	[Token(Token = "0x6000AA4")]
	[Address(RVA = "0xD2DB30", Offset = "0xD2DB30", VA = "0xD2DB30")]
	[IteratorStateMachine(typeof(<PlayAcidRandomSFXIE>d__22))]
	private IEnumerator PlayAcidRandomSFXIE(float timestamp, int randomAS)
	{
		return null;
	}

	[Token(Token = "0x6000AA5")]
	[Address(RVA = "0xD2DA54", Offset = "0xD2DA54", VA = "0xD2DA54")]
	private void UpdateDebrisRandom()
	{
	}

	[Token(Token = "0x6000AA6")]
	[Address(RVA = "0xD2DBEC", Offset = "0xD2DBEC", VA = "0xD2DBEC")]
	[IteratorStateMachine(typeof(<PlayDebrisRandomSFXIE>d__24))]
	private IEnumerator PlayDebrisRandomSFXIE(float timestamp, int randomAS)
	{
		return null;
	}

	[Token(Token = "0x6000AA7")]
	[Address(RVA = "0xD2DCA8", Offset = "0xD2DCA8", VA = "0xD2DCA8", Slot = "4")]
	public override void PlayAmbientSound()
	{
	}

	[Token(Token = "0x6000AA8")]
	[Address(RVA = "0xD2DF40", Offset = "0xD2DF40", VA = "0xD2DF40", Slot = "5")]
	public override void PauseAmbientSound()
	{
	}

	[Token(Token = "0x6000AA9")]
	[Address(RVA = "0xD2DFD4", Offset = "0xD2DFD4", VA = "0xD2DFD4", Slot = "6")]
	public override void StopAmbientSound()
	{
	}

	[Token(Token = "0x6000AAA")]
	[Address(RVA = "0xD2E068", Offset = "0xD2E068", VA = "0xD2E068", Slot = "7")]
	public override void StopAll()
	{
	}

	[Token(Token = "0x6000AAB")]
	[Address(RVA = "0xD2E0FC", Offset = "0xD2E0FC", VA = "0xD2E0FC")]
	public DesertSoundController()
	{
	}
}
[Token(Token = "0x20001E7")]
public class HighwaySoundController : AmbientSoundController
{
	[Token(Token = "0x20001E8")]
	[CompilerGenerated]
	private sealed class <PlayThunderRandomSFXIE>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float timestamp;

		[Token(Token = "0x4000D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HighwaySoundController <>4__this;

		[Token(Token = "0x4000D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int randomAS;

		[Token(Token = "0x170000C1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AC6")]
			[Address(RVA = "0xD2ED8C", Offset = "0xD2ED8C", VA = "0xD2ED8C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AC8")]
			[Address(RVA = "0xD2EDD4", Offset = "0xD2EDD4", VA = "0xD2EDD4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AC3")]
		[Address(RVA = "0xD2E7FC", Offset = "0xD2E7FC", VA = "0xD2E7FC")]
		[DebuggerHidden]
		public <PlayThunderRandomSFXIE>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6000AC4")]
		[Address(RVA = "0xD2EBE4", Offset = "0xD2EBE4", VA = "0xD2EBE4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AC5")]
		[Address(RVA = "0xD2EBE8", Offset = "0xD2EBE8", VA = "0xD2EBE8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AC7")]
		[Address(RVA = "0xD2ED94", Offset = "0xD2ED94", VA = "0xD2ED94", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static HighwaySoundController instance;

	[Token(Token = "0x4000D1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float loopHighwayAmbientASMaxVolume;

	[Token(Token = "0x4000D1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource loopHighwayAmbientAS;

	[Token(Token = "0x4000D1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float loopFanAmbientASMaxVolume;

	[Token(Token = "0x4000D1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioSource loopFanAmbientAS;

	[Token(Token = "0x4000D1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float loopFanFlyingASMaxVolume;

	[Token(Token = "0x4000D1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioSource loopFanFlyingAS;

	[Token(Token = "0x4000D20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float[] thunderASMaxVolume;

	[Token(Token = "0x4000D21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioSource[] thunderAS;

	[Token(Token = "0x4000D22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioClip[] thunderClipList;

	[Token(Token = "0x4000D23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float lastThunderTimestamp;

	[Token(Token = "0x4000D24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float loopNeonASMaxVolume;

	[Token(Token = "0x4000D25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioSource loopNeonAS;

	[Token(Token = "0x4000D26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float loopNeonFlickASMaxVolume;

	[Token(Token = "0x4000D27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AudioSource loopNeonFlickAS;

	[Token(Token = "0x6000AB8")]
	[Address(RVA = "0xD2E4F4", Offset = "0xD2E4F4", VA = "0xD2E4F4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AB9")]
	[Address(RVA = "0xD2E54C", Offset = "0xD2E54C", VA = "0xD2E54C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000ABA")]
	[Address(RVA = "0xD2E550", Offset = "0xD2E550", VA = "0xD2E550")]
	private void LoadMaxSound()
	{
	}

	[Token(Token = "0x6000ABB")]
	[Address(RVA = "0xD2E688", Offset = "0xD2E688", VA = "0xD2E688")]
	private void Update()
	{
	}

	[Token(Token = "0x6000ABC")]
	[Address(RVA = "0xD2E68C", Offset = "0xD2E68C", VA = "0xD2E68C")]
	private void UpdateThunderRandom()
	{
	}

	[Token(Token = "0x6000ABD")]
	[Address(RVA = "0xD2E768", Offset = "0xD2E768", VA = "0xD2E768")]
	[IteratorStateMachine(typeof(<PlayThunderRandomSFXIE>d__20))]
	private IEnumerator PlayThunderRandomSFXIE(float timestamp, int randomAS)
	{
		return null;
	}

	[Token(Token = "0x6000ABE")]
	[Address(RVA = "0xD2E824", Offset = "0xD2E824", VA = "0xD2E824", Slot = "4")]
	public override void PlayAmbientSound()
	{
	}

	[Token(Token = "0x6000ABF")]
	[Address(RVA = "0xD2EAB0", Offset = "0xD2EAB0", VA = "0xD2EAB0", Slot = "5")]
	public override void PauseAmbientSound()
	{
	}

	[Token(Token = "0x6000AC0")]
	[Address(RVA = "0xD2EB14", Offset = "0xD2EB14", VA = "0xD2EB14", Slot = "6")]
	public override void StopAmbientSound()
	{
	}

	[Token(Token = "0x6000AC1")]
	[Address(RVA = "0xD2EB78", Offset = "0xD2EB78", VA = "0xD2EB78", Slot = "7")]
	public override void StopAll()
	{
	}

	[Token(Token = "0x6000AC2")]
	[Address(RVA = "0xD2EBDC", Offset = "0xD2EBDC", VA = "0xD2EBDC")]
	public HighwaySoundController()
	{
	}
}
[Token(Token = "0x20001E9")]
public class LavaSoundController : AmbientSoundController
{
	[Token(Token = "0x20001EA")]
	[CompilerGenerated]
	private sealed class <PlayRandomSFXIE>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float timestamp;

		[Token(Token = "0x4000D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LavaSoundController <>4__this;

		[Token(Token = "0x4000D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int randomAS;

		[Token(Token = "0x170000C3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AD7")]
			[Address(RVA = "0xD2F380", Offset = "0xD2F380", VA = "0xD2F380", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AD9")]
			[Address(RVA = "0xD2F3C8", Offset = "0xD2F3C8", VA = "0xD2F3C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AD4")]
		[Address(RVA = "0xD2F08C", Offset = "0xD2F08C", VA = "0xD2F08C")]
		[DebuggerHidden]
		public <PlayRandomSFXIE>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6000AD5")]
		[Address(RVA = "0xD2F204", Offset = "0xD2F204", VA = "0xD2F204", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AD6")]
		[Address(RVA = "0xD2F208", Offset = "0xD2F208", VA = "0xD2F208", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AD8")]
		[Address(RVA = "0xD2F388", Offset = "0xD2F388", VA = "0xD2F388", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LavaSoundController instance;

	[Token(Token = "0x4000D2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float loopLavaAmbientASMaxVolume;

	[Token(Token = "0x4000D2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource loopLavaAmbientAS;

	[Token(Token = "0x4000D30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float[] randomSFXAudioSourceMaxVolume;

	[Token(Token = "0x4000D31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioSource[] randomSFXAudioSource;

	[Token(Token = "0x4000D32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip randomLavaSFX;

	[Token(Token = "0x4000D33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float lastLavaRandomTimestamp;

	[Token(Token = "0x6000AC9")]
	[Address(RVA = "0xD2EDDC", Offset = "0xD2EDDC", VA = "0xD2EDDC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000ACA")]
	[Address(RVA = "0xD2EE34", Offset = "0xD2EE34", VA = "0xD2EE34")]
	private void Start()
	{
	}

	[Token(Token = "0x6000ACB")]
	[Address(RVA = "0xD2EF24", Offset = "0xD2EF24", VA = "0xD2EF24")]
	private void Update()
	{
	}

	[Token(Token = "0x6000ACC")]
	[Address(RVA = "0xD2EF28", Offset = "0xD2EF28", VA = "0xD2EF28")]
	private void UpdateLavaRandom()
	{
	}

	[Token(Token = "0x6000ACD")]
	[Address(RVA = "0xD2EFF8", Offset = "0xD2EFF8", VA = "0xD2EFF8")]
	[IteratorStateMachine(typeof(<PlayRandomSFXIE>d__11))]
	private IEnumerator PlayRandomSFXIE(float timestamp, int randomAS)
	{
		return null;
	}

	[Token(Token = "0x6000ACE")]
	[Address(RVA = "0xD2EE38", Offset = "0xD2EE38", VA = "0xD2EE38")]
	private void LoadMaxSound()
	{
	}

	[Token(Token = "0x6000ACF")]
	[Address(RVA = "0xD2F0B4", Offset = "0xD2F0B4", VA = "0xD2F0B4", Slot = "4")]
	public override void PlayAmbientSound()
	{
	}

	[Token(Token = "0x6000AD0")]
	[Address(RVA = "0xD2F190", Offset = "0xD2F190", VA = "0xD2F190", Slot = "5")]
	public override void PauseAmbientSound()
	{
	}

	[Token(Token = "0x6000AD1")]
	[Address(RVA = "0xD2F1B4", Offset = "0xD2F1B4", VA = "0xD2F1B4", Slot = "6")]
	public override void StopAmbientSound()
	{
	}

	[Token(Token = "0x6000AD2")]
	[Address(RVA = "0xD2F1D8", Offset = "0xD2F1D8", VA = "0xD2F1D8", Slot = "7")]
	public override void StopAll()
	{
	}

	[Token(Token = "0x6000AD3")]
	[Address(RVA = "0xD2F1FC", Offset = "0xD2F1FC", VA = "0xD2F1FC")]
	public LavaSoundController()
	{
	}
}
[Token(Token = "0x20001EB")]
public class LobbySoundController : AmbientSoundController
{
	[Token(Token = "0x20001EC")]
	[CompilerGenerated]
	private sealed class <PlayHmdHapticsStartClip>d__45 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LobbySoundController <>4__this;

		[Token(Token = "0x4000D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private KeyValuePair<float, float>[] <HapticsList>5__2;

		[Token(Token = "0x170000C5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AF9")]
			[Address(RVA = "0xD31358", Offset = "0xD31358", VA = "0xD31358", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AFB")]
			[Address(RVA = "0xD313A0", Offset = "0xD313A0", VA = "0xD313A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AF6")]
		[Address(RVA = "0xD2FC30", Offset = "0xD2FC30", VA = "0xD2FC30")]
		[DebuggerHidden]
		public <PlayHmdHapticsStartClip>d__45(int <>1__state)
		{
		}

		[Token(Token = "0x6000AF7")]
		[Address(RVA = "0xD30E4C", Offset = "0xD30E4C", VA = "0xD30E4C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AF8")]
		[Address(RVA = "0xD30E50", Offset = "0xD30E50", VA = "0xD30E50", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AFA")]
		[Address(RVA = "0xD31360", Offset = "0xD31360", VA = "0xD31360", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001ED")]
	[CompilerGenerated]
	private sealed class <PlayPreviewIE>d__47 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float timestamp;

		[Token(Token = "0x4000D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LobbySoundController <>4__this;

		[Token(Token = "0x170000C7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AFF")]
			[Address(RVA = "0xD314E0", Offset = "0xD314E0", VA = "0xD314E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B01")]
			[Address(RVA = "0xD31528", Offset = "0xD31528", VA = "0xD31528", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AFC")]
		[Address(RVA = "0xD30438", Offset = "0xD30438", VA = "0xD30438")]
		[DebuggerHidden]
		public <PlayPreviewIE>d__47(int <>1__state)
		{
		}

		[Token(Token = "0x6000AFD")]
		[Address(RVA = "0xD313A8", Offset = "0xD313A8", VA = "0xD313A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AFE")]
		[Address(RVA = "0xD313AC", Offset = "0xD313AC", VA = "0xD313AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B00")]
		[Address(RVA = "0xD314E8", Offset = "0xD314E8", VA = "0xD314E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001EE")]
	[CompilerGenerated]
	private sealed class <PlayCarSFXIE>d__54 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float timestamp;

		[Token(Token = "0x4000D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LobbySoundController <>4__this;

		[Token(Token = "0x170000C9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B05")]
			[Address(RVA = "0xD31650", Offset = "0xD31650", VA = "0xD31650", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B07")]
			[Address(RVA = "0xD31698", Offset = "0xD31698", VA = "0xD31698", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B02")]
		[Address(RVA = "0xD307E0", Offset = "0xD307E0", VA = "0xD307E0")]
		[DebuggerHidden]
		public <PlayCarSFXIE>d__54(int <>1__state)
		{
		}

		[Token(Token = "0x6000B03")]
		[Address(RVA = "0xD31530", Offset = "0xD31530", VA = "0xD31530", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B04")]
		[Address(RVA = "0xD31534", Offset = "0xD31534", VA = "0xD31534", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B06")]
		[Address(RVA = "0xD31658", Offset = "0xD31658", VA = "0xD31658", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001EF")]
	[CompilerGenerated]
	private sealed class <PlayPipeSFXIE>d__56 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float timestamp;

		[Token(Token = "0x4000D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LobbySoundController <>4__this;

		[Token(Token = "0x170000CB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B0B")]
			[Address(RVA = "0xD317C0", Offset = "0xD317C0", VA = "0xD317C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B0D")]
			[Address(RVA = "0xD31808", Offset = "0xD31808", VA = "0xD31808", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B08")]
		[Address(RVA = "0xD3088C", Offset = "0xD3088C", VA = "0xD3088C")]
		[DebuggerHidden]
		public <PlayPipeSFXIE>d__56(int <>1__state)
		{
		}

		[Token(Token = "0x6000B09")]
		[Address(RVA = "0xD316A0", Offset = "0xD316A0", VA = "0xD316A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B0A")]
		[Address(RVA = "0xD316A4", Offset = "0xD316A4", VA = "0xD316A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B0C")]
		[Address(RVA = "0xD317C8", Offset = "0xD317C8", VA = "0xD317C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001F0")]
	[CompilerGenerated]
	private sealed class <PlayRandomSFXIE>d__58 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float timestamp;

		[Token(Token = "0x4000D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LobbySoundController <>4__this;

		[Token(Token = "0x4000D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int randomAS;

		[Token(Token = "0x170000CD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B11")]
			[Address(RVA = "0xD319B8", Offset = "0xD319B8", VA = "0xD319B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B13")]
			[Address(RVA = "0xD31A00", Offset = "0xD31A00", VA = "0xD31A00", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B0E")]
		[Address(RVA = "0xD30948", Offset = "0xD30948", VA = "0xD30948")]
		[DebuggerHidden]
		public <PlayRandomSFXIE>d__58(int <>1__state)
		{
		}

		[Token(Token = "0x6000B0F")]
		[Address(RVA = "0xD31810", Offset = "0xD31810", VA = "0xD31810", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B10")]
		[Address(RVA = "0xD31814", Offset = "0xD31814", VA = "0xD31814", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B12")]
		[Address(RVA = "0xD319C0", Offset = "0xD319C0", VA = "0xD319C0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001F1")]
	[CompilerGenerated]
	private sealed class <StopCreditsSongIE>d__61 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LobbySoundController <>4__this;

		[Token(Token = "0x4000D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <fadeoutSpeed>5__2;

		[Token(Token = "0x170000CF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B17")]
			[Address(RVA = "0xD31CC4", Offset = "0xD31CC4", VA = "0xD31CC4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B19")]
			[Address(RVA = "0xD31D0C", Offset = "0xD31D0C", VA = "0xD31D0C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B14")]
		[Address(RVA = "0xD30B20", Offset = "0xD30B20", VA = "0xD30B20")]
		[DebuggerHidden]
		public <StopCreditsSongIE>d__61(int <>1__state)
		{
		}

		[Token(Token = "0x6000B15")]
		[Address(RVA = "0xD31A08", Offset = "0xD31A08", VA = "0xD31A08", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B16")]
		[Address(RVA = "0xD31A0C", Offset = "0xD31A0C", VA = "0xD31A0C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B18")]
		[Address(RVA = "0xD31CCC", Offset = "0xD31CCC", VA = "0xD31CCC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LobbySoundController instance;

	[Token(Token = "0x4000D3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool isPreviewPlaying;

	[Token(Token = "0x4000D3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip startClip;

	[Token(Token = "0x4000D3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IEnumerator currentPlayPreviewCoroutine;

	[Token(Token = "0x4000D3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip[] scratchList;

	[Token(Token = "0x4000D3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float previewTrackASMaxVolume;

	[Token(Token = "0x4000D3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioSource previewTrackAS;

	[Token(Token = "0x4000D40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioClip[] previewTrackClipList;

	[Token(Token = "0x4000D41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float ampliTrackAmbientASMaxVolume;

	[Token(Token = "0x4000D42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioSource ampliTrackAmbientAS;

	[Token(Token = "0x4000D43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioClip[] ampliTrackAmbientClipList;

	[Token(Token = "0x4000D44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioClip[] ampliDemoTrackAmbientClipList;

	[Token(Token = "0x4000D45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float loopFluorescentAmbientASMaxVolume;

	[Token(Token = "0x4000D46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AudioSource loopFluorescentAmbientAS;

	[Token(Token = "0x4000D47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float doorSFXAudioSourceMaxVolume;

	[Token(Token = "0x4000D48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public AudioSource doorSFXAudioSource;

	[Token(Token = "0x4000D49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public AudioClip[] doorSFXList;

	[Token(Token = "0x4000D4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float lastDoorTimestamp;

	[Token(Token = "0x4000D4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float carSFXAudioSourceMaxVolume;

	[Token(Token = "0x4000D4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public AudioSource carSFXAudioSource;

	[Token(Token = "0x4000D4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public AudioClip carSFX;

	[Token(Token = "0x4000D4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float lastCarTimestamp;

	[Token(Token = "0x4000D4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public float pipeSFXAudioSourceMaxVolume;

	[Token(Token = "0x4000D50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public AudioSource pipeSFXAudioSource;

	[Token(Token = "0x4000D51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public AudioClip pipeSFX;

	[Token(Token = "0x4000D52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float lastPipeTimestamp;

	[Token(Token = "0x4000D53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float[] ampliSFXAudioSourceListMaxVolume;

	[Token(Token = "0x4000D54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public AudioSource[] ampliSFXAudioSourceList;

	[Token(Token = "0x4000D55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public AudioClip[] ampliSFXList;

	[Token(Token = "0x4000D56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float lastAmpliTimestamp;

	[Token(Token = "0x4000D57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public float creditsASMaxVolume;

	[Token(Token = "0x4000D58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public AudioClip creditsClip;

	[Token(Token = "0x4000D59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public AudioSource creditsAS;

	[Token(Token = "0x4000D5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool bCreditsIsStopped;

	[Token(Token = "0x4000D5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x101")]
	private bool bCreditsCorutineStarted;

	[Token(Token = "0x4000D5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x102")]
	private bool isStopPreviewTrackBack;

	[Token(Token = "0x4000D5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private float last_time_no_playing_drums;

	[Token(Token = "0x4000D5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private float min_time_for_no_playing;

	[NonSerialized]
	[Token(Token = "0x4000D5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	public float last_global_hit_time_stamp;

	[Token(Token = "0x4000D60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private float next_playing_time;

	[NonSerialized]
	[Token(Token = "0x4000D61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public bool playing_drums;

	[Token(Token = "0x6000ADA")]
	[Address(RVA = "0xD2F3D0", Offset = "0xD2F3D0", VA = "0xD2F3D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000ADB")]
	[Address(RVA = "0xD2F594", Offset = "0xD2F594", VA = "0xD2F594")]
	private void Start()
	{
	}

	[Token(Token = "0x6000ADC")]
	[Address(RVA = "0xD2F5C4", Offset = "0xD2F5C4", VA = "0xD2F5C4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000ADD")]
	[Address(RVA = "0xD2FA68", Offset = "0xD2FA68", VA = "0xD2FA68")]
	public void PlayStartClip()
	{
	}

	[Token(Token = "0x6000ADE")]
	[Address(RVA = "0xD2FBBC", Offset = "0xD2FBBC", VA = "0xD2FBBC")]
	[IteratorStateMachine(typeof(<PlayHmdHapticsStartClip>d__45))]
	private IEnumerator PlayHmdHapticsStartClip()
	{
		return null;
	}

	[Token(Token = "0x6000ADF")]
	[Address(RVA = "0xD2FC58", Offset = "0xD2FC58", VA = "0xD2FC58")]
	public void PlayPreviewTrack(SongTrack songTrack)
	{
	}

	[Token(Token = "0x6000AE0")]
	[Address(RVA = "0xD303B4", Offset = "0xD303B4", VA = "0xD303B4")]
	[IteratorStateMachine(typeof(<PlayPreviewIE>d__47))]
	private IEnumerator PlayPreviewIE(float timestamp)
	{
		return null;
	}

	[Token(Token = "0x6000AE1")]
	[Address(RVA = "0xD30460", Offset = "0xD30460", VA = "0xD30460")]
	public void StopPreviewTrack()
	{
	}

	[Token(Token = "0x6000AE2")]
	[Address(RVA = "0xD3049C", Offset = "0xD3049C", VA = "0xD3049C")]
	public void StopPreviewTrackBack()
	{
	}

	[Token(Token = "0x6000AE3")]
	[Address(RVA = "0xD2F5F4", Offset = "0xD2F5F4", VA = "0xD2F5F4")]
	private void UpdateAmpliTrackAmbient()
	{
	}

	[Token(Token = "0x6000AE4")]
	[Address(RVA = "0xD2F7A0", Offset = "0xD2F7A0", VA = "0xD2F7A0")]
	private void UpdateDoorRandom()
	{
	}

	[Token(Token = "0x6000AE5")]
	[Address(RVA = "0xD305EC", Offset = "0xD305EC", VA = "0xD305EC")]
	private void PlayDoorSFXIE()
	{
	}

	[Token(Token = "0x6000AE6")]
	[Address(RVA = "0xD2F844", Offset = "0xD2F844", VA = "0xD2F844")]
	private void UpdateCarRandom()
	{
	}

	[Token(Token = "0x6000AE7")]
	[Address(RVA = "0xD3075C", Offset = "0xD3075C", VA = "0xD3075C")]
	[IteratorStateMachine(typeof(<PlayCarSFXIE>d__54))]
	private IEnumerator PlayCarSFXIE(float timestamp)
	{
		return null;
	}

	[Token(Token = "0x6000AE8")]
	[Address(RVA = "0xD2F8EC", Offset = "0xD2F8EC", VA = "0xD2F8EC")]
	private void UpdatePipeRandom()
	{
	}

	[Token(Token = "0x6000AE9")]
	[Address(RVA = "0xD30808", Offset = "0xD30808", VA = "0xD30808")]
	[IteratorStateMachine(typeof(<PlayPipeSFXIE>d__56))]
	private IEnumerator PlayPipeSFXIE(float timestamp)
	{
		return null;
	}

	[Token(Token = "0x6000AEA")]
	[Address(RVA = "0xD2F994", Offset = "0xD2F994", VA = "0xD2F994")]
	private void UpdateAmpliRandom()
	{
	}

	[Token(Token = "0x6000AEB")]
	[Address(RVA = "0xD308B4", Offset = "0xD308B4", VA = "0xD308B4")]
	[IteratorStateMachine(typeof(<PlayRandomSFXIE>d__58))]
	private IEnumerator PlayRandomSFXIE(float timestamp, int randomAS)
	{
		return null;
	}

	[Token(Token = "0x6000AEC")]
	[Address(RVA = "0xD30970", Offset = "0xD30970", VA = "0xD30970")]
	public void PlayCreditsSong()
	{
	}

	[Token(Token = "0x6000AED")]
	[Address(RVA = "0xD30A74", Offset = "0xD30A74", VA = "0xD30A74")]
	public void StopCreditsSong()
	{
	}

	[Token(Token = "0x6000AEE")]
	[Address(RVA = "0xD30AAC", Offset = "0xD30AAC", VA = "0xD30AAC")]
	[IteratorStateMachine(typeof(<StopCreditsSongIE>d__61))]
	private IEnumerator StopCreditsSongIE()
	{
		return null;
	}

	[Token(Token = "0x6000AEF")]
	[Address(RVA = "0xD2F430", Offset = "0xD2F430", VA = "0xD2F430")]
	private void LoadMaxSound()
	{
	}

	[Token(Token = "0x6000AF0")]
	[Address(RVA = "0xD30B48", Offset = "0xD30B48", VA = "0xD30B48")]
	public void UpdateAmbienVolume()
	{
	}

	[Token(Token = "0x6000AF1")]
	[Address(RVA = "0xD30C40", Offset = "0xD30C40", VA = "0xD30C40", Slot = "4")]
	public override void PlayAmbientSound()
	{
	}

	[Token(Token = "0x6000AF2")]
	[Address(RVA = "0xD30D84", Offset = "0xD30D84", VA = "0xD30D84", Slot = "5")]
	public override void PauseAmbientSound()
	{
	}

	[Token(Token = "0x6000AF3")]
	[Address(RVA = "0xD30DBC", Offset = "0xD30DBC", VA = "0xD30DBC", Slot = "6")]
	public override void StopAmbientSound()
	{
	}

	[Token(Token = "0x6000AF4")]
	[Address(RVA = "0xD30DF4", Offset = "0xD30DF4", VA = "0xD30DF4", Slot = "7")]
	public override void StopAll()
	{
	}

	[Token(Token = "0x6000AF5")]
	[Address(RVA = "0xD30E3C", Offset = "0xD30E3C", VA = "0xD30E3C")]
	public LobbySoundController()
	{
	}
}
[Token(Token = "0x20001F2")]
public class Spawner : MonoBehaviour
{
	[Token(Token = "0x4000D7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> enemies;

	[Token(Token = "0x4000D7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<GameObject> spawned;

	[Token(Token = "0x4000D7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject enemyGoal;

	[Token(Token = "0x4000D7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject enemyGoalEasy;

	[Token(Token = "0x4000D7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform enemyGoalOffset;

	[Token(Token = "0x4000D80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float alphaEasy;

	[Token(Token = "0x4000D81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float radious;

	[Token(Token = "0x4000D82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public uint spawnerID;

	[Token(Token = "0x6000B1A")]
	[Address(RVA = "0xD31D14", Offset = "0xD31D14", VA = "0xD31D14")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B1B")]
	[Address(RVA = "0xD31E74", Offset = "0xD31E74", VA = "0xD31E74")]
	public GameObject Spawn(TemplateEnemy _enemy)
	{
		return null;
	}

	[Token(Token = "0x6000B1C")]
	[Address(RVA = "0xD325B0", Offset = "0xD325B0", VA = "0xD325B0")]
	private bool CheckSplitSiamese(TemplateEnemy _enemy)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B1D")]
	[Address(RVA = "0xD32710", Offset = "0xD32710", VA = "0xD32710")]
	private Vector3 GetSiamesSpawnOffset(TemplateEnemy _enemy)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000B1E")]
	[Address(RVA = "0xD32934", Offset = "0xD32934", VA = "0xD32934")]
	public void AddToSpawned(GameObject _enemy)
	{
	}

	[Token(Token = "0x6000B1F")]
	[Address(RVA = "0xD32A2C", Offset = "0xD32A2C", VA = "0xD32A2C")]
	public List<GameObject> GetEnemiesSpawned()
	{
		return null;
	}

	[Token(Token = "0x6000B20")]
	[Address(RVA = "0xD32A34", Offset = "0xD32A34", VA = "0xD32A34")]
	public void DeleteEnemies()
	{
	}

	[Token(Token = "0x6000B21")]
	[Address(RVA = "0xD32B90", Offset = "0xD32B90", VA = "0xD32B90")]
	public void Remove(int _id)
	{
	}

	[Token(Token = "0x6000B22")]
	[Address(RVA = "0xD32D08", Offset = "0xD32D08", VA = "0xD32D08")]
	public Spawner()
	{
	}
}
[Token(Token = "0x20001F3")]
public class SpecialItem : MonoBehaviour
{
	[Token(Token = "0x4000D83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Store Info")]
	public Vector3 storePos;

	[Token(Token = "0x4000D84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 storeRot;

	[Token(Token = "0x4000D85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 storeScale;

	[Token(Token = "0x4000D86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material storeLockedMT;

	[Token(Token = "0x6000B23")]
	[Address(RVA = "0xD33D10", Offset = "0xD33D10", VA = "0xD33D10")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B24")]
	[Address(RVA = "0xD33D14", Offset = "0xD33D14", VA = "0xD33D14")]
	public void InitForStore(Transform parent, bool is_unlocked)
	{
	}

	[Token(Token = "0x6000B25")]
	[Address(RVA = "0xD33E34", Offset = "0xD33E34", VA = "0xD33E34")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B26")]
	[Address(RVA = "0xD33E38", Offset = "0xD33E38", VA = "0xD33E38")]
	public SpecialItem()
	{
	}
}
[Token(Token = "0x20001F4")]
public class Spin : MonoBehaviour
{
	[Token(Token = "0x4000D87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 size;

	[Token(Token = "0x4000D88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float xRotation;

	[Token(Token = "0x4000D89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float yRotation;

	[Token(Token = "0x4000D8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float zRotation;

	[Token(Token = "0x4000D8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float maxSizeLimit;

	[Token(Token = "0x4000D8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float minSizeLimit;

	[Token(Token = "0x4000D8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool makeSmall;

	[Token(Token = "0x6000B27")]
	[Address(RVA = "0xD33E40", Offset = "0xD33E40", VA = "0xD33E40")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B28")]
	[Address(RVA = "0xD33F68", Offset = "0xD33F68", VA = "0xD33F68")]
	public Spin()
	{
	}
}
[Serializable]
[Token(Token = "0x20001F5")]
public class StarCondition
{
	[Token(Token = "0x4000D8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public StarConditionEnum type;

	[Token(Token = "0x4000D8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float value;

	[Token(Token = "0x4000D90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public uint money_reward;

	[Token(Token = "0x4000D91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	public bool Completed;

	[Token(Token = "0x6000B29")]
	[Address(RVA = "0xD33F9C", Offset = "0xD33F9C", VA = "0xD33F9C")]
	public StarCondition(StarConditionEnum _type, float _value, uint _money_reward)
	{
	}
}
[Serializable]
[Token(Token = "0x20001F6")]
public enum StarConditionEnum
{
	[Token(Token = "0x4000D93")]
	COMPLETED_SONG,
	[Token(Token = "0x4000D94")]
	MIN_SCORE,
	[Token(Token = "0x4000D95")]
	MIN_CHARGED_HITS,
	[Token(Token = "0x4000D96")]
	MIN_CHAIN,
	[Token(Token = "0x4000D97")]
	MIN_HIT_RATE,
	[Token(Token = "0x4000D98")]
	MIN_PERFECT_HIT,
	[Token(Token = "0x4000D99")]
	MIN_GOOD_HIT,
	[Token(Token = "0x4000D9A")]
	MIN_LIFE,
	[Token(Token = "0x4000D9B")]
	MAX_HIT_RECEIVED
}
[Token(Token = "0x20001F7")]
[DisallowMultipleComponent]
public class SteamManager : MonoBehaviour
{
	[Token(Token = "0x170000D1")]
	public static bool Initialized
	{
		[Token(Token = "0x6000B2A")]
		[Address(RVA = "0xD33FDC", Offset = "0xD33FDC", VA = "0xD33FDC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000B2B")]
	[Address(RVA = "0xD33FE4", Offset = "0xD33FE4", VA = "0xD33FE4")]
	public SteamManager()
	{
	}
}
[Token(Token = "0x20001F8")]
public class StickInventoryInteractable : XRBaseInteractable
{
	[Token(Token = "0x6000B2C")]
	[Address(RVA = "0xD33FEC", Offset = "0xD33FEC", VA = "0xD33FEC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B2D")]
	[Address(RVA = "0xD33FF0", Offset = "0xD33FF0", VA = "0xD33FF0", Slot = "65")]
	protected override void OnSelectEntered(SelectEnterEventArgs interactor)
	{
	}

	[Token(Token = "0x6000B2E")]
	[Address(RVA = "0xD33FF8", Offset = "0xD33FF8", VA = "0xD33FF8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B2F")]
	[Address(RVA = "0xD33FFC", Offset = "0xD33FFC", VA = "0xD33FFC")]
	public StickInventoryInteractable()
	{
	}
}
[Token(Token = "0x20001F9")]
public class StickStartPlay : MonoBehaviour
{
	[Token(Token = "0x6000B30")]
	[Address(RVA = "0xD34004", Offset = "0xD34004", VA = "0xD34004")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B31")]
	[Address(RVA = "0xD340B8", Offset = "0xD340B8", VA = "0xD340B8")]
	public StickStartPlay()
	{
	}
}
[Token(Token = "0x20001FA")]
public class StoreContentBlock : MonoBehaviour
{
	[Token(Token = "0x4000D9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public StoreContentBlockItem[] storeItemList;

	[Token(Token = "0x4000D9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<uint> id_item_list;

	[Token(Token = "0x4000D9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<StoreItemType> item_type_list;

	[Token(Token = "0x6000B32")]
	[Address(RVA = "0xD340C0", Offset = "0xD340C0", VA = "0xD340C0")]
	public void Start()
	{
	}

	[Token(Token = "0x6000B33")]
	[Address(RVA = "0xD340C4", Offset = "0xD340C4", VA = "0xD340C4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000B34")]
	[Address(RVA = "0xD340C8", Offset = "0xD340C8", VA = "0xD340C8")]
	public bool AddItem(uint id, StoreItemType type)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B35")]
	[Address(RVA = "0xD34208", Offset = "0xD34208", VA = "0xD34208")]
	public bool HasMaxItemIds()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B36")]
	[Address(RVA = "0xD34258", Offset = "0xD34258", VA = "0xD34258")]
	public void Init()
	{
	}

	[Token(Token = "0x6000B37")]
	[Address(RVA = "0xD344BC", Offset = "0xD344BC", VA = "0xD344BC")]
	public void CheckPosition()
	{
	}

	[Token(Token = "0x6000B38")]
	[Address(RVA = "0xD34708", Offset = "0xD34708", VA = "0xD34708")]
	public StoreContentBlock()
	{
	}
}
[Token(Token = "0x20001FB")]
public class StoreContentBlockItem : MonoBehaviour
{
	[Token(Token = "0x4000D9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private uint id_item;

	[Token(Token = "0x4000DA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private StoreItemType item_type;

	[Token(Token = "0x4000DA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI name_text;

	[Token(Token = "0x4000DA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI price_text;

	[Token(Token = "0x4000DA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject check_img;

	[Token(Token = "0x4000DA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject lock_img;

	[Token(Token = "0x4000DA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject dollar_img;

	[Token(Token = "0x4000DA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject icon_img;

	[Token(Token = "0x4000DA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject base_img;

	[Token(Token = "0x4000DA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject shadow_img;

	[Token(Token = "0x4000DA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public List<Sprite> icon_type_img;

	[Token(Token = "0x4000DAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Sprite[] LockSprites;

	[Token(Token = "0x4000DAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private GameObject Lock;

	[Token(Token = "0x4000DAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private GameObject Notification;

	[Token(Token = "0x6000B39")]
	[Address(RVA = "0xD347E0", Offset = "0xD347E0", VA = "0xD347E0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B3A")]
	[Address(RVA = "0xD34390", Offset = "0xD34390", VA = "0xD34390")]
	public void Init(uint id, StoreItemType type)
	{
	}

	[Token(Token = "0x6000B3B")]
	[Address(RVA = "0xD34BE4", Offset = "0xD34BE4", VA = "0xD34BE4")]
	private void InitRarity(uint id_rarity)
	{
	}

	[Token(Token = "0x6000B3C")]
	[Address(RVA = "0xD348A0", Offset = "0xD348A0", VA = "0xD348A0")]
	private void InitIcon(StoreItemType type)
	{
	}

	[Token(Token = "0x6000B3D")]
	[Address(RVA = "0xD34938", Offset = "0xD34938", VA = "0xD34938")]
	private void InitStatus(StoreItemInfo itemInfo)
	{
	}

	[Token(Token = "0x6000B3E")]
	[Address(RVA = "0xD34EB0", Offset = "0xD34EB0", VA = "0xD34EB0")]
	private bool HasEquippedItem(uint id_item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B3F")]
	[Address(RVA = "0xD34F44", Offset = "0xD34F44", VA = "0xD34F44")]
	public void ShowInfo()
	{
	}

	[Token(Token = "0x6000B40")]
	[Address(RVA = "0xD35048", Offset = "0xD35048", VA = "0xD35048")]
	public void SetSelected(bool is_selected)
	{
	}

	[Token(Token = "0x6000B41")]
	[Address(RVA = "0xD351AC", Offset = "0xD351AC", VA = "0xD351AC")]
	public uint GetIdItem()
	{
		return default(uint);
	}

	[Token(Token = "0x6000B42")]
	[Address(RVA = "0xD351B4", Offset = "0xD351B4", VA = "0xD351B4")]
	public StoreItemType GetItemType()
	{
		return default(StoreItemType);
	}

	[Token(Token = "0x6000B43")]
	[Address(RVA = "0xD34518", Offset = "0xD34518", VA = "0xD34518")]
	public void CheckPosition()
	{
	}

	[Token(Token = "0x6000B44")]
	[Address(RVA = "0xD34D88", Offset = "0xD34D88", VA = "0xD34D88")]
	private void NotificationAnimation()
	{
	}

	[Token(Token = "0x6000B45")]
	[Address(RVA = "0xD351BC", Offset = "0xD351BC", VA = "0xD351BC")]
	public void HideNotification()
	{
	}

	[Token(Token = "0x6000B46")]
	[Address(RVA = "0xD3524C", Offset = "0xD3524C", VA = "0xD3524C")]
	public StoreContentBlockItem()
	{
	}
}
[Token(Token = "0x20001FC")]
public class TexturePanner : MonoBehaviour
{
	[Token(Token = "0x4000DAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float scrollSpeedX;

	[Token(Token = "0x4000DAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float scrollSpeedY;

	[Token(Token = "0x4000DAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer rend;

	[Token(Token = "0x4000DB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool X;

	[Token(Token = "0x4000DB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool Y;

	[Token(Token = "0x4000DB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float offsetX;

	[Token(Token = "0x4000DB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float offsetY;

	[Token(Token = "0x4000DB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float initX;

	[Token(Token = "0x4000DB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float initY;

	[Token(Token = "0x6000B48")]
	[Address(RVA = "0xD352B0", Offset = "0xD352B0", VA = "0xD352B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B49")]
	[Address(RVA = "0xD35308", Offset = "0xD35308", VA = "0xD35308")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B4A")]
	[Address(RVA = "0xD353BC", Offset = "0xD353BC", VA = "0xD353BC")]
	public TexturePanner()
	{
	}
}
[Token(Token = "0x20001FD")]
public class ChangeSpritesStart : MonoBehaviour
{
	[Token(Token = "0x4000DB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private UIImageAnimation UIImageAnimation;

	[Token(Token = "0x4000DB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Sprite[] spriteListNormal;

	[Token(Token = "0x4000DB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Sprite[] spriteListPunch;

	[Token(Token = "0x4000DB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Sprite[] spriteListOne;

	[Token(Token = "0x6000B4B")]
	[Address(RVA = "0xD353CC", Offset = "0xD353CC", VA = "0xD353CC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B4C")]
	[Address(RVA = "0xD35530", Offset = "0xD35530", VA = "0xD35530")]
	public ChangeSpritesStart()
	{
	}
}
[Token(Token = "0x20001FE")]
public class TutorialController : MonoBehaviour
{
	[Token(Token = "0x2000201")]
	[CompilerGenerated]
	private sealed class <PlayBackgroundMusicIE>d__101 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutorialController <>4__this;

		[Token(Token = "0x4000DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <maxVolume>5__2;

		[Token(Token = "0x4000E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <fadeinSpeed>5__3;

		[Token(Token = "0x4000E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <isOnMaxVolume>5__4;

		[Token(Token = "0x170000D2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B83")]
			[Address(RVA = "0xD3A818", Offset = "0xD3A818", VA = "0xD3A818", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B85")]
			[Address(RVA = "0xD3A860", Offset = "0xD3A860", VA = "0xD3A860", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B80")]
		[Address(RVA = "0xD3A2C0", Offset = "0xD3A2C0", VA = "0xD3A2C0")]
		[DebuggerHidden]
		public <PlayBackgroundMusicIE>d__101(int <>1__state)
		{
		}

		[Token(Token = "0x6000B81")]
		[Address(RVA = "0xD3A5E8", Offset = "0xD3A5E8", VA = "0xD3A5E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B82")]
		[Address(RVA = "0xD3A5EC", Offset = "0xD3A5EC", VA = "0xD3A5EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B84")]
		[Address(RVA = "0xD3A820", Offset = "0xD3A820", VA = "0xD3A820", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000202")]
	[CompilerGenerated]
	private sealed class <PauseBackgroundMusicIE>d__103 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutorialController <>4__this;

		[Token(Token = "0x4000E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <fadeoutSpeed>5__2;

		[Token(Token = "0x170000D4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B89")]
			[Address(RVA = "0xD3AAD8", Offset = "0xD3AAD8", VA = "0xD3AAD8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B8B")]
			[Address(RVA = "0xD3AB20", Offset = "0xD3AB20", VA = "0xD3AB20", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B86")]
		[Address(RVA = "0xD3A35C", Offset = "0xD3A35C", VA = "0xD3A35C")]
		[DebuggerHidden]
		public <PauseBackgroundMusicIE>d__103(int <>1__state)
		{
		}

		[Token(Token = "0x6000B87")]
		[Address(RVA = "0xD3A868", Offset = "0xD3A868", VA = "0xD3A868", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B88")]
		[Address(RVA = "0xD3A86C", Offset = "0xD3A86C", VA = "0xD3A86C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B8A")]
		[Address(RVA = "0xD3AAE0", Offset = "0xD3AAE0", VA = "0xD3AAE0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000DBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static TutorialController instance;

	[Token(Token = "0x4000DBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TutorialStepEnum current_step;

	[Token(Token = "0x4000DBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<string> text_list;

	[Token(Token = "0x4000DBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] frame_image_list;

	[Token(Token = "0x4000DBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject frame_image_parent;

	[Token(Token = "0x4000DBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject frame_press_A;

	[Token(Token = "0x4000DC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshProUGUI text_body;

	[Token(Token = "0x4000DC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMeshProUGUI snare_text;

	[Token(Token = "0x4000DC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMeshProUGUI kick_text;

	[Token(Token = "0x4000DC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TextMeshProUGUI crush_text;

	[Token(Token = "0x4000DC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TextMeshProUGUI ride_text;

	[Token(Token = "0x4000DC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Image snare_check_image;

	[Token(Token = "0x4000DC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Image kick_check_image;

	[Token(Token = "0x4000DC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Image crush_check_image;

	[Token(Token = "0x4000DC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Image ride_check_image;

	[Token(Token = "0x4000DC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Canvas canvas;

	[Token(Token = "0x4000DCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public AudioClip menuNextSFX;

	[Token(Token = "0x4000DCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public AudioClip winSFX;

	[Token(Token = "0x4000DCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Image grab_right_progress_bar;

	[Token(Token = "0x4000DCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Image grab_left_progress_bar;

	[Token(Token = "0x4000DCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject grab_right_back_image;

	[Token(Token = "0x4000DCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject grab_left_back_image;

	[Token(Token = "0x4000DD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject grab_right_front_image;

	[Token(Token = "0x4000DD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject grab_left_front_image;

	[Token(Token = "0x4000DD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject grab_left_gamepad_back_image;

	[Token(Token = "0x4000DD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject grab_left_gamepad_front_image;

	[Token(Token = "0x4000DD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject grab_right_gamepad_front_image_static;

	[Token(Token = "0x4000DD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject grab_right_gamepad_back_image;

	[Token(Token = "0x4000DD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject grab_right_gamepad_front_image;

	[Token(Token = "0x4000DD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObject grab_left_gamepad_front_image_static;

	[Token(Token = "0x4000DD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public AudioClip background_music_ac;

	[Token(Token = "0x4000DD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public AudioSource background_music_as;

	[Token(Token = "0x4000DDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private float background_music_initial_volume;

	[Token(Token = "0x4000DDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private bool background_music_is_paused;

	[Token(Token = "0x4000DDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x115")]
	private bool stop_background_corutine_started;

	[Token(Token = "0x4000DDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private GameObject DemoPopUp;

	[Token(Token = "0x4000DDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[SerializeField]
	private Transform Panel;

	[Token(Token = "0x4000DDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[SerializeField]
	private GameObject gordiSpriteHelper;

	[Token(Token = "0x4000DE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[SerializeField]
	private ControllerAnim[] controllerAnims;

	[Token(Token = "0x4000DE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private byte snare_hits_count;

	[Token(Token = "0x4000DE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x139")]
	private byte kick_hits_count;

	[Token(Token = "0x4000DE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13A")]
	private byte crush_count;

	[Token(Token = "0x4000DE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13B")]
	private byte ride_count;

	[Token(Token = "0x4000DE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private byte max_hits_count;

	[Token(Token = "0x4000DE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private float grabTimestamp;

	[Token(Token = "0x4000DE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private float autoNextTimestamp;

	[Token(Token = "0x4000DE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private float hitDrumsTimestamp;

	[Token(Token = "0x4000DE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private float perfectLoopTimestamp;

	[Token(Token = "0x4000DEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private float tutorialCompletedTimestamp;

	[Token(Token = "0x4000DEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	private bool bEnemySpawned;

	[Token(Token = "0x4000DEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x155")]
	private bool bEnemyPaused;

	[Token(Token = "0x4000DED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x156")]
	private byte fat_hits_count;

	[Token(Token = "0x4000DEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x157")]
	private bool isPlayingSongWithMusic;

	[Token(Token = "0x4000DEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private bool isAlredyCanvasSetToShow;

	[Token(Token = "0x4000DF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x159")]
	private bool isPlayingLoopPerfect;

	[Token(Token = "0x4000DF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15A")]
	private byte perfect_hits_count;

	[Token(Token = "0x4000DF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15B")]
	private bool hasFailedWithMusic;

	[Token(Token = "0x4000DF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	private bool is_paused;

	[Token(Token = "0x4000DF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private float initialVolume;

	[Token(Token = "0x4000DF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private bool gordiSpriteHelperSpawned;

	[Token(Token = "0x6000B4D")]
	[Address(RVA = "0xD35538", Offset = "0xD35538", VA = "0xD35538")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B4E")]
	[Address(RVA = "0xD35604", Offset = "0xD35604", VA = "0xD35604")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B4F")]
	[Address(RVA = "0xD36B8C", Offset = "0xD36B8C", VA = "0xD36B8C")]
	public TutorialStepEnum GetCurrentStep()
	{
		return default(TutorialStepEnum);
	}

	[Token(Token = "0x6000B50")]
	[Address(RVA = "0xD35734", Offset = "0xD35734", VA = "0xD35734")]
	private void InitControllerSprites()
	{
	}

	[Token(Token = "0x6000B51")]
	[Address(RVA = "0xD35B64", Offset = "0xD35B64", VA = "0xD35B64")]
	private void InitText()
	{
	}

	[Token(Token = "0x6000B52")]
	[Address(RVA = "0xD36B94", Offset = "0xD36B94", VA = "0xD36B94")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B53")]
	[Address(RVA = "0xD37020", Offset = "0xD37020", VA = "0xD37020")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000B54")]
	[Address(RVA = "0xD370A8", Offset = "0xD370A8", VA = "0xD370A8")]
	private void ResetTimeStamps()
	{
	}

	[Token(Token = "0x6000B55")]
	[Address(RVA = "0xD370C0", Offset = "0xD370C0", VA = "0xD370C0")]
	private void NextStep()
	{
	}

	[Token(Token = "0x6000B56")]
	[Address(RVA = "0xD370F0", Offset = "0xD370F0", VA = "0xD370F0")]
	private void SetActiveCanvas(bool bActive)
	{
	}

	[Token(Token = "0x6000B57")]
	[Address(RVA = "0xD371F0", Offset = "0xD371F0", VA = "0xD371F0")]
	private void SetActiveFramePressA(bool bActive)
	{
	}

	[Token(Token = "0x6000B58")]
	[Address(RVA = "0xD372C4", Offset = "0xD372C4", VA = "0xD372C4")]
	private void SetText()
	{
	}

	[Token(Token = "0x6000B59")]
	[Address(RVA = "0xD37620", Offset = "0xD37620", VA = "0xD37620")]
	private void SetTextImageFrame()
	{
	}

	[Token(Token = "0x6000B5A")]
	[Address(RVA = "0xD36668", Offset = "0xD36668", VA = "0xD36668")]
	private void SetStep()
	{
	}

	[Token(Token = "0x6000B5B")]
	[Address(RVA = "0xD37038", Offset = "0xD37038", VA = "0xD37038")]
	public void CheckConditionsToNextStep()
	{
	}

	[Token(Token = "0x6000B5C")]
	[Address(RVA = "0xD37070", Offset = "0xD37070", VA = "0xD37070")]
	public void UpdateStep()
	{
	}

	[Token(Token = "0x6000B5D")]
	[Address(RVA = "0xD3909C", Offset = "0xD3909C", VA = "0xD3909C")]
	public void GrabStick(HandEnum hand, bool bGrab)
	{
	}

	[Token(Token = "0x6000B5E")]
	[Address(RVA = "0xD386A0", Offset = "0xD386A0", VA = "0xD386A0")]
	public void CheckIsAlreadyGrabbedStick()
	{
	}

	[Token(Token = "0x6000B5F")]
	[Address(RVA = "0xD38800", Offset = "0xD38800", VA = "0xD38800")]
	private void CheckGrabCondition(HandEnum handToCheck)
	{
	}

	[Token(Token = "0x6000B60")]
	[Address(RVA = "0xD38884", Offset = "0xD38884", VA = "0xD38884")]
	private void CheckHitDrumsCondition()
	{
	}

	[Token(Token = "0x6000B61")]
	[Address(RVA = "0xD39134", Offset = "0xD39134", VA = "0xD39134")]
	public void HitDrums(IconsType iconsType)
	{
	}

	[Token(Token = "0x6000B62")]
	[Address(RVA = "0xD38CA4", Offset = "0xD38CA4", VA = "0xD38CA4")]
	public void UpdateHitDemon()
	{
	}

	[Token(Token = "0x6000B63")]
	[Address(RVA = "0xD38954", Offset = "0xD38954", VA = "0xD38954")]
	private void CheckHitDemonCondition()
	{
	}

	[Token(Token = "0x6000B64")]
	[Address(RVA = "0xD38B90", Offset = "0xD38B90", VA = "0xD38B90")]
	private void CheckLoopPerfectCondition()
	{
	}

	[Token(Token = "0x6000B65")]
	[Address(RVA = "0xD38F28", Offset = "0xD38F28", VA = "0xD38F28")]
	private void UpdatePlayLoopPefect()
	{
	}

	[Token(Token = "0x6000B66")]
	[Address(RVA = "0xD393FC", Offset = "0xD393FC", VA = "0xD393FC")]
	private void UpdatePerfectLoopText()
	{
	}

	[Token(Token = "0x6000B67")]
	[Address(RVA = "0xD396AC", Offset = "0xD396AC", VA = "0xD396AC")]
	public void AddPerfectCount()
	{
	}

	[Token(Token = "0x6000B68")]
	[Address(RVA = "0xD3736C", Offset = "0xD3736C", VA = "0xD3736C")]
	private bool CheckUpdateTryWithMusicFailed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B69")]
	[Address(RVA = "0xD39704", Offset = "0xD39704", VA = "0xD39704")]
	private void UpdatePlayWithSongText()
	{
	}

	[Token(Token = "0x6000B6A")]
	[Address(RVA = "0xD38FE8", Offset = "0xD38FE8", VA = "0xD38FE8")]
	private void UpdatePlayWithSong()
	{
	}

	[Token(Token = "0x6000B6B")]
	[Address(RVA = "0xD399B4", Offset = "0xD399B4", VA = "0xD399B4")]
	public void CheckTryWithMusicCompletedCond()
	{
	}

	[Token(Token = "0x6000B6C")]
	[Address(RVA = "0xD39A70", Offset = "0xD39A70", VA = "0xD39A70")]
	private void SetTryWithMusicCompleted()
	{
	}

	[Token(Token = "0x6000B6D")]
	[Address(RVA = "0xD39E40", Offset = "0xD39E40", VA = "0xD39E40")]
	public void ContinueButtonPopupNewUnlock()
	{
	}

	[Token(Token = "0x6000B6E")]
	[Address(RVA = "0xD36B98", Offset = "0xD36B98", VA = "0xD36B98")]
	public void UpdateProgressBar()
	{
	}

	[Token(Token = "0x6000B6F")]
	[Address(RVA = "0xD39F88", Offset = "0xD39F88", VA = "0xD39F88")]
	public void ActivatedTutorialPause()
	{
	}

	[Token(Token = "0x6000B70")]
	[Address(RVA = "0xD39FD4", Offset = "0xD39FD4", VA = "0xD39FD4")]
	public void DesactivatedTutorialPause()
	{
	}

	[Token(Token = "0x6000B71")]
	[Address(RVA = "0xD3A0B8", Offset = "0xD3A0B8", VA = "0xD3A0B8")]
	public void PauseSongOnPausedUI()
	{
	}

	[Token(Token = "0x6000B72")]
	[Address(RVA = "0xD3A10C", Offset = "0xD3A10C", VA = "0xD3A10C")]
	public bool IsPaused()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B73")]
	[Address(RVA = "0xD391F8", Offset = "0xD391F8", VA = "0xD391F8")]
	public void NextStepButton()
	{
	}

	[Token(Token = "0x6000B74")]
	[Address(RVA = "0xD3A114", Offset = "0xD3A114", VA = "0xD3A114")]
	public void NextSongDemo()
	{
	}

	[Token(Token = "0x6000B75")]
	[Address(RVA = "0xD36B0C", Offset = "0xD36B0C", VA = "0xD36B0C")]
	private void PlayBackgroundMusic()
	{
	}

	[Token(Token = "0x6000B76")]
	[Address(RVA = "0xD3A24C", Offset = "0xD3A24C", VA = "0xD3A24C")]
	[IteratorStateMachine(typeof(<PlayBackgroundMusicIE>d__101))]
	private IEnumerator PlayBackgroundMusicIE()
	{
		return null;
	}

	[Token(Token = "0x6000B77")]
	[Address(RVA = "0xD387AC", Offset = "0xD387AC", VA = "0xD387AC")]
	private void PauseBackgroundMusic()
	{
	}

	[Token(Token = "0x6000B78")]
	[Address(RVA = "0xD3A2E8", Offset = "0xD3A2E8", VA = "0xD3A2E8")]
	[IteratorStateMachine(typeof(<PauseBackgroundMusicIE>d__103))]
	private IEnumerator PauseBackgroundMusicIE()
	{
		return null;
	}

	[Token(Token = "0x6000B79")]
	[Address(RVA = "0xD3A384", Offset = "0xD3A384", VA = "0xD3A384")]
	public TutorialController()
	{
	}
}
[Token(Token = "0x2000203")]
public enum TutorialStepEnum
{
	[Token(Token = "0x4000E07")]
	GRAB_RIGHT,
	[Token(Token = "0x4000E08")]
	GRAB_LEFT,
	[Token(Token = "0x4000E09")]
	CAN_GRAB_AGAIN,
	[Token(Token = "0x4000E0A")]
	HIT_DRUMS,
	[Token(Token = "0x4000E0B")]
	LETS_KILL_DEMONS,
	[Token(Token = "0x4000E0C")]
	HIT_RED_DEMON,
	[Token(Token = "0x4000E0D")]
	HIT_YELLOW_DEMON,
	[Token(Token = "0x4000E0E")]
	HIT_BLUE_DEMON,
	[Token(Token = "0x4000E0F")]
	HIT_GREEN_DEMON,
	[Token(Token = "0x4000E10")]
	LOOP_PERFECT_START,
	[Token(Token = "0x4000E11")]
	LOOP_PERFECT,
	[Token(Token = "0x4000E12")]
	TRY_ANOTHER_DEMONS,
	[Token(Token = "0x4000E13")]
	HIT_SIAMES_1,
	[Token(Token = "0x4000E14")]
	HIT_SIAMES_2,
	[Token(Token = "0x4000E15")]
	HIT_FAT_1,
	[Token(Token = "0x4000E16")]
	TRY_WITH_MUSIC,
	[Token(Token = "0x4000E17")]
	TUTORIAL_COMPLETED,
	[Token(Token = "0x4000E18")]
	LENGTH
}
[Serializable]
[Token(Token = "0x2000204")]
public struct ControllerAnim
{
	[Token(Token = "0x4000E19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Sprite[] leftControllerSprites;

	[Token(Token = "0x4000E1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Sprite[] rightControllerSprites;
}
[Token(Token = "0x2000205")]
public class UIImageAnimation : MonoBehaviour
{
	[Token(Token = "0x4000E1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private byte current_id;

	[Token(Token = "0x4000E1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Sprite[] spriteList;

	[Token(Token = "0x4000E1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float timeBetweenSprite;

	[Token(Token = "0x4000E1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float last_timestamp;

	[Token(Token = "0x6000B8C")]
	[Address(RVA = "0xD3AB28", Offset = "0xD3AB28", VA = "0xD3AB28")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B8D")]
	[Address(RVA = "0xD3AC18", Offset = "0xD3AC18", VA = "0xD3AC18")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B8E")]
	[Address(RVA = "0xD3ACDC", Offset = "0xD3ACDC", VA = "0xD3ACDC")]
	public UIImageAnimation()
	{
	}
}
[Token(Token = "0x2000206")]
public class BlindWarningUI : MonoBehaviour
{
	[Token(Token = "0x4000E1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro titleText;

	[Token(Token = "0x4000E20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro secondsText;

	[Token(Token = "0x4000E21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float warningTime;

	[Token(Token = "0x4000E22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float warningStartTimeStamp;

	[Token(Token = "0x4000E23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float initWarningTime;

	[Token(Token = "0x4000E24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool is_activated;

	[Token(Token = "0x6000B8F")]
	[Address(RVA = "0xD3ACEC", Offset = "0xD3ACEC", VA = "0xD3ACEC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B90")]
	[Address(RVA = "0xD3AE7C", Offset = "0xD3AE7C", VA = "0xD3AE7C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000B91")]
	[Address(RVA = "0xD3B00C", Offset = "0xD3B00C", VA = "0xD3B00C")]
	private void Show()
	{
	}

	[Token(Token = "0x6000B92")]
	[Address(RVA = "0xD3B0A8", Offset = "0xD3B0A8", VA = "0xD3B0A8")]
	private void Hide()
	{
	}

	[Token(Token = "0x6000B93")]
	[Address(RVA = "0xD3B144", Offset = "0xD3B144", VA = "0xD3B144")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B94")]
	[Address(RVA = "0xD3B2E4", Offset = "0xD3B2E4", VA = "0xD3B2E4")]
	private void UpdateWarningTime()
	{
	}

	[Token(Token = "0x6000B95")]
	[Address(RVA = "0xD3B40C", Offset = "0xD3B40C", VA = "0xD3B40C")]
	private void UpdateText()
	{
	}

	[Token(Token = "0x6000B96")]
	[Address(RVA = "0xD3B4E8", Offset = "0xD3B4E8", VA = "0xD3B4E8")]
	public void ActivateBlindWarning(float warningTime)
	{
	}

	[Token(Token = "0x6000B97")]
	[Address(RVA = "0xD3B610", Offset = "0xD3B610", VA = "0xD3B610")]
	public BlindWarningUI()
	{
	}
}
[Token(Token = "0x2000207")]
public class ChainManager : MonoBehaviour
{
	[Token(Token = "0x4000E25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public MovingText[] Texts;

	[Token(Token = "0x4000E26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float speed;

	[Token(Token = "0x6000B98")]
	[Address(RVA = "0xD3B618", Offset = "0xD3B618", VA = "0xD3B618")]
	public void ActualizeNumber(int _number)
	{
	}

	[Token(Token = "0x6000B99")]
	[Address(RVA = "0xD3BF8C", Offset = "0xD3BF8C", VA = "0xD3BF8C")]
	private void MoveUp(int _i)
	{
	}

	[Token(Token = "0x6000B9A")]
	[Address(RVA = "0xD3C0AC", Offset = "0xD3C0AC", VA = "0xD3C0AC")]
	private void MoveUpFirst()
	{
	}

	[Token(Token = "0x6000B9B")]
	[Address(RVA = "0xD3C0B4", Offset = "0xD3C0B4", VA = "0xD3C0B4")]
	private void MoveUpSecond()
	{
	}

	[Token(Token = "0x6000B9C")]
	[Address(RVA = "0xD3C0BC", Offset = "0xD3C0BC", VA = "0xD3C0BC")]
	private void ChangeStateToMiddle(int _i)
	{
	}

	[Token(Token = "0x6000B9D")]
	[Address(RVA = "0xD3C270", Offset = "0xD3C270", VA = "0xD3C270")]
	public void ChangeStateToMiddlePrimer()
	{
	}

	[Token(Token = "0x6000B9E")]
	[Address(RVA = "0xD3C278", Offset = "0xD3C278", VA = "0xD3C278")]
	public void ChangeStateToMiddleSecond()
	{
	}

	[Token(Token = "0x6000B9F")]
	[Address(RVA = "0xD3C280", Offset = "0xD3C280", VA = "0xD3C280")]
	public ChainManager()
	{
	}
}
[Serializable]
[Token(Token = "0x2000209")]
public struct MovingText
{
	[Token(Token = "0x4000E29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject Text;

	[Token(Token = "0x4000E2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public MoveState moveState;

	[Token(Token = "0x4000E2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool moving;

	[Token(Token = "0x4000E2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public DG.Tweening.Tween textTween;
}
[Serializable]
[Token(Token = "0x200020A")]
public enum MoveState
{
	[Token(Token = "0x4000E2E")]
	low,
	[Token(Token = "0x4000E2F")]
	middle,
	[Token(Token = "0x4000E30")]
	high,
	[Token(Token = "0x4000E31")]
	toCenter,
	[Token(Token = "0x4000E32")]
	toDisappear
}
[Token(Token = "0x200020B")]
public class DefeatedMenuUI : MonoBehaviour
{
	[Token(Token = "0x4000E33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextMeshProUGUI Progress;

	[Token(Token = "0x4000E34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TextMeshProUGUI Title;

	[Token(Token = "0x4000E35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TextMeshProUGUI difficulty;

	[Token(Token = "0x4000E36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject DefeatedMenu;

	[Token(Token = "0x4000E37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Image FillBar;

	[Token(Token = "0x4000E38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float timeDeath;

	[Token(Token = "0x4000E39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject DemoSticker;

	[Token(Token = "0x6000BAA")]
	[Address(RVA = "0xD3C338", Offset = "0xD3C338", VA = "0xD3C338")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000BAB")]
	[Address(RVA = "0xD3C6BC", Offset = "0xD3C6BC", VA = "0xD3C6BC")]
	public void ActivateDefeatedMenu()
	{
	}

	[Token(Token = "0x6000BAC")]
	[Address(RVA = "0xD3C7D0", Offset = "0xD3C7D0", VA = "0xD3C7D0")]
	public void DeactivateDefeatedMenu()
	{
	}

	[Token(Token = "0x6000BAD")]
	[Address(RVA = "0xD3C8F8", Offset = "0xD3C8F8", VA = "0xD3C8F8")]
	public void SetTimeDeath(float _time)
	{
	}

	[Token(Token = "0x6000BAE")]
	[Address(RVA = "0xD3C900", Offset = "0xD3C900", VA = "0xD3C900")]
	public DefeatedMenuUI()
	{
	}
}
[Token(Token = "0x200020C")]
public class FPSDisplay : MonoBehaviour
{
	[Token(Token = "0x4000E3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private InputActionReference m_InputActionReference;

	[Token(Token = "0x6000BB1")]
	[Address(RVA = "0xD3CAF4", Offset = "0xD3CAF4", VA = "0xD3CAF4")]
	public FPSDisplay()
	{
	}
}
[Token(Token = "0x200020D")]
public class GameplayPauseUI : MonoBehaviour
{
	[Token(Token = "0x200020E")]
	[CompilerGenerated]
	private sealed class <RestartSong>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameplayPauseUI <>4__this;

		[Token(Token = "0x170000D6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BC5")]
			[Address(RVA = "0xD3E2E8", Offset = "0xD3E2E8", VA = "0xD3E2E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BC7")]
			[Address(RVA = "0xD3E330", Offset = "0xD3E330", VA = "0xD3E330", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BC2")]
		[Address(RVA = "0xD3D1A4", Offset = "0xD3D1A4", VA = "0xD3D1A4")]
		[DebuggerHidden]
		public <RestartSong>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6000BC3")]
		[Address(RVA = "0xD3D8A0", Offset = "0xD3D8A0", VA = "0xD3D8A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BC4")]
		[Address(RVA = "0xD3D8A4", Offset = "0xD3D8A4", VA = "0xD3D8A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BC6")]
		[Address(RVA = "0xD3E2F0", Offset = "0xD3E2F0", VA = "0xD3E2F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Button rewindButton;

	[Token(Token = "0x4000E3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Button advanceButton;

	[Token(Token = "0x4000E3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Button retryButton;

	[Token(Token = "0x4000E3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Button resumeButton;

	[Token(Token = "0x4000E3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private TextMeshProUGUI text;

	[Token(Token = "0x4000E40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private TextMeshProUGUI SongName;

	[Token(Token = "0x4000E41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject cD;

	[Token(Token = "0x4000E42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject PauseMenu;

	[Token(Token = "0x4000E43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject demoLabel;

	[Token(Token = "0x4000E44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Header("PauseChallenge")]
	[SerializeField]
	private GameObject ChooseDifficulty;

	[Token(Token = "0x4000E45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool canPause;

	[Token(Token = "0x4000E46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Coroutine startSong;

	[Token(Token = "0x6000BB2")]
	[Address(RVA = "0xD3CAFC", Offset = "0xD3CAFC", VA = "0xD3CAFC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BB3")]
	[Address(RVA = "0xD3CD0C", Offset = "0xD3CD0C", VA = "0xD3CD0C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000BB4")]
	[Address(RVA = "0xD3CC38", Offset = "0xD3CC38", VA = "0xD3CC38")]
	private void ActualizeInfo()
	{
	}

	[Token(Token = "0x6000BB5")]
	[Address(RVA = "0xD3CE08", Offset = "0xD3CE08", VA = "0xD3CE08")]
	public void StartSong()
	{
	}

	[Token(Token = "0x6000BB6")]
	[Address(RVA = "0xD3CEFC", Offset = "0xD3CEFC", VA = "0xD3CEFC")]
	public void Retry()
	{
	}

	[Token(Token = "0x6000BB7")]
	[Address(RVA = "0xD3CFAC", Offset = "0xD3CFAC", VA = "0xD3CFAC")]
	public void Resume()
	{
	}

	[Token(Token = "0x6000BB8")]
	[Address(RVA = "0xD3D190", Offset = "0xD3D190", VA = "0xD3D190")]
	public bool GetCanPause()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BB9")]
	[Address(RVA = "0xD3D198", Offset = "0xD3D198", VA = "0xD3D198")]
	public void SetCanPause(bool _state)
	{
	}

	[Token(Token = "0x6000BBA")]
	[Address(RVA = "0xD3CE88", Offset = "0xD3CE88", VA = "0xD3CE88")]
	[IteratorStateMachine(typeof(<RestartSong>d__20))]
	private IEnumerator RestartSong()
	{
		return null;
	}

	[Token(Token = "0x6000BBB")]
	[Address(RVA = "0xD3D1CC", Offset = "0xD3D1CC", VA = "0xD3D1CC")]
	public void ActivatePauseMenu()
	{
	}

	[Token(Token = "0x6000BBC")]
	[Address(RVA = "0xD3D08C", Offset = "0xD3D08C", VA = "0xD3D08C")]
	public void DeactivatePauseMenu()
	{
	}

	[Token(Token = "0x6000BBD")]
	[Address(RVA = "0xD3D39C", Offset = "0xD3D39C", VA = "0xD3D39C")]
	public void HideUI()
	{
	}

	[Token(Token = "0x6000BBE")]
	[Address(RVA = "0xD3D29C", Offset = "0xD3D29C", VA = "0xD3D29C")]
	public void ShowUI()
	{
	}

	[Token(Token = "0x6000BBF")]
	[Address(RVA = "0xD3D598", Offset = "0xD3D598", VA = "0xD3D598")]
	public GameplayPauseUI()
	{
	}
}
[Token(Token = "0x200020F")]
public class HPHUD : MonoBehaviour
{
	[Token(Token = "0x2000210")]
	[CompilerGenerated]
	private sealed class <NoLookingFadeEffect>d__47 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HPHUD <>4__this;

		[Token(Token = "0x4000E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <fadeSteps>5__2;

		[Token(Token = "0x4000E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <maxSteps>5__3;

		[Token(Token = "0x170000D8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BE6")]
			[Address(RVA = "0xD42CC4", Offset = "0xD42CC4", VA = "0xD42CC4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BE8")]
			[Address(RVA = "0xD42D0C", Offset = "0xD42D0C", VA = "0xD42D0C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BE3")]
		[Address(RVA = "0xD3F3A0", Offset = "0xD3F3A0", VA = "0xD3F3A0")]
		[DebuggerHidden]
		public <NoLookingFadeEffect>d__47(int <>1__state)
		{
		}

		[Token(Token = "0x6000BE4")]
		[Address(RVA = "0xD42780", Offset = "0xD42780", VA = "0xD42780", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BE5")]
		[Address(RVA = "0xD42784", Offset = "0xD42784", VA = "0xD42784", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BE7")]
		[Address(RVA = "0xD42CCC", Offset = "0xD42CCC", VA = "0xD42CCC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> heartsList;

	[Token(Token = "0x4000E4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMesh3D comboMultiTM3D;

	[Token(Token = "0x4000E4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMesh3D comboScoreTM3D;

	[Token(Token = "0x4000E4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float current_percentage;

	[Token(Token = "0x4000E4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material lightOn;

	[Token(Token = "0x4000E4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material lightOff;

	[Token(Token = "0x4000E50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private float lerpTime;

	[Token(Token = "0x4000E51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private float minLimitX;

	[Token(Token = "0x4000E52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private float maxLimitX;

	[Token(Token = "0x4000E53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	private float minLimitY;

	[Token(Token = "0x4000E54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private float maxLimitY;

	[Token(Token = "0x4000E55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SerializeField]
	private float maxLimitZ;

	[Token(Token = "0x4000E56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private float minRad;

	[Token(Token = "0x4000E57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private TextMeshProUGUI comboCount;

	[Token(Token = "0x4000E58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private ChainManager[] chainCount;

	[Token(Token = "0x4000E59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private GameObject[] lights;

	[Token(Token = "0x4000E5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private GameObject ComboPS1;

	[Token(Token = "0x4000E5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private GameObject arrow;

	[Token(Token = "0x4000E5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private GameObject PSFeedbackLife;

	[Token(Token = "0x4000E5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private GameObject LifeMeter;

	[Token(Token = "0x4000E5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private GameObject OneHeart;

	[Token(Token = "0x4000E5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private Material redLifeBackground;

	[Token(Token = "0x4000E60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private Material yellowLifeBackground;

	[Token(Token = "0x4000E61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private Material greenLifeBackground;

	[Token(Token = "0x4000E62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject paperStarsParent;

	[Token(Token = "0x4000E63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private GameObject DemoSticker;

	[Token(Token = "0x4000E64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private SongInfoCampaign songInfoCampaign;

	[Token(Token = "0x4000E65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private DG.Tweening.Tween tween;

	[Token(Token = "0x4000E66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private int oldValue;

	[Token(Token = "0x4000E67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private int oldHearts;

	[Token(Token = "0x4000E68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float oldLifePer;

	[Token(Token = "0x4000E69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	[Header("PSVR2")]
	private GameObject Focus;

	[Token(Token = "0x4000E6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private GameObject EyeMetter;

	[Token(Token = "0x4000E6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[SerializeField]
	private GameObject PSEyeMetter;

	[Token(Token = "0x4000E6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private GameObject EyeMetterBar;

	[Token(Token = "0x4000E6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public Material[] lightsOnPS5;

	[Token(Token = "0x4000E6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public Material[] lightsOffPS5;

	[Token(Token = "0x4000E6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private GameObject focus_ps;

	[Token(Token = "0x4000E70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private int lastComboCount;

	[Token(Token = "0x4000E71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private bool lastNoLookState;

	[Token(Token = "0x4000E72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12D")]
	private bool actualNoLookState;

	[Token(Token = "0x4000E73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private float noLookingThresholdAmmount;

	[Token(Token = "0x4000E74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private float noLookingThreshold;

	[Token(Token = "0x4000E75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private Coroutine fadeEffectCoroutine;

	[Token(Token = "0x6000BC8")]
	[Address(RVA = "0xD3E338", Offset = "0xD3E338", VA = "0xD3E338")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BC9")]
	[Address(RVA = "0xD3E8B4", Offset = "0xD3E8B4", VA = "0xD3E8B4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000BCA")]
	[Address(RVA = "0xD3EA44", Offset = "0xD3EA44", VA = "0xD3EA44")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BCB")]
	[Address(RVA = "0xD3F32C", Offset = "0xD3F32C", VA = "0xD3F32C")]
	[IteratorStateMachine(typeof(<NoLookingFadeEffect>d__47))]
	private IEnumerator NoLookingFadeEffect()
	{
		return null;
	}

	[Token(Token = "0x6000BCC")]
	[Address(RVA = "0xD3F2DC", Offset = "0xD3F2DC", VA = "0xD3F2DC")]
	private void UpdateLightsPS5()
	{
	}

	[Token(Token = "0x6000BCD")]
	[Address(RVA = "0xD3EEA8", Offset = "0xD3EEA8", VA = "0xD3EEA8")]
	private void UpdateNoLookingMechanic()
	{
	}

	[Token(Token = "0x6000BCE")]
	[Address(RVA = "0xD3F820", Offset = "0xD3F820", VA = "0xD3F820")]
	public void UpdateHP(float percentage, bool damage)
	{
	}

	[Token(Token = "0x6000BCF")]
	[Address(RVA = "0xD3FAC8", Offset = "0xD3FAC8", VA = "0xD3FAC8")]
	private void UpdateLifeGauge(float percentage)
	{
	}

	[Token(Token = "0x6000BD0")]
	[Address(RVA = "0xD3FC94", Offset = "0xD3FC94", VA = "0xD3FC94")]
	private void ActivateParticleControler(ColorsLife _color)
	{
	}

	[Token(Token = "0x6000BD1")]
	[Address(RVA = "0xD3FE44", Offset = "0xD3FE44", VA = "0xD3FE44")]
	private void UpdateHearts()
	{
	}

	[Token(Token = "0x6000BD2")]
	[Address(RVA = "0xD3FFE0", Offset = "0xD3FFE0", VA = "0xD3FFE0")]
	public GameObject GetCurrentHeartCharge()
	{
		return null;
	}

	[Token(Token = "0x6000BD3")]
	[Address(RVA = "0xD40090", Offset = "0xD40090", VA = "0xD40090")]
	public int GetCurrentHeartNumber()
	{
		return default(int);
	}

	[Token(Token = "0x6000BD4")]
	[Address(RVA = "0xD40098", Offset = "0xD40098", VA = "0xD40098")]
	public GameObject GetHeartCharge(int _i)
	{
		return null;
	}

	[Token(Token = "0x6000BD5")]
	[Address(RVA = "0xD40124", Offset = "0xD40124", VA = "0xD40124")]
	public bool GetNoLookState()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BD6")]
	[Address(RVA = "0xD3F3C8", Offset = "0xD3F3C8", VA = "0xD3F3C8")]
	public void ActualizeComboCount(int _comboCount, bool bonusUpdate = false)
	{
	}

	[Token(Token = "0x6000BD7")]
	[Address(RVA = "0xD4012C", Offset = "0xD4012C", VA = "0xD4012C")]
	private void ChangeTextAndColor(int _value)
	{
	}

	[Token(Token = "0x6000BD8")]
	[Address(RVA = "0xD3E6CC", Offset = "0xD3E6CC", VA = "0xD3E6CC")]
	public void InitPaperStars()
	{
	}

	[Token(Token = "0x6000BD9")]
	[Address(RVA = "0xD3ED98", Offset = "0xD3ED98", VA = "0xD3ED98")]
	private void UpdatePaperStars()
	{
	}

	[Token(Token = "0x6000BDA")]
	[Address(RVA = "0xD405DC", Offset = "0xD405DC", VA = "0xD405DC")]
	private float GetPaperStarsValue(StarCondition starCondition)
	{
		return default(float);
	}

	[Token(Token = "0x6000BDB")]
	[Address(RVA = "0xD40778", Offset = "0xD40778", VA = "0xD40778")]
	public void SetPaperStarsPlaying(int pos, StarCondition starCondition, float current_value)
	{
	}

	[Token(Token = "0x6000BDC")]
	[Address(RVA = "0xD42430", Offset = "0xD42430", VA = "0xD42430")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000BDD")]
	[Address(RVA = "0xD3DF84", Offset = "0xD3DF84", VA = "0xD3DF84")]
	public void Show()
	{
	}

	[Token(Token = "0x6000BDE")]
	[Address(RVA = "0xD42558", Offset = "0xD42558", VA = "0xD42558")]
	public HPHUD()
	{
	}
}
[Token(Token = "0x2000211")]
public enum ColorsLife
{
	[Token(Token = "0x4000E7C")]
	Green,
	[Token(Token = "0x4000E7D")]
	Yellow,
	[Token(Token = "0x4000E7E")]
	Red
}
[Token(Token = "0x2000212")]
public class LanguageTextStyle : MonoBehaviour
{
	[Token(Token = "0x4000E7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LanguageTextSyle type;

	[Token(Token = "0x4000E80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_FontAsset[] customFontLanguage;

	[Token(Token = "0x6000BE9")]
	[Address(RVA = "0xD42D14", Offset = "0xD42D14", VA = "0xD42D14")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BEA")]
	[Address(RVA = "0xD42D18", Offset = "0xD42D18", VA = "0xD42D18")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000BEB")]
	[Address(RVA = "0xD42D1C", Offset = "0xD42D1C", VA = "0xD42D1C")]
	public void LoadTextStyle()
	{
	}

	[Token(Token = "0x6000BEC")]
	[Address(RVA = "0xD435D8", Offset = "0xD435D8", VA = "0xD435D8")]
	public void LoadRenderModeStyle()
	{
	}

	[Token(Token = "0x6000BED")]
	[Address(RVA = "0xD42E80", Offset = "0xD42E80", VA = "0xD42E80")]
	public void LoadStarsPaperSyle()
	{
	}

	[Token(Token = "0x6000BEE")]
	[Address(RVA = "0xD43438", Offset = "0xD43438", VA = "0xD43438")]
	public void LoadStarsPaperSyleGameplay()
	{
	}

	[Token(Token = "0x6000BEF")]
	[Address(RVA = "0xD42F40", Offset = "0xD42F40", VA = "0xD42F40")]
	public void LoadLoadingTipStyle()
	{
	}

	[Token(Token = "0x6000BF0")]
	[Address(RVA = "0xD430A0", Offset = "0xD430A0", VA = "0xD430A0")]
	public void LoadDemoBodyText()
	{
	}

	[Token(Token = "0x6000BF1")]
	[Address(RVA = "0xD43194", Offset = "0xD43194", VA = "0xD43194")]
	public void LoadTutorialPopupTip()
	{
	}

	[Token(Token = "0x6000BF2")]
	[Address(RVA = "0xD432C4", Offset = "0xD432C4", VA = "0xD432C4")]
	public void LoadUnlockMoreSongPlayingText()
	{
	}

	[Token(Token = "0x6000BF3")]
	[Address(RVA = "0xD42DA4", Offset = "0xD42DA4", VA = "0xD42DA4")]
	public void LoadCustomFontByLanguage()
	{
	}

	[Token(Token = "0x6000BF4")]
	[Address(RVA = "0xD4369C", Offset = "0xD4369C", VA = "0xD4369C")]
	private LanguageEnum GetLanguageEnum()
	{
		return default(LanguageEnum);
	}

	[Token(Token = "0x6000BF5")]
	[Address(RVA = "0xD439B0", Offset = "0xD439B0", VA = "0xD439B0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BF6")]
	[Address(RVA = "0xD439B4", Offset = "0xD439B4", VA = "0xD439B4")]
	public LanguageTextStyle()
	{
	}
}
[Token(Token = "0x2000213")]
public enum LanguageTextSyle
{
	[Token(Token = "0x4000E82")]
	DEFAULT,
	[Token(Token = "0x4000E83")]
	STARS_PAPER_TEXT,
	[Token(Token = "0x4000E84")]
	LOADING_TIP,
	[Token(Token = "0x4000E85")]
	DEMO_BODY_TEXT,
	[Token(Token = "0x4000E86")]
	TUTORIAL_POPUP_TIP,
	[Token(Token = "0x4000E87")]
	UNLOCK_MORE_SONG_PLAYING_TEXT,
	[Token(Token = "0x4000E88")]
	STARS_PAPER_TEXT_GAMEPLAY,
	[Token(Token = "0x4000E89")]
	TEXT_OPTIONS,
	[Token(Token = "0x4000E8A")]
	RENDER_MODE
}
[Token(Token = "0x2000214")]
public enum LanguageEnum
{
	[Token(Token = "0x4000E8C")]
	ENGLISH,
	[Token(Token = "0x4000E8D")]
	SPANISH,
	[Token(Token = "0x4000E8E")]
	RUSSIAN,
	[Token(Token = "0x4000E8F")]
	FRENCH,
	[Token(Token = "0x4000E90")]
	CHINESE,
	[Token(Token = "0x4000E91")]
	KOREAN,
	[Token(Token = "0x4000E92")]
	JAPANESE,
	[Token(Token = "0x4000E93")]
	ITALIAN,
	[Token(Token = "0x4000E94")]
	GERMAN
}
[Token(Token = "0x2000215")]
public class LetterMesh3D : MonoBehaviour
{
	[Token(Token = "0x4000E95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public char letter;

	[Token(Token = "0x4000E96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float marginLeft;

	[Token(Token = "0x4000E97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float marginTop;

	[Token(Token = "0x4000E98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float marginRight;

	[Token(Token = "0x4000E99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float marginBottom;

	[Token(Token = "0x6000BF7")]
	[Address(RVA = "0xD439BC", Offset = "0xD439BC", VA = "0xD439BC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BF8")]
	[Address(RVA = "0xD439C0", Offset = "0xD439C0", VA = "0xD439C0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BF9")]
	[Address(RVA = "0xD439C4", Offset = "0xD439C4", VA = "0xD439C4")]
	public LetterMesh3D()
	{
	}
}
[Token(Token = "0x2000216")]
public class MainMenuUI : MonoBehaviour
{
	[Token(Token = "0x2000218")]
	[CompilerGenerated]
	private sealed class <InitMainCamera>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MainMenuUI <>4__this;

		[Token(Token = "0x170000DA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C2A")]
			[Address(RVA = "0xD47F60", Offset = "0xD47F60", VA = "0xD47F60", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C2C")]
			[Address(RVA = "0xD47FA8", Offset = "0xD47FA8", VA = "0xD47FA8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C27")]
		[Address(RVA = "0xD47D60", Offset = "0xD47D60", VA = "0xD47D60")]
		[DebuggerHidden]
		public <InitMainCamera>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6000C28")]
		[Address(RVA = "0xD47D88", Offset = "0xD47D88", VA = "0xD47D88", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C29")]
		[Address(RVA = "0xD47D8C", Offset = "0xD47D8C", VA = "0xD47D8C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C2B")]
		[Address(RVA = "0xD47F68", Offset = "0xD47F68", VA = "0xD47F68", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200021D")]
	[CompilerGenerated]
	private sealed class <WaitForTransition>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MainMenuUI <>4__this;

		[Token(Token = "0x4000EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int _gameMode;

		[Token(Token = "0x170000DC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C3C")]
			[Address(RVA = "0xD4868C", Offset = "0xD4868C", VA = "0xD4868C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C3E")]
			[Address(RVA = "0xD486D4", Offset = "0xD486D4", VA = "0xD486D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C39")]
		[Address(RVA = "0xD48558", Offset = "0xD48558", VA = "0xD48558")]
		[DebuggerHidden]
		public <WaitForTransition>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6000C3A")]
		[Address(RVA = "0xD48580", Offset = "0xD48580", VA = "0xD48580", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C3B")]
		[Address(RVA = "0xD48584", Offset = "0xD48584", VA = "0xD48584", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C3D")]
		[Address(RVA = "0xD48694", Offset = "0xD48694", VA = "0xD48694", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200021F")]
	[CompilerGenerated]
	private sealed class <>c__DisplayClass28_0
	{
		[Token(Token = "0x4000EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MainMenuUI <>4__this;

		[Token(Token = "0x4000EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 oldLocalScale;

		[Token(Token = "0x4000EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TweenCallback <>9__1;

		[Token(Token = "0x6000C41")]
		[Address(RVA = "0xD48890", Offset = "0xD48890", VA = "0xD48890")]
		public <>c__DisplayClass28_0()
		{
		}

		[Token(Token = "0x6000C42")]
		[Address(RVA = "0xD48898", Offset = "0xD48898", VA = "0xD48898")]
		internal void <SetupSettings>b__0()
		{
		}

		[Token(Token = "0x6000C43")]
		[Address(RVA = "0xD48984", Offset = "0xD48984", VA = "0xD48984")]
		internal void <SetupSettings>b__1()
		{
		}
	}

	[Token(Token = "0x2000220")]
	[CompilerGenerated]
	private sealed class <SetupSettings>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MainMenuUI <>4__this;

		[Token(Token = "0x4000EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private <>c__DisplayClass28_0 <>8__1;

		[Token(Token = "0x170000DE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C47")]
			[Address(RVA = "0xD48EA4", Offset = "0xD48EA4", VA = "0xD48EA4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C49")]
			[Address(RVA = "0xD48EEC", Offset = "0xD48EEC", VA = "0xD48EEC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C44")]
		[Address(RVA = "0xD48B8C", Offset = "0xD48B8C", VA = "0xD48B8C")]
		[DebuggerHidden]
		public <SetupSettings>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x6000C45")]
		[Address(RVA = "0xD48BB4", Offset = "0xD48BB4", VA = "0xD48BB4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C46")]
		[Address(RVA = "0xD48BB8", Offset = "0xD48BB8", VA = "0xD48BB8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C48")]
		[Address(RVA = "0xD48EAC", Offset = "0xD48EAC", VA = "0xD48EAC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000221")]
	[CompilerGenerated]
	private sealed class <SetupChallenge>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MainMenuUI <>4__this;

		[Token(Token = "0x170000E0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C4D")]
			[Address(RVA = "0xD49244", Offset = "0xD49244", VA = "0xD49244", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C4F")]
			[Address(RVA = "0xD4928C", Offset = "0xD4928C", VA = "0xD4928C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C4A")]
		[Address(RVA = "0xD48EF4", Offset = "0xD48EF4", VA = "0xD48EF4")]
		[DebuggerHidden]
		public <SetupChallenge>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x6000C4B")]
		[Address(RVA = "0xD48F1C", Offset = "0xD48F1C", VA = "0xD48F1C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C4C")]
		[Address(RVA = "0xD48F20", Offset = "0xD48F20", VA = "0xD48F20", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C4E")]
		[Address(RVA = "0xD4924C", Offset = "0xD4924C", VA = "0xD4924C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MainMenuUI instance;

	[Token(Token = "0x4000E9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Lobby")]
	[SerializeField]
	public GameObject Lobby;

	[Token(Token = "0x4000E9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("Shop")]
	[SerializeField]
	public GameObject Shop;

	[Token(Token = "0x4000E9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Header("Selector")]
	[SerializeField]
	public GameObject Selector;

	[Token(Token = "0x4000E9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[Header("Settings")]
	public GameObject Settings;

	[Token(Token = "0x4000E9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool TransitionDone;

	[Token(Token = "0x4000EA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Header("StartScreen")]
	public GameObject StartScreen;

	[Token(Token = "0x4000EA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Header("TutorialFirstTimeScreen")]
	public GameObject TutorialFirstTimeScreen;

	[Token(Token = "0x4000EA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Header("PopupNewUnlockScreen")]
	public GameObject PopupNewUnlockScreen;

	[Token(Token = "0x4000EA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Header("TVCinematicScreen")]
	public GameObject TVCinematicScreen;

	[Token(Token = "0x4000EA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Header("CreditsScreen")]
	public GameObject CreditsScreen;

	[Token(Token = "0x4000EA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[Header("CustomChallenge")]
	public GameObject CustomChallenge;

	[Token(Token = "0x4000EA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float loadSceneSongTimestamp;

	[Token(Token = "0x6000BFA")]
	[Address(RVA = "0xD439CC", Offset = "0xD439CC", VA = "0xD439CC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BFB")]
	[Address(RVA = "0xD43AA8", Offset = "0xD43AA8", VA = "0xD43AA8")]
	[IteratorStateMachine(typeof(<InitMainCamera>d__14))]
	private IEnumerator InitMainCamera()
	{
		return null;
	}

	[Token(Token = "0x6000BFC")]
	[Address(RVA = "0xD43B1C", Offset = "0xD43B1C", VA = "0xD43B1C")]
	public void SetDifficulty(int _i)
	{
	}

	[Token(Token = "0x6000BFD")]
	[Address(RVA = "0xD43B78", Offset = "0xD43B78", VA = "0xD43B78")]
	public void SetTrack(int _i)
	{
	}

	[Token(Token = "0x6000BFE")]
	[Address(RVA = "0xD43BDC", Offset = "0xD43BDC", VA = "0xD43BDC")]
	public void SetTrackCampaign(int _i, int id_songs_info_campaign)
	{
	}

	[Token(Token = "0x6000BFF")]
	[Address(RVA = "0xD43C50", Offset = "0xD43C50", VA = "0xD43C50")]
	public void LoadSceneSong()
	{
	}

	[Token(Token = "0x6000C00")]
	[Address(RVA = "0xD43F90", Offset = "0xD43F90", VA = "0xD43F90")]
	public void SetPractice(bool _state)
	{
	}

	[Token(Token = "0x6000C01")]
	[Address(RVA = "0xD43FEC", Offset = "0xD43FEC", VA = "0xD43FEC")]
	public void ActivateLobby()
	{
	}

	[Token(Token = "0x6000C02")]
	[Address(RVA = "0xD44158", Offset = "0xD44158", VA = "0xD44158")]
	public void ActivateAnimationLobby()
	{
	}

	[Token(Token = "0x6000C03")]
	[Address(RVA = "0xD44304", Offset = "0xD44304", VA = "0xD44304")]
	public void ActivateAnimationTutorialFirstTimeScreen()
	{
	}

	[Token(Token = "0x6000C04")]
	[Address(RVA = "0xD445B0", Offset = "0xD445B0", VA = "0xD445B0")]
	public void ActivateAnimationPopupNewUnlock()
	{
	}

	[Token(Token = "0x6000C05")]
	[Address(RVA = "0xD447B4", Offset = "0xD447B4", VA = "0xD447B4")]
	public void SetGameMode(int _gameMode)
	{
	}

	[Token(Token = "0x6000C06")]
	[Address(RVA = "0xD45544", Offset = "0xD45544", VA = "0xD45544")]
	[IteratorStateMachine(typeof(<WaitForTransition>d__25))]
	private IEnumerator WaitForTransition(int _gameMode)
	{
		return null;
	}

	[Token(Token = "0x6000C07")]
	[Address(RVA = "0xD450C0", Offset = "0xD450C0", VA = "0xD450C0")]
	private void SetupLobby()
	{
	}

	[Token(Token = "0x6000C08")]
	[Address(RVA = "0xD452AC", Offset = "0xD452AC", VA = "0xD452AC")]
	private void SetupShop()
	{
	}

	[Token(Token = "0x6000C09")]
	[Address(RVA = "0xD454D0", Offset = "0xD454D0", VA = "0xD454D0")]
	[IteratorStateMachine(typeof(<SetupSettings>d__28))]
	private IEnumerator SetupSettings()
	{
		return null;
	}

	[Token(Token = "0x6000C0A")]
	[Address(RVA = "0xD45370", Offset = "0xD45370", VA = "0xD45370")]
	private void SetupCampaign()
	{
	}

	[Token(Token = "0x6000C0B")]
	[Address(RVA = "0xD4545C", Offset = "0xD4545C", VA = "0xD4545C")]
	[IteratorStateMachine(typeof(<SetupChallenge>d__30))]
	private IEnumerator SetupChallenge()
	{
		return null;
	}

	[Token(Token = "0x6000C0C")]
	[Address(RVA = "0xD45768", Offset = "0xD45768", VA = "0xD45768")]
	public void AcceptButtonPopupNewUnlock()
	{
	}

	[Token(Token = "0x6000C0D")]
	[Address(RVA = "0xD43E04", Offset = "0xD43E04", VA = "0xD43E04")]
	public void ActivateTVCinematicScreen(TVCinematicType tvCinematicType)
	{
	}

	[Token(Token = "0x6000C0E")]
	[Address(RVA = "0xD458D0", Offset = "0xD458D0", VA = "0xD458D0")]
	private void PlayShowTVCinematicScreen(TVCinematicType tvCinematicType)
	{
	}

	[Token(Token = "0x6000C0F")]
	[Address(RVA = "0xD45AB4", Offset = "0xD45AB4", VA = "0xD45AB4")]
	public void DisableTVCinematicScreen()
	{
	}

	[Token(Token = "0x6000C10")]
	[Address(RVA = "0xD45BF4", Offset = "0xD45BF4", VA = "0xD45BF4")]
	private void PlayDisableTVCinematicScreen()
	{
	}

	[Token(Token = "0x6000C11")]
	[Address(RVA = "0xD45DA0", Offset = "0xD45DA0", VA = "0xD45DA0")]
	public void ActivateCreditsScreen()
	{
	}

	[Token(Token = "0x6000C12")]
	[Address(RVA = "0xD45EE0", Offset = "0xD45EE0", VA = "0xD45EE0")]
	public void PlayShowCreditsScreen()
	{
	}

	[Token(Token = "0x6000C13")]
	[Address(RVA = "0xD460BC", Offset = "0xD460BC", VA = "0xD460BC")]
	public void DisableCreditsScreen()
	{
	}

	[Token(Token = "0x6000C14")]
	[Address(RVA = "0xD461FC", Offset = "0xD461FC", VA = "0xD461FC")]
	private void PlayDisableCreditsScreen()
	{
	}

	[Token(Token = "0x6000C15")]
	[Address(RVA = "0xD46438", Offset = "0xD46438", VA = "0xD46438")]
	public void InitTutorial()
	{
	}

	[Token(Token = "0x6000C16")]
	[Address(RVA = "0xD45698", Offset = "0xD45698", VA = "0xD45698")]
	private DG.Tweening.Tween AdvanceTweens(GameObject _target)
	{
		return null;
	}

	[Token(Token = "0x6000C17")]
	[Address(RVA = "0xD44F50", Offset = "0xD44F50", VA = "0xD44F50")]
	private DG.Tweening.Tween WalkBackTweens(GameObject _target)
	{
		return null;
	}

	[Token(Token = "0x6000C18")]
	[Address(RVA = "0xD45008", Offset = "0xD45008", VA = "0xD45008")]
	private DG.Tweening.Tween GoBackTweens(GameObject _target)
	{
		return null;
	}

	[Token(Token = "0x6000C19")]
	[Address(RVA = "0xD455C8", Offset = "0xD455C8", VA = "0xD455C8")]
	private DG.Tweening.Tween ReturnTweens(GameObject _target)
	{
		return null;
	}

	[Token(Token = "0x6000C1A")]
	[Address(RVA = "0xD464D8", Offset = "0xD464D8", VA = "0xD464D8")]
	public MainMenuUI()
	{
	}
}
[Token(Token = "0x200022B")]
public class PopupNewUnlockScreen : MonoBehaviour
{
	[Token(Token = "0x4000EE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI popupText;

	[Token(Token = "0x6000C6B")]
	[Address(RVA = "0xD4A10C", Offset = "0xD4A10C", VA = "0xD4A10C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C6C")]
	[Address(RVA = "0xD4A110", Offset = "0xD4A110", VA = "0xD4A110")]
	public void Init(PopupNewUnlockScreenEnum type)
	{
	}

	[Token(Token = "0x6000C6D")]
	[Address(RVA = "0xD4A280", Offset = "0xD4A280", VA = "0xD4A280")]
	public PopupNewUnlockScreen()
	{
	}
}
[Token(Token = "0x200022C")]
public enum PopupNewUnlockScreenEnum
{
	[Token(Token = "0x4000EE8")]
	NONE,
	[Token(Token = "0x4000EE9")]
	NEW_CHAPTER,
	[Token(Token = "0x4000EEA")]
	NEW_ACT,
	[Token(Token = "0x4000EEB")]
	NEW_ITEM
}
[Token(Token = "0x200022D")]
public class Rail : MonoBehaviour
{
	[Token(Token = "0x4000EEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3[] nodes;

	[Token(Token = "0x4000EED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int nodeCount;

	[Token(Token = "0x6000C6E")]
	[Address(RVA = "0xD4A288", Offset = "0xD4A288", VA = "0xD4A288")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C6F")]
	[Address(RVA = "0xD4A380", Offset = "0xD4A380", VA = "0xD4A380")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C70")]
	[Address(RVA = "0xD4A490", Offset = "0xD4A490", VA = "0xD4A490")]
	public Vector3 ProjectPositionOnRail(Vector3 _pos)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000C71")]
	[Address(RVA = "0xD4A72C", Offset = "0xD4A72C", VA = "0xD4A72C")]
	private int GetClosestNode(Vector3 _pos)
	{
		return default(int);
	}

	[Token(Token = "0x6000C72")]
	[Address(RVA = "0xD4A7CC", Offset = "0xD4A7CC", VA = "0xD4A7CC")]
	private Vector3 ProjectOnSegment(Vector3 _v1, Vector3 _v2, Vector3 _pos)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000C73")]
	[Address(RVA = "0xD4A978", Offset = "0xD4A978", VA = "0xD4A978")]
	public Rail()
	{
	}
}
[Token(Token = "0x200022E")]
public class RailMover : MonoBehaviour
{
	[Token(Token = "0x4000EEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rail rail;

	[Token(Token = "0x4000EEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform lookAt;

	[Token(Token = "0x4000EF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform target;

	[Token(Token = "0x4000EF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool smoothMove;

	[Token(Token = "0x4000EF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float moveSpeed;

	[Token(Token = "0x4000EF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 lastPosition;

	[Token(Token = "0x6000C74")]
	[Address(RVA = "0xD4A980", Offset = "0xD4A980", VA = "0xD4A980")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C75")]
	[Address(RVA = "0xD4AA4C", Offset = "0xD4AA4C", VA = "0xD4AA4C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C76")]
	[Address(RVA = "0xD4AC20", Offset = "0xD4AC20", VA = "0xD4AC20")]
	public RailMover()
	{
	}
}
[Token(Token = "0x200022F")]
public class ScreenFader : MonoBehaviour
{
	[Token(Token = "0x4000EF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private MeshRenderer[] focusMesh;

	[Token(Token = "0x4000EF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Range(0f, 1f)]
	public float alpha;

	[Token(Token = "0x4000EF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Range(0f, 1f)]
	public float duration;

	[Token(Token = "0x4000EF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material[] fadeMaterial;

	[Token(Token = "0x6000C77")]
	[Address(RVA = "0xD4AC38", Offset = "0xD4AC38", VA = "0xD4AC38")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C78")]
	[Address(RVA = "0xD4AC3C", Offset = "0xD4AC3C", VA = "0xD4AC3C")]
	public void SetupFadeFeature()
	{
	}

	[Token(Token = "0x6000C79")]
	[Address(RVA = "0xD4AE34", Offset = "0xD4AE34", VA = "0xD4AE34")]
	public float FadeIn(float _duration = 0f)
	{
		return default(float);
	}

	[Token(Token = "0x6000C7A")]
	[Address(RVA = "0xD4AFD0", Offset = "0xD4AFD0", VA = "0xD4AFD0")]
	public float SetCurrentFade(float endValue)
	{
		return default(float);
	}

	[Token(Token = "0x6000C7B")]
	[Address(RVA = "0xD4B114", Offset = "0xD4B114", VA = "0xD4B114")]
	public float FadeOut(float _duration = 0f)
	{
		return default(float);
	}

	[Token(Token = "0x6000C7C")]
	[Address(RVA = "0xD4B31C", Offset = "0xD4B31C", VA = "0xD4B31C")]
	public ScreenFader()
	{
	}
}
[Token(Token = "0x2000231")]
public class StartScreen : MonoBehaviour
{
	[Token(Token = "0x4000EF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject logo;

	[Token(Token = "0x4000EFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject logo_english;

	[Token(Token = "0x4000EFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject logo_chinese;

	[Token(Token = "0x4000EFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject buttonPlay;

	[Token(Token = "0x4000EFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject demoSticker;

	[Token(Token = "0x6000C7F")]
	[Address(RVA = "0xD4B34C", Offset = "0xD4B34C", VA = "0xD4B34C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C80")]
	[Address(RVA = "0xD4B350", Offset = "0xD4B350", VA = "0xD4B350")]
	public void CheckLanguageLogo()
	{
	}

	[Token(Token = "0x6000C81")]
	[Address(RVA = "0xD4B414", Offset = "0xD4B414", VA = "0xD4B414")]
	public void PlayStartAnimation()
	{
	}

	[Token(Token = "0x6000C82")]
	[Address(RVA = "0xD4B714", Offset = "0xD4B714", VA = "0xD4B714")]
	private void PlayStartAnimationButtonPlay()
	{
	}

	[Token(Token = "0x6000C83")]
	[Address(RVA = "0xD4B8C8", Offset = "0xD4B8C8", VA = "0xD4B8C8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C84")]
	[Address(RVA = "0xD4B8CC", Offset = "0xD4B8CC", VA = "0xD4B8CC")]
	public StartScreen()
	{
	}
}
[Token(Token = "0x2000234")]
public class StartUI : MonoBehaviour
{
	[Token(Token = "0x4000F04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] start_frame_countdown_list;

	[Token(Token = "0x4000F05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material start_frame_coutdown_base_MT;

	[Token(Token = "0x4000F06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material start_frame_coutdown_on_MT;

	[Token(Token = "0x6000C8B")]
	[Address(RVA = "0xD4BB78", Offset = "0xD4BB78", VA = "0xD4BB78")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C8C")]
	[Address(RVA = "0xD4BB7C", Offset = "0xD4BB7C", VA = "0xD4BB7C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C8D")]
	[Address(RVA = "0xD4BB80", Offset = "0xD4BB80", VA = "0xD4BB80")]
	public void SetCountFrames(byte count)
	{
	}

	[Token(Token = "0x6000C8E")]
	[Address(RVA = "0xD4BDAC", Offset = "0xD4BDAC", VA = "0xD4BDAC")]
	public StartUI()
	{
	}
}
[Token(Token = "0x2000235")]
public class SwapWarningUI : MonoBehaviour
{
	[Token(Token = "0x4000F07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro secondsText;

	[Token(Token = "0x4000F08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float warningTime;

	[Token(Token = "0x4000F09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float warningStartTimeStamp;

	[Token(Token = "0x4000F0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float initWarningTime;

	[Token(Token = "0x4000F0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool is_activated;

	[Token(Token = "0x6000C8F")]
	[Address(RVA = "0xD4BDB4", Offset = "0xD4BDB4", VA = "0xD4BDB4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C90")]
	[Address(RVA = "0xD4BF44", Offset = "0xD4BF44", VA = "0xD4BF44")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000C91")]
	[Address(RVA = "0xD4C0D4", Offset = "0xD4C0D4", VA = "0xD4C0D4")]
	private void Show()
	{
	}

	[Token(Token = "0x6000C92")]
	[Address(RVA = "0xD4C170", Offset = "0xD4C170", VA = "0xD4C170")]
	private void Hide()
	{
	}

	[Token(Token = "0x6000C93")]
	[Address(RVA = "0xD4C20C", Offset = "0xD4C20C", VA = "0xD4C20C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C94")]
	[Address(RVA = "0xD4C3D8", Offset = "0xD4C3D8", VA = "0xD4C3D8")]
	private void UpdateWarningTime()
	{
	}

	[Token(Token = "0x6000C95")]
	[Address(RVA = "0xD4C4FC", Offset = "0xD4C4FC", VA = "0xD4C4FC")]
	private void UpdateText()
	{
	}

	[Token(Token = "0x6000C96")]
	[Address(RVA = "0xD4C5D8", Offset = "0xD4C5D8", VA = "0xD4C5D8")]
	public void ActivateSwapWarning(float warningTime)
	{
	}

	[Token(Token = "0x6000C97")]
	[Address(RVA = "0xD4C700", Offset = "0xD4C700", VA = "0xD4C700")]
	public SwapWarningUI()
	{
	}
}
[Token(Token = "0x2000236")]
public class TextMesh3D : MonoBehaviour
{
	[Token(Token = "0x4000F0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string text;

	[Token(Token = "0x4000F0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string lastText;

	[Token(Token = "0x4000F0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMesh3DAlignEnum align;

	[Token(Token = "0x4000F0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private TextMesh3DAlignEnum last_align;

	[Token(Token = "0x4000F10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 initRotation;

	[Token(Token = "0x4000F11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 initScale;

	[Token(Token = "0x4000F12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<LetterMesh3D> letterMesh3DPrefabList;

	[Token(Token = "0x4000F13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<LetterMesh3D> letterMesh3DList;

	[Token(Token = "0x4000F14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool is_in_dotween;

	[Token(Token = "0x6000C98")]
	[Address(RVA = "0xD4C708", Offset = "0xD4C708", VA = "0xD4C708")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C99")]
	[Address(RVA = "0xD4C9EC", Offset = "0xD4C9EC", VA = "0xD4C9EC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C9A")]
	[Address(RVA = "0xD4C7E0", Offset = "0xD4C7E0", VA = "0xD4C7E0")]
	private void SetInitialTransform()
	{
	}

	[Token(Token = "0x6000C9B")]
	[Address(RVA = "0xD4C9F0", Offset = "0xD4C9F0", VA = "0xD4C9F0")]
	private LetterMesh3D GetLetter3D(char letter)
	{
		return null;
	}

	[Token(Token = "0x6000C9C")]
	[Address(RVA = "0xD4CAA8", Offset = "0xD4CAA8", VA = "0xD4CAA8")]
	private void DoDotween()
	{
	}

	[Token(Token = "0x6000C9D")]
	[Address(RVA = "0xD4CC3C", Offset = "0xD4CC3C", VA = "0xD4CC3C")]
	public void SetText(string text)
	{
	}

	[Token(Token = "0x6000C9E")]
	[Address(RVA = "0xD4CF0C", Offset = "0xD4CF0C", VA = "0xD4CF0C")]
	private void InstanciateAlignToLeftText()
	{
	}

	[Token(Token = "0x6000C9F")]
	[Address(RVA = "0xD4DAB8", Offset = "0xD4DAB8", VA = "0xD4DAB8")]
	private void InstanciateAlignToRightText()
	{
	}

	[Token(Token = "0x6000CA0")]
	[Address(RVA = "0xD4D29C", Offset = "0xD4D29C", VA = "0xD4D29C")]
	private void InstanciateAlignToCenterText()
	{
	}

	[Token(Token = "0x6000CA1")]
	[Address(RVA = "0xD4CD8C", Offset = "0xD4CD8C", VA = "0xD4CD8C")]
	public void ClearText()
	{
	}

	[Token(Token = "0x6000CA2")]
	[Address(RVA = "0xD4DE6C", Offset = "0xD4DE6C", VA = "0xD4DE6C")]
	private int[] GetMiddleLettersPos(string input)
	{
		return null;
	}

	[Token(Token = "0x6000CA3")]
	[Address(RVA = "0xD4DF10", Offset = "0xD4DF10", VA = "0xD4DF10")]
	public string GetText()
	{
		return null;
	}

	[Token(Token = "0x6000CA4")]
	[Address(RVA = "0xD4DF18", Offset = "0xD4DF18", VA = "0xD4DF18")]
	public TextMesh3D()
	{
	}
}
[Token(Token = "0x2000238")]
public enum TextMesh3DAlignEnum
{
	[Token(Token = "0x4000F19")]
	LEFT,
	[Token(Token = "0x4000F1A")]
	CENTER,
	[Token(Token = "0x4000F1B")]
	RIGHT
}
[Token(Token = "0x2000239")]
public class TextMeshProFade : MonoBehaviour
{
	[Token(Token = "0x4000F1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float timeSpeedFade;

	[Token(Token = "0x6000CA8")]
	[Address(RVA = "0xD4E0AC", Offset = "0xD4E0AC", VA = "0xD4E0AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CA9")]
	[Address(RVA = "0xD4E0B0", Offset = "0xD4E0B0", VA = "0xD4E0B0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CAA")]
	[Address(RVA = "0xD4E0B4", Offset = "0xD4E0B4", VA = "0xD4E0B4")]
	private void FadeLoop()
	{
	}

	[Token(Token = "0x6000CAB")]
	[Address(RVA = "0xD4E1B4", Offset = "0xD4E1B4", VA = "0xD4E1B4")]
	public TextMeshProFade()
	{
	}
}
[Token(Token = "0x200023A")]
public class ThoughWarningUI : MonoBehaviour
{
	[Token(Token = "0x4000F1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro titleText;

	[Token(Token = "0x4000F1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro secondsText;

	[Token(Token = "0x4000F1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float warningTime;

	[Token(Token = "0x4000F20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float warningStartTimeStamp;

	[Token(Token = "0x4000F21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float initWarningTime;

	[Token(Token = "0x4000F22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool is_activated;

	[Token(Token = "0x6000CAC")]
	[Address(RVA = "0xD4E1C4", Offset = "0xD4E1C4", VA = "0xD4E1C4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CAD")]
	[Address(RVA = "0xD4E354", Offset = "0xD4E354", VA = "0xD4E354")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000CAE")]
	[Address(RVA = "0xD4E4E4", Offset = "0xD4E4E4", VA = "0xD4E4E4")]
	private void Show()
	{
	}

	[Token(Token = "0x6000CAF")]
	[Address(RVA = "0xD4E580", Offset = "0xD4E580", VA = "0xD4E580")]
	private void Hide()
	{
	}

	[Token(Token = "0x6000CB0")]
	[Address(RVA = "0xD4E61C", Offset = "0xD4E61C", VA = "0xD4E61C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CB1")]
	[Address(RVA = "0xD4E7BC", Offset = "0xD4E7BC", VA = "0xD4E7BC")]
	private void UpdateWarningTime()
	{
	}

	[Token(Token = "0x6000CB2")]
	[Address(RVA = "0xD4E8E4", Offset = "0xD4E8E4", VA = "0xD4E8E4")]
	private void UpdateText()
	{
	}

	[Token(Token = "0x6000CB3")]
	[Address(RVA = "0xD4E9C0", Offset = "0xD4E9C0", VA = "0xD4E9C0")]
	public void ActivateThoughWarning(float warningTime)
	{
	}

	[Token(Token = "0x6000CB4")]
	[Address(RVA = "0xD4EAE8", Offset = "0xD4EAE8", VA = "0xD4EAE8")]
	public ThoughWarningUI()
	{
	}
}
[Token(Token = "0x200023B")]
public class TutorialPauseUI : MonoBehaviour
{
	[Token(Token = "0x4000F23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextMeshProUGUI text;

	[Token(Token = "0x4000F24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject PauseMenu;

	[Token(Token = "0x4000F25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject demoLabel;

	[Token(Token = "0x4000F26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool canPause;

	[Token(Token = "0x6000CB5")]
	[Address(RVA = "0xD4EAF0", Offset = "0xD4EAF0", VA = "0xD4EAF0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CB6")]
	[Address(RVA = "0xD4EB5C", Offset = "0xD4EB5C", VA = "0xD4EB5C")]
	private void ActualizeInfo()
	{
	}

	[Token(Token = "0x6000CB7")]
	[Address(RVA = "0xD4EBFC", Offset = "0xD4EBFC", VA = "0xD4EBFC")]
	public void Resume()
	{
	}

	[Token(Token = "0x6000CB8")]
	[Address(RVA = "0xD4ED04", Offset = "0xD4ED04", VA = "0xD4ED04")]
	public bool GetCanPause()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CB9")]
	[Address(RVA = "0xD4ED0C", Offset = "0xD4ED0C", VA = "0xD4ED0C")]
	public void SetCanPause(bool _state)
	{
	}

	[Token(Token = "0x6000CBA")]
	[Address(RVA = "0xD4ED18", Offset = "0xD4ED18", VA = "0xD4ED18")]
	public void ActivatePauseMenu()
	{
	}

	[Token(Token = "0x6000CBB")]
	[Address(RVA = "0xD4EC00", Offset = "0xD4EC00", VA = "0xD4EC00")]
	public void DeactivatePauseMenu()
	{
	}

	[Token(Token = "0x6000CBC")]
	[Address(RVA = "0xD4EEA4", Offset = "0xD4EEA4", VA = "0xD4EEA4")]
	public void HideUI()
	{
	}

	[Token(Token = "0x6000CBD")]
	[Address(RVA = "0xD4EDA4", Offset = "0xD4EDA4", VA = "0xD4EDA4")]
	public void ShowUI()
	{
	}

	[Token(Token = "0x6000CBE")]
	[Address(RVA = "0xD4F11C", Offset = "0xD4F11C", VA = "0xD4F11C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CBF")]
	[Address(RVA = "0xD4F120", Offset = "0xD4F120", VA = "0xD4F120")]
	public TutorialPauseUI()
	{
	}
}
[Token(Token = "0x200023C")]
public class TVCinematicFocus : MonoBehaviour
{
	[Token(Token = "0x200023D")]
	[CompilerGenerated]
	private sealed class <PlayIntroIE>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float start_alpha;

		[Token(Token = "0x4000F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TVCinematicFocus <>4__this;

		[Token(Token = "0x4000F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float speedAlpha;

		[Token(Token = "0x4000F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <currentAlpha>5__2;

		[Token(Token = "0x4000F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <diffAlpha>5__3;

		[Token(Token = "0x170000E2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CCE")]
			[Address(RVA = "0xD4F930", Offset = "0xD4F930", VA = "0xD4F930", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CD0")]
			[Address(RVA = "0xD4F978", Offset = "0xD4F978", VA = "0xD4F978", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CCB")]
		[Address(RVA = "0xD4F63C", Offset = "0xD4F63C", VA = "0xD4F63C")]
		[DebuggerHidden]
		public <PlayIntroIE>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000CCC")]
		[Address(RVA = "0xD4F74C", Offset = "0xD4F74C", VA = "0xD4F74C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CCD")]
		[Address(RVA = "0xD4F750", Offset = "0xD4F750", VA = "0xD4F750", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CCF")]
		[Address(RVA = "0xD4F938", Offset = "0xD4F938", VA = "0xD4F938", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200023E")]
	[CompilerGenerated]
	private sealed class <PlayOutroIE>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float start_alpha;

		[Token(Token = "0x4000F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TVCinematicFocus <>4__this;

		[Token(Token = "0x4000F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float speedAlpha;

		[Token(Token = "0x4000F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <currentAlpha>5__2;

		[Token(Token = "0x4000F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <diffAlpha>5__3;

		[Token(Token = "0x170000E4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CD4")]
			[Address(RVA = "0xD4FB94", Offset = "0xD4FB94", VA = "0xD4FB94", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CD6")]
			[Address(RVA = "0xD4FBDC", Offset = "0xD4FBDC", VA = "0xD4FBDC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CD1")]
		[Address(RVA = "0xD4F6F0", Offset = "0xD4F6F0", VA = "0xD4F6F0")]
		[DebuggerHidden]
		public <PlayOutroIE>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000CD2")]
		[Address(RVA = "0xD4F980", Offset = "0xD4F980", VA = "0xD4F980", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CD3")]
		[Address(RVA = "0xD4F984", Offset = "0xD4F984", VA = "0xD4F984", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CD5")]
		[Address(RVA = "0xD4FB9C", Offset = "0xD4FB9C", VA = "0xD4FB9C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject mesh;

	[Token(Token = "0x4000F28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Color initColor;

	[Token(Token = "0x6000CC3")]
	[Address(RVA = "0xD4F4D4", Offset = "0xD4F4D4", VA = "0xD4F4D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CC4")]
	[Address(RVA = "0xD4F560", Offset = "0xD4F560", VA = "0xD4F560")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CC5")]
	[Address(RVA = "0xD4F564", Offset = "0xD4F564", VA = "0xD4F564")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CC6")]
	[Address(RVA = "0xD4F568", Offset = "0xD4F568", VA = "0xD4F568")]
	public void IntroTVCinematicFocus()
	{
	}

	[Token(Token = "0x6000CC7")]
	[Address(RVA = "0xD4F5B0", Offset = "0xD4F5B0", VA = "0xD4F5B0")]
	[IteratorStateMachine(typeof(<PlayIntroIE>d__6))]
	private IEnumerator PlayIntroIE(float start_alpha, float speedAlpha)
	{
		return null;
	}

	[Token(Token = "0x6000CC8")]
	[Address(RVA = "0xD4F664", Offset = "0xD4F664", VA = "0xD4F664")]
	[IteratorStateMachine(typeof(<PlayOutroIE>d__7))]
	private IEnumerator PlayOutroIE(float start_alpha, float speedAlpha)
	{
		return null;
	}

	[Token(Token = "0x6000CC9")]
	[Address(RVA = "0xD4F718", Offset = "0xD4F718", VA = "0xD4F718")]
	public void OutroTVCinematicFocus()
	{
	}

	[Token(Token = "0x6000CCA")]
	[Address(RVA = "0xD4F744", Offset = "0xD4F744", VA = "0xD4F744")]
	public TVCinematicFocus()
	{
	}
}
[Token(Token = "0x200023F")]
public class TVCinematicsController : MonoBehaviour
{
	[Token(Token = "0x2000241")]
	[CompilerGenerated]
	private sealed class <PlayIntrDistorsionIE>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x4000F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TVCinematicsController <>4__this;

		[Token(Token = "0x4000F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <i>5__2;

		[Token(Token = "0x170000E6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CEA")]
			[Address(RVA = "0xD512A0", Offset = "0xD512A0", VA = "0xD512A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CEC")]
			[Address(RVA = "0xD512E8", Offset = "0xD512E8", VA = "0xD512E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CE7")]
		[Address(RVA = "0xD50C54", Offset = "0xD50C54", VA = "0xD50C54")]
		[DebuggerHidden]
		public <PlayIntrDistorsionIE>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x6000CE8")]
		[Address(RVA = "0xD50F30", Offset = "0xD50F30", VA = "0xD50F30", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CE9")]
		[Address(RVA = "0xD50F34", Offset = "0xD50F34", VA = "0xD50F34", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CEB")]
		[Address(RVA = "0xD512A8", Offset = "0xD512A8", VA = "0xD512A8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000242")]
	[CompilerGenerated]
	private sealed class <>c__DisplayClass30_0
	{
		[Token(Token = "0x4000F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TVCinematicsController <>4__this;

		[Token(Token = "0x4000F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 oldLocalScale;

		[Token(Token = "0x4000F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TweenCallback <>9__1;

		[Token(Token = "0x6000CED")]
		[Address(RVA = "0xD512F0", Offset = "0xD512F0", VA = "0xD512F0")]
		public <>c__DisplayClass30_0()
		{
		}

		[Token(Token = "0x6000CEE")]
		[Address(RVA = "0xD512F8", Offset = "0xD512F8", VA = "0xD512F8")]
		internal void <AutoNextShot>b__0()
		{
		}

		[Token(Token = "0x6000CEF")]
		[Address(RVA = "0xD513F4", Offset = "0xD513F4", VA = "0xD513F4")]
		internal void <AutoNextShot>b__1()
		{
		}
	}

	[Token(Token = "0x2000243")]
	[CompilerGenerated]
	private sealed class <AutoNextShot>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TVCinematicsController <>4__this;

		[Token(Token = "0x4000F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float delay;

		[Token(Token = "0x4000F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private <>c__DisplayClass30_0 <>8__1;

		[Token(Token = "0x170000E8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CF3")]
			[Address(RVA = "0xD518CC", Offset = "0xD518CC", VA = "0xD518CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CF5")]
			[Address(RVA = "0xD51914", Offset = "0xD51914", VA = "0xD51914", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CF0")]
		[Address(RVA = "0xD50E80", Offset = "0xD50E80", VA = "0xD50E80")]
		[DebuggerHidden]
		public <AutoNextShot>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x6000CF1")]
		[Address(RVA = "0xD51518", Offset = "0xD51518", VA = "0xD51518", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CF2")]
		[Address(RVA = "0xD5151C", Offset = "0xD5151C", VA = "0xD5151C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CF4")]
		[Address(RVA = "0xD518D4", Offset = "0xD518D4", VA = "0xD518D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TVCinematicType currentTVCinematicType;

	[Token(Token = "0x4000F38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject tvMesh;

	[Token(Token = "0x4000F39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TVCinematicFocus tVCinematicFocus;

	[Token(Token = "0x4000F3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float tvASMaxVolume;

	[Token(Token = "0x4000F3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Sprite[] distorsionSpriteList;

	[Token(Token = "0x4000F3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioClip distorsionClip;

	[Token(Token = "0x4000F3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Image imageShot;

	[Token(Token = "0x4000F3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Image blackShotImage;

	[Token(Token = "0x4000F3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject nextButton;

	[Token(Token = "0x4000F40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject backButton;

	[Token(Token = "0x4000F41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Material[] nextButtonMTList;

	[Token(Token = "0x4000F42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject titleShotTipParent;

	[Token(Token = "0x4000F43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public List<TVCinematicsShotScriptableObject> current_shots;

	[Token(Token = "0x4000F44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private ushort current_shot_index;

	[Token(Token = "0x4000F45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
	private bool is_shots_started;

	[Token(Token = "0x4000F46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x83")]
	private bool can_go_next_shot;

	[Token(Token = "0x4000F47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool is_finished;

	[Token(Token = "0x4000F48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float default_delay_go_next_shot;

	[Token(Token = "0x4000F49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public AudioClip[] audioActList;

	[Token(Token = "0x6000CD7")]
	[Address(RVA = "0xD4FBE4", Offset = "0xD4FBE4", VA = "0xD4FBE4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CD8")]
	[Address(RVA = "0xD4FCA4", Offset = "0xD4FCA4", VA = "0xD4FCA4")]
	private void LoadMaxSound()
	{
	}

	[Token(Token = "0x6000CD9")]
	[Address(RVA = "0xD4FD04", Offset = "0xD4FD04", VA = "0xD4FD04")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CDA")]
	[Address(RVA = "0xD4FD08", Offset = "0xD4FD08", VA = "0xD4FD08")]
	private void ClearCurrentShots()
	{
	}

	[Token(Token = "0x6000CDB")]
	[Address(RVA = "0xD4FE20", Offset = "0xD4FE20", VA = "0xD4FE20")]
	public void Init(TVCinematicType tvCinematicType)
	{
	}

	[Token(Token = "0x6000CDC")]
	[Address(RVA = "0xD50004", Offset = "0xD50004", VA = "0xD50004")]
	public void SkipButton()
	{
	}

	[Token(Token = "0x6000CDD")]
	[Address(RVA = "0xD5014C", Offset = "0xD5014C", VA = "0xD5014C")]
	public void NextButton()
	{
	}

	[Token(Token = "0x6000CDE")]
	[Address(RVA = "0xD509DC", Offset = "0xD509DC", VA = "0xD509DC")]
	public void BackButton()
	{
	}

	[Token(Token = "0x6000CDF")]
	[Address(RVA = "0xD497C4", Offset = "0xD497C4", VA = "0xD497C4")]
	public void PlayIntroDistorsion(float delay)
	{
	}

	[Token(Token = "0x6000CE0")]
	[Address(RVA = "0xD50BD0", Offset = "0xD50BD0", VA = "0xD50BD0")]
	[IteratorStateMachine(typeof(<PlayIntrDistorsionIE>d__28))]
	private IEnumerator PlayIntrDistorsionIE(float delay)
	{
		return null;
	}

	[Token(Token = "0x6000CE1")]
	[Address(RVA = "0xD50C7C", Offset = "0xD50C7C", VA = "0xD50C7C")]
	private void SetTitle()
	{
	}

	[Token(Token = "0x6000CE2")]
	[Address(RVA = "0xD50958", Offset = "0xD50958", VA = "0xD50958")]
	[IteratorStateMachine(typeof(<AutoNextShot>d__30))]
	private IEnumerator AutoNextShot(float delay)
	{
		return null;
	}

	[Token(Token = "0x6000CE3")]
	[Address(RVA = "0xD50EA8", Offset = "0xD50EA8", VA = "0xD50EA8")]
	public TVCinematicsController()
	{
	}
}
[Token(Token = "0x2000244")]
public class UIAudioController : MonoBehaviour
{
	[Token(Token = "0x2000245")]
	[CompilerGenerated]
	private sealed class <ReturnVolumen>d__39 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIAudioController <>4__this;

		[Token(Token = "0x170000EA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D14")]
			[Address(RVA = "0xD52FEC", Offset = "0xD52FEC", VA = "0xD52FEC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D16")]
			[Address(RVA = "0xD53034", Offset = "0xD53034", VA = "0xD53034", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D11")]
		[Address(RVA = "0xD521D0", Offset = "0xD521D0", VA = "0xD521D0")]
		[DebuggerHidden]
		public <ReturnVolumen>d__39(int <>1__state)
		{
		}

		[Token(Token = "0x6000D12")]
		[Address(RVA = "0xD52EDC", Offset = "0xD52EDC", VA = "0xD52EDC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D13")]
		[Address(RVA = "0xD52EE0", Offset = "0xD52EE0", VA = "0xD52EE0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D15")]
		[Address(RVA = "0xD52FF4", Offset = "0xD52FF4", VA = "0xD52FF4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static UIAudioController instance;

	[Token(Token = "0x4000F5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float audioSourceMaxVolume;

	[Token(Token = "0x4000F5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float audioSource2MaxVolume;

	[Token(Token = "0x4000F5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioSource audioSource;

	[Token(Token = "0x4000F5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioSource audioSource2;

	[Token(Token = "0x4000F5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip press_audio;

	[Token(Token = "0x4000F5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip select_audio;

	[Token(Token = "0x4000F60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioClip block_audio;

	[Token(Token = "0x4000F61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioClip back_audio;

	[Token(Token = "0x4000F62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioClip easy_audio;

	[Token(Token = "0x4000F63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioClip medium_audio;

	[Token(Token = "0x4000F64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioClip hard_audio;

	[Token(Token = "0x4000F65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioClip extreme_audio;

	[Token(Token = "0x4000F66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AudioClip buy_audio;

	[Token(Token = "0x4000F67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AudioClip[] combo_audio;

	[Token(Token = "0x4000F68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AudioClip consecutive_fail_audio;

	[Token(Token = "0x4000F69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public AudioClip receive_hit;

	[Token(Token = "0x4000F6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public AudioClip locked_audio;

	[Token(Token = "0x4000F6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public AudioClip equip_audio;

	[Token(Token = "0x4000F6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private AudioClip win_fanfare;

	[Token(Token = "0x4000F6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private AudioClip defeat_fanfare;

	[Token(Token = "0x4000F6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Coroutine returnVolumenCo;

	[Token(Token = "0x4000F6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private DG.Tweening.Tween volumn;

	[Token(Token = "0x4000F70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float volumnFinal;

	[Token(Token = "0x6000CF6")]
	[Address(RVA = "0xD5191C", Offset = "0xD5191C", VA = "0xD5191C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CF7")]
	[Address(RVA = "0xD519E8", Offset = "0xD519E8", VA = "0xD519E8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CF8")]
	[Address(RVA = "0xD51A24", Offset = "0xD51A24", VA = "0xD51A24")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CF9")]
	[Address(RVA = "0xD51A28", Offset = "0xD51A28", VA = "0xD51A28")]
	private void PlayPressAudio()
	{
	}

	[Token(Token = "0x6000CFA")]
	[Address(RVA = "0xD51AB0", Offset = "0xD51AB0", VA = "0xD51AB0")]
	private void PlaySelectAudio()
	{
	}

	[Token(Token = "0x6000CFB")]
	[Address(RVA = "0xD51B38", Offset = "0xD51B38", VA = "0xD51B38")]
	private void PlayBlockAudio()
	{
	}

	[Token(Token = "0x6000CFC")]
	[Address(RVA = "0xD51BC0", Offset = "0xD51BC0", VA = "0xD51BC0")]
	private void PlayBackAudio()
	{
	}

	[Token(Token = "0x6000CFD")]
	[Address(RVA = "0xD51C48", Offset = "0xD51C48", VA = "0xD51C48")]
	private void PlayEasyAudio()
	{
	}

	[Token(Token = "0x6000CFE")]
	[Address(RVA = "0xD51CD0", Offset = "0xD51CD0", VA = "0xD51CD0")]
	private void PlayMediumAudio()
	{
	}

	[Token(Token = "0x6000CFF")]
	[Address(RVA = "0xD51D58", Offset = "0xD51D58", VA = "0xD51D58")]
	private void PlayHardAudio()
	{
	}

	[Token(Token = "0x6000D00")]
	[Address(RVA = "0xD51DE0", Offset = "0xD51DE0", VA = "0xD51DE0")]
	private void PlayExtremeAudio()
	{
	}

	[Token(Token = "0x6000D01")]
	[Address(RVA = "0xD51E68", Offset = "0xD51E68", VA = "0xD51E68")]
	private void PlayBuyAudio()
	{
	}

	[Token(Token = "0x6000D02")]
	[Address(RVA = "0xD51EF0", Offset = "0xD51EF0", VA = "0xD51EF0")]
	private void PlayWinFanfare()
	{
	}

	[Token(Token = "0x6000D03")]
	[Address(RVA = "0xD51F78", Offset = "0xD51F78", VA = "0xD51F78")]
	private void PlayDefeatFanfare()
	{
	}

	[Token(Token = "0x6000D04")]
	[Address(RVA = "0xD52000", Offset = "0xD52000", VA = "0xD52000")]
	private void PlayCombo()
	{
	}

	[Token(Token = "0x6000D05")]
	[Address(RVA = "0xD5215C", Offset = "0xD5215C", VA = "0xD5215C")]
	[IteratorStateMachine(typeof(<ReturnVolumen>d__39))]
	private IEnumerator ReturnVolumen()
	{
		return null;
	}

	[Token(Token = "0x6000D06")]
	[Address(RVA = "0xD521F8", Offset = "0xD521F8", VA = "0xD521F8")]
	private void PlayConsecutiveFail()
	{
	}

	[Token(Token = "0x6000D07")]
	[Address(RVA = "0xD52280", Offset = "0xD52280", VA = "0xD52280")]
	private void PlayReceiveHit()
	{
	}

	[Token(Token = "0x6000D08")]
	[Address(RVA = "0xD52308", Offset = "0xD52308", VA = "0xD52308")]
	private void PlayLocked()
	{
	}

	[Token(Token = "0x6000D09")]
	[Address(RVA = "0xD52390", Offset = "0xD52390", VA = "0xD52390")]
	private void PlayEquip()
	{
	}

	[Token(Token = "0x6000D0A")]
	[Address(RVA = "0xD508C4", Offset = "0xD508C4", VA = "0xD508C4")]
	public void PlayAudioClip(AudioClip audioClip)
	{
	}

	[Token(Token = "0x6000D0B")]
	[Address(RVA = "0xD52418", Offset = "0xD52418", VA = "0xD52418")]
	public void PlaySound(AudioUIEnum audioUIEnum)
	{
	}

	[Token(Token = "0x6000D0C")]
	[Address(RVA = "0xD526C4", Offset = "0xD526C4", VA = "0xD526C4")]
	public void PlayAmbientSound()
	{
	}

	[Token(Token = "0x6000D0D")]
	[Address(RVA = "0xD528C8", Offset = "0xD528C8", VA = "0xD528C8")]
	public void PauseAmbientSound()
	{
	}

	[Token(Token = "0x6000D0E")]
	[Address(RVA = "0xD52ACC", Offset = "0xD52ACC", VA = "0xD52ACC")]
	public void StopAmbientSound()
	{
	}

	[Token(Token = "0x6000D0F")]
	[Address(RVA = "0xD52CD0", Offset = "0xD52CD0", VA = "0xD52CD0")]
	public void StopAll()
	{
	}

	[Token(Token = "0x6000D10")]
	[Address(RVA = "0xD52ED4", Offset = "0xD52ED4", VA = "0xD52ED4")]
	public UIAudioController()
	{
	}
}
[Token(Token = "0x2000246")]
public enum AudioUIEnum
{
	[Token(Token = "0x4000F75")]
	NONE,
	[Token(Token = "0x4000F76")]
	PRESS,
	[Token(Token = "0x4000F77")]
	SELECT,
	[Token(Token = "0x4000F78")]
	BLOCK,
	[Token(Token = "0x4000F79")]
	BACK,
	[Token(Token = "0x4000F7A")]
	EASY,
	[Token(Token = "0x4000F7B")]
	MEDIUM,
	[Token(Token = "0x4000F7C")]
	HARD,
	[Token(Token = "0x4000F7D")]
	EXTREME,
	[Token(Token = "0x4000F7E")]
	BUY,
	[Token(Token = "0x4000F7F")]
	WINFANFARE,
	[Token(Token = "0x4000F80")]
	DEFEATFANFARE,
	[Token(Token = "0x4000F81")]
	COMBO,
	[Token(Token = "0x4000F82")]
	CONSECUTIVEFAIL,
	[Token(Token = "0x4000F83")]
	RECEIVE_HIT,
	[Token(Token = "0x4000F84")]
	LOCKED,
	[Token(Token = "0x4000F85")]
	EQUIP
}
[Token(Token = "0x2000247")]
public class UIController : MonoBehaviour
{
	[Token(Token = "0x2000248")]
	[CompilerGenerated]
	private sealed class <RestartSong>d__40 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIController <>4__this;

		[Token(Token = "0x170000EC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D46")]
			[Address(RVA = "0xD55A74", Offset = "0xD55A74", VA = "0xD55A74", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000ED")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D48")]
			[Address(RVA = "0xD55ABC", Offset = "0xD55ABC", VA = "0xD55ABC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D43")]
		[Address(RVA = "0xD53E34", Offset = "0xD53E34", VA = "0xD53E34")]
		[DebuggerHidden]
		public <RestartSong>d__40(int <>1__state)
		{
		}

		[Token(Token = "0x6000D44")]
		[Address(RVA = "0xD55890", Offset = "0xD55890", VA = "0xD55890", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D45")]
		[Address(RVA = "0xD55894", Offset = "0xD55894", VA = "0xD55894", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D47")]
		[Address(RVA = "0xD55A7C", Offset = "0xD55A7C", VA = "0xD55A7C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static UIController instance;

	[Token(Token = "0x4000F87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HPHUD hpHUD;

	[Token(Token = "0x4000F88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameplayPauseUI PauseUI;

	[Token(Token = "0x4000F89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TutorialPauseUI TutorialPauseUI;

	[Token(Token = "0x4000F8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public DefeatedMenuUI DefeatedUI;

	[Token(Token = "0x4000F8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public VictoryMenuUI VictoryUI;

	[Token(Token = "0x4000F8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject VictoryUIChallenge;

	[Token(Token = "0x4000F8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public BlindWarningUI blindWarningUI;

	[Token(Token = "0x4000F8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SwapWarningUI swapWarningUI;

	[Token(Token = "0x4000F8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ThoughWarningUI thoughWarningUI;

	[Token(Token = "0x4000F90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject MainCanvas;

	[Token(Token = "0x4000F91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject cD;

	[Token(Token = "0x4000F92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public StartUI startUI;

	[Token(Token = "0x4000F93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject psSharedParent;

	[Token(Token = "0x4000F94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject winPS;

	[Token(Token = "0x4000F95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private GameObject chooseDifficulty;

	[Token(Token = "0x4000F96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private GameObject confirmDifficulty;

	[Token(Token = "0x4000F97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private GameObject buttonsDifficulty;

	[Token(Token = "0x4000F98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private TextMeshProUGUI confirmText;

	[Token(Token = "0x4000F99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int difficultyID;

	[Token(Token = "0x4000F9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private TextMeshPro songTime;

	[Token(Token = "0x4000F9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool hasToPause;

	[Token(Token = "0x6000D17")]
	[Address(RVA = "0xD5303C", Offset = "0xD5303C", VA = "0xD5303C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D18")]
	[Address(RVA = "0xD531C4", Offset = "0xD531C4", VA = "0xD531C4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D19")]
	[Address(RVA = "0xD5324C", Offset = "0xD5324C", VA = "0xD5324C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000D1A")]
	[Address(RVA = "0xD532F0", Offset = "0xD532F0", VA = "0xD532F0")]
	public void LoadMainMenuScene()
	{
	}

	[Token(Token = "0x6000D1B")]
	[Address(RVA = "0xD533E8", Offset = "0xD533E8", VA = "0xD533E8")]
	public void ActivatePauseMenu()
	{
	}

	[Token(Token = "0x6000D1C")]
	[Address(RVA = "0xD534B8", Offset = "0xD534B8", VA = "0xD534B8")]
	public bool CheckActivatePauseMenuTutorial()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D1D")]
	[Address(RVA = "0xD53634", Offset = "0xD53634", VA = "0xD53634")]
	public void ActivateDefeatedMenu()
	{
	}

	[Token(Token = "0x6000D1E")]
	[Address(RVA = "0xD5366C", Offset = "0xD5366C", VA = "0xD5366C")]
	public void ActivateVictoryMenu()
	{
	}

	[Token(Token = "0x6000D1F")]
	[Address(RVA = "0xD535C8", Offset = "0xD535C8", VA = "0xD535C8")]
	public void ActivateMainCanvas()
	{
	}

	[Token(Token = "0x6000D20")]
	[Address(RVA = "0xD4F280", Offset = "0xD4F280", VA = "0xD4F280")]
	public void DeactivateMainCanvas()
	{
	}

	[Token(Token = "0x6000D21")]
	[Address(RVA = "0xD53904", Offset = "0xD53904", VA = "0xD53904")]
	public void ActivateBlindWarningUI()
	{
	}

	[Token(Token = "0x6000D22")]
	[Address(RVA = "0xD539CC", Offset = "0xD539CC", VA = "0xD539CC")]
	public void ActivateSwapWarningUI()
	{
	}

	[Token(Token = "0x6000D23")]
	[Address(RVA = "0xD53A90", Offset = "0xD53A90", VA = "0xD53A90")]
	public void ActivateThoughWarningUI()
	{
	}

	[Token(Token = "0x6000D24")]
	[Address(RVA = "0xD53B54", Offset = "0xD53B54", VA = "0xD53B54")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D25")]
	[Address(RVA = "0xD53BA4", Offset = "0xD53BA4", VA = "0xD53BA4")]
	public bool GetHasToPause()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D26")]
	[Address(RVA = "0xD53BAC", Offset = "0xD53BAC", VA = "0xD53BAC")]
	public void SetHasToPause(bool _state)
	{
	}

	[Token(Token = "0x6000D27")]
	[Address(RVA = "0xD53BB8", Offset = "0xD53BB8", VA = "0xD53BB8")]
	public void StartSong()
	{
	}

	[Token(Token = "0x6000D28")]
	[Address(RVA = "0xD53D84", Offset = "0xD53D84", VA = "0xD53D84")]
	public void LoadGameplay()
	{
	}

	[Token(Token = "0x6000D29")]
	[Address(RVA = "0xD53D10", Offset = "0xD53D10", VA = "0xD53D10")]
	[IteratorStateMachine(typeof(<RestartSong>d__40))]
	private IEnumerator RestartSong()
	{
		return null;
	}

	[Token(Token = "0x6000D2A")]
	[Address(RVA = "0xD53E5C", Offset = "0xD53E5C", VA = "0xD53E5C")]
	private void OnInputFocusLost()
	{
	}

	[Token(Token = "0x6000D2B")]
	[Address(RVA = "0xD53F54", Offset = "0xD53F54", VA = "0xD53F54")]
	public void SimulateOninputLost()
	{
	}

	[Token(Token = "0x6000D2C")]
	[Address(RVA = "0xD5404C", Offset = "0xD5404C", VA = "0xD5404C")]
	public void ActivateChooseDifficulty()
	{
	}

	[Token(Token = "0x6000D2D")]
	[Address(RVA = "0xD54304", Offset = "0xD54304", VA = "0xD54304")]
	private void ChangeStateDifficultyButtonPause(int i, bool _state)
	{
	}

	[Token(Token = "0x6000D2E")]
	[Address(RVA = "0xD54488", Offset = "0xD54488", VA = "0xD54488")]
	private void DeactivateDifficultyButton()
	{
	}

	[Token(Token = "0x6000D2F")]
	[Address(RVA = "0xD5456C", Offset = "0xD5456C", VA = "0xD5456C")]
	private void ChangeStateButtonsPause(bool _state)
	{
	}

	[Token(Token = "0x6000D30")]
	[Address(RVA = "0xD545D4", Offset = "0xD545D4", VA = "0xD545D4")]
	public void DeactivateChooseDifficulty()
	{
	}

	[Token(Token = "0x6000D31")]
	[Address(RVA = "0xD54840", Offset = "0xD54840", VA = "0xD54840")]
	public void ActivateConfirm(int _difficultyID)
	{
	}

	[Token(Token = "0x6000D32")]
	[Address(RVA = "0xD54AA4", Offset = "0xD54AA4", VA = "0xD54AA4")]
	public void DeactivateConfirm()
	{
	}

	[Token(Token = "0x6000D33")]
	[Address(RVA = "0xD54C24", Offset = "0xD54C24", VA = "0xD54C24")]
	public void ConfirmChangeDifficulty()
	{
	}

	[Token(Token = "0x6000D34")]
	[Address(RVA = "0xD54CBC", Offset = "0xD54CBC", VA = "0xD54CBC")]
	public void SetStartUICountFrames(byte count)
	{
	}

	[Token(Token = "0x6000D35")]
	[Address(RVA = "0xD54238", Offset = "0xD54238", VA = "0xD54238")]
	private DG.Tweening.Tween AdvanceTweens(GameObject _target)
	{
		return null;
	}

	[Token(Token = "0x6000D36")]
	[Address(RVA = "0xD5478C", Offset = "0xD5478C", VA = "0xD5478C")]
	private DG.Tweening.Tween WalkBackTweens(GameObject _target)
	{
		return null;
	}

	[Token(Token = "0x6000D37")]
	[Address(RVA = "0xD54D5C", Offset = "0xD54D5C", VA = "0xD54D5C")]
	private DG.Tweening.Tween GoBackTweens(GameObject _target)
	{
		return null;
	}

	[Token(Token = "0x6000D38")]
	[Address(RVA = "0xD54E10", Offset = "0xD54E10", VA = "0xD54E10")]
	private DG.Tweening.Tween ReturnTweens(GameObject _target)
	{
		return null;
	}

	[Token(Token = "0x6000D39")]
	[Address(RVA = "0xD54EDC", Offset = "0xD54EDC", VA = "0xD54EDC")]
	public void DesactivateAllPSSharedParent()
	{
	}

	[Token(Token = "0x6000D3A")]
	[Address(RVA = "0xD551D4", Offset = "0xD551D4", VA = "0xD551D4")]
	public void SetLastCampaignPlayedInfoReturnFromContinue(bool is_return_from_continue)
	{
	}

	[Token(Token = "0x6000D3B")]
	[Address(RVA = "0xD5525C", Offset = "0xD5525C", VA = "0xD5525C")]
	public void SetLastChallengePlayedInfoReturnFromContinue(bool is_return_from_continue)
	{
	}

	[Token(Token = "0x6000D3C")]
	[Address(RVA = "0xD552E4", Offset = "0xD552E4", VA = "0xD552E4")]
	public UIController()
	{
	}
}
[Token(Token = "0x2000249")]
public class VictoryMenuUI : MonoBehaviour
{
	[Token(Token = "0x200024C")]
	[CompilerGenerated]
	private sealed class <>c__DisplayClass42_0
	{
		[Token(Token = "0x4000FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject star;

		[Token(Token = "0x4000FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 oldLocalScale;

		[Token(Token = "0x4000FC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TweenCallback <>9__3;

		[Token(Token = "0x4000FC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TweenCallback <>9__4;

		[Token(Token = "0x4000FC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TweenCallback <>9__5;

		[Token(Token = "0x6000D5F")]
		[Address(RVA = "0xD59244", Offset = "0xD59244", VA = "0xD59244")]
		public <>c__DisplayClass42_0()
		{
		}

		[Token(Token = "0x6000D60")]
		[Address(RVA = "0xD5924C", Offset = "0xD5924C", VA = "0xD5924C")]
		internal void <CampaignAnimationIE>b__0()
		{
		}

		[Token(Token = "0x6000D61")]
		[Address(RVA = "0xD59334", Offset = "0xD59334", VA = "0xD59334")]
		internal void <CampaignAnimationIE>b__3()
		{
		}

		[Token(Token = "0x6000D62")]
		[Address(RVA = "0xD59368", Offset = "0xD59368", VA = "0xD59368")]
		internal void <CampaignAnimationIE>b__1()
		{
		}

		[Token(Token = "0x6000D63")]
		[Address(RVA = "0xD59450", Offset = "0xD59450", VA = "0xD59450")]
		internal void <CampaignAnimationIE>b__4()
		{
		}

		[Token(Token = "0x6000D64")]
		[Address(RVA = "0xD59484", Offset = "0xD59484", VA = "0xD59484")]
		internal void <CampaignAnimationIE>b__2()
		{
		}

		[Token(Token = "0x6000D65")]
		[Address(RVA = "0xD5956C", Offset = "0xD5956C", VA = "0xD5956C")]
		internal void <CampaignAnimationIE>b__5()
		{
		}
	}

	[Token(Token = "0x200024D")]
	[CompilerGenerated]
	private sealed class <CampaignAnimationIE>d__42 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SongInfoCampaign songInfoCampaign;

		[Token(Token = "0x4000FC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private <>c__DisplayClass42_0 <>8__1;

		[Token(Token = "0x4000FCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public VictoryMenuUI <>4__this;

		[Token(Token = "0x4000FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<bool> _old_stars_completed;

		[Token(Token = "0x4000FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int <completed_count>5__2;

		[Token(Token = "0x4000FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private uint <money_step>5__3;

		[Token(Token = "0x4000FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int <steps>5__4;

		[Token(Token = "0x4000FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private uint <total_money>5__5;

		[Token(Token = "0x4000FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private uint <check_total_money>5__6;

		[Token(Token = "0x4000FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int <i>5__7;

		[Token(Token = "0x170000EE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D69")]
			[Address(RVA = "0xD5A4CC", Offset = "0xD5A4CC", VA = "0xD5A4CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D6B")]
			[Address(RVA = "0xD5A514", Offset = "0xD5A514", VA = "0xD5A514", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D66")]
		[Address(RVA = "0xD595A0", Offset = "0xD595A0", VA = "0xD595A0")]
		[DebuggerHidden]
		public <CampaignAnimationIE>d__42(int <>1__state)
		{
		}

		[Token(Token = "0x6000D67")]
		[Address(RVA = "0xD595C8", Offset = "0xD595C8", VA = "0xD595C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D68")]
		[Address(RVA = "0xD595CC", Offset = "0xD595CC", VA = "0xD595CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D6A")]
		[Address(RVA = "0xD5A4D4", Offset = "0xD5A4D4", VA = "0xD5A4D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200024F")]
	[CompilerGenerated]
	private sealed class <PaperStarsAnimationIE>d__43 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SongInfoCampaign songInfoCampaign;

		[Token(Token = "0x4000FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int starPos;

		[Token(Token = "0x4000FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<bool> _old_stars_completed;

		[Token(Token = "0x4000FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public VictoryMenuUI <>4__this;

		[Token(Token = "0x170000F0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D72")]
			[Address(RVA = "0xD5A9D8", Offset = "0xD5A9D8", VA = "0xD5A9D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D74")]
			[Address(RVA = "0xD5AA20", Offset = "0xD5AA20", VA = "0xD5AA20", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D6F")]
		[Address(RVA = "0xD5A640", Offset = "0xD5A640", VA = "0xD5A640")]
		[DebuggerHidden]
		public <PaperStarsAnimationIE>d__43(int <>1__state)
		{
		}

		[Token(Token = "0x6000D70")]
		[Address(RVA = "0xD5A668", Offset = "0xD5A668", VA = "0xD5A668", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D71")]
		[Address(RVA = "0xD5A66C", Offset = "0xD5A66C", VA = "0xD5A66C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D73")]
		[Address(RVA = "0xD5A9E0", Offset = "0xD5A9E0", VA = "0xD5A9E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject victoryMenu;

	[Token(Token = "0x4000FA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject victoryMenuChallenge;

	[Token(Token = "0x4000FA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Sprite[] StarsSpriteList;

	[Token(Token = "0x4000FA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[Header("Campaign")]
	private TextMeshProUGUI trackName;

	[Token(Token = "0x4000FA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private TextMeshProUGUI trackDifficulty;

	[Token(Token = "0x4000FA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private TextMeshProUGUI score;

	[Token(Token = "0x4000FA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private TextMeshProUGUI chain;

	[Token(Token = "0x4000FA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private TextMeshProUGUI hitRate;

	[Token(Token = "0x4000FA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject record;

	[Token(Token = "0x4000FA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private GameObject practiceImg;

	[Token(Token = "0x4000FA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private GameObject PaperParent;

	[Token(Token = "0x4000FAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private GameObject Stars;

	[Token(Token = "0x4000FAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private TextMeshProUGUI totalMoneyText;

	[Token(Token = "0x4000FAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private TextMeshProUGUI variationText;

	[Token(Token = "0x4000FAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	[Header("Challenge")]
	private TextMeshProUGUI ChallengeTrackName;

	[Token(Token = "0x4000FAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private TextMeshProUGUI ChallengeTrackDifficulty;

	[Token(Token = "0x4000FAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private TextMeshProUGUI ChallengeScore;

	[Token(Token = "0x4000FB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private TextMeshProUGUI ChallengeChain;

	[Token(Token = "0x4000FB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private TextMeshProUGUI ChallengeHitRate;

	[Token(Token = "0x4000FB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private TextMeshProUGUI ChallengePerfect;

	[Token(Token = "0x4000FB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private TextMeshProUGUI ChallengeGood;

	[Token(Token = "0x4000FB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private TextMeshProUGUI ChallengeNormal;

	[Token(Token = "0x4000FB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private GameObject ChallengeRecord;

	[Token(Token = "0x4000FB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private GameObject ChallengeNota;

	[Token(Token = "0x4000FB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private GameObject ChallengePracticeImg;

	[Token(Token = "0x4000FB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private Sprite[] Rank;

	[Token(Token = "0x4000FB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private TextMeshProUGUI ChallengeMoneyText;

	[Token(Token = "0x4000FBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private GameObject DemoSticker;

	[Token(Token = "0x4000FBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private GameObject RetryBtn;

	[Token(Token = "0x4000FBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[SerializeField]
	private GameObject ContinueBtn;

	[Token(Token = "0x6000D49")]
	[Address(RVA = "0xD55AC4", Offset = "0xD55AC4", VA = "0xD55AC4")]
	private void FindSteamLeaderboard(string _rankingname)
	{
	}

	[Token(Token = "0x6000D4A")]
	[Address(RVA = "0xD55AC8", Offset = "0xD55AC8", VA = "0xD55AC8")]
	private void SetScoreOnPlaystationLeaderboard(int _leaderboardID)
	{
	}

	[Token(Token = "0x6000D4B")]
	[Address(RVA = "0xD536C8", Offset = "0xD536C8", VA = "0xD536C8")]
	public void ActivateVictoryMenu()
	{
	}

	[Token(Token = "0x6000D4C")]
	[Address(RVA = "0xD53C6C", Offset = "0xD53C6C", VA = "0xD53C6C")]
	public void DeactivateVictoryMenu()
	{
	}

	[Token(Token = "0x6000D4D")]
	[Address(RVA = "0xD56BB0", Offset = "0xD56BB0", VA = "0xD56BB0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D4E")]
	[Address(RVA = "0xD5847C", Offset = "0xD5847C", VA = "0xD5847C")]
	private void SendRankingScore(Song _tempSong)
	{
	}

	[Token(Token = "0x6000D4F")]
	[Address(RVA = "0xD55ACC", Offset = "0xD55ACC", VA = "0xD55ACC")]
	private void SetupChallenge()
	{
	}

	[Token(Token = "0x6000D50")]
	[Address(RVA = "0xD58A90", Offset = "0xD58A90", VA = "0xD58A90")]
	private void ActivatePractice()
	{
	}

	[Token(Token = "0x6000D51")]
	[Address(RVA = "0xD58850", Offset = "0xD58850", VA = "0xD58850")]
	public Ranking GetRank(int HitRate, int PerfectRate, int GoodRate)
	{
		return default(Ranking);
	}

	[Token(Token = "0x6000D52")]
	[Address(RVA = "0xD58990", Offset = "0xD58990", VA = "0xD58990")]
	private Sprite GetRankSprite(Ranking _rank)
	{
		return null;
	}

	[Token(Token = "0x6000D53")]
	[Address(RVA = "0xD57844", Offset = "0xD57844", VA = "0xD57844")]
	public bool CheckStarsCondition(StarCondition startCondition)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D54")]
	[Address(RVA = "0xD57A20", Offset = "0xD57A20", VA = "0xD57A20")]
	public void InitPaperStars(SongInfoCampaign songInfoCampaign, GameObject _PaperParent)
	{
	}

	[Token(Token = "0x6000D55")]
	[Address(RVA = "0xD582A0", Offset = "0xD582A0", VA = "0xD582A0")]
	[IteratorStateMachine(typeof(<CampaignAnimationIE>d__42))]
	private IEnumerator CampaignAnimationIE(SongInfoCampaign songInfoCampaign, List<bool> _old_stars_completed)
	{
		return null;
	}

	[Token(Token = "0x6000D56")]
	[Address(RVA = "0xD58DD8", Offset = "0xD58DD8", VA = "0xD58DD8")]
	[IteratorStateMachine(typeof(<PaperStarsAnimationIE>d__43))]
	private IEnumerator PaperStarsAnimationIE(SongInfoCampaign songInfoCampaign, List<bool> _old_stars_completed, int starPos)
	{
		return null;
	}

	[Token(Token = "0x6000D57")]
	[Address(RVA = "0xD58344", Offset = "0xD58344", VA = "0xD58344")]
	private void SetNewUnlock(int old_stars_count, int new_stars_count)
	{
	}

	[Token(Token = "0x6000D58")]
	[Address(RVA = "0xD58E8C", Offset = "0xD58E8C", VA = "0xD58E8C")]
	public VictoryMenuUI()
	{
	}
}
[Token(Token = "0x2000250")]
public static class Utils
{
	[Token(Token = "0x6000D75")]
	public static void Shuffle<T>(this IList<T> ts)
	{
	}
}
[Token(Token = "0x2000251")]
public class VelocityEstimator : MonoBehaviour
{
	[Token(Token = "0x2000252")]
	[CompilerGenerated]
	private sealed class <EstimateVelocityCoroutine>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VelocityEstimator <>4__this;

		[Token(Token = "0x4000FE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <previousPosition>5__2;

		[Token(Token = "0x4000FE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Quaternion <previousRotation>5__3;

		[Token(Token = "0x170000F2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D81")]
			[Address(RVA = "0xD5B268", Offset = "0xD5B268", VA = "0xD5B268", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D83")]
			[Address(RVA = "0xD5B2B0", Offset = "0xD5B2B0", VA = "0xD5B2B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D7E")]
		[Address(RVA = "0xD5AE84", Offset = "0xD5AE84", VA = "0xD5AE84")]
		[DebuggerHidden]
		public <EstimateVelocityCoroutine>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6000D7F")]
		[Address(RVA = "0xD5AEC0", Offset = "0xD5AEC0", VA = "0xD5AEC0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D80")]
		[Address(RVA = "0xD5AEC4", Offset = "0xD5AEC4", VA = "0xD5AEC4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D82")]
		[Address(RVA = "0xD5B270", Offset = "0xD5B270", VA = "0xD5B270", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000FDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("How many frames to average over for computing velocity")]
	public int velocityAverageFrames;

	[Token(Token = "0x4000FDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Tooltip("How many frames to average over for computing angular velocity")]
	public int angularVelocityAverageFrames;

	[Token(Token = "0x4000FDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool estimateOnAwake;

	[Token(Token = "0x4000FDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Coroutine routine;

	[Token(Token = "0x4000FDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int sampleCount;

	[Token(Token = "0x4000FE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3[] velocitySamples;

	[Token(Token = "0x4000FE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] angularVelocitySamples;

	[Token(Token = "0x6000D76")]
	[Address(RVA = "0xD5AA28", Offset = "0xD5AA28", VA = "0xD5AA28")]
	public void BeginEstimatingVelocity()
	{
	}

	[Token(Token = "0x6000D77")]
	[Address(RVA = "0xD5AA60", Offset = "0xD5AA60", VA = "0xD5AA60")]
	public void FinishEstimatingVelocity()
	{
	}

	[Token(Token = "0x6000D78")]
	[Address(RVA = "0xD5AB18", Offset = "0xD5AB18", VA = "0xD5AB18")]
	public Vector3 GetVelocityEstimate()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000D79")]
	[Address(RVA = "0xD5ABE0", Offset = "0xD5ABE0", VA = "0xD5ABE0")]
	public Vector3 GetAngularVelocityEstimate()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000D7A")]
	[Address(RVA = "0xD5ACA8", Offset = "0xD5ACA8", VA = "0xD5ACA8")]
	public Vector3 GetAccelerationEstimate()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000D7B")]
	[Address(RVA = "0xD5ADF0", Offset = "0xD5ADF0", VA = "0xD5ADF0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D7C")]
	[Address(RVA = "0xD5AAA4", Offset = "0xD5AAA4", VA = "0xD5AAA4")]
	[IteratorStateMachine(typeof(<EstimateVelocityCoroutine>d__13))]
	private IEnumerator EstimateVelocityCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000D7D")]
	[Address(RVA = "0xD5AEAC", Offset = "0xD5AEAC", VA = "0xD5AEAC")]
	public VelocityEstimator()
	{
	}
}
[Token(Token = "0x2000253")]
[RequireComponent(typeof(ButtonTween))]
public class XRCustomButtonInteractable : XRSimpleInteractable
{
	[Token(Token = "0x4000FE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[SerializeField]
	protected GameObject Target;

	[Token(Token = "0x4000FE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[SerializeField]
	protected Vector3 TargetScale;

	[Token(Token = "0x4000FE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	[SerializeField]
	protected Vector3 TargetScale2;

	[Token(Token = "0x4000FEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	protected ButtonTween buttonTween;

	[Token(Token = "0x4000FEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	protected bool isActive;

	[Token(Token = "0x4000FEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x151")]
	protected bool hasToDeactivate;

	[Token(Token = "0x4000FED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x152")]
	[SerializeField]
	protected bool KeepSelection;

	[Token(Token = "0x4000FEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x153")]
	[SerializeField]
	protected bool locked;

	[Token(Token = "0x4000FEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	protected IXRSelectInteractor selectInteractor;

	[Token(Token = "0x4000FF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	protected IXRHoverInteractor hoverInteractor;

	[Token(Token = "0x4000FF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	protected Color[] OGcolors;

	[Token(Token = "0x4000FF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	protected TextMeshProUGUI[] _texts;

	[Token(Token = "0x4000FF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Image[] _Image;

	[Token(Token = "0x4000FF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	[SerializeField]
	protected float shakeStrength;

	[Token(Token = "0x4000FF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	[SerializeField]
	protected float shakeRandomness;

	[Token(Token = "0x4000FF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public bool CustomScale;

	[Token(Token = "0x4000FF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x189")]
	public bool CustomShake;

	[Token(Token = "0x4000FF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18A")]
	public bool BlockImageEffect;

	[Token(Token = "0x4000FF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18B")]
	public bool BlockReturnToScaleOne;

	[Token(Token = "0x4000FFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	public AudioUIEnum feedbackAudioUIEnum;

	[Token(Token = "0x4000FFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public AudioUIEnum hoverAudioUIEnum;

	[Token(Token = "0x4000FFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	public bool BlockTextEffect;

	[Token(Token = "0x4000FFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x195")]
	public bool backButton;

	[Token(Token = "0x4000FFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x196")]
	public bool blockActivateShake;

	[Token(Token = "0x6000D84")]
	[Address(RVA = "0xD5B2B8", Offset = "0xD5B2B8", VA = "0xD5B2B8", Slot = "54")]
	public override bool IsSelectableBy(IXRSelectInteractor interactor)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D85")]
	[Address(RVA = "0xD5B2C0", Offset = "0xD5B2C0", VA = "0xD5B2C0", Slot = "65")]
	protected override void OnSelectEntered(SelectEnterEventArgs interactor)
	{
	}

	[Token(Token = "0x6000D86")]
	[Address(RVA = "0xD5B33C", Offset = "0xD5B33C", VA = "0xD5B33C", Slot = "64")]
	protected override void OnSelectEntering(SelectEnterEventArgs interactor)
	{
	}

	[Token(Token = "0x6000D87")]
	[Address(RVA = "0xD5B344", Offset = "0xD5B344", VA = "0xD5B344", Slot = "68")]
	protected override void OnActivated(ActivateEventArgs interactor)
	{
	}

	[Token(Token = "0x6000D88")]
	[Address(RVA = "0xD5B34C", Offset = "0xD5B34C", VA = "0xD5B34C", Slot = "61")]
	protected override void OnHoverEntered(HoverEnterEventArgs interactor)
	{
	}

	[Token(Token = "0x6000D89")]
	[Address(RVA = "0xD5B660", Offset = "0xD5B660", VA = "0xD5B660", Slot = "60")]
	protected override void OnHoverEntering(HoverEnterEventArgs interactor)
	{
	}

	[Token(Token = "0x6000D8A")]
	[Address(RVA = "0xD5B6AC", Offset = "0xD5B6AC", VA = "0xD5B6AC", Slot = "63")]
	protected override void OnHoverExited(HoverExitEventArgs interactor)
	{
	}

	[Token(Token = "0x6000D8B")]
	[Address(RVA = "0xD5B758", Offset = "0xD5B758", VA = "0xD5B758")]
	private new void Awake()
	{
	}

	[Token(Token = "0x6000D8C")]
	[Address(RVA = "0xD5BB58", Offset = "0xD5BB58", VA = "0xD5BB58", Slot = "87")]
	protected internal virtual void SubscribeEvents()
	{
	}

	[Token(Token = "0x6000D8D")]
	[Address(RVA = "0xD5BCCC", Offset = "0xD5BCCC", VA = "0xD5BCCC", Slot = "88")]
	protected internal virtual void UnsubscribeEvents()
	{
	}

	[Token(Token = "0x6000D8E")]
	[Address(RVA = "0xD5BE40", Offset = "0xD5BE40", VA = "0xD5BE40")]
	public void ChangeHasToDeactivate(bool _state)
	{
	}

	[Token(Token = "0x6000D8F")]
	[Address(RVA = "0xD5BE4C", Offset = "0xD5BE4C", VA = "0xD5BE4C", Slot = "89")]
	protected internal virtual void AddListeners()
	{
	}

	[Token(Token = "0x6000D90")]
	[Address(RVA = "0xD5C0C0", Offset = "0xD5C0C0", VA = "0xD5C0C0", Slot = "90")]
	public virtual void HoverSize()
	{
	}

	[Token(Token = "0x6000D91")]
	[Address(RVA = "0xD5C0DC", Offset = "0xD5C0DC", VA = "0xD5C0DC")]
	private new void OnDisable()
	{
	}

	[Token(Token = "0x6000D92")]
	[Address(RVA = "0xD5C11C", Offset = "0xD5C11C", VA = "0xD5C11C")]
	private new void OnDestroy()
	{
	}

	[Token(Token = "0x6000D93")]
	[Address(RVA = "0xD5C144", Offset = "0xD5C144", VA = "0xD5C144", Slot = "91")]
	protected internal virtual void ActivateFunction()
	{
	}

	[Token(Token = "0x6000D94")]
	[Address(RVA = "0xD5C150", Offset = "0xD5C150", VA = "0xD5C150", Slot = "92")]
	protected internal virtual void OnHoverEffects()
	{
	}

	[Token(Token = "0x6000D95")]
	[Address(RVA = "0xD5C2D4", Offset = "0xD5C2D4", VA = "0xD5C2D4", Slot = "93")]
	protected internal virtual void OnHoverExitEffects()
	{
	}

	[Token(Token = "0x6000D96")]
	[Address(RVA = "0xD5C424", Offset = "0xD5C424", VA = "0xD5C424", Slot = "94")]
	protected internal virtual void FeedBackActivate()
	{
	}

	[Token(Token = "0x6000D97")]
	[Address(RVA = "0xD5C5E8", Offset = "0xD5C5E8", VA = "0xD5C5E8", Slot = "95")]
	public virtual void Deselect()
	{
	}

	[Token(Token = "0x6000D98")]
	[Address(RVA = "0xD5C70C", Offset = "0xD5C70C", VA = "0xD5C70C")]
	public XRCustomButtonInteractable()
	{
	}
}
[Token(Token = "0x2000254")]
public class XRCustomChangeModeButtonInteractable : XRCustomButtonInteractable
{
	[Token(Token = "0x4000FFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[SerializeField]
	private int GameMode;

	[Token(Token = "0x6000D9F")]
	[Address(RVA = "0xD5C7C4", Offset = "0xD5C7C4", VA = "0xD5C7C4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DA0")]
	[Address(RVA = "0xD5C848", Offset = "0xD5C848", VA = "0xD5C848", Slot = "91")]
	protected internal override void ActivateFunction()
	{
	}

	[Token(Token = "0x6000DA1")]
	[Address(RVA = "0xD5CA64", Offset = "0xD5CA64", VA = "0xD5CA64", Slot = "92")]
	protected internal override void OnHoverEffects()
	{
	}

	[Token(Token = "0x6000DA2")]
	[Address(RVA = "0xD5CAC8", Offset = "0xD5CAC8", VA = "0xD5CAC8", Slot = "94")]
	protected internal override void FeedBackActivate()
	{
	}

	[Token(Token = "0x6000DA3")]
	[Address(RVA = "0xD5CB4C", Offset = "0xD5CB4C", VA = "0xD5CB4C")]
	public void ForceDeactivate()
	{
	}

	[Token(Token = "0x6000DA4")]
	[Address(RVA = "0xD5CB54", Offset = "0xD5CB54", VA = "0xD5CB54")]
	public XRCustomChangeModeButtonInteractable()
	{
	}
}
[Token(Token = "0x2000255")]
public class XRCustomChangeSceneButtonInteractable : XRCustomButtonInteractable
{
	[Token(Token = "0x4001000")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x197")]
	[SerializeField]
	private bool keepAlwaysLocked;

	[Token(Token = "0x4001001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[SerializeField]
	private Material LockMaterial;

	[Token(Token = "0x4001002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	[SerializeField]
	private GameObject demoLock;

	[Token(Token = "0x6000DA5")]
	[Address(RVA = "0xD5CB88", Offset = "0xD5CB88", VA = "0xD5CB88")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DA6")]
	[Address(RVA = "0xD5CCA0", Offset = "0xD5CCA0", VA = "0xD5CCA0", Slot = "91")]
	protected internal override void ActivateFunction()
	{
	}

	[Token(Token = "0x6000DA7")]
	[Address(RVA = "0xD5CD10", Offset = "0xD5CD10", VA = "0xD5CD10", Slot = "92")]
	protected internal override void OnHoverEffects()
	{
	}

	[Token(Token = "0x6000DA8")]
	[Address(RVA = "0xD5CDD0", Offset = "0xD5CDD0", VA = "0xD5CDD0", Slot = "94")]
	protected internal override void FeedBackActivate()
	{
	}

	[Token(Token = "0x6000DA9")]
	[Address(RVA = "0xD5CEB8", Offset = "0xD5CEB8", VA = "0xD5CEB8")]
	public XRCustomChangeSceneButtonInteractable()
	{
	}
}
[Token(Token = "0x2000256")]
public class XRCustomDifficultyButtonInteractable : XRCustomButtonInteractable
{
	[Token(Token = "0x4001003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[SerializeField]
	private int difficulty;

	[Token(Token = "0x6000DAA")]
	[Address(RVA = "0xD5CEEC", Offset = "0xD5CEEC", VA = "0xD5CEEC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DAB")]
	[Address(RVA = "0xD5D008", Offset = "0xD5D008", VA = "0xD5D008")]
	private new void OnEnable()
	{
	}

	[Token(Token = "0x6000DAC")]
	[Address(RVA = "0xD5D158", Offset = "0xD5D158", VA = "0xD5D158")]
	private new void OnDestroy()
	{
	}

	[Token(Token = "0x6000DAD")]
	[Address(RVA = "0xD5D260", Offset = "0xD5D260", VA = "0xD5D260", Slot = "94")]
	protected internal override void FeedBackActivate()
	{
	}

	[Token(Token = "0x6000DAE")]
	[Address(RVA = "0xD5D08C", Offset = "0xD5D08C", VA = "0xD5D08C")]
	public void InitButton()
	{
	}

	[Token(Token = "0x6000DAF")]
	[Address(RVA = "0xD5D374", Offset = "0xD5D374", VA = "0xD5D374")]
	protected void DeselectImage()
	{
	}

	[Token(Token = "0x6000DB0")]
	[Address(RVA = "0xD5D4A0", Offset = "0xD5D4A0", VA = "0xD5D4A0", Slot = "91")]
	protected internal override void ActivateFunction()
	{
	}

	[Token(Token = "0x6000DB1")]
	[Address(RVA = "0xD5D660", Offset = "0xD5D660", VA = "0xD5D660")]
	public XRCustomDifficultyButtonInteractable()
	{
	}
}
[Token(Token = "0x2000257")]
public class XRCustomGrabInteractable : XRGrabInteractable
{
	[Token(Token = "0x4001004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x254")]
	private Vector3 initialAttachLocalPos;

	[Token(Token = "0x4001005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	private Quaternion initialAttachLocalRot;

	[Token(Token = "0x6000DB2")]
	[Address(RVA = "0xD5D694", Offset = "0xD5D694", VA = "0xD5D694")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DB3")]
	[Address(RVA = "0xD5D7D8", Offset = "0xD5D7D8", VA = "0xD5D7D8", Slot = "65")]
	protected override void OnSelectEntered(SelectEnterEventArgs interactor)
	{
	}

	[Token(Token = "0x6000DB4")]
	[Address(RVA = "0xD5D840", Offset = "0xD5D840", VA = "0xD5D840")]
	public XRCustomGrabInteractable()
	{
	}
}
[Token(Token = "0x2000258")]
public class XRCustomInteractableContentBlock : XRCustomButtonInteractable
{
	[Token(Token = "0x4001006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x197")]
	protected bool IgnoreOnHoverExit;

	[Token(Token = "0x4001007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	protected bool HasBeenActivated;

	[Token(Token = "0x4001008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	private Color authorColor;

	[Token(Token = "0x4001009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	[SerializeField]
	private ContentBlock contentBlock;

	[Token(Token = "0x6000DB5")]
	[Address(RVA = "0xD5D848", Offset = "0xD5D848", VA = "0xD5D848")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DB6")]
	[Address(RVA = "0xD5D978", Offset = "0xD5D978", VA = "0xD5D978", Slot = "87")]
	protected internal override void SubscribeEvents()
	{
	}

	[Token(Token = "0x6000DB7")]
	[Address(RVA = "0xD5DA78", Offset = "0xD5DA78", VA = "0xD5DA78", Slot = "88")]
	protected internal override void UnsubscribeEvents()
	{
	}

	[Token(Token = "0x6000DB8")]
	[Address(RVA = "0xD5DB78", Offset = "0xD5DB78", VA = "0xD5DB78", Slot = "92")]
	protected internal override void OnHoverEffects()
	{
	}

	[Token(Token = "0x6000DB9")]
	[Address(RVA = "0xD5DE7C", Offset = "0xD5DE7C", VA = "0xD5DE7C", Slot = "93")]
	protected internal override void OnHoverExitEffects()
	{
	}

	[Token(Token = "0x6000DBA")]
	[Address(RVA = "0xD5E3E4", Offset = "0xD5E3E4", VA = "0xD5E3E4", Slot = "89")]
	protected internal override void AddListeners()
	{
	}

	[Token(Token = "0x6000DBB")]
	[Address(RVA = "0xD5E658", Offset = "0xD5E658", VA = "0xD5E658", Slot = "94")]
	protected internal override void FeedBackActivate()
	{
	}

	[Token(Token = "0x6000DBC")]
	[Address(RVA = "0xD5E7F4", Offset = "0xD5E7F4", VA = "0xD5E7F4")]
	public bool GetIsActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DBD")]
	[Address(RVA = "0xD5E7FC", Offset = "0xD5E7FC", VA = "0xD5E7FC")]
	public void ForceDeselect()
	{
	}

	[Token(Token = "0x6000DBE")]
	[Address(RVA = "0xD5EDB0", Offset = "0xD5EDB0", VA = "0xD5EDB0")]
	public XRCustomInteractableContentBlock()
	{
	}
}
[Token(Token = "0x2000259")]
public class XRCustomRayInteractor : XRRayInteractor
{
	[Token(Token = "0x400100A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	public float initialHapticIntensity;

	[Token(Token = "0x400100B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2AC")]
	public float initialHapticDuration;

	[Token(Token = "0x170000F4")]
	public override bool isSelectActive
	{
		[Token(Token = "0x6000DC6")]
		[Address(RVA = "0xD5EF6C", Offset = "0xD5EF6C", VA = "0xD5EF6C", Slot = "51")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000DC5")]
	[Address(RVA = "0xD5EE6C", Offset = "0xD5EE6C", VA = "0xD5EE6C")]
	private new void Start()
	{
	}

	[Token(Token = "0x6000DC7")]
	[Address(RVA = "0xD5EF74", Offset = "0xD5EF74", VA = "0xD5EF74")]
	public void UpdateRay()
	{
	}

	[Token(Token = "0x6000DC8")]
	[Address(RVA = "0xD5EFF8", Offset = "0xD5EFF8", VA = "0xD5EFF8")]
	public XRCustomRayInteractor()
	{
	}
}
[Token(Token = "0x200025A")]
public class XRCustomSimpleInteractable : XRSimpleInteractable
{
	[Token(Token = "0x6000DC9")]
	[Address(RVA = "0xD5F050", Offset = "0xD5F050", VA = "0xD5F050", Slot = "54")]
	public override bool IsSelectableBy(IXRSelectInteractor interactor)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DCA")]
	[Address(RVA = "0xD5F058", Offset = "0xD5F058", VA = "0xD5F058", Slot = "65")]
	protected override void OnSelectEntered(SelectEnterEventArgs interactor)
	{
	}

	[Token(Token = "0x6000DCB")]
	[Address(RVA = "0xD5F0B8", Offset = "0xD5F0B8", VA = "0xD5F0B8", Slot = "64")]
	protected override void OnSelectEntering(SelectEnterEventArgs interactor)
	{
	}

	[Token(Token = "0x6000DCC")]
	[Address(RVA = "0xD5F0C0", Offset = "0xD5F0C0", VA = "0xD5F0C0", Slot = "67")]
	protected override void OnSelectExited(SelectExitEventArgs interactor)
	{
	}

	[Token(Token = "0x6000DCD")]
	[Address(RVA = "0xD5F10C", Offset = "0xD5F10C", VA = "0xD5F10C", Slot = "66")]
	protected override void OnSelectExiting(SelectExitEventArgs interactor)
	{
	}

	[Token(Token = "0x6000DCE")]
	[Address(RVA = "0xD5F110", Offset = "0xD5F110", VA = "0xD5F110", Slot = "61")]
	protected override void OnHoverEntered(HoverEnterEventArgs interactor)
	{
	}

	[Token(Token = "0x6000DCF")]
	[Address(RVA = "0xD5F118", Offset = "0xD5F118", VA = "0xD5F118", Slot = "60")]
	protected override void OnHoverEntering(HoverEnterEventArgs interactor)
	{
	}

	[Token(Token = "0x6000DD0")]
	[Address(RVA = "0xD5F120", Offset = "0xD5F120", VA = "0xD5F120", Slot = "63")]
	protected override void OnHoverExited(HoverExitEventArgs interactor)
	{
	}

	[Token(Token = "0x6000DD1")]
	[Address(RVA = "0xD5F128", Offset = "0xD5F128", VA = "0xD5F128")]
	public XRCustomSimpleInteractable()
	{
	}
}
[Token(Token = "0x200025B")]
[CreateAssetMenu(fileName = "Drums Prefab", menuName = "ScriptableObject/Prefabs/Drums")]
public class DrumsScriptableObject : ScriptableObject
{
	[Token(Token = "0x400100C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public uint id;

	[Token(Token = "0x400100D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string prefabName;

	[Token(Token = "0x400100E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint price;

	[Token(Token = "0x400100F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public byte id_rarity;

	[Token(Token = "0x4001010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject prefab;

	[Token(Token = "0x4001011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public uint order;

	[Token(Token = "0x6000DD2")]
	[Address(RVA = "0xD5F130", Offset = "0xD5F130", VA = "0xD5F130")]
	public DrumsScriptableObject()
	{
	}
}
[Token(Token = "0x200025C")]
[CreateAssetMenu(fileName = "DrumsStick Prefab", menuName = "ScriptableObject/Prefabs/DrumsStick")]
public class DrumsStickScriptableObject : ScriptableObject
{
	[Token(Token = "0x4001012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public uint id;

	[Token(Token = "0x4001013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string prefabName;

	[Token(Token = "0x4001014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint price;

	[Token(Token = "0x4001015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public byte id_rarity;

	[Token(Token = "0x4001016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject prefab;

	[Token(Token = "0x4001017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public uint order;

	[Token(Token = "0x6000DD3")]
	[Address(RVA = "0xD5F138", Offset = "0xD5F138", VA = "0xD5F138")]
	public DrumsStickScriptableObject()
	{
	}
}
[Token(Token = "0x200025D")]
[CreateAssetMenu(fileName = "Hands Prefab", menuName = "ScriptableObject/Prefabs/Hands")]
public class HandsScriptableObject : ScriptableObject
{
	[Token(Token = "0x4001018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public uint id;

	[Token(Token = "0x4001019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string prefabName;

	[Token(Token = "0x400101A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint price;

	[Token(Token = "0x400101B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public byte id_rarity;

	[Token(Token = "0x400101C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject leftPrefab;

	[Token(Token = "0x400101D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject rightPrefab;

	[Token(Token = "0x400101E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public uint order;

	[Token(Token = "0x6000DD4")]
	[Address(RVA = "0xD5F140", Offset = "0xD5F140", VA = "0xD5F140")]
	public HandsScriptableObject()
	{
	}
}
[Token(Token = "0x200025E")]
[CreateAssetMenu(fileName = "Haptic Sound", menuName = "ScriptableObject/Song/HapticSound")]
public class HapticSoundScripteable : ScriptableObject
{
	[Token(Token = "0x400101F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip clip;

	[Token(Token = "0x6000DD5")]
	[Address(RVA = "0xD5F148", Offset = "0xD5F148", VA = "0xD5F148")]
	public HapticSoundScripteable()
	{
	}
}
[Token(Token = "0x200025F")]
[CreateAssetMenu(fileName = "PrefabControllerScriptableObject", menuName = "ScriptableObject/Prefabs/PrefabControllerScriptableObject")]
public class PrefabControllerScriptableObject : ScriptableObject
{
	[Token(Token = "0x2000260")]
	[CompilerGenerated]
	private sealed class <LoadAllListSmooth>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PrefabControllerScriptableObject <>4__this;

		[Token(Token = "0x4001033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private uint <i>5__2;

		[Token(Token = "0x170000F5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E06")]
			[Address(RVA = "0xD613D4", Offset = "0xD613D4", VA = "0xD613D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E08")]
			[Address(RVA = "0xD6141C", Offset = "0xD6141C", VA = "0xD6141C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E03")]
		[Address(RVA = "0xD60234", Offset = "0xD60234", VA = "0xD60234")]
		[DebuggerHidden]
		public <LoadAllListSmooth>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6000E04")]
		[Address(RVA = "0xD60D80", Offset = "0xD60D80", VA = "0xD60D80", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E05")]
		[Address(RVA = "0xD60D84", Offset = "0xD60D84", VA = "0xD60D84", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E07")]
		[Address(RVA = "0xD613DC", Offset = "0xD613DC", VA = "0xD613DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private uint maxDrumsId;

	[Token(Token = "0x4001021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private DrumsScriptableObject currentDrumsSO;

	[Token(Token = "0x4001022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private uint maxDrumsStickId;

	[Token(Token = "0x4001023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private DrumsStickScriptableObject currentDrumsStickSO;

	[Token(Token = "0x4001024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private uint maxHandsId;

	[Token(Token = "0x4001025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private HandsScriptableObject currentHandsSO;

	[Token(Token = "0x4001026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private uint maxSpecialItemId;

	[Token(Token = "0x4001027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SpecialItemScriptableObject currentSpecialItemSO;

	[Token(Token = "0x4001028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private RigScripteable currentRig;

	[Token(Token = "0x4001029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private InputActionAsset currentInputActionAsset;

	[Token(Token = "0x400102A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private HapticSoundScripteable currentHapticSoundAsset;

	[Token(Token = "0x400102B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<DrumsScriptableObject> drumsSOList;

	[Token(Token = "0x400102C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<DrumsStickScriptableObject> drumsStickSOList;

	[Token(Token = "0x400102D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<HandsScriptableObject> handsStickSOList;

	[Token(Token = "0x400102E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private List<SpecialItemScriptableObject> specialItemSOList;

	[Token(Token = "0x400102F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private RigScripteable RigSO;

	[Token(Token = "0x6000DD6")]
	[Address(RVA = "0xD5F150", Offset = "0xD5F150", VA = "0xD5F150")]
	private void SetMaxItems()
	{
	}

	[Token(Token = "0x6000DD7")]
	[Address(RVA = "0xD5F170", Offset = "0xD5F170", VA = "0xD5F170")]
	public void LoadAllList()
	{
	}

	[Token(Token = "0x6000DD8")]
	[Address(RVA = "0xD601C0", Offset = "0xD601C0", VA = "0xD601C0")]
	[IteratorStateMachine(typeof(<LoadAllListSmooth>d__18))]
	public IEnumerator LoadAllListSmooth()
	{
		return null;
	}

	[Token(Token = "0x6000DD9")]
	[Address(RVA = "0xD6025C", Offset = "0xD6025C", VA = "0xD6025C")]
	public void UnloadAllList()
	{
	}

	[Token(Token = "0x6000DDA")]
	[Address(RVA = "0xD603BC", Offset = "0xD603BC", VA = "0xD603BC")]
	public List<DrumsScriptableObject> GetDrumsSOList()
	{
		return null;
	}

	[Token(Token = "0x6000DDB")]
	[Address(RVA = "0xD603C4", Offset = "0xD603C4", VA = "0xD603C4")]
	public List<DrumsStickScriptableObject> GetDrumsStickSOList()
	{
		return null;
	}

	[Token(Token = "0x6000DDC")]
	[Address(RVA = "0xD603CC", Offset = "0xD603CC", VA = "0xD603CC")]
	public List<HandsScriptableObject> GetHandsStickSOList()
	{
		return null;
	}

	[Token(Token = "0x6000DDD")]
	[Address(RVA = "0xD603D4", Offset = "0xD603D4", VA = "0xD603D4")]
	public List<SpecialItemScriptableObject> GetSpecialItemSOList()
	{
		return null;
	}

	[Token(Token = "0x6000DDE")]
	[Address(RVA = "0xD603DC", Offset = "0xD603DC", VA = "0xD603DC")]
	private void LoadDrumsSO(uint id)
	{
	}

	[Token(Token = "0x6000DDF")]
	[Address(RVA = "0xD5F660", Offset = "0xD5F660", VA = "0xD5F660")]
	private DrumsScriptableObject GetDrumsSO(uint id)
	{
		return null;
	}

	[Token(Token = "0x6000DE0")]
	[Address(RVA = "0xD6048C", Offset = "0xD6048C", VA = "0xD6048C")]
	private void LoadDrumStickSO(uint id)
	{
	}

	[Token(Token = "0x6000DE1")]
	[Address(RVA = "0xD6053C", Offset = "0xD6053C", VA = "0xD6053C")]
	public void UnLoadDrumsStickSO()
	{
	}

	[Token(Token = "0x6000DE2")]
	[Address(RVA = "0xD5F928", Offset = "0xD5F928", VA = "0xD5F928")]
	private DrumsStickScriptableObject GetDrumsStickSO(uint id)
	{
		return null;
	}

	[Token(Token = "0x6000DE3")]
	[Address(RVA = "0xD60548", Offset = "0xD60548", VA = "0xD60548")]
	private void LoadHandsSO(uint id)
	{
	}

	[Token(Token = "0x6000DE4")]
	[Address(RVA = "0xD605F8", Offset = "0xD605F8", VA = "0xD605F8")]
	public void UnLoadHandsSO()
	{
	}

	[Token(Token = "0x6000DE5")]
	[Address(RVA = "0xD5FCE0", Offset = "0xD5FCE0", VA = "0xD5FCE0")]
	private HandsScriptableObject GetHandsSO(uint id)
	{
		return null;
	}

	[Token(Token = "0x6000DE6")]
	[Address(RVA = "0xD60604", Offset = "0xD60604", VA = "0xD60604")]
	private void LoadSpecialItemSO(uint id)
	{
	}

	[Token(Token = "0x6000DE7")]
	[Address(RVA = "0xD606B4", Offset = "0xD606B4", VA = "0xD606B4")]
	public void UnLoadSpecialItemSO()
	{
	}

	[Token(Token = "0x6000DE8")]
	[Address(RVA = "0xD60094", Offset = "0xD60094", VA = "0xD60094")]
	private SpecialItemScriptableObject GetSpecialItemSO(uint id)
	{
		return null;
	}

	[Token(Token = "0x6000DE9")]
	[Address(RVA = "0xD606C0", Offset = "0xD606C0", VA = "0xD606C0")]
	private void LoadHapticSoundSO(IconsType _iconsType)
	{
	}

	[Token(Token = "0x6000DEA")]
	[Address(RVA = "0xD607D0", Offset = "0xD607D0", VA = "0xD607D0")]
	private void LoadInputAssetSO()
	{
	}

	[Token(Token = "0x6000DEB")]
	[Address(RVA = "0xD60884", Offset = "0xD60884", VA = "0xD60884")]
	private void LoadRigSO()
	{
	}

	[Token(Token = "0x6000DEC")]
	[Address(RVA = "0xD60938", Offset = "0xD60938", VA = "0xD60938")]
	public void UnLoadRigSO()
	{
	}

	[Token(Token = "0x6000DED")]
	[Address(RVA = "0xD606E0", Offset = "0xD606E0", VA = "0xD606E0")]
	private HapticSoundScripteable GetHapticSoundSO(IconsType _iconsType)
	{
		return null;
	}

	[Token(Token = "0x6000DEE")]
	[Address(RVA = "0xD607F0", Offset = "0xD607F0", VA = "0xD607F0")]
	private InputActionAsset GetInputAssetSO()
	{
		return null;
	}

	[Token(Token = "0x6000DEF")]
	[Address(RVA = "0xD608A4", Offset = "0xD608A4", VA = "0xD608A4")]
	private RigScripteable GetRigSO()
	{
		return null;
	}

	[Token(Token = "0x6000DF0")]
	[Address(RVA = "0xD60944", Offset = "0xD60944", VA = "0xD60944")]
	public InputActionAsset GetinputAsset()
	{
		return null;
	}

	[Token(Token = "0x6000DF1")]
	[Address(RVA = "0xD6096C", Offset = "0xD6096C", VA = "0xD6096C")]
	public HapticSoundScripteable GetHapticSoundAsset(IconsType _iconsType)
	{
		return null;
	}

	[Token(Token = "0x6000DF2")]
	[Address(RVA = "0xD60994", Offset = "0xD60994", VA = "0xD60994")]
	public GameObject GetPrefab(uint id, PrefabType type)
	{
		return null;
	}

	[Token(Token = "0x6000DF3")]
	[Address(RVA = "0xD60B28", Offset = "0xD60B28", VA = "0xD60B28")]
	public string GetName(uint id, PrefabType type)
	{
		return null;
	}

	[Token(Token = "0x6000DF4")]
	[Address(RVA = "0xD60C90", Offset = "0xD60C90", VA = "0xD60C90")]
	public uint GetPrice(uint id, PrefabType type)
	{
		return default(uint);
	}

	[Token(Token = "0x6000DF5")]
	[Address(RVA = "0xD60A2C", Offset = "0xD60A2C", VA = "0xD60A2C")]
	private GameObject GetDrums(uint id)
	{
		return null;
	}

	[Token(Token = "0x6000DF6")]
	[Address(RVA = "0xD60C00", Offset = "0xD60C00", VA = "0xD60C00")]
	private string GetDrumsName(uint id)
	{
		return null;
	}

	[Token(Token = "0x6000DF7")]
	[Address(RVA = "0xD60CCC", Offset = "0xD60CCC", VA = "0xD60CCC")]
	private uint GetDrumsPrice(uint id)
	{
		return default(uint);
	}

	[Token(Token = "0x6000DF8")]
	[Address(RVA = "0xD60A50", Offset = "0xD60A50", VA = "0xD60A50")]
	private GameObject GetDrumsStick(uint id)
	{
		return null;
	}

	[Token(Token = "0x6000DF9")]
	[Address(RVA = "0xD60C24", Offset = "0xD60C24", VA = "0xD60C24")]
	private string GetDrumsStickName(uint id)
	{
		return null;
	}

	[Token(Token = "0x6000DFA")]
	[Address(RVA = "0xD60CF0", Offset = "0xD60CF0", VA = "0xD60CF0")]
	private uint GetDrumsStickPrice(uint id)
	{
		return default(uint);
	}

	[Token(Token = "0x6000DFB")]
	[Address(RVA = "0xD60A74", Offset = "0xD60A74", VA = "0xD60A74")]
	private GameObject GetHand(uint id, HandEnum handEnum)
	{
		return null;
	}

	[Token(Token = "0x6000DFC")]
	[Address(RVA = "0xD60C48", Offset = "0xD60C48", VA = "0xD60C48")]
	private string GetHandsName(uint id)
	{
		return null;
	}

	[Token(Token = "0x6000DFD")]
	[Address(RVA = "0xD60D14", Offset = "0xD60D14", VA = "0xD60D14")]
	private uint GetHandsPrice(uint id)
	{
		return default(uint);
	}

	[Token(Token = "0x6000DFE")]
	[Address(RVA = "0xD60AF4", Offset = "0xD60AF4", VA = "0xD60AF4")]
	private GameObject GetRig()
	{
		return null;
	}

	[Token(Token = "0x6000DFF")]
	[Address(RVA = "0xD60AD0", Offset = "0xD60AD0", VA = "0xD60AD0")]
	private GameObject GetSpecialItem(uint id)
	{
		return null;
	}

	[Token(Token = "0x6000E00")]
	[Address(RVA = "0xD60C6C", Offset = "0xD60C6C", VA = "0xD60C6C")]
	private string GetSpecialItemName(uint id)
	{
		return null;
	}

	[Token(Token = "0x6000E01")]
	[Address(RVA = "0xD60D38", Offset = "0xD60D38", VA = "0xD60D38")]
	private uint GetSpecialItemPrice(uint id)
	{
		return default(uint);
	}

	[Token(Token = "0x6000E02")]
	[Address(RVA = "0xD60D5C", Offset = "0xD60D5C", VA = "0xD60D5C")]
	public PrefabControllerScriptableObject()
	{
	}
}
[Token(Token = "0x2000261")]
[CreateAssetMenu(fileName = "Rigs Prefab", menuName = "ScriptableObject/Prefabs/Rigs")]
public class RigScripteable : ScriptableObject
{
	[Token(Token = "0x4001034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject prefab;

	[Token(Token = "0x6000E09")]
	[Address(RVA = "0xD61424", Offset = "0xD61424", VA = "0xD61424")]
	public RigScripteable()
	{
	}
}
[Token(Token = "0x2000262")]
[CreateAssetMenu(fileName = "SongControllerScriptableObject", menuName = "ScriptableObject/Song/SongControllerScriptableObject")]
public class SongControllerScriptableObject : ScriptableObject
{
	[Token(Token = "0x4001035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SongScriptableObject currentSO;

	[Token(Token = "0x4001036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<SongScriptableObject> songSOList;

	[Token(Token = "0x6000E0A")]
	[Address(RVA = "0xD6142C", Offset = "0xD6142C", VA = "0xD6142C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E0B")]
	[Address(RVA = "0xD61430", Offset = "0xD61430", VA = "0xD61430")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E0C")]
	[Address(RVA = "0xD61434", Offset = "0xD61434", VA = "0xD61434")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E0D")]
	[Address(RVA = "0xD61438", Offset = "0xD61438", VA = "0xD61438")]
	public List<AudioClip> GetSoundTrack(int id)
	{
		return null;
	}

	[Token(Token = "0x6000E0E")]
	[Address(RVA = "0xD617D0", Offset = "0xD617D0", VA = "0xD617D0")]
	private void LoadSO(int id)
	{
	}

	[Token(Token = "0x6000E0F")]
	[Address(RVA = "0xD61880", Offset = "0xD61880", VA = "0xD61880")]
	private SongScriptableObject GetSongSO(int id)
	{
		return null;
	}

	[Token(Token = "0x6000E10")]
	[Address(RVA = "0xD61B78", Offset = "0xD61B78", VA = "0xD61B78")]
	public void LoadAllTutorialSongSOList()
	{
	}

	[Token(Token = "0x6000E11")]
	[Address(RVA = "0xD61CE4", Offset = "0xD61CE4", VA = "0xD61CE4")]
	private SongScriptableObject GetSongOfSongSOList(int id)
	{
		return null;
	}

	[Token(Token = "0x6000E12")]
	[Address(RVA = "0xD61DA8", Offset = "0xD61DA8", VA = "0xD61DA8")]
	public List<AudioClip> GetSoundTrackOfSongSOList(int id)
	{
		return null;
	}

	[Token(Token = "0x6000E13")]
	[Address(RVA = "0xD62120", Offset = "0xD62120", VA = "0xD62120")]
	public void UnloadAllSongSOList()
	{
	}

	[Token(Token = "0x6000E14")]
	[Address(RVA = "0xD6219C", Offset = "0xD6219C", VA = "0xD6219C")]
	public UnityEngine.Object GetCSV(int id, int difficulty)
	{
		return null;
	}

	[Token(Token = "0x6000E15")]
	[Address(RVA = "0xD62224", Offset = "0xD62224", VA = "0xD62224")]
	public UnityEngine.Object GetHapticsCSV()
	{
		return null;
	}

	[Token(Token = "0x6000E16")]
	[Address(RVA = "0xD62240", Offset = "0xD62240", VA = "0xD62240")]
	public SongControllerScriptableObject()
	{
	}
}
[Token(Token = "0x2000263")]
[CreateAssetMenu(fileName = "Song_SO", menuName = "ScriptableObject/Song/Song")]
public class SongScriptableObject : ScriptableObject
{
	[Token(Token = "0x4001037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int id;

	[Token(Token = "0x4001038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public new string name;

	[Token(Token = "0x4001039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip track_base;

	[Token(Token = "0x400103A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip track_drums;

	[Token(Token = "0x400103B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip track_steam_1;

	[Token(Token = "0x400103C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioClip track_steam_2;

	[Token(Token = "0x400103D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioClip track_steam_3;

	[Token(Token = "0x400103E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public UnityEngine.Object easy_CSV;

	[Token(Token = "0x400103F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UnityEngine.Object medium_CSV;

	[Token(Token = "0x4001040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public UnityEngine.Object hard_CSV;

	[Token(Token = "0x4001041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public UnityEngine.Object extreme_CSV;

	[Token(Token = "0x4001042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public UnityEngine.Object haptic_csv;

	[Token(Token = "0x6000E17")]
	[Address(RVA = "0xD62248", Offset = "0xD62248", VA = "0xD62248")]
	public SongScriptableObject()
	{
	}
}
[Token(Token = "0x2000264")]
[CreateAssetMenu(fileName = "SpecialItem Prefab", menuName = "ScriptableObject/Prefabs/SpecialItem")]
public class SpecialItemScriptableObject : ScriptableObject
{
	[Token(Token = "0x4001043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public uint id;

	[Token(Token = "0x4001044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public SpecialItemScriptableType type;

	[Token(Token = "0x4001045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string prefabName;

	[Token(Token = "0x4001046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint price;

	[Token(Token = "0x4001047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public byte id_rarity;

	[Token(Token = "0x4001048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject prefab;

	[Token(Token = "0x4001049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public uint order;

	[Token(Token = "0x400104A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int id_song;

	[Token(Token = "0x6000E18")]
	[Address(RVA = "0xD62250", Offset = "0xD62250", VA = "0xD62250")]
	public SpecialItemScriptableObject()
	{
	}
}
[Token(Token = "0x2000265")]
public enum SpecialItemScriptableType
{
	[Token(Token = "0x400104C")]
	NONE,
	[Token(Token = "0x400104D")]
	SONG
}
[Token(Token = "0x2000266")]
[CreateAssetMenu(fileName = "TVCinematicsShotControllerScriptableObject", menuName = "ScriptableObject/TVCinematicsShot/TVCinematicsShotControllerScriptableObject")]
public class TVCinematicsShotControllerScriptableObject : ScriptableObject
{
	[Token(Token = "0x400104E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<TVCinematicsShotScriptableObject> current_shot_list;

	[Token(Token = "0x6000E19")]
	[Address(RVA = "0xD62258", Offset = "0xD62258", VA = "0xD62258")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E1A")]
	[Address(RVA = "0xD6225C", Offset = "0xD6225C", VA = "0xD6225C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E1B")]
	[Address(RVA = "0xD62260", Offset = "0xD62260", VA = "0xD62260")]
	public void UnloadAllShotSOList()
	{
	}

	[Token(Token = "0x6000E1C")]
	[Address(RVA = "0xD622DC", Offset = "0xD622DC", VA = "0xD622DC")]
	public void LoadAllShotSOList(TVCinematicType tVCinematicType)
	{
	}

	[Token(Token = "0x6000E1D")]
	[Address(RVA = "0xD62304", Offset = "0xD62304", VA = "0xD62304")]
	private void LoadAct1ShotSOList()
	{
	}

	[Token(Token = "0x6000E1E")]
	[Address(RVA = "0xD62764", Offset = "0xD62764", VA = "0xD62764")]
	private void LoadAct2ShotSOList()
	{
	}

	[Token(Token = "0x6000E1F")]
	[Address(RVA = "0xD62BC4", Offset = "0xD62BC4", VA = "0xD62BC4")]
	private void LoadAct3ShotSOList()
	{
	}

	[Token(Token = "0x6000E20")]
	[Address(RVA = "0xD63090", Offset = "0xD63090", VA = "0xD63090")]
	private TVCinematicsShotScriptableObject GetShotSO(int id)
	{
		return null;
	}

	[Token(Token = "0x6000E21")]
	[Address(RVA = "0xD63164", Offset = "0xD63164", VA = "0xD63164")]
	public List<TVCinematicsShotScriptableObject> GetShotList(TVCinematicType tVCinematicType)
	{
		return null;
	}

	[Token(Token = "0x6000E22")]
	[Address(RVA = "0xD6316C", Offset = "0xD6316C", VA = "0xD6316C")]
	public TVCinematicsShotControllerScriptableObject()
	{
	}
}
[Token(Token = "0x2000267")]
public enum TVCinematicType
{
	[Token(Token = "0x4001050")]
	NONE,
	[Token(Token = "0x4001051")]
	ACT_1,
	[Token(Token = "0x4001052")]
	ACT_2,
	[Token(Token = "0x4001053")]
	ACT_3,
	[Token(Token = "0x4001054")]
	LENGTH
}
[Token(Token = "0x2000268")]
[CreateAssetMenu(fileName = "TVCinematicsShot_id_SO", menuName = "ScriptableObject/TVCinematicsShot/TVCinematicsShot")]
public class TVCinematicsShotScriptableObject : ScriptableObject
{
	[Token(Token = "0x4001055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public uint id;

	[Token(Token = "0x4001056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Sprite sprite;

	[Token(Token = "0x4001057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip audioClip;

	[Token(Token = "0x4001058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float durationSeconds;

	[Token(Token = "0x4001059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool has_haptic_vibration;

	[Token(Token = "0x400105A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool has_tv_shake;

	[Token(Token = "0x6000E23")]
	[Address(RVA = "0xD63174", Offset = "0xD63174", VA = "0xD63174")]
	public TVCinematicsShotScriptableObject()
	{
	}
}
[Token(Token = "0x2000269")]
public class TempPersistent : MonoBehaviour
{
	[Token(Token = "0x400105B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject MainCamera;

	[Token(Token = "0x400105C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject PeristentCamera;

	[Token(Token = "0x400105D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static TempPersistent instance;

	[Token(Token = "0x6000E24")]
	[Address(RVA = "0xD6317C", Offset = "0xD6317C", VA = "0xD6317C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E25")]
	[Address(RVA = "0xD631D4", Offset = "0xD631D4", VA = "0xD631D4")]
	public TempPersistent()
	{
	}
}
[Token(Token = "0x200026A")]
public class Readme : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x200026B")]
	public class Section
	{
		[Token(Token = "0x4001062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string heading;

		[Token(Token = "0x4001063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string text;

		[Token(Token = "0x4001064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string linkText;

		[Token(Token = "0x4001065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string url;

		[Token(Token = "0x6000E27")]
		[Address(RVA = "0xD631E4", Offset = "0xD631E4", VA = "0xD631E4")]
		public Section()
		{
		}
	}

	[Token(Token = "0x400105E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D icon;

	[Token(Token = "0x400105F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string title;

	[Token(Token = "0x4001060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Section[] sections;

	[Token(Token = "0x4001061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool loadedLayout;

	[Token(Token = "0x6000E26")]
	[Address(RVA = "0xD631DC", Offset = "0xD631DC", VA = "0xD631DC")]
	public Readme()
	{
	}
}
[Token(Token = "0x200026C")]
public class VariationButtonInfo : MonoBehaviour
{
	[Token(Token = "0x4001066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject FrameSupport;

	[Token(Token = "0x4001067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool transforming;

	[Token(Token = "0x6000E28")]
	[Address(RVA = "0xD631EC", Offset = "0xD631EC", VA = "0xD631EC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E29")]
	[Address(RVA = "0xD63240", Offset = "0xD63240", VA = "0xD63240")]
	private void LoadKey()
	{
	}

	[Token(Token = "0x6000E2A")]
	[Address(RVA = "0xD63468", Offset = "0xD63468", VA = "0xD63468")]
	public void ChangeInfoState()
	{
	}

	[Token(Token = "0x6000E2B")]
	[Address(RVA = "0xD6360C", Offset = "0xD6360C", VA = "0xD6360C")]
	private void ActivateInfo()
	{
	}

	[Token(Token = "0x6000E2C")]
	[Address(RVA = "0xD634B8", Offset = "0xD634B8", VA = "0xD634B8")]
	public void DeactivateInfo()
	{
	}

	[Token(Token = "0x6000E2D")]
	[Address(RVA = "0xD63728", Offset = "0xD63728", VA = "0xD63728")]
	public VariationButtonInfo()
	{
	}
}
[Token(Token = "0x200026D")]
public class VariationInfoIngame : MonoBehaviour
{
	[Token(Token = "0x4001068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject FrameSupport;

	[Token(Token = "0x6000E31")]
	[Address(RVA = "0xD6382C", Offset = "0xD6382C", VA = "0xD6382C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E32")]
	[Address(RVA = "0xD638C4", Offset = "0xD638C4", VA = "0xD638C4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E33")]
	[Address(RVA = "0xD63AEC", Offset = "0xD63AEC", VA = "0xD63AEC")]
	public VariationInfoIngame()
	{
	}
}
namespace UnityTemplateProjects
{
	[Token(Token = "0x200026E")]
	public class SimpleCameraController : MonoBehaviour
	{
		[Token(Token = "0x200026F")]
		private class CameraState
		{
			[Token(Token = "0x4001070")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float yaw;

			[Token(Token = "0x4001071")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float pitch;

			[Token(Token = "0x4001072")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float roll;

			[Token(Token = "0x4001073")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float x;

			[Token(Token = "0x4001074")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float y;

			[Token(Token = "0x4001075")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float z;

			[Token(Token = "0x6000E38")]
			[Address(RVA = "0xD63B48", Offset = "0xD63B48", VA = "0xD63B48")]
			public void SetFromTransform(Transform t)
			{
			}

			[Token(Token = "0x6000E39")]
			[Address(RVA = "0xD640C0", Offset = "0xD640C0", VA = "0xD640C0")]
			public void Translate(Vector3 translation)
			{
			}

			[Token(Token = "0x6000E3A")]
			[Address(RVA = "0xD64140", Offset = "0xD64140", VA = "0xD64140")]
			public void LerpTowards(CameraState target, float positionLerpPct, float rotationLerpPct)
			{
			}

			[Token(Token = "0x6000E3B")]
			[Address(RVA = "0xD641C8", Offset = "0xD641C8", VA = "0xD641C8")]
			public void UpdateTransform(Transform t)
			{
			}

			[Token(Token = "0x6000E3C")]
			[Address(RVA = "0xD643EC", Offset = "0xD643EC", VA = "0xD643EC")]
			public CameraState()
			{
			}
		}

		[Token(Token = "0x4001069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CameraState m_TargetCameraState;

		[Token(Token = "0x400106A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CameraState m_InterpolatingCameraState;

		[Token(Token = "0x400106B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("Movement Settings")]
		[Tooltip("Exponential boost factor on translation, controllable by mouse wheel.")]
		public float boost;

		[Token(Token = "0x400106C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[Tooltip("Time it takes to interpolate camera position 99% of the way to the target.")]
		[Range(0.001f, 1f)]
		public float positionLerpTime;

		[Token(Token = "0x400106D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Header("Rotation Settings")]
		[Tooltip("X = Change in mouse position.\nY = Multiplicative factor for camera rotation.")]
		public AnimationCurve mouseSensitivityCurve;

		[Token(Token = "0x400106E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Tooltip("Time it takes to interpolate camera rotation 99% of the way to the target.")]
		[Range(0.001f, 1f)]
		public float rotationLerpTime;

		[Token(Token = "0x400106F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[Tooltip("Whether or not to invert our Y axis for mouse input to rotation.")]
		public bool invertY;

		[Token(Token = "0x6000E34")]
		[Address(RVA = "0xD63AF4", Offset = "0xD63AF4", VA = "0xD63AF4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000E35")]
		[Address(RVA = "0xD63BCC", Offset = "0xD63BCC", VA = "0xD63BCC")]
		private Vector3 GetInputTranslationDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E36")]
		[Address(RVA = "0xD63DFC", Offset = "0xD63DFC", VA = "0xD63DFC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E37")]
		[Address(RVA = "0xD64210", Offset = "0xD64210", VA = "0xD64210")]
		public SimpleCameraController()
		{
		}
	}
}
namespace UnityEngine.XR.PSVR2.Samples
{
	[Token(Token = "0x2000270")]
	public class TrackingModeOrigin : MonoBehaviour
	{
		[Token(Token = "0x4001076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Image m_RecenteredImage;

		[Token(Token = "0x4001077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Color m_RecenteredOffColor;

		[Token(Token = "0x4001078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color m_RecenteredColor;

		[Token(Token = "0x4001079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float m_RecenteredColorResetTime;

		[Token(Token = "0x400107A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float m_LastRecenteredTime;

		[Token(Token = "0x400107B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private TrackingOriginModeFlags m_CurrentTrackingOriginMode;

		[Token(Token = "0x400107C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Text m_CurrentTrackingOriginModeDisplay;

		[Token(Token = "0x400107D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private TrackingOriginModeFlags m_DesiredTrackingOriginMode;

		[Token(Token = "0x400107E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private TrackingOriginModeFlags m_SupportedTrackingOriginModes;

		[Token(Token = "0x400107F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<XRInputSubsystem> s_InputSubsystems;

		[Token(Token = "0x170000F7")]
		public TrackingOriginModeFlags currentTrackingOriginMode
		{
			[Token(Token = "0x6000E3D")]
			[Address(RVA = "0xD643F4", Offset = "0xD643F4", VA = "0xD643F4")]
			get
			{
				return default(TrackingOriginModeFlags);
			}
		}

		[Token(Token = "0x170000F8")]
		public TrackingOriginModeFlags desiredTrackingOriginMode
		{
			[Token(Token = "0x6000E3E")]
			[Address(RVA = "0xD643FC", Offset = "0xD643FC", VA = "0xD643FC")]
			get
			{
				return default(TrackingOriginModeFlags);
			}
			[Token(Token = "0x6000E3F")]
			[Address(RVA = "0xD64404", Offset = "0xD64404", VA = "0xD64404")]
			set
			{
			}
		}

		[Token(Token = "0x170000F9")]
		public TrackingOriginModeFlags supportedTrackingOriginModes
		{
			[Token(Token = "0x6000E40")]
			[Address(RVA = "0xD6440C", Offset = "0xD6440C", VA = "0xD6440C")]
			get
			{
				return default(TrackingOriginModeFlags);
			}
		}

		[Token(Token = "0x6000E41")]
		[Address(RVA = "0xD64414", Offset = "0xD64414", VA = "0xD64414")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000E42")]
		[Address(RVA = "0xD645BC", Offset = "0xD645BC", VA = "0xD645BC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000E43")]
		[Address(RVA = "0xD64764", Offset = "0xD64764", VA = "0xD64764")]
		public void OnDesiredSelectionChanged(int newValue)
		{
		}

		[Token(Token = "0x6000E44")]
		[Address(RVA = "0xD64794", Offset = "0xD64794", VA = "0xD64794")]
		private void TrackingOriginUpdated(XRInputSubsystem obj)
		{
		}

		[Token(Token = "0x6000E45")]
		[Address(RVA = "0xD647B0", Offset = "0xD647B0", VA = "0xD647B0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E46")]
		[Address(RVA = "0xD64A84", Offset = "0xD64A84", VA = "0xD64A84")]
		public TrackingModeOrigin()
		{
		}
	}
	[Token(Token = "0x2000271")]
	public class VRControllerHaptics : MonoBehaviour
	{
		[Token(Token = "0x4001080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private InputActionReference m_InputActionReference;

		[Token(Token = "0x4001081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource m_Source;

		[Token(Token = "0x4001082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[Range(-1f, 1f)]
		[Tooltip("Pan left for left controller (-1.0f), pan right for right controller (1.0f) and pan center for both (0.0f).")]
		private float m_StereoBalance;

		[Token(Token = "0x6000E48")]
		[Address(RVA = "0xD64B40", Offset = "0xD64B40", VA = "0xD64B40")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E49")]
		[Address(RVA = "0xD64B44", Offset = "0xD64B44", VA = "0xD64B44")]
		private void InputAction_performed(InputAction.CallbackContext obj)
		{
		}

		[Token(Token = "0x6000E4A")]
		[Address(RVA = "0xD64B7C", Offset = "0xD64B7C", VA = "0xD64B7C")]
		public VRControllerHaptics()
		{
		}
	}
}
namespace Samples
{
	[Token(Token = "0x2000272")]
	public class ActionToButtonISX : MonoBehaviour
	{
		[Token(Token = "0x4001083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private InputActionReference m_ActionReference;

		[Token(Token = "0x4001084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Color m_EnabledColor;

		[Token(Token = "0x4001085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color m_DisabledColor;

		[Token(Token = "0x4001086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Image m_Image;

		[Token(Token = "0x4001087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Graphic m_Graphic;

		[Token(Token = "0x4001088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Graphic[] m_Graphics;

		[Token(Token = "0x4001089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Type lastActiveType;

		[Token(Token = "0x170000FA")]
		public InputActionReference actionReference
		{
			[Token(Token = "0x6000E4B")]
			[Address(RVA = "0xD64B8C", Offset = "0xD64B8C", VA = "0xD64B8C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E4C")]
			[Address(RVA = "0xD64B94", Offset = "0xD64B94", VA = "0xD64B94")]
			set
			{
			}
		}

		[Token(Token = "0x6000E4D")]
		[Address(RVA = "0xD64B9C", Offset = "0xD64B9C", VA = "0xD64B9C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000E4E")]
		[Address(RVA = "0xD64CC4", Offset = "0xD64CC4", VA = "0xD64CC4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E4F")]
		[Address(RVA = "0xD65080", Offset = "0xD65080", VA = "0xD65080")]
		private void SetVisible(bool visible)
		{
		}

		[Token(Token = "0x6000E50")]
		[Address(RVA = "0xD65154", Offset = "0xD65154", VA = "0xD65154")]
		public ActionToButtonISX()
		{
		}
	}
	[Token(Token = "0x2000273")]
	public class ActionToSliderISX : MonoBehaviour
	{
		[Token(Token = "0x400108A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private InputActionReference m_ActionReference;

		[Token(Token = "0x400108B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Graphic m_Graphic;

		[Token(Token = "0x400108C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Graphic[] m_Graphics;

		[Token(Token = "0x170000FB")]
		public InputActionReference actionReference
		{
			[Token(Token = "0x6000E51")]
			[Address(RVA = "0xD651CC", Offset = "0xD651CC", VA = "0xD651CC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E52")]
			[Address(RVA = "0xD651D4", Offset = "0xD651D4", VA = "0xD651D4")]
			set
			{
			}
		}

		[Token(Token = "0x6000E53")]
		[Address(RVA = "0xD651DC", Offset = "0xD651DC", VA = "0xD651DC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000E54")]
		[Address(RVA = "0xD65280", Offset = "0xD65280", VA = "0xD65280")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E55")]
		[Address(RVA = "0xD653E8", Offset = "0xD653E8", VA = "0xD653E8")]
		private void SetVisible(bool visible)
		{
		}

		[Token(Token = "0x6000E56")]
		[Address(RVA = "0xD654BC", Offset = "0xD654BC", VA = "0xD654BC")]
		public ActionToSliderISX()
		{
		}
	}
	[Token(Token = "0x2000274")]
	public class ActionToVector2SliderISX : MonoBehaviour
	{
		[Token(Token = "0x400108D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private InputActionReference m_ActionReference;

		[Token(Token = "0x400108E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public Slider xAxisSlider;

		[Token(Token = "0x400108F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public Slider yAxisSlider;

		[Token(Token = "0x170000FC")]
		public InputActionReference actionReference
		{
			[Token(Token = "0x6000E57")]
			[Address(RVA = "0xD65520", Offset = "0xD65520", VA = "0xD65520")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E58")]
			[Address(RVA = "0xD65528", Offset = "0xD65528", VA = "0xD65528")]
			set
			{
			}
		}

		[Token(Token = "0x6000E59")]
		[Address(RVA = "0xD65530", Offset = "0xD65530", VA = "0xD65530")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000E5A")]
		[Address(RVA = "0xD65650", Offset = "0xD65650", VA = "0xD65650")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E5B")]
		[Address(RVA = "0xD657E8", Offset = "0xD657E8", VA = "0xD657E8")]
		private void SetVisible(GameObject go, bool visible)
		{
		}

		[Token(Token = "0x6000E5C")]
		[Address(RVA = "0xD65900", Offset = "0xD65900", VA = "0xD65900")]
		public ActionToVector2SliderISX()
		{
		}
	}
	[Token(Token = "0x2000275")]
	public class ActionToVisibilityISX : MonoBehaviour
	{
		[Token(Token = "0x4001090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private InputActionProperty m_ActionReference;

		[Token(Token = "0x4001091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_TargetGameobject;

		[Token(Token = "0x170000FD")]
		public InputActionProperty actionReference
		{
			[Token(Token = "0x6000E5D")]
			[Address(RVA = "0xD65908", Offset = "0xD65908", VA = "0xD65908")]
			get
			{
				return default(InputActionProperty);
			}
			[Token(Token = "0x6000E5E")]
			[Address(RVA = "0xD6591C", Offset = "0xD6591C", VA = "0xD6591C")]
			set
			{
			}
		}

		[Token(Token = "0x170000FE")]
		public GameObject targetGameObject
		{
			[Token(Token = "0x6000E5F")]
			[Address(RVA = "0xD6593C", Offset = "0xD6593C", VA = "0xD6593C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E60")]
			[Address(RVA = "0xD65944", Offset = "0xD65944", VA = "0xD65944")]
			set
			{
			}
		}

		[Token(Token = "0x6000E61")]
		[Address(RVA = "0xD6594C", Offset = "0xD6594C", VA = "0xD6594C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E62")]
		[Address(RVA = "0xD6598C", Offset = "0xD6598C", VA = "0xD6598C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E63")]
		[Address(RVA = "0xD65A84", Offset = "0xD65A84", VA = "0xD65A84")]
		public ActionToVisibilityISX()
		{
		}
	}
	[Token(Token = "0x2000276")]
	public class AutomaticTrackingModeChanger : MonoBehaviour
	{
		[Token(Token = "0x4001092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float m_ChangeInterval;

		[Token(Token = "0x4001093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_TimeRemainingTillChange;

		[Token(Token = "0x4001094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<XRInputSubsystem> s_InputSubsystems;

		[Token(Token = "0x4001095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<TrackingOriginModeFlags> s_SupportedTrackingOriginModes;

		[Token(Token = "0x6000E64")]
		[Address(RVA = "0xD65A8C", Offset = "0xD65A8C", VA = "0xD65A8C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000E65")]
		[Address(RVA = "0xD65A98", Offset = "0xD65A98", VA = "0xD65A98")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E66")]
		[Address(RVA = "0xD65BC0", Offset = "0xD65BC0", VA = "0xD65BC0")]
		private void UpdateSupportedTrackingOriginModes(XRInputSubsystem subsystem)
		{
		}

		[Token(Token = "0x6000E67")]
		[Address(RVA = "0xD65D0C", Offset = "0xD65D0C", VA = "0xD65D0C")]
		private void SetToNextMode(XRInputSubsystem subsystem)
		{
		}

		[Token(Token = "0x6000E68")]
		[Address(RVA = "0xD65E58", Offset = "0xD65E58", VA = "0xD65E58")]
		public AutomaticTrackingModeChanger()
		{
		}
	}
	[Token(Token = "0x2000277")]
	public class DisplayDeviceInfoFromActionISX : MonoBehaviour
	{
		[Token(Token = "0x4001096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private InputActionProperty m_Property;

		[Token(Token = "0x4001097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_RootObject;

		[Token(Token = "0x4001098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Text m_TargetText;

		[Token(Token = "0x170000FF")]
		public InputActionProperty property
		{
			[Token(Token = "0x6000E6A")]
			[Address(RVA = "0xD65F54", Offset = "0xD65F54", VA = "0xD65F54")]
			get
			{
				return default(InputActionProperty);
			}
			[Token(Token = "0x6000E6B")]
			[Address(RVA = "0xD65F68", Offset = "0xD65F68", VA = "0xD65F68")]
			set
			{
			}
		}

		[Token(Token = "0x17000100")]
		public GameObject rootObject
		{
			[Token(Token = "0x6000E6C")]
			[Address(RVA = "0xD65F88", Offset = "0xD65F88", VA = "0xD65F88")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E6D")]
			[Address(RVA = "0xD65F90", Offset = "0xD65F90", VA = "0xD65F90")]
			set
			{
			}
		}

		[Token(Token = "0x17000101")]
		public Text targetText
		{
			[Token(Token = "0x6000E6E")]
			[Address(RVA = "0xD65F98", Offset = "0xD65F98", VA = "0xD65F98")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E6F")]
			[Address(RVA = "0xD65FA0", Offset = "0xD65FA0", VA = "0xD65FA0")]
			set
			{
			}
		}

		[Token(Token = "0x6000E70")]
		[Address(RVA = "0xD65FA8", Offset = "0xD65FA8", VA = "0xD65FA8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000E71")]
		[Address(RVA = "0xD6605C", Offset = "0xD6605C", VA = "0xD6605C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E72")]
		[Address(RVA = "0xD6655C", Offset = "0xD6655C", VA = "0xD6655C")]
		public DisplayDeviceInfoFromActionISX()
		{
		}
	}
	[Token(Token = "0x2000278")]
	public class DisplayDeviceInfoFromXRInput : MonoBehaviour
	{
		[Token(Token = "0x4001099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private XRNode m_XRNode;

		[Token(Token = "0x400109A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject m_RootObject;

		[Token(Token = "0x400109B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Text m_TargetText;

		[Token(Token = "0x400109C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<InputFeatureUsage> m_UsagesReuse;

		[Token(Token = "0x17000102")]
		public GameObject rootObject
		{
			[Token(Token = "0x6000E73")]
			[Address(RVA = "0xD66564", Offset = "0xD66564", VA = "0xD66564")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E74")]
			[Address(RVA = "0xD6656C", Offset = "0xD6656C", VA = "0xD6656C")]
			set
			{
			}
		}

		[Token(Token = "0x17000103")]
		public Text targetText
		{
			[Token(Token = "0x6000E75")]
			[Address(RVA = "0xD66574", Offset = "0xD66574", VA = "0xD66574")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E76")]
			[Address(RVA = "0xD6657C", Offset = "0xD6657C", VA = "0xD6657C")]
			set
			{
			}
		}

		[Token(Token = "0x6000E77")]
		[Address(RVA = "0xD66584", Offset = "0xD66584", VA = "0xD66584")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000E78")]
		[Address(RVA = "0xD66638", Offset = "0xD66638", VA = "0xD66638")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E79")]
		[Address(RVA = "0xD66960", Offset = "0xD66960", VA = "0xD66960")]
		public DisplayDeviceInfoFromXRInput()
		{
		}
	}
	[Token(Token = "0x2000279")]
	public class XRInputToButton : MonoBehaviour
	{
		[Token(Token = "0x400109D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private XRNode m_XRNode;

		[Token(Token = "0x400109E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string m_UsageString;

		[Token(Token = "0x400109F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Color m_EnabledColor;

		[Token(Token = "0x40010A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Color m_DisabledColor;

		[Token(Token = "0x40010A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Image m_Image;

		[Token(Token = "0x40010A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Graphic m_Graphic;

		[Token(Token = "0x40010A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Graphic[] m_Graphics;

		[Token(Token = "0x40010A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private InputFeatureUsage<bool> m_Usage;

		[Token(Token = "0x6000E7A")]
		[Address(RVA = "0xD669E8", Offset = "0xD669E8", VA = "0xD669E8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E7B")]
		[Address(RVA = "0xD66A58", Offset = "0xD66A58", VA = "0xD66A58")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000E7C")]
		[Address(RVA = "0xD66B80", Offset = "0xD66B80", VA = "0xD66B80")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E7D")]
		[Address(RVA = "0xD66CC0", Offset = "0xD66CC0", VA = "0xD66CC0")]
		private void SetVisible(bool visible)
		{
		}

		[Token(Token = "0x6000E7E")]
		[Address(RVA = "0xD66D94", Offset = "0xD66D94", VA = "0xD66D94")]
		public XRInputToButton()
		{
		}
	}
	[Token(Token = "0x200027A")]
	public class XRInputToSlider : MonoBehaviour
	{
		[Token(Token = "0x40010A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private XRNode m_XRNode;

		[Token(Token = "0x40010A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string m_UsageString;

		[Token(Token = "0x40010A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Slider m_Slider;

		[Token(Token = "0x40010A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Graphic m_Graphic;

		[Token(Token = "0x40010A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Graphic[] m_Graphics;

		[Token(Token = "0x40010AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private InputFeatureUsage<float> m_Usage;

		[Token(Token = "0x6000E7F")]
		[Address(RVA = "0xD66E10", Offset = "0xD66E10", VA = "0xD66E10")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000E80")]
		[Address(RVA = "0xD66F80", Offset = "0xD66F80", VA = "0xD66F80")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E81")]
		[Address(RVA = "0xD6705C", Offset = "0xD6705C", VA = "0xD6705C")]
		private void SetVisible(bool visible)
		{
		}

		[Token(Token = "0x6000E82")]
		[Address(RVA = "0xD67130", Offset = "0xD67130", VA = "0xD67130")]
		public XRInputToSlider()
		{
		}
	}
	[Token(Token = "0x200027B")]
	public class XRInputToVector2Slider : MonoBehaviour
	{
		[Token(Token = "0x40010AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private XRNode m_XRNode;

		[Token(Token = "0x40010AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string m_UsageString;

		[Token(Token = "0x40010AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public Slider xAxisSlider;

		[Token(Token = "0x40010AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public Slider yAxisSlider;

		[Token(Token = "0x40010AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private InputFeatureUsage<Vector2> m_Usage;

		[Token(Token = "0x6000E83")]
		[Address(RVA = "0xD67194", Offset = "0xD67194", VA = "0xD67194")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000E84")]
		[Address(RVA = "0xD672E4", Offset = "0xD672E4", VA = "0xD672E4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E85")]
		[Address(RVA = "0xD6741C", Offset = "0xD6741C", VA = "0xD6741C")]
		private void SetVisible(GameObject go, bool visible)
		{
		}

		[Token(Token = "0x6000E86")]
		[Address(RVA = "0xD67534", Offset = "0xD67534", VA = "0xD67534")]
		public XRInputToVector2Slider()
		{
		}
	}
}
namespace Pixelplacement
{
	[Token(Token = "0x200027C")]
	public class Chooser : MonoBehaviour
	{
		[Token(Token = "0x200027D")]
		public enum Method
		{
			[Token(Token = "0x40010D2")]
			Raycast,
			[Token(Token = "0x40010D3")]
			RaycastAll
		}

		[Token(Token = "0x40010B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObjectEvent OnSelected;

		[Token(Token = "0x40010B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObjectEvent OnDeselected;

		[Token(Token = "0x40010B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObjectEvent OnPressed;

		[Token(Token = "0x40010B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObjectEvent OnReleased;

		[Token(Token = "0x40010B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool _cursorPropertiesFolded;

		[Token(Token = "0x40010B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool _unityEventsFolded;

		[Token(Token = "0x40010B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform source;

		[Token(Token = "0x40010B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float raycastDistance;

		[Token(Token = "0x40010B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public LayerMask layermask;

		[Token(Token = "0x40010B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public KeyCode[] pressedInput;

		[Token(Token = "0x40010BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform cursor;

		[Token(Token = "0x40010BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float surfaceOffset;

		[Token(Token = "0x40010BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float idleDistance;

		[Token(Token = "0x40010BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float stabilityDelta;

		[Token(Token = "0x40010BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float snapDelta;

		[Token(Token = "0x40010BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float stableSpeed;

		[Token(Token = "0x40010C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float unstableSpeed;

		[Token(Token = "0x40010C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool flipForward;

		[Token(Token = "0x40010C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		public bool matchSurfaceNormal;

		[Token(Token = "0x40010C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
		public bool autoHide;

		[Token(Token = "0x40010C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7B")]
		public bool cursorHidden;

		[Token(Token = "0x40010C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public bool flipCastDirection;

		[Token(Token = "0x40010C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public LineRenderer lineRenderer;

		[Token(Token = "0x40010C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[SerializeField]
		private Method _method;

		[Token(Token = "0x40010C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private bool _debugView;

		[Token(Token = "0x40010CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Transform _previousCursor;

		[Token(Token = "0x40010CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<Transform> _current;

		[Token(Token = "0x40010CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private List<Transform> _previous;

		[Token(Token = "0x40010CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Transform _currentRaycast;

		[Token(Token = "0x40010CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Transform _previousRaycast;

		[Token(Token = "0x40010CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Vector3 _targetPosition;

		[Token(Token = "0x40010D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private bool _hidden;

		[Token(Token = "0x17000104")]
		public Transform[] Current
		{
			[Token(Token = "0x6000E87")]
			[Address(RVA = "0xD6753C", Offset = "0xD6753C", VA = "0xD6753C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000105")]
		public bool IsHitting
		{
			[Token(Token = "0x6000E88")]
			[Address(RVA = "0xD6758C", Offset = "0xD6758C", VA = "0xD6758C")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E89")]
			[Address(RVA = "0xD67594", Offset = "0xD67594", VA = "0xD67594")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6000E8A")]
		[Address(RVA = "0xD675A0", Offset = "0xD675A0", VA = "0xD675A0")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000E8B")]
		[Address(RVA = "0xD67630", Offset = "0xD67630", VA = "0xD67630")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000E8C")]
		[Address(RVA = "0xD6778C", Offset = "0xD6778C", VA = "0xD6778C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000E8D")]
		[Address(RVA = "0xD6785C", Offset = "0xD6785C", VA = "0xD6785C")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6000E8E")]
		[Address(RVA = "0xD679D0", Offset = "0xD679D0", VA = "0xD679D0")]
		public void Pressed()
		{
		}

		[Token(Token = "0x6000E8F")]
		[Address(RVA = "0xD67C20", Offset = "0xD67C20", VA = "0xD67C20")]
		public void Released()
		{
		}

		[Token(Token = "0x6000E90")]
		[Address(RVA = "0xD67E70", Offset = "0xD67E70", VA = "0xD67E70")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E91")]
		[Address(RVA = "0xD69140", Offset = "0xD69140", VA = "0xD69140")]
		public Chooser()
		{
		}
	}
	[Token(Token = "0x200027E")]
	internal interface IChooser
	{
		[Token(Token = "0x6000E92")]
		void Selected();

		[Token(Token = "0x6000E93")]
		void Deselected();

		[Token(Token = "0x6000E94")]
		void Pressed();

		[Token(Token = "0x6000E95")]
		void Released();
	}
	[Token(Token = "0x200027F")]
	[ExecuteInEditMode]
	[RequireComponent(typeof(Rigidbody))]
	[RequireComponent(typeof(Collider))]
	public sealed class ColliderButton : MonoBehaviour
	{
		[Token(Token = "0x2000280")]
		public enum EaseType
		{
			[Token(Token = "0x400110B")]
			EaseOut,
			[Token(Token = "0x400110C")]
			EaseOutBack
		}

		[Token(Token = "0x40010D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ColliderButtonEvent OnSelected;

		[Token(Token = "0x40010D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ColliderButtonEvent OnDeselected;

		[Token(Token = "0x40010D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ColliderButtonEvent OnClick;

		[Token(Token = "0x40010D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ColliderButtonEvent OnPressed;

		[Token(Token = "0x40010D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ColliderButtonEvent OnReleased;

		[Token(Token = "0x40010DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public KeyCode[] keyInput;

		[Token(Token = "0x40010E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool _unityEventsFolded;

		[Token(Token = "0x40010E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool _scaleResponseFolded;

		[Token(Token = "0x40010E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		public bool _colorResponseFolded;

		[Token(Token = "0x40010E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
		public bool applyColor;

		[Token(Token = "0x40010E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool applyScale;

		[Token(Token = "0x40010E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public LayerMask collisionLayerMask;

		[Token(Token = "0x40010E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Renderer colorRendererTarget;

		[Token(Token = "0x40010E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Image colorImageTarget;

		[Token(Token = "0x40010E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Color selectedColor;

		[Token(Token = "0x40010E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Color pressedColor;

		[Token(Token = "0x40010EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Color disabledColor;

		[Token(Token = "0x40010EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public float colorDuration;

		[Token(Token = "0x40010EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Transform scaleTarget;

		[Token(Token = "0x40010ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Vector3 normalScale;

		[Token(Token = "0x40010EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public Vector3 selectedScale;

		[Token(Token = "0x40010EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Vector3 pressedScale;

		[Token(Token = "0x40010F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public float scaleDuration;

		[Token(Token = "0x40010F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public EaseType scaleEaseType;

		[Token(Token = "0x40010F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public bool resizeGUIBoxCollider;

		[Token(Token = "0x40010F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDD")]
		public bool centerGUIBoxCollider;

		[Token(Token = "0x40010F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public Vector2 guiBoxColliderPadding;

		[Token(Token = "0x40010F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public bool interactable;

		[Token(Token = "0x40010F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE9")]
		private bool _clicking;

		[Token(Token = "0x40010F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private int _selectedCount;

		[Token(Token = "0x40010F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private bool _colliderSelected;

		[Token(Token = "0x40010F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
		private bool _pressed;

		[Token(Token = "0x40010FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF2")]
		private bool _released;

		[Token(Token = "0x40010FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF3")]
		private bool _vrRunning;

		[Token(Token = "0x40010FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private RectTransform _rectTransform;

		[Token(Token = "0x40010FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private EventTrigger _eventTrigger;

		[Token(Token = "0x40010FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private EventTrigger.Entry _pressedEventTrigger;

		[Token(Token = "0x40010FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private EventTrigger.Entry _releasedEventTrigger;

		[Token(Token = "0x4001100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private EventTrigger.Entry _enterEventTrigger;

		[Token(Token = "0x4001101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private EventTrigger.Entry _exitEventTrigger;

		[Token(Token = "0x4001102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private int _colliderCount;

		[Token(Token = "0x4001103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private BoxCollider _boxCollider;

		[Token(Token = "0x4001104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private TweenBase _colorTweenImage;

		[Token(Token = "0x4001105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private TweenBase _colorTweenMaterial;

		[Token(Token = "0x4001106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private TweenBase _scaleTween;

		[Token(Token = "0x4001107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private Color _normalColorRenderer;

		[Token(Token = "0x4001108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private Color _normalColorImage;

		[Token(Token = "0x4001109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private bool _interactableStatus;

		[Token(Token = "0x17000106")]
		public bool IsSelected
		{
			[Token(Token = "0x6000EA0")]
			[Address(RVA = "0xD69A44", Offset = "0xD69A44", VA = "0xD69A44")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000EA1")]
			[Address(RVA = "0xD69A4C", Offset = "0xD69A4C", VA = "0xD69A4C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x14000010")]
		public static event Action<ColliderButton> OnSelectedGlobal
		{
			[Token(Token = "0x6000E96")]
			[Address(RVA = "0xD6922C", Offset = "0xD6922C", VA = "0xD6922C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000E97")]
			[Address(RVA = "0xD692F8", Offset = "0xD692F8", VA = "0xD692F8")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000011")]
		public static event Action<ColliderButton> OnDeselectedGlobal
		{
			[Token(Token = "0x6000E98")]
			[Address(RVA = "0xD693C4", Offset = "0xD693C4", VA = "0xD693C4")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000E99")]
			[Address(RVA = "0xD69494", Offset = "0xD69494", VA = "0xD69494")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000012")]
		public static event Action<ColliderButton> OnClickGlobal
		{
			[Token(Token = "0x6000E9A")]
			[Address(RVA = "0xD69564", Offset = "0xD69564", VA = "0xD69564")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000E9B")]
			[Address(RVA = "0xD69634", Offset = "0xD69634", VA = "0xD69634")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000013")]
		public static event Action<ColliderButton> OnPressedGlobal
		{
			[Token(Token = "0x6000E9C")]
			[Address(RVA = "0xD69704", Offset = "0xD69704", VA = "0xD69704")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000E9D")]
			[Address(RVA = "0xD697D4", Offset = "0xD697D4", VA = "0xD697D4")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000014")]
		public static event Action<ColliderButton> OnReleasedGlobal
		{
			[Token(Token = "0x6000E9E")]
			[Address(RVA = "0xD698A4", Offset = "0xD698A4", VA = "0xD698A4")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000E9F")]
			[Address(RVA = "0xD69974", Offset = "0xD69974", VA = "0xD69974")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6000EA2")]
		[Address(RVA = "0xD69A58", Offset = "0xD69A58", VA = "0xD69A58")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000EA3")]
		[Address(RVA = "0xD69BF0", Offset = "0xD69BF0", VA = "0xD69BF0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000EA4")]
		[Address(RVA = "0xD6A564", Offset = "0xD6A564", VA = "0xD6A564")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000EA5")]
		[Address(RVA = "0xD6A6DC", Offset = "0xD6A6DC", VA = "0xD6A6DC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000EA6")]
		[Address(RVA = "0xD6A754", Offset = "0xD6A754", VA = "0xD6A754")]
		private void Update()
		{
		}

		[Token(Token = "0x6000EA7")]
		[Address(RVA = "0xD6B0C4", Offset = "0xD6B0C4", VA = "0xD6B0C4")]
		private void OnTriggerStay(Collider other)
		{
		}

		[Token(Token = "0x6000EA8")]
		[Address(RVA = "0xD6B0DC", Offset = "0xD6B0DC", VA = "0xD6B0DC")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000EA9")]
		[Address(RVA = "0xD6B0EC", Offset = "0xD6B0EC", VA = "0xD6B0EC")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6000EAA")]
		[Address(RVA = "0xD6B0FC", Offset = "0xD6B0FC", VA = "0xD6B0FC")]
		private void OnPointerDownDelegate(PointerEventData data)
		{
		}

		[Token(Token = "0x6000EAB")]
		[Address(RVA = "0xD6B164", Offset = "0xD6B164", VA = "0xD6B164")]
		private void OnPointerUpDelegate(PointerEventData data)
		{
		}

		[Token(Token = "0x6000EAC")]
		[Address(RVA = "0xD6B1CC", Offset = "0xD6B1CC", VA = "0xD6B1CC")]
		private void OnPointerEnterDelegate(PointerEventData data)
		{
		}

		[Token(Token = "0x6000EAD")]
		[Address(RVA = "0xD6B1D0", Offset = "0xD6B1D0", VA = "0xD6B1D0")]
		private void OnPointerExitDelegate(PointerEventData data)
		{
		}

		[Token(Token = "0x6000EAE")]
		[Address(RVA = "0xD6B1D4", Offset = "0xD6B1D4", VA = "0xD6B1D4")]
		private void OnMouseDown()
		{
		}

		[Token(Token = "0x6000EAF")]
		[Address(RVA = "0xD6B244", Offset = "0xD6B244", VA = "0xD6B244")]
		private void OnMouseUp()
		{
		}

		[Token(Token = "0x6000EB0")]
		[Address(RVA = "0xD6B2C8", Offset = "0xD6B2C8", VA = "0xD6B2C8")]
		private void OnMouseEnter()
		{
		}

		[Token(Token = "0x6000EB1")]
		[Address(RVA = "0xD6B2F8", Offset = "0xD6B2F8", VA = "0xD6B2F8")]
		private void OnMouseExit()
		{
		}

		[Token(Token = "0x6000EB2")]
		[Address(RVA = "0xD6AE10", Offset = "0xD6AE10", VA = "0xD6AE10")]
		public void Deselected()
		{
		}

		[Token(Token = "0x6000EB3")]
		[Address(RVA = "0xD6AD4C", Offset = "0xD6AD4C", VA = "0xD6AD4C")]
		public void Selected()
		{
		}

		[Token(Token = "0x6000EB4")]
		[Address(RVA = "0xD6AEE0", Offset = "0xD6AEE0", VA = "0xD6AEE0")]
		public void Pressed()
		{
		}

		[Token(Token = "0x6000EB5")]
		[Address(RVA = "0xD6AFBC", Offset = "0xD6AFBC", VA = "0xD6AFBC")]
		public void Released()
		{
		}

		[Token(Token = "0x6000EB6")]
		[Address(RVA = "0xD6A414", Offset = "0xD6A414", VA = "0xD6A414")]
		private void ResizeGUIBoxCollider(BoxCollider boxCollider)
		{
		}

		[Token(Token = "0x6000EB7")]
		[Address(RVA = "0xD6A58C", Offset = "0xD6A58C", VA = "0xD6A58C")]
		private void ColorReset()
		{
		}

		[Token(Token = "0x6000EB8")]
		[Address(RVA = "0xD6A97C", Offset = "0xD6A97C", VA = "0xD6A97C")]
		private void ColorNormal()
		{
		}

		[Token(Token = "0x6000EB9")]
		[Address(RVA = "0xD6B430", Offset = "0xD6B430", VA = "0xD6B430")]
		private void ColorSelected()
		{
		}

		[Token(Token = "0x6000EBA")]
		[Address(RVA = "0xD6B738", Offset = "0xD6B738", VA = "0xD6B738")]
		private void ColorPressed()
		{
		}

		[Token(Token = "0x6000EBB")]
		[Address(RVA = "0xD6AB6C", Offset = "0xD6AB6C", VA = "0xD6AB6C")]
		private void ColorDisabled()
		{
		}

		[Token(Token = "0x6000EBC")]
		[Address(RVA = "0xD6A71C", Offset = "0xD6A71C", VA = "0xD6A71C")]
		private void ScaleReset()
		{
		}

		[Token(Token = "0x6000EBD")]
		[Address(RVA = "0xD6B308", Offset = "0xD6B308", VA = "0xD6B308")]
		private void ScaleNormal()
		{
		}

		[Token(Token = "0x6000EBE")]
		[Address(RVA = "0xD6B610", Offset = "0xD6B610", VA = "0xD6B610")]
		private void ScaleSelected()
		{
		}

		[Token(Token = "0x6000EBF")]
		[Address(RVA = "0xD6B918", Offset = "0xD6B918", VA = "0xD6B918")]
		private void ScalePressed()
		{
		}

		[Token(Token = "0x6000EC0")]
		[Address(RVA = "0xD6BA30", Offset = "0xD6BA30", VA = "0xD6BA30")]
		public ColliderButton()
		{
		}
	}
	[Token(Token = "0x2000281")]
	[RequireComponent(typeof(Initialization))]
	public class DisplayObject : MonoBehaviour
	{
		[Token(Token = "0x400110D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _activated;

		[Token(Token = "0x17000107")]
		public bool ActiveSelf
		{
			[Token(Token = "0x6000EC5")]
			[Address(RVA = "0xD6BC98", Offset = "0xD6BC98", VA = "0xD6BC98")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000EC6")]
			[Address(RVA = "0xD6BCB8", Offset = "0xD6BCB8", VA = "0xD6BCB8")]
			set
			{
			}
		}

		[Token(Token = "0x6000EC7")]
		[Address(RVA = "0xD6BCF0", Offset = "0xD6BCF0", VA = "0xD6BCF0")]
		public void Register()
		{
		}

		[Token(Token = "0x6000EC8")]
		[Address(RVA = "0xD6BCC0", Offset = "0xD6BCC0", VA = "0xD6BCC0")]
		public void SetActive(bool value)
		{
		}

		[Token(Token = "0x6000EC9")]
		[Address(RVA = "0xD6BD2C", Offset = "0xD6BD2C", VA = "0xD6BD2C")]
		public void Solo()
		{
		}

		[Token(Token = "0x6000ECA")]
		[Address(RVA = "0xD6C234", Offset = "0xD6C234", VA = "0xD6C234")]
		public void HideAll()
		{
		}

		[Token(Token = "0x6000ECB")]
		[Address(RVA = "0xD6C6B8", Offset = "0xD6C6B8", VA = "0xD6C6B8")]
		public DisplayObject()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000282")]
	public class GameObjectEvent : UnityEvent<GameObject>
	{
		[Token(Token = "0x6000ECC")]
		[Address(RVA = "0xD6C6C0", Offset = "0xD6C6C0", VA = "0xD6C6C0")]
		public GameObjectEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000283")]
	public class ColliderButtonEvent : UnityEvent<ColliderButton>
	{
		[Token(Token = "0x6000ECD")]
		[Address(RVA = "0xD6C708", Offset = "0xD6C708", VA = "0xD6C708")]
		public ColliderButtonEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000284")]
	public class BoolEvent : UnityEvent<bool>
	{
		[Token(Token = "0x6000ECE")]
		[Address(RVA = "0xD6C750", Offset = "0xD6C750", VA = "0xD6C750")]
		public BoolEvent()
		{
		}
	}
	[Token(Token = "0x2000285")]
	[RequireComponent(typeof(Initialization))]
	public abstract class Singleton<T> : MonoBehaviour
	{
		[Token(Token = "0x400110E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private bool _dontDestroyOnLoad;

		[Token(Token = "0x400110F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static T _instance;

		[Token(Token = "0x17000108")]
		public static T Instance
		{
			[Token(Token = "0x6000ECF")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x6000ED0")]
		protected virtual void OnRegistration()
		{
		}

		[Token(Token = "0x6000ED1")]
		public void RegisterSingleton(T instance)
		{
		}

		[Token(Token = "0x6000ED2")]
		protected void Initialize(T instance)
		{
		}

		[Token(Token = "0x6000ED3")]
		protected Singleton()
		{
		}
	}
	[Token(Token = "0x2000286")]
	public static class BezierCurves
	{
		[Token(Token = "0x6000ED4")]
		[Address(RVA = "0xD6C798", Offset = "0xD6C798", VA = "0xD6C798")]
		public static Vector3 GetPoint(Vector3 startPosition, Vector3 controlPoint, Vector3 endPosition, float percentage)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000ED5")]
		[Address(RVA = "0xD6C80C", Offset = "0xD6C80C", VA = "0xD6C80C")]
		public static Vector3 GetFirstDerivative(Vector3 startPoint, Vector3 controlPoint, Vector3 endPosition, float percentage)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000ED6")]
		[Address(RVA = "0xD6C878", Offset = "0xD6C878", VA = "0xD6C878")]
		public static Vector3 GetPoint(Vector3 startPosition, Vector3 endPosition, Vector3 startTangent, Vector3 endTangent, float percentage, bool evenDistribution, int distributionSteps)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000ED7")]
		[Address(RVA = "0xD6CC94", Offset = "0xD6CC94", VA = "0xD6CC94")]
		public static Vector3 GetFirstDerivative(Vector3 startPosition, Vector3 endPosition, Vector3 startTangent, Vector3 endTangent, float percentage)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000ED8")]
		[Address(RVA = "0xD6CBE8", Offset = "0xD6CBE8", VA = "0xD6CBE8")]
		private static Vector3 Locate(Vector3 startPosition, Vector3 endPosition, Vector3 startTangent, Vector3 endTangent, float percentage)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x2000287")]
	public struct CurveDetail
	{
		[Token(Token = "0x4001110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int currentCurve;

		[Token(Token = "0x4001111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float currentCurvePercentage;

		[Token(Token = "0x6000ED9")]
		[Address(RVA = "0xD6CD44", Offset = "0xD6CD44", VA = "0xD6CD44")]
		public CurveDetail(int currentCurve, float currentCurvePercentage)
		{
		}
	}
	[Token(Token = "0x2000288")]
	public enum SplineDirection
	{
		[Token(Token = "0x4001113")]
		Forward,
		[Token(Token = "0x4001114")]
		Backwards
	}
	[Token(Token = "0x2000289")]
	[ExecuteInEditMode]
	public class Spline : MonoBehaviour
	{
		[Token(Token = "0x200028A")]
		private class SplineReparam
		{
			[Token(Token = "0x400112C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float length;

			[Token(Token = "0x400112D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float percentage;

			[Token(Token = "0x6000EEF")]
			[Address(RVA = "0xD6E0FC", Offset = "0xD6E0FC", VA = "0xD6E0FC")]
			public SplineReparam(float length, float percentage)
			{
			}
		}

		[Token(Token = "0x4001116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color color;

		[Token(Token = "0x4001117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Range(0f, 1f)]
		public float toolScale;

		[Token(Token = "0x4001118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public TangentMode defaultTangentMode;

		[Token(Token = "0x4001119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public SplineDirection direction;

		[Token(Token = "0x400111A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool loop;

		[Token(Token = "0x400111B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public SplineFollower[] followers;

		[Token(Token = "0x400111C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private SplineAnchor[] _anchors;

		[Token(Token = "0x400111D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _curveCount;

		[Token(Token = "0x400111E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int _previousAnchorCount;

		[Token(Token = "0x400111F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int _previousChildCount;

		[Token(Token = "0x4001120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool _wasLooping;

		[Token(Token = "0x4001121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
		private bool _previousLoopChoice;

		[Token(Token = "0x4001122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
		private bool _anchorsChanged;

		[Token(Token = "0x4001123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SplineDirection _previousDirection;

		[Token(Token = "0x4001124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float _curvePercentage;

		[Token(Token = "0x4001125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int _operatingCurve;

		[Token(Token = "0x4001126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float _currentCurve;

		[Token(Token = "0x4001127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int _previousLength;

		[Token(Token = "0x4001128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int _slicesPerCurve;

		[Token(Token = "0x4001129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<SplineReparam> _splineReparams;

		[Token(Token = "0x400112A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool _lengthDirty;

		[Token(Token = "0x17000109")]
		public float Length
		{
			[Token(Token = "0x6000EDC")]
			[Address(RVA = "0xD6CE88", Offset = "0xD6CE88", VA = "0xD6CE88")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000EDD")]
			[Address(RVA = "0xD6CE90", Offset = "0xD6CE90", VA = "0xD6CE90")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700010A")]
		public SplineAnchor[] Anchors
		{
			[Token(Token = "0x6000EDE")]
			[Address(RVA = "0xD6CE98", Offset = "0xD6CE98", VA = "0xD6CE98")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010B")]
		public Color SecondaryColor
		{
			[Token(Token = "0x6000EDF")]
			[Address(RVA = "0xD6D044", Offset = "0xD6D044", VA = "0xD6D044")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x14000015")]
		public event Action OnSplineChanged
		{
			[Token(Token = "0x6000EDA")]
			[Address(RVA = "0xD6CD50", Offset = "0xD6CD50", VA = "0xD6CD50")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000EDB")]
			[Address(RVA = "0xD6CDEC", Offset = "0xD6CDEC", VA = "0xD6CDEC")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6000EE0")]
		[Address(RVA = "0xD6D078", Offset = "0xD6D078", VA = "0xD6D078")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000EE1")]
		[Address(RVA = "0xD6D790", Offset = "0xD6D790", VA = "0xD6D790")]
		private void Update()
		{
		}

		[Token(Token = "0x6000EE2")]
		[Address(RVA = "0xD6DC8C", Offset = "0xD6DC8C", VA = "0xD6DC8C")]
		private void HangleLengthChange()
		{
		}

		[Token(Token = "0x6000EE3")]
		[Address(RVA = "0xD6DCB0", Offset = "0xD6DCB0", VA = "0xD6DCB0")]
		private float Reparam(float percent)
		{
			return default(float);
		}

		[Token(Token = "0x6000EE4")]
		[Address(RVA = "0xD6DE34", Offset = "0xD6DE34", VA = "0xD6DE34")]
		public void CalculateLength()
		{
		}

		[Token(Token = "0x6000EE5")]
		[Address(RVA = "0xD6E2F8", Offset = "0xD6E2F8", VA = "0xD6E2F8")]
		public Vector3 Up(float percentage, bool normalized = true)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000EE6")]
		[Address(RVA = "0xD6E5C0", Offset = "0xD6E5C0", VA = "0xD6E5C0")]
		public Vector3 Right(float percentage, bool normalized = true)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000EE7")]
		[Address(RVA = "0xD6E648", Offset = "0xD6E648", VA = "0xD6E648")]
		public Vector3 Forward(float percentage, bool normalized = true)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000EE8")]
		[Address(RVA = "0xD6E380", Offset = "0xD6E380", VA = "0xD6E380")]
		public Vector3 GetDirection(float percentage, bool normalized = true)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000EE9")]
		[Address(RVA = "0xD6E128", Offset = "0xD6E128", VA = "0xD6E128")]
		public Vector3 GetPosition(float percentage, bool normalized = true)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000EEA")]
		[Address(RVA = "0xD6E810", Offset = "0xD6E810", VA = "0xD6E810")]
		public Vector3 GetPosition(float percentage, Vector3 relativeOffset, bool normalized = true)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000EEB")]
		[Address(RVA = "0xD6EA08", Offset = "0xD6EA08", VA = "0xD6EA08")]
		public float ClosestPoint(Vector3 point, int divisions = 100)
		{
			return default(float);
		}

		[Token(Token = "0x6000EEC")]
		[Address(RVA = "0xD6D0C4", Offset = "0xD6D0C4", VA = "0xD6D0C4")]
		public GameObject[] AddAnchors(int count)
		{
			return null;
		}

		[Token(Token = "0x6000EED")]
		[Address(RVA = "0xD6E650", Offset = "0xD6E650", VA = "0xD6E650")]
		public CurveDetail GetCurve(float percentage)
		{
			return default(CurveDetail);
		}

		[Token(Token = "0x6000EEE")]
		[Address(RVA = "0xD6EB08", Offset = "0xD6EB08", VA = "0xD6EB08")]
		public Spline()
		{
		}
	}
	[Token(Token = "0x200028B")]
	public enum TangentMode
	{
		[Token(Token = "0x400112F")]
		Mirrored,
		[Token(Token = "0x4001130")]
		Aligned,
		[Token(Token = "0x4001131")]
		Free
	}
	[Token(Token = "0x200028C")]
	[ExecuteInEditMode]
	public class SplineAnchor : MonoBehaviour
	{
		[Token(Token = "0x4001132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TangentMode tangentMode;

		[Token(Token = "0x4001135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
		private bool _initialized;

		[Token(Token = "0x4001136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[HideInInspector]
		private Transform _masterTangent;

		[Token(Token = "0x4001137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[HideInInspector]
		private Transform _slaveTangent;

		[Token(Token = "0x4001138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TangentMode _previousTangentMode;

		[Token(Token = "0x4001139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 _previousInPosition;

		[Token(Token = "0x400113A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 _previousOutPosition;

		[Token(Token = "0x400113B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 _previousAnchorPosition;

		[Token(Token = "0x400113C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Bounds _skinnedBounds;

		[Token(Token = "0x400113D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Transform _anchor;

		[Token(Token = "0x400113E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Transform _inTangent;

		[Token(Token = "0x400113F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Transform _outTangent;

		[Token(Token = "0x1700010C")]
		public bool RenderingChange
		{
			[Token(Token = "0x6000EF0")]
			[Address(RVA = "0xD6EBB8", Offset = "0xD6EBB8", VA = "0xD6EBB8")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000EF1")]
			[Address(RVA = "0xD6EBC0", Offset = "0xD6EBC0", VA = "0xD6EBC0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700010D")]
		public bool Changed
		{
			[Token(Token = "0x6000EF2")]
			[Address(RVA = "0xD6EBCC", Offset = "0xD6EBCC", VA = "0xD6EBCC")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000EF3")]
			[Address(RVA = "0xD6EBD4", Offset = "0xD6EBD4", VA = "0xD6EBD4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700010E")]
		public Transform Anchor
		{
			[Token(Token = "0x6000EF4")]
			[Address(RVA = "0xD6E7A4", Offset = "0xD6E7A4", VA = "0xD6E7A4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000EF5")]
			[Address(RVA = "0xD6F018", Offset = "0xD6F018", VA = "0xD6F018")]
			private set
			{
			}
		}

		[Token(Token = "0x1700010F")]
		public Transform InTangent
		{
			[Token(Token = "0x6000EF6")]
			[Address(RVA = "0xD6E7EC", Offset = "0xD6E7EC", VA = "0xD6E7EC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000EF7")]
			[Address(RVA = "0xD6F020", Offset = "0xD6F020", VA = "0xD6F020")]
			private set
			{
			}
		}

		[Token(Token = "0x17000110")]
		public Transform OutTangent
		{
			[Token(Token = "0x6000EF8")]
			[Address(RVA = "0xD6E7C8", Offset = "0xD6E7C8", VA = "0xD6E7C8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000EF9")]
			[Address(RVA = "0xD6F028", Offset = "0xD6F028", VA = "0xD6F028")]
			private set
			{
			}
		}

		[Token(Token = "0x6000EFA")]
		[Address(RVA = "0xD6F030", Offset = "0xD6F030", VA = "0xD6F030")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000EFB")]
		[Address(RVA = "0xD6F034", Offset = "0xD6F034", VA = "0xD6F034")]
		private void Update()
		{
		}

		[Token(Token = "0x6000EFC")]
		[Address(RVA = "0xD6F35C", Offset = "0xD6F35C", VA = "0xD6F35C")]
		private void TangentChanged()
		{
		}

		[Token(Token = "0x6000EFD")]
		[Address(RVA = "0xD6EBE0", Offset = "0xD6EBE0", VA = "0xD6EBE0")]
		private void Initialize()
		{
		}

		[Token(Token = "0x6000EFE")]
		[Address(RVA = "0xD6DC0C", Offset = "0xD6DC0C", VA = "0xD6DC0C")]
		public void SetTangentStatus(bool inStatus, bool outStatus)
		{
		}

		[Token(Token = "0x6000EFF")]
		[Address(RVA = "0xD6F654", Offset = "0xD6F654", VA = "0xD6F654")]
		public void Tilt(Vector3 angles)
		{
		}

		[Token(Token = "0x6000F00")]
		[Address(RVA = "0xD6F770", Offset = "0xD6F770", VA = "0xD6F770")]
		public SplineAnchor()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200028D")]
	public class SplineFollower
	{
		[Token(Token = "0x4001140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform target;

		[Token(Token = "0x4001141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float percentage;

		[Token(Token = "0x4001142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool faceDirection;

		[Token(Token = "0x4001143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float _previousPercentage;

		[Token(Token = "0x4001144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool _previousFaceDirection;

		[Token(Token = "0x4001145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		private bool _detached;

		[Token(Token = "0x17000111")]
		public bool WasMoved
		{
			[Token(Token = "0x6000F01")]
			[Address(RVA = "0xD6DA84", Offset = "0xD6DA84", VA = "0xD6DA84")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000F02")]
		[Address(RVA = "0xD6DABC", Offset = "0xD6DABC", VA = "0xD6DABC")]
		public void UpdateOrientation(Spline spline)
		{
		}

		[Token(Token = "0x6000F03")]
		[Address(RVA = "0xD6F778", Offset = "0xD6F778", VA = "0xD6F778")]
		public SplineFollower()
		{
		}
	}
	[Token(Token = "0x200028E")]
	[SelectionBase]
	public class SplineTangent : MonoBehaviour
	{
		[Token(Token = "0x6000F04")]
		[Address(RVA = "0xD6F788", Offset = "0xD6F788", VA = "0xD6F788")]
		public SplineTangent()
		{
		}
	}
	[Token(Token = "0x200028F")]
	[RequireComponent(typeof(LineRenderer))]
	[RequireComponent(typeof(Spline))]
	[ExecuteInEditMode]
	public class SplineRenderer : MonoBehaviour
	{
		[Token(Token = "0x4001146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int segmentsPerCurve;

		[Token(Token = "0x4001147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Range(0f, 1f)]
		public float startPercentage;

		[Token(Token = "0x4001148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Range(0f, 1f)]
		public float endPercentage;

		[Token(Token = "0x4001149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x400114A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Spline _spline;

		[Token(Token = "0x400114B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _initialized;

		[Token(Token = "0x400114C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _previousAnchorsLength;

		[Token(Token = "0x400114D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int _previousSegmentsPerCurve;

		[Token(Token = "0x400114E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int _vertexCount;

		[Token(Token = "0x400114F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float _previousStart;

		[Token(Token = "0x4001150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float _previousEnd;

		[Token(Token = "0x6000F05")]
		[Address(RVA = "0xD6F790", Offset = "0xD6F790", VA = "0xD6F790")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000F06")]
		[Address(RVA = "0xD6F8F0", Offset = "0xD6F8F0", VA = "0xD6F8F0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F07")]
		[Address(RVA = "0xD6FB28", Offset = "0xD6FB28", VA = "0xD6FB28")]
		private void UpdateLineRenderer()
		{
		}

		[Token(Token = "0x6000F08")]
		[Address(RVA = "0xD6FAA8", Offset = "0xD6FAA8", VA = "0xD6FAA8")]
		private void ConfigureLineRenderer()
		{
		}

		[Token(Token = "0x6000F09")]
		[Address(RVA = "0xD6FBE4", Offset = "0xD6FBE4", VA = "0xD6FBE4")]
		public SplineRenderer()
		{
		}
	}
	[Token(Token = "0x2000290")]
	public class State : MonoBehaviour
	{
		[Token(Token = "0x4001151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private StateMachine _stateMachine;

		[Token(Token = "0x17000112")]
		public bool IsFirst
		{
			[Token(Token = "0x6000F0A")]
			[Address(RVA = "0xD6FBFC", Offset = "0xD6FBFC", VA = "0xD6FBFC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000113")]
		public bool IsLast
		{
			[Token(Token = "0x6000F0B")]
			[Address(RVA = "0xD6FC28", Offset = "0xD6FC28", VA = "0xD6FC28")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000114")]
		public StateMachine StateMachine
		{
			[Token(Token = "0x6000F0C")]
			[Address(RVA = "0xD6FC8C", Offset = "0xD6FC8C", VA = "0xD6FC8C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F0D")]
		[Address(RVA = "0xD6FDC4", Offset = "0xD6FDC4", VA = "0xD6FDC4")]
		public void ChangeState(int childIndex)
		{
		}

		[Token(Token = "0x6000F0E")]
		[Address(RVA = "0xD6FEDC", Offset = "0xD6FEDC", VA = "0xD6FEDC")]
		public void ChangeState(GameObject state)
		{
		}

		[Token(Token = "0x6000F0F")]
		[Address(RVA = "0xD701B4", Offset = "0xD701B4", VA = "0xD701B4")]
		public void ChangeState(string state)
		{
		}

		[Token(Token = "0x6000F10")]
		[Address(RVA = "0xD70258", Offset = "0xD70258", VA = "0xD70258")]
		public GameObject Next()
		{
			return null;
		}

		[Token(Token = "0x6000F11")]
		[Address(RVA = "0xD70344", Offset = "0xD70344", VA = "0xD70344")]
		public GameObject Previous()
		{
			return null;
		}

		[Token(Token = "0x6000F12")]
		[Address(RVA = "0xD7040C", Offset = "0xD7040C", VA = "0xD7040C")]
		public void Exit()
		{
		}

		[Token(Token = "0x6000F13")]
		[Address(RVA = "0xD705C8", Offset = "0xD705C8", VA = "0xD705C8")]
		public State()
		{
		}
	}
	[Token(Token = "0x2000291")]
	[RequireComponent(typeof(Initialization))]
	public class StateMachine : MonoBehaviour
	{
		[Token(Token = "0x4001152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject defaultState;

		[Token(Token = "0x4001153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject currentState;

		[Token(Token = "0x4001154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool _unityEventsFolded;

		[Token(Token = "0x4001155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[Tooltip("Should log messages be thrown during usage?")]
		public bool verbose;

		[Token(Token = "0x4001156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		[Tooltip("Can States within this StateMachine be reentered?")]
		public bool allowReentry;

		[Token(Token = "0x4001157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
		[Tooltip("Return to default state on disable?")]
		public bool returnToDefaultOnDisable;

		[Token(Token = "0x4001158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObjectEvent OnStateExited;

		[Token(Token = "0x4001159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObjectEvent OnStateEntered;

		[Token(Token = "0x400115A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UnityEvent OnFirstStateEntered;

		[Token(Token = "0x400115B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public UnityEvent OnFirstStateExited;

		[Token(Token = "0x400115C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public UnityEvent OnLastStateEntered;

		[Token(Token = "0x400115D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public UnityEvent OnLastStateExited;

		[Token(Token = "0x400115F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool _initialized;

		[Token(Token = "0x4001160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		private bool _atFirst;

		[Token(Token = "0x4001161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
		private bool _atLast;

		[Token(Token = "0x17000115")]
		public bool CleanSetup
		{
			[Token(Token = "0x6000F14")]
			[Address(RVA = "0xD705D0", Offset = "0xD705D0", VA = "0xD705D0")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F15")]
			[Address(RVA = "0xD705D8", Offset = "0xD705D8", VA = "0xD705D8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000116")]
		public bool AtFirst
		{
			[Token(Token = "0x6000F16")]
			[Address(RVA = "0xD705E4", Offset = "0xD705E4", VA = "0xD705E4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F17")]
			[Address(RVA = "0xD705EC", Offset = "0xD705EC", VA = "0xD705EC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000117")]
		public bool AtLast
		{
			[Token(Token = "0x6000F18")]
			[Address(RVA = "0xD70620", Offset = "0xD70620", VA = "0xD70620")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F19")]
			[Address(RVA = "0xD70628", Offset = "0xD70628", VA = "0xD70628")]
			private set
			{
			}
		}

		[Token(Token = "0x6000F1A")]
		[Address(RVA = "0xD70270", Offset = "0xD70270", VA = "0xD70270")]
		public GameObject Next()
		{
			return null;
		}

		[Token(Token = "0x6000F1B")]
		[Address(RVA = "0xD7035C", Offset = "0xD7035C", VA = "0xD7035C")]
		public GameObject Previous()
		{
			return null;
		}

		[Token(Token = "0x6000F1C")]
		[Address(RVA = "0xD70424", Offset = "0xD70424", VA = "0xD70424")]
		public void Exit()
		{
		}

		[Token(Token = "0x6000F1D")]
		[Address(RVA = "0xD6FDE4", Offset = "0xD6FDE4", VA = "0xD6FDE4")]
		public GameObject ChangeState(int childIndex)
		{
			return null;
		}

		[Token(Token = "0x6000F1E")]
		[Address(RVA = "0xD706E4", Offset = "0xD706E4", VA = "0xD706E4")]
		public GameObject ChangeState(GameObject state)
		{
			return null;
		}

		[Token(Token = "0x6000F1F")]
		[Address(RVA = "0xD6FF1C", Offset = "0xD6FF1C", VA = "0xD6FF1C")]
		public GameObject ChangeState(string state)
		{
			return null;
		}

		[Token(Token = "0x6000F20")]
		[Address(RVA = "0xD70CA8", Offset = "0xD70CA8", VA = "0xD70CA8")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6000F21")]
		[Address(RVA = "0xD70D30", Offset = "0xD70D30", VA = "0xD70D30")]
		public void StartMachine()
		{
		}

		[Token(Token = "0x6000F22")]
		[Address(RVA = "0xD70B48", Offset = "0xD70B48", VA = "0xD70B48")]
		private void Enter(GameObject state)
		{
		}

		[Token(Token = "0x6000F23")]
		[Address(RVA = "0xD7065C", Offset = "0xD7065C", VA = "0xD7065C")]
		private void Log(string message)
		{
		}

		[Token(Token = "0x6000F24")]
		[Address(RVA = "0xD70DCC", Offset = "0xD70DCC", VA = "0xD70DCC")]
		public StateMachine()
		{
		}
	}
	[Token(Token = "0x2000292")]
	public class Tween
	{
		[Token(Token = "0x2000293")]
		public enum TweenType
		{
			[Token(Token = "0x4001171")]
			Position,
			[Token(Token = "0x4001172")]
			Rotation,
			[Token(Token = "0x4001173")]
			LocalScale,
			[Token(Token = "0x4001174")]
			LightColor,
			[Token(Token = "0x4001175")]
			LightIntensity,
			[Token(Token = "0x4001176")]
			LightRange,
			[Token(Token = "0x4001177")]
			FieldOfView,
			[Token(Token = "0x4001178")]
			SpriteRendererColor,
			[Token(Token = "0x4001179")]
			RawImageColor,
			[Token(Token = "0x400117A")]
			ImageColor,
			[Token(Token = "0x400117B")]
			AnchoredPosition,
			[Token(Token = "0x400117C")]
			Size,
			[Token(Token = "0x400117D")]
			Volume,
			[Token(Token = "0x400117E")]
			Pitch,
			[Token(Token = "0x400117F")]
			PanStereo,
			[Token(Token = "0x4001180")]
			ShaderFloat,
			[Token(Token = "0x4001181")]
			ShaderColor,
			[Token(Token = "0x4001182")]
			ShaderInt,
			[Token(Token = "0x4001183")]
			ShaderVector,
			[Token(Token = "0x4001184")]
			Value,
			[Token(Token = "0x4001185")]
			TextMeshColor,
			[Token(Token = "0x4001186")]
			GUITextColor,
			[Token(Token = "0x4001187")]
			TextColor,
			[Token(Token = "0x4001188")]
			CanvasGroupAlpha,
			[Token(Token = "0x4001189")]
			Spline
		}

		[Token(Token = "0x2000294")]
		public enum LoopType
		{
			[Token(Token = "0x400118B")]
			None,
			[Token(Token = "0x400118C")]
			Loop,
			[Token(Token = "0x400118D")]
			PingPong
		}

		[Token(Token = "0x2000295")]
		public enum TweenStatus
		{
			[Token(Token = "0x400118F")]
			Delayed,
			[Token(Token = "0x4001190")]
			Running,
			[Token(Token = "0x4001191")]
			Canceled,
			[Token(Token = "0x4001192")]
			Stopped,
			[Token(Token = "0x4001193")]
			Finished
		}

		[Token(Token = "0x4001162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static List<TweenBase> activeTweens;

		[Token(Token = "0x4001163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static TweenEngine _instance;

		[Token(Token = "0x4001164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static AnimationCurve _easeIn;

		[Token(Token = "0x4001165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static AnimationCurve _easeInStrong;

		[Token(Token = "0x4001166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static AnimationCurve _easeOut;

		[Token(Token = "0x4001167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static AnimationCurve _easeOutStrong;

		[Token(Token = "0x4001168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static AnimationCurve _easeInOut;

		[Token(Token = "0x4001169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static AnimationCurve _easeInOutStrong;

		[Token(Token = "0x400116A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static AnimationCurve _easeInBack;

		[Token(Token = "0x400116B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static AnimationCurve _easeOutBack;

		[Token(Token = "0x400116C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static AnimationCurve _easeInOutBack;

		[Token(Token = "0x400116D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private static AnimationCurve _easeSpring;

		[Token(Token = "0x400116E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private static AnimationCurve _easeBounce;

		[Token(Token = "0x400116F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private static AnimationCurve _easeWobble;

		[Token(Token = "0x17000118")]
		public static TweenEngine Instance
		{
			[Token(Token = "0x6000F25")]
			[Address(RVA = "0xD70DE0", Offset = "0xD70DE0", VA = "0xD70DE0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000119")]
		public static AnimationCurve EaseLinear
		{
			[Token(Token = "0x6000F73")]
			[Address(RVA = "0xD71148", Offset = "0xD71148", VA = "0xD71148")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011A")]
		public static AnimationCurve EaseIn
		{
			[Token(Token = "0x6000F74")]
			[Address(RVA = "0xD7836C", Offset = "0xD7836C", VA = "0xD7836C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011B")]
		public static AnimationCurve EaseInStrong
		{
			[Token(Token = "0x6000F75")]
			[Address(RVA = "0xD78514", Offset = "0xD78514", VA = "0xD78514")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011C")]
		public static AnimationCurve EaseOut
		{
			[Token(Token = "0x6000F76")]
			[Address(RVA = "0xD78858", Offset = "0xD78858", VA = "0xD78858")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011D")]
		public static AnimationCurve EaseOutStrong
		{
			[Token(Token = "0x6000F77")]
			[Address(RVA = "0xD78A00", Offset = "0xD78A00", VA = "0xD78A00")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011E")]
		public static AnimationCurve EaseInOut
		{
			[Token(Token = "0x6000F78")]
			[Address(RVA = "0xD78D3C", Offset = "0xD78D3C", VA = "0xD78D3C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011F")]
		public static AnimationCurve EaseInOutStrong
		{
			[Token(Token = "0x6000F79")]
			[Address(RVA = "0xD78DF8", Offset = "0xD78DF8", VA = "0xD78DF8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000120")]
		public static AnimationCurve EaseInBack
		{
			[Token(Token = "0x6000F7A")]
			[Address(RVA = "0xD7900C", Offset = "0xD7900C", VA = "0xD7900C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000121")]
		public static AnimationCurve EaseOutBack
		{
			[Token(Token = "0x6000F7B")]
			[Address(RVA = "0xD791B8", Offset = "0xD791B8", VA = "0xD791B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000122")]
		public static AnimationCurve EaseInOutBack
		{
			[Token(Token = "0x6000F7C")]
			[Address(RVA = "0xD79364", Offset = "0xD79364", VA = "0xD79364")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000123")]
		public static AnimationCurve EaseSpring
		{
			[Token(Token = "0x6000F7D")]
			[Address(RVA = "0xD7951C", Offset = "0xD7951C", VA = "0xD7951C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000124")]
		public static AnimationCurve EaseBounce
		{
			[Token(Token = "0x6000F7E")]
			[Address(RVA = "0xD797F0", Offset = "0xD797F0", VA = "0xD797F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000125")]
		public static AnimationCurve EaseWobble
		{
			[Token(Token = "0x6000F7F")]
			[Address(RVA = "0xD79C48", Offset = "0xD79C48", VA = "0xD79C48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F26")]
		[Address(RVA = "0xD71024", Offset = "0xD71024", VA = "0xD71024")]
		public static TweenBase Shake(Transform target, Vector3 initialPosition, Vector3 intensity, float duration, float delay, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000F27")]
		[Address(RVA = "0xD712F8", Offset = "0xD712F8", VA = "0xD712F8")]
		public static TweenBase Spline(Spline spline, Transform target, float startPercentage, float endPercentage, bool faceDirection, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000F28")]
		[Address(RVA = "0xD71544", Offset = "0xD71544", VA = "0xD71544")]
		public static TweenBase CanvasGroupAlpha(CanvasGroup target, float endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000F29")]
		[Address(RVA = "0xD716FC", Offset = "0xD716FC", VA = "0xD716FC")]
		public static TweenBase CanvasGroupAlpha(CanvasGroup target, float startValue, float endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000F2A")]
		[Address(RVA = "0xD717CC", Offset = "0xD717CC", VA = "0xD717CC")]
		public static TweenBase Value(Rect startValue, Rect endValue, Action<Rect> valueUpdatedCallback, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000F2B")]
		[Address(RVA = "0xD71A00", Offset = "0xD71A00", VA = "0xD71A00")]
		public static TweenBase Value(Vector4 startValue, Vector4 endValue, Action<Vector4> valueUpdatedCallback, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000F2C")]
		[Address(RVA = "0xD71C34", Offset = "0xD71C34", VA = "0xD71C34")]
		public static TweenBase Value(Vector3 startValue, Vector3 endValue, Action<Vector3> valueUpdatedCallback, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000F2D")]
		[Address(RVA = "0xD71E40", Offset = "0xD71E40", VA = "0xD71E40")]
		public static TweenBase Value(Vector2 startValue, Vector2 endValue, Action<Vector2> valueUpdatedCallback, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000F2E")]
		[Address(RVA = "0xD7201C", Offset = "0xD7201C", VA = "0xD7201C")]
		public static TweenBase Value(Color startValue, Color endValue, Action<Color> valueUpdatedCallback, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000F2F")]
		[Address(RVA = "0xD72250", Offset = "0xD72250", VA = "0xD72250")]
		public static TweenBase Value(int startValue, int endValue, Action<int> valueUpdatedCallback, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000F30")]
		[Address(RVA = "0xD72414", Offset = "0xD72414", VA = "0xD72414")]
		public static TweenBase Value(float startValue, float endValue, Action<float> valueUpdatedCallback, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000F31")]
		[Address(RVA = "0xD725C8", Offset = "0xD725C8", VA = "0xD725C8")]
		public static TweenBase ShaderVector(Material target, string propertyName, Vector4 endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000F32")]
		[Address(RVA = "0xD727E4", Offset = "0xD727E4", VA = "0xD727E4")]
		public static TweenBase ShaderVector(Material target, string propertyName, Vector4 startValue, Vector4 endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000F33")]
		[Address(RVA = "0xD72900", Offset = "0xD72900", VA = "0xD72900")]
		public static TweenBase ShaderInt(Material target, string propertyName, int endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000F34")]
		[Address(RVA = "0xD72ADC", Offset = "0xD72ADC", VA = "0xD72ADC")]
		public static TweenBase ShaderInt(Material target, string propertyName, int startValue, int endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000F35")]
		[Address(RVA = "0xD72BC0", Offset = "0xD72BC0", VA = "0xD72BC0")]
		public static TweenBase ShaderColor(Material target, string propertyName, Color endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000F36")]
		[Address(RVA = "0xD72DDC", Offset = "0xD72DDC", VA = "0xD72DDC")]
		public static TweenBase ShaderColor(Material target, string propertyName, Color startValue, Color endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000F37")]
		[Address(RVA = "0xD72EF8", Offset = "0xD72EF8", VA = "0xD72EF8")]
		public static TweenBase ShaderFloat(Material target, string propertyName, float endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000F38")]
		[Address(RVA = "0xD730DC", Offset = "0xD730DC", VA = "0xD730DC")]
		public static TweenBase ShaderFloat(Material target, string propertyName, float startValue, float endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000F39")]
		[Address(RVA = "0xD731C0", Offset = "0xD731C0", VA = "0xD731C0")]
		public static TweenBase Pitch(AudioSource target, float endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000F3A")]
		[Address(RVA = "0xD73378", Offset = "0xD73378", VA = "0xD73378")]
		public static TweenBase Pitch(AudioSource target, float startValue, float endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000F3B")]
		[Address(RVA = "0xD73448", Offset = "0xD73448", VA = "0xD73448")]
		public static TweenBase PanStereo(AudioSource target, float endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000F3C")]
		[Address(RVA = "0xD73600", Offset = "0xD73600", VA = "0xD73600")]
		public static TweenBase PanStereo(AudioSource target, float startValue, float endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000F3D")]
		[Address(RVA = "0xD736D0", Offset = "0xD736D0", VA = "0xD736D0")]
		public static TweenBase Volume(AudioSource target, float endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000F3E")]
		[Address(RVA = "0xD73888", Offset = "0xD73888", VA = "0xD73888")]
		public static TweenBase Volume(AudioSource target, float startValue, float endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000F3F")]
		[Address(RVA = "0xD73958", Offset = "0xD73958", VA = "0xD73958")]
		public static TweenBase Size(RectTransform target, Vector2 endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000F40")]
		[Address(RVA = "0xD73B1C", Offset = "0xD73B1C", VA = "0xD73B1C")]
		public static TweenBase Size(RectTransform target, Vector2 startValue, Vector2 endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000F41")]
		[Address(RVA = "0xD73C04", Offset = "0xD73C04", VA = "0xD73C04")]
		public static TweenBase FieldOfView(Camera target, float endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000F42")]
		[Address(RVA = "0xD73DBC", Offset = "0xD73DBC", VA = "0xD73DBC")]
		public static TweenBase FieldOfView(Camera target, float startValue, float endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000F43")]
		[Address(RVA = "0xD73E8C", Offset = "0xD73E8C", VA = "0xD73E8C")]
		public static TweenBase LightRange(Light target, float endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000F44")]
		[Address(RVA = "0xD74044", Offset = "0xD74044", VA = "0xD74044")]
		public static TweenBase LightRange(Light target, float startValue, float endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000F45")]
		[Address(RVA = "0xD74114", Offset = "0xD74114", VA = "0xD74114")]
		public static TweenBase LightIntensity(Light target, float endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000F46")]
		[Address(RVA = "0xD742CC", Offset = "0xD742CC", VA = "0xD742CC")]
		public static TweenBase LightIntensity(Light target, float startValue, float endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000F47")]
		[Address(RVA = "0xD7439C", Offset = "0xD7439C", VA = "0xD7439C")]
		public static TweenBase LocalScale(Transform target, Vector3 endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000F48")]
		[Address(RVA = "0xD74580", Offset = "0xD74580", VA = "0xD74580")]
		public static TweenBase LocalScale(Transform target, Vector3 startValue, Vector3 endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000F49")]
		[Address(RVA = "0xD74680", Offset = "0xD74680", VA = "0xD74680")]
		public static TweenBase Color(RawImage target, Color endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000F4A")]
		[Address(RVA = "0xD74870", Offset = "0xD74870", VA = "0xD74870")]
		public static TweenBase Color(RawImage target, Color startValue, Color endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000F4B")]
		[Address(RVA = "0xD74988", Offset = "0xD74988", VA = "0xD74988")]
		public static TweenBase Color(Image target, Color endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000F4C")]
		[Address(RVA = "0xD74B78", Offset = "0xD74B78", VA = "0xD74B78")]
		public static TweenBase Color(Image target, Color startValue, Color endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000F4D")]
		[Address(RVA = "0xD74C90", Offset = "0xD74C90", VA = "0xD74C90")]
		public static TweenBase Color(Text target, Color endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000F4E")]
		[Address(RVA = "0xD74E80", Offset = "0xD74E80", VA = "0xD74E80")]
		public static TweenBase Color(Text target, Color startValue, Color endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000F4F")]
		[Address(RVA = "0xD74F98", Offset = "0xD74F98", VA = "0xD74F98")]
		public static TweenBase Color(Light target, Color endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000F50")]
		[Address(RVA = "0xD75188", Offset = "0xD75188", VA = "0xD75188")]
		public static TweenBase Color(Light target, Color startValue, Color endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000F51")]
		[Address(RVA = "0xD75298", Offset = "0xD75298", VA = "0xD75298")]
		public static TweenBase Color(TextMesh target, Color endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000F52")]
		[Address(RVA = "0xD75488", Offset = "0xD75488", VA = "0xD75488")]
		public static TweenBase Color(TextMesh target, Color startValue, Color endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000F53")]
		[Address(RVA = "0xD75598", Offset = "0xD75598", VA = "0xD75598")]
		public static TweenBase Color(Material target, Color endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000F54")]
		[Address(RVA = "0xD756D0", Offset = "0xD756D0", VA = "0xD756D0")]
		public static TweenBase Color(Material target, Color startColor, Color endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000F55")]
		[Address(RVA = "0xD757E0", Offset = "0xD757E0", VA = "0xD757E0")]
		public static TweenBase Color(Renderer target, Color endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000F56")]
		[Address(RVA = "0xD758D0", Offset = "0xD758D0", VA = "0xD758D0")]
		public static TweenBase Color(Renderer target, Color startColor, Color endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000F57")]
		[Address(RVA = "0xD759E8", Offset = "0xD759E8", VA = "0xD759E8")]
		public static TweenBase Color(SpriteRenderer target, Color endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000F58")]
		[Address(RVA = "0xD75BD8", Offset = "0xD75BD8", VA = "0xD75BD8")]
		public static TweenBase Color(SpriteRenderer target, Color startColor, Color endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000F59")]
		[Address(RVA = "0xD75CE8", Offset = "0xD75CE8", VA = "0xD75CE8")]
		public static TweenBase Color(Camera target, Color endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000F5A")]
		[Address(RVA = "0xD75ED8", Offset = "0xD75ED8", VA = "0xD75ED8")]
		public static TweenBase Color(Camera target, Color startColor, Color endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000F5B")]
		[Address(RVA = "0xD75FE8", Offset = "0xD75FE8", VA = "0xD75FE8")]
		public static TweenBase Position(Transform target, Vector3 endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000F5C")]
		[Address(RVA = "0xD761CC", Offset = "0xD761CC", VA = "0xD761CC")]
		public static TweenBase Position(Transform target, Vector3 startValue, Vector3 endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000F5D")]
		[Address(RVA = "0xD762CC", Offset = "0xD762CC", VA = "0xD762CC")]
		public static TweenBase AnchoredPosition(RectTransform target, Vector2 endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000F5E")]
		[Address(RVA = "0xD76490", Offset = "0xD76490", VA = "0xD76490")]
		public static TweenBase AnchoredPosition(RectTransform target, Vector2 startValue, Vector2 endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000F5F")]
		[Address(RVA = "0xD76578", Offset = "0xD76578", VA = "0xD76578")]
		public static TweenBase LocalPosition(Transform target, Vector3 endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000F60")]
		[Address(RVA = "0xD7675C", Offset = "0xD7675C", VA = "0xD7675C")]
		public static TweenBase LocalPosition(Transform target, Vector3 startValue, Vector3 endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000F61")]
		[Address(RVA = "0xD7685C", Offset = "0xD7685C", VA = "0xD7685C")]
		public static TweenBase Rotate(Transform target, Vector3 amount, Space space, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000F62")]
		[Address(RVA = "0xD76A60", Offset = "0xD76A60", VA = "0xD76A60")]
		public static TweenBase Rotation(Transform target, Vector3 endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000F63")]
		[Address(RVA = "0xD76C90", Offset = "0xD76C90", VA = "0xD76C90")]
		public static TweenBase Rotation(Transform target, Vector3 startValue, Vector3 endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000F64")]
		[Address(RVA = "0xD76E20", Offset = "0xD76E20", VA = "0xD76E20")]
		public static TweenBase Rotation(Transform target, Quaternion endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000F65")]
		[Address(RVA = "0xD76F74", Offset = "0xD76F74", VA = "0xD76F74")]
		public static TweenBase Rotation(Transform target, Quaternion startValue, Quaternion endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000F66")]
		[Address(RVA = "0xD77084", Offset = "0xD77084", VA = "0xD77084")]
		public static TweenBase LocalRotation(Transform target, Vector3 endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000F67")]
		[Address(RVA = "0xD772B4", Offset = "0xD772B4", VA = "0xD772B4")]
		public static TweenBase LocalRotation(Transform target, Vector3 startValue, Vector3 endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000F68")]
		[Address(RVA = "0xD77444", Offset = "0xD77444", VA = "0xD77444")]
		public static TweenBase LocalRotation(Transform target, Quaternion endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000F69")]
		[Address(RVA = "0xD77598", Offset = "0xD77598", VA = "0xD77598")]
		public static TweenBase LocalRotation(Transform target, Quaternion startValue, Quaternion endValue, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000F6A")]
		[Address(RVA = "0xD776A8", Offset = "0xD776A8", VA = "0xD776A8")]
		public static TweenBase LookAt(Transform target, Transform targetToLookAt, Vector3 up, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000F6B")]
		[Address(RVA = "0xD777EC", Offset = "0xD777EC", VA = "0xD777EC")]
		public static TweenBase LookAt(Transform target, Vector3 positionToLookAt, Vector3 up, float duration, float delay, [Optional] AnimationCurve easeCurve, LoopType loop = LoopType.None, [Optional] Action startCallback, [Optional] Action completeCallback, bool obeyTimescale = true)
		{
			return null;
		}

		[Token(Token = "0x6000F6C")]
		[Address(RVA = "0xD77914", Offset = "0xD77914", VA = "0xD77914")]
		public static void Stop(int targetInstanceID, TweenType tweenType)
		{
		}

		[Token(Token = "0x6000F6D")]
		[Address(RVA = "0xD77AC0", Offset = "0xD77AC0", VA = "0xD77AC0")]
		public static void Stop(int targetInstanceID)
		{
		}

		[Token(Token = "0x6000F6E")]
		[Address(RVA = "0xD77C2C", Offset = "0xD77C2C", VA = "0xD77C2C")]
		public static void StopAll()
		{
		}

		[Token(Token = "0x6000F6F")]
		[Address(RVA = "0xD77D9C", Offset = "0xD77D9C", VA = "0xD77D9C")]
		public static void FinishAll()
		{
		}

		[Token(Token = "0x6000F70")]
		[Address(RVA = "0xD77F18", Offset = "0xD77F18", VA = "0xD77F18")]
		public static void Finish(int targetInstanceID)
		{
		}

		[Token(Token = "0x6000F71")]
		[Address(RVA = "0xD78084", Offset = "0xD78084", VA = "0xD78084")]
		public static void Cancel(int targetInstanceID)
		{
		}

		[Token(Token = "0x6000F72")]
		[Address(RVA = "0xD781F0", Offset = "0xD781F0", VA = "0xD781F0")]
		public static void CancelAll()
		{
		}

		[Token(Token = "0x6000F80")]
		[Address(RVA = "0xD77B14", Offset = "0xD77B14", VA = "0xD77B14")]
		private static void StopInstanceTarget(int id)
		{
		}

		[Token(Token = "0x6000F81")]
		[Address(RVA = "0xD79FC8", Offset = "0xD79FC8", VA = "0xD79FC8")]
		private static void StopInstanceTargetType(int id, TweenType type)
		{
		}

		[Token(Token = "0x6000F82")]
		[Address(RVA = "0xD77F6C", Offset = "0xD77F6C", VA = "0xD77F6C")]
		private static void FinishInstanceTarget(int id)
		{
		}

		[Token(Token = "0x6000F83")]
		[Address(RVA = "0xD780D8", Offset = "0xD780D8", VA = "0xD780D8")]
		private static void CancelInstanceTarget(int id)
		{
		}

		[Token(Token = "0x6000F84")]
		[Address(RVA = "0xD7123C", Offset = "0xD7123C", VA = "0xD7123C")]
		private static void SendTweenForProcessing(TweenBase tween, bool interrupt = false)
		{
		}

		[Token(Token = "0x6000F85")]
		[Address(RVA = "0xD7A200", Offset = "0xD7A200", VA = "0xD7A200")]
		public Tween()
		{
		}
	}
	[Token(Token = "0x2000296")]
	public class Initialization : MonoBehaviour
	{
		[Token(Token = "0x4001194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private StateMachine _stateMachine;

		[Token(Token = "0x4001195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private DisplayObject _displayObject;

		[Token(Token = "0x6000F87")]
		[Address(RVA = "0xD7A2A0", Offset = "0xD7A2A0", VA = "0xD7A2A0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F88")]
		[Address(RVA = "0xD7A5C0", Offset = "0xD7A5C0", VA = "0xD7A5C0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F89")]
		[Address(RVA = "0xD7A640", Offset = "0xD7A640", VA = "0xD7A640")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000F8A")]
		[Address(RVA = "0xD7A3CC", Offset = "0xD7A3CC", VA = "0xD7A3CC")]
		private void InitializeSingleton()
		{
		}

		[Token(Token = "0x6000F8B")]
		[Address(RVA = "0xD7A768", Offset = "0xD7A768", VA = "0xD7A768")]
		public Initialization()
		{
		}
	}
	[Token(Token = "0x2000297")]
	public class LayerMaskHelper
	{
		[Token(Token = "0x6000F8C")]
		[Address(RVA = "0xD7A770", Offset = "0xD7A770", VA = "0xD7A770")]
		public static int OnlyIncluding(params int[] layers)
		{
			return default(int);
		}

		[Token(Token = "0x6000F8D")]
		[Address(RVA = "0xD7A7DC", Offset = "0xD7A7DC", VA = "0xD7A7DC")]
		public static int Everything()
		{
			return default(int);
		}

		[Token(Token = "0x6000F8E")]
		[Address(RVA = "0xD7A7E4", Offset = "0xD7A7E4", VA = "0xD7A7E4")]
		public static int Default()
		{
			return default(int);
		}

		[Token(Token = "0x6000F8F")]
		[Address(RVA = "0xD7A7EC", Offset = "0xD7A7EC", VA = "0xD7A7EC")]
		public static int Nothing()
		{
			return default(int);
		}

		[Token(Token = "0x6000F90")]
		[Address(RVA = "0xD7A7F4", Offset = "0xD7A7F4", VA = "0xD7A7F4")]
		public static int EverythingBut(params int[] layers)
		{
			return default(int);
		}

		[Token(Token = "0x6000F91")]
		[Address(RVA = "0xD7A808", Offset = "0xD7A808", VA = "0xD7A808")]
		public static bool ContainsLayer(LayerMask layerMask, int layer)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F92")]
		[Address(RVA = "0xD7A774", Offset = "0xD7A774", VA = "0xD7A774")]
		private static int MakeMask(params int[] layers)
		{
			return default(int);
		}

		[Token(Token = "0x6000F93")]
		[Address(RVA = "0xD7A840", Offset = "0xD7A840", VA = "0xD7A840")]
		public LayerMaskHelper()
		{
		}
	}
	[Token(Token = "0x2000298")]
	public static class CoreMath
	{
		[Token(Token = "0x6000F94")]
		[Address(RVA = "0xD7A848", Offset = "0xD7A848", VA = "0xD7A848")]
		public static float LinearInterpolate(float from, float to, float percentage)
		{
			return default(float);
		}

		[Token(Token = "0x6000F95")]
		[Address(RVA = "0xD7A858", Offset = "0xD7A858", VA = "0xD7A858")]
		public static Vector2 LinearInterpolate(Vector2 from, Vector2 to, float percentage)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000F96")]
		[Address(RVA = "0xD7A874", Offset = "0xD7A874", VA = "0xD7A874")]
		public static Vector3 LinearInterpolate(Vector3 from, Vector3 to, float percentage)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000F97")]
		[Address(RVA = "0xD7A89C", Offset = "0xD7A89C", VA = "0xD7A89C")]
		public static Vector4 LinearInterpolate(Vector4 from, Vector4 to, float percentage)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6000F98")]
		[Address(RVA = "0xD7A8D4", Offset = "0xD7A8D4", VA = "0xD7A8D4")]
		public static Rect LinearInterpolate(Rect from, Rect to, float percentage)
		{
			return default(Rect);
		}

		[Token(Token = "0x6000F99")]
		[Address(RVA = "0xD7A9D8", Offset = "0xD7A9D8", VA = "0xD7A9D8")]
		public static Color LinearInterpolate(Color from, Color to, float percentage)
		{
			return default(Color);
		}

		[Token(Token = "0x6000F9A")]
		[Address(RVA = "0xD7AA10", Offset = "0xD7AA10", VA = "0xD7AA10")]
		public static float EvaluateCurve(AnimationCurve curve, float percentage)
		{
			return default(float);
		}
	}
}
namespace Pixelplacement.TweenSystem
{
	[Token(Token = "0x2000299")]
	public abstract class TweenBase
	{
		[Token(Token = "0x4001196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int targetInstanceID;

		[Token(Token = "0x4001197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Tween.TweenType tweenType;

		[Token(Token = "0x40011A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		protected float elapsedTime;

		[Token(Token = "0x17000126")]
		public Tween.TweenStatus Status
		{
			[Token(Token = "0x6000F9B")]
			[Address(RVA = "0xD7AA90", Offset = "0xD7AA90", VA = "0xD7AA90")]
			[CompilerGenerated]
			get
			{
				return default(Tween.TweenStatus);
			}
			[Token(Token = "0x6000F9C")]
			[Address(RVA = "0xD7AA98", Offset = "0xD7AA98", VA = "0xD7AA98")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000127")]
		public float Duration
		{
			[Token(Token = "0x6000F9D")]
			[Address(RVA = "0xD7AAA0", Offset = "0xD7AAA0", VA = "0xD7AAA0")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F9E")]
			[Address(RVA = "0xD7AAA8", Offset = "0xD7AAA8", VA = "0xD7AAA8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000128")]
		public AnimationCurve Curve
		{
			[Token(Token = "0x6000F9F")]
			[Address(RVA = "0xD7AAB0", Offset = "0xD7AAB0", VA = "0xD7AAB0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FA0")]
			[Address(RVA = "0xD7AAB8", Offset = "0xD7AAB8", VA = "0xD7AAB8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000129")]
		public Keyframe[] CurveKeys
		{
			[Token(Token = "0x6000FA1")]
			[Address(RVA = "0xD7AAC0", Offset = "0xD7AAC0", VA = "0xD7AAC0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FA2")]
			[Address(RVA = "0xD7AAC8", Offset = "0xD7AAC8", VA = "0xD7AAC8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700012A")]
		public bool ObeyTimescale
		{
			[Token(Token = "0x6000FA3")]
			[Address(RVA = "0xD7AAD0", Offset = "0xD7AAD0", VA = "0xD7AAD0")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000FA4")]
			[Address(RVA = "0xD7AAD8", Offset = "0xD7AAD8", VA = "0xD7AAD8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700012B")]
		public Action StartCallback
		{
			[Token(Token = "0x6000FA5")]
			[Address(RVA = "0xD7AAE4", Offset = "0xD7AAE4", VA = "0xD7AAE4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FA6")]
			[Address(RVA = "0xD7AAEC", Offset = "0xD7AAEC", VA = "0xD7AAEC")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700012C")]
		public Action CompleteCallback
		{
			[Token(Token = "0x6000FA7")]
			[Address(RVA = "0xD7AAF4", Offset = "0xD7AAF4", VA = "0xD7AAF4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FA8")]
			[Address(RVA = "0xD7AAFC", Offset = "0xD7AAFC", VA = "0xD7AAFC")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700012D")]
		public float Delay
		{
			[Token(Token = "0x6000FA9")]
			[Address(RVA = "0xD7AB04", Offset = "0xD7AB04", VA = "0xD7AB04")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000FAA")]
			[Address(RVA = "0xD7AB0C", Offset = "0xD7AB0C", VA = "0xD7AB0C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700012E")]
		public Tween.LoopType LoopType
		{
			[Token(Token = "0x6000FAB")]
			[Address(RVA = "0xD7AB14", Offset = "0xD7AB14", VA = "0xD7AB14")]
			[CompilerGenerated]
			get
			{
				return default(Tween.LoopType);
			}
			[Token(Token = "0x6000FAC")]
			[Address(RVA = "0xD7AB1C", Offset = "0xD7AB1C", VA = "0xD7AB1C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700012F")]
		public float Percentage
		{
			[Token(Token = "0x6000FAD")]
			[Address(RVA = "0xD7AB24", Offset = "0xD7AB24", VA = "0xD7AB24")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000FAE")]
			[Address(RVA = "0xD7AB2C", Offset = "0xD7AB2C", VA = "0xD7AB2C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6000FAF")]
		[Address(RVA = "0xD77AB4", Offset = "0xD77AB4", VA = "0xD77AB4")]
		public void Stop()
		{
		}

		[Token(Token = "0x6000FB0")]
		[Address(RVA = "0xD7AB34", Offset = "0xD7AB34", VA = "0xD7AB34")]
		public void Start()
		{
		}

		[Token(Token = "0x6000FB1")]
		[Address(RVA = "0xD7ABD0", Offset = "0xD7ABD0", VA = "0xD7ABD0")]
		public void Resume()
		{
		}

		[Token(Token = "0x6000FB2")]
		[Address(RVA = "0xD7AC50", Offset = "0xD7AC50", VA = "0xD7AC50")]
		public void Rewind()
		{
		}

		[Token(Token = "0x6000FB3")]
		[Address(RVA = "0xD78360", Offset = "0xD78360", VA = "0xD78360")]
		public void Cancel()
		{
		}

		[Token(Token = "0x6000FB4")]
		[Address(RVA = "0xD77F0C", Offset = "0xD77F0C", VA = "0xD77F0C")]
		public void Finish()
		{
		}

		[Token(Token = "0x6000FB5")]
		[Address(RVA = "0xD7AC68", Offset = "0xD7AC68", VA = "0xD7AC68")]
		public bool Tick()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FB6")]
		[Address(RVA = "0xD7AFB8", Offset = "0xD7AFB8", VA = "0xD7AFB8")]
		protected void ResetStartTime()
		{
		}

		[Token(Token = "0x6000FB7")]
		[Address(RVA = "0xD7AFC8", Offset = "0xD7AFC8", VA = "0xD7AFC8")]
		protected void SetEssentials(Tween.TweenType tweenType, int targetInstanceID, float duration, float delay, bool obeyTimeScale, AnimationCurve curve, Tween.LoopType loop, Action startCallback, Action completeCallback)
		{
		}

		[Token(Token = "0x6000FB8")]
		protected abstract bool SetStartValue();

		[Token(Token = "0x6000FB9")]
		protected abstract void Operation(float percentage);

		[Token(Token = "0x6000FBA")]
		public abstract void Loop();

		[Token(Token = "0x6000FBB")]
		public abstract void PingPong();

		[Token(Token = "0x6000FBC")]
		[Address(RVA = "0xD7B08C", Offset = "0xD7B08C", VA = "0xD7B08C")]
		protected TweenBase()
		{
		}
	}
	[Token(Token = "0x200029A")]
	public class TweenEngine : MonoBehaviour
	{
		[Token(Token = "0x6000FBD")]
		[Address(RVA = "0xD7A128", Offset = "0xD7A128", VA = "0xD7A128")]
		public void ExecuteTween(TweenBase tween)
		{
		}

		[Token(Token = "0x6000FBE")]
		[Address(RVA = "0xD7B094", Offset = "0xD7B094", VA = "0xD7B094")]
		private void Update()
		{
		}

		[Token(Token = "0x6000FBF")]
		[Address(RVA = "0xD7B1B4", Offset = "0xD7B1B4", VA = "0xD7B1B4")]
		public TweenEngine()
		{
		}
	}
	[Token(Token = "0x200029B")]
	public class TweenUtilities : MonoBehaviour
	{
		[Token(Token = "0x6000FC0")]
		[Address(RVA = "0xD7B1BC", Offset = "0xD7B1BC", VA = "0xD7B1BC")]
		public static void GenerateAnimationCurvePropertyCode(AnimationCurve curve)
		{
		}

		[Token(Token = "0x6000FC1")]
		[Address(RVA = "0xD7B6C8", Offset = "0xD7B6C8", VA = "0xD7B6C8")]
		public static float LinearInterpolate(float from, float to, float percentage)
		{
			return default(float);
		}

		[Token(Token = "0x6000FC2")]
		[Address(RVA = "0xD7B6D8", Offset = "0xD7B6D8", VA = "0xD7B6D8")]
		public static Vector2 LinearInterpolate(Vector2 from, Vector2 to, float percentage)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000FC3")]
		[Address(RVA = "0xD7B6F4", Offset = "0xD7B6F4", VA = "0xD7B6F4")]
		public static Vector3 LinearInterpolate(Vector3 from, Vector3 to, float percentage)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000FC4")]
		[Address(RVA = "0xD7B71C", Offset = "0xD7B71C", VA = "0xD7B71C")]
		public static Vector3 LinearInterpolateRotational(Vector3 from, Vector3 to, float percentage)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000FC5")]
		[Address(RVA = "0xD7B89C", Offset = "0xD7B89C", VA = "0xD7B89C")]
		public static Vector4 LinearInterpolate(Vector4 from, Vector4 to, float percentage)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6000FC6")]
		[Address(RVA = "0xD7B8D4", Offset = "0xD7B8D4", VA = "0xD7B8D4")]
		public static Rect LinearInterpolate(Rect from, Rect to, float percentage)
		{
			return default(Rect);
		}

		[Token(Token = "0x6000FC7")]
		[Address(RVA = "0xD7B9D8", Offset = "0xD7B9D8", VA = "0xD7B9D8")]
		public static Color LinearInterpolate(Color from, Color to, float percentage)
		{
			return default(Color);
		}

		[Token(Token = "0x6000FC8")]
		[Address(RVA = "0xD7AF38", Offset = "0xD7AF38", VA = "0xD7AF38")]
		public static float EvaluateCurve(AnimationCurve curve, float percentage)
		{
			return default(float);
		}

		[Token(Token = "0x6000FC9")]
		[Address(RVA = "0xD7B838", Offset = "0xD7B838", VA = "0xD7B838")]
		private static float CylindricalLerp(float from, float to, float percentage)
		{
			return default(float);
		}

		[Token(Token = "0x6000FCA")]
		[Address(RVA = "0xD7BA10", Offset = "0xD7BA10", VA = "0xD7BA10")]
		public TweenUtilities()
		{
		}
	}
	[Token(Token = "0x200029C")]
	internal class AnchoredPosition : TweenBase
	{
		[Token(Token = "0x40011A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private RectTransform _target;

		[Token(Token = "0x40011A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector2 _start;

		[Token(Token = "0x17000130")]
		public Vector2 EndValue
		{
			[Token(Token = "0x6000FCB")]
			[Address(RVA = "0xD7BA18", Offset = "0xD7BA18", VA = "0xD7BA18")]
			[CompilerGenerated]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6000FCC")]
			[Address(RVA = "0xD7BA20", Offset = "0xD7BA20", VA = "0xD7BA20")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6000FCD")]
		[Address(RVA = "0xD763CC", Offset = "0xD763CC", VA = "0xD763CC")]
		public AnchoredPosition(RectTransform target, Vector2 endValue, float duration, float delay, bool obeyTimescale, AnimationCurve curve, Tween.LoopType loop, Action startCallback, Action completeCallback)
		{
		}

		[Token(Token = "0x6000FCE")]
		[Address(RVA = "0xD7BA28", Offset = "0xD7BA28", VA = "0xD7BA28", Slot = "4")]
		protected override bool SetStartValue()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FCF")]
		[Address(RVA = "0xD7BAB4", Offset = "0xD7BAB4", VA = "0xD7BAB4", Slot = "5")]
		protected override void Operation(float percentage)
		{
		}

		[Token(Token = "0x6000FD0")]
		[Address(RVA = "0xD7BAEC", Offset = "0xD7BAEC", VA = "0xD7BAEC", Slot = "6")]
		public override void Loop()
		{
		}

		[Token(Token = "0x6000FD1")]
		[Address(RVA = "0xD7BB1C", Offset = "0xD7BB1C", VA = "0xD7BB1C", Slot = "7")]
		public override void PingPong()
		{
		}
	}
	[Token(Token = "0x200029D")]
	internal class CameraBackgroundColor : TweenBase
	{
		[Token(Token = "0x40011A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Camera _target;

		[Token(Token = "0x40011A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Color _start;

		[Token(Token = "0x17000131")]
		public Color EndValue
		{
			[Token(Token = "0x6000FD2")]
			[Address(RVA = "0xD7BB68", Offset = "0xD7BB68", VA = "0xD7BB68")]
			[CompilerGenerated]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000FD3")]
			[Address(RVA = "0xD7BB74", Offset = "0xD7BB74", VA = "0xD7BB74")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6000FD4")]
		[Address(RVA = "0xD75E00", Offset = "0xD75E00", VA = "0xD75E00")]
		public CameraBackgroundColor(Camera target, Color endValue, float duration, float delay, bool obeyTimescale, AnimationCurve curve, Tween.LoopType loop, Action startCallback, Action completeCallback)
		{
		}

		[Token(Token = "0x6000FD5")]
		[Address(RVA = "0xD7BB80", Offset = "0xD7BB80", VA = "0xD7BB80", Slot = "4")]
		protected override bool SetStartValue()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FD6")]
		[Address(RVA = "0xD7BC10", Offset = "0xD7BC10", VA = "0xD7BC10", Slot = "5")]
		protected override void Operation(float percentage)
		{
		}

		[Token(Token = "0x6000FD7")]
		[Address(RVA = "0xD7BC50", Offset = "0xD7BC50", VA = "0xD7BC50", Slot = "6")]
		public override void Loop()
		{
		}

		[Token(Token = "0x6000FD8")]
		[Address(RVA = "0xD7BC84", Offset = "0xD7BC84", VA = "0xD7BC84", Slot = "7")]
		public override void PingPong()
		{
		}
	}
	[Token(Token = "0x200029E")]
	internal class CanvasGroupAlpha : TweenBase
	{
		[Token(Token = "0x40011AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private CanvasGroup _target;

		[Token(Token = "0x40011AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float _start;

		[Token(Token = "0x17000132")]
		public float EndValue
		{
			[Token(Token = "0x6000FD9")]
			[Address(RVA = "0xD7BCDC", Offset = "0xD7BCDC", VA = "0xD7BCDC")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000FDA")]
			[Address(RVA = "0xD7BCE4", Offset = "0xD7BCE4", VA = "0xD7BCE4")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6000FDB")]
		[Address(RVA = "0xD7163C", Offset = "0xD7163C", VA = "0xD7163C")]
		public CanvasGroupAlpha(CanvasGroup target, float endValue, float duration, float delay, bool obeyTimescale, AnimationCurve curve, Tween.LoopType loop, Action startCallback, Action completeCallback)
		{
		}

		[Token(Token = "0x6000FDC")]
		[Address(RVA = "0xD7BCEC", Offset = "0xD7BCEC", VA = "0xD7BCEC", Slot = "4")]
		protected override bool SetStartValue()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FDD")]
		[Address(RVA = "0xD7BD78", Offset = "0xD7BD78", VA = "0xD7BD78", Slot = "5")]
		protected override void Operation(float percentage)
		{
		}

		[Token(Token = "0x6000FDE")]
		[Address(RVA = "0xD7BDAC", Offset = "0xD7BDAC", VA = "0xD7BDAC", Slot = "6")]
		public override void Loop()
		{
		}

		[Token(Token = "0x6000FDF")]
		[Address(RVA = "0xD7BDDC", Offset = "0xD7BDDC", VA = "0xD7BDDC", Slot = "7")]
		public override void PingPong()
		{
		}
	}
	[Token(Token = "0x200029F")]
	internal class FieldOfView : TweenBase
	{
		[Token(Token = "0x40011AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Camera _target;

		[Token(Token = "0x40011AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float _start;

		[Token(Token = "0x17000133")]
		public float EndValue
		{
			[Token(Token = "0x6000FE0")]
			[Address(RVA = "0xD7BE2C", Offset = "0xD7BE2C", VA = "0xD7BE2C")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000FE1")]
			[Address(RVA = "0xD7BE34", Offset = "0xD7BE34", VA = "0xD7BE34")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6000FE2")]
		[Address(RVA = "0xD73CFC", Offset = "0xD73CFC", VA = "0xD73CFC")]
		public FieldOfView(Camera target, float endValue, float duration, float delay, bool obeyTimescale, AnimationCurve curve, Tween.LoopType loop, Action startCallback, Action completeCallback)
		{
		}

		[Token(Token = "0x6000FE3")]
		[Address(RVA = "0xD7BE3C", Offset = "0xD7BE3C", VA = "0xD7BE3C", Slot = "4")]
		protected override bool SetStartValue()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FE4")]
		[Address(RVA = "0xD7BEC8", Offset = "0xD7BEC8", VA = "0xD7BEC8", Slot = "5")]
		protected override void Operation(float percentage)
		{
		}

		[Token(Token = "0x6000FE5")]
		[Address(RVA = "0xD7BEFC", Offset = "0xD7BEFC", VA = "0xD7BEFC", Slot = "6")]
		public override void Loop()
		{
		}

		[Token(Token = "0x6000FE6")]
		[Address(RVA = "0xD7BF2C", Offset = "0xD7BF2C", VA = "0xD7BF2C", Slot = "7")]
		public override void PingPong()
		{
		}
	}
	[Token(Token = "0x20002A0")]
	internal class ImageColor : TweenBase
	{
		[Token(Token = "0x40011B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Image _target;

		[Token(Token = "0x40011B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Color _start;

		[Token(Token = "0x17000134")]
		public Color EndValue
		{
			[Token(Token = "0x6000FE7")]
			[Address(RVA = "0xD7BF7C", Offset = "0xD7BF7C", VA = "0xD7BF7C")]
			[CompilerGenerated]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000FE8")]
			[Address(RVA = "0xD7BF88", Offset = "0xD7BF88", VA = "0xD7BF88")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6000FE9")]
		[Address(RVA = "0xD74AA0", Offset = "0xD74AA0", VA = "0xD74AA0")]
		public ImageColor(Image target, Color endValue, float duration, float delay, bool obeyTimescale, AnimationCurve curve, Tween.LoopType loop, Action startCallback, Action completeCallback)
		{
		}

		[Token(Token = "0x6000FEA")]
		[Address(RVA = "0xD7BF94", Offset = "0xD7BF94", VA = "0xD7BF94", Slot = "4")]
		protected override bool SetStartValue()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FEB")]
		[Address(RVA = "0xD7C02C", Offset = "0xD7C02C", VA = "0xD7C02C", Slot = "5")]
		protected override void Operation(float percentage)
		{
		}

		[Token(Token = "0x6000FEC")]
		[Address(RVA = "0xD7C074", Offset = "0xD7C074", VA = "0xD7C074", Slot = "6")]
		public override void Loop()
		{
		}

		[Token(Token = "0x6000FED")]
		[Address(RVA = "0xD7C0B0", Offset = "0xD7C0B0", VA = "0xD7C0B0", Slot = "7")]
		public override void PingPong()
		{
		}
	}
	[Token(Token = "0x20002A1")]
	internal class LightColor : TweenBase
	{
		[Token(Token = "0x40011B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Light _target;

		[Token(Token = "0x40011B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Color _start;

		[Token(Token = "0x17000135")]
		public Color EndValue
		{
			[Token(Token = "0x6000FEE")]
			[Address(RVA = "0xD7C118", Offset = "0xD7C118", VA = "0xD7C118")]
			[CompilerGenerated]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000FEF")]
			[Address(RVA = "0xD7C124", Offset = "0xD7C124", VA = "0xD7C124")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6000FF0")]
		[Address(RVA = "0xD750B0", Offset = "0xD750B0", VA = "0xD750B0")]
		public LightColor(Light target, Color endValue, float duration, float delay, bool obeyTimescale, AnimationCurve curve, Tween.LoopType loop, Action startCallback, Action completeCallback)
		{
		}

		[Token(Token = "0x6000FF1")]
		[Address(RVA = "0xD7C130", Offset = "0xD7C130", VA = "0xD7C130", Slot = "4")]
		protected override bool SetStartValue()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FF2")]
		[Address(RVA = "0xD7C1C0", Offset = "0xD7C1C0", VA = "0xD7C1C0", Slot = "5")]
		protected override void Operation(float percentage)
		{
		}

		[Token(Token = "0x6000FF3")]
		[Address(RVA = "0xD7C200", Offset = "0xD7C200", VA = "0xD7C200", Slot = "6")]
		public override void Loop()
		{
		}

		[Token(Token = "0x6000FF4")]
		[Address(RVA = "0xD7C234", Offset = "0xD7C234", VA = "0xD7C234", Slot = "7")]
		public override void PingPong()
		{
		}
	}
	[Token(Token = "0x20002A2")]
	internal class LightIntensity : TweenBase
	{
		[Token(Token = "0x40011B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Light _target;

		[Token(Token = "0x40011B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float _start;

		[Token(Token = "0x17000136")]
		public float EndValue
		{
			[Token(Token = "0x6000FF5")]
			[Address(RVA = "0xD7C28C", Offset = "0xD7C28C", VA = "0xD7C28C")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000FF6")]
			[Address(RVA = "0xD7C294", Offset = "0xD7C294", VA = "0xD7C294")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6000FF7")]
		[Address(RVA = "0xD7420C", Offset = "0xD7420C", VA = "0xD7420C")]
		public LightIntensity(Light target, float endValue, float duration, float delay, bool obeyTimescale, AnimationCurve curve, Tween.LoopType loop, Action startCallback, Action completeCallback)
		{
		}

		[Token(Token = "0x6000FF8")]
		[Address(RVA = "0xD7C29C", Offset = "0xD7C29C", VA = "0xD7C29C", Slot = "4")]
		protected override bool SetStartValue()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FF9")]
		[Address(RVA = "0xD7C328", Offset = "0xD7C328", VA = "0xD7C328", Slot = "5")]
		protected override void Operation(float percentage)
		{
		}

		[Token(Token = "0x6000FFA")]
		[Address(RVA = "0xD7C35C", Offset = "0xD7C35C", VA = "0xD7C35C", Slot = "6")]
		public override void Loop()
		{
		}

		[Token(Token = "0x6000FFB")]
		[Address(RVA = "0xD7C38C", Offset = "0xD7C38C", VA = "0xD7C38C", Slot = "7")]
		public override void PingPong()
		{
		}
	}
	[Token(Token = "0x20002A3")]
	internal class LightRange : TweenBase
	{
		[Token(Token = "0x40011B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Light _target;

		[Token(Token = "0x40011BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float _start;

		[Token(Token = "0x17000137")]
		public float EndValue
		{
			[Token(Token = "0x6000FFC")]
			[Address(RVA = "0xD7C3DC", Offset = "0xD7C3DC", VA = "0xD7C3DC")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000FFD")]
			[Address(RVA = "0xD7C3E4", Offset = "0xD7C3E4", VA = "0xD7C3E4")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6000FFE")]
		[Address(RVA = "0xD73F84", Offset = "0xD73F84", VA = "0xD73F84")]
		public LightRange(Light target, float endValue, float duration, float delay, bool obeyTimescale, AnimationCurve curve, Tween.LoopType loop, Action startCallback, Action completeCallback)
		{
		}

		[Token(Token = "0x6000FFF")]
		[Address(RVA = "0xD7C3EC", Offset = "0xD7C3EC", VA = "0xD7C3EC", Slot = "4")]
		protected override bool SetStartValue()
		{
			return default(bool);
		}

		[Token(Token = "0x6001000")]
		[Address(RVA = "0xD7C478", Offset = "0xD7C478", VA = "0xD7C478", Slot = "5")]
		protected override void Operation(float percentage)
		{
		}

		[Token(Token = "0x6001001")]
		[Address(RVA = "0xD7C4AC", Offset = "0xD7C4AC", VA = "0xD7C4AC", Slot = "6")]
		public override void Loop()
		{
		}

		[Token(Token = "0x6001002")]
		[Address(RVA = "0xD7C4DC", Offset = "0xD7C4DC", VA = "0xD7C4DC", Slot = "7")]
		public override void PingPong()
		{
		}
	}
	[Token(Token = "0x20002A4")]
	internal class LocalPosition : TweenBase
	{
		[Token(Token = "0x40011BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform _target;

		[Token(Token = "0x40011BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 _start;

		[Token(Token = "0x17000138")]
		public Vector3 EndValue
		{
			[Token(Token = "0x6001003")]
			[Address(RVA = "0xD7C52C", Offset = "0xD7C52C", VA = "0xD7C52C")]
			[CompilerGenerated]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001004")]
			[Address(RVA = "0xD7C538", Offset = "0xD7C538", VA = "0xD7C538")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001005")]
		[Address(RVA = "0xD76688", Offset = "0xD76688", VA = "0xD76688")]
		public LocalPosition(Transform target, Vector3 endValue, float duration, float delay, bool obeyTimescale, AnimationCurve curve, Tween.LoopType loop, Action startCallback, Action completeCallback)
		{
		}

		[Token(Token = "0x6001006")]
		[Address(RVA = "0xD7C544", Offset = "0xD7C544", VA = "0xD7C544", Slot = "4")]
		protected override bool SetStartValue()
		{
			return default(bool);
		}

		[Token(Token = "0x6001007")]
		[Address(RVA = "0xD7C5D4", Offset = "0xD7C5D4", VA = "0xD7C5D4", Slot = "5")]
		protected override void Operation(float percentage)
		{
		}

		[Token(Token = "0x6001008")]
		[Address(RVA = "0xD7C620", Offset = "0xD7C620", VA = "0xD7C620", Slot = "6")]
		public override void Loop()
		{
		}

		[Token(Token = "0x6001009")]
		[Address(RVA = "0xD7C654", Offset = "0xD7C654", VA = "0xD7C654", Slot = "7")]
		public override void PingPong()
		{
		}
	}
	[Token(Token = "0x20002A5")]
	internal class LocalRotation : TweenBase
	{
		[Token(Token = "0x40011BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform _target;

		[Token(Token = "0x40011C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 _start;

		[Token(Token = "0x17000139")]
		public Vector3 EndValue
		{
			[Token(Token = "0x600100A")]
			[Address(RVA = "0xD7C6B0", Offset = "0xD7C6B0", VA = "0xD7C6B0")]
			[CompilerGenerated]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600100B")]
			[Address(RVA = "0xD7C6BC", Offset = "0xD7C6BC", VA = "0xD7C6BC")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x600100C")]
		[Address(RVA = "0xD771E0", Offset = "0xD771E0", VA = "0xD771E0")]
		public LocalRotation(Transform target, Vector3 endValue, float duration, float delay, bool obeyTimescale, AnimationCurve curve, Tween.LoopType loop, Action startCallback, Action completeCallback)
		{
		}

		[Token(Token = "0x600100D")]
		[Address(RVA = "0xD7C6C8", Offset = "0xD7C6C8", VA = "0xD7C6C8", Slot = "4")]
		protected override bool SetStartValue()
		{
			return default(bool);
		}

		[Token(Token = "0x600100E")]
		[Address(RVA = "0xD7C758", Offset = "0xD7C758", VA = "0xD7C758", Slot = "5")]
		protected override void Operation(float percentage)
		{
		}

		[Token(Token = "0x600100F")]
		[Address(RVA = "0xD7C7B4", Offset = "0xD7C7B4", VA = "0xD7C7B4", Slot = "6")]
		public override void Loop()
		{
		}

		[Token(Token = "0x6001010")]
		[Address(RVA = "0xD7C7E8", Offset = "0xD7C7E8", VA = "0xD7C7E8", Slot = "7")]
		public override void PingPong()
		{
		}
	}
	[Token(Token = "0x20002A6")]
	internal class LocalScale : TweenBase
	{
		[Token(Token = "0x40011C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform _target;

		[Token(Token = "0x40011C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 _start;

		[Token(Token = "0x1700013A")]
		public Vector3 EndValue
		{
			[Token(Token = "0x6001011")]
			[Address(RVA = "0xD7C844", Offset = "0xD7C844", VA = "0xD7C844")]
			[CompilerGenerated]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001012")]
			[Address(RVA = "0xD7C850", Offset = "0xD7C850", VA = "0xD7C850")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001013")]
		[Address(RVA = "0xD744AC", Offset = "0xD744AC", VA = "0xD744AC")]
		public LocalScale(Transform target, Vector3 endValue, float duration, float delay, bool obeyTimescale, AnimationCurve curve, Tween.LoopType loop, Action startCallback, Action completeCallback)
		{
		}

		[Token(Token = "0x6001014")]
		[Address(RVA = "0xD7C85C", Offset = "0xD7C85C", VA = "0xD7C85C", Slot = "4")]
		protected override bool SetStartValue()
		{
			return default(bool);
		}

		[Token(Token = "0x6001015")]
		[Address(RVA = "0xD7C8EC", Offset = "0xD7C8EC", VA = "0xD7C8EC", Slot = "5")]
		protected override void Operation(float percentage)
		{
		}

		[Token(Token = "0x6001016")]
		[Address(RVA = "0xD7C938", Offset = "0xD7C938", VA = "0xD7C938", Slot = "6")]
		public override void Loop()
		{
		}

		[Token(Token = "0x6001017")]
		[Address(RVA = "0xD7C96C", Offset = "0xD7C96C", VA = "0xD7C96C", Slot = "7")]
		public override void PingPong()
		{
		}
	}
	[Token(Token = "0x20002A7")]
	internal class PanStereo : TweenBase
	{
		[Token(Token = "0x40011C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private AudioSource _target;

		[Token(Token = "0x40011C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float _start;

		[Token(Token = "0x1700013B")]
		public float EndValue
		{
			[Token(Token = "0x6001018")]
			[Address(RVA = "0xD7C9C8", Offset = "0xD7C9C8", VA = "0xD7C9C8")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001019")]
			[Address(RVA = "0xD7C9D0", Offset = "0xD7C9D0", VA = "0xD7C9D0")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x600101A")]
		[Address(RVA = "0xD73540", Offset = "0xD73540", VA = "0xD73540")]
		public PanStereo(AudioSource target, float endValue, float duration, float delay, bool obeyTimescale, AnimationCurve curve, Tween.LoopType loop, Action startCallback, Action completeCallback)
		{
		}

		[Token(Token = "0x600101B")]
		[Address(RVA = "0xD7C9D8", Offset = "0xD7C9D8", VA = "0xD7C9D8", Slot = "4")]
		protected override bool SetStartValue()
		{
			return default(bool);
		}

		[Token(Token = "0x600101C")]
		[Address(RVA = "0xD7CA64", Offset = "0xD7CA64", VA = "0xD7CA64", Slot = "5")]
		protected override void Operation(float percentage)
		{
		}

		[Token(Token = "0x600101D")]
		[Address(RVA = "0xD7CA98", Offset = "0xD7CA98", VA = "0xD7CA98", Slot = "6")]
		public override void Loop()
		{
		}

		[Token(Token = "0x600101E")]
		[Address(RVA = "0xD7CAC8", Offset = "0xD7CAC8", VA = "0xD7CAC8", Slot = "7")]
		public override void PingPong()
		{
		}
	}
	[Token(Token = "0x20002A8")]
	internal class Pitch : TweenBase
	{
		[Token(Token = "0x40011C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private AudioSource _target;

		[Token(Token = "0x40011C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float _start;

		[Token(Token = "0x1700013C")]
		public float EndValue
		{
			[Token(Token = "0x600101F")]
			[Address(RVA = "0xD7CB18", Offset = "0xD7CB18", VA = "0xD7CB18")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001020")]
			[Address(RVA = "0xD7CB20", Offset = "0xD7CB20", VA = "0xD7CB20")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001021")]
		[Address(RVA = "0xD732B8", Offset = "0xD732B8", VA = "0xD732B8")]
		public Pitch(AudioSource target, float endValue, float duration, float delay, bool obeyTimescale, AnimationCurve curve, Tween.LoopType loop, Action startCallback, Action completeCallback)
		{
		}

		[Token(Token = "0x6001022")]
		[Address(RVA = "0xD7CB28", Offset = "0xD7CB28", VA = "0xD7CB28", Slot = "4")]
		protected override bool SetStartValue()
		{
			return default(bool);
		}

		[Token(Token = "0x6001023")]
		[Address(RVA = "0xD7CBB4", Offset = "0xD7CBB4", VA = "0xD7CBB4", Slot = "5")]
		protected override void Operation(float percentage)
		{
		}

		[Token(Token = "0x6001024")]
		[Address(RVA = "0xD7CBE8", Offset = "0xD7CBE8", VA = "0xD7CBE8", Slot = "6")]
		public override void Loop()
		{
		}

		[Token(Token = "0x6001025")]
		[Address(RVA = "0xD7CC18", Offset = "0xD7CC18", VA = "0xD7CC18", Slot = "7")]
		public override void PingPong()
		{
		}
	}
	[Token(Token = "0x20002A9")]
	internal class Position : TweenBase
	{
		[Token(Token = "0x40011CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform _target;

		[Token(Token = "0x40011CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 _start;

		[Token(Token = "0x1700013D")]
		public Vector3 EndValue
		{
			[Token(Token = "0x6001026")]
			[Address(RVA = "0xD7CC68", Offset = "0xD7CC68", VA = "0xD7CC68")]
			[CompilerGenerated]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001027")]
			[Address(RVA = "0xD7CC74", Offset = "0xD7CC74", VA = "0xD7CC74")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001028")]
		[Address(RVA = "0xD760F8", Offset = "0xD760F8", VA = "0xD760F8")]
		public Position(Transform target, Vector3 endValue, float duration, float delay, bool obeyTimescale, AnimationCurve curve, Tween.LoopType loop, Action startCallback, Action completeCallback)
		{
		}

		[Token(Token = "0x6001029")]
		[Address(RVA = "0xD7CC80", Offset = "0xD7CC80", VA = "0xD7CC80", Slot = "4")]
		protected override bool SetStartValue()
		{
			return default(bool);
		}

		[Token(Token = "0x600102A")]
		[Address(RVA = "0xD7CD10", Offset = "0xD7CD10", VA = "0xD7CD10", Slot = "5")]
		protected override void Operation(float percentage)
		{
		}

		[Token(Token = "0x600102B")]
		[Address(RVA = "0xD7CD5C", Offset = "0xD7CD5C", VA = "0xD7CD5C", Slot = "6")]
		public override void Loop()
		{
		}

		[Token(Token = "0x600102C")]
		[Address(RVA = "0xD7CD90", Offset = "0xD7CD90", VA = "0xD7CD90", Slot = "7")]
		public override void PingPong()
		{
		}
	}
	[Token(Token = "0x20002AA")]
	internal class RawImageColor : TweenBase
	{
		[Token(Token = "0x40011CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private RawImage _target;

		[Token(Token = "0x40011CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Color _start;

		[Token(Token = "0x1700013E")]
		public Color EndValue
		{
			[Token(Token = "0x600102D")]
			[Address(RVA = "0xD7CDEC", Offset = "0xD7CDEC", VA = "0xD7CDEC")]
			[CompilerGenerated]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x600102E")]
			[Address(RVA = "0xD7CDF8", Offset = "0xD7CDF8", VA = "0xD7CDF8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x600102F")]
		[Address(RVA = "0xD74798", Offset = "0xD74798", VA = "0xD74798")]
		public RawImageColor(RawImage target, Color endValue, float duration, float delay, bool obeyTimescale, AnimationCurve curve, Tween.LoopType loop, Action startCallback, Action completeCallback)
		{
		}

		[Token(Token = "0x6001030")]
		[Address(RVA = "0xD7CE04", Offset = "0xD7CE04", VA = "0xD7CE04", Slot = "4")]
		protected override bool SetStartValue()
		{
			return default(bool);
		}

		[Token(Token = "0x6001031")]
		[Address(RVA = "0xD7CE9C", Offset = "0xD7CE9C", VA = "0xD7CE9C", Slot = "5")]
		protected override void Operation(float percentage)
		{
		}

		[Token(Token = "0x6001032")]
		[Address(RVA = "0xD7CEE4", Offset = "0xD7CEE4", VA = "0xD7CEE4", Slot = "6")]
		public override void Loop()
		{
		}

		[Token(Token = "0x6001033")]
		[Address(RVA = "0xD7CF20", Offset = "0xD7CF20", VA = "0xD7CF20", Slot = "7")]
		public override void PingPong()
		{
		}
	}
	[Token(Token = "0x20002AB")]
	internal class Rotate : TweenBase
	{
		[Token(Token = "0x40011D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform _target;

		[Token(Token = "0x40011D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 _start;

		[Token(Token = "0x40011D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Space _space;

		[Token(Token = "0x40011D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 _previous;

		[Token(Token = "0x1700013F")]
		public Vector3 EndValue
		{
			[Token(Token = "0x6001034")]
			[Address(RVA = "0xD7CF88", Offset = "0xD7CF88", VA = "0xD7CF88")]
			[CompilerGenerated]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001035")]
			[Address(RVA = "0xD7CF94", Offset = "0xD7CF94", VA = "0xD7CF94")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001036")]
		[Address(RVA = "0xD7697C", Offset = "0xD7697C", VA = "0xD7697C")]
		public Rotate(Transform target, Vector3 endValue, Space space, float duration, float delay, bool obeyTimescale, AnimationCurve curve, Tween.LoopType loop, Action startCallback, Action completeCallback)
		{
		}

		[Token(Token = "0x6001037")]
		[Address(RVA = "0xD7CFA0", Offset = "0xD7CFA0", VA = "0xD7CFA0", Slot = "4")]
		protected override bool SetStartValue()
		{
			return default(bool);
		}

		[Token(Token = "0x6001038")]
		[Address(RVA = "0xD7D030", Offset = "0xD7D030", VA = "0xD7D030", Slot = "5")]
		protected override void Operation(float percentage)
		{
		}

		[Token(Token = "0x6001039")]
		[Address(RVA = "0xD7D10C", Offset = "0xD7D10C", VA = "0xD7D10C", Slot = "6")]
		public override void Loop()
		{
		}

		[Token(Token = "0x600103A")]
		[Address(RVA = "0xD7D170", Offset = "0xD7D170", VA = "0xD7D170", Slot = "7")]
		public override void PingPong()
		{
		}
	}
	[Token(Token = "0x20002AC")]
	internal class Rotation : TweenBase
	{
		[Token(Token = "0x40011D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform _target;

		[Token(Token = "0x40011D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 _start;

		[Token(Token = "0x17000140")]
		public Vector3 EndValue
		{
			[Token(Token = "0x600103B")]
			[Address(RVA = "0xD7D1EC", Offset = "0xD7D1EC", VA = "0xD7D1EC")]
			[CompilerGenerated]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600103C")]
			[Address(RVA = "0xD7D1F8", Offset = "0xD7D1F8", VA = "0xD7D1F8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x600103D")]
		[Address(RVA = "0xD76BBC", Offset = "0xD76BBC", VA = "0xD76BBC")]
		public Rotation(Transform target, Vector3 endValue, float duration, float delay, bool obeyTimescale, AnimationCurve curve, Tween.LoopType loop, Action startCallback, Action completeCallback)
		{
		}

		[Token(Token = "0x600103E")]
		[Address(RVA = "0xD7D204", Offset = "0xD7D204", VA = "0xD7D204", Slot = "4")]
		protected override bool SetStartValue()
		{
			return default(bool);
		}

		[Token(Token = "0x600103F")]
		[Address(RVA = "0xD7D294", Offset = "0xD7D294", VA = "0xD7D294", Slot = "5")]
		protected override void Operation(float percentage)
		{
		}

		[Token(Token = "0x6001040")]
		[Address(RVA = "0xD7D2F0", Offset = "0xD7D2F0", VA = "0xD7D2F0", Slot = "6")]
		public override void Loop()
		{
		}

		[Token(Token = "0x6001041")]
		[Address(RVA = "0xD7D324", Offset = "0xD7D324", VA = "0xD7D324", Slot = "7")]
		public override void PingPong()
		{
		}
	}
	[Token(Token = "0x20002AD")]
	internal class ShaderColor : TweenBase
	{
		[Token(Token = "0x40011D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Material _target;

		[Token(Token = "0x40011DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Color _start;

		[Token(Token = "0x40011DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private string _propertyName;

		[Token(Token = "0x17000141")]
		public Color EndValue
		{
			[Token(Token = "0x6001042")]
			[Address(RVA = "0xD7D380", Offset = "0xD7D380", VA = "0xD7D380")]
			[CompilerGenerated]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001043")]
			[Address(RVA = "0xD7D38C", Offset = "0xD7D38C", VA = "0xD7D38C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001044")]
		[Address(RVA = "0xD72CE8", Offset = "0xD72CE8", VA = "0xD72CE8")]
		public ShaderColor(Material target, string propertyName, Color endValue, float duration, float delay, bool obeyTimescale, AnimationCurve curve, Tween.LoopType loop, Action startCallback, Action completeCallback)
		{
		}

		[Token(Token = "0x6001045")]
		[Address(RVA = "0xD7D398", Offset = "0xD7D398", VA = "0xD7D398", Slot = "4")]
		protected override bool SetStartValue()
		{
			return default(bool);
		}

		[Token(Token = "0x6001046")]
		[Address(RVA = "0xD7D424", Offset = "0xD7D424", VA = "0xD7D424", Slot = "5")]
		protected override void Operation(float percentage)
		{
		}

		[Token(Token = "0x6001047")]
		[Address(RVA = "0xD7D468", Offset = "0xD7D468", VA = "0xD7D468", Slot = "6")]
		public override void Loop()
		{
		}

		[Token(Token = "0x6001048")]
		[Address(RVA = "0xD7D4A0", Offset = "0xD7D4A0", VA = "0xD7D4A0", Slot = "7")]
		public override void PingPong()
		{
		}
	}
	[Token(Token = "0x20002AE")]
	internal class ShaderFloat : TweenBase
	{
		[Token(Token = "0x40011DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Material _target;

		[Token(Token = "0x40011DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float _start;

		[Token(Token = "0x40011DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private string _propertyName;

		[Token(Token = "0x17000142")]
		public float EndValue
		{
			[Token(Token = "0x6001049")]
			[Address(RVA = "0xD7D500", Offset = "0xD7D500", VA = "0xD7D500")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600104A")]
			[Address(RVA = "0xD7D508", Offset = "0xD7D508", VA = "0xD7D508")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x600104B")]
		[Address(RVA = "0xD73000", Offset = "0xD73000", VA = "0xD73000")]
		public ShaderFloat(Material target, string propertyName, float endValue, float duration, float delay, bool obeyTimescale, AnimationCurve curve, Tween.LoopType loop, Action startCallback, Action completeCallback)
		{
		}

		[Token(Token = "0x600104C")]
		[Address(RVA = "0xD7D510", Offset = "0xD7D510", VA = "0xD7D510", Slot = "4")]
		protected override bool SetStartValue()
		{
			return default(bool);
		}

		[Token(Token = "0x600104D")]
		[Address(RVA = "0xD7D598", Offset = "0xD7D598", VA = "0xD7D598", Slot = "5")]
		protected override void Operation(float percentage)
		{
		}

		[Token(Token = "0x600104E")]
		[Address(RVA = "0xD7D5D0", Offset = "0xD7D5D0", VA = "0xD7D5D0", Slot = "6")]
		public override void Loop()
		{
		}

		[Token(Token = "0x600104F")]
		[Address(RVA = "0xD7D604", Offset = "0xD7D604", VA = "0xD7D604", Slot = "7")]
		public override void PingPong()
		{
		}
	}
	[Token(Token = "0x20002AF")]
	internal class ShaderInt : TweenBase
	{
		[Token(Token = "0x40011E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Material _target;

		[Token(Token = "0x40011E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int _start;

		[Token(Token = "0x40011E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private string _propertyName;

		[Token(Token = "0x17000143")]
		public int EndValue
		{
			[Token(Token = "0x6001050")]
			[Address(RVA = "0xD7D65C", Offset = "0xD7D65C", VA = "0xD7D65C")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001051")]
			[Address(RVA = "0xD7D664", Offset = "0xD7D664", VA = "0xD7D664")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001052")]
		[Address(RVA = "0xD72A08", Offset = "0xD72A08", VA = "0xD72A08")]
		public ShaderInt(Material target, string propertyName, int endValue, float duration, float delay, bool obeyTimescale, AnimationCurve curve, Tween.LoopType loop, Action startCallback, Action completeCallback)
		{
		}

		[Token(Token = "0x6001053")]
		[Address(RVA = "0xD7D66C", Offset = "0xD7D66C", VA = "0xD7D66C", Slot = "4")]
		protected override bool SetStartValue()
		{
			return default(bool);
		}

		[Token(Token = "0x6001054")]
		[Address(RVA = "0xD7D6F4", Offset = "0xD7D6F4", VA = "0xD7D6F4", Slot = "5")]
		protected override void Operation(float percentage)
		{
		}

		[Token(Token = "0x6001055")]
		[Address(RVA = "0xD7D74C", Offset = "0xD7D74C", VA = "0xD7D74C", Slot = "6")]
		public override void Loop()
		{
		}

		[Token(Token = "0x6001056")]
		[Address(RVA = "0xD7D780", Offset = "0xD7D780", VA = "0xD7D780", Slot = "7")]
		public override void PingPong()
		{
		}
	}
	[Token(Token = "0x20002B0")]
	internal class ShaderVector : TweenBase
	{
		[Token(Token = "0x40011E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Material _target;

		[Token(Token = "0x40011E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector4 _start;

		[Token(Token = "0x40011E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private string _propertyName;

		[Token(Token = "0x17000144")]
		public Vector4 EndValue
		{
			[Token(Token = "0x6001057")]
			[Address(RVA = "0xD7D7D8", Offset = "0xD7D7D8", VA = "0xD7D7D8")]
			[CompilerGenerated]
			get
			{
				return default(Vector4);
			}
			[Token(Token = "0x6001058")]
			[Address(RVA = "0xD7D7E4", Offset = "0xD7D7E4", VA = "0xD7D7E4")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001059")]
		[Address(RVA = "0xD726F0", Offset = "0xD726F0", VA = "0xD726F0")]
		public ShaderVector(Material target, string propertyName, Vector4 endValue, float duration, float delay, bool obeyTimescale, AnimationCurve curve, Tween.LoopType loop, Action startCallback, Action completeCallback)
		{
		}

		[Token(Token = "0x600105A")]
		[Address(RVA = "0xD7D7F0", Offset = "0xD7D7F0", VA = "0xD7D7F0", Slot = "4")]
		protected override bool SetStartValue()
		{
			return default(bool);
		}

		[Token(Token = "0x600105B")]
		[Address(RVA = "0xD7D884", Offset = "0xD7D884", VA = "0xD7D884", Slot = "5")]
		protected override void Operation(float percentage)
		{
		}

		[Token(Token = "0x600105C")]
		[Address(RVA = "0xD7D8C8", Offset = "0xD7D8C8", VA = "0xD7D8C8", Slot = "6")]
		public override void Loop()
		{
		}

		[Token(Token = "0x600105D")]
		[Address(RVA = "0xD7D900", Offset = "0xD7D900", VA = "0xD7D900", Slot = "7")]
		public override void PingPong()
		{
		}
	}
	[Token(Token = "0x20002B1")]
	internal class ShakePosition : TweenBase
	{
		[Token(Token = "0x40011E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform _target;

		[Token(Token = "0x40011EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 _initialPosition;

		[Token(Token = "0x40011EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Vector3 _intensity;

		[Token(Token = "0x17000145")]
		public Vector3 EndValue
		{
			[Token(Token = "0x600105E")]
			[Address(RVA = "0xD7D960", Offset = "0xD7D960", VA = "0xD7D960")]
			[CompilerGenerated]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600105F")]
			[Address(RVA = "0xD7D96C", Offset = "0xD7D96C", VA = "0xD7D96C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001060")]
		[Address(RVA = "0xD71150", Offset = "0xD71150", VA = "0xD71150")]
		public ShakePosition(Transform target, Vector3 initialPosition, Vector3 intensity, float duration, float delay, AnimationCurve curve, Action startCallback, Action completeCallback, Tween.LoopType loop, bool obeyTimescale)
		{
		}

		[Token(Token = "0x6001061")]
		[Address(RVA = "0xD7D978", Offset = "0xD7D978", VA = "0xD7D978", Slot = "4")]
		protected override bool SetStartValue()
		{
			return default(bool);
		}

		[Token(Token = "0x6001062")]
		[Address(RVA = "0xD7D9E4", Offset = "0xD7D9E4", VA = "0xD7D9E4", Slot = "5")]
		protected override void Operation(float percentage)
		{
		}

		[Token(Token = "0x6001063")]
		[Address(RVA = "0xD7DAA8", Offset = "0xD7DAA8", VA = "0xD7DAA8", Slot = "6")]
		public override void Loop()
		{
		}

		[Token(Token = "0x6001064")]
		[Address(RVA = "0xD7DADC", Offset = "0xD7DADC", VA = "0xD7DADC", Slot = "7")]
		public override void PingPong()
		{
		}
	}
	[Token(Token = "0x20002B2")]
	internal class Size : TweenBase
	{
		[Token(Token = "0x40011ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private RectTransform _target;

		[Token(Token = "0x40011EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector2 _start;

		[Token(Token = "0x17000146")]
		public Vector2 EndValue
		{
			[Token(Token = "0x6001065")]
			[Address(RVA = "0xD7DAE0", Offset = "0xD7DAE0", VA = "0xD7DAE0")]
			[CompilerGenerated]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6001066")]
			[Address(RVA = "0xD7DAE8", Offset = "0xD7DAE8", VA = "0xD7DAE8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001067")]
		[Address(RVA = "0xD73A58", Offset = "0xD73A58", VA = "0xD73A58")]
		public Size(RectTransform target, Vector2 endValue, float duration, float delay, bool obeyTimescale, AnimationCurve curve, Tween.LoopType loop, Action startCallback, Action completeCallback)
		{
		}

		[Token(Token = "0x6001068")]
		[Address(RVA = "0xD7DAF0", Offset = "0xD7DAF0", VA = "0xD7DAF0", Slot = "4")]
		protected override bool SetStartValue()
		{
			return default(bool);
		}

		[Token(Token = "0x6001069")]
		[Address(RVA = "0xD7DB7C", Offset = "0xD7DB7C", VA = "0xD7DB7C", Slot = "5")]
		protected override void Operation(float percentage)
		{
		}

		[Token(Token = "0x600106A")]
		[Address(RVA = "0xD7DBB4", Offset = "0xD7DBB4", VA = "0xD7DBB4", Slot = "6")]
		public override void Loop()
		{
		}

		[Token(Token = "0x600106B")]
		[Address(RVA = "0xD7DBE4", Offset = "0xD7DBE4", VA = "0xD7DBE4", Slot = "7")]
		public override void PingPong()
		{
		}
	}
	[Token(Token = "0x20002B3")]
	internal class SplinePercentage : TweenBase
	{
		[Token(Token = "0x40011F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform _target;

		[Token(Token = "0x40011F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Spline _spline;

		[Token(Token = "0x40011F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float _startPercentage;

		[Token(Token = "0x40011F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private bool _faceDirection;

		[Token(Token = "0x17000147")]
		public float EndValue
		{
			[Token(Token = "0x600106C")]
			[Address(RVA = "0xD7DC30", Offset = "0xD7DC30", VA = "0xD7DC30")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600106D")]
			[Address(RVA = "0xD7DC38", Offset = "0xD7DC38", VA = "0xD7DC38")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x600106E")]
		[Address(RVA = "0xD71418", Offset = "0xD71418", VA = "0xD71418")]
		public SplinePercentage(Spline spline, Transform target, float startPercentage, float endPercentage, bool faceDirection, float duration, float delay, bool obeyTimescale, AnimationCurve curve, Tween.LoopType loop, Action startCallback, Action completeCallback)
		{
		}

		[Token(Token = "0x600106F")]
		[Address(RVA = "0xD7DC40", Offset = "0xD7DC40", VA = "0xD7DC40", Slot = "4")]
		protected override bool SetStartValue()
		{
			return default(bool);
		}

		[Token(Token = "0x6001070")]
		[Address(RVA = "0xD7DCAC", Offset = "0xD7DCAC", VA = "0xD7DCAC", Slot = "5")]
		protected override void Operation(float percentage)
		{
		}

		[Token(Token = "0x6001071")]
		[Address(RVA = "0xD7DD98", Offset = "0xD7DD98", VA = "0xD7DD98", Slot = "6")]
		public override void Loop()
		{
		}

		[Token(Token = "0x6001072")]
		[Address(RVA = "0xD7DDDC", Offset = "0xD7DDDC", VA = "0xD7DDDC", Slot = "7")]
		public override void PingPong()
		{
		}
	}
	[Token(Token = "0x20002B4")]
	internal class SpriteRendererColor : TweenBase
	{
		[Token(Token = "0x40011F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private SpriteRenderer _target;

		[Token(Token = "0x40011F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Color _start;

		[Token(Token = "0x17000148")]
		public Color EndValue
		{
			[Token(Token = "0x6001073")]
			[Address(RVA = "0xD7DDFC", Offset = "0xD7DDFC", VA = "0xD7DDFC")]
			[CompilerGenerated]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001074")]
			[Address(RVA = "0xD7DE08", Offset = "0xD7DE08", VA = "0xD7DE08")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001075")]
		[Address(RVA = "0xD75B00", Offset = "0xD75B00", VA = "0xD75B00")]
		public SpriteRendererColor(SpriteRenderer target, Color endValue, float duration, float delay, bool obeyTimescale, AnimationCurve curve, Tween.LoopType loop, Action startCallback, Action completeCallback)
		{
		}

		[Token(Token = "0x6001076")]
		[Address(RVA = "0xD7DE14", Offset = "0xD7DE14", VA = "0xD7DE14", Slot = "4")]
		protected override bool SetStartValue()
		{
			return default(bool);
		}

		[Token(Token = "0x6001077")]
		[Address(RVA = "0xD7DEA4", Offset = "0xD7DEA4", VA = "0xD7DEA4", Slot = "5")]
		protected override void Operation(float percentage)
		{
		}

		[Token(Token = "0x6001078")]
		[Address(RVA = "0xD7DEE4", Offset = "0xD7DEE4", VA = "0xD7DEE4", Slot = "6")]
		public override void Loop()
		{
		}

		[Token(Token = "0x6001079")]
		[Address(RVA = "0xD7DF18", Offset = "0xD7DF18", VA = "0xD7DF18", Slot = "7")]
		public override void PingPong()
		{
		}
	}
	[Token(Token = "0x20002B5")]
	internal class TextColor : TweenBase
	{
		[Token(Token = "0x40011F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Text _target;

		[Token(Token = "0x40011F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Color _start;

		[Token(Token = "0x17000149")]
		public Color EndValue
		{
			[Token(Token = "0x600107A")]
			[Address(RVA = "0xD7DF70", Offset = "0xD7DF70", VA = "0xD7DF70")]
			[CompilerGenerated]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x600107B")]
			[Address(RVA = "0xD7DF7C", Offset = "0xD7DF7C", VA = "0xD7DF7C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x600107C")]
		[Address(RVA = "0xD74DA8", Offset = "0xD74DA8", VA = "0xD74DA8")]
		public TextColor(Text target, Color endValue, float duration, float delay, bool obeyTimescale, AnimationCurve curve, Tween.LoopType loop, Action startCallback, Action completeCallback)
		{
		}

		[Token(Token = "0x600107D")]
		[Address(RVA = "0xD7DF88", Offset = "0xD7DF88", VA = "0xD7DF88", Slot = "4")]
		protected override bool SetStartValue()
		{
			return default(bool);
		}

		[Token(Token = "0x600107E")]
		[Address(RVA = "0xD7E020", Offset = "0xD7E020", VA = "0xD7E020", Slot = "5")]
		protected override void Operation(float percentage)
		{
		}

		[Token(Token = "0x600107F")]
		[Address(RVA = "0xD7E068", Offset = "0xD7E068", VA = "0xD7E068", Slot = "6")]
		public override void Loop()
		{
		}

		[Token(Token = "0x6001080")]
		[Address(RVA = "0xD7E0A4", Offset = "0xD7E0A4", VA = "0xD7E0A4", Slot = "7")]
		public override void PingPong()
		{
		}
	}
	[Token(Token = "0x20002B6")]
	internal class TextMeshColor : TweenBase
	{
		[Token(Token = "0x40011FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private TextMesh _target;

		[Token(Token = "0x40011FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Color _start;

		[Token(Token = "0x1700014A")]
		public Color EndValue
		{
			[Token(Token = "0x6001081")]
			[Address(RVA = "0xD7E10C", Offset = "0xD7E10C", VA = "0xD7E10C")]
			[CompilerGenerated]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001082")]
			[Address(RVA = "0xD7E118", Offset = "0xD7E118", VA = "0xD7E118")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001083")]
		[Address(RVA = "0xD753B0", Offset = "0xD753B0", VA = "0xD753B0")]
		public TextMeshColor(TextMesh target, Color endValue, float duration, float delay, bool obeyTimescale, AnimationCurve curve, Tween.LoopType loop, Action startCallback, Action completeCallback)
		{
		}

		[Token(Token = "0x6001084")]
		[Address(RVA = "0xD7E124", Offset = "0xD7E124", VA = "0xD7E124", Slot = "4")]
		protected override bool SetStartValue()
		{
			return default(bool);
		}

		[Token(Token = "0x6001085")]
		[Address(RVA = "0xD7E1B4", Offset = "0xD7E1B4", VA = "0xD7E1B4", Slot = "5")]
		protected override void Operation(float percentage)
		{
		}

		[Token(Token = "0x6001086")]
		[Address(RVA = "0xD7E1F4", Offset = "0xD7E1F4", VA = "0xD7E1F4", Slot = "6")]
		public override void Loop()
		{
		}

		[Token(Token = "0x6001087")]
		[Address(RVA = "0xD7E228", Offset = "0xD7E228", VA = "0xD7E228", Slot = "7")]
		public override void PingPong()
		{
		}
	}
	[Token(Token = "0x20002B7")]
	internal class ValueColor : TweenBase
	{
		[Token(Token = "0x40011FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Action<Color> _valueUpdatedCallback;

		[Token(Token = "0x40011FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Color _start;

		[Token(Token = "0x1700014B")]
		public Color EndValue
		{
			[Token(Token = "0x6001088")]
			[Address(RVA = "0xD7E280", Offset = "0xD7E280", VA = "0xD7E280")]
			[CompilerGenerated]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001089")]
			[Address(RVA = "0xD7E28C", Offset = "0xD7E28C", VA = "0xD7E28C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x600108A")]
		[Address(RVA = "0xD72164", Offset = "0xD72164", VA = "0xD72164")]
		public ValueColor(Color startValue, Color endValue, Action<Color> valueUpdatedCallback, float duration, float delay, bool obeyTimescale, AnimationCurve curve, Tween.LoopType loop, Action startCallback, Action completeCallback)
		{
		}

		[Token(Token = "0x600108B")]
		[Address(RVA = "0xD7E298", Offset = "0xD7E298", VA = "0xD7E298", Slot = "4")]
		protected override bool SetStartValue()
		{
			return default(bool);
		}

		[Token(Token = "0x600108C")]
		[Address(RVA = "0xD7E2A0", Offset = "0xD7E2A0", VA = "0xD7E2A0", Slot = "5")]
		protected override void Operation(float percentage)
		{
		}

		[Token(Token = "0x600108D")]
		[Address(RVA = "0xD7E2E4", Offset = "0xD7E2E4", VA = "0xD7E2E4", Slot = "6")]
		public override void Loop()
		{
		}

		[Token(Token = "0x600108E")]
		[Address(RVA = "0xD7E2F4", Offset = "0xD7E2F4", VA = "0xD7E2F4", Slot = "7")]
		public override void PingPong()
		{
		}
	}
	[Token(Token = "0x20002B8")]
	internal class ValueFloat : TweenBase
	{
		[Token(Token = "0x4001201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Action<float> _valueUpdatedCallback;

		[Token(Token = "0x4001202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float _start;

		[Token(Token = "0x1700014C")]
		public float EndValue
		{
			[Token(Token = "0x600108F")]
			[Address(RVA = "0xD7E314", Offset = "0xD7E314", VA = "0xD7E314")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001090")]
			[Address(RVA = "0xD7E31C", Offset = "0xD7E31C", VA = "0xD7E31C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001091")]
		[Address(RVA = "0xD72514", Offset = "0xD72514", VA = "0xD72514")]
		public ValueFloat(float startValue, float endValue, Action<float> valueUpdatedCallback, float duration, float delay, bool obeyTimescale, AnimationCurve curve, Tween.LoopType loop, Action startCallback, Action completeCallback)
		{
		}

		[Token(Token = "0x6001092")]
		[Address(RVA = "0xD7E324", Offset = "0xD7E324", VA = "0xD7E324", Slot = "4")]
		protected override bool SetStartValue()
		{
			return default(bool);
		}

		[Token(Token = "0x6001093")]
		[Address(RVA = "0xD7E32C", Offset = "0xD7E32C", VA = "0xD7E32C", Slot = "5")]
		protected override void Operation(float percentage)
		{
		}

		[Token(Token = "0x6001094")]
		[Address(RVA = "0xD7E364", Offset = "0xD7E364", VA = "0xD7E364", Slot = "6")]
		public override void Loop()
		{
		}

		[Token(Token = "0x6001095")]
		[Address(RVA = "0xD7E374", Offset = "0xD7E374", VA = "0xD7E374", Slot = "7")]
		public override void PingPong()
		{
		}
	}
	[Token(Token = "0x20002B9")]
	internal class ValueInt : TweenBase
	{
		[Token(Token = "0x4001204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Action<int> _valueUpdatedCallback;

		[Token(Token = "0x4001205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float _start;

		[Token(Token = "0x1700014D")]
		public float EndValue
		{
			[Token(Token = "0x6001096")]
			[Address(RVA = "0xD7E394", Offset = "0xD7E394", VA = "0xD7E394")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001097")]
			[Address(RVA = "0xD7E39C", Offset = "0xD7E39C", VA = "0xD7E39C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001098")]
		[Address(RVA = "0xD72358", Offset = "0xD72358", VA = "0xD72358")]
		public ValueInt(int startValue, int endValue, Action<int> valueUpdatedCallback, float duration, float delay, bool obeyTimescale, AnimationCurve curve, Tween.LoopType loop, Action startCallback, Action completeCallback)
		{
		}

		[Token(Token = "0x6001099")]
		[Address(RVA = "0xD7E3A4", Offset = "0xD7E3A4", VA = "0xD7E3A4", Slot = "4")]
		protected override bool SetStartValue()
		{
			return default(bool);
		}

		[Token(Token = "0x600109A")]
		[Address(RVA = "0xD7E3AC", Offset = "0xD7E3AC", VA = "0xD7E3AC", Slot = "5")]
		protected override void Operation(float percentage)
		{
		}

		[Token(Token = "0x600109B")]
		[Address(RVA = "0xD7E3FC", Offset = "0xD7E3FC", VA = "0xD7E3FC", Slot = "6")]
		public override void Loop()
		{
		}

		[Token(Token = "0x600109C")]
		[Address(RVA = "0xD7E40C", Offset = "0xD7E40C", VA = "0xD7E40C", Slot = "7")]
		public override void PingPong()
		{
		}
	}
	[Token(Token = "0x20002BA")]
	internal class ValueRect : TweenBase
	{
		[Token(Token = "0x4001207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Action<Rect> _valueUpdatedCallback;

		[Token(Token = "0x4001208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Rect _start;

		[Token(Token = "0x1700014E")]
		public Rect EndValue
		{
			[Token(Token = "0x600109D")]
			[Address(RVA = "0xD7E42C", Offset = "0xD7E42C", VA = "0xD7E42C")]
			[CompilerGenerated]
			get
			{
				return default(Rect);
			}
			[Token(Token = "0x600109E")]
			[Address(RVA = "0xD7E438", Offset = "0xD7E438", VA = "0xD7E438")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x600109F")]
		[Address(RVA = "0xD71914", Offset = "0xD71914", VA = "0xD71914")]
		public ValueRect(Rect startValue, Rect endValue, Action<Rect> valueUpdatedCallback, float duration, float delay, bool obeyTimescale, AnimationCurve curve, Tween.LoopType loop, Action startCallback, Action completeCallback)
		{
		}

		[Token(Token = "0x60010A0")]
		[Address(RVA = "0xD7E444", Offset = "0xD7E444", VA = "0xD7E444", Slot = "4")]
		protected override bool SetStartValue()
		{
			return default(bool);
		}

		[Token(Token = "0x60010A1")]
		[Address(RVA = "0xD7E44C", Offset = "0xD7E44C", VA = "0xD7E44C", Slot = "5")]
		protected override void Operation(float percentage)
		{
		}

		[Token(Token = "0x60010A2")]
		[Address(RVA = "0xD7E498", Offset = "0xD7E498", VA = "0xD7E498", Slot = "6")]
		public override void Loop()
		{
		}

		[Token(Token = "0x60010A3")]
		[Address(RVA = "0xD7E4A8", Offset = "0xD7E4A8", VA = "0xD7E4A8", Slot = "7")]
		public override void PingPong()
		{
		}
	}
	[Token(Token = "0x20002BB")]
	internal class ValueVector2 : TweenBase
	{
		[Token(Token = "0x400120A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Action<Vector2> _valueUpdatedCallback;

		[Token(Token = "0x400120B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector2 _start;

		[Token(Token = "0x1700014F")]
		public Vector2 EndValue
		{
			[Token(Token = "0x60010A4")]
			[Address(RVA = "0xD7E4C8", Offset = "0xD7E4C8", VA = "0xD7E4C8")]
			[CompilerGenerated]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x60010A5")]
			[Address(RVA = "0xD7E4D0", Offset = "0xD7E4D0", VA = "0xD7E4D0")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x60010A6")]
		[Address(RVA = "0xD71F58", Offset = "0xD71F58", VA = "0xD71F58")]
		public ValueVector2(Vector2 startValue, Vector2 endValue, Action<Vector2> valueUpdatedCallback, float duration, float delay, bool obeyTimescale, AnimationCurve curve, Tween.LoopType loop, Action startCallback, Action completeCallback)
		{
		}

		[Token(Token = "0x60010A7")]
		[Address(RVA = "0xD7E4D8", Offset = "0xD7E4D8", VA = "0xD7E4D8", Slot = "4")]
		protected override bool SetStartValue()
		{
			return default(bool);
		}

		[Token(Token = "0x60010A8")]
		[Address(RVA = "0xD7E4E0", Offset = "0xD7E4E0", VA = "0xD7E4E0", Slot = "5")]
		protected override void Operation(float percentage)
		{
		}

		[Token(Token = "0x60010A9")]
		[Address(RVA = "0xD7E51C", Offset = "0xD7E51C", VA = "0xD7E51C", Slot = "6")]
		public override void Loop()
		{
		}

		[Token(Token = "0x60010AA")]
		[Address(RVA = "0xD7E52C", Offset = "0xD7E52C", VA = "0xD7E52C", Slot = "7")]
		public override void PingPong()
		{
		}
	}
	[Token(Token = "0x20002BC")]
	internal class ValueVector3 : TweenBase
	{
		[Token(Token = "0x400120D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Action<Vector3> _valueUpdatedCallback;

		[Token(Token = "0x400120E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 _start;

		[Token(Token = "0x17000150")]
		public Vector3 EndValue
		{
			[Token(Token = "0x60010AB")]
			[Address(RVA = "0xD7E54C", Offset = "0xD7E54C", VA = "0xD7E54C")]
			[CompilerGenerated]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60010AC")]
			[Address(RVA = "0xD7E558", Offset = "0xD7E558", VA = "0xD7E558")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x60010AD")]
		[Address(RVA = "0xD71D64", Offset = "0xD71D64", VA = "0xD71D64")]
		public ValueVector3(Vector3 startValue, Vector3 endValue, Action<Vector3> valueUpdatedCallback, float duration, float delay, bool obeyTimescale, AnimationCurve curve, Tween.LoopType loop, Action startCallback, Action completeCallback)
		{
		}

		[Token(Token = "0x60010AE")]
		[Address(RVA = "0xD7E564", Offset = "0xD7E564", VA = "0xD7E564", Slot = "4")]
		protected override bool SetStartValue()
		{
			return default(bool);
		}

		[Token(Token = "0x60010AF")]
		[Address(RVA = "0xD7E56C", Offset = "0xD7E56C", VA = "0xD7E56C", Slot = "5")]
		protected override void Operation(float percentage)
		{
		}

		[Token(Token = "0x60010B0")]
		[Address(RVA = "0xD7E5BC", Offset = "0xD7E5BC", VA = "0xD7E5BC", Slot = "6")]
		public override void Loop()
		{
		}

		[Token(Token = "0x60010B1")]
		[Address(RVA = "0xD7E5CC", Offset = "0xD7E5CC", VA = "0xD7E5CC", Slot = "7")]
		public override void PingPong()
		{
		}
	}
	[Token(Token = "0x20002BD")]
	internal class ValueVector4 : TweenBase
	{
		[Token(Token = "0x4001210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Action<Vector4> _valueUpdatedCallback;

		[Token(Token = "0x4001211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector4 _start;

		[Token(Token = "0x17000151")]
		public Vector4 EndValue
		{
			[Token(Token = "0x60010B2")]
			[Address(RVA = "0xD7E5FC", Offset = "0xD7E5FC", VA = "0xD7E5FC")]
			[CompilerGenerated]
			get
			{
				return default(Vector4);
			}
			[Token(Token = "0x60010B3")]
			[Address(RVA = "0xD7E608", Offset = "0xD7E608", VA = "0xD7E608")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x60010B4")]
		[Address(RVA = "0xD71B48", Offset = "0xD71B48", VA = "0xD71B48")]
		public ValueVector4(Vector4 startValue, Vector4 endValue, Action<Vector4> valueUpdatedCallback, float duration, float delay, bool obeyTimescale, AnimationCurve curve, Tween.LoopType loop, Action startCallback, Action completeCallback)
		{
		}

		[Token(Token = "0x60010B5")]
		[Address(RVA = "0xD7E614", Offset = "0xD7E614", VA = "0xD7E614", Slot = "4")]
		protected override bool SetStartValue()
		{
			return default(bool);
		}

		[Token(Token = "0x60010B6")]
		[Address(RVA = "0xD7E61C", Offset = "0xD7E61C", VA = "0xD7E61C", Slot = "5")]
		protected override void Operation(float percentage)
		{
		}

		[Token(Token = "0x60010B7")]
		[Address(RVA = "0xD7E660", Offset = "0xD7E660", VA = "0xD7E660", Slot = "6")]
		public override void Loop()
		{
		}

		[Token(Token = "0x60010B8")]
		[Address(RVA = "0xD7E670", Offset = "0xD7E670", VA = "0xD7E670", Slot = "7")]
		public override void PingPong()
		{
		}
	}
	[Token(Token = "0x20002BE")]
	internal class Volume : TweenBase
	{
		[Token(Token = "0x4001213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private AudioSource _target;

		[Token(Token = "0x4001214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float _start;

		[Token(Token = "0x17000152")]
		public float EndValue
		{
			[Token(Token = "0x60010B9")]
			[Address(RVA = "0xD7E690", Offset = "0xD7E690", VA = "0xD7E690")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60010BA")]
			[Address(RVA = "0xD7E698", Offset = "0xD7E698", VA = "0xD7E698")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x60010BB")]
		[Address(RVA = "0xD737C8", Offset = "0xD737C8", VA = "0xD737C8")]
		public Volume(AudioSource target, float endValue, float duration, float delay, bool obeyTimescale, AnimationCurve curve, Tween.LoopType loop, Action startCallback, Action completeCallback)
		{
		}

		[Token(Token = "0x60010BC")]
		[Address(RVA = "0xD7E6A0", Offset = "0xD7E6A0", VA = "0xD7E6A0", Slot = "4")]
		protected override bool SetStartValue()
		{
			return default(bool);
		}

		[Token(Token = "0x60010BD")]
		[Address(RVA = "0xD7E72C", Offset = "0xD7E72C", VA = "0xD7E72C", Slot = "5")]
		protected override void Operation(float percentage)
		{
		}

		[Token(Token = "0x60010BE")]
		[Address(RVA = "0xD7E760", Offset = "0xD7E760", VA = "0xD7E760", Slot = "6")]
		public override void Loop()
		{
		}

		[Token(Token = "0x60010BF")]
		[Address(RVA = "0xD7E790", Offset = "0xD7E790", VA = "0xD7E790", Slot = "7")]
		public override void PingPong()
		{
		}
	}
}
namespace Greyman
{
	[Token(Token = "0x20002BF")]
	public abstract class ArrowIndicator : UnityEngine.Object
	{
		[Token(Token = "0x4001215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Indicator indicator;

		[Token(Token = "0x4001216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int indicatorID;

		[Token(Token = "0x4001217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform target;

		[Token(Token = "0x4001218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject arrow;

		[Token(Token = "0x4001219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 VR_scale;

		[Token(Token = "0x400121A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		protected bool _onScreen;

		[Token(Token = "0x400121B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		protected bool _onScreenNextValue;

		[Token(Token = "0x400121C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Color transColor;

		[Token(Token = "0x400121D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected bool fadingToOn;

		[Token(Token = "0x400121E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		protected bool fadingToOff;

		[Token(Token = "0x400121F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		protected bool fadingUp;

		[Token(Token = "0x4001220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		protected float timeStartLerp;

		[Token(Token = "0x4001221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected float elapsedTime;

		[Token(Token = "0x4001222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		protected float lerpAmount;

		[Token(Token = "0x17000153")]
		public abstract bool onScreen
		{
			[Token(Token = "0x60010C0")]
			get;
			[Token(Token = "0x60010C1")]
			set;
		}

		[Token(Token = "0x60010C2")]
		public abstract void UpdateEffects();

		[Token(Token = "0x60010C3")]
		[Address(RVA = "0xD7E7E0", Offset = "0xD7E7E0", VA = "0xD7E7E0")]
		protected ArrowIndicator()
		{
		}
	}
	[Token(Token = "0x20002C0")]
	public class ArrowIndicatorCanvas : ArrowIndicator
	{
		[Token(Token = "0x17000154")]
		public override bool onScreen
		{
			[Token(Token = "0x60010C4")]
			[Address(RVA = "0xD7E838", Offset = "0xD7E838", VA = "0xD7E838", Slot = "4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60010C5")]
			[Address(RVA = "0xD7E840", Offset = "0xD7E840", VA = "0xD7E840", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x60010C6")]
		[Address(RVA = "0xD7E9E0", Offset = "0xD7E9E0", VA = "0xD7E9E0", Slot = "6")]
		public override void UpdateEffects()
		{
		}

		[Token(Token = "0x60010C7")]
		[Address(RVA = "0xD7ECC0", Offset = "0xD7ECC0", VA = "0xD7ECC0")]
		private void fadingDownValues()
		{
		}

		[Token(Token = "0x60010C8")]
		[Address(RVA = "0xD7F29C", Offset = "0xD7F29C", VA = "0xD7F29C")]
		private void fadingUpValues()
		{
		}

		[Token(Token = "0x60010C9")]
		[Address(RVA = "0xD7F850", Offset = "0xD7F850", VA = "0xD7F850")]
		private void endFadingValues()
		{
		}

		[Token(Token = "0x60010CA")]
		[Address(RVA = "0xD7F97C", Offset = "0xD7F97C", VA = "0xD7F97C")]
		public ArrowIndicatorCanvas()
		{
		}
	}
	[Token(Token = "0x20002C1")]
	public class ArrowIndicatorVR : ArrowIndicator
	{
		[Token(Token = "0x17000155")]
		public override bool onScreen
		{
			[Token(Token = "0x60010CB")]
			[Address(RVA = "0xD7F980", Offset = "0xD7F980", VA = "0xD7F980", Slot = "4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60010CC")]
			[Address(RVA = "0xD7F988", Offset = "0xD7F988", VA = "0xD7F988", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x60010CD")]
		[Address(RVA = "0xD7FB1C", Offset = "0xD7FB1C", VA = "0xD7FB1C", Slot = "6")]
		public override void UpdateEffects()
		{
		}

		[Token(Token = "0x60010CE")]
		[Address(RVA = "0xD7FDEC", Offset = "0xD7FDEC", VA = "0xD7FDEC")]
		private void FadingDownValues()
		{
		}

		[Token(Token = "0x60010CF")]
		[Address(RVA = "0xD8039C", Offset = "0xD8039C", VA = "0xD8039C")]
		private void FadingUpValues()
		{
		}

		[Token(Token = "0x60010D0")]
		[Address(RVA = "0xD80924", Offset = "0xD80924", VA = "0xD80924")]
		private void EndFadingValues()
		{
		}

		[Token(Token = "0x60010D1")]
		[Address(RVA = "0xD80A10", Offset = "0xD80A10", VA = "0xD80A10")]
		public ArrowIndicatorVR()
		{
		}
	}
	[Token(Token = "0x20002C2")]
	public static class Utils
	{
		[Token(Token = "0x60010D2")]
		[Address(RVA = "0xD80A14", Offset = "0xD80A14", VA = "0xD80A14")]
		public static void DrawPlane(Vector3 normal, Vector3 position, float radius)
		{
		}
	}
	[Token(Token = "0x20002C3")]
	public class OffScreenIndicator : MonoBehaviour
	{
		[Token(Token = "0x4001223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static OffScreenIndicator instance;

		[Token(Token = "0x4001224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool enableDebug;

		[Token(Token = "0x4001225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool VirtualRealitySupported;

		[Token(Token = "0x4001226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float VR_cameraDistance;

		[Token(Token = "0x4001227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float VR_radius;

		[Token(Token = "0x4001228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float VR_indicatorScale;

		[Token(Token = "0x4001229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject canvas;

		[Token(Token = "0x400122A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int Canvas_circleRadius;

		[Token(Token = "0x400122B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int Canvas_border;

		[Token(Token = "0x400122C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int Canvas_indicatorSize;

		[Token(Token = "0x400122D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Indicator[] indicators;

		[Token(Token = "0x400122E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public FixedTarget[] targets;

		[Token(Token = "0x400122F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private OffScreenIndicatorManager manager;

		[Token(Token = "0x60010D3")]
		[Address(RVA = "0xD80EE0", Offset = "0xD80EE0", VA = "0xD80EE0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010D4")]
		[Address(RVA = "0xD81428", Offset = "0xD81428", VA = "0xD81428")]
		public void AddIndicator(Transform target, int indicatorID)
		{
		}

		[Token(Token = "0x60010D5")]
		[Address(RVA = "0xD81448", Offset = "0xD81448", VA = "0xD81448")]
		public void RemoveIndicator(Transform target)
		{
		}

		[Token(Token = "0x60010D6")]
		[Address(RVA = "0xD81468", Offset = "0xD81468", VA = "0xD81468")]
		public OffScreenIndicator()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002C4")]
	public class Indicator
	{
		[Token(Token = "0x20002C5")]
		public enum Transition
		{
			[Token(Token = "0x400123C")]
			None,
			[Token(Token = "0x400123D")]
			Fading,
			[Token(Token = "0x400123E")]
			Scaling
		}

		[Token(Token = "0x4001230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Sprite onScreenSprite;

		[Token(Token = "0x4001231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color onScreenColor;

		[Token(Token = "0x4001232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool onScreenRotates;

		[Token(Token = "0x4001233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Sprite offScreenSprite;

		[Token(Token = "0x4001234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color offScreenColor;

		[Token(Token = "0x4001235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool offScreenRotates;

		[Token(Token = "0x4001236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Vector3 targetOffset;

		[Token(Token = "0x4001237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transition transition;

		[Token(Token = "0x4001238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float transitionDuration;

		[NonSerialized]
		[Token(Token = "0x4001239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool showOnScreen;

		[NonSerialized]
		[Token(Token = "0x400123A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		public bool showOffScreen;

		[Token(Token = "0x60010D7")]
		[Address(RVA = "0xD814A4", Offset = "0xD814A4", VA = "0xD814A4")]
		public Indicator()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002C6")]
	public class FixedTarget
	{
		[Token(Token = "0x400123F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform target;

		[Token(Token = "0x4001240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int indicatorID;

		[Token(Token = "0x60010D8")]
		[Address(RVA = "0xD814C0", Offset = "0xD814C0", VA = "0xD814C0")]
		public FixedTarget()
		{
		}
	}
	[Token(Token = "0x20002C7")]
	public abstract class OffScreenIndicatorManager : MonoBehaviour
	{
		[Token(Token = "0x4001241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool enableDebug;

		[Token(Token = "0x4001242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected List<ArrowIndicator> arrowIndicators;

		[Token(Token = "0x4001243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Indicator[] indicators;

		[Token(Token = "0x60010D9")]
		public abstract void AddIndicator(Transform target, int indicatorID);

		[Token(Token = "0x60010DA")]
		public abstract void RemoveIndicator(Transform target);

		[Token(Token = "0x60010DB")]
		protected abstract void UpdateIndicatorPosition(ArrowIndicator arrowIndicator, int id = 0);

		[Token(Token = "0x60010DC")]
		[Address(RVA = "0xD814C8", Offset = "0xD814C8", VA = "0xD814C8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010DD")]
		[Address(RVA = "0xD81544", Offset = "0xD81544", VA = "0xD81544")]
		protected bool ExistsIndicator(Transform target)
		{
			return default(bool);
		}

		[Token(Token = "0x60010DE")]
		[Address(RVA = "0xD812DC", Offset = "0xD812DC", VA = "0xD812DC")]
		public void CheckFields()
		{
		}

		[Token(Token = "0x60010DF")]
		[Address(RVA = "0xD816D4", Offset = "0xD816D4", VA = "0xD816D4")]
		protected OffScreenIndicatorManager()
		{
		}
	}
	[Token(Token = "0x20002C8")]
	public class OffScreenIndicatorManagerCanvas : OffScreenIndicatorManager
	{
		[Token(Token = "0x4001244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject indicatorsParentObj;

		[Token(Token = "0x4001245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float cameraDistance;

		[Token(Token = "0x4001246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int circleRadius;

		[Token(Token = "0x4001247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int border;

		[Token(Token = "0x4001248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int indicatorSize;

		[Token(Token = "0x4001249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float realBorder;

		[Token(Token = "0x400124A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector2 referenceResolution;

		[Token(Token = "0x400124B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float screenScaleX;

		[Token(Token = "0x400124C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float screenScaleY;

		[Token(Token = "0x400124D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool screenScaled;

		[Token(Token = "0x60010E0")]
		[Address(RVA = "0xD816DC", Offset = "0xD816DC", VA = "0xD816DC")]
		private void Start()
		{
		}

		[Token(Token = "0x60010E1")]
		[Address(RVA = "0xD81AD0", Offset = "0xD81AD0", VA = "0xD81AD0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60010E2")]
		[Address(RVA = "0xD81C38", Offset = "0xD81C38", VA = "0xD81C38", Slot = "4")]
		public override void AddIndicator(Transform target, int indicatorID)
		{
		}

		[Token(Token = "0x60010E3")]
		[Address(RVA = "0xD82074", Offset = "0xD82074", VA = "0xD82074", Slot = "5")]
		public override void RemoveIndicator(Transform target)
		{
		}

		[Token(Token = "0x60010E4")]
		[Address(RVA = "0xD822C4", Offset = "0xD822C4", VA = "0xD822C4", Slot = "6")]
		protected override void UpdateIndicatorPosition(ArrowIndicator arrowIndicator, int id = 0)
		{
		}

		[Token(Token = "0x60010E5")]
		[Address(RVA = "0xD82760", Offset = "0xD82760", VA = "0xD82760")]
		public OffScreenIndicatorManagerCanvas()
		{
		}
	}
	[Token(Token = "0x20002CA")]
	public class OffScreenIndicatorManagerVR : OffScreenIndicatorManager
	{
		[Token(Token = "0x400124F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject indicatorsParentObj;

		[Token(Token = "0x4001250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float cameraDistance;

		[Token(Token = "0x4001251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float radius;

		[Token(Token = "0x4001252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float radius_to_start_show;

		[Token(Token = "0x4001253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float indicatorScale;

		[Token(Token = "0x60010E9")]
		[Address(RVA = "0xD8286C", Offset = "0xD8286C", VA = "0xD8286C")]
		private void Start()
		{
		}

		[Token(Token = "0x60010EA")]
		[Address(RVA = "0xD82870", Offset = "0xD82870", VA = "0xD82870")]
		public void CreateIndicatorsParent()
		{
		}

		[Token(Token = "0x60010EB")]
		[Address(RVA = "0xD829D8", Offset = "0xD829D8", VA = "0xD829D8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60010EC")]
		[Address(RVA = "0xD82A94", Offset = "0xD82A94", VA = "0xD82A94", Slot = "4")]
		public override void AddIndicator(Transform target, int indicatorID)
		{
		}

		[Token(Token = "0x60010ED")]
		[Address(RVA = "0xD82E5C", Offset = "0xD82E5C", VA = "0xD82E5C", Slot = "5")]
		public override void RemoveIndicator(Transform target)
		{
		}

		[Token(Token = "0x60010EE")]
		[Address(RVA = "0xD8304C", Offset = "0xD8304C", VA = "0xD8304C", Slot = "6")]
		protected override void UpdateIndicatorPosition(ArrowIndicator arrowIndicator, int id = 0)
		{
		}

		[Token(Token = "0x60010EF")]
		[Address(RVA = "0xD838F0", Offset = "0xD838F0", VA = "0xD838F0")]
		public OffScreenIndicatorManagerVR()
		{
		}
	}
}
namespace OculusSampleFramework
{
	[Token(Token = "0x20002CC")]
	public class ColorGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4001255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color COLOR_GRAB;

		[Token(Token = "0x4001256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Color COLOR_HIGHLIGHT;

		[Token(Token = "0x4001257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color m_color;

		[Token(Token = "0x4001258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshRenderer[] m_meshRenderers;

		[Token(Token = "0x4001259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_highlight;

		[Token(Token = "0x17000156")]
		public bool Highlight
		{
			[Token(Token = "0x60010F3")]
			[Address(RVA = "0xD839E4", Offset = "0xD839E4", VA = "0xD839E4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60010F4")]
			[Address(RVA = "0xD839EC", Offset = "0xD839EC", VA = "0xD839EC")]
			set
			{
			}
		}

		[Token(Token = "0x60010F5")]
		[Address(RVA = "0xD839F8", Offset = "0xD839F8", VA = "0xD839F8")]
		protected void UpdateColor()
		{
		}

		[Token(Token = "0x60010F6")]
		[Address(RVA = "0xD83B98", Offset = "0xD83B98", VA = "0xD83B98", Slot = "4")]
		public override void GrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x60010F7")]
		[Address(RVA = "0xD83BB4", Offset = "0xD83BB4", VA = "0xD83BB4", Slot = "5")]
		public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x60010F8")]
		[Address(RVA = "0xD83BD0", Offset = "0xD83BD0", VA = "0xD83BD0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010F9")]
		[Address(RVA = "0xD83AA4", Offset = "0xD83AA4", VA = "0xD83AA4")]
		private void SetColor(Color color)
		{
		}

		[Token(Token = "0x60010FA")]
		[Address(RVA = "0xD83E84", Offset = "0xD83E84", VA = "0xD83E84")]
		public ColorGrabbable()
		{
		}
	}
	[Token(Token = "0x20002CD")]
	public class DistanceGrabbable : OVRGrabbable
	{
		[Token(Token = "0x400125A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string m_materialColorField;

		[Token(Token = "0x400125B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GrabbableCrosshair m_crosshair;

		[Token(Token = "0x400125C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GrabManager m_crosshairManager;

		[Token(Token = "0x400125D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Renderer m_renderer;

		[Token(Token = "0x400125E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MaterialPropertyBlock m_mpb;

		[Token(Token = "0x400125F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_inRange;

		[Token(Token = "0x4001260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool m_targeted;

		[Token(Token = "0x17000157")]
		public bool InRange
		{
			[Token(Token = "0x60010FC")]
			[Address(RVA = "0xD83EFC", Offset = "0xD83EFC", VA = "0xD83EFC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60010FD")]
			[Address(RVA = "0xD83F04", Offset = "0xD83F04", VA = "0xD83F04")]
			set
			{
			}
		}

		[Token(Token = "0x17000158")]
		public bool Targeted
		{
			[Token(Token = "0x60010FE")]
			[Address(RVA = "0xD84070", Offset = "0xD84070", VA = "0xD84070")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60010FF")]
			[Address(RVA = "0xD84078", Offset = "0xD84078", VA = "0xD84078")]
			set
			{
			}
		}

		[Token(Token = "0x6001100")]
		[Address(RVA = "0xD84084", Offset = "0xD84084", VA = "0xD84084", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001101")]
		[Address(RVA = "0xD83F10", Offset = "0xD83F10", VA = "0xD83F10")]
		private void RefreshCrosshair()
		{
		}

		[Token(Token = "0x6001102")]
		[Address(RVA = "0xD84274", Offset = "0xD84274", VA = "0xD84274")]
		public DistanceGrabbable()
		{
		}
	}
	[Token(Token = "0x20002CE")]
	[RequireComponent(typeof(Rigidbody))]
	public class DistanceGrabber : OVRGrabber
	{
		[Token(Token = "0x4001261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		private float m_spherecastRadius;

		[Token(Token = "0x4001262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private float m_noSnapThreshhold;

		[Token(Token = "0x4001263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		private bool m_useSpherecast;

		[Token(Token = "0x4001264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		[SerializeField]
		public bool m_preventGrabThroughWalls;

		[Token(Token = "0x4001265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private float m_objectPullVelocity;

		[Token(Token = "0x4001266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float m_objectPullMaxRotationRate;

		[Token(Token = "0x4001267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool m_movingObjectToHand;

		[Token(Token = "0x4001268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private float m_maxGrabDistance;

		[Token(Token = "0x4001269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private int m_grabObjectsInLayer;

		[Token(Token = "0x400126A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		private int m_obstructionLayer;

		[Token(Token = "0x400126B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private DistanceGrabber m_otherHand;

		[Token(Token = "0x400126C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected DistanceGrabbable m_target;

		[Token(Token = "0x400126D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected Collider m_targetCollider;

		[Token(Token = "0x17000159")]
		public bool UseSpherecast
		{
			[Token(Token = "0x6001103")]
			[Address(RVA = "0xD8427C", Offset = "0xD8427C", VA = "0xD8427C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001104")]
			[Address(RVA = "0xD84284", Offset = "0xD84284", VA = "0xD84284")]
			set
			{
			}
		}

		[Token(Token = "0x6001105")]
		[Address(RVA = "0xD842A0", Offset = "0xD842A0", VA = "0xD842A0", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001106")]
		[Address(RVA = "0xD844AC", Offset = "0xD844AC", VA = "0xD844AC", Slot = "6")]
		public override void Update()
		{
		}

		[Token(Token = "0x6001107")]
		[Address(RVA = "0xD84D98", Offset = "0xD84D98", VA = "0xD84D98", Slot = "7")]
		protected override void GrabBegin()
		{
		}

		[Token(Token = "0x6001108")]
		[Address(RVA = "0xD85300", Offset = "0xD85300", VA = "0xD85300", Slot = "8")]
		protected override void MoveGrabbedObject(Vector3 pos, Quaternion rot, bool forceTeleport = false)
		{
		}

		[Token(Token = "0x6001109")]
		[Address(RVA = "0xD85710", Offset = "0xD85710", VA = "0xD85710")]
		private static DistanceGrabbable HitInfoToGrabbable(RaycastHit hitInfo)
		{
			return null;
		}

		[Token(Token = "0x600110A")]
		[Address(RVA = "0xD846D4", Offset = "0xD846D4", VA = "0xD846D4")]
		protected bool FindTarget(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x600110B")]
		[Address(RVA = "0xD857FC", Offset = "0xD857FC", VA = "0xD857FC")]
		protected bool FindTargetWithSpherecast(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x600110C")]
		[Address(RVA = "0xD85BFC", Offset = "0xD85BFC", VA = "0xD85BFC", Slot = "9")]
		protected override void GrabVolumeEnable(bool enabled)
		{
		}

		[Token(Token = "0x600110D")]
		[Address(RVA = "0xD85C14", Offset = "0xD85C14", VA = "0xD85C14", Slot = "10")]
		protected override void OffhandGrabbed(OVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x600110E")]
		[Address(RVA = "0xD85C1C", Offset = "0xD85C1C", VA = "0xD85C1C")]
		public DistanceGrabber()
		{
		}
	}
	[Token(Token = "0x20002CF")]
	public class GrabbableCrosshair : MonoBehaviour
	{
		[Token(Token = "0x20002D0")]
		public enum CrosshairState
		{
			[Token(Token = "0x4001273")]
			Disabled,
			[Token(Token = "0x4001274")]
			Enabled,
			[Token(Token = "0x4001275")]
			Targeted
		}

		[Token(Token = "0x400126E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CrosshairState m_state;

		[Token(Token = "0x400126F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_centerEyeAnchor;

		[Token(Token = "0x4001270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_targetedCrosshair;

		[Token(Token = "0x4001271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_enabledCrosshair;

		[Token(Token = "0x600110F")]
		[Address(RVA = "0xD85C3C", Offset = "0xD85C3C", VA = "0xD85C3C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001110")]
		[Address(RVA = "0xD841E8", Offset = "0xD841E8", VA = "0xD841E8")]
		public void SetState(CrosshairState cs)
		{
		}

		[Token(Token = "0x6001111")]
		[Address(RVA = "0xD85CA4", Offset = "0xD85CA4", VA = "0xD85CA4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001112")]
		[Address(RVA = "0xD85CDC", Offset = "0xD85CDC", VA = "0xD85CDC")]
		public GrabbableCrosshair()
		{
		}
	}
	[Token(Token = "0x20002D1")]
	public class GrabManager : MonoBehaviour
	{
		[Token(Token = "0x4001276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Collider m_grabVolume;

		[Token(Token = "0x4001277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color OutlineColorInRange;

		[Token(Token = "0x4001278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color OutlineColorHighlighted;

		[Token(Token = "0x4001279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color OutlineColorOutOfRange;

		[Token(Token = "0x6001113")]
		[Address(RVA = "0xD85CE4", Offset = "0xD85CE4", VA = "0xD85CE4")]
		private void OnTriggerEnter(Collider otherCollider)
		{
		}

		[Token(Token = "0x6001114")]
		[Address(RVA = "0xD85D90", Offset = "0xD85D90", VA = "0xD85D90")]
		private void OnTriggerExit(Collider otherCollider)
		{
		}

		[Token(Token = "0x6001115")]
		[Address(RVA = "0xD85E38", Offset = "0xD85E38", VA = "0xD85E38")]
		public GrabManager()
		{
		}
	}
	[Token(Token = "0x20002D2")]
	public class PauseOnInputLoss : MonoBehaviour
	{
		[Token(Token = "0x6001116")]
		[Address(RVA = "0xD85E40", Offset = "0xD85E40", VA = "0xD85E40")]
		private void Start()
		{
		}

		[Token(Token = "0x6001117")]
		[Address(RVA = "0xD85F2C", Offset = "0xD85F2C", VA = "0xD85F2C")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6001118")]
		[Address(RVA = "0xD85F38", Offset = "0xD85F38", VA = "0xD85F38")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6001119")]
		[Address(RVA = "0xD85F44", Offset = "0xD85F44", VA = "0xD85F44")]
		public PauseOnInputLoss()
		{
		}
	}
	[Token(Token = "0x20002D3")]
	public class BoneCapsuleTriggerLogic : MonoBehaviour
	{
		[Token(Token = "0x400127A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableToolTags ToolTags;

		[Token(Token = "0x400127B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HashSet<ColliderZone> CollidersTouchingUs;

		[Token(Token = "0x400127C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ColliderZone> _elementsToCleanUp;

		[Token(Token = "0x600111A")]
		[Address(RVA = "0xD85F4C", Offset = "0xD85F4C", VA = "0xD85F4C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600111B")]
		[Address(RVA = "0xD85F9C", Offset = "0xD85F9C", VA = "0xD85F9C")]
		private void Update()
		{
		}

		[Token(Token = "0x600111C")]
		[Address(RVA = "0xD86374", Offset = "0xD86374", VA = "0xD86374")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600111D")]
		[Address(RVA = "0xD86460", Offset = "0xD86460", VA = "0xD86460")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x600111E")]
		[Address(RVA = "0xD85FA0", Offset = "0xD85FA0", VA = "0xD85FA0")]
		private void CleanUpDeadColliders()
		{
		}

		[Token(Token = "0x600111F")]
		[Address(RVA = "0xD8654C", Offset = "0xD8654C", VA = "0xD8654C")]
		public BoneCapsuleTriggerLogic()
		{
		}
	}
	[Token(Token = "0x20002D4")]
	public class ButtonController : Interactable
	{
		[Token(Token = "0x20002D5")]
		public enum ContactTest
		{
			[Token(Token = "0x400128C")]
			PerpenTest,
			[Token(Token = "0x400128D")]
			BackwardsPress
		}

		[Token(Token = "0x400127D")]
		private const float ENTRY_DOT_THRESHOLD = 0.8f;

		[Token(Token = "0x400127E")]
		private const float PERP_DOT_THRESHOLD = 0.5f;

		[Token(Token = "0x400127F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _proximityZone;

		[Token(Token = "0x4001280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _contactZone;

		[Token(Token = "0x4001281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _actionZone;

		[Token(Token = "0x4001282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ContactTest[] _contactTests;

		[Token(Token = "0x4001283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform _buttonPlaneCenter;

		[Token(Token = "0x4001284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool _makeSureToolIsOnPositiveSide;

		[Token(Token = "0x4001285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private Vector3 _localButtonDirection;

		[Token(Token = "0x4001286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private InteractableToolTags[] _allValidToolsTags;

		[Token(Token = "0x4001287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _toolTagsMask;

		[Token(Token = "0x4001288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private bool _allowMultipleNearFieldInteraction;

		[Token(Token = "0x400128A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Dictionary<InteractableTool, InteractableState> _toolToState;

		[Token(Token = "0x1700015A")]
		public override int ValidToolTagsMask
		{
			[Token(Token = "0x6001120")]
			[Address(RVA = "0xD86624", Offset = "0xD86624", VA = "0xD86624", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700015B")]
		public Vector3 LocalButtonDirection
		{
			[Token(Token = "0x6001121")]
			[Address(RVA = "0xD8662C", Offset = "0xD8662C", VA = "0xD8662C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700015C")]
		public InteractableState CurrentButtonState
		{
			[Token(Token = "0x6001122")]
			[Address(RVA = "0xD86638", Offset = "0xD86638", VA = "0xD86638")]
			[CompilerGenerated]
			get
			{
				return default(InteractableState);
			}
			[Token(Token = "0x6001123")]
			[Address(RVA = "0xD86640", Offset = "0xD86640", VA = "0xD86640")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001124")]
		[Address(RVA = "0xD86648", Offset = "0xD86648", VA = "0xD86648", Slot = "9")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001125")]
		[Address(RVA = "0xD86798", Offset = "0xD86798", VA = "0xD86798")]
		private void FireInteractionEventsOnDepth(InteractableCollisionDepth oldDepth, InteractableTool collidingTool, InteractionType interactionType)
		{
		}

		[Token(Token = "0x6001126")]
		[Address(RVA = "0xD869A0", Offset = "0xD869A0", VA = "0xD869A0", Slot = "8")]
		public override void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth)
		{
		}

		[Token(Token = "0x6001127")]
		[Address(RVA = "0xD86F64", Offset = "0xD86F64", VA = "0xD86F64")]
		private InteractableState GetUpcomingStateNearField(InteractableState oldState, InteractableCollisionDepth newCollisionDepth, bool toolIsInActionZone, bool toolIsInContactZone, bool toolIsInProximity, bool validContact, bool onPositiveSideOfInteractable)
		{
			return default(InteractableState);
		}

		[Token(Token = "0x6001128")]
		[Address(RVA = "0xD870CC", Offset = "0xD870CC", VA = "0xD870CC")]
		public void ForceResetButton()
		{
		}

		[Token(Token = "0x6001129")]
		[Address(RVA = "0xD86E88", Offset = "0xD86E88", VA = "0xD86E88")]
		private bool IsValidContact(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x600112A")]
		[Address(RVA = "0xD871D8", Offset = "0xD871D8", VA = "0xD871D8")]
		private bool PassEntryTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x600112B")]
		[Address(RVA = "0xD872E4", Offset = "0xD872E4", VA = "0xD872E4")]
		private bool PassPerpTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x600112C")]
		[Address(RVA = "0xD8736C", Offset = "0xD8736C", VA = "0xD8736C")]
		public ButtonController()
		{
		}
	}
	[Token(Token = "0x20002D6")]
	public class ButtonTriggerZone : MonoBehaviour, ColliderZone
	{
		[Token(Token = "0x400128E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _parentInteractableObj;

		[Token(Token = "0x1700015D")]
		public Collider Collider
		{
			[Token(Token = "0x600112D")]
			[Address(RVA = "0xD87490", Offset = "0xD87490", VA = "0xD87490", Slot = "4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600112E")]
			[Address(RVA = "0xD87498", Offset = "0xD87498", VA = "0xD87498")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700015E")]
		public Interactable ParentInteractable
		{
			[Token(Token = "0x600112F")]
			[Address(RVA = "0xD874A0", Offset = "0xD874A0", VA = "0xD874A0", Slot = "5")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001130")]
			[Address(RVA = "0xD874A8", Offset = "0xD874A8", VA = "0xD874A8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700015F")]
		public InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x6001131")]
			[Address(RVA = "0xD874B0", Offset = "0xD874B0", VA = "0xD874B0", Slot = "6")]
			get
			{
				return default(InteractableCollisionDepth);
			}
		}

		[Token(Token = "0x6001132")]
		[Address(RVA = "0xD87500", Offset = "0xD87500", VA = "0xD87500")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001133")]
		[Address(RVA = "0xD87594", Offset = "0xD87594", VA = "0xD87594")]
		public ButtonTriggerZone()
		{
		}
	}
	[Token(Token = "0x20002D7")]
	public interface ColliderZone
	{
		[Token(Token = "0x17000160")]
		Collider Collider
		{
			[Token(Token = "0x6001134")]
			get;
		}

		[Token(Token = "0x17000161")]
		Interactable ParentInteractable
		{
			[Token(Token = "0x6001135")]
			get;
		}

		[Token(Token = "0x17000162")]
		InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x6001136")]
			get;
		}
	}
	[Token(Token = "0x20002D8")]
	public class ColliderZoneArgs : EventArgs
	{
		[Token(Token = "0x4001291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ColliderZone Collider;

		[Token(Token = "0x4001292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly float FrameTime;

		[Token(Token = "0x4001293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableTool CollidingTool;

		[Token(Token = "0x4001294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly InteractionType InteractionT;

		[Token(Token = "0x6001137")]
		[Address(RVA = "0xD868F4", Offset = "0xD868F4", VA = "0xD868F4")]
		public ColliderZoneArgs(ColliderZone collider, float frameTime, InteractableTool collidingTool, InteractionType interactionType)
		{
		}
	}
	[Token(Token = "0x20002D9")]
	public enum InteractionType
	{
		[Token(Token = "0x4001296")]
		Enter,
		[Token(Token = "0x4001297")]
		Stay,
		[Token(Token = "0x4001298")]
		Exit
	}
	[Token(Token = "0x20002DA")]
	public class HandsManager : MonoBehaviour
	{
		[Token(Token = "0x20002DB")]
		public enum HandsVisualMode
		{
			[Token(Token = "0x40012AA")]
			Mesh,
			[Token(Token = "0x40012AB")]
			Skeleton,
			[Token(Token = "0x40012AC")]
			Both
		}

		[Token(Token = "0x20002DC")]
		[CompilerGenerated]
		private sealed class <FindSkeletonVisualGameObjects>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40012AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40012AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40012AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HandsManager <>4__this;

			[Token(Token = "0x1700016E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001159")]
				[Address(RVA = "0xD889F4", Offset = "0xD889F4", VA = "0xD889F4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700016F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600115B")]
				[Address(RVA = "0xD88A3C", Offset = "0xD88A3C", VA = "0xD88A3C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001156")]
			[Address(RVA = "0xD87FEC", Offset = "0xD87FEC", VA = "0xD87FEC")]
			[DebuggerHidden]
			public <FindSkeletonVisualGameObjects>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x6001157")]
			[Address(RVA = "0xD887D4", Offset = "0xD887D4", VA = "0xD887D4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001158")]
			[Address(RVA = "0xD887D8", Offset = "0xD887D8", VA = "0xD887D8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600115A")]
			[Address(RVA = "0xD889FC", Offset = "0xD889FC", VA = "0xD889FC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001299")]
		private const string SKELETON_VISUALIZER_NAME = "SkeletonRenderer";

		[Token(Token = "0x400129A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _leftHand;

		[Token(Token = "0x400129B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _rightHand;

		[Token(Token = "0x400129C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HandsVisualMode VisualMode;

		[Token(Token = "0x400129D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OVRHand[] _hand;

		[Token(Token = "0x400129E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OVRSkeleton[] _handSkeleton;

		[Token(Token = "0x400129F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRSkeletonRenderer[] _handSkeletonRenderer;

		[Token(Token = "0x40012A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OVRMesh[] _handMesh;

		[Token(Token = "0x40012A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private OVRMeshRenderer[] _handMeshRenderer;

		[Token(Token = "0x40012A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SkinnedMeshRenderer _leftMeshRenderer;

		[Token(Token = "0x40012A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SkinnedMeshRenderer _rightMeshRenderer;

		[Token(Token = "0x40012A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject _leftSkeletonVisual;

		[Token(Token = "0x40012A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject _rightSkeletonVisual;

		[Token(Token = "0x40012A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _currentHandAlpha;

		[Token(Token = "0x40012A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int HandAlphaId;

		[Token(Token = "0x17000163")]
		public OVRHand RightHand
		{
			[Token(Token = "0x6001138")]
			[Address(RVA = "0xD8759C", Offset = "0xD8759C", VA = "0xD8759C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001139")]
			[Address(RVA = "0xD875C8", Offset = "0xD875C8", VA = "0xD875C8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000164")]
		public OVRSkeleton RightHandSkeleton
		{
			[Token(Token = "0x600113A")]
			[Address(RVA = "0xD8762C", Offset = "0xD8762C", VA = "0xD8762C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600113B")]
			[Address(RVA = "0xD87658", Offset = "0xD87658", VA = "0xD87658")]
			private set
			{
			}
		}

		[Token(Token = "0x17000165")]
		public OVRSkeletonRenderer RightHandSkeletonRenderer
		{
			[Token(Token = "0x600113C")]
			[Address(RVA = "0xD876BC", Offset = "0xD876BC", VA = "0xD876BC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600113D")]
			[Address(RVA = "0xD876E8", Offset = "0xD876E8", VA = "0xD876E8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000166")]
		public OVRMesh RightHandMesh
		{
			[Token(Token = "0x600113E")]
			[Address(RVA = "0xD8774C", Offset = "0xD8774C", VA = "0xD8774C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600113F")]
			[Address(RVA = "0xD87778", Offset = "0xD87778", VA = "0xD87778")]
			private set
			{
			}
		}

		[Token(Token = "0x17000167")]
		public OVRMeshRenderer RightHandMeshRenderer
		{
			[Token(Token = "0x6001140")]
			[Address(RVA = "0xD877DC", Offset = "0xD877DC", VA = "0xD877DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001141")]
			[Address(RVA = "0xD87808", Offset = "0xD87808", VA = "0xD87808")]
			private set
			{
			}
		}

		[Token(Token = "0x17000168")]
		public OVRHand LeftHand
		{
			[Token(Token = "0x6001142")]
			[Address(RVA = "0xD8786C", Offset = "0xD8786C", VA = "0xD8786C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001143")]
			[Address(RVA = "0xD87894", Offset = "0xD87894", VA = "0xD87894")]
			private set
			{
			}
		}

		[Token(Token = "0x17000169")]
		public OVRSkeleton LeftHandSkeleton
		{
			[Token(Token = "0x6001144")]
			[Address(RVA = "0xD878F4", Offset = "0xD878F4", VA = "0xD878F4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001145")]
			[Address(RVA = "0xD8791C", Offset = "0xD8791C", VA = "0xD8791C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700016A")]
		public OVRSkeletonRenderer LeftHandSkeletonRenderer
		{
			[Token(Token = "0x6001146")]
			[Address(RVA = "0xD8797C", Offset = "0xD8797C", VA = "0xD8797C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001147")]
			[Address(RVA = "0xD879A4", Offset = "0xD879A4", VA = "0xD879A4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700016B")]
		public OVRMesh LeftHandMesh
		{
			[Token(Token = "0x6001148")]
			[Address(RVA = "0xD87A04", Offset = "0xD87A04", VA = "0xD87A04")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001149")]
			[Address(RVA = "0xD87A2C", Offset = "0xD87A2C", VA = "0xD87A2C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700016C")]
		public OVRMeshRenderer LeftHandMeshRenderer
		{
			[Token(Token = "0x600114A")]
			[Address(RVA = "0xD87A8C", Offset = "0xD87A8C", VA = "0xD87A8C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600114B")]
			[Address(RVA = "0xD87AB4", Offset = "0xD87AB4", VA = "0xD87AB4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700016D")]
		public static HandsManager Instance
		{
			[Token(Token = "0x600114C")]
			[Address(RVA = "0xD87B14", Offset = "0xD87B14", VA = "0xD87B14")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600114D")]
			[Address(RVA = "0xD87B5C", Offset = "0xD87B5C", VA = "0xD87B5C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x600114E")]
		[Address(RVA = "0xD87BB4", Offset = "0xD87BB4", VA = "0xD87BB4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600114F")]
		[Address(RVA = "0xD87F70", Offset = "0xD87F70", VA = "0xD87F70")]
		private void Update()
		{
		}

		[Token(Token = "0x6001150")]
		[Address(RVA = "0xD87EFC", Offset = "0xD87EFC", VA = "0xD87EFC")]
		[IteratorStateMachine(typeof(<FindSkeletonVisualGameObjects>d__52))]
		private IEnumerator FindSkeletonVisualGameObjects()
		{
			return null;
		}

		[Token(Token = "0x6001151")]
		[Address(RVA = "0xD88014", Offset = "0xD88014", VA = "0xD88014")]
		public void SwitchVisualization()
		{
		}

		[Token(Token = "0x6001152")]
		[Address(RVA = "0xD880D8", Offset = "0xD880D8", VA = "0xD880D8")]
		private void SetToCurrentVisualMode()
		{
		}

		[Token(Token = "0x6001153")]
		[Address(RVA = "0xD882A8", Offset = "0xD882A8", VA = "0xD882A8")]
		public static List<OVRBoneCapsule> GetCapsulesPerBone(OVRSkeleton skeleton, OVRSkeleton.BoneId boneId)
		{
			return null;
		}

		[Token(Token = "0x6001154")]
		[Address(RVA = "0xD8850C", Offset = "0xD8850C", VA = "0xD8850C")]
		public bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x6001155")]
		[Address(RVA = "0xD8866C", Offset = "0xD8866C", VA = "0xD8866C")]
		public HandsManager()
		{
		}
	}
	[Token(Token = "0x20002DD")]
	public abstract class Interactable : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20002DE")]
		public class InteractableStateArgsEvent : UnityEvent<InteractableStateArgs>
		{
			[Token(Token = "0x600116D")]
			[Address(RVA = "0xD8908C", Offset = "0xD8908C", VA = "0xD8908C")]
			public InteractableStateArgsEvent()
			{
			}
		}

		[Token(Token = "0x40012B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected ColliderZone _proximityZoneCollider;

		[Token(Token = "0x40012B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected ColliderZone _contactZoneCollider;

		[Token(Token = "0x40012B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected ColliderZone _actionZoneCollider;

		[Token(Token = "0x40012B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InteractableStateArgsEvent InteractableStateChanged;

		[Token(Token = "0x17000170")]
		public ColliderZone ProximityCollider
		{
			[Token(Token = "0x600115C")]
			[Address(RVA = "0xD88A44", Offset = "0xD88A44", VA = "0xD88A44")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000171")]
		public ColliderZone ContactCollider
		{
			[Token(Token = "0x600115D")]
			[Address(RVA = "0xD88A4C", Offset = "0xD88A4C", VA = "0xD88A4C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000172")]
		public ColliderZone ActionCollider
		{
			[Token(Token = "0x600115E")]
			[Address(RVA = "0xD88A54", Offset = "0xD88A54", VA = "0xD88A54")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000173")]
		public virtual int ValidToolTagsMask
		{
			[Token(Token = "0x600115F")]
			[Address(RVA = "0xD88A5C", Offset = "0xD88A5C", VA = "0xD88A5C", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000016")]
		public event Action<ColliderZoneArgs> ProximityZoneEvent
		{
			[Token(Token = "0x6001160")]
			[Address(RVA = "0xD88A64", Offset = "0xD88A64", VA = "0xD88A64")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001161")]
			[Address(RVA = "0xD88B14", Offset = "0xD88B14", VA = "0xD88B14")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000017")]
		public event Action<ColliderZoneArgs> ContactZoneEvent
		{
			[Token(Token = "0x6001163")]
			[Address(RVA = "0xD88BE0", Offset = "0xD88BE0", VA = "0xD88BE0")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001164")]
			[Address(RVA = "0xD88C90", Offset = "0xD88C90", VA = "0xD88C90")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000018")]
		public event Action<ColliderZoneArgs> ActionZoneEvent
		{
			[Token(Token = "0x6001166")]
			[Address(RVA = "0xD88D5C", Offset = "0xD88D5C", VA = "0xD88D5C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001167")]
			[Address(RVA = "0xD88E0C", Offset = "0xD88E0C", VA = "0xD88E0C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001162")]
		[Address(RVA = "0xD88BC4", Offset = "0xD88BC4", VA = "0xD88BC4", Slot = "5")]
		protected virtual void OnProximityZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6001165")]
		[Address(RVA = "0xD88D40", Offset = "0xD88D40", VA = "0xD88D40", Slot = "6")]
		protected virtual void OnContactZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6001168")]
		[Address(RVA = "0xD88EBC", Offset = "0xD88EBC", VA = "0xD88EBC", Slot = "7")]
		protected virtual void OnActionZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6001169")]
		public abstract void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth);

		[Token(Token = "0x600116A")]
		[Address(RVA = "0xD86744", Offset = "0xD86744", VA = "0xD86744", Slot = "9")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600116B")]
		[Address(RVA = "0xD88F88", Offset = "0xD88F88", VA = "0xD88F88", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x600116C")]
		[Address(RVA = "0xD87488", Offset = "0xD87488", VA = "0xD87488")]
		protected Interactable()
		{
		}
	}
	[Token(Token = "0x20002DF")]
	public enum InteractableCollisionDepth
	{
		[Token(Token = "0x40012B8")]
		None,
		[Token(Token = "0x40012B9")]
		Proximity,
		[Token(Token = "0x40012BA")]
		Contact,
		[Token(Token = "0x40012BB")]
		Action
	}
	[Token(Token = "0x20002E0")]
	public enum InteractableState
	{
		[Token(Token = "0x40012BD")]
		Default,
		[Token(Token = "0x40012BE")]
		ProximityState,
		[Token(Token = "0x40012BF")]
		ContactState,
		[Token(Token = "0x40012C0")]
		ActionState
	}
	[Token(Token = "0x20002E1")]
	public class InteractableStateArgs : EventArgs
	{
		[Token(Token = "0x40012C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Interactable Interactable;

		[Token(Token = "0x40012C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly InteractableTool Tool;

		[Token(Token = "0x40012C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableState OldInteractableState;

		[Token(Token = "0x40012C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly InteractableState NewInteractableState;

		[Token(Token = "0x40012C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ColliderZoneArgs ColliderArgs;

		[Token(Token = "0x600116E")]
		[Address(RVA = "0xD87014", Offset = "0xD87014", VA = "0xD87014")]
		public InteractableStateArgs(Interactable interactable, InteractableTool tool, InteractableState newInteractableState, InteractableState oldState, ColliderZoneArgs colliderArgs)
		{
		}
	}
	[Token(Token = "0x20002E2")]
	public class InteractableRegistry : MonoBehaviour
	{
		[Token(Token = "0x40012C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static HashSet<Interactable> _interactables;

		[Token(Token = "0x17000174")]
		public static HashSet<Interactable> Interactables
		{
			[Token(Token = "0x600116F")]
			[Address(RVA = "0xD890D4", Offset = "0xD890D4", VA = "0xD890D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001170")]
		[Address(RVA = "0xD88ED8", Offset = "0xD88ED8", VA = "0xD88ED8")]
		public static void RegisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6001171")]
		[Address(RVA = "0xD88FDC", Offset = "0xD88FDC", VA = "0xD88FDC")]
		public static void UnregisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6001172")]
		[Address(RVA = "0xD8912C", Offset = "0xD8912C", VA = "0xD8912C")]
		public InteractableRegistry()
		{
		}
	}
	[Token(Token = "0x20002E3")]
	public class InteractableToolsCreator : MonoBehaviour
	{
		[Token(Token = "0x20002E4")]
		[CompilerGenerated]
		private sealed class <AttachToolsToHands>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40012C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40012CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40012CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform[] toolObjects;

			[Token(Token = "0x40012CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isRightHand;

			[Token(Token = "0x40012CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public InteractableToolsCreator <>4__this;

			[Token(Token = "0x40012CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private HandsManager <handsManagerObj>5__2;

			[Token(Token = "0x40012CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private HashSet<Transform>.Enumerator <>7__wrap2;

			[Token(Token = "0x40012D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Transform <toolObject>5__4;

			[Token(Token = "0x40012D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private OVRSkeleton <handSkeletonToAttachTo>5__5;

			[Token(Token = "0x17000175")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600117C")]
				[Address(RVA = "0xD898EC", Offset = "0xD898EC", VA = "0xD898EC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000176")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600117E")]
				[Address(RVA = "0xD89934", Offset = "0xD89934", VA = "0xD89934", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001178")]
			[Address(RVA = "0xD892D4", Offset = "0xD892D4", VA = "0xD892D4")]
			[DebuggerHidden]
			public <AttachToolsToHands>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6001179")]
			[Address(RVA = "0xD89410", Offset = "0xD89410", VA = "0xD89410", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600117A")]
			[Address(RVA = "0xD8942C", Offset = "0xD8942C", VA = "0xD8942C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600117B")]
			[Address(RVA = "0xD8989C", Offset = "0xD8989C", VA = "0xD8989C")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x600117D")]
			[Address(RVA = "0xD898F4", Offset = "0xD898F4", VA = "0xD898F4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40012C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform[] LeftHandTools;

		[Token(Token = "0x40012C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform[] RightHandTools;

		[Token(Token = "0x6001174")]
		[Address(RVA = "0xD891CC", Offset = "0xD891CC", VA = "0xD891CC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001175")]
		[Address(RVA = "0xD89238", Offset = "0xD89238", VA = "0xD89238")]
		[IteratorStateMachine(typeof(<AttachToolsToHands>d__3))]
		private IEnumerator AttachToolsToHands(Transform[] toolObjects, bool isRightHand)
		{
			return null;
		}

		[Token(Token = "0x6001176")]
		[Address(RVA = "0xD892FC", Offset = "0xD892FC", VA = "0xD892FC")]
		private void AttachToolToHandTransform(Transform tool, bool isRightHanded)
		{
		}

		[Token(Token = "0x6001177")]
		[Address(RVA = "0xD89408", Offset = "0xD89408", VA = "0xD89408")]
		public InteractableToolsCreator()
		{
		}
	}
	[Token(Token = "0x20002E5")]
	public class InteractableToolsInputRouter : MonoBehaviour
	{
		[Token(Token = "0x40012D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InteractableToolsInputRouter _instance;

		[Token(Token = "0x40012D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _leftPinch;

		[Token(Token = "0x40012D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool _rightPinch;

		[Token(Token = "0x40012D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HashSet<InteractableTool> _leftHandNearTools;

		[Token(Token = "0x40012D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<InteractableTool> _leftHandFarTools;

		[Token(Token = "0x40012D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HashSet<InteractableTool> _rightHandNearTools;

		[Token(Token = "0x40012D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HashSet<InteractableTool> _rightHandFarTools;

		[Token(Token = "0x17000177")]
		public static InteractableToolsInputRouter Instance
		{
			[Token(Token = "0x600117F")]
			[Address(RVA = "0xD8993C", Offset = "0xD8993C", VA = "0xD8993C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001180")]
		[Address(RVA = "0xD89A98", Offset = "0xD89A98", VA = "0xD89A98")]
		public void RegisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6001181")]
		[Address(RVA = "0xD89B34", Offset = "0xD89B34", VA = "0xD89B34")]
		public void UnregisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6001182")]
		[Address(RVA = "0xD89BD0", Offset = "0xD89BD0", VA = "0xD89BD0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001183")]
		[Address(RVA = "0xD89E6C", Offset = "0xD89E6C", VA = "0xD89E6C")]
		private bool UpdateToolsAndEnableState(HashSet<InteractableTool> tools, bool toolsAreEnabledThisFrame)
		{
			return default(bool);
		}

		[Token(Token = "0x6001184")]
		[Address(RVA = "0xD89EA8", Offset = "0xD89EA8", VA = "0xD89EA8")]
		private bool UpdateTools(HashSet<InteractableTool> tools, bool resetCollisionData = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001185")]
		[Address(RVA = "0xD8A180", Offset = "0xD8A180", VA = "0xD8A180")]
		private void ToggleToolsEnableState(HashSet<InteractableTool> tools, bool enableState)
		{
		}

		[Token(Token = "0x6001186")]
		[Address(RVA = "0xD8A388", Offset = "0xD8A388", VA = "0xD8A388")]
		public InteractableToolsInputRouter()
		{
		}
	}
	[Token(Token = "0x20002E6")]
	public class FingerTipPokeTool : InteractableTool
	{
		[Token(Token = "0x20002E7")]
		[CompilerGenerated]
		private sealed class <AttachTriggerLogic>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40012E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40012E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40012E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FingerTipPokeTool <>4__this;

			[Token(Token = "0x1700017C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001198")]
				[Address(RVA = "0xD8B558", Offset = "0xD8B558", VA = "0xD8B558", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700017D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600119A")]
				[Address(RVA = "0xD8B5A0", Offset = "0xD8B5A0", VA = "0xD8B5A0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001195")]
			[Address(RVA = "0xD8A624", Offset = "0xD8A624", VA = "0xD8A624")]
			[DebuggerHidden]
			public <AttachTriggerLogic>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6001196")]
			[Address(RVA = "0xD8B0C8", Offset = "0xD8B0C8", VA = "0xD8B0C8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001197")]
			[Address(RVA = "0xD8B0CC", Offset = "0xD8B0CC", VA = "0xD8B0CC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001199")]
			[Address(RVA = "0xD8B560", Offset = "0xD8B560", VA = "0xD8B560", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40012D9")]
		private const int NUM_VELOCITY_FRAMES = 10;

		[Token(Token = "0x40012DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private FingerTipPokeToolView _fingerTipPokeToolView;

		[Token(Token = "0x40012DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private OVRPlugin.HandFinger _fingerToFollow;

		[Token(Token = "0x40012DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] _velocityFrames;

		[Token(Token = "0x40012DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _currVelocityFrame;

		[Token(Token = "0x40012DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool _sampledMaxFramesAlready;

		[Token(Token = "0x40012DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 _position;

		[Token(Token = "0x40012E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BoneCapsuleTriggerLogic[] _boneCapsuleTriggerLogic;

		[Token(Token = "0x40012E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _lastScale;

		[Token(Token = "0x40012E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool _isInitialized;

		[Token(Token = "0x40012E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private OVRBoneCapsule _capsuleToTrack;

		[Token(Token = "0x17000178")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x6001187")]
			[Address(RVA = "0xD8A490", Offset = "0xD8A490", VA = "0xD8A490", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x17000179")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x6001188")]
			[Address(RVA = "0xD8A498", Offset = "0xD8A498", VA = "0xD8A498", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x1700017A")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6001189")]
			[Address(RVA = "0xD8A4A0", Offset = "0xD8A4A0", VA = "0xD8A4A0", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700017B")]
		public override bool EnableState
		{
			[Token(Token = "0x600118A")]
			[Address(RVA = "0xD8A4A8", Offset = "0xD8A4A8", VA = "0xD8A4A8", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600118B")]
			[Address(RVA = "0xD8A4D0", Offset = "0xD8A4D0", VA = "0xD8A4D0", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x600118C")]
		[Address(RVA = "0xD8A500", Offset = "0xD8A500", VA = "0xD8A500", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x600118D")]
		[Address(RVA = "0xD8A5B0", Offset = "0xD8A5B0", VA = "0xD8A5B0")]
		[IteratorStateMachine(typeof(<AttachTriggerLogic>d__21))]
		private IEnumerator AttachTriggerLogic()
		{
			return null;
		}

		[Token(Token = "0x600118E")]
		[Address(RVA = "0xD8A64C", Offset = "0xD8A64C", VA = "0xD8A64C")]
		private void Update()
		{
		}

		[Token(Token = "0x600118F")]
		[Address(RVA = "0xD8A8CC", Offset = "0xD8A8CC", VA = "0xD8A8CC")]
		private void UpdateAverageVelocity()
		{
		}

		[Token(Token = "0x6001190")]
		[Address(RVA = "0xD8AA88", Offset = "0xD8AA88", VA = "0xD8AA88")]
		private void CheckAndUpdateScale()
		{
		}

		[Token(Token = "0x6001191")]
		[Address(RVA = "0xD8AB70", Offset = "0xD8AB70", VA = "0xD8AB70", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6001192")]
		[Address(RVA = "0xD8AF04", Offset = "0xD8AF04", VA = "0xD8AF04", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x6001193")]
		[Address(RVA = "0xD8AF08", Offset = "0xD8AF08", VA = "0xD8AF08", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x6001194")]
		[Address(RVA = "0xD8AF0C", Offset = "0xD8AF0C", VA = "0xD8AF0C")]
		public FingerTipPokeTool()
		{
		}
	}
	[Token(Token = "0x20002E8")]
	public class FingerTipPokeToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x40012E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _sphereMeshRenderer;

		[Token(Token = "0x1700017E")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x600119B")]
			[Address(RVA = "0xD8B5A8", Offset = "0xD8B5A8", VA = "0xD8B5A8", Slot = "4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600119C")]
			[Address(RVA = "0xD8B5B0", Offset = "0xD8B5B0", VA = "0xD8B5B0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700017F")]
		public bool EnableState
		{
			[Token(Token = "0x600119D")]
			[Address(RVA = "0xD8B5B8", Offset = "0xD8B5B8", VA = "0xD8B5B8", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600119E")]
			[Address(RVA = "0xD8B5D4", Offset = "0xD8B5D4", VA = "0xD8B5D4", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x17000180")]
		public bool ToolActivateState
		{
			[Token(Token = "0x600119F")]
			[Address(RVA = "0xD8B5F4", Offset = "0xD8B5F4", VA = "0xD8B5F4", Slot = "8")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011A0")]
			[Address(RVA = "0xD8B5FC", Offset = "0xD8B5FC", VA = "0xD8B5FC", Slot = "9")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000181")]
		public float SphereRadius
		{
			[Token(Token = "0x60011A1")]
			[Address(RVA = "0xD8B608", Offset = "0xD8B608", VA = "0xD8B608")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60011A2")]
			[Address(RVA = "0xD8B610", Offset = "0xD8B610", VA = "0xD8B610")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x60011A3")]
		[Address(RVA = "0xD8B618", Offset = "0xD8B618", VA = "0xD8B618")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011A4")]
		[Address(RVA = "0xD8B654", Offset = "0xD8B654", VA = "0xD8B654", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x60011A5")]
		[Address(RVA = "0xD8B658", Offset = "0xD8B658", VA = "0xD8B658")]
		public FingerTipPokeToolView()
		{
		}
	}
	[Token(Token = "0x20002E9")]
	[Flags]
	public enum InteractableToolTags
	{
		[Token(Token = "0x40012EC")]
		None = 0,
		[Token(Token = "0x40012ED")]
		Ray = 1,
		[Token(Token = "0x40012EE")]
		Poke = 4,
		[Token(Token = "0x40012EF")]
		All = -1
	}
	[Token(Token = "0x20002EA")]
	public enum ToolInputState
	{
		[Token(Token = "0x40012F1")]
		Inactive,
		[Token(Token = "0x40012F2")]
		PrimaryInputDown,
		[Token(Token = "0x40012F3")]
		PrimaryInputDownStay,
		[Token(Token = "0x40012F4")]
		PrimaryInputUp
	}
	[Token(Token = "0x20002EB")]
	public class InteractableCollisionInfo
	{
		[Token(Token = "0x40012F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ColliderZone InteractableCollider;

		[Token(Token = "0x40012F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableCollisionDepth CollisionDepth;

		[Token(Token = "0x40012F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractableTool CollidingTool;

		[Token(Token = "0x60011A6")]
		[Address(RVA = "0xD8AEB0", Offset = "0xD8AEB0", VA = "0xD8AEB0")]
		public InteractableCollisionInfo(ColliderZone collider, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}
	}
	[Token(Token = "0x20002EC")]
	public abstract class InteractableTool : MonoBehaviour
	{
		[Token(Token = "0x40012FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<InteractableCollisionInfo> _currentIntersectingObjects;

		[Token(Token = "0x40012FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Interactable> _addedInteractables;

		[Token(Token = "0x40012FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Interactable> _removedInteractables;

		[Token(Token = "0x40012FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Interactable> _remainingInteractables;

		[Token(Token = "0x40012FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Interactable, InteractableCollisionInfo> _currInteractableToCollisionInfos;

		[Token(Token = "0x4001300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<Interactable, InteractableCollisionInfo> _prevInteractableToCollisionInfos;

		[Token(Token = "0x17000182")]
		public Transform ToolTransform
		{
			[Token(Token = "0x60011A7")]
			[Address(RVA = "0xD87364", Offset = "0xD87364", VA = "0xD87364")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000183")]
		public bool IsRightHandedTool
		{
			[Token(Token = "0x60011A8")]
			[Address(RVA = "0xD8B660", Offset = "0xD8B660", VA = "0xD8B660")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011A9")]
			[Address(RVA = "0xD8B668", Offset = "0xD8B668", VA = "0xD8B668")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000184")]
		public abstract InteractableToolTags ToolTags
		{
			[Token(Token = "0x60011AA")]
			get;
		}

		[Token(Token = "0x17000185")]
		public abstract ToolInputState ToolInputState
		{
			[Token(Token = "0x60011AB")]
			get;
		}

		[Token(Token = "0x17000186")]
		public abstract bool IsFarFieldTool
		{
			[Token(Token = "0x60011AC")]
			get;
		}

		[Token(Token = "0x17000187")]
		public Vector3 Velocity
		{
			[Token(Token = "0x60011AD")]
			[Address(RVA = "0xD8B674", Offset = "0xD8B674", VA = "0xD8B674")]
			[CompilerGenerated]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60011AE")]
			[Address(RVA = "0xD8B680", Offset = "0xD8B680", VA = "0xD8B680")]
			[CompilerGenerated]
			protected set
			{
			}
		}

		[Token(Token = "0x17000188")]
		public Vector3 InteractionPosition
		{
			[Token(Token = "0x60011AF")]
			[Address(RVA = "0xD8B68C", Offset = "0xD8B68C", VA = "0xD8B68C")]
			[CompilerGenerated]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60011B0")]
			[Address(RVA = "0xD8B698", Offset = "0xD8B698", VA = "0xD8B698")]
			[CompilerGenerated]
			protected set
			{
			}
		}

		[Token(Token = "0x17000189")]
		public abstract bool EnableState
		{
			[Token(Token = "0x60011B5")]
			get;
			[Token(Token = "0x60011B6")]
			set;
		}

		[Token(Token = "0x60011B1")]
		[Address(RVA = "0xD8B6A4", Offset = "0xD8B6A4", VA = "0xD8B6A4")]
		public List<InteractableCollisionInfo> GetCurrentIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x60011B2")]
		public abstract List<InteractableCollisionInfo> GetNextIntersectingObjects();

		[Token(Token = "0x60011B3")]
		public abstract void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone);

		[Token(Token = "0x60011B4")]
		public abstract void DeFocus();

		[Token(Token = "0x60011B7")]
		public abstract void Initialize();

		[Token(Token = "0x60011B8")]
		[Address(RVA = "0xD8A2F0", Offset = "0xD8A2F0", VA = "0xD8A2F0")]
		public KeyValuePair<Interactable, InteractableCollisionInfo> GetFirstCurrentCollisionInfo()
		{
			return default(KeyValuePair<Interactable, InteractableCollisionInfo>);
		}

		[Token(Token = "0x60011B9")]
		[Address(RVA = "0xD8A338", Offset = "0xD8A338", VA = "0xD8A338")]
		public void ClearAllCurrentCollisionInfos()
		{
		}

		[Token(Token = "0x60011BA")]
		[Address(RVA = "0xD8B6AC", Offset = "0xD8B6AC", VA = "0xD8B6AC", Slot = "13")]
		public virtual void UpdateCurrentCollisionsBasedOnDepth()
		{
		}

		[Token(Token = "0x60011BB")]
		[Address(RVA = "0xD8B974", Offset = "0xD8B974", VA = "0xD8B974", Slot = "14")]
		public virtual void UpdateLatestCollisionData()
		{
		}

		[Token(Token = "0x60011BC")]
		[Address(RVA = "0xD8AF20", Offset = "0xD8AF20", VA = "0xD8AF20")]
		protected InteractableTool()
		{
		}
	}
	[Token(Token = "0x20002ED")]
	public interface InteractableToolView
	{
		[Token(Token = "0x1700018A")]
		InteractableTool InteractableTool
		{
			[Token(Token = "0x60011BD")]
			get;
		}

		[Token(Token = "0x1700018B")]
		bool EnableState
		{
			[Token(Token = "0x60011BF")]
			get;
			[Token(Token = "0x60011C0")]
			set;
		}

		[Token(Token = "0x1700018C")]
		bool ToolActivateState
		{
			[Token(Token = "0x60011C1")]
			get;
			[Token(Token = "0x60011C2")]
			set;
		}

		[Token(Token = "0x60011BE")]
		void SetFocusedInteractable(Interactable interactable);
	}
	[Token(Token = "0x20002EE")]
	public class PinchStateModule
	{
		[Token(Token = "0x20002EF")]
		private enum PinchState
		{
			[Token(Token = "0x4001305")]
			None,
			[Token(Token = "0x4001306")]
			PinchDown,
			[Token(Token = "0x4001307")]
			PinchStay,
			[Token(Token = "0x4001308")]
			PinchUp
		}

		[Token(Token = "0x4001301")]
		private const float PINCH_STRENGTH_THRESHOLD = 1f;

		[Token(Token = "0x4001302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PinchState _currPinchState;

		[Token(Token = "0x4001303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Interactable _firstFocusedInteractable;

		[Token(Token = "0x1700018D")]
		public bool PinchUpAndDownOnFocusedObject
		{
			[Token(Token = "0x60011C3")]
			[Address(RVA = "0xD8C210", Offset = "0xD8C210", VA = "0xD8C210")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700018E")]
		public bool PinchSteadyOnFocusedObject
		{
			[Token(Token = "0x60011C4")]
			[Address(RVA = "0xD8C28C", Offset = "0xD8C28C", VA = "0xD8C28C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700018F")]
		public bool PinchDownOnFocusedObject
		{
			[Token(Token = "0x60011C5")]
			[Address(RVA = "0xD8C308", Offset = "0xD8C308", VA = "0xD8C308")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60011C6")]
		[Address(RVA = "0xD8C384", Offset = "0xD8C384", VA = "0xD8C384")]
		public PinchStateModule()
		{
		}

		[Token(Token = "0x60011C7")]
		[Address(RVA = "0xD8C3AC", Offset = "0xD8C3AC", VA = "0xD8C3AC")]
		public void UpdateState(OVRHand hand, Interactable currFocusedInteractable)
		{
		}
	}
	[Token(Token = "0x20002F0")]
	public class RayTool : InteractableTool
	{
		[Token(Token = "0x4001309")]
		private const float MINIMUM_RAY_CAST_DISTANCE = 0.8f;

		[Token(Token = "0x400130A")]
		private const float COLLIDER_RADIUS = 0.01f;

		[Token(Token = "0x400130B")]
		private const int NUM_MAX_PRIMARY_HITS = 10;

		[Token(Token = "0x400130C")]
		private const int NUM_MAX_SECONDARY_HITS = 25;

		[Token(Token = "0x400130D")]
		private const int NUM_COLLIDERS_TO_TEST = 20;

		[Token(Token = "0x400130E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private RayToolView _rayToolView;

		[Token(Token = "0x400130F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[Range(0f, 45f)]
		[SerializeField]
		private float _coneAngleDegrees;

		[Token(Token = "0x4001310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float _farFieldMaxDistance;

		[Token(Token = "0x4001311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PinchStateModule _pinchStateModule;

		[Token(Token = "0x4001312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Interactable _focusedInteractable;

		[Token(Token = "0x4001313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Collider[] _collidersOverlapped;

		[Token(Token = "0x4001314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Interactable _currInteractableCastedAgainst;

		[Token(Token = "0x4001315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float _coneAngleReleaseDegrees;

		[Token(Token = "0x4001316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RaycastHit[] _primaryHits;

		[Token(Token = "0x4001317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Collider[] _secondaryOverlapResults;

		[Token(Token = "0x4001318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _initialized;

		[Token(Token = "0x17000190")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x60011C8")]
			[Address(RVA = "0xD8C524", Offset = "0xD8C524", VA = "0xD8C524", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x17000191")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x60011C9")]
			[Address(RVA = "0xD8C52C", Offset = "0xD8C52C", VA = "0xD8C52C", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x17000192")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x60011CA")]
			[Address(RVA = "0xD8C588", Offset = "0xD8C588", VA = "0xD8C588", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000193")]
		public override bool EnableState
		{
			[Token(Token = "0x60011CB")]
			[Address(RVA = "0xD8C590", Offset = "0xD8C590", VA = "0xD8C590", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011CC")]
			[Address(RVA = "0xD8C5D0", Offset = "0xD8C5D0", VA = "0xD8C5D0", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x60011CD")]
		[Address(RVA = "0xD8C640", Offset = "0xD8C640", VA = "0xD8C640", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x60011CE")]
		[Address(RVA = "0xD8C694", Offset = "0xD8C694", VA = "0xD8C694")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60011CF")]
		[Address(RVA = "0xD8C720", Offset = "0xD8C720", VA = "0xD8C720")]
		private void Update()
		{
		}

		[Token(Token = "0x60011D0")]
		[Address(RVA = "0xD8C9C4", Offset = "0xD8C9C4", VA = "0xD8C9C4")]
		private Vector3 GetRayCastOrigin()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60011D1")]
		[Address(RVA = "0xD8CA40", Offset = "0xD8CA40", VA = "0xD8CA40", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x60011D2")]
		[Address(RVA = "0xD8CE34", Offset = "0xD8CE34", VA = "0xD8CE34")]
		private bool HasRayReleasedInteractable(Interactable focusedInteractable)
		{
			return default(bool);
		}

		[Token(Token = "0x60011D3")]
		[Address(RVA = "0xD8CFD0", Offset = "0xD8CFD0", VA = "0xD8CFD0")]
		private Interactable FindTargetInteractable()
		{
			return null;
		}

		[Token(Token = "0x60011D4")]
		[Address(RVA = "0xD8D0E8", Offset = "0xD8D0E8", VA = "0xD8D0E8")]
		private Interactable FindPrimaryRaycastHit(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x60011D5")]
		[Address(RVA = "0xD8D40C", Offset = "0xD8D40C", VA = "0xD8D40C")]
		private Interactable FindInteractableViaConeTest(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x60011D6")]
		[Address(RVA = "0xD8D788", Offset = "0xD8D788", VA = "0xD8D788", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x60011D7")]
		[Address(RVA = "0xD8D860", Offset = "0xD8D860", VA = "0xD8D860", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x60011D8")]
		[Address(RVA = "0xD8D890", Offset = "0xD8D890", VA = "0xD8D890")]
		public RayTool()
		{
		}
	}
	[Token(Token = "0x20002F1")]
	public class RayToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x4001319")]
		private const int NUM_RAY_LINE_POSITIONS = 25;

		[Token(Token = "0x400131A")]
		private const float DEFAULT_RAY_CAST_DISTANCE = 3f;

		[Token(Token = "0x400131B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _targetTransform;

		[Token(Token = "0x400131C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x400131D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _toolActivateState;

		[Token(Token = "0x400131E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _focusedTransform;

		[Token(Token = "0x400131F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] linePositions;

		[Token(Token = "0x4001320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Gradient _oldColorGradient;

		[Token(Token = "0x4001321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Gradient _highLightColorGradient;

		[Token(Token = "0x17000194")]
		public bool EnableState
		{
			[Token(Token = "0x60011D9")]
			[Address(RVA = "0xD8C5B4", Offset = "0xD8C5B4", VA = "0xD8C5B4", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011DA")]
			[Address(RVA = "0xD8C5EC", Offset = "0xD8C5EC", VA = "0xD8C5EC", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x17000195")]
		public bool ToolActivateState
		{
			[Token(Token = "0x60011DB")]
			[Address(RVA = "0xD8D9A4", Offset = "0xD8D9A4", VA = "0xD8D9A4", Slot = "8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011DC")]
			[Address(RVA = "0xD8C988", Offset = "0xD8C988", VA = "0xD8C988", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x17000196")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x60011DE")]
			[Address(RVA = "0xD8DBCC", Offset = "0xD8DBCC", VA = "0xD8DBCC", Slot = "4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60011DF")]
			[Address(RVA = "0xD8DBD4", Offset = "0xD8DBD4", VA = "0xD8DBD4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60011DD")]
		[Address(RVA = "0xD8D9AC", Offset = "0xD8D9AC", VA = "0xD8D9AC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011E0")]
		[Address(RVA = "0xD8D7C0", Offset = "0xD8D7C0", VA = "0xD8D7C0", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x60011E1")]
		[Address(RVA = "0xD8DBDC", Offset = "0xD8DBDC", VA = "0xD8DBDC")]
		private void Update()
		{
		}

		[Token(Token = "0x60011E2")]
		[Address(RVA = "0xD8DE88", Offset = "0xD8DE88", VA = "0xD8DE88")]
		public static Vector3 GetPointOnBezierCurve(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60011E3")]
		[Address(RVA = "0xD8DF30", Offset = "0xD8DF30", VA = "0xD8DF30")]
		public RayToolView()
		{
		}
	}
	[Token(Token = "0x20002F2")]
	public class DistanceGrabberSample : MonoBehaviour
	{
		[Token(Token = "0x4001323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool useSpherecast;

		[Token(Token = "0x4001324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool allowGrabThroughWalls;

		[Token(Token = "0x4001325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DistanceGrabber[] m_grabbers;

		[Token(Token = "0x17000197")]
		public bool UseSpherecast
		{
			[Token(Token = "0x60011E4")]
			[Address(RVA = "0xD8DF94", Offset = "0xD8DF94", VA = "0xD8DF94")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011E5")]
			[Address(RVA = "0xD8DF9C", Offset = "0xD8DF9C", VA = "0xD8DF9C")]
			set
			{
			}
		}

		[Token(Token = "0x17000198")]
		public bool AllowGrabThroughWalls
		{
			[Token(Token = "0x60011E6")]
			[Address(RVA = "0xD8E018", Offset = "0xD8E018", VA = "0xD8E018")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011E7")]
			[Address(RVA = "0xD8E020", Offset = "0xD8E020", VA = "0xD8E020")]
			set
			{
			}
		}

		[Token(Token = "0x60011E8")]
		[Address(RVA = "0xD8E07C", Offset = "0xD8E07C", VA = "0xD8E07C")]
		private void Start()
		{
		}

		[Token(Token = "0x60011E9")]
		[Address(RVA = "0xD8E31C", Offset = "0xD8E31C", VA = "0xD8E31C")]
		public void ToggleSphereCasting(Toggle t)
		{
		}

		[Token(Token = "0x60011EA")]
		[Address(RVA = "0xD8E32C", Offset = "0xD8E32C", VA = "0xD8E32C")]
		public void ToggleGrabThroughWalls(Toggle t)
		{
		}

		[Token(Token = "0x60011EB")]
		[Address(RVA = "0xD8E33C", Offset = "0xD8E33C", VA = "0xD8E33C")]
		public DistanceGrabberSample()
		{
		}
	}
	[Token(Token = "0x20002F3")]
	public class ControllerBoxController : MonoBehaviour
	{
		[Token(Token = "0x4001326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TrainLocomotive _locomotive;

		[Token(Token = "0x4001327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CowController _cowController;

		[Token(Token = "0x60011EC")]
		[Address(RVA = "0xD8E344", Offset = "0xD8E344", VA = "0xD8E344")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011ED")]
		[Address(RVA = "0xD8E348", Offset = "0xD8E348", VA = "0xD8E348")]
		public void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60011EE")]
		[Address(RVA = "0xD8E3D4", Offset = "0xD8E3D4", VA = "0xD8E3D4")]
		public void DecreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60011EF")]
		[Address(RVA = "0xD8E464", Offset = "0xD8E464", VA = "0xD8E464")]
		public void IncreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60011F0")]
		[Address(RVA = "0xD8E4F4", Offset = "0xD8E4F4", VA = "0xD8E4F4")]
		public void SmokeButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60011F1")]
		[Address(RVA = "0xD8E5A0", Offset = "0xD8E5A0", VA = "0xD8E5A0")]
		public void WhistleButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60011F2")]
		[Address(RVA = "0xD8E67C", Offset = "0xD8E67C", VA = "0xD8E67C")]
		public void ReverseButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60011F3")]
		[Address(RVA = "0xD8E6C0", Offset = "0xD8E6C0", VA = "0xD8E6C0")]
		public void SwitchVisualization(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60011F4")]
		[Address(RVA = "0xD8E720", Offset = "0xD8E720", VA = "0xD8E720")]
		public void GoMoo(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60011F5")]
		[Address(RVA = "0xD8E780", Offset = "0xD8E780", VA = "0xD8E780")]
		public ControllerBoxController()
		{
		}
	}
	[Token(Token = "0x20002F4")]
	public class CowController : MonoBehaviour
	{
		[Token(Token = "0x4001328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animation _cowAnimation;

		[Token(Token = "0x4001329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource _mooCowAudioSource;

		[Token(Token = "0x60011F6")]
		[Address(RVA = "0xD8E788", Offset = "0xD8E788", VA = "0xD8E788")]
		private void Start()
		{
		}

		[Token(Token = "0x60011F7")]
		[Address(RVA = "0xD8E78C", Offset = "0xD8E78C", VA = "0xD8E78C")]
		public void PlayMooSound()
		{
		}

		[Token(Token = "0x60011F8")]
		[Address(RVA = "0xD8E750", Offset = "0xD8E750", VA = "0xD8E750")]
		public void GoMooCowGo()
		{
		}

		[Token(Token = "0x60011F9")]
		[Address(RVA = "0xD8E7C0", Offset = "0xD8E7C0", VA = "0xD8E7C0")]
		public CowController()
		{
		}
	}
	[Token(Token = "0x20002F5")]
	public class PanelHMDFollower : MonoBehaviour
	{
		[Token(Token = "0x20002F6")]
		[CompilerGenerated]
		private sealed class <LerpToHMD>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001334")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001335")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001336")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PanelHMDFollower <>4__this;

			[Token(Token = "0x4001337")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <newPanelPosition>5__2;

			[Token(Token = "0x4001338")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <startTime>5__3;

			[Token(Token = "0x4001339")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <endTime>5__4;

			[Token(Token = "0x17000199")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001202")]
				[Address(RVA = "0xD8EE40", Offset = "0xD8EE40", VA = "0xD8EE40", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700019A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001204")]
				[Address(RVA = "0xD8EE88", Offset = "0xD8EE88", VA = "0xD8EE88", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60011FF")]
			[Address(RVA = "0xD8EBB8", Offset = "0xD8EBB8", VA = "0xD8EBB8")]
			[DebuggerHidden]
			public <LerpToHMD>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6001200")]
			[Address(RVA = "0xD8EC80", Offset = "0xD8EC80", VA = "0xD8EC80", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001201")]
			[Address(RVA = "0xD8EC84", Offset = "0xD8EC84", VA = "0xD8EC84", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001203")]
			[Address(RVA = "0xD8EE48", Offset = "0xD8EE48", VA = "0xD8EE48", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400132A")]
		private const float TOTAL_DURATION = 3f;

		[Token(Token = "0x400132B")]
		private const float HMD_MOVEMENT_THRESHOLD = 0.3f;

		[Token(Token = "0x400132C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _maxDistance;

		[Token(Token = "0x400132D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _minDistance;

		[Token(Token = "0x400132E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _minZDistance;

		[Token(Token = "0x400132F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OVRCameraRig _cameraRig;

		[Token(Token = "0x4001330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _panelInitialPosition;

		[Token(Token = "0x4001331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _coroutine;

		[Token(Token = "0x4001332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 _prevPos;

		[Token(Token = "0x4001333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 _lastMovedToPos;

		[Token(Token = "0x60011FA")]
		[Address(RVA = "0xD8E7C8", Offset = "0xD8E7C8", VA = "0xD8E7C8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011FB")]
		[Address(RVA = "0xD8E868", Offset = "0xD8E868", VA = "0xD8E868")]
		private void Update()
		{
		}

		[Token(Token = "0x60011FC")]
		[Address(RVA = "0xD8EB78", Offset = "0xD8EB78", VA = "0xD8EB78")]
		private Vector3 CalculateIdealAnchorPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60011FD")]
		[Address(RVA = "0xD8EB04", Offset = "0xD8EB04", VA = "0xD8EB04")]
		[IteratorStateMachine(typeof(<LerpToHMD>d__13))]
		private IEnumerator LerpToHMD()
		{
			return null;
		}

		[Token(Token = "0x60011FE")]
		[Address(RVA = "0xD8EBE0", Offset = "0xD8EBE0", VA = "0xD8EBE0")]
		public PanelHMDFollower()
		{
		}
	}
	[Token(Token = "0x20002F7")]
	public class SelectionCylinder : MonoBehaviour
	{
		[Token(Token = "0x20002F8")]
		public enum SelectionState
		{
			[Token(Token = "0x4001341")]
			Off,
			[Token(Token = "0x4001342")]
			Selected,
			[Token(Token = "0x4001343")]
			Highlighted
		}

		[Token(Token = "0x400133A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _selectionMeshRenderer;

		[Token(Token = "0x400133B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _colorId;

		[Token(Token = "0x400133C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material[] _selectionMaterials;

		[Token(Token = "0x400133D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color[] _defaultSelectionColors;

		[Token(Token = "0x400133E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color[] _highlightColors;

		[Token(Token = "0x400133F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SelectionState _currSelectionState;

		[Token(Token = "0x1700019B")]
		public SelectionState CurrSelectionState
		{
			[Token(Token = "0x6001205")]
			[Address(RVA = "0xD8EE90", Offset = "0xD8EE90", VA = "0xD8EE90")]
			get
			{
				return default(SelectionState);
			}
			[Token(Token = "0x6001206")]
			[Address(RVA = "0xD8EE98", Offset = "0xD8EE98", VA = "0xD8EE98")]
			set
			{
			}
		}

		[Token(Token = "0x6001207")]
		[Address(RVA = "0xD8EFEC", Offset = "0xD8EFEC", VA = "0xD8EFEC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001208")]
		[Address(RVA = "0xD8F1B0", Offset = "0xD8F1B0", VA = "0xD8F1B0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001209")]
		[Address(RVA = "0xD8EF0C", Offset = "0xD8EF0C", VA = "0xD8EF0C")]
		private void AffectSelectionColor(Color[] newColors)
		{
		}

		[Token(Token = "0x600120A")]
		[Address(RVA = "0xD8F278", Offset = "0xD8F278", VA = "0xD8F278")]
		public SelectionCylinder()
		{
		}
	}
	[Token(Token = "0x20002F9")]
	public class TrackSegment : MonoBehaviour
	{
		[Token(Token = "0x20002FA")]
		public enum SegmentType
		{
			[Token(Token = "0x4001352")]
			Straight,
			[Token(Token = "0x4001353")]
			LeftTurn,
			[Token(Token = "0x4001354")]
			RightTurn,
			[Token(Token = "0x4001355")]
			Switch
		}

		[Token(Token = "0x4001344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SegmentType _segmentType;

		[Token(Token = "0x4001345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshFilter _straight;

		[Token(Token = "0x4001346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshFilter _leftTurn;

		[Token(Token = "0x4001347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshFilter _rightTurn;

		[Token(Token = "0x4001348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _gridSize;

		[Token(Token = "0x4001349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _subDivCount;

		[Token(Token = "0x400134A")]
		private const float _originalGridSize = 0.8f;

		[Token(Token = "0x400134B")]
		private const float _trackWidth = 0.15f;

		[Token(Token = "0x400134C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject _mesh;

		[Token(Token = "0x400134E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Pose _p1;

		[Token(Token = "0x400134F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Pose _p2;

		[Token(Token = "0x4001350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Pose _endPose;

		[Token(Token = "0x1700019C")]
		public float StartDistance
		{
			[Token(Token = "0x600120C")]
			[Address(RVA = "0xD8F2E8", Offset = "0xD8F2E8", VA = "0xD8F2E8")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600120D")]
			[Address(RVA = "0xD8F2F0", Offset = "0xD8F2F0", VA = "0xD8F2F0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700019D")]
		public float GridSize
		{
			[Token(Token = "0x600120E")]
			[Address(RVA = "0xD8F2F8", Offset = "0xD8F2F8", VA = "0xD8F2F8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600120F")]
			[Address(RVA = "0xD8F300", Offset = "0xD8F300", VA = "0xD8F300")]
			private set
			{
			}
		}

		[Token(Token = "0x1700019E")]
		public int SubDivCount
		{
			[Token(Token = "0x6001210")]
			[Address(RVA = "0xD8F308", Offset = "0xD8F308", VA = "0xD8F308")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001211")]
			[Address(RVA = "0xD8F310", Offset = "0xD8F310", VA = "0xD8F310")]
			set
			{
			}
		}

		[Token(Token = "0x1700019F")]
		public SegmentType Type
		{
			[Token(Token = "0x6001212")]
			[Address(RVA = "0xD8F318", Offset = "0xD8F318", VA = "0xD8F318")]
			get
			{
				return default(SegmentType);
			}
		}

		[Token(Token = "0x170001A0")]
		public Pose EndPose
		{
			[Token(Token = "0x6001213")]
			[Address(RVA = "0xD8F320", Offset = "0xD8F320", VA = "0xD8F320")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A1")]
		public float Radius
		{
			[Token(Token = "0x6001214")]
			[Address(RVA = "0xD8F6F4", Offset = "0xD8F6F4", VA = "0xD8F6F4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001A2")]
		public float SegmentLength
		{
			[Token(Token = "0x6001216")]
			[Address(RVA = "0xD8F37C", Offset = "0xD8F37C", VA = "0xD8F37C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001215")]
		[Address(RVA = "0xD8F704", Offset = "0xD8F704", VA = "0xD8F704")]
		public float setGridSize(float size)
		{
			return default(float);
		}

		[Token(Token = "0x6001217")]
		[Address(RVA = "0xD8F71C", Offset = "0xD8F71C", VA = "0xD8F71C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001218")]
		[Address(RVA = "0xD8F3BC", Offset = "0xD8F3BC", VA = "0xD8F3BC")]
		public void UpdatePose(float distanceIntoSegment, Pose pose)
		{
		}

		[Token(Token = "0x6001219")]
		[Address(RVA = "0xD8F720", Offset = "0xD8F720", VA = "0xD8F720")]
		private void Update()
		{
		}

		[Token(Token = "0x600121A")]
		[Address(RVA = "0xD8F724", Offset = "0xD8F724", VA = "0xD8F724")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600121B")]
		[Address(RVA = "0xD8F780", Offset = "0xD8F780", VA = "0xD8F780")]
		private void DrawDebugLines()
		{
		}

		[Token(Token = "0x600121C")]
		[Address(RVA = "0xD900B4", Offset = "0xD900B4", VA = "0xD900B4")]
		public void RegenerateTrackAndMesh()
		{
		}

		[Token(Token = "0x600121D")]
		[Address(RVA = "0xD90338", Offset = "0xD90338", VA = "0xD90338")]
		public TrackSegment()
		{
		}
	}
	[Token(Token = "0x20002FB")]
	public class TrainButtonVisualController : MonoBehaviour
	{
		[Token(Token = "0x20002FC")]
		[CompilerGenerated]
		private sealed class <ResetPosition>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001367")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001368")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001369")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainButtonVisualController <>4__this;

			[Token(Token = "0x400136A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <startTime>5__2;

			[Token(Token = "0x400136B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <endTime>5__3;

			[Token(Token = "0x170001A3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600122C")]
				[Address(RVA = "0xD90E5C", Offset = "0xD90E5C", VA = "0xD90E5C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001A4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600122E")]
				[Address(RVA = "0xD90EA4", Offset = "0xD90EA4", VA = "0xD90EA4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001229")]
			[Address(RVA = "0xD90C90", Offset = "0xD90C90", VA = "0xD90C90")]
			[DebuggerHidden]
			public <ResetPosition>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x600122A")]
			[Address(RVA = "0xD90CE0", Offset = "0xD90CE0", VA = "0xD90CE0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600122B")]
			[Address(RVA = "0xD90CE4", Offset = "0xD90CE4", VA = "0xD90CE4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600122D")]
			[Address(RVA = "0xD90E64", Offset = "0xD90E64", VA = "0xD90E64", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001356")]
		private const float LERP_TO_OLD_POS_DURATION = 1f;

		[Token(Token = "0x4001357")]
		private const float LOCAL_SIZE_HALVED = 0.5f;

		[Token(Token = "0x4001358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x4001359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshRenderer _glowRenderer;

		[Token(Token = "0x400135A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ButtonController _buttonController;

		[Token(Token = "0x400135B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color _buttonContactColor;

		[Token(Token = "0x400135C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color _buttonActionColor;

		[Token(Token = "0x400135D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x400135E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioClip _actionSoundEffect;

		[Token(Token = "0x400135F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform _buttonContactTransform;

		[Token(Token = "0x4001360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float _contactMaxDisplacementDistance;

		[Token(Token = "0x4001361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material _buttonMaterial;

		[Token(Token = "0x4001362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Color _buttonDefaultColor;

		[Token(Token = "0x4001363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _materialColorId;

		[Token(Token = "0x4001364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool _buttonInContactOrActionStates;

		[Token(Token = "0x4001365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Coroutine _lerpToOldPositionCr;

		[Token(Token = "0x4001366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 _oldPosition;

		[Token(Token = "0x600121E")]
		[Address(RVA = "0xD90498", Offset = "0xD90498", VA = "0xD90498")]
		private void Awake()
		{
		}

		[Token(Token = "0x600121F")]
		[Address(RVA = "0xD90550", Offset = "0xD90550", VA = "0xD90550")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001220")]
		[Address(RVA = "0xD905E0", Offset = "0xD905E0", VA = "0xD905E0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001221")]
		[Address(RVA = "0xD90728", Offset = "0xD90728", VA = "0xD90728")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001222")]
		[Address(RVA = "0xD908B4", Offset = "0xD908B4", VA = "0xD908B4")]
		private void ActionOrInContactZoneStayEvent(ColliderZoneArgs collisionArgs)
		{
		}

		[Token(Token = "0x6001223")]
		[Address(RVA = "0xD909C4", Offset = "0xD909C4", VA = "0xD909C4")]
		private void InteractableStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001224")]
		[Address(RVA = "0xD90BC8", Offset = "0xD90BC8", VA = "0xD90BC8")]
		private void PlaySound(AudioClip clip)
		{
		}

		[Token(Token = "0x6001225")]
		[Address(RVA = "0xD90AD4", Offset = "0xD90AD4", VA = "0xD90AD4")]
		private void StopResetLerping()
		{
		}

		[Token(Token = "0x6001226")]
		[Address(RVA = "0xD90AE8", Offset = "0xD90AE8", VA = "0xD90AE8")]
		private void LerpToOldPosition()
		{
		}

		[Token(Token = "0x6001227")]
		[Address(RVA = "0xD90C1C", Offset = "0xD90C1C", VA = "0xD90C1C")]
		[IteratorStateMachine(typeof(<ResetPosition>d__26))]
		private IEnumerator ResetPosition()
		{
			return null;
		}

		[Token(Token = "0x6001228")]
		[Address(RVA = "0xD90CB8", Offset = "0xD90CB8", VA = "0xD90CB8")]
		public TrainButtonVisualController()
		{
		}
	}
	[Token(Token = "0x20002FD")]
	public class TrainCar : TrainCarBase
	{
		[Token(Token = "0x400136C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TrainCarBase _parentLocomotive;

		[Token(Token = "0x400136D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected float _distanceBehindParent;

		[Token(Token = "0x170001A5")]
		public float DistanceBehindParentScaled
		{
			[Token(Token = "0x600122F")]
			[Address(RVA = "0xD90EAC", Offset = "0xD90EAC", VA = "0xD90EAC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001230")]
		[Address(RVA = "0xD90EBC", Offset = "0xD90EBC", VA = "0xD90EBC", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001231")]
		[Address(RVA = "0xD90EC4", Offset = "0xD90EC4", VA = "0xD90EC4", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x6001232")]
		[Address(RVA = "0xD911F4", Offset = "0xD911F4", VA = "0xD911F4")]
		public TrainCar()
		{
		}
	}
	[Token(Token = "0x20002FE")]
	public abstract class TrainCarBase : MonoBehaviour
	{
		[Token(Token = "0x400136E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3 OFFSET;

		[Token(Token = "0x400136F")]
		private const float WHEEL_RADIUS = 0.027f;

		[Token(Token = "0x4001370")]
		private const float TWO_PI = (float)Math.PI * 2f;

		[Token(Token = "0x4001371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Transform _frontWheels;

		[Token(Token = "0x4001372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Transform _rearWheels;

		[Token(Token = "0x4001373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected TrainTrack _trainTrack;

		[Token(Token = "0x4001374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected Transform[] _individualWheels;

		[Token(Token = "0x4001376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected float scale;

		[Token(Token = "0x4001377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Pose _frontPose;

		[Token(Token = "0x4001378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Pose _rearPose;

		[Token(Token = "0x170001A6")]
		public float Distance
		{
			[Token(Token = "0x6001233")]
			[Address(RVA = "0xD912F0", Offset = "0xD912F0", VA = "0xD912F0")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001234")]
			[Address(RVA = "0xD912F8", Offset = "0xD912F8", VA = "0xD912F8")]
			[CompilerGenerated]
			protected set
			{
			}
		}

		[Token(Token = "0x170001A7")]
		public float Scale
		{
			[Token(Token = "0x6001235")]
			[Address(RVA = "0xD91300", Offset = "0xD91300", VA = "0xD91300")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001236")]
			[Address(RVA = "0xD91308", Offset = "0xD91308", VA = "0xD91308")]
			set
			{
			}
		}

		[Token(Token = "0x6001237")]
		[Address(RVA = "0xD90EC0", Offset = "0xD90EC0", VA = "0xD90EC0", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001238")]
		[Address(RVA = "0xD91310", Offset = "0xD91310", VA = "0xD91310")]
		public void UpdatePose(float distance, TrainCarBase train, Pose pose)
		{
		}

		[Token(Token = "0x6001239")]
		[Address(RVA = "0xD90F00", Offset = "0xD90F00", VA = "0xD90F00")]
		protected void UpdateCarPosition()
		{
		}

		[Token(Token = "0x600123A")]
		[Address(RVA = "0xD91110", Offset = "0xD91110", VA = "0xD91110")]
		protected void RotateCarWheels()
		{
		}

		[Token(Token = "0x600123B")]
		public abstract void UpdatePosition();

		[Token(Token = "0x600123C")]
		[Address(RVA = "0xD91254", Offset = "0xD91254", VA = "0xD91254")]
		protected TrainCarBase()
		{
		}
	}
	[Token(Token = "0x20002FF")]
	public class TrainCrossingController : MonoBehaviour
	{
		[Token(Token = "0x2000300")]
		[CompilerGenerated]
		private sealed class <AnimateCrossing>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001383")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001384")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001385")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainCrossingController <>4__this;

			[Token(Token = "0x4001386")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float animationLength;

			[Token(Token = "0x4001387")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <animationEndTime>5__2;

			[Token(Token = "0x4001388")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <lightBlinkDuration>5__3;

			[Token(Token = "0x4001389")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <lightBlinkStartTime>5__4;

			[Token(Token = "0x400138A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <lightBlinkEndTime>5__5;

			[Token(Token = "0x400138B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Material <lightToBlinkOn>5__6;

			[Token(Token = "0x400138C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Material <lightToBlinkOff>5__7;

			[Token(Token = "0x400138D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Color <onColor>5__8;

			[Token(Token = "0x400138E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Color <offColor>5__9;

			[Token(Token = "0x170001A8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600124A")]
				[Address(RVA = "0xD91BE0", Offset = "0xD91BE0", VA = "0xD91BE0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001A9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600124C")]
				[Address(RVA = "0xD91C28", Offset = "0xD91C28", VA = "0xD91C28", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001247")]
			[Address(RVA = "0xD91854", Offset = "0xD91854", VA = "0xD91854")]
			[DebuggerHidden]
			public <AnimateCrossing>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6001248")]
			[Address(RVA = "0xD919C8", Offset = "0xD919C8", VA = "0xD919C8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001249")]
			[Address(RVA = "0xD919CC", Offset = "0xD919CC", VA = "0xD919CC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600124B")]
			[Address(RVA = "0xD91BE8", Offset = "0xD91BE8", VA = "0xD91BE8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x400137A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip[] _crossingSounds;

		[Token(Token = "0x400137B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshRenderer _lightSide1Renderer;

		[Token(Token = "0x400137C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshRenderer _lightSide2Renderer;

		[Token(Token = "0x400137D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x400137E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material _lightsSide1Mat;

		[Token(Token = "0x400137F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _lightsSide2Mat;

		[Token(Token = "0x4001380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _colorId;

		[Token(Token = "0x4001381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine _xingAnimationCr;

		[Token(Token = "0x4001382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x600123E")]
		[Address(RVA = "0xD91480", Offset = "0xD91480", VA = "0xD91480")]
		private void Awake()
		{
		}

		[Token(Token = "0x600123F")]
		[Address(RVA = "0xD914DC", Offset = "0xD914DC", VA = "0xD914DC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001240")]
		[Address(RVA = "0xD915B4", Offset = "0xD915B4", VA = "0xD915B4")]
		public void CrossingButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001241")]
		[Address(RVA = "0xD91708", Offset = "0xD91708", VA = "0xD91708")]
		private void Update()
		{
		}

		[Token(Token = "0x6001242")]
		[Address(RVA = "0xD91610", Offset = "0xD91610", VA = "0xD91610")]
		private void ActivateTrainCrossing()
		{
		}

		[Token(Token = "0x6001243")]
		[Address(RVA = "0xD917D0", Offset = "0xD917D0", VA = "0xD917D0")]
		[IteratorStateMachine(typeof(<AnimateCrossing>d__15))]
		private IEnumerator AnimateCrossing(float animationLength)
		{
			return null;
		}

		[Token(Token = "0x6001244")]
		[Address(RVA = "0xD9187C", Offset = "0xD9187C", VA = "0xD9187C")]
		private void AffectMaterials(Material[] materials, Color newColor)
		{
		}

		[Token(Token = "0x6001245")]
		[Address(RVA = "0xD91914", Offset = "0xD91914", VA = "0xD91914")]
		private void ToggleLightObjects(bool enableState)
		{
		}

		[Token(Token = "0x6001246")]
		[Address(RVA = "0xD91970", Offset = "0xD91970", VA = "0xD91970")]
		public TrainCrossingController()
		{
		}
	}
	[Token(Token = "0x2000301")]
	public class TrainLocomotive : TrainCarBase
	{
		[Token(Token = "0x2000302")]
		private enum EngineSoundState
		{
			[Token(Token = "0x40013AD")]
			Start,
			[Token(Token = "0x40013AE")]
			AccelerateOrSetProperSpeed,
			[Token(Token = "0x40013AF")]
			Stop
		}

		[Token(Token = "0x2000303")]
		[CompilerGenerated]
		private sealed class <StartStopTrain>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40013B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool startTrain;

			[Token(Token = "0x40013B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TrainLocomotive <>4__this;

			[Token(Token = "0x40013B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <endSpeed>5__2;

			[Token(Token = "0x40013B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <timePeriodForSpeedChange>5__3;

			[Token(Token = "0x40013B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x40013B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <endTime>5__5;

			[Token(Token = "0x40013B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <startSpeed>5__6;

			[Token(Token = "0x170001AA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600125F")]
				[Address(RVA = "0xD924C0", Offset = "0xD924C0", VA = "0xD924C0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001AB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001261")]
				[Address(RVA = "0xD92508", Offset = "0xD92508", VA = "0xD92508", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600125C")]
			[Address(RVA = "0xD91ED0", Offset = "0xD91ED0", VA = "0xD91ED0")]
			[DebuggerHidden]
			public <StartStopTrain>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x600125D")]
			[Address(RVA = "0xD92298", Offset = "0xD92298", VA = "0xD92298", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600125E")]
			[Address(RVA = "0xD9229C", Offset = "0xD9229C", VA = "0xD9229C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001260")]
			[Address(RVA = "0xD924C8", Offset = "0xD924C8", VA = "0xD924C8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400138F")]
		private const float MIN_SPEED = 0.2f;

		[Token(Token = "0x4001390")]
		private const float MAX_SPEED = 2.7f;

		[Token(Token = "0x4001391")]
		private const float SMOKE_SPEED_MULTIPLIER = 8f;

		[Token(Token = "0x4001392")]
		private const int MAX_PARTICLES_MULTIPLIER = 3;

		[Token(Token = "0x4001393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Range(0.2f, 2.7f)]
		[SerializeField]
		protected float _initialSpeed;

		[Token(Token = "0x4001394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x4001395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _decreaseSpeedButton;

		[Token(Token = "0x4001396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _increaseSpeedButton;

		[Token(Token = "0x4001397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject _smokeButton;

		[Token(Token = "0x4001398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject _whistleButton;

		[Token(Token = "0x4001399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject _reverseButton;

		[Token(Token = "0x400139A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private AudioSource _whistleAudioSource;

		[Token(Token = "0x400139B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private AudioClip _whistleSound;

		[Token(Token = "0x400139C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private AudioSource _engineAudioSource;

		[Token(Token = "0x400139D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private AudioClip[] _accelerationSounds;

		[Token(Token = "0x400139E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private AudioClip[] _decelerationSounds;

		[Token(Token = "0x400139F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private AudioClip _startUpSound;

		[Token(Token = "0x40013A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private AudioSource _smokeStackAudioSource;

		[Token(Token = "0x40013A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private AudioClip _smokeSound;

		[Token(Token = "0x40013A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private ParticleSystem _smoke1;

		[Token(Token = "0x40013A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private ParticleSystem _smoke2;

		[Token(Token = "0x40013A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private TrainCarBase[] _childCars;

		[Token(Token = "0x40013A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool _isMoving;

		[Token(Token = "0x40013A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		private bool _reverse;

		[Token(Token = "0x40013A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float _currentSpeed;

		[Token(Token = "0x40013A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float _speedDiv;

		[Token(Token = "0x40013A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float _standardRateOverTimeMultiplier;

		[Token(Token = "0x40013AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int _standardMaxParticles;

		[Token(Token = "0x40013AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Coroutine _startStopTrainCr;

		[Token(Token = "0x600124D")]
		[Address(RVA = "0xD91C30", Offset = "0xD91C30", VA = "0xD91C30")]
		private void Start()
		{
		}

		[Token(Token = "0x600124E")]
		[Address(RVA = "0xD91D8C", Offset = "0xD91D8C", VA = "0xD91D8C")]
		private void Update()
		{
		}

		[Token(Token = "0x600124F")]
		[Address(RVA = "0xD91D98", Offset = "0xD91D98", VA = "0xD91D98", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x6001250")]
		[Address(RVA = "0xD8E378", Offset = "0xD8E378", VA = "0xD8E378")]
		public void StartStopStateChanged()
		{
		}

		[Token(Token = "0x6001251")]
		[Address(RVA = "0xD91D04", Offset = "0xD91D04", VA = "0xD91D04")]
		[IteratorStateMachine(typeof(<StartStopTrain>d__34))]
		private IEnumerator StartStopTrain(bool startTrain)
		{
			return null;
		}

		[Token(Token = "0x6001252")]
		[Address(RVA = "0xD91EF8", Offset = "0xD91EF8", VA = "0xD91EF8")]
		private float PlayEngineSound(EngineSoundState engineSoundState)
		{
			return default(float);
		}

		[Token(Token = "0x6001253")]
		[Address(RVA = "0xD91E70", Offset = "0xD91E70", VA = "0xD91E70")]
		private void UpdateDistance()
		{
		}

		[Token(Token = "0x6001254")]
		[Address(RVA = "0xD8E404", Offset = "0xD8E404", VA = "0xD8E404")]
		public void DecreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x6001255")]
		[Address(RVA = "0xD8E494", Offset = "0xD8E494", VA = "0xD8E494")]
		public void IncreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x6001256")]
		[Address(RVA = "0xD9210C", Offset = "0xD9210C", VA = "0xD9210C")]
		private void UpdateSmokeEmissionBasedOnSpeed()
		{
		}

		[Token(Token = "0x6001257")]
		[Address(RVA = "0xD92200", Offset = "0xD92200", VA = "0xD92200")]
		private float GetCurrentSmokeEmission()
		{
			return default(float);
		}

		[Token(Token = "0x6001258")]
		[Address(RVA = "0xD8E524", Offset = "0xD8E524", VA = "0xD8E524")]
		public void SmokeButtonStateChanged()
		{
		}

		[Token(Token = "0x6001259")]
		[Address(RVA = "0xD8E5D0", Offset = "0xD8E5D0", VA = "0xD8E5D0")]
		public void WhistleButtonStateChanged()
		{
		}

		[Token(Token = "0x600125A")]
		[Address(RVA = "0xD8E6B0", Offset = "0xD8E6B0", VA = "0xD8E6B0")]
		public void ReverseButtonStateChanged()
		{
		}

		[Token(Token = "0x600125B")]
		[Address(RVA = "0xD9223C", Offset = "0xD9223C", VA = "0xD9223C")]
		public TrainLocomotive()
		{
		}
	}
	[Token(Token = "0x2000304")]
	public class TrainTrack : MonoBehaviour
	{
		[Token(Token = "0x40013B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _gridSize;

		[Token(Token = "0x40013BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int _subDivCount;

		[Token(Token = "0x40013BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _segmentParent;

		[Token(Token = "0x40013BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _trainParent;

		[Token(Token = "0x40013BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _regnerateTrackMeshOnAwake;

		[Token(Token = "0x40013BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _trainLength;

		[Token(Token = "0x40013BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TrackSegment[] _trackSegments;

		[Token(Token = "0x170001AC")]
		public float TrackLength
		{
			[Token(Token = "0x6001262")]
			[Address(RVA = "0xD92510", Offset = "0xD92510", VA = "0xD92510")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001263")]
			[Address(RVA = "0xD92518", Offset = "0xD92518", VA = "0xD92518")]
			private set
			{
			}
		}

		[Token(Token = "0x6001264")]
		[Address(RVA = "0xD92520", Offset = "0xD92520", VA = "0xD92520")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001265")]
		[Address(RVA = "0xD91378", Offset = "0xD91378", VA = "0xD91378")]
		public TrackSegment GetSegment(float distance)
		{
			return null;
		}

		[Token(Token = "0x6001266")]
		[Address(RVA = "0xD92524", Offset = "0xD92524", VA = "0xD92524")]
		public void Regenerate()
		{
		}

		[Token(Token = "0x6001267")]
		[Address(RVA = "0xD9271C", Offset = "0xD9271C", VA = "0xD9271C")]
		private void SetScale(float ratio)
		{
		}

		[Token(Token = "0x6001268")]
		[Address(RVA = "0xD927FC", Offset = "0xD927FC", VA = "0xD927FC")]
		public TrainTrack()
		{
		}
	}
	[Token(Token = "0x2000305")]
	public class Pose
	{
		[Token(Token = "0x40013C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Position;

		[Token(Token = "0x40013C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion Rotation;

		[Token(Token = "0x6001269")]
		[Address(RVA = "0xD90400", Offset = "0xD90400", VA = "0xD90400")]
		public Pose()
		{
		}

		[Token(Token = "0x600126A")]
		[Address(RVA = "0xD92818", Offset = "0xD92818", VA = "0xD92818")]
		public Pose(Vector3 position, Quaternion rotation)
		{
		}
	}
	[Token(Token = "0x2000306")]
	public class WindmillBladesController : MonoBehaviour
	{
		[Token(Token = "0x2000307")]
		[CompilerGenerated]
		private sealed class <LerpToSpeed>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40013CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x40013D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float goalSpeed;

			[Token(Token = "0x40013D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <totalTime>5__2;

			[Token(Token = "0x40013D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startSpeed>5__3;

			[Token(Token = "0x170001AE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001277")]
				[Address(RVA = "0xD92E0C", Offset = "0xD92E0C", VA = "0xD92E0C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001AF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001279")]
				[Address(RVA = "0xD92E54", Offset = "0xD92E54", VA = "0xD92E54", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001274")]
			[Address(RVA = "0xD92AF4", Offset = "0xD92AF4", VA = "0xD92AF4")]
			[DebuggerHidden]
			public <LerpToSpeed>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6001275")]
			[Address(RVA = "0xD92C68", Offset = "0xD92C68", VA = "0xD92C68", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001276")]
			[Address(RVA = "0xD92C6C", Offset = "0xD92C6C", VA = "0xD92C6C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001278")]
			[Address(RVA = "0xD92E14", Offset = "0xD92E14", VA = "0xD92E14", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000308")]
		[CompilerGenerated]
		private sealed class <PlaySoundDelayed>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40013D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x40013D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AudioClip initial;

			[Token(Token = "0x40013D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float timeDelayAfterInitial;

			[Token(Token = "0x40013D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public AudioClip clip;

			[Token(Token = "0x170001B0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600127D")]
				[Address(RVA = "0xD92F30", Offset = "0xD92F30", VA = "0xD92F30", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001B1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600127F")]
				[Address(RVA = "0xD92F78", Offset = "0xD92F78", VA = "0xD92F78", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600127A")]
			[Address(RVA = "0xD92BD0", Offset = "0xD92BD0", VA = "0xD92BD0")]
			[DebuggerHidden]
			public <PlaySoundDelayed>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x600127B")]
			[Address(RVA = "0xD92E5C", Offset = "0xD92E5C", VA = "0xD92E5C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600127C")]
			[Address(RVA = "0xD92E60", Offset = "0xD92E60", VA = "0xD92E60", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600127E")]
			[Address(RVA = "0xD92F38", Offset = "0xD92F38", VA = "0xD92F38", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40013C2")]
		private const float MAX_TIME = 1f;

		[Token(Token = "0x40013C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x40013C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _windMillRotationSound;

		[Token(Token = "0x40013C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _windMillStartSound;

		[Token(Token = "0x40013C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _windMillStopSound;

		[Token(Token = "0x40013C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _currentSpeed;

		[Token(Token = "0x40013C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _lerpSpeedCoroutine;

		[Token(Token = "0x40013CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine _audioChangeCr;

		[Token(Token = "0x40013CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion _originalRotation;

		[Token(Token = "0x40013CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _rotAngle;

		[Token(Token = "0x170001AD")]
		public bool IsMoving
		{
			[Token(Token = "0x600126B")]
			[Address(RVA = "0xD9287C", Offset = "0xD9287C", VA = "0xD9287C")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600126C")]
			[Address(RVA = "0xD92884", Offset = "0xD92884", VA = "0xD92884")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x600126D")]
		[Address(RVA = "0xD92890", Offset = "0xD92890", VA = "0xD92890")]
		private void Start()
		{
		}

		[Token(Token = "0x600126E")]
		[Address(RVA = "0xD928C0", Offset = "0xD928C0", VA = "0xD928C0")]
		private void Update()
		{
		}

		[Token(Token = "0x600126F")]
		[Address(RVA = "0xD92A00", Offset = "0xD92A00", VA = "0xD92A00")]
		public void SetMoveState(bool newMoveState, float goalSpeed)
		{
		}

		[Token(Token = "0x6001270")]
		[Address(RVA = "0xD92A70", Offset = "0xD92A70", VA = "0xD92A70")]
		[IteratorStateMachine(typeof(<LerpToSpeed>d__17))]
		private IEnumerator LerpToSpeed(float goalSpeed)
		{
			return null;
		}

		[Token(Token = "0x6001271")]
		[Address(RVA = "0xD92B1C", Offset = "0xD92B1C", VA = "0xD92B1C")]
		[IteratorStateMachine(typeof(<PlaySoundDelayed>d__18))]
		private IEnumerator PlaySoundDelayed(AudioClip initial, AudioClip clip, float timeDelayAfterInitial)
		{
			return null;
		}

		[Token(Token = "0x6001272")]
		[Address(RVA = "0xD92BF8", Offset = "0xD92BF8", VA = "0xD92BF8")]
		private void PlaySound(AudioClip clip, bool loop = false)
		{
		}

		[Token(Token = "0x6001273")]
		[Address(RVA = "0xD92C60", Offset = "0xD92C60", VA = "0xD92C60")]
		public WindmillBladesController()
		{
		}
	}
	[Token(Token = "0x2000309")]
	public class WindmillController : MonoBehaviour
	{
		[Token(Token = "0x40013D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x40013DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _maxSpeed;

		[Token(Token = "0x40013DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x40013DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WindmillBladesController _bladesRotation;

		[Token(Token = "0x40013DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x6001280")]
		[Address(RVA = "0xD92F80", Offset = "0xD92F80", VA = "0xD92F80")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001281")]
		[Address(RVA = "0xD92FF4", Offset = "0xD92FF4", VA = "0xD92FF4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001282")]
		[Address(RVA = "0xD930BC", Offset = "0xD930BC", VA = "0xD930BC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001283")]
		[Address(RVA = "0xD931CC", Offset = "0xD931CC", VA = "0xD931CC")]
		private void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001284")]
		[Address(RVA = "0xD93248", Offset = "0xD93248", VA = "0xD93248")]
		private void Update()
		{
		}

		[Token(Token = "0x6001285")]
		[Address(RVA = "0xD93310", Offset = "0xD93310", VA = "0xD93310")]
		public WindmillController()
		{
		}
	}
	[Token(Token = "0x200030A")]
	public enum EUiDisplayType
	{
		[Token(Token = "0x40013DF")]
		EUDT_WorldGeoQuad,
		[Token(Token = "0x40013E0")]
		EUDT_OverlayQuad,
		[Token(Token = "0x40013E1")]
		EUDT_None,
		[Token(Token = "0x40013E2")]
		EUDT_MaxDislayTypes
	}
	[Token(Token = "0x200030B")]
	public class OVROverlaySample : MonoBehaviour
	{
		[Token(Token = "0x200030C")]
		[CompilerGenerated]
		private sealed class <WaitforOVROverlay>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40013FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OVROverlaySample <>4__this;

			[Token(Token = "0x170001B2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001299")]
				[Address(RVA = "0xD949A0", Offset = "0xD949A0", VA = "0xD949A0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001B3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600129B")]
				[Address(RVA = "0xD949E8", Offset = "0xD949E8", VA = "0xD949E8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001296")]
			[Address(RVA = "0xD94030", Offset = "0xD94030", VA = "0xD94030")]
			[DebuggerHidden]
			public <WaitforOVROverlay>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x6001297")]
			[Address(RVA = "0xD947A4", Offset = "0xD947A4", VA = "0xD947A4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001298")]
			[Address(RVA = "0xD947A8", Offset = "0xD947A8", VA = "0xD947A8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600129A")]
			[Address(RVA = "0xD949A8", Offset = "0xD949A8", VA = "0xD949A8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40013E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inMenu;

		[Token(Token = "0x40013E4")]
		private const string ovrOverlayID = "OVROverlayID";

		[Token(Token = "0x40013E5")]
		private const string applicationID = "ApplicationID";

		[Token(Token = "0x40013E6")]
		private const string noneID = "NoneID";

		[Token(Token = "0x40013E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Toggle applicationRadioButton;

		[Token(Token = "0x40013E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Toggle noneRadioButton;

		[Token(Token = "0x40013E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Header("App vs Compositor Comparison Settings")]
		public GameObject mainCamera;

		[Token(Token = "0x40013EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject uiCamera;

		[Token(Token = "0x40013EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject uiGeoParent;

		[Token(Token = "0x40013EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject worldspaceGeoParent;

		[Token(Token = "0x40013ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public OVROverlay cameraRenderOverlay;

		[Token(Token = "0x40013EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public OVROverlay renderingLabelOverlay;

		[Token(Token = "0x40013EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Texture applicationLabelTexture;

		[Token(Token = "0x40013F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Texture compositorLabelTexture;

		[Token(Token = "0x40013F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[Header("Level Loading Sim Settings")]
		public GameObject prefabForLevelLoadSim;

		[Token(Token = "0x40013F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public OVROverlay cubemapOverlay;

		[Token(Token = "0x40013F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public OVROverlay loadingTextQuadOverlay;

		[Token(Token = "0x40013F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float distanceFromCamToLoadText;

		[Token(Token = "0x40013F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float cubeSpawnRadius;

		[Token(Token = "0x40013F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float heightBetweenItems;

		[Token(Token = "0x40013F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int numObjectsPerLevel;

		[Token(Token = "0x40013F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int numLevels;

		[Token(Token = "0x40013F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int numLoopsTrigger;

		[Token(Token = "0x40013FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<GameObject> spawnedCubes;

		[Token(Token = "0x6001286")]
		[Address(RVA = "0xD93320", Offset = "0xD93320", VA = "0xD93320")]
		private void Start()
		{
		}

		[Token(Token = "0x6001287")]
		[Address(RVA = "0xD93B60", Offset = "0xD93B60", VA = "0xD93B60")]
		private void Update()
		{
		}

		[Token(Token = "0x6001288")]
		[Address(RVA = "0xD93C88", Offset = "0xD93C88", VA = "0xD93C88")]
		private void ActivateWorldGeo()
		{
		}

		[Token(Token = "0x6001289")]
		[Address(RVA = "0xD93DB8", Offset = "0xD93DB8", VA = "0xD93DB8")]
		private void ActivateOVROverlay()
		{
		}

		[Token(Token = "0x600128A")]
		[Address(RVA = "0xD93EE8", Offset = "0xD93EE8", VA = "0xD93EE8")]
		private void ActivateNone()
		{
		}

		[Token(Token = "0x600128B")]
		[Address(RVA = "0xD93C68", Offset = "0xD93C68", VA = "0xD93C68")]
		private void TriggerLoad()
		{
		}

		[Token(Token = "0x600128C")]
		[Address(RVA = "0xD93FBC", Offset = "0xD93FBC", VA = "0xD93FBC")]
		[IteratorStateMachine(typeof(<WaitforOVROverlay>d__30))]
		private IEnumerator WaitforOVROverlay()
		{
			return null;
		}

		[Token(Token = "0x600128D")]
		[Address(RVA = "0xD94058", Offset = "0xD94058", VA = "0xD94058")]
		private void TriggerUnload()
		{
		}

		[Token(Token = "0x600128E")]
		[Address(RVA = "0xD93790", Offset = "0xD93790", VA = "0xD93790")]
		private void CameraAndRenderTargetSetup()
		{
		}

		[Token(Token = "0x600128F")]
		[Address(RVA = "0xD941A0", Offset = "0xD941A0", VA = "0xD941A0")]
		private void SimulateLevelLoad()
		{
		}

		[Token(Token = "0x6001290")]
		[Address(RVA = "0xD94080", Offset = "0xD94080", VA = "0xD94080")]
		private void ClearObjects()
		{
		}

		[Token(Token = "0x6001291")]
		[Address(RVA = "0xD94528", Offset = "0xD94528", VA = "0xD94528")]
		public void RadioPressed(string radioLabel, string group, Toggle t)
		{
		}

		[Token(Token = "0x6001292")]
		[Address(RVA = "0xD94614", Offset = "0xD94614", VA = "0xD94614")]
		public OVROverlaySample()
		{
		}
	}
}
namespace OVRTouchSample
{
	[Token(Token = "0x200030D")]
	[RequireComponent(typeof(OVRGrabber))]
	public class Hand : MonoBehaviour
	{
		[Token(Token = "0x40013FE")]
		public const string ANIM_LAYER_NAME_POINT = "Point Layer";

		[Token(Token = "0x40013FF")]
		public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

		[Token(Token = "0x4001400")]
		public const string ANIM_PARAM_NAME_FLEX = "Flex";

		[Token(Token = "0x4001401")]
		public const string ANIM_PARAM_NAME_POSE = "Pose";

		[Token(Token = "0x4001402")]
		public const float THRESH_COLLISION_FLEX = 0.9f;

		[Token(Token = "0x4001403")]
		public const float INPUT_RATE_CHANGE = 20f;

		[Token(Token = "0x4001404")]
		public const float COLLIDER_SCALE_MIN = 0.01f;

		[Token(Token = "0x4001405")]
		public const float COLLIDER_SCALE_MAX = 1f;

		[Token(Token = "0x4001406")]
		public const float COLLIDER_SCALE_PER_SECOND = 1f;

		[Token(Token = "0x4001407")]
		public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

		[Token(Token = "0x4001408")]
		public const float THUMB_DEBOUNCE_TIME = 0.15f;

		[Token(Token = "0x4001409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x400140A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x400140B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HandPose m_defaultGrabPose;

		[Token(Token = "0x400140C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider[] m_colliders;

		[Token(Token = "0x400140D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_collisionEnabled;

		[Token(Token = "0x400140E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRGrabber m_grabber;

		[Token(Token = "0x400140F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Renderer> m_showAfterInputFocusAcquired;

		[Token(Token = "0x4001410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_animLayerIndexThumb;

		[Token(Token = "0x4001411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_animLayerIndexPoint;

		[Token(Token = "0x4001412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_animParamIndexFlex;

		[Token(Token = "0x4001413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_animParamIndexPose;

		[Token(Token = "0x4001414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_isPointing;

		[Token(Token = "0x4001415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_isGivingThumbsUp;

		[Token(Token = "0x4001416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_pointBlend;

		[Token(Token = "0x4001417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_thumbsUpBlend;

		[Token(Token = "0x4001418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x4001419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_collisionScaleCurrent;

		[Token(Token = "0x600129C")]
		[Address(RVA = "0xD949F0", Offset = "0xD949F0", VA = "0xD949F0")]
		private void Awake()
		{
		}

		[Token(Token = "0x600129D")]
		[Address(RVA = "0xD94A48", Offset = "0xD94A48", VA = "0xD94A48")]
		private void Start()
		{
		}

		[Token(Token = "0x600129E")]
		[Address(RVA = "0xD94E98", Offset = "0xD94E98", VA = "0xD94E98")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600129F")]
		[Address(RVA = "0xD94F84", Offset = "0xD94F84", VA = "0xD94F84")]
		private void Update()
		{
		}

		[Token(Token = "0x60012A0")]
		[Address(RVA = "0xD950E8", Offset = "0xD950E8", VA = "0xD950E8")]
		private void UpdateCapTouchStates()
		{
		}

		[Token(Token = "0x60012A1")]
		[Address(RVA = "0xD953B8", Offset = "0xD953B8", VA = "0xD953B8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60012A2")]
		[Address(RVA = "0xD9549C", Offset = "0xD9549C", VA = "0xD9549C")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x60012A3")]
		[Address(RVA = "0xD9564C", Offset = "0xD9564C", VA = "0xD9564C")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x60012A4")]
		[Address(RVA = "0xD95174", Offset = "0xD95174", VA = "0xD95174")]
		private float InputValueRateChange(bool isDown, float value)
		{
			return default(float);
		}

		[Token(Token = "0x60012A5")]
		[Address(RVA = "0xD951C8", Offset = "0xD951C8", VA = "0xD951C8")]
		private void UpdateAnimStates()
		{
		}

		[Token(Token = "0x60012A6")]
		[Address(RVA = "0xD94D58", Offset = "0xD94D58", VA = "0xD94D58")]
		private void CollisionEnable(bool enabled)
		{
		}

		[Token(Token = "0x60012A7")]
		[Address(RVA = "0xD95770", Offset = "0xD95770", VA = "0xD95770")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x200030F")]
	public enum HandPoseId
	{
		[Token(Token = "0x400141D")]
		Default,
		[Token(Token = "0x400141E")]
		Generic,
		[Token(Token = "0x400141F")]
		PingPongBall,
		[Token(Token = "0x4001420")]
		Controller
	}
	[Token(Token = "0x2000310")]
	public class HandPose : MonoBehaviour
	{
		[Token(Token = "0x4001421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_allowPointing;

		[Token(Token = "0x4001422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_allowThumbsUp;

		[Token(Token = "0x4001423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private HandPoseId m_poseId;

		[Token(Token = "0x170001B4")]
		public bool AllowPointing
		{
			[Token(Token = "0x60012AB")]
			[Address(RVA = "0xD95828", Offset = "0xD95828", VA = "0xD95828")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001B5")]
		public bool AllowThumbsUp
		{
			[Token(Token = "0x60012AC")]
			[Address(RVA = "0xD95830", Offset = "0xD95830", VA = "0xD95830")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001B6")]
		public HandPoseId PoseId
		{
			[Token(Token = "0x60012AD")]
			[Address(RVA = "0xD95838", Offset = "0xD95838", VA = "0xD95838")]
			get
			{
				return default(HandPoseId);
			}
		}

		[Token(Token = "0x60012AE")]
		[Address(RVA = "0xD95840", Offset = "0xD95840", VA = "0xD95840")]
		public HandPose()
		{
		}
	}
	[Token(Token = "0x2000311")]
	public class TouchController : MonoBehaviour
	{
		[Token(Token = "0x4001424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x4001425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4001426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x60012AF")]
		[Address(RVA = "0xD95848", Offset = "0xD95848", VA = "0xD95848")]
		private void Update()
		{
		}

		[Token(Token = "0x60012B0")]
		[Address(RVA = "0xD95B14", Offset = "0xD95B14", VA = "0xD95B14")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x60012B1")]
		[Address(RVA = "0xD95B64", Offset = "0xD95B64", VA = "0xD95B64")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x60012B2")]
		[Address(RVA = "0xD95B9C", Offset = "0xD95B9C", VA = "0xD95B9C")]
		public TouchController()
		{
		}
	}
}
namespace Oculus.Avatar
{
	[Token(Token = "0x2000312")]
	public static class AvatarLogger
	{
		[Token(Token = "0x4001427")]
		public const string LogAvatar = "[Avatars] - ";

		[Token(Token = "0x4001428")]
		public const string Tab = "    ";

		[Token(Token = "0x60012B3")]
		[Address(RVA = "0xD95BA4", Offset = "0xD95BA4", VA = "0xD95BA4")]
		[Conditional("ENABLE_AVATAR_LOGS")]
		[Conditional("ENABLE_AVATAR_LOG_BASIC")]
		public static void Log(string logMsg)
		{
		}

		[Token(Token = "0x60012B4")]
		[Address(RVA = "0xD95C30", Offset = "0xD95C30", VA = "0xD95C30")]
		[Conditional("ENABLE_AVATAR_LOGS")]
		[Conditional("ENABLE_AVATAR_LOG_BASIC")]
		public static void Log(string logMsg, UnityEngine.Object context)
		{
		}

		[Token(Token = "0x60012B5")]
		[Address(RVA = "0xD95CC4", Offset = "0xD95CC4", VA = "0xD95CC4")]
		[Conditional("ENABLE_AVATAR_LOGS")]
		[Conditional("ENABLE_AVATAR_LOG_WARNING")]
		public static void LogWarning(string logMsg)
		{
		}

		[Token(Token = "0x60012B6")]
		[Address(RVA = "0xD95D50", Offset = "0xD95D50", VA = "0xD95D50")]
		[Conditional("ENABLE_AVATAR_LOGS")]
		[Conditional("ENABLE_AVATAR_LOG_ERROR")]
		public static void LogError(string logMsg)
		{
		}

		[Token(Token = "0x60012B7")]
		[Address(RVA = "0xD95DDC", Offset = "0xD95DDC", VA = "0xD95DDC")]
		[Conditional("ENABLE_AVATAR_LOG_ERROR")]
		[Conditional("ENABLE_AVATAR_LOGS")]
		public static void LogError(string logMsg, UnityEngine.Object context)
		{
		}
	}
	[Token(Token = "0x2000313")]
	public class CAPI
	{
		[Token(Token = "0x2000314")]
		public delegate void LoggingDelegate(IntPtr str);

		[Token(Token = "0x2000315")]
		public enum Result
		{
			[Token(Token = "0x4001434")]
			Success = 0,
			[Token(Token = "0x4001435")]
			Failure = -1000,
			[Token(Token = "0x4001436")]
			Failure_InvalidParameter = -1001,
			[Token(Token = "0x4001437")]
			Failure_NotInitialized = -1002,
			[Token(Token = "0x4001438")]
			Failure_InvalidOperation = -1003,
			[Token(Token = "0x4001439")]
			Failure_Unsupported = -1004,
			[Token(Token = "0x400143A")]
			Failure_NotYetImplemented = -1005,
			[Token(Token = "0x400143B")]
			Failure_OperationFailed = -1006,
			[Token(Token = "0x400143C")]
			Failure_InsufficientSize = -1007
		}

		[Token(Token = "0x2000316")]
		private static class OVRP_1_30_0
		{
			[Token(Token = "0x400143D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly Version version;

			[PreserveSig]
			[Token(Token = "0x600134C")]
			[Address(RVA = "0xD9E620", Offset = "0xD9E620", VA = "0xD9E620")]
			public static extern Result ovrp_SendEvent2(string name, string param, string source);
		}

		[Token(Token = "0x4001429")]
		private const string LibFile = "ovravatarloader";

		[Token(Token = "0x400142A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IntPtr nativeVisemeData;

		[Token(Token = "0x400142B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IntPtr nativeGazeTargetsData;

		[Token(Token = "0x400142C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IntPtr nativeAvatarLightsData;

		[Token(Token = "0x400142D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IntPtr DebugLineCountData;

		[Token(Token = "0x400142E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static float[] scratchBufferFloat;

		[Token(Token = "0x400142F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject debugLineGo;

		[Token(Token = "0x4001430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static string SDKRuntimePrefix;

		[Token(Token = "0x4001431")]
		private const string ovrPluginDLL = "OVRPlugin";

		[Token(Token = "0x4001432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static Version ovrPluginVersion;

		[PreserveSig]
		[Token(Token = "0x60012B8")]
		[Address(RVA = "0xD95EC8", Offset = "0xD95EC8", VA = "0xD95EC8")]
		public static extern void ovrAvatar_InitializeAndroidUnity(string appID);

		[Token(Token = "0x60012B9")]
		[Address(RVA = "0xD95F54", Offset = "0xD95F54", VA = "0xD95F54")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x60012BA")]
		[Address(RVA = "0xD96170", Offset = "0xD96170", VA = "0xD96170")]
		public static void Shutdown()
		{
		}

		[PreserveSig]
		[Token(Token = "0x60012BB")]
		[Address(RVA = "0xD96248", Offset = "0xD96248", VA = "0xD96248")]
		public static extern void ovrAvatar_Shutdown();

		[PreserveSig]
		[Token(Token = "0x60012BC")]
		[Address(RVA = "0xD962AC", Offset = "0xD962AC", VA = "0xD962AC")]
		public static extern IntPtr ovrAvatarMessage_Pop();

		[PreserveSig]
		[Token(Token = "0x60012BD")]
		[Address(RVA = "0xD96314", Offset = "0xD96314", VA = "0xD96314")]
		public static extern ovrAvatarMessageType ovrAvatarMessage_GetType(IntPtr msg);

		[Token(Token = "0x60012BE")]
		[Address(RVA = "0xD96390", Offset = "0xD96390", VA = "0xD96390")]
		public static ovrAvatarMessage_AvatarSpecification ovrAvatarMessage_GetAvatarSpecification(IntPtr msg)
		{
			return default(ovrAvatarMessage_AvatarSpecification);
		}

		[PreserveSig]
		[Token(Token = "0x60012BF")]
		[Address(RVA = "0xD964C0", Offset = "0xD964C0", VA = "0xD964C0")]
		private static extern IntPtr ovrAvatarMessage_GetAvatarSpecification_Native(IntPtr msg);

		[Token(Token = "0x60012C0")]
		[Address(RVA = "0xD9653C", Offset = "0xD9653C", VA = "0xD9653C")]
		public static ovrAvatarMessage_AssetLoaded ovrAvatarMessage_GetAssetLoaded(IntPtr msg)
		{
			return default(ovrAvatarMessage_AssetLoaded);
		}

		[PreserveSig]
		[Token(Token = "0x60012C1")]
		[Address(RVA = "0xD9666C", Offset = "0xD9666C", VA = "0xD9666C")]
		private static extern IntPtr ovrAvatarMessage_GetAssetLoaded_Native(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x60012C2")]
		[Address(RVA = "0xD966E8", Offset = "0xD966E8", VA = "0xD966E8")]
		public static extern void ovrAvatarMessage_Free(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x60012C3")]
		[Address(RVA = "0xD96764", Offset = "0xD96764", VA = "0xD96764")]
		public static extern IntPtr ovrAvatarSpecificationRequest_Create(ulong userID);

		[PreserveSig]
		[Token(Token = "0x60012C4")]
		[Address(RVA = "0xD967E0", Offset = "0xD967E0", VA = "0xD967E0")]
		public static extern void ovrAvatarSpecificationRequest_Destroy(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x60012C5")]
		[Address(RVA = "0xD9685C", Offset = "0xD9685C", VA = "0xD9685C")]
		public static extern void ovrAvatarSpecificationRequest_SetCombineMeshes(IntPtr specificationRequest, bool useCombinedMesh);

		[PreserveSig]
		[Token(Token = "0x60012C6")]
		[Address(RVA = "0xD968E0", Offset = "0xD968E0", VA = "0xD968E0")]
		public static extern void ovrAvatarSpecificationRequest_SetLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x60012C7")]
		[Address(RVA = "0xD96964", Offset = "0xD96964", VA = "0xD96964")]
		public static extern void ovrAvatarSpecificationRequest_SetLevelOfDetail(IntPtr specificationRequest, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x60012C8")]
		[Address(RVA = "0xD969E8", Offset = "0xD969E8", VA = "0xD969E8")]
		public static extern void ovrAvatar_RequestAvatarSpecification(ulong userID);

		[PreserveSig]
		[Token(Token = "0x60012C9")]
		[Address(RVA = "0xD96A64", Offset = "0xD96A64", VA = "0xD96A64")]
		public static extern void ovrAvatar_RequestAvatarSpecificationFromSpecRequest(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x60012CA")]
		[Address(RVA = "0xD96AE0", Offset = "0xD96AE0", VA = "0xD96AE0")]
		public static extern void ovrAvatarSpecificationRequest_SetFallbackLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x60012CB")]
		[Address(RVA = "0xD96B64", Offset = "0xD96B64", VA = "0xD96B64")]
		public static extern void ovrAvatarSpecificationRequest_SetExpressiveFlag(IntPtr specificationRequest, bool enable);

		[PreserveSig]
		[Token(Token = "0x60012CC")]
		[Address(RVA = "0xD96BE8", Offset = "0xD96BE8", VA = "0xD96BE8")]
		public static extern IntPtr ovrAvatar_Create(IntPtr avatarSpecification, ovrAvatarCapabilities capabilities);

		[PreserveSig]
		[Token(Token = "0x60012CD")]
		[Address(RVA = "0xD96C6C", Offset = "0xD96C6C", VA = "0xD96C6C")]
		public static extern void ovrAvatar_Destroy(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x60012CE")]
		[Address(RVA = "0xD96CE8", Offset = "0xD96CE8", VA = "0xD96CE8")]
		public static extern void ovrAvatarPose_UpdateBody(IntPtr avatar, ovrAvatarTransform headPose);

		[Token(Token = "0x60012CF")]
		[Address(RVA = "0xD96D7C", Offset = "0xD96D7C", VA = "0xD96D7C")]
		public static void ovrAvatarPose_UpdateVoiceVisualization(IntPtr avatar, float[] pcmData)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60012D0")]
		[Address(RVA = "0xD96DE4", Offset = "0xD96DE4", VA = "0xD96DE4")]
		private static extern void ovrAvatarPose_UpdateVoiceVisualization_Native(IntPtr avatar, uint pcmDataSize, [In] float[] pcmData);

		[PreserveSig]
		[Token(Token = "0x60012D1")]
		[Address(RVA = "0xD96E80", Offset = "0xD96E80", VA = "0xD96E80")]
		public static extern void ovrAvatarPose_UpdateHands(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight);

		[PreserveSig]
		[Token(Token = "0x60012D2")]
		[Address(RVA = "0xD96F34", Offset = "0xD96F34", VA = "0xD96F34")]
		public static extern void ovrAvatarPose_UpdateHandsWithType(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight, ovrAvatarControllerType type);

		[PreserveSig]
		[Token(Token = "0x60012D3")]
		[Address(RVA = "0xD96FF8", Offset = "0xD96FF8", VA = "0xD96FF8")]
		public static extern void ovrAvatarPose_Finalize(IntPtr avatar, float elapsedSeconds);

		[PreserveSig]
		[Token(Token = "0x60012D4")]
		[Address(RVA = "0xD97084", Offset = "0xD97084", VA = "0xD97084")]
		public static extern void ovrAvatar_SetLeftControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x60012D5")]
		[Address(RVA = "0xD97108", Offset = "0xD97108", VA = "0xD97108")]
		public static extern void ovrAvatar_SetRightControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x60012D6")]
		[Address(RVA = "0xD9718C", Offset = "0xD9718C", VA = "0xD9718C")]
		public static extern void ovrAvatar_SetLeftHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x60012D7")]
		[Address(RVA = "0xD97210", Offset = "0xD97210", VA = "0xD97210")]
		public static extern void ovrAvatar_SetRightHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x60012D8")]
		[Address(RVA = "0xD97294", Offset = "0xD97294", VA = "0xD97294")]
		public static extern uint ovrAvatarComponent_Count(IntPtr avatar);

		[Token(Token = "0x60012D9")]
		[Address(RVA = "0xD97310", Offset = "0xD97310", VA = "0xD97310")]
		public static void ovrAvatarComponent_Get(IntPtr avatar, uint index, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[Token(Token = "0x60012DA")]
		[Address(RVA = "0xD97414", Offset = "0xD97414", VA = "0xD97414")]
		public static void ovrAvatarComponent_Get(IntPtr componentPtr, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60012DB")]
		[Address(RVA = "0xD97390", Offset = "0xD97390", VA = "0xD97390")]
		public static extern IntPtr ovrAvatarComponent_Get_Native(IntPtr avatar, uint index);

		[Token(Token = "0x60012DC")]
		[Address(RVA = "0xD97600", Offset = "0xD97600", VA = "0xD97600")]
		public static bool ovrAvatarPose_GetBaseComponent(IntPtr avatar, ref ovrAvatarBaseComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x60012DD")]
		[Address(RVA = "0xD97764", Offset = "0xD97764", VA = "0xD97764")]
		private static extern IntPtr ovrAvatarPose_GetBaseComponent_Native(IntPtr avatar);

		[Token(Token = "0x60012DE")]
		public static IntPtr MarshalRenderComponent<T>(IntPtr ptr) where T : struct
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60012DF")]
		[Address(RVA = "0xD977E0", Offset = "0xD977E0", VA = "0xD977E0")]
		public static bool ovrAvatarPose_GetBodyComponent(IntPtr avatar, ref ovrAvatarBodyComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x60012E0")]
		[Address(RVA = "0xD97A74", Offset = "0xD97A74", VA = "0xD97A74")]
		private static extern IntPtr ovrAvatarPose_GetBodyComponent_Native(IntPtr avatar);

		[Token(Token = "0x60012E1")]
		[Address(RVA = "0xD97AF0", Offset = "0xD97AF0", VA = "0xD97AF0")]
		public static bool ovrAvatarPose_GetLeftControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x60012E2")]
		[Address(RVA = "0xD97C54", Offset = "0xD97C54", VA = "0xD97C54")]
		private static extern IntPtr ovrAvatarPose_GetLeftControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x60012E3")]
		[Address(RVA = "0xD97CD0", Offset = "0xD97CD0", VA = "0xD97CD0")]
		public static bool ovrAvatarPose_GetRightControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x60012E4")]
		[Address(RVA = "0xD97E34", Offset = "0xD97E34", VA = "0xD97E34")]
		private static extern IntPtr ovrAvatarPose_GetRightControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x60012E5")]
		[Address(RVA = "0xD97EB0", Offset = "0xD97EB0", VA = "0xD97EB0")]
		public static bool ovrAvatarPose_GetLeftHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x60012E6")]
		[Address(RVA = "0xD98014", Offset = "0xD98014", VA = "0xD98014")]
		private static extern IntPtr ovrAvatarPose_GetLeftHandComponent_Native(IntPtr avatar);

		[Token(Token = "0x60012E7")]
		[Address(RVA = "0xD98090", Offset = "0xD98090", VA = "0xD98090")]
		public static bool ovrAvatarPose_GetRightHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x60012E8")]
		[Address(RVA = "0xD981F4", Offset = "0xD981F4", VA = "0xD981F4")]
		private static extern IntPtr ovrAvatarPose_GetRightHandComponent_Native(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x60012E9")]
		[Address(RVA = "0xD98270", Offset = "0xD98270", VA = "0xD98270")]
		public static extern void ovrAvatarAsset_BeginLoading(ulong assetID);

		[PreserveSig]
		[Token(Token = "0x60012EA")]
		[Address(RVA = "0xD982EC", Offset = "0xD982EC", VA = "0xD982EC")]
		public static extern bool ovrAvatarAsset_BeginLoadingLOD(ulong assetId, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x60012EB")]
		[Address(RVA = "0xD98378", Offset = "0xD98378", VA = "0xD98378")]
		public static extern ovrAvatarAssetType ovrAvatarAsset_GetType(IntPtr assetHandle);

		[Token(Token = "0x60012EC")]
		[Address(RVA = "0xD983F4", Offset = "0xD983F4", VA = "0xD983F4")]
		public static ovrAvatarMeshAssetData ovrAvatarAsset_GetMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetData);
		}

		[Token(Token = "0x60012ED")]
		[Address(RVA = "0xD985AC", Offset = "0xD985AC", VA = "0xD985AC")]
		public static ovrAvatarMeshAssetDataV2 ovrAvatarAsset_GetCombinedMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetDataV2);
		}

		[PreserveSig]
		[Token(Token = "0x60012EE")]
		[Address(RVA = "0xD986E8", Offset = "0xD986E8", VA = "0xD986E8")]
		private static extern IntPtr ovrAvatarAsset_GetCombinedMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x60012EF")]
		[Address(RVA = "0xD98530", Offset = "0xD98530", VA = "0xD98530")]
		private static extern IntPtr ovrAvatarAsset_GetMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x60012F0")]
		[Address(RVA = "0xD98764", Offset = "0xD98764", VA = "0xD98764")]
		public static extern uint ovrAvatarAsset_GetMeshBlendShapeCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x60012F1")]
		[Address(RVA = "0xD987E0", Offset = "0xD987E0", VA = "0xD987E0")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeName(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x60012F2")]
		[Address(RVA = "0xD98864", Offset = "0xD98864", VA = "0xD98864")]
		public static extern uint ovrAvatarAsset_GetSubmeshCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x60012F3")]
		[Address(RVA = "0xD988E0", Offset = "0xD988E0", VA = "0xD988E0")]
		public static extern uint ovrAvatarAsset_GetSubmeshLastIndex(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x60012F4")]
		[Address(RVA = "0xD98964", Offset = "0xD98964", VA = "0xD98964")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeVertices(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x60012F5")]
		[Address(RVA = "0xD989E0", Offset = "0xD989E0", VA = "0xD989E0")]
		public static extern IntPtr ovrAvatarAsset_GetAvatar(IntPtr assetHandle);

		[Token(Token = "0x60012F6")]
		[Address(RVA = "0xD98A5C", Offset = "0xD98A5C", VA = "0xD98A5C")]
		public static ulong[] ovrAvatarAsset_GetCombinedMeshIDs(IntPtr assetHandle)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60012F7")]
		[Address(RVA = "0xD98CA4", Offset = "0xD98CA4", VA = "0xD98CA4")]
		public static extern IntPtr ovrAvatarAsset_GetCombinedMeshIDs_Native(IntPtr assetHandle, IntPtr count);

		[Token(Token = "0x60012F8")]
		[Address(RVA = "0xD98D28", Offset = "0xD98D28", VA = "0xD98D28")]
		public static void ovrAvatar_GetCombinedMeshAlphaData(IntPtr avatar, ref ulong textureID, ref Vector4 offset)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60012F9")]
		[Address(RVA = "0xD98F3C", Offset = "0xD98F3C", VA = "0xD98F3C")]
		public static extern IntPtr ovrAvatar_GetCombinedMeshAlphaData_Native(IntPtr avatar, IntPtr textureIDPtr, IntPtr offsetPtr);

		[Token(Token = "0x60012FA")]
		[Address(RVA = "0xD98FD0", Offset = "0xD98FD0", VA = "0xD98FD0")]
		public static ovrAvatarTextureAssetData ovrAvatarAsset_GetTextureData(IntPtr assetPtr)
		{
			return default(ovrAvatarTextureAssetData);
		}

		[PreserveSig]
		[Token(Token = "0x60012FB")]
		[Address(RVA = "0xD99104", Offset = "0xD99104", VA = "0xD99104")]
		private static extern IntPtr ovrAvatarAsset_GetTextureData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x60012FC")]
		[Address(RVA = "0xD99180", Offset = "0xD99180", VA = "0xD99180")]
		private static extern IntPtr ovrAvatarAsset_GetMaterialData_Native(IntPtr assetPtr);

		[Token(Token = "0x60012FD")]
		[Address(RVA = "0xD991FC", Offset = "0xD991FC", VA = "0xD991FC")]
		public static ovrAvatarMaterialState ovrAvatarAsset_GetMaterialState(IntPtr assetPtr)
		{
			return default(ovrAvatarMaterialState);
		}

		[PreserveSig]
		[Token(Token = "0x60012FE")]
		[Address(RVA = "0xD99334", Offset = "0xD99334", VA = "0xD99334")]
		public static extern ovrAvatarRenderPartType ovrAvatarRenderPart_GetType(IntPtr renderPart);

		[Token(Token = "0x60012FF")]
		[Address(RVA = "0xD993B0", Offset = "0xD993B0", VA = "0xD993B0")]
		public static ovrAvatarRenderPart_SkinnedMeshRender ovrAvatarRenderPart_GetSkinnedMeshRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRender);
		}

		[PreserveSig]
		[Token(Token = "0x6001300")]
		[Address(RVA = "0xD994E8", Offset = "0xD994E8", VA = "0xD994E8")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001301")]
		[Address(RVA = "0xD99564", Offset = "0xD99564", VA = "0xD99564")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001302")]
		[Address(RVA = "0xD995E8", Offset = "0xD995E8", VA = "0xD995E8")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001303")]
		[Address(RVA = "0xD9966C", Offset = "0xD9966C", VA = "0xD9966C")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001304")]
		[Address(RVA = "0xD996F0", Offset = "0xD996F0", VA = "0xD996F0")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRender_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001305")]
		[Address(RVA = "0xD9976C", Offset = "0xD9976C", VA = "0xD9976C")]
		public static extern bool ovrAvatarSkinnedMeshRender_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001306")]
		[Address(RVA = "0xD997F0", Offset = "0xD997F0", VA = "0xD997F0")]
		public static extern bool ovrAvatarSkinnedMeshRenderPBSV2_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001307")]
		[Address(RVA = "0xD99874", Offset = "0xD99874", VA = "0xD99874")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBS_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001308")]
		[Address(RVA = "0xD998F0", Offset = "0xD998F0", VA = "0xD998F0")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBSV2_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001309")]
		[Address(RVA = "0xD9996C", Offset = "0xD9996C", VA = "0xD9996C")]
		public static extern ovrAvatarMaterialState ovrAvatarSkinnedMeshRender_GetMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600130A")]
		[Address(RVA = "0xD99A1C", Offset = "0xD99A1C", VA = "0xD99A1C")]
		public static extern ovrAvatarPBSMaterialState ovrAvatarSkinnedMeshRenderPBSV2_GetPBSMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600130B")]
		[Address(RVA = "0xD99AA0", Offset = "0xD99AA0", VA = "0xD99AA0")]
		public static extern ovrAvatarExpressiveParameters ovrAvatar_GetExpressiveParameters(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x600130C")]
		[Address(RVA = "0xD99B24", Offset = "0xD99B24", VA = "0xD99B24")]
		public static extern ulong ovrAvatarSkinnedMeshRender_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600130D")]
		[Address(RVA = "0xD99BA0", Offset = "0xD99BA0", VA = "0xD99BA0")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600130E")]
		[Address(RVA = "0xD99C1C", Offset = "0xD99C1C", VA = "0xD99C1C")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBSV2_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600130F")]
		[Address(RVA = "0xD99C98", Offset = "0xD99C98", VA = "0xD99C98")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6001310")]
		[Address(RVA = "0xD99D2C", Offset = "0xD99D2C", VA = "0xD99D2C")]
		public static extern void ovrAvatar_SetActionUnitOnsetSpeed(IntPtr avatar, float onsetSpeed);

		[PreserveSig]
		[Token(Token = "0x6001311")]
		[Address(RVA = "0xD99DB8", Offset = "0xD99DB8", VA = "0xD99DB8")]
		public static extern void ovrAvatar_SetActionUnitFalloffSpeed(IntPtr avatar, float falloffSpeed);

		[PreserveSig]
		[Token(Token = "0x6001312")]
		[Address(RVA = "0xD99E44", Offset = "0xD99E44", VA = "0xD99E44")]
		public static extern void ovrAvatar_SetVisemeMultiplier(IntPtr avatar, float visemeMultiplier);

		[PreserveSig]
		[Token(Token = "0x6001313")]
		[Address(RVA = "0xD99ED0", Offset = "0xD99ED0", VA = "0xD99ED0")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6001314")]
		[Address(RVA = "0xD99F64", Offset = "0xD99F64", VA = "0xD99F64")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6001315")]
		[Address(RVA = "0xD99FF8", Offset = "0xD99FF8", VA = "0xD99FF8")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetAlbedoTextureAssetID(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001316")]
		[Address(RVA = "0xD9A074", Offset = "0xD9A074", VA = "0xD9A074")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetSurfaceTextureAssetID(IntPtr renderPart);

		[Token(Token = "0x6001317")]
		[Address(RVA = "0xD9A0F0", Offset = "0xD9A0F0", VA = "0xD9A0F0")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS ovrAvatarRenderPart_GetSkinnedMeshRenderPBS(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS);
		}

		[PreserveSig]
		[Token(Token = "0x6001318")]
		[Address(RVA = "0xD9A228", Offset = "0xD9A228", VA = "0xD9A228")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBS_Native(IntPtr renderPart);

		[Token(Token = "0x6001319")]
		[Address(RVA = "0xD9A2A4", Offset = "0xD9A2A4", VA = "0xD9A2A4")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2);
		}

		[PreserveSig]
		[Token(Token = "0x600131A")]
		[Address(RVA = "0xD9A3DC", Offset = "0xD9A3DC", VA = "0xD9A3DC")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2_Native(IntPtr renderPart);

		[Token(Token = "0x600131B")]
		[Address(RVA = "0xD9A458", Offset = "0xD9A458", VA = "0xD9A458")]
		public static void ovrAvatarSkinnedMeshRender_GetBlendShapeParams(IntPtr renderPart, ref ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600131C")]
		[Address(RVA = "0xD9A578", Offset = "0xD9A578", VA = "0xD9A578")]
		private static extern IntPtr ovrAvatarSkinnedMeshRender_GetBlendShapeParams_Native(IntPtr renderPart);

		[Token(Token = "0x600131D")]
		[Address(RVA = "0xD9A5F4", Offset = "0xD9A5F4", VA = "0xD9A5F4")]
		public static ovrAvatarRenderPart_ProjectorRender ovrAvatarRenderPart_GetProjectorRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_ProjectorRender);
		}

		[Token(Token = "0x600131E")]
		[Address(RVA = "0xD9A7A8", Offset = "0xD9A7A8", VA = "0xD9A7A8")]
		public static ovrAvatarPBSMaterialState[] ovrAvatar_GetBodyPBSMaterialStates(IntPtr renderPart)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600131F")]
		[Address(RVA = "0xD9AA50", Offset = "0xD9AA50", VA = "0xD9AA50")]
		private static extern IntPtr ovrAvatar_GetBodyPBSMaterialStates_Native(IntPtr avatar, IntPtr count);

		[PreserveSig]
		[Token(Token = "0x6001320")]
		[Address(RVA = "0xD9A72C", Offset = "0xD9A72C", VA = "0xD9A72C")]
		private static extern IntPtr ovrAvatarRenderPart_GetProjectorRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001321")]
		[Address(RVA = "0xD9AAD4", Offset = "0xD9AAD4", VA = "0xD9AAD4")]
		public static extern uint ovrAvatar_GetReferencedAssetCount(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001322")]
		[Address(RVA = "0xD9AB50", Offset = "0xD9AB50", VA = "0xD9AB50")]
		public static extern ulong ovrAvatar_GetReferencedAsset(IntPtr avatar, uint index);

		[PreserveSig]
		[Token(Token = "0x6001323")]
		[Address(RVA = "0xD9ABD4", Offset = "0xD9ABD4", VA = "0xD9ABD4")]
		public static extern void ovrAvatar_SetLeftHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x6001324")]
		[Address(RVA = "0xD9AC58", Offset = "0xD9AC58", VA = "0xD9AC58")]
		public static extern void ovrAvatar_SetRightHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x6001325")]
		[Address(RVA = "0xD9ACDC", Offset = "0xD9ACDC", VA = "0xD9ACDC")]
		public static extern void ovrAvatar_SetLeftHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x6001326")]
		[Address(RVA = "0xD9AD78", Offset = "0xD9AD78", VA = "0xD9AD78")]
		public static extern void ovrAvatar_SetRightHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x6001327")]
		[Address(RVA = "0xD9AE14", Offset = "0xD9AE14", VA = "0xD9AE14")]
		public static extern void ovrAvatar_UpdatePoseFromPacket(IntPtr avatar, IntPtr packet, float secondsFromStart);

		[PreserveSig]
		[Token(Token = "0x6001328")]
		[Address(RVA = "0xD9AEA8", Offset = "0xD9AEA8", VA = "0xD9AEA8")]
		public static extern void ovrAvatarPacket_BeginRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001329")]
		[Address(RVA = "0xD9AF24", Offset = "0xD9AF24", VA = "0xD9AF24")]
		public static extern IntPtr ovrAvatarPacket_EndRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x600132A")]
		[Address(RVA = "0xD9AFA0", Offset = "0xD9AFA0", VA = "0xD9AFA0")]
		public static extern uint ovrAvatarPacket_GetSize(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x600132B")]
		[Address(RVA = "0xD9B01C", Offset = "0xD9B01C", VA = "0xD9B01C")]
		public static extern float ovrAvatarPacket_GetDurationSeconds(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x600132C")]
		[Address(RVA = "0xD9B098", Offset = "0xD9B098", VA = "0xD9B098")]
		public static extern void ovrAvatarPacket_Free(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x600132D")]
		[Address(RVA = "0xD9B114", Offset = "0xD9B114", VA = "0xD9B114")]
		public static extern bool ovrAvatarPacket_Write(IntPtr packet, uint bufferSize, [Out] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x600132E")]
		[Address(RVA = "0xD9B238", Offset = "0xD9B238", VA = "0xD9B238")]
		public static extern IntPtr ovrAvatarPacket_Read(uint bufferSize, [In] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x600132F")]
		[Address(RVA = "0xD9B2C4", Offset = "0xD9B2C4", VA = "0xD9B2C4")]
		private static extern void ovrAvatar_SetInternalForceASTCTextures(bool value);

		[Token(Token = "0x6001330")]
		[Address(RVA = "0xD9B340", Offset = "0xD9B340", VA = "0xD9B340")]
		public static void ovrAvatar_SetForceASTCTextures(bool value)
		{
		}

		[Token(Token = "0x6001331")]
		[Address(RVA = "0xD9B394", Offset = "0xD9B394", VA = "0xD9B394")]
		public static void ovrAvatar_OverrideExpressiveLogic(IntPtr avatar, ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001332")]
		[Address(RVA = "0xD9B4C8", Offset = "0xD9B4C8", VA = "0xD9B4C8")]
		private static extern void ovrAvatar_OverrideExpressiveLogic_Native(IntPtr avatar, IntPtr state);

		[Token(Token = "0x6001333")]
		[Address(RVA = "0xD9B54C", Offset = "0xD9B54C", VA = "0xD9B54C")]
		public static void ovrAvatar_SetVisemes(IntPtr avatar, ovrAvatarVisemes visemes)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001334")]
		[Address(RVA = "0xD9B680", Offset = "0xD9B680", VA = "0xD9B680")]
		private static extern void ovrAvatar_SetVisemes_Native(IntPtr avatar, IntPtr visemes);

		[PreserveSig]
		[Token(Token = "0x6001335")]
		[Address(RVA = "0xD9B704", Offset = "0xD9B704", VA = "0xD9B704")]
		public static extern void ovrAvatar_UpdateWorldTransform(IntPtr avatar, ovrAvatarTransform transform);

		[Token(Token = "0x6001336")]
		[Address(RVA = "0xD9B798", Offset = "0xD9B798", VA = "0xD9B798")]
		public static void ovrAvatar_UpdateGazeTargets(ovrAvatarGazeTargets targets)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001337")]
		[Address(RVA = "0xD9BAD0", Offset = "0xD9BAD0", VA = "0xD9BAD0")]
		private static extern void ovrAvatar_UpdateGazeTargets_Native(IntPtr targets);

		[PreserveSig]
		[Token(Token = "0x6001338")]
		[Address(RVA = "0xD9BB4C", Offset = "0xD9BB4C", VA = "0xD9BB4C")]
		public static extern void ovrAvatar_RemoveGazeTargets(uint targetCount, uint[] ids);

		[Token(Token = "0x6001339")]
		[Address(RVA = "0xD9BBD8", Offset = "0xD9BBD8", VA = "0xD9BBD8")]
		public static void ovrAvatar_UpdateLights(ovrAvatarLights lights)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600133A")]
		[Address(RVA = "0xD9C32C", Offset = "0xD9C32C", VA = "0xD9C32C")]
		private static extern void ovrAvatar_UpdateLights_Native(IntPtr lights);

		[PreserveSig]
		[Token(Token = "0x600133B")]
		[Address(RVA = "0xD9C3A8", Offset = "0xD9C3A8", VA = "0xD9C3A8")]
		public static extern void ovrAvatar_RemoveLights(uint lightCount, uint[] ids);

		[Token(Token = "0x600133C")]
		[Address(RVA = "0xD95E70", Offset = "0xD95E70", VA = "0xD95E70")]
		[MonoPInvokeCallback(typeof(LoggingDelegate))]
		public static void LoggingCallback(IntPtr str)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600133D")]
		[Address(RVA = "0xD9C434", Offset = "0xD9C434", VA = "0xD9C434")]
		public static extern void ovrAvatar_RegisterLoggingCallback(LoggingDelegate callback);

		[PreserveSig]
		[Token(Token = "0x600133E")]
		[Address(RVA = "0xD9C4B4", Offset = "0xD9C4B4", VA = "0xD9C4B4")]
		public static extern void ovrAvatar_SetLoggingLevel(ovrAvatarLogLevel level);

		[PreserveSig]
		[Token(Token = "0x600133F")]
		[Address(RVA = "0xD9C530", Offset = "0xD9C530", VA = "0xD9C530")]
		public static extern IntPtr ovrAvatar_GetDebugTransforms_Native(IntPtr count);

		[PreserveSig]
		[Token(Token = "0x6001340")]
		[Address(RVA = "0xD9C5AC", Offset = "0xD9C5AC", VA = "0xD9C5AC")]
		public static extern IntPtr ovrAvatar_GetDebugLines_Native(IntPtr count);

		[Token(Token = "0x6001341")]
		[Address(RVA = "0xD9C628", Offset = "0xD9C628", VA = "0xD9C628")]
		public static void ovrAvatar_DrawDebugLines()
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001342")]
		[Address(RVA = "0xD9CF80", Offset = "0xD9CF80", VA = "0xD9CF80")]
		public static extern void ovrAvatar_SetDebugDrawContext(uint context);

		[Token(Token = "0x6001343")]
		[Address(RVA = "0xD9CFFC", Offset = "0xD9CFFC", VA = "0xD9CFFC")]
		public static bool SendEvent(string name, string param = "", string source = "")
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001344")]
		[Address(RVA = "0xD9D368", Offset = "0xD9D368", VA = "0xD9D368")]
		private static extern IntPtr _ovrp_GetVersion();

		[Token(Token = "0x6001345")]
		[Address(RVA = "0xD9D2E4", Offset = "0xD9D2E4", VA = "0xD9D2E4")]
		public static string ovrp_GetVersion()
		{
			return null;
		}

		[Token(Token = "0x6001346")]
		[Address(RVA = "0xD9D3D0", Offset = "0xD9D3D0", VA = "0xD9D3D0")]
		public CAPI()
		{
		}
	}
}
namespace MRCHelpers
{
	[Token(Token = "0x2000317")]
	public class CopyTransform : MonoBehaviour
	{
		[Token(Token = "0x400143E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform m_originalTransform;

		[Token(Token = "0x600134E")]
		[Address(RVA = "0xD9E788", Offset = "0xD9E788", VA = "0xD9E788")]
		private void Start()
		{
		}

		[Token(Token = "0x600134F")]
		[Address(RVA = "0xD9E838", Offset = "0xD9E838", VA = "0xD9E838")]
		private void Update()
		{
		}

		[Token(Token = "0x6001350")]
		[Address(RVA = "0xD9E8E8", Offset = "0xD9E8E8", VA = "0xD9E8E8")]
		public CopyTransform()
		{
		}
	}
	[Token(Token = "0x2000318")]
	public class OVRMixedRealityCaptureTestMod : MonoBehaviour
	{
		[Token(Token = "0x400143F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inited;

		[Token(Token = "0x4001440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Camera defaultExternalCamera;

		[Token(Token = "0x4001441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OVRPlugin.Fovf defaultFov;

		[Token(Token = "0x6001351")]
		[Address(RVA = "0xD9E8F0", Offset = "0xD9E8F0", VA = "0xD9E8F0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001352")]
		[Address(RVA = "0xD9E9A0", Offset = "0xD9E9A0", VA = "0xD9E9A0")]
		private void Initialize()
		{
		}

		[Token(Token = "0x6001353")]
		[Address(RVA = "0xD9EBE4", Offset = "0xD9EBE4", VA = "0xD9EBE4")]
		private void UpdateDefaultExternalCamera()
		{
		}

		[Token(Token = "0x6001354")]
		[Address(RVA = "0xD9EF64", Offset = "0xD9EF64", VA = "0xD9EF64")]
		private void Update()
		{
		}

		[Token(Token = "0x6001355")]
		[Address(RVA = "0xD9F09C", Offset = "0xD9F09C", VA = "0xD9F09C")]
		public OVRMixedRealityCaptureTestMod()
		{
		}
	}
	[Token(Token = "0x2000319")]
	public class RemoveMRCamerasTracking : MonoBehaviour
	{
		[Token(Token = "0x200031A")]
		[CompilerGenerated]
		private sealed class <RemoveCamerasTracking>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001442")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001443")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001444")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RemoveMRCamerasTracking <>4__this;

			[Token(Token = "0x4001445")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Transform <trackingSpaceTransform>5__2;

			[Token(Token = "0x4001446")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private string[] <camerasNames>5__3;

			[Token(Token = "0x4001447")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private WaitForSeconds <waiter>5__4;

			[Token(Token = "0x170001B7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600135C")]
				[Address(RVA = "0xD9F4F4", Offset = "0xD9F4F4", VA = "0xD9F4F4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001B8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600135E")]
				[Address(RVA = "0xD9F53C", Offset = "0xD9F53C", VA = "0xD9F53C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001359")]
			[Address(RVA = "0xD9F138", Offset = "0xD9F138", VA = "0xD9F138")]
			[DebuggerHidden]
			public <RemoveCamerasTracking>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x600135A")]
			[Address(RVA = "0xD9F168", Offset = "0xD9F168", VA = "0xD9F168", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600135B")]
			[Address(RVA = "0xD9F16C", Offset = "0xD9F16C", VA = "0xD9F16C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600135D")]
			[Address(RVA = "0xD9F4FC", Offset = "0xD9F4FC", VA = "0xD9F4FC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6001356")]
		[Address(RVA = "0xD9F0A4", Offset = "0xD9F0A4", VA = "0xD9F0A4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001357")]
		[Address(RVA = "0xD9F0C4", Offset = "0xD9F0C4", VA = "0xD9F0C4")]
		[IteratorStateMachine(typeof(<RemoveCamerasTracking>d__1))]
		private IEnumerator RemoveCamerasTracking()
		{
			return null;
		}

		[Token(Token = "0x6001358")]
		[Address(RVA = "0xD9F160", Offset = "0xD9F160", VA = "0xD9F160")]
		public RemoveMRCamerasTracking()
		{
		}
	}
}
namespace LIV.SDK.Unity
{
	[Token(Token = "0x200031B")]
	[Flags]
	public enum INVALIDATION_FLAGS : uint
	{
		[Token(Token = "0x4001449")]
		NONE = 0u,
		[Token(Token = "0x400144A")]
		HMD_CAMERA = 1u,
		[Token(Token = "0x400144B")]
		STAGE = 2u,
		[Token(Token = "0x400144C")]
		MR_CAMERA_PREFAB = 4u,
		[Token(Token = "0x400144D")]
		EXCLUDE_BEHAVIOURS = 8u
	}
	[Token(Token = "0x200031C")]
	[AddComponentMenu("LIV/LIV")]
	[HelpURL("https://liv.tv/sdk-unity-docs")]
	public class LIV : MonoBehaviour
	{
		[Token(Token = "0x200031D")]
		[CompilerGenerated]
		private sealed class <WaitForUnityEndOfFrame>d__68 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001468")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001469")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400146A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LIV <>4__this;

			[Token(Token = "0x170001C8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001389")]
				[Address(RVA = "0xDA0D50", Offset = "0xDA0D50", VA = "0xDA0D50", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001C9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600138B")]
				[Address(RVA = "0xDA0D98", Offset = "0xDA0D98", VA = "0xDA0D98", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001386")]
			[Address(RVA = "0xD9FF5C", Offset = "0xD9FF5C", VA = "0xD9FF5C")]
			[DebuggerHidden]
			public <WaitForUnityEndOfFrame>d__68(int <>1__state)
			{
			}

			[Token(Token = "0x6001387")]
			[Address(RVA = "0xDA0BAC", Offset = "0xDA0BAC", VA = "0xDA0BAC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001388")]
			[Address(RVA = "0xDA0BB0", Offset = "0xDA0BB0", VA = "0xDA0BB0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600138A")]
			[Address(RVA = "0xDA0D58", Offset = "0xDA0D58", VA = "0xDA0D58", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400144E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action onActivate;

		[Token(Token = "0x400144F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action<SDKRender> onPreRender;

		[Token(Token = "0x4001450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action<SDKRender> onPreRenderBackground;

		[Token(Token = "0x4001451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action<SDKRender> onPostRenderBackground;

		[Token(Token = "0x4001452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action<SDKRender> onPreRenderForeground;

		[Token(Token = "0x4001453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Action<SDKRender> onPostRenderForeground;

		[Token(Token = "0x4001454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Action<SDKRender> onPostRender;

		[Token(Token = "0x4001455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Action onDeactivate;

		[Token(Token = "0x4001456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("This is the topmost transform of your VR rig.")]
		[FormerlySerializedAs("TrackedSpaceOrigin")]
		[SerializeField]
		private Transform _stage;

		[Token(Token = "0x4001457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("This transform is an additional wrapper to the user’s playspace.")]
		[FormerlySerializedAs("StageTransform")]
		[SerializeField]
		private Transform _stageTransform;

		[Token(Token = "0x4001458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Tooltip("This is the camera responsible for rendering the user’s HMD.")]
		[SerializeField]
		[FormerlySerializedAs("HMDCamera")]
		private Camera _HMDCamera;

		[Token(Token = "0x4001459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		[FormerlySerializedAs("MRCameraPrefab")]
		[Tooltip("Camera prefab for customized rendering.")]
		private Camera _MRCameraPrefab;

		[Token(Token = "0x400145A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		[FormerlySerializedAs("DisableStandardAssets")]
		[Tooltip("This option disables all standard Unity assets for the Mixed Reality rendering.")]
		private bool _disableStandardAssets;

		[Token(Token = "0x400145B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		[FormerlySerializedAs("SpectatorLayerMask")]
		[Tooltip("The layer mask defines exactly which object layers should be rendered in MR.")]
		private LayerMask _spectatorLayerMask;

		[Token(Token = "0x400145C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		[Tooltip("This is for removing unwanted scripts from the cloned MR camera.")]
		[FormerlySerializedAs("ExcludeBehaviours")]
		private string[] _excludeBehaviours;

		[Token(Token = "0x400145D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		[FormerlySerializedAs("FixPostEffectsAlpha")]
		[Tooltip("Recovers corrupted alpha channel when using post-effects.")]
		private bool _fixPostEffectsAlpha;

		[Token(Token = "0x400145E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		private bool _isActive;

		[Token(Token = "0x400145F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private SDKRender _render;

		[Token(Token = "0x4001460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool _wasReady;

		[Token(Token = "0x4001461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private INVALIDATION_FLAGS _invalidate;

		[Token(Token = "0x4001462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Transform _stageCandidate;

		[Token(Token = "0x4001463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Camera _HMDCameraCandidate;

		[Token(Token = "0x4001464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Camera _MRCameraPrefabCandidate;

		[Token(Token = "0x4001465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private string[] _excludeBehavioursCandidate;

		[Token(Token = "0x4001466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool _enabled;

		[Token(Token = "0x4001467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Coroutine _waitForEndOfFrameCoroutine;

		[Token(Token = "0x170001B9")]
		public Transform stage
		{
			[Token(Token = "0x600135F")]
			[Address(RVA = "0xD9F544", Offset = "0xD9F544", VA = "0xD9F544")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001360")]
			[Address(RVA = "0xD9F5D4", Offset = "0xD9F5D4", VA = "0xD9F5D4")]
			set
			{
			}
		}

		[Token(Token = "0x170001BA")]
		[Obsolete("Use stage instead")]
		public Transform trackedSpaceOrigin
		{
			[Token(Token = "0x6001361")]
			[Address(RVA = "0xD9F6E0", Offset = "0xD9F6E0", VA = "0xD9F6E0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001362")]
			[Address(RVA = "0xD9F6E4", Offset = "0xD9F6E4", VA = "0xD9F6E4")]
			set
			{
			}
		}

		[Token(Token = "0x170001BB")]
		public Matrix4x4 stageLocalToWorldMatrix
		{
			[Token(Token = "0x6001363")]
			[Address(RVA = "0xD9F6E8", Offset = "0xD9F6E8", VA = "0xD9F6E8")]
			get
			{
				return default(Matrix4x4);
			}
		}

		[Token(Token = "0x170001BC")]
		public Matrix4x4 stageWorldToLocalMatrix
		{
			[Token(Token = "0x6001364")]
			[Address(RVA = "0xD9F7E0", Offset = "0xD9F7E0", VA = "0xD9F7E0")]
			get
			{
				return default(Matrix4x4);
			}
		}

		[Token(Token = "0x170001BD")]
		public Transform stageTransform
		{
			[Token(Token = "0x6001365")]
			[Address(RVA = "0xD9F8D8", Offset = "0xD9F8D8", VA = "0xD9F8D8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001366")]
			[Address(RVA = "0xD9F8E0", Offset = "0xD9F8E0", VA = "0xD9F8E0")]
			set
			{
			}
		}

		[Token(Token = "0x170001BE")]
		public Camera HMDCamera
		{
			[Token(Token = "0x6001367")]
			[Address(RVA = "0xD9F8E8", Offset = "0xD9F8E8", VA = "0xD9F8E8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001368")]
			[Address(RVA = "0xD9F8F0", Offset = "0xD9F8F0", VA = "0xD9F8F0")]
			set
			{
			}
		}

		[Token(Token = "0x170001BF")]
		public Camera MRCameraPrefab
		{
			[Token(Token = "0x6001369")]
			[Address(RVA = "0xD9F9E8", Offset = "0xD9F9E8", VA = "0xD9F9E8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600136A")]
			[Address(RVA = "0xD9F9F0", Offset = "0xD9F9F0", VA = "0xD9F9F0")]
			set
			{
			}
		}

		[Token(Token = "0x170001C0")]
		public bool disableStandardAssets
		{
			[Token(Token = "0x600136B")]
			[Address(RVA = "0xD9FA80", Offset = "0xD9FA80", VA = "0xD9FA80")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600136C")]
			[Address(RVA = "0xD9FA88", Offset = "0xD9FA88", VA = "0xD9FA88")]
			set
			{
			}
		}

		[Token(Token = "0x170001C1")]
		public LayerMask spectatorLayerMask
		{
			[Token(Token = "0x600136D")]
			[Address(RVA = "0xD9FA94", Offset = "0xD9FA94", VA = "0xD9FA94")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x600136E")]
			[Address(RVA = "0xD9FA9C", Offset = "0xD9FA9C", VA = "0xD9FA9C")]
			set
			{
			}
		}

		[Token(Token = "0x170001C2")]
		public string[] excludeBehaviours
		{
			[Token(Token = "0x600136F")]
			[Address(RVA = "0xD9FAA4", Offset = "0xD9FAA4", VA = "0xD9FAA4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001370")]
			[Address(RVA = "0xD9FAAC", Offset = "0xD9FAAC", VA = "0xD9FAAC")]
			set
			{
			}
		}

		[Token(Token = "0x170001C3")]
		public bool fixPostEffectsAlpha
		{
			[Token(Token = "0x6001371")]
			[Address(RVA = "0xD9FAE0", Offset = "0xD9FAE0", VA = "0xD9FAE0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001372")]
			[Address(RVA = "0xD9FAE8", Offset = "0xD9FAE8", VA = "0xD9FAE8")]
			set
			{
			}
		}

		[Token(Token = "0x170001C4")]
		public bool isValid
		{
			[Token(Token = "0x6001373")]
			[Address(RVA = "0xD9FAF4", Offset = "0xD9FAF4", VA = "0xD9FAF4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001C5")]
		public bool isActive
		{
			[Token(Token = "0x6001374")]
			[Address(RVA = "0xD9FC54", Offset = "0xD9FC54", VA = "0xD9FC54")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001C6")]
		private bool _isReady
		{
			[Token(Token = "0x6001375")]
			[Address(RVA = "0xD9FC5C", Offset = "0xD9FC5C", VA = "0xD9FC5C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001C7")]
		public SDKRender render
		{
			[Token(Token = "0x6001376")]
			[Address(RVA = "0xD9FD68", Offset = "0xD9FD68", VA = "0xD9FD68")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001377")]
		[Address(RVA = "0xD9FD70", Offset = "0xD9FD70", VA = "0xD9FD70")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001378")]
		[Address(RVA = "0xD9FDC0", Offset = "0xD9FDC0", VA = "0xD9FDC0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001379")]
		[Address(RVA = "0xD9FEE0", Offset = "0xD9FEE0", VA = "0xD9FEE0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600137A")]
		[Address(RVA = "0xD9FEE8", Offset = "0xD9FEE8", VA = "0xD9FEE8")]
		[IteratorStateMachine(typeof(<WaitForUnityEndOfFrame>d__68))]
		private IEnumerator WaitForUnityEndOfFrame()
		{
			return null;
		}

		[Token(Token = "0x600137B")]
		[Address(RVA = "0xD9FD7C", Offset = "0xD9FD7C", VA = "0xD9FD7C")]
		private void UpdateSDKReady()
		{
		}

		[Token(Token = "0x600137C")]
		[Address(RVA = "0xD9FF84", Offset = "0xD9FF84", VA = "0xD9FF84")]
		private void OnSDKReadyChanged(bool value)
		{
		}

		[Token(Token = "0x600137D")]
		[Address(RVA = "0xD9FF90", Offset = "0xD9FF90", VA = "0xD9FF90")]
		private void OnSDKActivate()
		{
		}

		[Token(Token = "0x600137E")]
		[Address(RVA = "0xDA003C", Offset = "0xDA003C", VA = "0xDA003C")]
		private void OnSDKDeactivate()
		{
		}

		[Token(Token = "0x600137F")]
		[Address(RVA = "0xDA02BC", Offset = "0xDA02BC", VA = "0xDA02BC")]
		private void CreateAssets()
		{
		}

		[Token(Token = "0x6001380")]
		[Address(RVA = "0xDA03A8", Offset = "0xDA03A8", VA = "0xDA03A8")]
		private void DestroyAssets()
		{
		}

		[Token(Token = "0x6001381")]
		[Address(RVA = "0xDA032C", Offset = "0xDA032C", VA = "0xDA032C")]
		private void StartRenderCoroutine()
		{
		}

		[Token(Token = "0x6001382")]
		[Address(RVA = "0xDA0364", Offset = "0xDA0364", VA = "0xDA0364")]
		private void StopRenderCoroutine()
		{
		}

		[Token(Token = "0x6001383")]
		[Address(RVA = "0xDA00D8", Offset = "0xDA00D8", VA = "0xDA00D8")]
		private void SubmitSDKOutput()
		{
		}

		[Token(Token = "0x6001384")]
		[Address(RVA = "0xD9FDD8", Offset = "0xD9FDD8", VA = "0xD9FDD8")]
		private void Invalidate()
		{
		}

		[Token(Token = "0x6001385")]
		[Address(RVA = "0xDA0954", Offset = "0xDA0954", VA = "0xDA0954")]
		public LIV()
		{
		}
	}
	[Token(Token = "0x200031E")]
	public static class SDKBridge
	{
		[Token(Token = "0x200031F")]
		public struct SDKInjection<T>
		{
			[Token(Token = "0x4001472")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool active;

			[Token(Token = "0x4001473")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action action;

			[Token(Token = "0x4001474")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T data;
		}

		[Token(Token = "0x400146B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static SDKInjection<SDKInputFrame> _injection_SDKInputFrame;

		[Token(Token = "0x400146C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private static SDKInjection<SDKResolution> _injection_SDKResolution;

		[Token(Token = "0x400146D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private static SDKInjection<bool> _injection_IsActive;

		[Token(Token = "0x400146E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private static bool _injection_DisableSubmit;

		[Token(Token = "0x400146F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x199")]
		private static bool _injection_DisableSubmitApplicationOutput;

		[Token(Token = "0x4001470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19A")]
		private static bool _injection_DisableAddTexture;

		[Token(Token = "0x4001471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19B")]
		private static bool _injection_DisableCreateFrame;

		[Token(Token = "0x170001CA")]
		public static bool IsActive
		{
			[Token(Token = "0x600139E")]
			[Address(RVA = "0xD9FCD0", Offset = "0xD9FCD0", VA = "0xD9FCD0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600138C")]
		[Address(RVA = "0xDA0DA0", Offset = "0xDA0DA0", VA = "0xDA0DA0")]
		public static int AddStringToChannel(int slot, IntPtr str, int length, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x600138D")]
		[Address(RVA = "0xDA0DA8", Offset = "0xDA0DA8", VA = "0xDA0DA8")]
		public static int addtexture(IntPtr sourcetexture, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x600138E")]
		[Address(RVA = "0xDA0DB0", Offset = "0xDA0DB0", VA = "0xDA0DB0")]
		public static ulong GetObjectTimeStamp(IntPtr obj)
		{
			return default(ulong);
		}

		[Token(Token = "0x600138F")]
		[Address(RVA = "0xDA0DB8", Offset = "0xDA0DB8", VA = "0xDA0DB8")]
		public static ulong GetCurrentTimeTicks()
		{
			return default(ulong);
		}

		[Token(Token = "0x6001390")]
		[Address(RVA = "0xDA0DC0", Offset = "0xDA0DC0", VA = "0xDA0DC0")]
		private static bool GetIsCaptureActive()
		{
			return default(bool);
		}

		[Token(Token = "0x6001391")]
		[Address(RVA = "0xDA0DC8", Offset = "0xDA0DC8", VA = "0xDA0DC8")]
		public static IntPtr GetRenderEventFunc()
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001392")]
		[Address(RVA = "0xDA0E10", Offset = "0xDA0E10", VA = "0xDA0E10")]
		public static IntPtr GetCompositorChannelObject(int slot, ulong tag, ulong timestamp)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001393")]
		[Address(RVA = "0xDA0E58", Offset = "0xDA0E58", VA = "0xDA0E58")]
		public static int AddObjectToCompositorChannel(int slot, IntPtr obj, int objectsize, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x6001394")]
		[Address(RVA = "0xDA0E60", Offset = "0xDA0E60", VA = "0xDA0E60")]
		public static int AddObjectToFrame(IntPtr obj, int objectsize, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x6001395")]
		[Address(RVA = "0xDA0E68", Offset = "0xDA0E68", VA = "0xDA0E68")]
		public static IntPtr updatinputframe(IntPtr InputFrame)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001396")]
		[Address(RVA = "0xDA0EB0", Offset = "0xDA0EB0", VA = "0xDA0EB0")]
		public static IntPtr GetViewportTexture()
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001397")]
		[Address(RVA = "0xDA0EF8", Offset = "0xDA0EF8", VA = "0xDA0EF8")]
		public static IntPtr GetChannelObject(int slot, ulong tag, ulong timestamp)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001398")]
		[Address(RVA = "0xDA0F40", Offset = "0xDA0F40", VA = "0xDA0F40")]
		public static int AddObjectToChannel(int slot, IntPtr obj, int objectsize, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x6001399")]
		[Address(RVA = "0xDA0F48", Offset = "0xDA0F48", VA = "0xDA0F48")]
		public static ulong Tag(string str)
		{
			return default(ulong);
		}

		[Token(Token = "0x600139A")]
		[Address(RVA = "0xDA0FCC", Offset = "0xDA0FCC", VA = "0xDA0FCC")]
		public static void AddString(string tag, string value, int slot)
		{
		}

		[Token(Token = "0x600139B")]
		[Address(RVA = "0xDA10C8", Offset = "0xDA10C8", VA = "0xDA10C8")]
		public static void AddTexture(SDKTexture texture, ulong tag)
		{
		}

		[Token(Token = "0x600139C")]
		[Address(RVA = "0xDA1188", Offset = "0xDA1188", VA = "0xDA1188")]
		public static ulong GetObjectTime(IntPtr objectptr)
		{
			return default(ulong);
		}

		[Token(Token = "0x600139D")]
		[Address(RVA = "0xDA11E4", Offset = "0xDA11E4", VA = "0xDA11E4")]
		public static ulong GetCurrentTime()
		{
			return default(ulong);
		}

		[Token(Token = "0x600139F")]
		[Address(RVA = "0xDA1240", Offset = "0xDA1240", VA = "0xDA1240")]
		public static void IssuePluginEvent()
		{
		}

		[Token(Token = "0x60013A0")]
		[Address(RVA = "0xDA0758", Offset = "0xDA0758", VA = "0xDA0758")]
		public static void SubmitApplicationOutput(SDKApplicationOutput applicationOutput)
		{
		}

		[Token(Token = "0x60013A1")]
		public static bool GetStructFromGlobalChannel<T>(ref T mystruct, int channel, ulong tag)
		{
			return default(bool);
		}

		[Token(Token = "0x60013A2")]
		public static int AddStructToGlobalChannel<T>(ref T mystruct, int channel, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x60013A3")]
		public static bool GetStructFromLocalChannel<T>(ref T mystruct, int channel, ulong tag)
		{
			return default(bool);
		}

		[Token(Token = "0x60013A4")]
		public static int AddStructToLocalChannel<T>(ref T mystruct, int channel, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x60013A5")]
		public static void AddStructToFrame<T>(ref T mystruct, ulong tag)
		{
		}

		[Token(Token = "0x60013A6")]
		[Address(RVA = "0xDA12F0", Offset = "0xDA12F0", VA = "0xDA12F0")]
		public static bool UpdateInputFrame(ref SDKInputFrame setframe)
		{
			return default(bool);
		}

		[Token(Token = "0x60013A7")]
		[Address(RVA = "0xDA16F4", Offset = "0xDA16F4", VA = "0xDA16F4")]
		public static SDKTexture GetViewfinderTexture()
		{
			return default(SDKTexture);
		}

		[Token(Token = "0x60013A8")]
		[Address(RVA = "0xDA1924", Offset = "0xDA1924", VA = "0xDA1924")]
		public static void AddTexture(SDKTexture texture)
		{
		}

		[Token(Token = "0x60013A9")]
		[Address(RVA = "0xDA1A54", Offset = "0xDA1A54", VA = "0xDA1A54")]
		public static void CreateFrame(SDKOutputFrame frame)
		{
		}

		[Token(Token = "0x60013AA")]
		[Address(RVA = "0xDA1BBC", Offset = "0xDA1BBC", VA = "0xDA1BBC")]
		public static void SetGroundPlane(SDKPlane groundPlane)
		{
		}

		[Token(Token = "0x60013AB")]
		[Address(RVA = "0xDA1C5C", Offset = "0xDA1C5C", VA = "0xDA1C5C")]
		public static bool GetResolution(ref SDKResolution sdkResolution)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000320")]
	public class SDKRender : IDisposable
	{
		[Token(Token = "0x4001475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private LIV _liv;

		[Token(Token = "0x4001476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SDKOutputFrame _outputFrame;

		[Token(Token = "0x4001477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private SDKInputFrame _inputFrame;

		[Token(Token = "0x4001478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		private SDKResolution _resolution;

		[Token(Token = "0x4001479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		private Camera _cameraInstance;

		[Token(Token = "0x400147A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private SDKPose _requestedPose;

		[Token(Token = "0x400147B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		private int _requestedPoseFrameIndex;

		[Token(Token = "0x400147C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		private SDKPass _clipPlanePass;

		[Token(Token = "0x400147D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		private SDKPass _combineAlphaPass;

		[Token(Token = "0x400147E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		private SDKPass _captureTexturePass;

		[Token(Token = "0x400147F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		private SDKPass _applyTexturePass;

		[Token(Token = "0x4001480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		private SDKPass _optimizedRenderingPass;

		[Token(Token = "0x4001481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		private RenderPassEvent _clipPlaneRenderPassEvent;

		[Token(Token = "0x4001482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D4")]
		private RenderPassEvent _addAlphaRenderPassEvent;

		[Token(Token = "0x4001483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		private RenderPassEvent _captureTextureRenderPassEvent;

		[Token(Token = "0x4001484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2DC")]
		private RenderPassEvent _applyTextureRenderPassEvent;

		[Token(Token = "0x4001485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		private RenderPassEvent _optimizedRenderingPassEvent;

		[Token(Token = "0x4001486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
		private Mesh _clipPlaneMesh;

		[Token(Token = "0x4001487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
		private Material _clipPlaneSimpleMaterial;

		[Token(Token = "0x4001488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
		private Material _clipPlaneSimpleDebugMaterial;

		[Token(Token = "0x4001489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		private Material _clipPlaneComplexMaterial;

		[Token(Token = "0x400148A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
		private Material _clipPlaneComplexDebugMaterial;

		[Token(Token = "0x400148B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
		private Material _writeOpaqueToAlphaMaterial;

		[Token(Token = "0x400148C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		private Material _combineAlphaMaterial;

		[Token(Token = "0x400148D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
		private Material _writeMaterial;

		[Token(Token = "0x400148E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
		private Material _forceForwardRenderingMaterial;

		[Token(Token = "0x400148F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
		private RenderTexture _backgroundRenderTexture;

		[Token(Token = "0x4001490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
		private RenderTexture _foregroundRenderTexture;

		[Token(Token = "0x4001491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
		private RenderTexture _optimizedRenderTexture;

		[Token(Token = "0x4001492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
		private RenderTexture _complexClipPlaneRenderTexture;

		[Token(Token = "0x4001493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
		private UniversalAdditionalCameraData _universalAdditionalCameraData;

		[Token(Token = "0x4001494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
		private RenderTargetIdentifier _cameraColorTextureIdentifier;

		[Token(Token = "0x170001CB")]
		public LIV liv
		{
			[Token(Token = "0x60013AD")]
			[Address(RVA = "0xDA1F1C", Offset = "0xDA1F1C", VA = "0xDA1F1C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CC")]
		public SDKOutputFrame outputFrame
		{
			[Token(Token = "0x60013AE")]
			[Address(RVA = "0xDA1F24", Offset = "0xDA1F24", VA = "0xDA1F24")]
			get
			{
				return default(SDKOutputFrame);
			}
		}

		[Token(Token = "0x170001CD")]
		public SDKInputFrame inputFrame
		{
			[Token(Token = "0x60013AF")]
			[Address(RVA = "0xDA1F34", Offset = "0xDA1F34", VA = "0xDA1F34")]
			get
			{
				return default(SDKInputFrame);
			}
		}

		[Token(Token = "0x170001CE")]
		public SDKResolution resolution
		{
			[Token(Token = "0x60013B0")]
			[Address(RVA = "0xDA1F44", Offset = "0xDA1F44", VA = "0xDA1F44")]
			get
			{
				return default(SDKResolution);
			}
		}

		[Token(Token = "0x170001CF")]
		public Camera cameraInstance
		{
			[Token(Token = "0x60013B1")]
			[Address(RVA = "0xDA1F4C", Offset = "0xDA1F4C", VA = "0xDA1F4C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D0")]
		public Camera cameraReference
		{
			[Token(Token = "0x60013B2")]
			[Address(RVA = "0xDA1F54", Offset = "0xDA1F54", VA = "0xDA1F54")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D1")]
		public Camera hmdCamera
		{
			[Token(Token = "0x60013B3")]
			[Address(RVA = "0xDA1FE0", Offset = "0xDA1FE0", VA = "0xDA1FE0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D2")]
		public Transform stage
		{
			[Token(Token = "0x60013B4")]
			[Address(RVA = "0xDA1FFC", Offset = "0xDA1FFC", VA = "0xDA1FFC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D3")]
		public Transform stageTransform
		{
			[Token(Token = "0x60013B5")]
			[Address(RVA = "0xDA2014", Offset = "0xDA2014", VA = "0xDA2014")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D4")]
		public Matrix4x4 stageLocalToWorldMatrix
		{
			[Token(Token = "0x60013B6")]
			[Address(RVA = "0xDA2030", Offset = "0xDA2030", VA = "0xDA2030")]
			get
			{
				return default(Matrix4x4);
			}
		}

		[Token(Token = "0x170001D5")]
		public Matrix4x4 localToWorldMatrix
		{
			[Token(Token = "0x60013B7")]
			[Address(RVA = "0xDA2128", Offset = "0xDA2128", VA = "0xDA2128")]
			get
			{
				return default(Matrix4x4);
			}
		}

		[Token(Token = "0x170001D6")]
		public int spectatorLayerMask
		{
			[Token(Token = "0x60013B8")]
			[Address(RVA = "0xDA21EC", Offset = "0xDA21EC", VA = "0xDA21EC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001D7")]
		public bool disableStandardAssets
		{
			[Token(Token = "0x60013B9")]
			[Address(RVA = "0xDA220C", Offset = "0xDA220C", VA = "0xDA220C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001D8")]
		public bool canSetPose
		{
			[Token(Token = "0x60013BA")]
			[Address(RVA = "0xDA2228", Offset = "0xDA2228", VA = "0xDA2228")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001D9")]
		private bool useDeferredRendering
		{
			[Token(Token = "0x60013D0")]
			[Address(RVA = "0xDA39A4", Offset = "0xDA39A4", VA = "0xDA39A4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001DA")]
		private bool interlacedRendering
		{
			[Token(Token = "0x60013D1")]
			[Address(RVA = "0xDA39F0", Offset = "0xDA39F0", VA = "0xDA39F0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001DB")]
		private bool canRenderBackground
		{
			[Token(Token = "0x60013D2")]
			[Address(RVA = "0xDA39FC", Offset = "0xDA39FC", VA = "0xDA39FC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001DC")]
		private bool canRenderForeground
		{
			[Token(Token = "0x60013D3")]
			[Address(RVA = "0xDA3A88", Offset = "0xDA3A88", VA = "0xDA3A88")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001DD")]
		private bool canRenderOptimized
		{
			[Token(Token = "0x60013D4")]
			[Address(RVA = "0xDA3B28", Offset = "0xDA3B28", VA = "0xDA3B28")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60013BB")]
		[Address(RVA = "0xDA2248", Offset = "0xDA2248", VA = "0xDA2248")]
		public bool SetPose(Vector3 position, Quaternion rotation, float verticalFieldOfView = 60f, bool useLocalSpace = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60013BC")]
		[Address(RVA = "0xDA26EC", Offset = "0xDA26EC", VA = "0xDA26EC")]
		public void SetGroundPlane(float distance, Vector3 normal, bool useLocalSpace = false)
		{
		}

		[Token(Token = "0x60013BD")]
		[Address(RVA = "0xDA2880", Offset = "0xDA2880", VA = "0xDA2880")]
		public void SetGroundPlane(Plane plane, bool useLocalSpace = false)
		{
		}

		[Token(Token = "0x60013BE")]
		[Address(RVA = "0xDA28F8", Offset = "0xDA28F8", VA = "0xDA28F8")]
		public void SetGroundPlane(Transform transform, bool useLocalSpace = false)
		{
		}

		[Token(Token = "0x60013BF")]
		[Address(RVA = "0xDA2A98", Offset = "0xDA2A98", VA = "0xDA2A98")]
		private void ReleaseBridgePoseControl()
		{
		}

		[Token(Token = "0x60013C0")]
		[Address(RVA = "0xDA2B0C", Offset = "0xDA2B0C", VA = "0xDA2B0C")]
		private void UpdateBridgeResolution()
		{
		}

		[Token(Token = "0x60013C1")]
		[Address(RVA = "0xDA2B64", Offset = "0xDA2B64", VA = "0xDA2B64")]
		private void UpdateBridgeInputFrame()
		{
		}

		[Token(Token = "0x60013C2")]
		[Address(RVA = "0xDA2DA4", Offset = "0xDA2DA4", VA = "0xDA2DA4")]
		private void InvokePreRender()
		{
		}

		[Token(Token = "0x60013C3")]
		[Address(RVA = "0xDA2DDC", Offset = "0xDA2DDC", VA = "0xDA2DDC")]
		private void IvokePostRender()
		{
		}

		[Token(Token = "0x60013C4")]
		[Address(RVA = "0xDA2E14", Offset = "0xDA2E14", VA = "0xDA2E14")]
		private void InvokePreRenderBackground()
		{
		}

		[Token(Token = "0x60013C5")]
		[Address(RVA = "0xDA2E4C", Offset = "0xDA2E4C", VA = "0xDA2E4C")]
		private void InvokePostRenderBackground()
		{
		}

		[Token(Token = "0x60013C6")]
		[Address(RVA = "0xDA2E84", Offset = "0xDA2E84", VA = "0xDA2E84")]
		private void InvokePreRenderForeground()
		{
		}

		[Token(Token = "0x60013C7")]
		[Address(RVA = "0xDA2EBC", Offset = "0xDA2EBC", VA = "0xDA2EBC")]
		private void InvokePostRenderForeground()
		{
		}

		[Token(Token = "0x60013C8")]
		[Address(RVA = "0xDA2EF4", Offset = "0xDA2EF4", VA = "0xDA2EF4")]
		private void CreateBackgroundTexture()
		{
		}

		[Token(Token = "0x60013C9")]
		[Address(RVA = "0xDA3108", Offset = "0xDA3108", VA = "0xDA3108")]
		private void CreateForegroundTexture()
		{
		}

		[Token(Token = "0x60013CA")]
		[Address(RVA = "0xDA319C", Offset = "0xDA319C", VA = "0xDA319C")]
		private void CreateOptimizedTexture()
		{
		}

		[Token(Token = "0x60013CB")]
		[Address(RVA = "0xDA3230", Offset = "0xDA3230", VA = "0xDA3230")]
		private void CreateComplexClipPlaneTexture()
		{
		}

		[Token(Token = "0x60013CC")]
		[Address(RVA = "0xDA32C4", Offset = "0xDA32C4", VA = "0xDA32C4")]
		private void UpdateTextures()
		{
		}

		[Token(Token = "0x60013CD")]
		[Address(RVA = "0xDA35F8", Offset = "0xDA35F8", VA = "0xDA35F8")]
		private void SendTextureToBridge(RenderTexture texture, TEXTURE_ID id)
		{
		}

		[Token(Token = "0x60013CE")]
		[Address(RVA = "0xDA3804", Offset = "0xDA3804", VA = "0xDA3804")]
		private Material GetClipPlaneMaterial(bool debugClipPlane, bool complexClipPlane, ColorWriteMask colorWriteMask)
		{
			return null;
		}

		[Token(Token = "0x60013CF")]
		[Address(RVA = "0xDA3908", Offset = "0xDA3908", VA = "0xDA3908")]
		private Material GetGroundClipPlaneMaterial(bool debugClipPlane, ColorWriteMask colorWriteMask)
		{
			return null;
		}

		[Token(Token = "0x60013D5")]
		[Address(RVA = "0xDA03D8", Offset = "0xDA03D8", VA = "0xDA03D8")]
		public SDKRender(LIV liv)
		{
		}

		[Token(Token = "0x60013D6")]
		[Address(RVA = "0xDA0C8C", Offset = "0xDA0C8C", VA = "0xDA0C8C")]
		public void Render()
		{
		}

		[Token(Token = "0x60013D7")]
		[Address(RVA = "0xDA4630", Offset = "0xDA4630", VA = "0xDA4630")]
		private void RenderBackground()
		{
		}

		[Token(Token = "0x60013D8")]
		[Address(RVA = "0xDA4930", Offset = "0xDA4930", VA = "0xDA4930")]
		private void RenderForeground()
		{
		}

		[Token(Token = "0x60013D9")]
		[Address(RVA = "0xDA5360", Offset = "0xDA5360", VA = "0xDA5360")]
		private void RenderOptimized()
		{
		}

		[Token(Token = "0x60013DA")]
		[Address(RVA = "0xDA3C00", Offset = "0xDA3C00", VA = "0xDA3C00")]
		private void CreateAssets()
		{
		}

		[Token(Token = "0x60013DB")]
		[Address(RVA = "0xDA6C5C", Offset = "0xDA6C5C", VA = "0xDA6C5C")]
		private void DestroyAssets()
		{
		}

		[Token(Token = "0x60013DC")]
		[Address(RVA = "0xDA05C0", Offset = "0xDA05C0", VA = "0xDA05C0", Slot = "4")]
		public void Dispose()
		{
		}
	}
	[Token(Token = "0x2000321")]
	internal static class SDKShaders
	{
		[Token(Token = "0x4001495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int LIV_COLOR_MASK;

		[Token(Token = "0x4001496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static readonly int LIV_TESSELLATION_PROPERTY;

		[Token(Token = "0x4001497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly int LIV_CLIP_PLANE_HEIGHT_MAP_PROPERTY;

		[Token(Token = "0x4001498")]
		public const string LIV_MR_FOREGROUND_KEYWORD = "LIV_MR_FOREGROUND";

		[Token(Token = "0x4001499")]
		public const string LIV_MR_BACKGROUND_KEYWORD = "LIV_MR_BACKGROUND";

		[Token(Token = "0x400149A")]
		public const string LIV_MR_KEYWORD = "LIV_MR";

		[Token(Token = "0x400149B")]
		public const string LIV_CLIP_PLANE_SIMPLE_SHADER = "Hidden/LIV_ClipPlaneSimple";

		[Token(Token = "0x400149C")]
		public const string LIV_CLIP_PLANE_SIMPLE_DEBUG_SHADER = "Hidden/LIV_ClipPlaneSimpleDebug";

		[Token(Token = "0x400149D")]
		public const string LIV_CLIP_PLANE_COMPLEX_SHADER = "Hidden/LIV_ClipPlaneComplex";

		[Token(Token = "0x400149E")]
		public const string LIV_CLIP_PLANE_COMPLEX_DEBUG_SHADER = "Hidden/LIV_ClipPlaneComplexDebug";

		[Token(Token = "0x400149F")]
		public const string LIV_WRITE_OPAQUE_TO_ALPHA_SHADER = "Hidden/LIV_WriteOpaqueToAlpha";

		[Token(Token = "0x40014A0")]
		public const string LIV_COMBINE_ALPHA_SHADER = "Hidden/LIV_CombineAlpha";

		[Token(Token = "0x40014A1")]
		public const string LIV_WRITE_SHADER = "Hidden/LIV_Write";

		[Token(Token = "0x40014A2")]
		public const string LIV_FORCE_FORWARD_RENDERING_SHADER = "Hidden/LIV_ForceForwardRendering";

		[Token(Token = "0x60013DD")]
		[Address(RVA = "0xDA5CEC", Offset = "0xDA5CEC", VA = "0xDA5CEC")]
		public static void StartRendering()
		{
		}

		[Token(Token = "0x60013DE")]
		[Address(RVA = "0xDA5DB8", Offset = "0xDA5DB8", VA = "0xDA5DB8")]
		public static void StopRendering()
		{
		}

		[Token(Token = "0x60013DF")]
		[Address(RVA = "0xDA6304", Offset = "0xDA6304", VA = "0xDA6304")]
		public static void StartForegroundRendering()
		{
		}

		[Token(Token = "0x60013E0")]
		[Address(RVA = "0xDA6348", Offset = "0xDA6348", VA = "0xDA6348")]
		public static void StopForegroundRendering()
		{
		}

		[Token(Token = "0x60013E1")]
		[Address(RVA = "0xDA5D30", Offset = "0xDA5D30", VA = "0xDA5D30")]
		public static void StartBackgroundRendering()
		{
		}

		[Token(Token = "0x60013E2")]
		[Address(RVA = "0xDA5D74", Offset = "0xDA5D74", VA = "0xDA5D74")]
		public static void StopBackgroundRendering()
		{
		}
	}
	[Token(Token = "0x2000322")]
	public struct SDKConstants
	{
		[Token(Token = "0x40014A3")]
		public const string SDK_ID = "Z2Y4P28IQADO3CDCA2NMGIJXWWX1C7JR";

		[Token(Token = "0x40014A4")]
		public const string SDK_VERSION = "1.5.4";

		[Token(Token = "0x40014A5")]
		public const string ENGINE_NAME = "unity";
	}
	[Token(Token = "0x2000323")]
	public enum PRIORITY : sbyte
	{
		[Token(Token = "0x40014A7")]
		NONE = 0,
		[Token(Token = "0x40014A8")]
		GAME = 63
	}
	[Token(Token = "0x2000324")]
	[Flags]
	public enum FEATURES : ulong
	{
		[Token(Token = "0x40014AA")]
		NONE = 0uL,
		[Token(Token = "0x40014AB")]
		BACKGROUND_RENDER = 1uL,
		[Token(Token = "0x40014AC")]
		FOREGROUND_RENDER = 2uL,
		[Token(Token = "0x40014AD")]
		COMPLEX_CLIP_PLANE = 4uL,
		[Token(Token = "0x40014AE")]
		BACKGROUND_DEPTH_RENDER = 8uL,
		[Token(Token = "0x40014AF")]
		OVERRIDE_POST_PROCESSING = 0x10uL,
		[Token(Token = "0x40014B0")]
		FIX_FOREGROUND_ALPHA = 0x20uL,
		[Token(Token = "0x40014B1")]
		GROUND_CLIP_PLANE = 0x40uL,
		[Token(Token = "0x40014B2")]
		RELEASE_CONTROL = 0x8000uL,
		[Token(Token = "0x40014B3")]
		OPTIMIZED_RENDER = 0x10000000uL,
		[Token(Token = "0x40014B4")]
		INTERLACED_RENDER = 0x20000000uL,
		[Token(Token = "0x40014B5")]
		DEBUG_CLIP_PLANE = 0x1000000000000uL
	}
	[Token(Token = "0x2000325")]
	public enum TEXTURE_ID : uint
	{
		[Token(Token = "0x40014B7")]
		UNDEFINED = 0u,
		[Token(Token = "0x40014B8")]
		BACKGROUND_COLOR_BUFFER_ID = 10u,
		[Token(Token = "0x40014B9")]
		FOREGROUND_COLOR_BUFFER_ID = 20u,
		[Token(Token = "0x40014BA")]
		OPTIMIZED_COLOR_BUFFER_ID = 30u
	}
	[Token(Token = "0x2000326")]
	public enum TEXTURE_TYPE : uint
	{
		[Token(Token = "0x40014BC")]
		UNDEFINED,
		[Token(Token = "0x40014BD")]
		COLOR_BUFFER
	}
	[Token(Token = "0x2000327")]
	public enum TEXTURE_FORMAT : uint
	{
		[Token(Token = "0x40014BF")]
		UNDEFINED = 0u,
		[Token(Token = "0x40014C0")]
		ARGB32 = 10u
	}
	[Token(Token = "0x2000328")]
	public enum TEXTURE_DEVICE : uint
	{
		[Token(Token = "0x40014C2")]
		UNDEFINED,
		[Token(Token = "0x40014C3")]
		RAW,
		[Token(Token = "0x40014C4")]
		DIRECTX,
		[Token(Token = "0x40014C5")]
		OPENGL,
		[Token(Token = "0x40014C6")]
		VULKAN,
		[Token(Token = "0x40014C7")]
		METAL
	}
	[Token(Token = "0x2000329")]
	public enum TEXTURE_COLOR_SPACE : uint
	{
		[Token(Token = "0x40014C9")]
		UNDEFINED,
		[Token(Token = "0x40014CA")]
		LINEAR,
		[Token(Token = "0x40014CB")]
		SRGB
	}
	[Token(Token = "0x200032A")]
	public enum RENDERING_PIPELINE : uint
	{
		[Token(Token = "0x40014CD")]
		UNDEFINED,
		[Token(Token = "0x40014CE")]
		FORWARD,
		[Token(Token = "0x40014CF")]
		DEFERRED,
		[Token(Token = "0x40014D0")]
		VERTEX_LIT,
		[Token(Token = "0x40014D1")]
		UNIVERSAL,
		[Token(Token = "0x40014D2")]
		HIGH_DEFINITION
	}
	[Token(Token = "0x200032B")]
	public struct SDKResolution
	{
		[Token(Token = "0x40014D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int width;

		[Token(Token = "0x40014D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int height;

		[Token(Token = "0x170001DE")]
		public static SDKResolution zero
		{
			[Token(Token = "0x60013E4")]
			[Address(RVA = "0xDA1F14", Offset = "0xDA1F14", VA = "0xDA1F14")]
			get
			{
				return default(SDKResolution);
			}
		}

		[Token(Token = "0x60013E5")]
		[Address(RVA = "0xDA6EE0", Offset = "0xDA6EE0", VA = "0xDA6EE0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200032C")]
	public struct SDKVector3
	{
		[Token(Token = "0x40014D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x40014D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x40014D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float z;

		[Token(Token = "0x170001DF")]
		public static SDKVector3 zero
		{
			[Token(Token = "0x60013E6")]
			[Address(RVA = "0xDA6F80", Offset = "0xDA6F80", VA = "0xDA6F80")]
			get
			{
				return default(SDKVector3);
			}
		}

		[Token(Token = "0x170001E0")]
		public static SDKVector3 one
		{
			[Token(Token = "0x60013E7")]
			[Address(RVA = "0xDA6F90", Offset = "0xDA6F90", VA = "0xDA6F90")]
			get
			{
				return default(SDKVector3);
			}
		}

		[Token(Token = "0x170001E1")]
		public static SDKVector3 forward
		{
			[Token(Token = "0x60013E8")]
			[Address(RVA = "0xDA6FA0", Offset = "0xDA6FA0", VA = "0xDA6FA0")]
			get
			{
				return default(SDKVector3);
			}
		}

		[Token(Token = "0x170001E2")]
		public static SDKVector3 up
		{
			[Token(Token = "0x60013E9")]
			[Address(RVA = "0xDA6FB0", Offset = "0xDA6FB0", VA = "0xDA6FB0")]
			get
			{
				return default(SDKVector3);
			}
		}

		[Token(Token = "0x170001E3")]
		public static SDKVector3 right
		{
			[Token(Token = "0x60013EA")]
			[Address(RVA = "0xDA6FC0", Offset = "0xDA6FC0", VA = "0xDA6FC0")]
			get
			{
				return default(SDKVector3);
			}
		}

		[Token(Token = "0x60013EB")]
		[Address(RVA = "0xDA6FD0", Offset = "0xDA6FD0", VA = "0xDA6FD0")]
		public static implicit operator Vector3(SDKVector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60013EC")]
		[Address(RVA = "0xDA26A0", Offset = "0xDA26A0", VA = "0xDA26A0")]
		public static implicit operator SDKVector3(Vector3 v)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x60013ED")]
		[Address(RVA = "0xDA6FD4", Offset = "0xDA6FD4", VA = "0xDA6FD4")]
		public static SDKVector3 operator +(SDKVector3 lhs, SDKVector3 rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x60013EE")]
		[Address(RVA = "0xDA6FE4", Offset = "0xDA6FE4", VA = "0xDA6FE4")]
		public static SDKVector3 operator -(SDKVector3 lhs, SDKVector3 rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x60013EF")]
		[Address(RVA = "0xDA6FF4", Offset = "0xDA6FF4", VA = "0xDA6FF4")]
		public static SDKVector3 operator *(SDKVector3 lhs, SDKVector3 rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x60013F0")]
		[Address(RVA = "0xDA7004", Offset = "0xDA7004", VA = "0xDA7004")]
		public static SDKVector3 operator *(SDKVector3 lhs, float rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x60013F1")]
		[Address(RVA = "0xDA7014", Offset = "0xDA7014", VA = "0xDA7014", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200032D")]
	public struct SDKQuaternion
	{
		[Token(Token = "0x40014D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x40014D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x40014DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float z;

		[Token(Token = "0x40014DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float w;

		[Token(Token = "0x170001E4")]
		public static SDKQuaternion identity
		{
			[Token(Token = "0x60013F2")]
			[Address(RVA = "0xDA70D8", Offset = "0xDA70D8", VA = "0xDA70D8")]
			get
			{
				return default(SDKQuaternion);
			}
		}

		[Token(Token = "0x60013F3")]
		[Address(RVA = "0xDA70EC", Offset = "0xDA70EC", VA = "0xDA70EC")]
		public static implicit operator Quaternion(SDKQuaternion v)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60013F4")]
		[Address(RVA = "0xDA26A4", Offset = "0xDA26A4", VA = "0xDA26A4")]
		public static implicit operator SDKQuaternion(Quaternion v)
		{
			return default(SDKQuaternion);
		}

		[Token(Token = "0x60013F5")]
		[Address(RVA = "0xDA70F0", Offset = "0xDA70F0", VA = "0xDA70F0")]
		public static SDKQuaternion Euler(float pitch, float yaw, float roll)
		{
			return default(SDKQuaternion);
		}

		[Token(Token = "0x60013F6")]
		[Address(RVA = "0xDA71A4", Offset = "0xDA71A4", VA = "0xDA71A4")]
		public static SDKQuaternion operator *(SDKQuaternion lhs, SDKQuaternion rhs)
		{
			return default(SDKQuaternion);
		}

		[Token(Token = "0x60013F7")]
		[Address(RVA = "0xDA7218", Offset = "0xDA7218", VA = "0xDA7218")]
		public static SDKVector3 operator *(SDKQuaternion lhs, SDKVector3 rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x60013F8")]
		[Address(RVA = "0xDA72BC", Offset = "0xDA72BC", VA = "0xDA72BC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200032E")]
	public struct SDKMatrix4x4
	{
		[Token(Token = "0x40014DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m00;

		[Token(Token = "0x40014DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m01;

		[Token(Token = "0x40014DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m02;

		[Token(Token = "0x40014DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float m03;

		[Token(Token = "0x40014E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float m10;

		[Token(Token = "0x40014E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float m11;

		[Token(Token = "0x40014E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m12;

		[Token(Token = "0x40014E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m13;

		[Token(Token = "0x40014E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m20;

		[Token(Token = "0x40014E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m21;

		[Token(Token = "0x40014E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m22;

		[Token(Token = "0x40014E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m23;

		[Token(Token = "0x40014E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m30;

		[Token(Token = "0x40014E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float m31;

		[Token(Token = "0x40014EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m32;

		[Token(Token = "0x40014EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float m33;

		[Token(Token = "0x170001E5")]
		public static SDKMatrix4x4 identity
		{
			[Token(Token = "0x60013F9")]
			[Address(RVA = "0xDA7498", Offset = "0xDA7498", VA = "0xDA7498")]
			get
			{
				return default(SDKMatrix4x4);
			}
		}

		[Token(Token = "0x60013FA")]
		[Address(RVA = "0xDA6034", Offset = "0xDA6034", VA = "0xDA6034")]
		public static implicit operator Matrix4x4(SDKMatrix4x4 v)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x60013FB")]
		[Address(RVA = "0xDA26A8", Offset = "0xDA26A8", VA = "0xDA26A8")]
		public static implicit operator SDKMatrix4x4(Matrix4x4 v)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x60013FC")]
		[Address(RVA = "0xDA74C4", Offset = "0xDA74C4", VA = "0xDA74C4")]
		public static SDKMatrix4x4 Perspective(float vFov, float aspect, float zNear, float zFar)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x60013FD")]
		[Address(RVA = "0xDA7570", Offset = "0xDA7570", VA = "0xDA7570")]
		public static SDKMatrix4x4 operator *(SDKMatrix4x4 lhs, SDKMatrix4x4 rhs)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x60013FE")]
		[Address(RVA = "0xDA767C", Offset = "0xDA767C", VA = "0xDA767C")]
		public static SDKVector3 operator *(SDKMatrix4x4 lhs, SDKVector3 rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x60013FF")]
		[Address(RVA = "0xDA76D4", Offset = "0xDA76D4", VA = "0xDA76D4")]
		public static SDKMatrix4x4 Translate(SDKVector3 value)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x6001400")]
		[Address(RVA = "0xDA7710", Offset = "0xDA7710", VA = "0xDA7710")]
		public static SDKMatrix4x4 Rotate(SDKQuaternion value)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x6001401")]
		[Address(RVA = "0xDA77A4", Offset = "0xDA77A4", VA = "0xDA77A4")]
		public static SDKMatrix4x4 Scale(SDKVector3 value)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x6001402")]
		[Address(RVA = "0xDA77D0", Offset = "0xDA77D0", VA = "0xDA77D0")]
		public static SDKMatrix4x4 TRS(SDKVector3 translation, SDKQuaternion rotation, SDKVector3 scale)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x6001403")]
		[Address(RVA = "0xDA78B4", Offset = "0xDA78B4", VA = "0xDA78B4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200032F")]
	public struct SDKPlane
	{
		[Token(Token = "0x40014EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float distance;

		[Token(Token = "0x40014ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public SDKVector3 normal;

		[Token(Token = "0x170001E6")]
		public static SDKPlane empty
		{
			[Token(Token = "0x6001405")]
			[Address(RVA = "0xDA7E7C", Offset = "0xDA7E7C", VA = "0xDA7E7C")]
			get
			{
				return default(SDKPlane);
			}
		}

		[Token(Token = "0x6001404")]
		[Address(RVA = "0xDA7E20", Offset = "0xDA7E20", VA = "0xDA7E20")]
		public static implicit operator SDKPlane(Plane v)
		{
			return default(SDKPlane);
		}

		[Token(Token = "0x6001406")]
		[Address(RVA = "0xDA7E90", Offset = "0xDA7E90", VA = "0xDA7E90", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000330")]
	public struct SDKPriority
	{
		[Token(Token = "0x40014EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public sbyte pose;

		[Token(Token = "0x40014EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public sbyte clipPlane;

		[Token(Token = "0x40014F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public sbyte stage;

		[Token(Token = "0x40014F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
		public sbyte resolution;

		[Token(Token = "0x40014F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public sbyte feature;

		[Token(Token = "0x40014F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		public sbyte nearFarAdjustment;

		[Token(Token = "0x40014F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
		public sbyte groundPlane;

		[Token(Token = "0x40014F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7")]
		public sbyte reserved2;

		[Token(Token = "0x170001E7")]
		public static SDKPriority empty
		{
			[Token(Token = "0x6001407")]
			[Address(RVA = "0xDA7F54", Offset = "0xDA7F54", VA = "0xDA7F54")]
			get
			{
				return default(SDKPriority);
			}
		}

		[Token(Token = "0x6001408")]
		[Address(RVA = "0xDA7F60", Offset = "0xDA7F60", VA = "0xDA7F60", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000331")]
	public struct SDKApplicationOutput
	{
		[Token(Token = "0x40014F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FEATURES supportedFeatures;

		[Token(Token = "0x40014F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string engineName;

		[Token(Token = "0x40014F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string engineVersion;

		[Token(Token = "0x40014F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string applicationName;

		[Token(Token = "0x40014FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string applicationVersion;

		[Token(Token = "0x40014FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string xrDeviceName;

		[Token(Token = "0x40014FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string graphicsAPI;

		[Token(Token = "0x40014FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string sdkID;

		[Token(Token = "0x40014FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string sdkVersion;

		[Token(Token = "0x170001E8")]
		public static SDKApplicationOutput empty
		{
			[Token(Token = "0x6001409")]
			[Address(RVA = "0xDA05F8", Offset = "0xDA05F8", VA = "0xDA05F8")]
			get
			{
				return default(SDKApplicationOutput);
			}
		}

		[Token(Token = "0x600140A")]
		[Address(RVA = "0xDA8220", Offset = "0xDA8220", VA = "0xDA8220", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000332")]
	public struct SDKInputFrame
	{
		[Token(Token = "0x40014FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKPose pose;

		[Token(Token = "0x4001500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public SDKClipPlane clipPlane;

		[Token(Token = "0x4001501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public SDKTransform stageTransform;

		[Token(Token = "0x4001502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public FEATURES features;

		[Token(Token = "0x4001503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public SDKClipPlane groundClipPlane;

		[Token(Token = "0x4001504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public ulong frameid;

		[Token(Token = "0x4001505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public ulong referenceframe;

		[Token(Token = "0x4001506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public SDKPriority priority;

		[Token(Token = "0x170001E9")]
		public static SDKInputFrame empty
		{
			[Token(Token = "0x600140B")]
			[Address(RVA = "0xDA15B0", Offset = "0xDA15B0", VA = "0xDA15B0")]
			get
			{
				return default(SDKInputFrame);
			}
		}

		[Token(Token = "0x600140C")]
		[Address(RVA = "0xDA2AFC", Offset = "0xDA2AFC", VA = "0xDA2AFC")]
		public void ReleaseControl()
		{
		}

		[Token(Token = "0x600140D")]
		[Address(RVA = "0xDA2D20", Offset = "0xDA2D20", VA = "0xDA2D20")]
		public void ObtainControl()
		{
		}

		[Token(Token = "0x600140E")]
		[Address(RVA = "0xDA8518", Offset = "0xDA8518", VA = "0xDA8518", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000333")]
	public struct SDKOutputFrame
	{
		[Token(Token = "0x4001507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public RENDERING_PIPELINE renderingPipeline;

		[Token(Token = "0x4001508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public SDKTrackedSpace trackedSpace;

		[Token(Token = "0x170001EA")]
		public static SDKOutputFrame empty
		{
			[Token(Token = "0x600140F")]
			[Address(RVA = "0xDA3BA0", Offset = "0xDA3BA0", VA = "0xDA3BA0")]
			get
			{
				return default(SDKOutputFrame);
			}
		}

		[Token(Token = "0x6001410")]
		[Address(RVA = "0xDA8918", Offset = "0xDA8918", VA = "0xDA8918", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000334")]
	public struct SDKTrackedSpace
	{
		[Token(Token = "0x4001509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKVector3 trackedSpaceWorldPosition;

		[Token(Token = "0x400150A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public SDKQuaternion trackedSpaceWorldRotation;

		[Token(Token = "0x400150B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public SDKVector3 trackedSpaceLocalScale;

		[Token(Token = "0x400150C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SDKMatrix4x4 trackedSpaceLocalToWorldMatrix;

		[Token(Token = "0x400150D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public SDKMatrix4x4 trackedSpaceWorldToLocalMatrix;

		[Token(Token = "0x170001EB")]
		public static SDKTrackedSpace empty
		{
			[Token(Token = "0x6001411")]
			[Address(RVA = "0xDA88B4", Offset = "0xDA88B4", VA = "0xDA88B4")]
			get
			{
				return default(SDKTrackedSpace);
			}
		}

		[Token(Token = "0x6001412")]
		[Address(RVA = "0xDA89DC", Offset = "0xDA89DC", VA = "0xDA89DC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000335")]
	public struct SDKTexture
	{
		[Token(Token = "0x400150E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TEXTURE_ID id;

		[Token(Token = "0x400150F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr texturePtr;

		[Token(Token = "0x4001510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntPtr SharedHandle;

		[Token(Token = "0x4001511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TEXTURE_DEVICE device;

		[Token(Token = "0x4001512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int dummy;

		[Token(Token = "0x4001513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TEXTURE_TYPE type;

		[Token(Token = "0x4001514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public TEXTURE_FORMAT format;

		[Token(Token = "0x4001515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TEXTURE_COLOR_SPACE colorSpace;

		[Token(Token = "0x4001516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int width;

		[Token(Token = "0x4001517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int height;

		[Token(Token = "0x170001EC")]
		public static SDKTexture empty
		{
			[Token(Token = "0x6001413")]
			[Address(RVA = "0xDA18C8", Offset = "0xDA18C8", VA = "0xDA18C8")]
			get
			{
				return default(SDKTexture);
			}
		}

		[Token(Token = "0x6001414")]
		[Address(RVA = "0xDA8C5C", Offset = "0xDA8C5C", VA = "0xDA8C5C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000336")]
	public struct SDKTransform
	{
		[Token(Token = "0x4001518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKVector3 localPosition;

		[Token(Token = "0x4001519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public SDKQuaternion localRotation;

		[Token(Token = "0x400151A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public SDKVector3 localScale;

		[Token(Token = "0x170001ED")]
		public static SDKTransform empty
		{
			[Token(Token = "0x6001415")]
			[Address(RVA = "0xDA8504", Offset = "0xDA8504", VA = "0xDA8504")]
			get
			{
				return default(SDKTransform);
			}
		}

		[Token(Token = "0x6001416")]
		[Address(RVA = "0xDA9078", Offset = "0xDA9078", VA = "0xDA9078", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000337")]
	public struct SDKClipPlane
	{
		[Token(Token = "0x400151B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKMatrix4x4 transform;

		[Token(Token = "0x400151C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int width;

		[Token(Token = "0x400151D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int height;

		[Token(Token = "0x400151E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float tesselation;

		[Token(Token = "0x170001EE")]
		public static SDKClipPlane empty
		{
			[Token(Token = "0x6001417")]
			[Address(RVA = "0xDA84D0", Offset = "0xDA84D0", VA = "0xDA84D0")]
			get
			{
				return default(SDKClipPlane);
			}
		}

		[Token(Token = "0x6001418")]
		[Address(RVA = "0xDA9160", Offset = "0xDA9160", VA = "0xDA9160", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000338")]
	public struct SDKControllerState
	{
		[Token(Token = "0x400151F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKVector3 hmdposition;

		[Token(Token = "0x4001520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public SDKQuaternion hmdrotation;

		[Token(Token = "0x4001521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public SDKVector3 calibrationcameraposition;

		[Token(Token = "0x4001522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SDKQuaternion calibrationcamerarotation;

		[Token(Token = "0x4001523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public SDKVector3 cameraposition;

		[Token(Token = "0x4001524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public SDKQuaternion camerarotation;

		[Token(Token = "0x4001525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public SDKVector3 leftposition;

		[Token(Token = "0x4001526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public SDKQuaternion leftrotation;

		[Token(Token = "0x4001527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public SDKVector3 rightposition;

		[Token(Token = "0x4001528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public SDKQuaternion rightrotation;

		[Token(Token = "0x170001EF")]
		public static SDKControllerState empty
		{
			[Token(Token = "0x6001419")]
			[Address(RVA = "0xDA936C", Offset = "0xDA936C", VA = "0xDA936C")]
			get
			{
				return default(SDKControllerState);
			}
		}

		[Token(Token = "0x600141A")]
		[Address(RVA = "0xDA93B8", Offset = "0xDA93B8", VA = "0xDA93B8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000339")]
	public struct SDKPose
	{
		[Token(Token = "0x4001529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKMatrix4x4 projectionMatrix;

		[Token(Token = "0x400152A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public SDKVector3 localPosition;

		[Token(Token = "0x400152B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public SDKQuaternion localRotation;

		[Token(Token = "0x400152C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float verticalFieldOfView;

		[Token(Token = "0x400152D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float nearClipPlane;

		[Token(Token = "0x400152E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float farClipPlane;

		[Token(Token = "0x400152F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int unused0;

		[Token(Token = "0x4001530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public int unused1;

		[Token(Token = "0x170001F0")]
		public static SDKPose empty
		{
			[Token(Token = "0x600141B")]
			[Address(RVA = "0xDA2D34", Offset = "0xDA2D34", VA = "0xDA2D34")]
			get
			{
				return default(SDKPose);
			}
		}

		[Token(Token = "0x600141C")]
		[Address(RVA = "0xDA9798", Offset = "0xDA9798", VA = "0xDA9798", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200033A")]
	public class SDKPass : ScriptableRenderPass
	{
		[Token(Token = "0x4001531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public CommandBuffer commandBuffer;

		[Token(Token = "0x600141D")]
		[Address(RVA = "0xDA9A58", Offset = "0xDA9A58", VA = "0xDA9A58", Slot = "9")]
		public override void Execute(ScriptableRenderContext context, ref RenderingData renderingData)
		{
		}

		[Token(Token = "0x600141E")]
		[Address(RVA = "0xDA6C54", Offset = "0xDA6C54", VA = "0xDA6C54")]
		public SDKPass()
		{
		}
	}
	[Token(Token = "0x200033B")]
	public class SDKUniversalRenderFeature : ScriptableRendererFeature
	{
		[Token(Token = "0x4001532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<SDKPass> passes;

		[Token(Token = "0x600141F")]
		[Address(RVA = "0xDA5C14", Offset = "0xDA5C14", VA = "0xDA5C14")]
		public static void AddPass(SDKPass pass)
		{
		}

		[Token(Token = "0x6001420")]
		[Address(RVA = "0xDA5DFC", Offset = "0xDA5DFC", VA = "0xDA5DFC")]
		public static void ClearPasses()
		{
		}

		[Token(Token = "0x6001421")]
		[Address(RVA = "0xDA9A78", Offset = "0xDA9A78", VA = "0xDA9A78", Slot = "5")]
		public override void Create()
		{
		}

		[Token(Token = "0x6001422")]
		[Address(RVA = "0xDA9A7C", Offset = "0xDA9A7C", VA = "0xDA9A7C", Slot = "7")]
		public override void AddRenderPasses(ScriptableRenderer renderer, ref RenderingData renderingData)
		{
		}

		[Token(Token = "0x6001423")]
		[Address(RVA = "0xDA9B88", Offset = "0xDA9B88", VA = "0xDA9B88")]
		public SDKUniversalRenderFeature()
		{
		}
	}
	[Token(Token = "0x200033C")]
	public static class SDKUtils
	{
		[Token(Token = "0x170001F1")]
		public static TEXTURE_COLOR_SPACE GetDefaultColorSpace
		{
			[Token(Token = "0x6001427")]
			[Address(RVA = "0xDA9C40", Offset = "0xDA9C40", VA = "0xDA9C40")]
			get
			{
				return default(TEXTURE_COLOR_SPACE);
			}
		}

		[Token(Token = "0x6001425")]
		[Address(RVA = "0xDA6798", Offset = "0xDA6798", VA = "0xDA6798")]
		public static void CreateClipPlane(Mesh mesh, int resX, int resY, bool useQuads, float skirtLength)
		{
		}

		[Token(Token = "0x6001426")]
		[Address(RVA = "0xDA9C28", Offset = "0xDA9C28", VA = "0xDA9C28")]
		public static RenderTextureReadWrite GetReadWriteFromColorSpace(TEXTURE_COLOR_SPACE colorSpace)
		{
			return default(RenderTextureReadWrite);
		}

		[Token(Token = "0x6001428")]
		[Address(RVA = "0xDA3778", Offset = "0xDA3778", VA = "0xDA3778")]
		public static TEXTURE_COLOR_SPACE GetColorSpace(RenderTexture renderTexture)
		{
			return default(TEXTURE_COLOR_SPACE);
		}

		[Token(Token = "0x6001429")]
		[Address(RVA = "0xDA9C6C", Offset = "0xDA9C6C", VA = "0xDA9C6C")]
		public static RENDERING_PIPELINE GetRenderingPipeline(RenderingPath renderingPath)
		{
			return default(RENDERING_PIPELINE);
		}

		[Token(Token = "0x600142A")]
		[Address(RVA = "0xDA3714", Offset = "0xDA3714", VA = "0xDA3714")]
		public static TEXTURE_DEVICE GetDevice()
		{
			return default(TEXTURE_DEVICE);
		}

		[Token(Token = "0x600142B")]
		[Address(RVA = "0xDA0948", Offset = "0xDA0948", VA = "0xDA0948")]
		public static bool ContainsFlag(ulong flags, ulong flag)
		{
			return default(bool);
		}

		[Token(Token = "0x600142C")]
		[Address(RVA = "0xD9F6CC", Offset = "0xD9F6CC", VA = "0xD9F6CC")]
		public static ulong SetFlag(ulong flags, ulong flag, bool enabled)
		{
			return default(ulong);
		}

		[Token(Token = "0x600142D")]
		[Address(RVA = "0xDA9C8C", Offset = "0xDA9C8C", VA = "0xDA9C8C")]
		public static void GetCameraPositionAndRotation(SDKPose pose, Matrix4x4 originLocalToWorldMatrix, out Vector3 position, out Quaternion rotation)
		{
		}

		[Token(Token = "0x600142E")]
		[Address(RVA = "0xDA6414", Offset = "0xDA6414", VA = "0xDA6414")]
		public static void CleanCameraBehaviours(Camera camera, string[] excludeBehaviours)
		{
		}

		[Token(Token = "0x600142F")]
		[Address(RVA = "0xDA59C8", Offset = "0xDA59C8", VA = "0xDA59C8")]
		public static void SetCamera(Camera camera, Transform cameraTransform, SDKInputFrame inputFrame, Matrix4x4 originLocalToWorldMatrix, int layerMask)
		{
		}

		[Token(Token = "0x6001430")]
		[Address(RVA = "0xDA253C", Offset = "0xDA253C", VA = "0xDA253C")]
		public static Quaternion RotateQuaternionByMatrix(Matrix4x4 matrix, Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001431")]
		[Address(RVA = "0xDA9D04", Offset = "0xDA9D04", VA = "0xDA9D04")]
		public static SDKTrackedSpace GetTrackedSpace(Transform transform)
		{
			return default(SDKTrackedSpace);
		}

		[Token(Token = "0x6001432")]
		public static bool DestroyObject<T>(ref T reference) where T : UnityEngine.Object
		{
			return default(bool);
		}

		[Token(Token = "0x6001433")]
		public static bool DisposeObject<T>(ref T reference) where T : IDisposable
		{
			return default(bool);
		}

		[Token(Token = "0x6001434")]
		[Address(RVA = "0xDA2F88", Offset = "0xDA2F88", VA = "0xDA2F88")]
		public static bool CreateTexture(ref RenderTexture renderTexture, int width, int height, int depth, RenderTextureFormat format)
		{
			return default(bool);
		}

		[Token(Token = "0x6001435")]
		[Address(RVA = "0xDA3550", Offset = "0xDA3550", VA = "0xDA3550")]
		public static void DestroyTexture(ref RenderTexture _renderTexture)
		{
		}

		[Token(Token = "0x6001436")]
		[Address(RVA = "0xDA4540", Offset = "0xDA4540", VA = "0xDA4540")]
		public static void ApplyUserSpaceTransform(SDKRender render)
		{
		}

		[Token(Token = "0x6001437")]
		[Address(RVA = "0xDA58A8", Offset = "0xDA58A8", VA = "0xDA58A8")]
		public static void CreateBridgeOutputFrame(SDKRender render)
		{
		}

		[Token(Token = "0x6001438")]
		[Address(RVA = "0xDA3544", Offset = "0xDA3544", VA = "0xDA3544")]
		public static bool FeatureEnabled(FEATURES features, FEATURES feature)
		{
			return default(bool);
		}

		[Token(Token = "0x6001439")]
		[Address(RVA = "0xDA5E94", Offset = "0xDA5E94", VA = "0xDA5E94")]
		public static void DisableStandardAssets(Camera cameraInstance, ref MonoBehaviour[] behaviours, ref bool[] wasBehaviourEnabled)
		{
		}

		[Token(Token = "0x600143A")]
		[Address(RVA = "0xDA638C", Offset = "0xDA638C", VA = "0xDA638C")]
		public static void RestoreStandardAssets(ref MonoBehaviour[] behaviours, ref bool[] wasBehaviourEnabled)
		{
		}

		[Token(Token = "0x600143B")]
		[Address(RVA = "0xDA6078", Offset = "0xDA6078", VA = "0xDA6078")]
		public static void ForceForwardRendering(Camera cameraInstance, Mesh clipPlaneMesh, Material forceForwardRenderingMaterial)
		{
		}
	}
}
