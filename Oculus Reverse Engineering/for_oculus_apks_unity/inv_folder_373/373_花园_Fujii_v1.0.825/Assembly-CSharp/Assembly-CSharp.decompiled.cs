using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Linq;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Text;
using System.Threading;
using System.Xml;
using DG.Tweening;
using DG.Tweening.Core;
using DG.Tweening.Plugins.Options;
using Dreamteck.Splines;
using FMOD;
using FMOD.Studio;
using FMODUnity;
using Fuji;
using Fuji.GameMode;
using Fuji.JellyPhysics;
using Fuji.Locomotion;
using Fuji.Messages;
using Fuji.Resources;
using FunktronicLabs;
using FunktronicLabs.Collections.Generic;
using FunktronicLabs.Tasks;
using Il2CppDummyDll;
using Oculus.Platform;
using Oculus.Platform.Models;
using Oculus.Spatializer.Propagation;
using Patterns.StateMachine;
using Patterns.StateMachine.Generic;
using RTC.Base;
using RTC.Core;
using RTC.Interface;
using RTC.UI;
using RTC.UI.Themed;
using RootMotion.FinalIK;
using TMPro;
using UltimateGameTools.MeshSimplifier;
using Unity.Burst;
using Unity.Collections;
using Unity.Jobs;
using Unity.Mathematics;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Jobs;
using UnityEngine.Networking;
using UnityEngine.SceneManagement;
using UnityEngine.UI;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
public class ExplanationBox : MonoBehaviour
{
	[Token(Token = "0x6000001")]
	[Address(RVA = "0xFD9EC0", Offset = "0xFD9EC0", VA = "0xFD9EC0")]
	public void SetText(string text)
	{
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0xFD9F38", Offset = "0xFD9F38", VA = "0xFD9F38")]
	public void Appear()
	{
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0xFD9FFC", Offset = "0xFD9FFC", VA = "0xFD9FFC")]
	public void Disappear(bool instant)
	{
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0xFDA128", Offset = "0xFDA128", VA = "0xFDA128")]
	public ExplanationBox()
	{
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0xFDA130", Offset = "0xFDA130", VA = "0xFDA130")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C9D34", Offset = "0x9C9D34")]
	private void <Disappear>b__2_0()
	{
	}
}
[Token(Token = "0x2000003")]
public class PerfTestSpawnObjects : MonoBehaviour
{
	[Token(Token = "0x200043E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BA898", Offset = "0x9BA898")]
	private sealed class <DoWaitForControllers>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PerfTestSpawnObjects <>4__this;

		[Token(Token = "0x17000319")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001F42")]
			[Address(RVA = "0xEB13E0", Offset = "0xEB13E0", VA = "0xEB13E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700031A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001F44")]
			[Address(RVA = "0xEB1450", Offset = "0xEB1450", VA = "0xEB1450", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F3F")]
		[Address(RVA = "0xEB0B78", Offset = "0xEB0B78", VA = "0xEB0B78")]
		[DebuggerHidden]
		public <DoWaitForControllers>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6001F40")]
		[Address(RVA = "0xEB115C", Offset = "0xEB115C", VA = "0xEB115C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001F41")]
		[Address(RVA = "0xEB1160", Offset = "0xEB1160", VA = "0xEB1160", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F43")]
		[Address(RVA = "0xEB13E8", Offset = "0xEB13E8", VA = "0xEB13E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200043F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BA8A8", Offset = "0x9BA8A8")]
	private sealed class <DoInputSpawn>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerControllerInput input;

		[Token(Token = "0x4001319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PerfTestSpawnObjects <>4__this;

		[Token(Token = "0x400131A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <numSpawned>5__2;

		[Token(Token = "0x1700031B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001F48")]
			[Address(RVA = "0xEB10E4", Offset = "0xEB10E4", VA = "0xEB10E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700031C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001F4A")]
			[Address(RVA = "0xEB1154", Offset = "0xEB1154", VA = "0xEB1154", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F45")]
		[Address(RVA = "0xEB0C3C", Offset = "0xEB0C3C", VA = "0xEB0C3C")]
		[DebuggerHidden]
		public <DoInputSpawn>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6001F46")]
		[Address(RVA = "0xEB0C70", Offset = "0xEB0C70", VA = "0xEB0C70", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001F47")]
		[Address(RVA = "0xEB0C74", Offset = "0xEB0C74", VA = "0xEB0C74", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F49")]
		[Address(RVA = "0xEB10EC", Offset = "0xEB10EC", VA = "0xEB10EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject spawnPrefab;

	[Token(Token = "0x6000006")]
	[Address(RVA = "0xEB0AD8", Offset = "0xEB0AD8", VA = "0xEB0AD8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000007")]
	[Address(RVA = "0xEB0B04", Offset = "0xEB0B04", VA = "0xEB0B04")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9C9D44", Offset = "0x9C9D44")]
	private IEnumerator DoWaitForControllers()
	{
		return null;
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0xEB0BA4", Offset = "0xEB0BA4", VA = "0xEB0BA4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9C9DA8", Offset = "0x9C9DA8")]
	private IEnumerator DoInputSpawn(PlayerControllerInput input)
	{
		return null;
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0xEB0C68", Offset = "0xEB0C68", VA = "0xEB0C68")]
	public PerfTestSpawnObjects()
	{
	}
}
[Token(Token = "0x2000004")]
public class ActionIfNarrativeKeySet : MonoBehaviour
{
	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FujiNarrativeKey Key;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent OnEnableKeySet;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent OnEnableKeyNotSet;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9BC224", Offset = "0x9BC224")]
	public bool Synchronous;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool? wasEnabled;

	[Token(Token = "0x600000A")]
	[Address(RVA = "0xB97470", Offset = "0xB97470", VA = "0xB97470")]
	private void Awake()
	{
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0xB97508", Offset = "0xB97508", VA = "0xB97508")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0xB975A0", Offset = "0xB975A0", VA = "0xB975A0")]
	private void HandleMessage(WorldStateService.Messages.NarrativeKeySetMessage message)
	{
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0xB976A8", Offset = "0xB976A8", VA = "0xB976A8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0xB975BC", Offset = "0xB975BC", VA = "0xB975BC")]
	private void SetEnabled(bool shouldBeEnabled)
	{
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0xB97728", Offset = "0xB97728", VA = "0xB97728")]
	public ActionIfNarrativeKeySet()
	{
	}
}
[Token(Token = "0x2000005")]
public class AnimatedImageSeq : MonoBehaviour
{
	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D[] textures;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float timeForEachFrame;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float _Time;

	[Token(Token = "0x6000010")]
	[Address(RVA = "0xB99B24", Offset = "0xB99B24", VA = "0xB99B24")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0xB99B2C", Offset = "0xB99B2C", VA = "0xB99B2C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0xB99C4C", Offset = "0xB99C4C", VA = "0xB99C4C")]
	public void PlayEnterSeq(bool playSound = true)
	{
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0xB99E84", Offset = "0xB99E84", VA = "0xB99E84")]
	public void PlayExitSeq(bool playSound = true)
	{
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0xB99FE8", Offset = "0xB99FE8", VA = "0xB99FE8")]
	public AnimatedImageSeq()
	{
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0xB99FF8", Offset = "0xB99FF8", VA = "0xB99FF8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C9E0C", Offset = "0x9C9E0C")]
	private void <PlayEnterSeq>b__5_0()
	{
	}
}
[Token(Token = "0x2000006")]
public class AltitudeTracker : MonoBehaviour
{
	[Token(Token = "0x2000440")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BA8B8", Offset = "0x9BA8B8")]
	private sealed class <DoHeightTracking>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400131B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400131C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400131D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AltitudeTracker <>4__this;

		[Token(Token = "0x400131E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <yPosLastFrame>5__2;

		[Token(Token = "0x400131F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <currentHeightPercentage>5__3;

		[Token(Token = "0x4001320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <newHeightPercentage>5__4;

		[Token(Token = "0x4001321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <elapsedTime>5__5;

		[Token(Token = "0x1700031D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001F4E")]
			[Address(RVA = "0xB99720", Offset = "0xB99720", VA = "0xB99720", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700031E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001F50")]
			[Address(RVA = "0xB99790", Offset = "0xB99790", VA = "0xB99790", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F4B")]
		[Address(RVA = "0xB992D8", Offset = "0xB992D8", VA = "0xB992D8")]
		[DebuggerHidden]
		public <DoHeightTracking>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6001F4C")]
		[Address(RVA = "0xB9936C", Offset = "0xB9936C", VA = "0xB9936C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001F4D")]
		[Address(RVA = "0xB99370", Offset = "0xB99370", VA = "0xB99370", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F4F")]
		[Address(RVA = "0xB99728", Offset = "0xB99728", VA = "0xB99728", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private LoadingZoneKey _zone;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform _areaLowPoint;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform _areaHighPoint;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9BC28C", Offset = "0x9BC28C")]
	private float yPosMinChangeDelta;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Coroutine _heightTrackingCoroutine;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform _playerHeadTransform;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly float _lerpTime;

	[Token(Token = "0x6000016")]
	[Address(RVA = "0xB98B88", Offset = "0xB98B88", VA = "0xB98B88")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0xB98BFC", Offset = "0xB98BFC", VA = "0xB98BFC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0xB98E6C", Offset = "0xB98E6C", VA = "0xB98E6C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0xB98D80", Offset = "0xB98D80", VA = "0xB98D80")]
	private void OnZoneChanged(WorldStateService.Messages.ZoneChangeMessage msg)
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0xB98FA8", Offset = "0xB98FA8", VA = "0xB98FA8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9C9E1C", Offset = "0x9C9E1C")]
	private IEnumerator DoHeightTracking()
	{
		return null;
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0xB99304", Offset = "0xB99304", VA = "0xB99304")]
	public AltitudeTracker()
	{
	}
}
[Token(Token = "0x2000007")]
public class AmbientAudio : MonoBehaviour
{
	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x9BC2D0", Offset = "0x9BC2D0")]
	private Vector3 _measureWaitRange;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x9BC318", Offset = "0x9BC318")]
	private Vector3 _radialRange;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[EventRef]
	private string _fModEventName;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AudioService _audioService;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform _playerHead;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int _remainingMeasuresToWait;

	[Token(Token = "0x600001D")]
	[Address(RVA = "0xB99798", Offset = "0xB99798", VA = "0xB99798")]
	private void Awake()
	{
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0xB9983C", Offset = "0xB9983C", VA = "0xB9983C")]
	private void OnMeasureEvent(SequencerMeasureEvent ev)
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0xB99908", Offset = "0xB99908", VA = "0xB99908")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0xB99A10", Offset = "0xB99A10", VA = "0xB99A10")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0xB99B1C", Offset = "0xB99B1C", VA = "0xB99B1C")]
	public AmbientAudio()
	{
	}
}
[Token(Token = "0x2000008")]
public class PlaySfxOnEnable : MonoBehaviour
{
	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[EventRef]
	public string Event;

	[Token(Token = "0x6000022")]
	[Address(RVA = "0xEC12FC", Offset = "0xEC12FC", VA = "0xEC12FC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0xEC13C0", Offset = "0xEC13C0", VA = "0xEC13C0")]
	public PlaySfxOnEnable()
	{
	}
}
[Token(Token = "0x2000009")]
public class Biome3RaisePlatforms : MonoBehaviour, IFujiSerializable
{
	[Token(Token = "0x2000441")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BA8C8", Offset = "0x9BA8C8")]
	private sealed class <DoShowSequence>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Biome3RaisePlatforms <>4__this;

		[Token(Token = "0x4001325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x1700031F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001F54")]
			[Address(RVA = "0xB9F684", Offset = "0xB9F684", VA = "0xB9F684", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000320")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001F56")]
			[Address(RVA = "0xB9F6F4", Offset = "0xB9F6F4", VA = "0xB9F6F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F51")]
		[Address(RVA = "0xB9F138", Offset = "0xB9F138", VA = "0xB9F138")]
		[DebuggerHidden]
		public <DoShowSequence>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6001F52")]
		[Address(RVA = "0xB9F1D8", Offset = "0xB9F1D8", VA = "0xB9F1D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001F53")]
		[Address(RVA = "0xB9F1DC", Offset = "0xB9F1DC", VA = "0xB9F1DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F55")]
		[Address(RVA = "0xB9F68C", Offset = "0xB9F68C", VA = "0xB9F68C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] platforms;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3[] platformStartingLocalPos;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BC3A8", Offset = "0x9BC3A8")]
	public float DeltaStartOffsetY;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BC3E0", Offset = "0x9BC3E0")]
	public float DelayStartPlatform;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float DelayPerPlatformSpawnTimeOffset;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float PlatformMoveUpTime;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BC418", Offset = "0x9BC418")]
	public SerpentPath serpentPath;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float DelaySerpent;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool _raised;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	[EventRef]
	private string _sfxRaisePlatform;

	[Token(Token = "0x17000001")]
	[FujiSerialized]
	public bool RaisedState
	{
		[Token(Token = "0x6000024")]
		[Address(RVA = "0xB9ECE8", Offset = "0xB9ECE8", VA = "0xB9ECE8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000025")]
		[Address(RVA = "0xB9ECF0", Offset = "0xB9ECF0", VA = "0xB9ECF0")]
		set
		{
		}
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0xB9EE6C", Offset = "0xB9EE6C", VA = "0xB9EE6C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0xB9EE90", Offset = "0xB9EE90", VA = "0xB9EE90")]
	private void InitPlatformPositionsIfNeeded()
	{
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0xB9F094", Offset = "0xB9F094", VA = "0xB9F094")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0xB9F098", Offset = "0xB9F098", VA = "0xB9F098")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9C9E80", Offset = "0x9C9E80")]
	public void ShowPlatforms()
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0xB9ED24", Offset = "0xB9ED24", VA = "0xB9ED24")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9C9EB8", Offset = "0x9C9EB8")]
	public void InstantRaisePlatforms()
	{
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0xB9F0C4", Offset = "0xB9F0C4", VA = "0xB9F0C4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9C9EF0", Offset = "0x9C9EF0")]
	private IEnumerator DoShowSequence()
	{
		return null;
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0xB9F164", Offset = "0xB9F164", VA = "0xB9F164", Slot = "4")]
	public void OnPreSerialize()
	{
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0xB9F168", Offset = "0xB9F168", VA = "0xB9F168", Slot = "5")]
	public void OnPostDeserialize()
	{
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0xB9EFF4", Offset = "0xB9EFF4", VA = "0xB9EFF4")]
	private void DisablePlatforms()
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0xB9F16C", Offset = "0xB9F16C", VA = "0xB9F16C")]
	public Biome3RaisePlatforms()
	{
	}
}
[Token(Token = "0x200000A")]
public class BirthingHandGlove : MonoBehaviour
{
	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public InputHandedness Handedness;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private InteractiveCore _interactive;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[EventRef]
	private string _audioHandAppearSfx;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _done;

	[Token(Token = "0x6000030")]
	[Address(RVA = "0xBA1AE0", Offset = "0xBA1AE0", VA = "0xBA1AE0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0xBA1B7C", Offset = "0xBA1B7C", VA = "0xBA1B7C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0xBA1C94", Offset = "0xBA1C94", VA = "0xBA1C94")]
	private void HandleInteractive(PlayerControllerInput input)
	{
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0xBA20B4", Offset = "0xBA20B4", VA = "0xBA20B4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0xBA22A8", Offset = "0xBA22A8", VA = "0xBA22A8")]
	public BirthingHandGlove()
	{
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0xBA22B8", Offset = "0xBA22B8", VA = "0xBA22B8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C9F54", Offset = "0x9C9F54")]
	private void <OnEnable>b__4_0(BirthingSequenceManager.Messages.BirthingSceneComplete _)
	{
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0xBA235C", Offset = "0xBA235C", VA = "0xBA235C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C9F64", Offset = "0x9C9F64")]
	private void <Start>b__7_0()
	{
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0xBA24CC", Offset = "0xBA24CC", VA = "0xBA24CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C9F74", Offset = "0x9C9F74")]
	private void <Start>b__7_1()
	{
	}
}
[Token(Token = "0x200000B")]
public class BirthingSequenceManager : MonoBehaviour
{
	[Token(Token = "0x2000442")]
	public static class Messages
	{
		[Token(Token = "0x20006D4")]
		public struct BirthingSceneComplete
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000443")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BA8D8", Offset = "0x9BA8D8")]
	private sealed class <>c
	{
		[Token(Token = "0x4001326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static MessageBus.MessageCallback<Messages.BirthingSceneComplete>.Callback <>9__38_0;

		[Token(Token = "0x6001F58")]
		[Address(RVA = "0xBA3034", Offset = "0xBA3034", VA = "0xBA3034")]
		public <>c()
		{
		}

		[Token(Token = "0x6001F59")]
		[Address(RVA = "0xBA303C", Offset = "0xBA303C", VA = "0xBA303C")]
		internal void <Start>b__38_0(Messages.BirthingSceneComplete _)
		{
		}
	}

	[Token(Token = "0x2000444")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BA8E8", Offset = "0x9BA8E8")]
	private sealed class <Start>d__38 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400132A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BirthingSequenceManager <>4__this;

		[Token(Token = "0x400132B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private PersistentEntity <warmup>5__2;

		[Token(Token = "0x17000321")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001F5D")]
			[Address(RVA = "0xBA7584", Offset = "0xBA7584", VA = "0xBA7584", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000322")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001F5F")]
			[Address(RVA = "0xBA75F4", Offset = "0xBA75F4", VA = "0xBA75F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F5A")]
		[Address(RVA = "0xBA2D18", Offset = "0xBA2D18", VA = "0xBA2D18")]
		[DebuggerHidden]
		public <Start>d__38(int <>1__state)
		{
		}

		[Token(Token = "0x6001F5B")]
		[Address(RVA = "0xBA7238", Offset = "0xBA7238", VA = "0xBA7238", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001F5C")]
		[Address(RVA = "0xBA723C", Offset = "0xBA723C", VA = "0xBA723C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F5E")]
		[Address(RVA = "0xBA758C", Offset = "0xBA758C", VA = "0xBA758C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000445")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BA8F8", Offset = "0x9BA8F8")]
	private sealed class <>c__DisplayClass41_0
	{
		[Token(Token = "0x400132C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool grabbed;

		[Token(Token = "0x400132D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractiveCore seed;

		[Token(Token = "0x400132E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool flowerWaveFinished;

		[Token(Token = "0x400132F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BirthingSequenceManager <>4__this;

		[Token(Token = "0x6001F60")]
		[Address(RVA = "0xBA30B0", Offset = "0xBA30B0", VA = "0xBA30B0")]
		public <>c__DisplayClass41_0()
		{
		}

		[Token(Token = "0x6001F61")]
		[Address(RVA = "0xBA30B8", Offset = "0xBA30B8", VA = "0xBA30B8")]
		internal void <DoHandSeq>b__1(PlayerControllerInput input)
		{
		}

		[Token(Token = "0x6001F62")]
		[Address(RVA = "0xBA3394", Offset = "0xBA3394", VA = "0xBA3394")]
		internal void <DoHandSeq>b__2(PlayerControllerInput input)
		{
		}

		[Token(Token = "0x6001F63")]
		[Address(RVA = "0xBA35A8", Offset = "0xBA35A8", VA = "0xBA35A8")]
		internal void <DoHandSeq>b__0()
		{
		}
	}

	[Token(Token = "0x2000446")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BA908", Offset = "0x9BA908")]
	private sealed class <DoHandSeq>d__41 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BirthingSequenceManager <>4__this;

		[Token(Token = "0x4001333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private <>c__DisplayClass41_0 <>8__1;

		[Token(Token = "0x4001334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private PlayerService <playerService>5__2;

		[Token(Token = "0x4001335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CameraFade <fader>5__3;

		[Token(Token = "0x4001336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Player <player>5__4;

		[Token(Token = "0x4001337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 <handRootOffset>5__5;

		[Token(Token = "0x4001338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GameObject <shine>5__6;

		[Token(Token = "0x4001339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Rigidbody <body>5__7;

		[Token(Token = "0x400133A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private IPlantableSurface <pot>5__8;

		[Token(Token = "0x400133B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float <t>5__9;

		[Token(Token = "0x17000323")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001F67")]
			[Address(RVA = "0xBA63F0", Offset = "0xBA63F0", VA = "0xBA63F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000324")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001F69")]
			[Address(RVA = "0xBA6460", Offset = "0xBA6460", VA = "0xBA6460", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F64")]
		[Address(RVA = "0xBA2F10", Offset = "0xBA2F10", VA = "0xBA2F10")]
		[DebuggerHidden]
		public <DoHandSeq>d__41(int <>1__state)
		{
		}

		[Token(Token = "0x6001F65")]
		[Address(RVA = "0xBA35B4", Offset = "0xBA35B4", VA = "0xBA35B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001F66")]
		[Address(RVA = "0xBA35B8", Offset = "0xBA35B8", VA = "0xBA35B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F68")]
		[Address(RVA = "0xBA63F8", Offset = "0xBA63F8", VA = "0xBA63F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000447")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BA918", Offset = "0x9BA918")]
	private sealed class <DoPlaySequence>d__43 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400133C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400133D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400133E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BirthingSequenceManager <>4__this;

		[Token(Token = "0x400133F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CameraFade <fader>5__2;

		[Token(Token = "0x4001340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <i>5__3;

		[Token(Token = "0x4001341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private BirthingVignette <vignette>5__4;

		[Token(Token = "0x17000325")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001F6D")]
			[Address(RVA = "0xBA71C0", Offset = "0xBA71C0", VA = "0xBA71C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000326")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001F6F")]
			[Address(RVA = "0xBA7230", Offset = "0xBA7230", VA = "0xBA7230", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F6A")]
		[Address(RVA = "0xBA2F3C", Offset = "0xBA2F3C", VA = "0xBA2F3C")]
		[DebuggerHidden]
		public <DoPlaySequence>d__43(int <>1__state)
		{
		}

		[Token(Token = "0x6001F6B")]
		[Address(RVA = "0xBA6468", Offset = "0xBA6468", VA = "0xBA6468", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001F6C")]
		[Address(RVA = "0xBA646C", Offset = "0xBA646C", VA = "0xBA646C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F6E")]
		[Address(RVA = "0xBA71C8", Offset = "0xBA71C8", VA = "0xBA71C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BC4C0", Offset = "0x9BC4C0")]
	[SerializeField]
	private GenericTriggerVolume _centerFlowerTrigger;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject _birthingCenterFlower;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform _ringNode;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform _startingPosition;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BC53C", Offset = "0x9BC53C")]
	[SerializeField]
	private GameObject _handsRoot;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private TextMeshLOC _textLOC_Move;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private FujiAtmosphericPreset _atmosPresetSeedTutorial;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BC5A8", Offset = "0x9BC5A8")]
	[SerializeField]
	private GameObject _plantingSequenceRoot;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject _plantingSequencePot;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private GameObject _plantingSequenceSeed;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Animator _plantAnimator;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Transform _microRing;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private GameObject _grassPatchUnderPot;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private TeleportRedirectNode _redirectNode_Seed;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private GameObject _waterOrb;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private TextMeshLOC _textLOC_WaterSeed;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private AnimatedImageSeq _animatedSeq_Water;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BC684", Offset = "0x9BC684")]
	[SerializeField]
	private ParticleSystem _particleWindTrail;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private BirthingVignette _startingVignette;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private BirthingVignette[] _vignettes;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private float _lifetimePerVignette;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private GameObject[] objectsToDisableOnceVignetting;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BC710", Offset = "0x9BC710")]
	[SerializeField]
	[EventRef]
	private string _audioIntroBgm;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	[EventRef]
	private string _audioStartBgm;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	[EventRef]
	private string _audoipHandTouchFirstSfx;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	[EventRef]
	private string _audioHandTouchFinalSfx;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	[EventRef]
	private string _audioPlayerEnterRingSfx;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	[EventRef]
	private string _audioSwitchSceneSfx;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	[EventRef]
	private string _audioSwitchToGardenSfx;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool[] _handsTriggered;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private AudioService.AudioServiceLoopHandle _bgmLoopHandleIntro;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private AudioService.AudioServiceLoopHandle _bgmLoopHandleStart;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private bool firstHandHit;

	[Token(Token = "0x6000038")]
	[Address(RVA = "0xBA25E4", Offset = "0xBA25E4", VA = "0xBA25E4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0xBA2748", Offset = "0xBA2748", VA = "0xBA2748")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0xBA2878", Offset = "0xBA2878", VA = "0xBA2878")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0xBA292C", Offset = "0xBA292C", VA = "0xBA292C")]
	private void HandleHandTriggerEvent(BirthingHandTriggerEvent ev)
	{
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0xBA2B8C", Offset = "0xBA2B8C", VA = "0xBA2B8C")]
	private void Update()
	{
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0xBA2CA4", Offset = "0xBA2CA4", VA = "0xBA2CA4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9C9F84", Offset = "0x9C9F84")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0xBA2D44", Offset = "0xBA2D44", VA = "0xBA2D44")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9C9FE8", Offset = "0x9C9FE8")]
	private void HandlePlayerTriggerEnter()
	{
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0xBA26C4", Offset = "0xBA26C4", VA = "0xBA26C4")]
	private void TurnOffAllVignettes()
	{
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0xBA2E9C", Offset = "0xBA2E9C", VA = "0xBA2E9C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CA020", Offset = "0x9CA020")]
	private IEnumerator DoHandSeq()
	{
		return null;
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0xBA2C20", Offset = "0xBA2C20", VA = "0xBA2C20")]
	private void SetEnablePlayerTeleportation(bool enableTeleport)
	{
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0xBA2DEC", Offset = "0xBA2DEC", VA = "0xBA2DEC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CA084", Offset = "0x9CA084")]
	private IEnumerator DoPlaySequence()
	{
		return null;
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0xBA2F68", Offset = "0xBA2F68", VA = "0xBA2F68")]
	public BirthingSequenceManager()
	{
	}
}
[Token(Token = "0x200000C")]
public class BirthingVignette : MonoBehaviour
{
	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FujiAtmosphericPreset AtmosPreset;

	[Token(Token = "0x6000044")]
	[Address(RVA = "0xBA2E60", Offset = "0xBA2E60", VA = "0xBA2E60")]
	public void SetActive(bool val)
	{
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0xBA75FC", Offset = "0xBA75FC", VA = "0xBA75FC")]
	public BirthingVignette()
	{
	}
}
[Token(Token = "0x200000D")]
public class BuildCheats : MonoBehaviour
{
	[Token(Token = "0x2000448")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BA928", Offset = "0x9BA928")]
	private sealed class <Start>d__0 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BuildCheats <>4__this;

		[Token(Token = "0x4001345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private PlayerControllerInput <left>5__2;

		[Token(Token = "0x4001346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private PlayerControllerInput <right>5__3;

		[Token(Token = "0x4001347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <timeHeld>5__4;

		[Token(Token = "0x17000327")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001F73")]
			[Address(RVA = "0xBAA228", Offset = "0xBAA228", VA = "0xBAA228", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000328")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001F75")]
			[Address(RVA = "0xBAA298", Offset = "0xBAA298", VA = "0xBAA298", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F70")]
		[Address(RVA = "0xBA9E40", Offset = "0xBA9E40", VA = "0xBA9E40")]
		[DebuggerHidden]
		public <Start>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x6001F71")]
		[Address(RVA = "0xBA9E74", Offset = "0xBA9E74", VA = "0xBA9E74", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001F72")]
		[Address(RVA = "0xBA9E78", Offset = "0xBA9E78", VA = "0xBA9E78", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F74")]
		[Address(RVA = "0xBAA230", Offset = "0xBAA230", VA = "0xBAA230", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0xBA9DCC", Offset = "0xBA9DCC", VA = "0xBA9DCC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CA0E8", Offset = "0x9CA0E8")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0xBA9E6C", Offset = "0xBA9E6C", VA = "0xBA9E6C")]
	public BuildCheats()
	{
	}
}
[Token(Token = "0x200000E")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9B7C1C", Offset = "0x9B7C1C")]
public class BuildInfoText : MonoBehaviour
{
	[Token(Token = "0x2000449")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BA938", Offset = "0x9BA938")]
	private sealed class <Start>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400134A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BuildInfoText <>4__this;

		[Token(Token = "0x400134B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UnityWebRequest <www>5__2;

		[Token(Token = "0x17000329")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001F7A")]
			[Address(RVA = "0xBAA76C", Offset = "0xBAA76C", VA = "0xBAA76C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700032A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001F7C")]
			[Address(RVA = "0xBAA7DC", Offset = "0xBAA7DC", VA = "0xBAA7DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F76")]
		[Address(RVA = "0xBAA380", Offset = "0xBAA380", VA = "0xBAA380")]
		[DebuggerHidden]
		public <Start>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6001F77")]
		[Address(RVA = "0xBAA46C", Offset = "0xBAA46C", VA = "0xBAA46C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001F78")]
		[Address(RVA = "0xBAA548", Offset = "0xBAA548", VA = "0xBAA548", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F79")]
		[Address(RVA = "0xBAA488", Offset = "0xBAA488", VA = "0xBAA488")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6001F7B")]
		[Address(RVA = "0xBAA774", Offset = "0xBAA774", VA = "0xBAA774", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0xBAA2A0", Offset = "0xBAA2A0", VA = "0xBAA2A0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0xBAA30C", Offset = "0xBAA30C", VA = "0xBAA30C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CA14C", Offset = "0x9CA14C")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0xBAA3AC", Offset = "0xBAA3AC", VA = "0xBAA3AC")]
	private void Update()
	{
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0xBAA464", Offset = "0xBAA464", VA = "0xBAA464")]
	public BuildInfoText()
	{
	}
}
[Token(Token = "0x200000F")]
public class Frog : MonoBehaviour, SpawningEgg.IEggSpawnable
{
	[Token(Token = "0x200044A")]
	public enum FleePolicy
	{
		[Token(Token = "0x400134D")]
		AwayFromPlayer = 0,
		[Token(Token = "0x400134E")]
		TowardPlayer = 10,
		[Token(Token = "0x400134F")]
		InRandomDirection = 20,
		[Token(Token = "0x4001350")]
		Idle = 30,
		[Token(Token = "0x4001351")]
		TowardsOriginalPosition = 40
	}

	[Token(Token = "0x200044B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BA948", Offset = "0x9BA948")]
	private sealed class <DoBeatHop>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Frog <>4__this;

		[Token(Token = "0x4001355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <beatCount>5__2;

		[Token(Token = "0x4001356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <i>5__3;

		[Token(Token = "0x1700032B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001F80")]
			[Address(RVA = "0xC6CC9C", Offset = "0xC6CC9C", VA = "0xC6CC9C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700032C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001F82")]
			[Address(RVA = "0xC6CD0C", Offset = "0xC6CD0C", VA = "0xC6CD0C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F7D")]
		[Address(RVA = "0xC6C1F4", Offset = "0xC6C1F4", VA = "0xC6C1F4")]
		[DebuggerHidden]
		public <DoBeatHop>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x6001F7E")]
		[Address(RVA = "0xC6C74C", Offset = "0xC6C74C", VA = "0xC6C74C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001F7F")]
		[Address(RVA = "0xC6C750", Offset = "0xC6C750", VA = "0xC6C750", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F81")]
		[Address(RVA = "0xC6CCA4", Offset = "0xC6CCA4", VA = "0xC6CCA4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200044C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BA958", Offset = "0x9BA958")]
	private sealed class <DoFrogFlee>d__35 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Frog <>4__this;

		[Token(Token = "0x400135A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public FleePolicy fleePolicy;

		[Token(Token = "0x400135B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <t>5__2;

		[Token(Token = "0x1700032D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001F86")]
			[Address(RVA = "0xC6D74C", Offset = "0xC6D74C", VA = "0xC6D74C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700032E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001F88")]
			[Address(RVA = "0xC6D7BC", Offset = "0xC6D7BC", VA = "0xC6D7BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F83")]
		[Address(RVA = "0xC6C220", Offset = "0xC6C220", VA = "0xC6C220")]
		[DebuggerHidden]
		public <DoFrogFlee>d__35(int <>1__state)
		{
		}

		[Token(Token = "0x6001F84")]
		[Address(RVA = "0xC6CD14", Offset = "0xC6CD14", VA = "0xC6CD14", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001F85")]
		[Address(RVA = "0xC6CD18", Offset = "0xC6CD18", VA = "0xC6CD18", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F87")]
		[Address(RVA = "0xC6D754", Offset = "0xC6D754", VA = "0xC6D754", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BC8BC", Offset = "0x9BC8BC")]
	[SerializeField]
	[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x9BC8BC", Offset = "0x9BC8BC")]
	private Vector2 _xForceRange;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x9BC930", Offset = "0x9BC930")]
	private Vector2 _yForceRange;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BC978", Offset = "0x9BC978")]
	[SerializeField]
	[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x9BC978", Offset = "0x9BC978")]
	private Vector2 _beatHopForceRange;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BC9E4", Offset = "0x9BC9E4")]
	[SerializeField]
	[EventRef]
	private string _frogFleeEvent;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[EventRef]
	private string _frogBeatEvent;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[EventRef]
	private string _frogEmitSparksEvent;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Rigidbody _frogRigidbody;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GenericTriggerVolume _triggerVolume;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform _frogVisualTransform;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private MeshRenderer _frogMeshRenderer;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private WaterableCharacter _waterableCharacter;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private InteractiveCore _interactiveCore;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Coroutine _frogFleeCoroutine;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Coroutine _frogBeatCoroutine;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private bool AffectionateAfterHolding;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[SerializeField]
	private Vector3 _pancakeScale;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private Vector3 _stretchedScale;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public bool _solvedPuzzleIfSprayed;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA5")]
	public bool AllowHops;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9BCAE0", Offset = "0x9BCAE0")]
	public float ChanceOfBeingScaredByClosePlayer;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private GameObject _shine;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public FleePolicy BeatAction;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public Vector3 HeartSpawnPosOffset;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private MaterialPropertyBlock _propBlock;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float ChanceOfBeatAction;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private bool _puzzleSolved;

	[Token(Token = "0x600004C")]
	[Address(RVA = "0xC6B108", Offset = "0xC6B108", VA = "0xC6B108")]
	private void Awake()
	{
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0xC6B228", Offset = "0xC6B228", VA = "0xC6B228")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0xC6B7C0", Offset = "0xC6B7C0", VA = "0xC6B7C0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0xC6BB28", Offset = "0xC6BB28", VA = "0xC6BB28")]
	private void EventHoldStart(PlayerControllerInput input)
	{
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0xC6BC30", Offset = "0xC6BC30", VA = "0xC6BC30")]
	private void OnSequencerBeat(SequencerBeatEvent ev)
	{
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0xC6BED0", Offset = "0xC6BED0", VA = "0xC6BED0")]
	private void PlayerTriggerEnterByTouch(PlayerControllerInput input)
	{
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0xC6BF34", Offset = "0xC6BF34", VA = "0xC6BF34")]
	private void PlayerTriggerEnterByNearness()
	{
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0xC6BED4", Offset = "0xC6BED4", VA = "0xC6BED4")]
	private void PlayerTriggerEnter()
	{
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0xC6BE5C", Offset = "0xC6BE5C", VA = "0xC6BE5C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CA1B0", Offset = "0x9CA1B0")]
	private IEnumerator DoBeatHop(int BeatNum)
	{
		return null;
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0xC6BDC4", Offset = "0xC6BDC4", VA = "0xC6BDC4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CA214", Offset = "0x9CA214")]
	private IEnumerator DoFrogFlee(FleePolicy fleePolicy)
	{
		return null;
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0xC6B63C", Offset = "0xC6B63C", VA = "0xC6B63C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9CA278", Offset = "0x9CA278")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0xC6BF74", Offset = "0xC6BF74", VA = "0xC6BF74")]
	public void SolvePuzzle(bool silent)
	{
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0xC6C3A8", Offset = "0xC6C3A8", VA = "0xC6C3A8", Slot = "4")]
	public Vector3 RestingLocation()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0xC6C3F0", Offset = "0xC6C3F0", VA = "0xC6C3F0", Slot = "6")]
	public void OnPostSpawn()
	{
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0xC6C4B8", Offset = "0xC6C4B8", VA = "0xC6C4B8", Slot = "7")]
	public void OnPreDespawn()
	{
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0xC6C4BC", Offset = "0xC6C4BC", VA = "0xC6C4BC", Slot = "5")]
	public void SetInitialLocation(Vector3 worldPos)
	{
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0xC6C518", Offset = "0xC6C518", VA = "0xC6C518")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0xC6C5FC", Offset = "0xC6C5FC", VA = "0xC6C5FC")]
	public Frog()
	{
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0xC6C740", Offset = "0xC6C740", VA = "0xC6C740")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CA2B0", Offset = "0x9CA2B0")]
	private void <DoBeatHop>b__33_0()
	{
	}
}
[Token(Token = "0x2000010")]
public class Owl : MonoBehaviour
{
	[Token(Token = "0x200044D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BA968", Offset = "0x9BA968")]
	private sealed class <DoSway>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400135C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400135D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400135E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Owl <>4__this;

		[Token(Token = "0x400135F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <rotTime>5__2;

		[Token(Token = "0x4001360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <numBeatsToWait>5__3;

		[Token(Token = "0x4001361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Quaternion <rotateLeft>5__4;

		[Token(Token = "0x4001362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Quaternion <rotateRight>5__5;

		[Token(Token = "0x4001363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int <i>5__6;

		[Token(Token = "0x1700032F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001F8C")]
			[Address(RVA = "0xEAC848", Offset = "0xEAC848", VA = "0xEAC848", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000330")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001F8E")]
			[Address(RVA = "0xEAC8B8", Offset = "0xEAC8B8", VA = "0xEAC8B8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F89")]
		[Address(RVA = "0xEAC3C8", Offset = "0xEAC3C8", VA = "0xEAC3C8")]
		[DebuggerHidden]
		public <DoSway>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6001F8A")]
		[Address(RVA = "0xEAC46C", Offset = "0xEAC46C", VA = "0xEAC46C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001F8B")]
		[Address(RVA = "0xEAC470", Offset = "0xEAC470", VA = "0xEAC470", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F8D")]
		[Address(RVA = "0xEAC850", Offset = "0xEAC850", VA = "0xEAC850", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Coroutine _threadSway;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Quaternion _startRotation;

	[Token(Token = "0x600005F")]
	[Address(RVA = "0xEAC24C", Offset = "0xEAC24C", VA = "0xEAC24C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0xEAC290", Offset = "0xEAC290", VA = "0xEAC290")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0xEAC374", Offset = "0xEAC374", VA = "0xEAC374")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0xEAC300", Offset = "0xEAC300", VA = "0xEAC300")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CA2C0", Offset = "0x9CA2C0")]
	private IEnumerator DoSway()
	{
		return null;
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0xEAC3F4", Offset = "0xEAC3F4", VA = "0xEAC3F4")]
	public Owl()
	{
	}
}
[Token(Token = "0x2000011")]
public class Snail : MonoBehaviour, IWaterReceiver
{
	[Token(Token = "0x200044E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BA978", Offset = "0x9BA978")]
	private sealed class <DoCrawlRoutine>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Snail <>4__this;

		[Token(Token = "0x4001367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaitForFixedUpdate <waitForFixed>5__2;

		[Token(Token = "0x4001368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Cooldown <cooldown>5__3;

		[Token(Token = "0x4001369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <sign>5__4;

		[Token(Token = "0x17000331")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001F92")]
			[Address(RVA = "0xD701E0", Offset = "0xD701E0", VA = "0xD701E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000332")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001F94")]
			[Address(RVA = "0xD70250", Offset = "0xD70250", VA = "0xD70250", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F8F")]
		[Address(RVA = "0xD6FB38", Offset = "0xD6FB38", VA = "0xD6FB38")]
		[DebuggerHidden]
		public <DoCrawlRoutine>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6001F90")]
		[Address(RVA = "0xD6FDD4", Offset = "0xD6FDD4", VA = "0xD6FDD4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001F91")]
		[Address(RVA = "0xD6FDD8", Offset = "0xD6FDD8", VA = "0xD6FDD8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F93")]
		[Address(RVA = "0xD701E8", Offset = "0xD701E8", VA = "0xD701E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Rigidbody _body;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float _turnForcePerSecond;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float _crawlForcePerSecond;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float2 _sleepyTimeRangeInSeconds;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float2 _forwardCrawlTime;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private PlantEntity _pfbInPot;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float3 _plantLocPos;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private InteractiveCore _interactiveCore;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private PlantEntity _plantInstance;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BCB68", Offset = "0x9BCB68")]
	[SerializeField]
	private bool _enforceRadius;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SerializeField]
	private float _maxWanderRadius;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float3 startingPos;

	[Token(Token = "0x6000064")]
	[Address(RVA = "0xD6F508", Offset = "0xD6F508", VA = "0xD6F508")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0xD6F690", Offset = "0xD6F690", VA = "0xD6F690")]
	private void OnHoldStart(PlayerControllerInput input)
	{
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0xD6F818", Offset = "0xD6F818", VA = "0xD6F818")]
	private void Start()
	{
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0xD6FA98", Offset = "0xD6FA98", VA = "0xD6FA98")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0xD6FAC4", Offset = "0xD6FAC4", VA = "0xD6FAC4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CA324", Offset = "0x9CA324")]
	private IEnumerator DoCrawlRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0xD6FB64", Offset = "0xD6FB64", VA = "0xD6FB64", Slot = "4")]
	public void ReceiveWater(float waterAmount, Vector3? worldPosition, InputHandedness? hand, Vector3? worldSprayVelocity)
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0xD6FC5C", Offset = "0xD6FC5C", VA = "0xD6FC5C")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0xD6FD70", Offset = "0xD6FD70", VA = "0xD6FD70")]
	public Snail()
	{
	}
}
[Token(Token = "0x2000012")]
public class WaterableCharacter : MonoBehaviour, IWaterReceiver
{
	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public JellySystemWaterJiggle WaterJiggleTransfer;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Rigidbody AddKick;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float KickForce;

	[Token(Token = "0x14000001")]
	public event Action OnCharacterWatered
	{
		[Token(Token = "0x600006C")]
		[Address(RVA = "0xF970A0", Offset = "0xF970A0", VA = "0xF970A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CA388", Offset = "0x9CA388")]
		add
		{
		}
		[Token(Token = "0x600006D")]
		[Address(RVA = "0xF9718C", Offset = "0xF9718C", VA = "0xF9718C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CA398", Offset = "0x9CA398")]
		remove
		{
		}
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0xF97278", Offset = "0xF97278", VA = "0xF97278", Slot = "4")]
	public void ReceiveWater(float waterAmount, Vector3? worldPosition, InputHandedness? hand, Vector3? worldSprayVelocity)
	{
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0xF974CC", Offset = "0xF974CC", VA = "0xF974CC")]
	public WaterableCharacter()
	{
	}
}
[Token(Token = "0x2000013")]
public class ConcentricRings : MonoBehaviour
{
	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject protoRing;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int NumRings;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Gradient ColorGradient;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9BCBD4", Offset = "0x9BCBD4")]
	public float StartRadius;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9BCBEC", Offset = "0x9BCBEC")]
	public float EndRadius;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9BCC04", Offset = "0x9BCC04")]
	public float StartOffsetY;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9BCC1C", Offset = "0x9BCC1C")]
	public float EndOffsetY;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9BCC34", Offset = "0x9BCC34")]
	public float RingInnerRadius;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9BCC4C", Offset = "0x9BCC4C")]
	public float RingInnerRadiusFade;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9BCC68", Offset = "0x9BCC68")]
	public float Speed;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float TimeOffset;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ConcentricRingsSingle[] rings;

	[Token(Token = "0x6000070")]
	[Address(RVA = "0xE6F37C", Offset = "0xE6F37C", VA = "0xE6F37C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0xE6F580", Offset = "0xE6F580", VA = "0xE6F580")]
	private float parabola(float x, float k)
	{
		return default(float);
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0xE6F604", Offset = "0xE6F604", VA = "0xE6F604")]
	private void Update()
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0xE6FA7C", Offset = "0xE6FA7C", VA = "0xE6FA7C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0xE6FC54", Offset = "0xE6FC54", VA = "0xE6FC54")]
	public ConcentricRings()
	{
	}
}
[Token(Token = "0x2000014")]
public class ConcentricRingsSingle : MonoBehaviour
{
	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MaterialPropertyBlock _rendererBlock;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int uniformId_Color;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int uniformId_RingInnerRadius;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int uniformId_RingFlatness;

	[Token(Token = "0x17000002")]
	public MaterialPropertyBlock MatBlock
	{
		[Token(Token = "0x6000075")]
		[Address(RVA = "0xE6FC88", Offset = "0xE6FC88", VA = "0xE6FC88")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000003")]
	public Color Color
	{
		[Token(Token = "0x6000076")]
		[Address(RVA = "0xE6F9E0", Offset = "0xE6F9E0", VA = "0xE6F9E0")]
		set
		{
		}
	}

	[Token(Token = "0x17000004")]
	public float RingInnerRadius
	{
		[Token(Token = "0x6000077")]
		[Address(RVA = "0xE6F950", Offset = "0xE6F950", VA = "0xE6F950")]
		set
		{
		}
	}

	[Token(Token = "0x17000005")]
	public float RingFlatness
	{
		[Token(Token = "0x6000078")]
		[Address(RVA = "0xE6F998", Offset = "0xE6F998", VA = "0xE6F998")]
		set
		{
		}
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0xE6FC90", Offset = "0xE6FC90", VA = "0xE6FC90")]
	public void Awake()
	{
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0xE6FA48", Offset = "0xE6FA48", VA = "0xE6FA48")]
	public void UpdateGraphics()
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0xE6FD68", Offset = "0xE6FD68", VA = "0xE6FD68")]
	public ConcentricRingsSingle()
	{
	}
}
[Token(Token = "0x2000015")]
public class CopyOrbsBirthing : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200044F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BA988", Offset = "0x9BA988")]
	private sealed class <>c
	{
		[Token(Token = "0x400136A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400136B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Transform, bool> <>9__1_0;

		[Token(Token = "0x400136C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<Transform, Transform> <>9__1_1;

		[Token(Token = "0x6001F96")]
		[Address(RVA = "0xE73640", Offset = "0xE73640", VA = "0xE73640")]
		public <>c()
		{
		}

		[Token(Token = "0x6001F97")]
		[Address(RVA = "0xE73648", Offset = "0xE73648", VA = "0xE73648")]
		internal bool <Start>b__1_0(Transform point)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F98")]
		[Address(RVA = "0xE736C0", Offset = "0xE736C0", VA = "0xE736C0")]
		internal Transform <Start>b__1_1(Transform _)
		{
			return null;
		}
	}

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] orbs;

	[Token(Token = "0x600007C")]
	[Address(RVA = "0xE73000", Offset = "0xE73000", VA = "0xE73000")]
	private void Start()
	{
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0xE735D4", Offset = "0xE735D4", VA = "0xE735D4")]
	public CopyOrbsBirthing()
	{
	}
}
[Token(Token = "0x2000016")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9B7C80", Offset = "0x9B7C80")]
public class DandelionConstellationPlant : MonoBehaviour
{
	[Token(Token = "0x2000450")]
	private enum AnimationState
	{
		[Token(Token = "0x400136E")]
		Idle,
		[Token(Token = "0x400136F")]
		Open,
		[Token(Token = "0x4001370")]
		Bloomed
	}

	[Token(Token = "0x2000451")]
	[BurstCompile]
	public struct BoneRead : IJobParallelForTransform
	{
		[Token(Token = "0x4001371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[WriteOnly]
		public NativeArray<float3> PointPositions;

		[Token(Token = "0x4001372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[ReadOnly]
		public int ReleasedPointCount;

		[Token(Token = "0x6001F99")]
		[Address(RVA = "0xA85444", Offset = "0xA85444", VA = "0xA85444", Slot = "4")]
		public void Execute(int index, TransformAccess transform)
		{
		}
	}

	[Token(Token = "0x2000452")]
	[BurstCompile]
	private struct OrbPositionJob : IJobParallelForTransform
	{
		[Token(Token = "0x4001373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[ReadOnly]
		public NativeArray<float3> PointPositions;

		[Token(Token = "0x4001374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[ReadOnly]
		public NativeArray<float3> SkyTargets;

		[Token(Token = "0x4001375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[ReadOnly]
		public int ReleasedPointCount;

		[Token(Token = "0x4001376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[ReadOnly]
		public float DeltaTime;

		[Token(Token = "0x4001377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[ReadOnly]
		public float4 SpinPointWorld;

		[Token(Token = "0x6001F9A")]
		[Address(RVA = "0xA85498", Offset = "0xA85498", VA = "0xA85498", Slot = "4")]
		public void Execute(int index, TransformAccess transform)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000453")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BA9B8", Offset = "0x9BA9B8")]
	private sealed class <>c
	{
		[Token(Token = "0x4001378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<JellyPoint, bool> <>9__15_0;

		[Token(Token = "0x400137A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<JellyPoint, Transform> <>9__15_1;

		[Token(Token = "0x6001F9C")]
		[Address(RVA = "0xE762A0", Offset = "0xE762A0", VA = "0xE762A0")]
		public <>c()
		{
		}

		[Token(Token = "0x6001F9D")]
		[Address(RVA = "0xE762A8", Offset = "0xE762A8", VA = "0xE762A8")]
		internal bool <Awake>b__15_0(JellyPoint point)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F9E")]
		[Address(RVA = "0xE76320", Offset = "0xE76320", VA = "0xE76320")]
		internal Transform <Awake>b__15_1(JellyPoint _)
		{
			return null;
		}
	}

	[Token(Token = "0x2000454")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BA9C8", Offset = "0x9BA9C8")]
	private sealed class <DoToggleActive>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400137B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400137C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400137D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DandelionConstellationPlant <>4__this;

		[Token(Token = "0x17000333")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001FA2")]
			[Address(RVA = "0xE7642C", Offset = "0xE7642C", VA = "0xE7642C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000334")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001FA4")]
			[Address(RVA = "0xE7649C", Offset = "0xE7649C", VA = "0xE7649C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F9F")]
		[Address(RVA = "0xE74CB8", Offset = "0xE74CB8", VA = "0xE74CB8")]
		[DebuggerHidden]
		public <DoToggleActive>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6001FA0")]
		[Address(RVA = "0xE76350", Offset = "0xE76350", VA = "0xE76350", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001FA1")]
		[Address(RVA = "0xE76354", Offset = "0xE76354", VA = "0xE76354", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FA3")]
		[Address(RVA = "0xE76434", Offset = "0xE76434", VA = "0xE76434", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _constellation;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x9BCCA0", Offset = "0x9BCCA0")]
	private GameObject[] _orbSources;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private JellySystem _jelly;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[EventRef]
	[SerializeField]
	private string _sfx_OrbRelease;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private TransformAccessArray _orbInstances;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private NativeArray<float3> _pointPositions;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private NativeArray<float3> _skyTargets;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private TransformAccessArray _points;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int _releasedPointCount;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Cooldown _shakeCooldown;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private bool _flowersOpened;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private PersistentEntity _prefabToFind;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform _shineTarget;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private readonly JobHandle[] _jobs;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int lastSetAnimPose;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private int progressCount;

	[Token(Token = "0x17000006")]
	private Animator Animator
	{
		[Token(Token = "0x600007E")]
		[Address(RVA = "0xE74520", Offset = "0xE74520", VA = "0xE74520")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0xE74570", Offset = "0xE74570", VA = "0xE74570")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0xE74BB4", Offset = "0xE74BB4", VA = "0xE74BB4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0xE74C44", Offset = "0xE74C44", VA = "0xE74C44")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CA3A8", Offset = "0x9CA3A8")]
	private IEnumerator DoToggleActive()
	{
		return null;
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0xE74CE4", Offset = "0xE74CE4", VA = "0xE74CE4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0xE74ECC", Offset = "0xE74ECC", VA = "0xE74ECC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0xE750D4", Offset = "0xE750D4", VA = "0xE750D4")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9CA40C", Offset = "0x9CA40C")]
	private void OnDandelionShake()
	{
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0xE75660", Offset = "0xE75660", VA = "0xE75660")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0xE757B4", Offset = "0xE757B4", VA = "0xE757B4")]
	public void _LateUpdate(float dt)
	{
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0xE75D80", Offset = "0xE75D80", VA = "0xE75D80")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9CA444", Offset = "0x9CA444")]
	private void PlayConstellationSeq()
	{
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0xE75F20", Offset = "0xE75F20", VA = "0xE75F20")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9CA47C", Offset = "0x9CA47C")]
	public void TriggerOpenFlowers()
	{
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0xE7537C", Offset = "0xE7537C", VA = "0xE7537C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9CA4B4", Offset = "0x9CA4B4")]
	public void TriggerBloom()
	{
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0xE761DC", Offset = "0xE761DC", VA = "0xE761DC")]
	public DandelionConstellationPlant()
	{
	}
}
[Token(Token = "0x2000017")]
public class DandelionSporeHeadVisual : MonoBehaviour
{
	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private JellySystem _root;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 _headOffset;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 _initialLocalPos;

	[Token(Token = "0x600008B")]
	[Address(RVA = "0xE7AE10", Offset = "0xE7AE10", VA = "0xE7AE10")]
	private void Awake()
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0xE7AF74", Offset = "0xE7AF74", VA = "0xE7AF74")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0xE7B004", Offset = "0xE7B004", VA = "0xE7B004")]
	private void HandleJellyAwakeStatusChanged(AwakeStatus status)
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0xE7B104", Offset = "0xE7B104", VA = "0xE7B104")]
	public DandelionSporeHeadVisual()
	{
	}
}
[Token(Token = "0x2000018")]
public class BopItLightGemSpawnerTimer : LightGemSpawnerTimer
{
	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BCD44", Offset = "0x9BCD44")]
	private bool <ReadyToSpawn>k__BackingField;

	[Token(Token = "0x17000007")]
	[FujiSerialized]
	public bool ReadyToSpawn
	{
		[Token(Token = "0x600008F")]
		[Address(RVA = "0xBA803C", Offset = "0xBA803C", VA = "0xBA803C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CA4EC", Offset = "0x9CA4EC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000090")]
		[Address(RVA = "0xBA8044", Offset = "0xBA8044", VA = "0xBA8044")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CA4FC", Offset = "0x9CA4FC")]
		private set
		{
		}
	}

	[Token(Token = "0x14000002")]
	public event Action<BopItLightGemSpawnerTimer> OnReadyToSpawn
	{
		[Token(Token = "0x6000091")]
		[Address(RVA = "0xBA8050", Offset = "0xBA8050", VA = "0xBA8050")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CA50C", Offset = "0x9CA50C")]
		add
		{
		}
		[Token(Token = "0x6000092")]
		[Address(RVA = "0xBA813C", Offset = "0xBA813C", VA = "0xBA813C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CA51C", Offset = "0x9CA51C")]
		remove
		{
		}
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0xBA8228", Offset = "0xBA8228", VA = "0xBA8228", Slot = "6")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9CA52C", Offset = "0x9CA52C")]
	public override void Spawn()
	{
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0xBA8294", Offset = "0xBA8294", VA = "0xBA8294")]
	public void AuthorizeSpawn()
	{
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0xBA82A0", Offset = "0xBA82A0", VA = "0xBA82A0")]
	public BopItLightGemSpawnerTimer()
	{
	}
}
[Token(Token = "0x2000019")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9B7CE4", Offset = "0x9B7CE4")]
public class DemoGetQuenched : MonoBehaviour
{
	[Token(Token = "0x2000455")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BA9D8", Offset = "0x9BA9D8")]
	private sealed class <Start>d__0 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400137E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400137F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DemoGetQuenched <>4__this;

		[Token(Token = "0x17000335")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001FA8")]
			[Address(RVA = "0xE7C018", Offset = "0xE7C018", VA = "0xE7C018", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000336")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001FAA")]
			[Address(RVA = "0xE7C088", Offset = "0xE7C088", VA = "0xE7C088", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FA5")]
		[Address(RVA = "0xE7BF34", Offset = "0xE7BF34", VA = "0xE7BF34")]
		[DebuggerHidden]
		public <Start>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x6001FA6")]
		[Address(RVA = "0xE7BF68", Offset = "0xE7BF68", VA = "0xE7BF68", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001FA7")]
		[Address(RVA = "0xE7BF6C", Offset = "0xE7BF6C", VA = "0xE7BF6C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FA9")]
		[Address(RVA = "0xE7C020", Offset = "0xE7C020", VA = "0xE7C020", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0xE7BEC0", Offset = "0xE7BEC0", VA = "0xE7BEC0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CA564", Offset = "0x9CA564")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0xE7BF60", Offset = "0xE7BF60", VA = "0xE7BF60")]
	public DemoGetQuenched()
	{
	}
}
[Token(Token = "0x200001A")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9B7D48", Offset = "0x9B7D48")]
public class DemoGetThirsty : MonoBehaviour
{
	[Token(Token = "0x2000456")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BA9E8", Offset = "0x9BA9E8")]
	private sealed class <Start>d__0 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DemoGetThirsty <>4__this;

		[Token(Token = "0x17000337")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001FAE")]
			[Address(RVA = "0xE7C1E8", Offset = "0xE7C1E8", VA = "0xE7C1E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000338")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001FB0")]
			[Address(RVA = "0xE7C258", Offset = "0xE7C258", VA = "0xE7C258", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FAB")]
		[Address(RVA = "0xE7C104", Offset = "0xE7C104", VA = "0xE7C104")]
		[DebuggerHidden]
		public <Start>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x6001FAC")]
		[Address(RVA = "0xE7C138", Offset = "0xE7C138", VA = "0xE7C138", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001FAD")]
		[Address(RVA = "0xE7C13C", Offset = "0xE7C13C", VA = "0xE7C13C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FAF")]
		[Address(RVA = "0xE7C1F0", Offset = "0xE7C1F0", VA = "0xE7C1F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0xE7C090", Offset = "0xE7C090", VA = "0xE7C090")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CA5C8", Offset = "0x9CA5C8")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0xE7C130", Offset = "0xE7C130", VA = "0xE7C130")]
	public DemoGetThirsty()
	{
	}
}
[Token(Token = "0x200001B")]
public class DemoGiveGemOrchid : MonoBehaviour
{
	[Token(Token = "0x600009A")]
	[Address(RVA = "0xE7C260", Offset = "0xE7C260", VA = "0xE7C260")]
	private void Start()
	{
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0xE7C2F4", Offset = "0xE7C2F4", VA = "0xE7C2F4")]
	public DemoGiveGemOrchid()
	{
	}
}
[Token(Token = "0x200001C")]
public class DemoGnomeAi : MonoBehaviour
{
	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform ControlRoot;

	[Token(Token = "0x600009C")]
	[Address(RVA = "0xE7C2FC", Offset = "0xE7C2FC", VA = "0xE7C2FC")]
	public void LateUpdate()
	{
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0xE7C40C", Offset = "0xE7C40C", VA = "0xE7C40C")]
	public DemoGnomeAi()
	{
	}
}
[Token(Token = "0x200001D")]
public class InsectAmbienceNoise : MonoBehaviour
{
	[Token(Token = "0x2000457")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BA9F8", Offset = "0x9BA9F8")]
	private sealed class <DoAmbience>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InsectAmbienceNoise <>4__this;

		[Token(Token = "0x17000339")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001FB4")]
			[Address(RVA = "0xDCF5C0", Offset = "0xDCF5C0", VA = "0xDCF5C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001FB6")]
			[Address(RVA = "0xDCF630", Offset = "0xDCF630", VA = "0xDCF630", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FB1")]
		[Address(RVA = "0xDCF1A8", Offset = "0xDCF1A8", VA = "0xDCF1A8")]
		[DebuggerHidden]
		public <DoAmbience>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6001FB2")]
		[Address(RVA = "0xDCF24C", Offset = "0xDCF24C", VA = "0xDCF24C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001FB3")]
		[Address(RVA = "0xDCF250", Offset = "0xDCF250", VA = "0xDCF250", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FB5")]
		[Address(RVA = "0xDCF5C8", Offset = "0xDCF5C8", VA = "0xDCF5C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Radius;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float Cooldown;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float PitchVariance;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource Source;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip[] Clips;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 initialPosition;

	[Token(Token = "0x600009E")]
	[Address(RVA = "0xDCF0C4", Offset = "0xDCF0C4", VA = "0xDCF0C4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0xDCF108", Offset = "0xDCF108", VA = "0xDCF108")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0xDCF134", Offset = "0xDCF134", VA = "0xDCF134")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CA62C", Offset = "0x9CA62C")]
	private IEnumerator DoAmbience()
	{
		return null;
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0xDCF1D4", Offset = "0xDCF1D4", VA = "0xDCF1D4")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0xDCF22C", Offset = "0xDCF22C", VA = "0xDCF22C")]
	public InsectAmbienceNoise()
	{
	}
}
[Token(Token = "0x200001E")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9B7DAC", Offset = "0x9B7DAC")]
public class LightGemSpawnerTimer : MonoBehaviour, IFujiSerializable
{
	[Token(Token = "0x2000458")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BAA08", Offset = "0x9BAA08")]
	private sealed class <>c__DisplayClass19_0
	{
		[Token(Token = "0x4001387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LightGemSpawnerTimer <>4__this;

		[Token(Token = "0x4001388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject go;

		[Token(Token = "0x6001FB7")]
		[Address(RVA = "0xBF6CA4", Offset = "0xBF6CA4", VA = "0xBF6CA4")]
		public <>c__DisplayClass19_0()
		{
		}

		[Token(Token = "0x6001FB8")]
		[Address(RVA = "0xBF6D38", Offset = "0xBF6D38", VA = "0xBF6D38")]
		internal void <Spawn>b__0(InteractiveCore.Messages.HoldItemStateChangedEvent _)
		{
		}
	}

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TimeSpanStruct SpawnRate;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PlantEntity plantEntity;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private double lastSpawnAge;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private InstantiatePrefab initiatePrefab;

	[Token(Token = "0x17000008")]
	[FujiSerialized]
	public double LastSpawnAge
	{
		[Token(Token = "0x60000A7")]
		[Address(RVA = "0xBF6678", Offset = "0xBF6678", VA = "0xBF6678")]
		get
		{
			return default(double);
		}
		[Token(Token = "0x60000A8")]
		[Address(RVA = "0xBF6680", Offset = "0xBF6680", VA = "0xBF6680")]
		set
		{
		}
	}

	[Token(Token = "0x17000009")]
	[FujiSerialized]
	public bool Occupied
	{
		[Token(Token = "0x60000A9")]
		[Address(RVA = "0xBF6688", Offset = "0xBF6688", VA = "0xBF6688")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000AA")]
		[Address(RVA = "0xBF6724", Offset = "0xBF6724", VA = "0xBF6724")]
		set
		{
		}
	}

	[Token(Token = "0x14000003")]
	public event Action<PlantEntity> OnSpawn
	{
		[Token(Token = "0x60000A3")]
		[Address(RVA = "0xBEBBFC", Offset = "0xBEBBFC", VA = "0xBEBBFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CA690", Offset = "0x9CA690")]
		add
		{
		}
		[Token(Token = "0x60000A4")]
		[Address(RVA = "0xBEBEB0", Offset = "0xBEBEB0", VA = "0xBEBEB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CA6A0", Offset = "0x9CA6A0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event Action<PlantEntity> OnGrabbed
	{
		[Token(Token = "0x60000A5")]
		[Address(RVA = "0xBEBCE8", Offset = "0xBEBCE8", VA = "0xBEBCE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CA6B0", Offset = "0x9CA6B0")]
		add
		{
		}
		[Token(Token = "0x60000A6")]
		[Address(RVA = "0xBEBF9C", Offset = "0xBEBF9C", VA = "0xBEBF9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CA6C0", Offset = "0x9CA6C0")]
		remove
		{
		}
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0xBF6764", Offset = "0xBF6764", VA = "0xBF6764")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0xBF67F4", Offset = "0xBF67F4", VA = "0xBF67F4")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0xBF68D8", Offset = "0xBF68D8", VA = "0xBF68D8")]
	public void Update()
	{
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0xBF69DC", Offset = "0xBF69DC", VA = "0xBF69DC", Slot = "6")]
	public virtual void Spawn()
	{
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0xBF6CAC", Offset = "0xBF6CAC", VA = "0xBF6CAC", Slot = "4")]
	public void OnPreSerialize()
	{
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0xBF6CB0", Offset = "0xBF6CB0", VA = "0xBF6CB0", Slot = "5")]
	public void OnPostDeserialize()
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0xBF6CB4", Offset = "0xBF6CB4", VA = "0xBF6CB4")]
	public void ResetTimer()
	{
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0xBF6D20", Offset = "0xBF6D20", VA = "0xBF6D20")]
	public LightGemSpawnerTimer()
	{
	}
}
[Token(Token = "0x200001F")]
public class SetRawImageTextureFromFujiUserImage : MonoBehaviour
{
	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RawImage Image;

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0xD6BFDC", Offset = "0xD6BFDC", VA = "0xD6BFDC")]
	private void Start()
	{
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0xD6C088", Offset = "0xD6C088", VA = "0xD6C088")]
	public SetRawImageTextureFromFujiUserImage()
	{
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0xD6C090", Offset = "0xD6C090", VA = "0xD6C090")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CA6D0", Offset = "0x9CA6D0")]
	private void <Start>b__1_0(Texture tex)
	{
	}
}
[Token(Token = "0x2000020")]
public class ShowWaterFillAmount : MonoBehaviour
{
	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public InputHandedness Handedness;

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0xD6C1A4", Offset = "0xD6C1A4", VA = "0xD6C1A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0xD6C228", Offset = "0xD6C228", VA = "0xD6C228")]
	public ShowWaterFillAmount()
	{
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0xD6C230", Offset = "0xD6C230", VA = "0xD6C230")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CA6E0", Offset = "0x9CA6E0")]
	private void <Awake>b__1_0(PlayerToolService.Messages.PlayerWaterStorageMessage message)
	{
	}
}
[Token(Token = "0x2000021")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9B7E10", Offset = "0x9B7E10")]
public class StartRecordingButton : MonoBehaviour
{
	[Token(Token = "0x2000459")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BAA18", Offset = "0x9BAA18")]
	private sealed class <DoRecord>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400138A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400138B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StartRecordingButton <>4__this;

		[Token(Token = "0x1700033B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001FBC")]
			[Address(RVA = "0xD758E8", Offset = "0xD758E8", VA = "0xD758E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001FBE")]
			[Address(RVA = "0xD75958", Offset = "0xD75958", VA = "0xD75958", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FB9")]
		[Address(RVA = "0xD752C0", Offset = "0xD752C0", VA = "0xD752C0")]
		[DebuggerHidden]
		public <DoRecord>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6001FBA")]
		[Address(RVA = "0xD75530", Offset = "0xD75530", VA = "0xD75530", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001FBB")]
		[Address(RVA = "0xD75534", Offset = "0xD75534", VA = "0xD75534", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FBD")]
		[Address(RVA = "0xD758F0", Offset = "0xD758F0", VA = "0xD758F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform ProgressCube;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int RecordTime;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public StudioEventEmitter RecordSound;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public StudioEventEmitter EndSound;

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0xD7509C", Offset = "0xD7509C", VA = "0xD7509C")]
	private void Start()
	{
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0xD7524C", Offset = "0xD7524C", VA = "0xD7524C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CA6F0", Offset = "0x9CA6F0")]
	private IEnumerator DoRecord()
	{
		return null;
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0xD752EC", Offset = "0xD752EC", VA = "0xD752EC")]
	public StartRecordingButton()
	{
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0xD752FC", Offset = "0xD752FC", VA = "0xD752FC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CA754", Offset = "0x9CA754")]
	private void <Start>b__4_0(PlayerControllerInput input)
	{
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0xD753C8", Offset = "0xD753C8", VA = "0xD753C8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CA764", Offset = "0x9CA764")]
	private void <DoRecord>b__5_1()
	{
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0xD7546C", Offset = "0xD7546C", VA = "0xD7546C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CA774", Offset = "0x9CA774")]
	private void <DoRecord>b__5_0()
	{
	}
}
[Token(Token = "0x2000022")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9B7E74", Offset = "0x9B7E74")]
public class TillerTool : MonoBehaviour
{
	[Token(Token = "0x200045A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BAA28", Offset = "0x9BAA28")]
	private sealed class <DoShakeRoutine>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400138C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400138D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400138E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TillerTool <>4__this;

		[Token(Token = "0x400138F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CooldownStruct <digEmitCooldown>5__2;

		[Token(Token = "0x1700033D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001FC2")]
			[Address(RVA = "0xD806DC", Offset = "0xD806DC", VA = "0xD806DC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001FC4")]
			[Address(RVA = "0xD8074C", Offset = "0xD8074C", VA = "0xD8074C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FBF")]
		[Address(RVA = "0xD7FF58", Offset = "0xD7FF58", VA = "0xD7FF58")]
		[DebuggerHidden]
		public <DoShakeRoutine>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6001FC0")]
		[Address(RVA = "0xD80508", Offset = "0xD80508", VA = "0xD80508", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001FC1")]
		[Address(RVA = "0xD8050C", Offset = "0xD8050C", VA = "0xD8050C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FC3")]
		[Address(RVA = "0xD806E4", Offset = "0xD806E4", VA = "0xD806E4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float TriggerTime;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 LocalTip;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float TipSensorDistance;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public LayerMask PlantableLayer;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float MinimumSpacing;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool _heldInHand;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _timeTouchingGround;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private PlayerControllerInput _latestInput;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 _groundPos;

	[Token(Token = "0x1700000A")]
	private Vector3 WorldTipPosition
	{
		[Token(Token = "0x60000BF")]
		[Address(RVA = "0xD7FC40", Offset = "0xD7FC40", VA = "0xD7FC40")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0xD7FC9C", Offset = "0xD7FC9C", VA = "0xD7FC9C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0xD7FEB4", Offset = "0xD7FEB4", VA = "0xD7FEB4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0xD7FEE4", Offset = "0xD7FEE4", VA = "0xD7FEE4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CA784", Offset = "0x9CA784")]
	private IEnumerator DoShakeRoutine()
	{
		return null;
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0xD7FF84", Offset = "0xD7FF84", VA = "0xD7FF84")]
	private void AttemptToPlacePlanter()
	{
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0xD800A8", Offset = "0xD800A8", VA = "0xD800A8")]
	private void UpdateSenseGround()
	{
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0xD80458", Offset = "0xD80458", VA = "0xD80458")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0xD80494", Offset = "0xD80494", VA = "0xD80494")]
	public TillerTool()
	{
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0xD804E4", Offset = "0xD804E4", VA = "0xD804E4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CA7E8", Offset = "0x9CA7E8")]
	private void <Awake>b__11_0(PlayerControllerInput input)
	{
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0xD804F8", Offset = "0xD804F8", VA = "0xD804F8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CA7F8", Offset = "0x9CA7F8")]
	private void <Awake>b__11_1(PlayerControllerInput input)
	{
	}
}
[Token(Token = "0x2000023")]
public class DestroyMeshCollider : MonoBehaviour
{
	[Token(Token = "0x60000C9")]
	[Address(RVA = "0xE7C684", Offset = "0xE7C684", VA = "0xE7C684")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0xE7C744", Offset = "0xE7C744", VA = "0xE7C744")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0xE7C688", Offset = "0xE7C688", VA = "0xE7C688")]
	private void DestroyCollider()
	{
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0xE7C748", Offset = "0xE7C748", VA = "0xE7C748")]
	public DestroyMeshCollider()
	{
	}
}
[Serializable]
[Token(Token = "0x2000024")]
public struct NarrativeEventIdentifier
{
	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int UniqueKey;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public LoadingZoneKey Zone;

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0xA82CE8", Offset = "0xA82CE8", VA = "0xA82CE8")]
	public bool Equals(NarrativeEventIdentifier identifier)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000025")]
public class VizMapTriggerTester : MonoBehaviour
{
	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[EditorReadOnly]
	public VizMapTrigger ClosestTrigger;

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0xF95270", Offset = "0xF95270", VA = "0xF95270")]
	private void Start()
	{
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0xF95274", Offset = "0xF95274", VA = "0xF95274")]
	private void Update()
	{
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0xF954A0", Offset = "0xF954A0", VA = "0xF954A0")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0xF954A4", Offset = "0xF954A4", VA = "0xF954A4")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0xF95584", Offset = "0xF95584", VA = "0xF95584")]
	public VizMapTriggerTester()
	{
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0xF9558C", Offset = "0xF9558C", VA = "0xF9558C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CA808", Offset = "0x9CA808")]
	private float <Update>b__2_0(VizMapTrigger t)
	{
		return default(float);
	}
}
[Token(Token = "0x2000026")]
public class AltarSeedRepository : MonoBehaviour
{
	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool _isLocked;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool altarIsLockedOnStart;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BCD94", Offset = "0x9BCD94")]
	public GameObject path;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool pathIsLockedOnStart;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private FujiAreaEntryBlendParams _enterAreaParams;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private StorageBubble _storageBubble;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material _storageBubbleMaterial;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Color _storageBubblOriginalColor;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private ParticleSystem _particleSystem;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private StudioEventEmitter _fmodEventEmitter;

	[Token(Token = "0x1700000B")]
	public bool IsLocked
	{
		[Token(Token = "0x60000D4")]
		[Address(RVA = "0xB97ED4", Offset = "0xB97ED4", VA = "0xB97ED4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0xB97EDC", Offset = "0xB97EDC", VA = "0xB97EDC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0xB98120", Offset = "0xB98120", VA = "0xB98120")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0xB98228", Offset = "0xB98228", VA = "0xB98228")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0xB98300", Offset = "0xB98300", VA = "0xB98300")]
	private void Start()
	{
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0xB98368", Offset = "0xB98368", VA = "0xB98368")]
	public bool Lock()
	{
		return default(bool);
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0xB98490", Offset = "0xB98490", VA = "0xB98490")]
	public bool Unlock()
	{
		return default(bool);
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0xB988EC", Offset = "0xB988EC", VA = "0xB988EC")]
	private void LockStorageBubble()
	{
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0xB98970", Offset = "0xB98970", VA = "0xB98970")]
	private void UnlockStorageBubble()
	{
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0xB98B04", Offset = "0xB98B04", VA = "0xB98B04")]
	private void HandleSeedStored()
	{
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0xB985FC", Offset = "0xB985FC", VA = "0xB985FC")]
	private void LockPath()
	{
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0xB98774", Offset = "0xB98774", VA = "0xB98774")]
	private void UnlockPath()
	{
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0xB98B30", Offset = "0xB98B30", VA = "0xB98B30")]
	public AltarSeedRepository()
	{
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0xB98B38", Offset = "0xB98B38", VA = "0xB98B38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CA818", Offset = "0x9CA818")]
	private void <Unlock>b__17_0()
	{
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0xB98B3C", Offset = "0xB98B3C", VA = "0xB98B3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CA828", Offset = "0x9CA828")]
	private void <UnlockStorageBubble>b__19_0()
	{
	}
}
[Token(Token = "0x2000027")]
public class Bell : MonoBehaviour
{
	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform _tfmBell;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Tweener _tweenBellSwing;

	[Token(Token = "0x1700000C")]
	public Transform TransformBell
	{
		[Token(Token = "0x60000E3")]
		[Address(RVA = "0xB9D098", Offset = "0xB9D098", VA = "0xB9D098")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0xB9D0A0", Offset = "0xB9D0A0", VA = "0xB9D0A0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0xB9D1C8", Offset = "0xB9D1C8", VA = "0xB9D1C8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0xB9D1FC", Offset = "0xB9D1FC", VA = "0xB9D1FC")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9CA838", Offset = "0x9CA838")]
	private void PlayHitBell()
	{
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0xB9D31C", Offset = "0xB9D31C", VA = "0xB9D31C")]
	public Bell()
	{
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0xB9D324", Offset = "0xB9D324", VA = "0xB9D324")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CA870", Offset = "0x9CA870")]
	private void <Awake>b__4_0(PlayerControllerInput input)
	{
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0xB9D508", Offset = "0xB9D508", VA = "0xB9D508")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CA880", Offset = "0x9CA880")]
	private void <PlayHitBell>b__6_0()
	{
	}
}
[Token(Token = "0x2000028")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9B7ED8", Offset = "0x9B7ED8")]
public class CrabLogic : MonoBehaviour, IWaterReceiver, IPuzzle, SpawningEgg.IEggSpawnable
{
	[Token(Token = "0x200045B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BAA38", Offset = "0x9BAA38")]
	private sealed class <DoScaredRoutine>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CrabLogic <>4__this;

		[Token(Token = "0x4001393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <dir>5__2;

		[Token(Token = "0x4001394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WaitForFixedUpdate <fixedWait>5__3;

		[Token(Token = "0x1700033F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001FC8")]
			[Address(RVA = "0xE744A8", Offset = "0xE744A8", VA = "0xE744A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000340")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001FCA")]
			[Address(RVA = "0xE74518", Offset = "0xE74518", VA = "0xE74518", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FC5")]
		[Address(RVA = "0xE73EF8", Offset = "0xE73EF8", VA = "0xE73EF8")]
		[DebuggerHidden]
		public <DoScaredRoutine>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6001FC6")]
		[Address(RVA = "0xE740F4", Offset = "0xE740F4", VA = "0xE740F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001FC7")]
		[Address(RVA = "0xE740F8", Offset = "0xE740F8", VA = "0xE740F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FC9")]
		[Address(RVA = "0xE744B0", Offset = "0xE744B0", VA = "0xE744B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PosRotScale _initialPose;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool _spooked;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Cooldown _spookCooldown;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Cooldown _skitterCooldown;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Rigidbody _body;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float MaxDist;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool? _puzzleSolved;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float SkitterScalar;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private InteractiveCore _iCore;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float3 skitterDir;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float skitterTorque;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float SkitterSpeed;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float FleeSpeed;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BCDEC", Offset = "0x9BCDEC")]
	private float <PuzzleTimerSeconds>k__BackingField;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BCDFC", Offset = "0x9BCDFC")]
	private LightPyramidPuzzle <LinkedPuzzlePyramid>k__BackingField;

	[Token(Token = "0x1700000D")]
	public float PuzzleTimerSeconds
	{
		[Token(Token = "0x60000F2")]
		[Address(RVA = "0xE73F94", Offset = "0xE73F94", VA = "0xE73F94", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CA92C", Offset = "0x9CA92C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60000F3")]
		[Address(RVA = "0xE73F9C", Offset = "0xE73F9C", VA = "0xE73F9C", Slot = "6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CA93C", Offset = "0x9CA93C")]
		set
		{
		}
	}

	[Token(Token = "0x1700000E")]
	public LightPyramidPuzzle LinkedPuzzlePyramid
	{
		[Token(Token = "0x60000F4")]
		[Address(RVA = "0xE73FA4", Offset = "0xE73FA4", VA = "0xE73FA4", Slot = "7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CA94C", Offset = "0x9CA94C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000F5")]
		[Address(RVA = "0xE73FAC", Offset = "0xE73FAC", VA = "0xE73FAC", Slot = "8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CA95C", Offset = "0x9CA95C")]
		set
		{
		}
	}

	[Token(Token = "0x1700000F")]
	public float PuzzleProgress
	{
		[Token(Token = "0x60000F6")]
		[Address(RVA = "0xE73FB4", Offset = "0xE73FB4", VA = "0xE73FB4", Slot = "9")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0xE736F0", Offset = "0xE736F0", VA = "0xE736F0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0xE73798", Offset = "0xE73798", VA = "0xE73798")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0xE737E8", Offset = "0xE737E8", VA = "0xE737E8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0xE738B0", Offset = "0xE738B0", VA = "0xE738B0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0xE73D0C", Offset = "0xE73D0C", VA = "0xE73D0C", Slot = "4")]
	public void ReceiveWater(float waterAmount, Vector3? worldPosition, InputHandedness? hand, Vector3? worldSprayVelocity)
	{
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0xE73D10", Offset = "0xE73D10", VA = "0xE73D10")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9CA890", Offset = "0x9CA890")]
	private void GetScared()
	{
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0xE73E84", Offset = "0xE73E84", VA = "0xE73E84")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CA8C8", Offset = "0x9CA8C8")]
	private IEnumerator DoScaredRoutine()
	{
		return null;
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0xE73F24", Offset = "0xE73F24", VA = "0xE73F24")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0xE74044", Offset = "0xE74044", VA = "0xE74044", Slot = "10")]
	public void ResetPuzzle()
	{
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0xE73D70", Offset = "0xE73D70", VA = "0xE73D70", Slot = "11")]
	public void SolvePuzzle(bool silent)
	{
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0xE740B0", Offset = "0xE740B0", VA = "0xE740B0", Slot = "12")]
	public Vector3 RestingLocation()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0xE740BC", Offset = "0xE740BC", VA = "0xE740BC", Slot = "14")]
	public void OnPostSpawn()
	{
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0xE740C0", Offset = "0xE740C0", VA = "0xE740C0", Slot = "15")]
	public void OnPreDespawn()
	{
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0xE740C4", Offset = "0xE740C4", VA = "0xE740C4", Slot = "13")]
	public void SetInitialLocation(Vector3 worldPos)
	{
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0xE73BF8", Offset = "0xE73BF8", VA = "0xE73BF8")]
	private void ResetPose()
	{
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0xE740D0", Offset = "0xE740D0", VA = "0xE740D0")]
	public CrabLogic()
	{
	}
}
[Token(Token = "0x2000029")]
public class EndingPostScene : MonoBehaviour
{
	[Token(Token = "0x200045C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BAA48", Offset = "0x9BAA48")]
	private sealed class <DoSoundSeq>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EndingPostScene <>4__this;

		[Token(Token = "0x17000341")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001FCE")]
			[Address(RVA = "0xFD53CC", Offset = "0xFD53CC", VA = "0xFD53CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000342")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001FD0")]
			[Address(RVA = "0xFD543C", Offset = "0xFD543C", VA = "0xFD543C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FCB")]
		[Address(RVA = "0xFD3A28", Offset = "0xFD3A28", VA = "0xFD3A28")]
		[DebuggerHidden]
		public <DoSoundSeq>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6001FCC")]
		[Address(RVA = "0xFD511C", Offset = "0xFD511C", VA = "0xFD511C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001FCD")]
		[Address(RVA = "0xFD5120", Offset = "0xFD5120", VA = "0xFD5120", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FCF")]
		[Address(RVA = "0xFD53D4", Offset = "0xFD53D4", VA = "0xFD53D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200045D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BAA58", Offset = "0x9BAA58")]
	private sealed class <DoEndingPostSceneTransport>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400139A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EndingPostScene <>4__this;

		[Token(Token = "0x17000343")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001FD4")]
			[Address(RVA = "0xFD491C", Offset = "0xFD491C", VA = "0xFD491C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000344")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001FD6")]
			[Address(RVA = "0xFD498C", Offset = "0xFD498C", VA = "0xFD498C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FD1")]
		[Address(RVA = "0xFD3D48", Offset = "0xFD3D48", VA = "0xFD3D48")]
		[DebuggerHidden]
		public <DoEndingPostSceneTransport>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6001FD2")]
		[Address(RVA = "0xFD46E0", Offset = "0xFD46E0", VA = "0xFD46E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001FD3")]
		[Address(RVA = "0xFD46E4", Offset = "0xFD46E4", VA = "0xFD46E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FD5")]
		[Address(RVA = "0xFD4924", Offset = "0xFD4924", VA = "0xFD4924", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200045E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BAA68", Offset = "0x9BAA68")]
	private sealed class <DoTouchLightPyramidSeq>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400139B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400139C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400139D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EndingPostScene <>4__this;

		[Token(Token = "0x17000345")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001FDA")]
			[Address(RVA = "0xFD58B4", Offset = "0xFD58B4", VA = "0xFD58B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000346")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001FDC")]
			[Address(RVA = "0xFD5924", Offset = "0xFD5924", VA = "0xFD5924", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FD7")]
		[Address(RVA = "0xFD3D74", Offset = "0xFD3D74", VA = "0xFD3D74")]
		[DebuggerHidden]
		public <DoTouchLightPyramidSeq>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6001FD8")]
		[Address(RVA = "0xFD5444", Offset = "0xFD5444", VA = "0xFD5444", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001FD9")]
		[Address(RVA = "0xFD5448", Offset = "0xFD5448", VA = "0xFD5448", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FDB")]
		[Address(RVA = "0xFD58BC", Offset = "0xFD58BC", VA = "0xFD58BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200045F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BAA78", Offset = "0x9BAA78")]
	private sealed class <>c__DisplayClass21_0
	{
		[Token(Token = "0x400139E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform gardenCenter;

		[Token(Token = "0x400139F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EndingPostScene <>4__this;

		[Token(Token = "0x40013A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float playerFadeOutTimePod;

		[Token(Token = "0x40013A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TweenCallback <>9__2;

		[Token(Token = "0x6001FDD")]
		[Address(RVA = "0xFD41D8", Offset = "0xFD41D8", VA = "0xFD41D8")]
		public <>c__DisplayClass21_0()
		{
		}

		[Token(Token = "0x6001FDE")]
		[Address(RVA = "0xFD41E0", Offset = "0xFD41E0", VA = "0xFD41E0")]
		internal void <DoLightPyramidPuzzleCompleteSeq>b__2()
		{
		}
	}

	[Token(Token = "0x2000460")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BAA88", Offset = "0x9BAA88")]
	private sealed class <>c__DisplayClass21_1
	{
		[Token(Token = "0x40013A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Player player;

		[Token(Token = "0x40013A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public <>c__DisplayClass21_0 CS$<>8__locals1;

		[Token(Token = "0x6001FDF")]
		[Address(RVA = "0xFD4274", Offset = "0xFD4274", VA = "0xFD4274")]
		public <>c__DisplayClass21_1()
		{
		}

		[Token(Token = "0x6001FE0")]
		[Address(RVA = "0xFD427C", Offset = "0xFD427C", VA = "0xFD427C")]
		internal void <DoLightPyramidPuzzleCompleteSeq>b__1()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000461")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BAA98", Offset = "0x9BAA98")]
	private sealed class <>c
	{
		[Token(Token = "0x40013A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40013A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static MessageBus.MessageCallback<SerpentEntity.Messages.SerpentHeadTouchedMessage>.Callback <>9__21_0;

		[Token(Token = "0x6001FE2")]
		[Address(RVA = "0xFD3F6C", Offset = "0xFD3F6C", VA = "0xFD3F6C")]
		public <>c()
		{
		}

		[Token(Token = "0x6001FE3")]
		[Address(RVA = "0xFD3F74", Offset = "0xFD3F74", VA = "0xFD3F74")]
		internal void <DoLightPyramidPuzzleCompleteSeq>b__21_0(SerpentEntity.Messages.SerpentHeadTouchedMessage message)
		{
		}
	}

	[Token(Token = "0x2000462")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BAAA8", Offset = "0x9BAAA8")]
	private sealed class <DoLightPyramidPuzzleCompleteSeq>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EndingPostScene <>4__this;

		[Token(Token = "0x40013A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private <>c__DisplayClass21_0 <>8__1;

		[Token(Token = "0x17000347")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001FE7")]
			[Address(RVA = "0xFD50A4", Offset = "0xFD50A4", VA = "0xFD50A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000348")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001FE9")]
			[Address(RVA = "0xFD5114", Offset = "0xFD5114", VA = "0xFD5114", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FE4")]
		[Address(RVA = "0xFD3DA0", Offset = "0xFD3DA0", VA = "0xFD3DA0")]
		[DebuggerHidden]
		public <DoLightPyramidPuzzleCompleteSeq>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6001FE5")]
		[Address(RVA = "0xFD4994", Offset = "0xFD4994", VA = "0xFD4994", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001FE6")]
		[Address(RVA = "0xFD4998", Offset = "0xFD4998", VA = "0xFD4998", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FE8")]
		[Address(RVA = "0xFD50AC", Offset = "0xFD50AC", VA = "0xFD50AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject BirthingPodPfb;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject _podRoot;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SkinnedMeshRenderer _podSkin;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject PostSequenceWarpPoint;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public LightPyramidPuzzle lightPyramidPuzzle;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ConcentricRings rings;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SerpentPath serpentPathFinal;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BCE0C", Offset = "0x9BCE0C")]
	public ParticleSystem pfxStars;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ParticleSystem pfxLightPyramidSwimInwards;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ParticleSystem pfxLightPyramidExplode;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private AudioService.AudioServiceLoopHandle _sfxLoopHandle;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool SerpentPatAtEnd;

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0xFD37F4", Offset = "0xFD37F4", VA = "0xFD37F4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0xFD3988", Offset = "0xFD3988", VA = "0xFD3988")]
	private void Start()
	{
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0xFD39B4", Offset = "0xFD39B4", VA = "0xFD39B4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CA96C", Offset = "0x9CA96C")]
	private IEnumerator DoSoundSeq()
	{
		return null;
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0xFD3A54", Offset = "0xFD3A54", VA = "0xFD3A54")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0xFD3A98", Offset = "0xFD3A98", VA = "0xFD3A98")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9CA9D0", Offset = "0x9CA9D0")]
	public void PlayEndingPostSceneTransport()
	{
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0xFD3B88", Offset = "0xFD3B88", VA = "0xFD3B88")]
	public void OnTouchLightPyramid(LightPyramidTouchEvent eventMsg)
	{
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0xFD3CA8", Offset = "0xFD3CA8", VA = "0xFD3CA8")]
	public void OnLightPyramidExplode(PuzzleSolvedMessage eventMsg)
	{
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0xFD3B14", Offset = "0xFD3B14", VA = "0xFD3B14")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CAA08", Offset = "0x9CAA08")]
	private IEnumerator DoEndingPostSceneTransport()
	{
		return null;
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0xFD3C34", Offset = "0xFD3C34", VA = "0xFD3C34")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CAA6C", Offset = "0x9CAA6C")]
	private IEnumerator DoTouchLightPyramidSeq()
	{
		return null;
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0xFD3CD4", Offset = "0xFD3CD4", VA = "0xFD3CD4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CAAD0", Offset = "0x9CAAD0")]
	private IEnumerator DoLightPyramidPuzzleCompleteSeq()
	{
		return null;
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0xFD3DCC", Offset = "0xFD3DCC", VA = "0xFD3DCC")]
	public EndingPostScene()
	{
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0xFD3DDC", Offset = "0xFD3DDC", VA = "0xFD3DDC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CAB34", Offset = "0x9CAB34")]
	private float <DoTouchLightPyramidSeq>b__20_0()
	{
		return default(float);
	}

	[Token(Token = "0x600010B")]
	[Address(RVA = "0xFD3E08", Offset = "0xFD3E08", VA = "0xFD3E08")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CAB44", Offset = "0x9CAB44")]
	private void <DoTouchLightPyramidSeq>b__20_1(float x)
	{
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0xFD3E40", Offset = "0xFD3E40", VA = "0xFD3E40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CAB54", Offset = "0x9CAB54")]
	private float <DoTouchLightPyramidSeq>b__20_2()
	{
		return default(float);
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0xFD3E6C", Offset = "0xFD3E6C", VA = "0xFD3E6C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CAB64", Offset = "0x9CAB64")]
	private void <DoTouchLightPyramidSeq>b__20_3(float x)
	{
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0xFD3EA4", Offset = "0xFD3EA4", VA = "0xFD3EA4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CAB74", Offset = "0x9CAB74")]
	private float <DoTouchLightPyramidSeq>b__20_4()
	{
		return default(float);
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0xFD3ED0", Offset = "0xFD3ED0", VA = "0xFD3ED0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CAB84", Offset = "0x9CAB84")]
	private void <DoTouchLightPyramidSeq>b__20_5(float x)
	{
	}
}
[Token(Token = "0x200002A")]
public class EndingSequencePuzzle : MonoBehaviour
{
	[Token(Token = "0x2000463")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BAAB8", Offset = "0x9BAAB8")]
	private sealed class <>c__DisplayClass26_0
	{
		[Token(Token = "0x40013AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LilyFlowerBiomeEnding flowerAnim;

		[Token(Token = "0x40013AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EndingSequencePuzzle <>4__this;

		[Token(Token = "0x6001FEA")]
		[Address(RVA = "0xFD6708", Offset = "0xFD6708", VA = "0xFD6708")]
		public <>c__DisplayClass26_0()
		{
		}

		[Token(Token = "0x6001FEB")]
		[Address(RVA = "0xFD6710", Offset = "0xFD6710", VA = "0xFD6710")]
		internal void <DoAnimationSequence>b__16()
		{
		}
	}

	[Token(Token = "0x2000464")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BAAC8", Offset = "0x9BAAC8")]
	private sealed class <>c__DisplayClass26_1
	{
		[Token(Token = "0x40013AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int i;

		[Token(Token = "0x40013AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EndingSequencePuzzle <>4__this;

		[Token(Token = "0x6001FEC")]
		[Address(RVA = "0xFD6910", Offset = "0xFD6910", VA = "0xFD6910")]
		public <>c__DisplayClass26_1()
		{
		}
	}

	[Token(Token = "0x2000465")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BAAD8", Offset = "0x9BAAD8")]
	private sealed class <>c__DisplayClass26_2
	{
		[Token(Token = "0x40013AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LilypadWithRipple lilyPad;

		[Token(Token = "0x40013AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 lilyPadPos;

		[Token(Token = "0x40013B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool isFinalLilyPad;

		[Token(Token = "0x40013B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int j;

		[Token(Token = "0x40013B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 lilyPadPosStart;

		[Token(Token = "0x40013B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public <>c__DisplayClass26_1 CS$<>8__locals1;

		[Token(Token = "0x40013B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TweenCallback <>9__18;

		[Token(Token = "0x40013B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public TweenCallback <>9__19;

		[Token(Token = "0x6001FED")]
		[Address(RVA = "0xFD6918", Offset = "0xFD6918", VA = "0xFD6918")]
		public <>c__DisplayClass26_2()
		{
		}

		[Token(Token = "0x6001FEE")]
		[Address(RVA = "0xFD6920", Offset = "0xFD6920", VA = "0xFD6920")]
		internal void <DoAnimationSequence>b__17()
		{
		}

		[Token(Token = "0x6001FEF")]
		[Address(RVA = "0xFD6A94", Offset = "0xFD6A94", VA = "0xFD6A94")]
		internal void <DoAnimationSequence>b__18()
		{
		}

		[Token(Token = "0x6001FF0")]
		[Address(RVA = "0xFD6B80", Offset = "0xFD6B80", VA = "0xFD6B80")]
		internal void <DoAnimationSequence>b__19()
		{
		}
	}

	[Token(Token = "0x2000466")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BAAE8", Offset = "0x9BAAE8")]
	private sealed class <>c__DisplayClass26_3
	{
		[Token(Token = "0x40013B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GenericTriggerVolume lilypadTrigger;

		[Token(Token = "0x40013B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action eventOnPlayerLandOnLilypad;

		[Token(Token = "0x40013B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public <>c__DisplayClass26_2 CS$<>8__locals2;

		[Token(Token = "0x6001FF1")]
		[Address(RVA = "0xFD6F5C", Offset = "0xFD6F5C", VA = "0xFD6F5C")]
		public <>c__DisplayClass26_3()
		{
		}

		[Token(Token = "0x6001FF2")]
		[Address(RVA = "0xFD6F64", Offset = "0xFD6F64", VA = "0xFD6F64")]
		internal void <DoAnimationSequence>b__20()
		{
		}
	}

	[Token(Token = "0x2000467")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BAAF8", Offset = "0x9BAAF8")]
	private sealed class <>c__DisplayClass26_4
	{
		[Token(Token = "0x40013B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LilyFlowerBiomeEnding flowerAnim;

		[Token(Token = "0x40013BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EndingSequencePuzzle <>4__this;

		[Token(Token = "0x6001FF3")]
		[Address(RVA = "0xFD743C", Offset = "0xFD743C", VA = "0xFD743C")]
		public <>c__DisplayClass26_4()
		{
		}

		[Token(Token = "0x6001FF4")]
		[Address(RVA = "0xFD7444", Offset = "0xFD7444", VA = "0xFD7444")]
		internal void <DoAnimationSequence>b__22()
		{
		}
	}

	[Token(Token = "0x2000468")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BAB08", Offset = "0x9BAB08")]
	private sealed class <DoAnimationSequence>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EndingSequencePuzzle <>4__this;

		[Token(Token = "0x40013BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Material <matEndingWater>5__2;

		[Token(Token = "0x40013BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color <matEndingWaterTint>5__3;

		[Token(Token = "0x40013C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Color <matEndingWaterShorelineTint>5__4;

		[Token(Token = "0x40013C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float <rootAnimTimeSecs>5__5;

		[Token(Token = "0x17000349")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001FF8")]
			[Address(RVA = "0xFD8F74", Offset = "0xFD8F74", VA = "0xFD8F74", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700034A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001FFA")]
			[Address(RVA = "0xFD8FE4", Offset = "0xFD8FE4", VA = "0xFD8FE4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FF5")]
		[Address(RVA = "0xFD6244", Offset = "0xFD6244", VA = "0xFD6244")]
		[DebuggerHidden]
		public <DoAnimationSequence>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x6001FF6")]
		[Address(RVA = "0xFD77BC", Offset = "0xFD77BC", VA = "0xFD77BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001FF7")]
		[Address(RVA = "0xFD77C0", Offset = "0xFD77C0", VA = "0xFD77C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FF9")]
		[Address(RVA = "0xFD8F7C", Offset = "0xFD8F7C", VA = "0xFD8F7C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000469")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BAB18", Offset = "0x9BAB18")]
	private sealed class <>c__DisplayClass28_0
	{
		[Token(Token = "0x40013C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Player player;

		[Token(Token = "0x40013C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EndingSequencePuzzle <>4__this;

		[Token(Token = "0x6001FFB")]
		[Address(RVA = "0xFD7570", Offset = "0xFD7570", VA = "0xFD7570")]
		public <>c__DisplayClass28_0()
		{
		}

		[Token(Token = "0x6001FFC")]
		[Address(RVA = "0xFD7578", Offset = "0xFD7578", VA = "0xFD7578")]
		internal void <DoPlayerPlatformRiseSeq>b__8()
		{
		}

		[Token(Token = "0x6001FFD")]
		[Address(RVA = "0xFD75AC", Offset = "0xFD75AC", VA = "0xFD75AC")]
		internal float <DoPlayerPlatformRiseSeq>b__0()
		{
			return default(float);
		}

		[Token(Token = "0x6001FFE")]
		[Address(RVA = "0xFD75E8", Offset = "0xFD75E8", VA = "0xFD75E8")]
		internal void <DoPlayerPlatformRiseSeq>b__1(float x)
		{
		}

		[Token(Token = "0x6001FFF")]
		[Address(RVA = "0xFD7630", Offset = "0xFD7630", VA = "0xFD7630")]
		internal float <DoPlayerPlatformRiseSeq>b__2()
		{
			return default(float);
		}

		[Token(Token = "0x6002000")]
		[Address(RVA = "0xFD766C", Offset = "0xFD766C", VA = "0xFD766C")]
		internal void <DoPlayerPlatformRiseSeq>b__3(float x)
		{
		}

		[Token(Token = "0x6002001")]
		[Address(RVA = "0xFD76B4", Offset = "0xFD76B4", VA = "0xFD76B4")]
		internal float <DoPlayerPlatformRiseSeq>b__4()
		{
			return default(float);
		}

		[Token(Token = "0x6002002")]
		[Address(RVA = "0xFD76F0", Offset = "0xFD76F0", VA = "0xFD76F0")]
		internal void <DoPlayerPlatformRiseSeq>b__5(float x)
		{
		}

		[Token(Token = "0x6002003")]
		[Address(RVA = "0xFD7738", Offset = "0xFD7738", VA = "0xFD7738")]
		internal float <DoPlayerPlatformRiseSeq>b__6()
		{
			return default(float);
		}

		[Token(Token = "0x6002004")]
		[Address(RVA = "0xFD7774", Offset = "0xFD7774", VA = "0xFD7774")]
		internal void <DoPlayerPlatformRiseSeq>b__7(float x)
		{
		}
	}

	[Token(Token = "0x200046A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BAB28", Offset = "0x9BAB28")]
	private sealed class <DoPlayerPlatformRiseSeq>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EndingSequencePuzzle <>4__this;

		[Token(Token = "0x1700034B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002008")]
			[Address(RVA = "0xFD96CC", Offset = "0xFD96CC", VA = "0xFD96CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700034C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600200A")]
			[Address(RVA = "0xFD973C", Offset = "0xFD973C", VA = "0xFD973C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002005")]
		[Address(RVA = "0xFD6310", Offset = "0xFD6310", VA = "0xFD6310")]
		[DebuggerHidden]
		public <DoPlayerPlatformRiseSeq>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x6002006")]
		[Address(RVA = "0xFD8FEC", Offset = "0xFD8FEC", VA = "0xFD8FEC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002007")]
		[Address(RVA = "0xFD8FF0", Offset = "0xFD8FF0", VA = "0xFD8FF0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002009")]
		[Address(RVA = "0xFD96D4", Offset = "0xFD96D4", VA = "0xFD96D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000E1")]
	private const string __CENTRAL_HANGING_ROOT_NAME = "PfbCentralHangingRoot";

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BCE44", Offset = "0x9BCE44")]
	[SerializeField]
	private Transform _centralHangingRoot;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private InteractiveCore _hangingRootInteractiveCore;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Animator _hangingRootAnimator;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer _hangingRootMeshRenderer;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private MeshRenderer _endingGlowWater;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BCEA0", Offset = "0x9BCEA0")]
	[SerializeField]
	private ConcentricRings RingsFloor;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private ConcentricRings RingsCeiling;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BCEFC", Offset = "0x9BCEFC")]
	[SerializeField]
	private GameObject _lilyFlowersRoot;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private float _lilyFlowersSpacingTime;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private LilyFlowerBiomeEnding[] _lilyFlowers;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BCF58", Offset = "0x9BCF58")]
	[SerializeField]
	private Transform _lilyPadPropogationTransform;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Transform _lilyPadStepsRoot;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Transform _otherLilyPads;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<LilypadWithRipple> _lilyPads;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private float _lilypadStepsMaxHeight;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BCFD4", Offset = "0x9BCFD4")]
	private GameObject _finalLilypadShine;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private ParticleSystem _pfxFinalPlatform;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private ParticleSystem _pfxFishSwimUpwards;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BD02C", Offset = "0x9BD02C")]
	[SerializeField]
	private FlockFish FishRising;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private SerpentPath SerpentPathRiseUpwards;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject CaveAreaRoot;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BD088", Offset = "0x9BD088")]
	public GameObject PostSequenceRoot;

	[Token(Token = "0x6000110")]
	[Address(RVA = "0xFD592C", Offset = "0xFD592C", VA = "0xFD592C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0xFD5F24", Offset = "0xFD5F24", VA = "0xFD5F24")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9CAB94", Offset = "0x9CAB94")]
	private void PlayAnimationSequence()
	{
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0xFD5FC4", Offset = "0xFD5FC4", VA = "0xFD5FC4")]
	private void OnTouchedHangingRoot([Optional] PlayerControllerInput input)
	{
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0xFD5F50", Offset = "0xFD5F50", VA = "0xFD5F50")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CABCC", Offset = "0x9CABCC")]
	private IEnumerator DoAnimationSequence()
	{
		return null;
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0xFD6270", Offset = "0xFD6270", VA = "0xFD6270")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9CAC30", Offset = "0x9CAC30")]
	private void PlayPlayerRiseOnPlatformSeq()
	{
	}

	[Token(Token = "0x6000115")]
	[Address(RVA = "0xFD629C", Offset = "0xFD629C", VA = "0xFD629C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CAC68", Offset = "0x9CAC68")]
	private IEnumerator DoPlayerPlatformRiseSeq()
	{
		return null;
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0xFD633C", Offset = "0xFD633C", VA = "0xFD633C")]
	public EndingSequencePuzzle()
	{
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0xFD63BC", Offset = "0xFD63BC", VA = "0xFD63BC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CACCC", Offset = "0x9CACCC")]
	private float <DoAnimationSequence>b__26_12()
	{
		return default(float);
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0xFD63E8", Offset = "0xFD63E8", VA = "0xFD63E8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CACDC", Offset = "0x9CACDC")]
	private void <DoAnimationSequence>b__26_13(float x)
	{
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0xFD6420", Offset = "0xFD6420", VA = "0xFD6420")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CACEC", Offset = "0x9CACEC")]
	private float <DoAnimationSequence>b__26_14()
	{
		return default(float);
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0xFD644C", Offset = "0xFD644C", VA = "0xFD644C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CACFC", Offset = "0x9CACFC")]
	private void <DoAnimationSequence>b__26_15(float x)
	{
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0xFD6484", Offset = "0xFD6484", VA = "0xFD6484")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CAD0C", Offset = "0x9CAD0C")]
	private float <DoAnimationSequence>b__26_0()
	{
		return default(float);
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0xFD64B0", Offset = "0xFD64B0", VA = "0xFD64B0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CAD1C", Offset = "0x9CAD1C")]
	private void <DoAnimationSequence>b__26_1(float x)
	{
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0xFD64E8", Offset = "0xFD64E8", VA = "0xFD64E8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CAD2C", Offset = "0x9CAD2C")]
	private float <DoAnimationSequence>b__26_2()
	{
		return default(float);
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0xFD6514", Offset = "0xFD6514", VA = "0xFD6514")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CAD3C", Offset = "0x9CAD3C")]
	private void <DoAnimationSequence>b__26_3(float x)
	{
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0xFD654C", Offset = "0xFD654C", VA = "0xFD654C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CAD4C", Offset = "0x9CAD4C")]
	private float <DoAnimationSequence>b__26_4()
	{
		return default(float);
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0xFD6578", Offset = "0xFD6578", VA = "0xFD6578")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CAD5C", Offset = "0x9CAD5C")]
	private void <DoAnimationSequence>b__26_5(float x)
	{
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0xFD65B0", Offset = "0xFD65B0", VA = "0xFD65B0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CAD6C", Offset = "0x9CAD6C")]
	private float <DoAnimationSequence>b__26_6()
	{
		return default(float);
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0xFD65DC", Offset = "0xFD65DC", VA = "0xFD65DC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CAD7C", Offset = "0x9CAD7C")]
	private void <DoAnimationSequence>b__26_7(float x)
	{
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0xFD6614", Offset = "0xFD6614", VA = "0xFD6614")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CAD8C", Offset = "0x9CAD8C")]
	private float <DoAnimationSequence>b__26_8()
	{
		return default(float);
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0xFD6640", Offset = "0xFD6640", VA = "0xFD6640")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CAD9C", Offset = "0x9CAD9C")]
	private void <DoAnimationSequence>b__26_9(float x)
	{
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0xFD6678", Offset = "0xFD6678", VA = "0xFD6678")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CADAC", Offset = "0x9CADAC")]
	private float <DoAnimationSequence>b__26_10()
	{
		return default(float);
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0xFD66A4", Offset = "0xFD66A4", VA = "0xFD66A4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CADBC", Offset = "0x9CADBC")]
	private void <DoAnimationSequence>b__26_11(float x)
	{
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0xFD66DC", Offset = "0xFD66DC", VA = "0xFD66DC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CADCC", Offset = "0x9CADCC")]
	private void <DoAnimationSequence>b__26_21(LocomotionService.Messages.PostLocomotionTeleportGlobalMessage message)
	{
	}
}
[Token(Token = "0x200002B")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9B7F3C", Offset = "0x9B7F3C")]
public class GnomeMerchantEntity : MonoBehaviour, IStateProvider
{
	[Serializable]
	[Token(Token = "0x200046B")]
	public class State_Merchant_WaitForBell : ITickableState, IState
	{
		[Token(Token = "0x40013C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GnomeMerchantEntity Entity;

		[Token(Token = "0x40013C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool bellWasRung;

		[Token(Token = "0x600200B")]
		[Address(RVA = "0xDC489C", Offset = "0xDC489C", VA = "0xDC489C", Slot = "5")]
		public IState OnStateEnter()
		{
			return null;
		}

		[Token(Token = "0x600200C")]
		[Address(RVA = "0xDC49FC", Offset = "0xDC49FC", VA = "0xDC49FC", Slot = "6")]
		public void OnStateExit()
		{
		}

		[Token(Token = "0x600200D")]
		[Address(RVA = "0xDC4B54", Offset = "0xDC4B54", VA = "0xDC4B54", Slot = "4")]
		public IState OnStateTick()
		{
			return null;
		}

		[Token(Token = "0x600200E")]
		[Address(RVA = "0xDC4B88", Offset = "0xDC4B88", VA = "0xDC4B88")]
		private void HandleBellRing(PlayerControllerInput input)
		{
		}

		[Token(Token = "0x600200F")]
		[Address(RVA = "0xDC4B94", Offset = "0xDC4B94", VA = "0xDC4B94")]
		public State_Merchant_WaitForBell()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200046C")]
	public class State_Merchant_Storefront : ITickableState, IState
	{
		[Token(Token = "0x40013C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GnomeMerchantEntity Entity;

		[Token(Token = "0x40013CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform TargetStoreFrontAlignment;

		[Token(Token = "0x40013CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float RotLerpScalar;

		[Token(Token = "0x40013CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool StoreOpen;

		[Token(Token = "0x40013CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float TimeRemaining;

		[Token(Token = "0x6002010")]
		[Address(RVA = "0xDC4674", Offset = "0xDC4674", VA = "0xDC4674", Slot = "5")]
		public IState OnStateEnter()
		{
			return null;
		}

		[Token(Token = "0x6002011")]
		[Address(RVA = "0xDC4688", Offset = "0xDC4688", VA = "0xDC4688", Slot = "6")]
		public void OnStateExit()
		{
		}

		[Token(Token = "0x6002012")]
		[Address(RVA = "0xDC468C", Offset = "0xDC468C", VA = "0xDC468C", Slot = "4")]
		public IState OnStateTick()
		{
			return null;
		}

		[Token(Token = "0x6002013")]
		[Address(RVA = "0xDC4884", Offset = "0xDC4884", VA = "0xDC4884")]
		public State_Merchant_Storefront()
		{
		}
	}

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public InteractiveCore RingableBell;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public StudioEventEmitter SFX_MerchantBell;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform IdleNavigationMarker;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform ShopNavigationMarker;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject BoatRoot;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BD0C0", Offset = "0x9BD0C0")]
	public MoveTo_State _moveToStorefront;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public MoveTo_State _moveToDarkness;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public State_Merchant_WaitForBell _waitForBellState;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public State_Merchant_Storefront _storefrontState;

	[Token(Token = "0x6000128")]
	[Address(RVA = "0xDC42E8", Offset = "0xDC42E8", VA = "0xDC42E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0xDC442C", Offset = "0xDC442C", VA = "0xDC442C", Slot = "4")]
	public IState InitialState()
	{
		return null;
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0xDC4434", Offset = "0xDC4434", VA = "0xDC4434")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9CADDC", Offset = "0x9CADDC")]
	public void ContextMenu_BellRing()
	{
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0xDC44A4", Offset = "0xDC44A4", VA = "0xDC44A4")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9CAE14", Offset = "0x9CAE14")]
	public void ContextMenu_MerchantLeave()
	{
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0xDC4514", Offset = "0xDC4514", VA = "0xDC4514")]
	public GnomeMerchantEntity()
	{
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0xDC451C", Offset = "0xDC451C", VA = "0xDC451C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CAE4C", Offset = "0x9CAE4C")]
	private void <Awake>b__9_0(PlayerControllerInput input)
	{
	}
}
[Token(Token = "0x200002C")]
public class GnomeShip : MonoBehaviour
{
	[Token(Token = "0x200046D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BAB38", Offset = "0x9BAB38")]
	private sealed class <DoCycle>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GnomeShip <>4__this;

		[Token(Token = "0x1700034D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002017")]
			[Address(RVA = "0xDC5488", Offset = "0xDC5488", VA = "0xDC5488", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700034E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002019")]
			[Address(RVA = "0xDC54F8", Offset = "0xDC54F8", VA = "0xDC54F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002014")]
		[Address(RVA = "0xDC4C7C", Offset = "0xDC4C7C", VA = "0xDC4C7C")]
		[DebuggerHidden]
		public <DoCycle>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6002015")]
		[Address(RVA = "0xDC4E14", Offset = "0xDC4E14", VA = "0xDC4E14", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002016")]
		[Address(RVA = "0xDC4E18", Offset = "0xDC4E18", VA = "0xDC4E18", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002018")]
		[Address(RVA = "0xDC5490", Offset = "0xDC5490", VA = "0xDC5490", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LensFlare lensFlare;

	[Token(Token = "0x600012E")]
	[Address(RVA = "0xDC4B9C", Offset = "0xDC4B9C", VA = "0xDC4B9C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0xDC4C08", Offset = "0xDC4C08", VA = "0xDC4C08")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CAE5C", Offset = "0x9CAE5C")]
	private IEnumerator DoCycle()
	{
		return null;
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0xDC4CA8", Offset = "0xDC4CA8", VA = "0xDC4CA8")]
	private void DoLens(float target, float duration)
	{
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0xDC4D9C", Offset = "0xDC4D9C", VA = "0xDC4D9C")]
	public GnomeShip()
	{
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0xDC4DA4", Offset = "0xDC4DA4", VA = "0xDC4DA4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CAEC0", Offset = "0x9CAEC0")]
	private float <DoLens>b__3_0()
	{
		return default(float);
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0xDC4DD4", Offset = "0xDC4DD4", VA = "0xDC4DD4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CAED0", Offset = "0x9CAED0")]
	private void <DoLens>b__3_1(float x)
	{
	}
}
[Token(Token = "0x200002D")]
public class GrabbableNodesPuzzle : MonoBehaviour, IPuzzle
{
	[Token(Token = "0x200046E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BAB48", Offset = "0x9BAB48")]
	private sealed class <>c__DisplayClass4_0
	{
		[Token(Token = "0x40013D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int j;

		[Token(Token = "0x40013D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GrabbableNodesPuzzle <>4__this;

		[Token(Token = "0x600201A")]
		[Address(RVA = "0xDC7228", Offset = "0xDC7228", VA = "0xDC7228")]
		public <>c__DisplayClass4_0()
		{
		}

		[Token(Token = "0x600201B")]
		[Address(RVA = "0xDC7470", Offset = "0xDC7470", VA = "0xDC7470")]
		internal void <Start>b__0(GrabbableNodePrototype pulledNode)
		{
		}
	}

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private BitExtentions.BitSet _honkedNodes;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GrabbableNodePrototype[] _honkers;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BD0F8", Offset = "0x9BD0F8")]
	private float <PuzzleTimerSeconds>k__BackingField;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BD108", Offset = "0x9BD108")]
	private LightPyramidPuzzle <LinkedPuzzlePyramid>k__BackingField;

	[Token(Token = "0x17000010")]
	private int MaxHonkCount
	{
		[Token(Token = "0x6000134")]
		[Address(RVA = "0xDC706C", Offset = "0xDC706C", VA = "0xDC706C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000011")]
	public float PuzzleTimerSeconds
	{
		[Token(Token = "0x6000138")]
		[Address(RVA = "0xDC743C", Offset = "0xDC743C", VA = "0xDC743C", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CAEE0", Offset = "0x9CAEE0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000139")]
		[Address(RVA = "0xDC7444", Offset = "0xDC7444", VA = "0xDC7444", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CAEF0", Offset = "0x9CAEF0")]
		set
		{
		}
	}

	[Token(Token = "0x17000012")]
	public LightPyramidPuzzle LinkedPuzzlePyramid
	{
		[Token(Token = "0x600013A")]
		[Address(RVA = "0xDC744C", Offset = "0xDC744C", VA = "0xDC744C", Slot = "6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CAF00", Offset = "0x9CAF00")]
		get
		{
			return null;
		}
		[Token(Token = "0x600013B")]
		[Address(RVA = "0xDC7454", Offset = "0xDC7454", VA = "0xDC7454", Slot = "7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CAF10", Offset = "0x9CAF10")]
		set
		{
		}
	}

	[Token(Token = "0x17000013")]
	public float PuzzleProgress
	{
		[Token(Token = "0x600013C")]
		[Address(RVA = "0xDC7270", Offset = "0xDC7270", VA = "0xDC7270", Slot = "8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0xDC7098", Offset = "0xDC7098", VA = "0xDC7098")]
	private void Start()
	{
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0xDC7230", Offset = "0xDC7230", VA = "0xDC7230")]
	private void CheckPuzzle()
	{
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0xDC7310", Offset = "0xDC7310", VA = "0xDC7310")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0xDC745C", Offset = "0xDC745C", VA = "0xDC745C", Slot = "9")]
	public void ResetPuzzle()
	{
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0xDC7304", Offset = "0xDC7304", VA = "0xDC7304", Slot = "10")]
	public void SolvePuzzle(bool silent)
	{
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0xDC7468", Offset = "0xDC7468", VA = "0xDC7468")]
	public GrabbableNodesPuzzle()
	{
	}
}
[Token(Token = "0x200002E")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9B7FA0", Offset = "0x9B7FA0")]
public sealed class GroundPlanter : MonoBehaviour, IPlantableSurface, IGameObject
{
	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float LifeTimeSeconds;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float _time;

	[Token(Token = "0x17000014")]
	public bool CanBeDestroyed
	{
		[Token(Token = "0x6000140")]
		[Address(RVA = "0xDCBC60", Offset = "0xDCBC60", VA = "0xDCBC60", Slot = "10")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000015")]
	public int OccupantCount
	{
		[Token(Token = "0x6000141")]
		[Address(RVA = "0xDCBC68", Offset = "0xDCBC68", VA = "0xDCBC68", Slot = "7")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000016")]
	public Transform UniformScaleTransform
	{
		[Token(Token = "0x6000142")]
		[Address(RVA = "0xDCBCA4", Offset = "0xDCBCA4", VA = "0xDCBCA4", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0xDCBCAC", Offset = "0xDCBCAC", VA = "0xDCBCAC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0xDCBCB4", Offset = "0xDCBCB4", VA = "0xDCBCB4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0xDCBD2C", Offset = "0xDCBD2C", VA = "0xDCBD2C", Slot = "4")]
	public Vector3? GetPlantingPosition(Vector3? desiredPlantingPosition)
	{
		return null;
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0xDCBDF8", Offset = "0xDCBDF8", VA = "0xDCBDF8")]
	public void SetOccupancy(bool occupancy)
	{
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0xDCBE38", Offset = "0xDCBE38", VA = "0xDCBE38", Slot = "5")]
	public void SetOccupancy(bool occupancy, PersistentEntity occupant)
	{
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0xDCBE40", Offset = "0xDCBE40", VA = "0xDCBE40", Slot = "6")]
	public bool CanBePlantedUpon()
	{
		return default(bool);
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0xDCBE48", Offset = "0xDCBE48", VA = "0xDCBE48", Slot = "9")]
	public FujiLocalInstanceRef GetOccupant(int index)
	{
		return default(FujiLocalInstanceRef);
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0xDCBE54", Offset = "0xDCBE54", VA = "0xDCBE54")]
	public GroundPlanter()
	{
	}

	[SpecialName]
	[Token(Token = "0x600014B")]
	[Address(RVA = "0xDCBE64", Offset = "0xDCBE64", VA = "0xDCBE64", Slot = "11")]
	private GameObject IGameObject.get_gameObject()
	{
		return null;
	}

	[SpecialName]
	[Token(Token = "0x600014C")]
	[Address(RVA = "0xDCBE6C", Offset = "0xDCBE6C", VA = "0xDCBE6C", Slot = "12")]
	private Transform IGameObject.get_transform()
	{
		return null;
	}
}
[Token(Token = "0x200002F")]
public sealed class InfinitePlanter : MonoBehaviour, IPlantableSurface, IGameObject, IFujiSerializable, IWaterReceiver
{
	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[FujiSerialized]
	public List<FujiLocalInstanceRef> occupants;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool DistributeWater;

	[Token(Token = "0x17000017")]
	public bool CanBeDestroyed
	{
		[Token(Token = "0x600014D")]
		[Address(RVA = "0xDCDA50", Offset = "0xDCDA50", VA = "0xDCDA50", Slot = "10")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000018")]
	public int OccupantCount
	{
		[Token(Token = "0x6000155")]
		[Address(RVA = "0xDCDE98", Offset = "0xDCDE98", VA = "0xDCDE98", Slot = "7")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000019")]
	public Transform UniformScaleTransform
	{
		[Token(Token = "0x6000156")]
		[Address(RVA = "0xDCDEE8", Offset = "0xDCDEE8", VA = "0xDCDEE8", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0xDCDA58", Offset = "0xDCDA58", VA = "0xDCDA58", Slot = "4")]
	public Vector3? GetPlantingPosition(Vector3? desiredPlantingPosition)
	{
		return null;
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0xDCDA64", Offset = "0xDCDA64", VA = "0xDCDA64", Slot = "5")]
	public void SetOccupancy(bool occupancy, PersistentEntity occupant)
	{
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0xDCDB8C", Offset = "0xDCDB8C", VA = "0xDCDB8C", Slot = "6")]
	public bool CanBePlantedUpon()
	{
		return default(bool);
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0xDCDB94", Offset = "0xDCDB94", VA = "0xDCDB94", Slot = "9")]
	public FujiLocalInstanceRef GetOccupant(int index)
	{
		return default(FujiLocalInstanceRef);
	}

	[Token(Token = "0x6000152")]
	[Address(RVA = "0xDCDC04", Offset = "0xDCDC04", VA = "0xDCDC04", Slot = "13")]
	public void OnPreSerialize()
	{
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0xDCDC08", Offset = "0xDCDC08", VA = "0xDCDC08", Slot = "14")]
	public void OnPostDeserialize()
	{
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0xDCDC0C", Offset = "0xDCDC0C", VA = "0xDCDC0C", Slot = "15")]
	public void ReceiveWater(float waterAmount, Vector3? worldPosition, InputHandedness? hand, Vector3? worldSprayVelocity)
	{
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0xDCDFBC", Offset = "0xDCDFBC", VA = "0xDCDFBC")]
	public InfinitePlanter()
	{
	}

	[SpecialName]
	[Token(Token = "0x6000158")]
	[Address(RVA = "0xDCE034", Offset = "0xDCE034", VA = "0xDCE034", Slot = "11")]
	private GameObject IGameObject.get_gameObject()
	{
		return null;
	}

	[SpecialName]
	[Token(Token = "0x6000159")]
	[Address(RVA = "0xDCE03C", Offset = "0xDCE03C", VA = "0xDCE03C", Slot = "12")]
	private Transform IGameObject.get_transform()
	{
		return null;
	}
}
[Token(Token = "0x2000030")]
public class IslandPath : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200046F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BAB58", Offset = "0x9BAB58")]
	private sealed class <>c
	{
		[Token(Token = "0x40013D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40013D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<bool> <>9__9_0;

		[Token(Token = "0x600201D")]
		[Address(RVA = "0xBEB3D0", Offset = "0xBEB3D0", VA = "0xBEB3D0")]
		public <>c()
		{
		}

		[Token(Token = "0x600201E")]
		[Address(RVA = "0xBEB3D8", Offset = "0xBEB3D8", VA = "0xBEB3D8")]
		internal bool <Start>b__9_0()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000470")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BAB68", Offset = "0x9BAB68")]
	private sealed class <Start>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IslandPath <>4__this;

		[Token(Token = "0x1700034F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002022")]
			[Address(RVA = "0xBEB838", Offset = "0xBEB838", VA = "0xBEB838", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000350")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002024")]
			[Address(RVA = "0xBEB8A8", Offset = "0xBEB8A8", VA = "0xBEB8A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600201F")]
		[Address(RVA = "0xBEB64C", Offset = "0xBEB64C", VA = "0xBEB64C")]
		[DebuggerHidden]
		public <Start>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6002020")]
		[Address(RVA = "0xBEB678", Offset = "0xBEB678", VA = "0xBEB678", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002021")]
		[Address(RVA = "0xBEB67C", Offset = "0xBEB67C", VA = "0xBEB67C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002023")]
		[Address(RVA = "0xBEB840", Offset = "0xBEB840", VA = "0xBEB840", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000471")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BAB78", Offset = "0x9BAB78")]
	private sealed class <LockIslandPathNodes>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IslandPath <>4__this;

		[Token(Token = "0x17000351")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002028")]
			[Address(RVA = "0xBEB5D4", Offset = "0xBEB5D4", VA = "0xBEB5D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000352")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600202A")]
			[Address(RVA = "0xBEB644", Offset = "0xBEB644", VA = "0xBEB644", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002025")]
		[Address(RVA = "0xBEB438", Offset = "0xBEB438", VA = "0xBEB438")]
		[DebuggerHidden]
		public <LockIslandPathNodes>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6002026")]
		[Address(RVA = "0xBEB464", Offset = "0xBEB464", VA = "0xBEB464", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002027")]
		[Address(RVA = "0xBEB468", Offset = "0xBEB468", VA = "0xBEB468", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002029")]
		[Address(RVA = "0xBEB5DC", Offset = "0xBEB5DC", VA = "0xBEB5DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000472")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BAB88", Offset = "0x9BAB88")]
	private sealed class <UnlockIslandPathNodes>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IslandPath <>4__this;

		[Token(Token = "0x40013DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private PathNode[] <>7__wrap1;

		[Token(Token = "0x40013DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <>7__wrap2;

		[Token(Token = "0x17000353")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600202E")]
			[Address(RVA = "0xBEBAA8", Offset = "0xBEBAA8", VA = "0xBEBAA8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000354")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002030")]
			[Address(RVA = "0xBEBB18", Offset = "0xBEBB18", VA = "0xBEBB18", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600202B")]
		[Address(RVA = "0xBEB8B0", Offset = "0xBEB8B0", VA = "0xBEB8B0")]
		[DebuggerHidden]
		public <UnlockIslandPathNodes>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x600202C")]
		[Address(RVA = "0xBEB8DC", Offset = "0xBEB8DC", VA = "0xBEB8DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600202D")]
		[Address(RVA = "0xBEB8E0", Offset = "0xBEB8E0", VA = "0xBEB8E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600202F")]
		[Address(RVA = "0xBEBAB0", Offset = "0xBEBAB0", VA = "0xBEBAB0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool _isLocked;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool pathIsLockedOnStart;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private PathRoot _pathRoot;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LoadingZoneKey islandZoneToUnlock;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PathNode[] pathNodes;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public NarrativeEventIdentifier Identifier;

	[Token(Token = "0x1700001A")]
	public bool IsLocked
	{
		[Token(Token = "0x600015A")]
		[Address(RVA = "0xDD7C54", Offset = "0xDD7C54", VA = "0xDD7C54")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0xDD7C5C", Offset = "0xDD7C5C", VA = "0xDD7C5C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0xDD7CB4", Offset = "0xDD7CB4", VA = "0xDD7CB4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CAF20", Offset = "0x9CAF20")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0xDD7D28", Offset = "0xDD7D28", VA = "0xDD7D28")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0xDD7DAC", Offset = "0xDD7DAC", VA = "0xDD7DAC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0xDD7E30", Offset = "0xDD7E30", VA = "0xDD7E30")]
	private void OnEventPathStateChange(PathStateChangeEvent eventData)
	{
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0xDD7FC0", Offset = "0xDD7FC0", VA = "0xDD7FC0")]
	public bool Lock()
	{
		return default(bool);
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0xDD8020", Offset = "0xDD8020", VA = "0xDD8020")]
	public bool Unlock()
	{
		return default(bool);
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0xDD807C", Offset = "0xDD807C", VA = "0xDD807C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CAF84", Offset = "0x9CAF84")]
	private IEnumerator LockIslandPathNodes()
	{
		return null;
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0xDD80F0", Offset = "0xDD80F0", VA = "0xDD80F0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CAFE8", Offset = "0x9CAFE8")]
	private IEnumerator UnlockIslandPathNodes()
	{
		return null;
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0xDD8164", Offset = "0xDD8164", VA = "0xDD8164")]
	public IslandPath()
	{
	}
}
[Token(Token = "0x2000031")]
public struct LightGemEvent
{
	[Token(Token = "0x2000473")]
	public enum EventState
	{
		[Token(Token = "0x40013E1")]
		RECEIVED_LIGHTGEM,
		[Token(Token = "0x40013E2")]
		RECEIVED_FINAL_LIGHTGEM
	}

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public EventState State;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public LightGem LightGem;
}
[Token(Token = "0x2000032")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9B8004", Offset = "0x9B8004")]
public class LightGem : MonoBehaviour, IWaterReceiver
{
	[Serializable]
	[Token(Token = "0x2000474")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BAB98", Offset = "0x9BAB98")]
	private sealed class <>c
	{
		[Token(Token = "0x40013E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40013E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static InteractiveCore.InteractiveEvent <>9__12_1;

		[Token(Token = "0x6002032")]
		[Address(RVA = "0xBF3BF8", Offset = "0xBF3BF8", VA = "0xBF3BF8")]
		public <>c()
		{
		}

		[Token(Token = "0x6002033")]
		[Address(RVA = "0xBF3C00", Offset = "0xBF3C00", VA = "0xBF3C00")]
		internal void <Start>b__12_1(PlayerControllerInput input)
		{
		}
	}

	[Token(Token = "0x2000475")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BABA8", Offset = "0x9BABA8")]
	private sealed class <DoTutorialLoop>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LightGem <>4__this;

		[Token(Token = "0x40013E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsed>5__2;

		[Token(Token = "0x17000355")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002037")]
			[Address(RVA = "0xBF3EA4", Offset = "0xBF3EA4", VA = "0xBF3EA4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000356")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002039")]
			[Address(RVA = "0xBF3F14", Offset = "0xBF3F14", VA = "0xBF3F14", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002034")]
		[Address(RVA = "0xBF36A8", Offset = "0xBF36A8", VA = "0xBF36A8")]
		[DebuggerHidden]
		public <DoTutorialLoop>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6002035")]
		[Address(RVA = "0xBF3C38", Offset = "0xBF3C38", VA = "0xBF3C38", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002036")]
		[Address(RVA = "0xBF3C3C", Offset = "0xBF3C3C", VA = "0xBF3C3C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002038")]
		[Address(RVA = "0xBF3EAC", Offset = "0xBF3EAC", VA = "0xBF3EAC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[FujiSerialized]
	public bool Slotted;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private PersistentEntity persistentEntity;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private InteractiveCore _interactive;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform _tfmVisual;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Collider Collider;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Rigidbody Rb;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MaterialPropertyBlock _rendererBlock;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int uniformId_GoalWorldPos;

	[Token(Token = "0x1700001B")]
	public Transform TfmVisual
	{
		[Token(Token = "0x6000165")]
		[Address(RVA = "0xBF2C60", Offset = "0xBF2C60", VA = "0xBF2C60")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0xBF2C68", Offset = "0xBF2C68", VA = "0xBF2C68")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0xBF2CD4", Offset = "0xBF2CD4", VA = "0xBF2CD4")]
	public void Start()
	{
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0xBF30A4", Offset = "0xBF30A4", VA = "0xBF30A4")]
	public void EmitParticles(int count = 3)
	{
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0xBF3168", Offset = "0xBF3168", VA = "0xBF3168")]
	public void SetStretchEffectTarget(Vector3 worldPos, float strength)
	{
	}

	[Token(Token = "0x600016A")]
	[Address(RVA = "0xBF3208", Offset = "0xBF3208", VA = "0xBF3208")]
	public void ResetStretchEffect()
	{
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0xBF3278", Offset = "0xBF3278", VA = "0xBF3278")]
	public void PlayPulsateEffect(float pulseTime = 0.3f)
	{
	}

	[Token(Token = "0x600016C")]
	[Address(RVA = "0xBF3304", Offset = "0xBF3304", VA = "0xBF3304")]
	public bool BecomeConsumed()
	{
		return default(bool);
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0xBF33D0", Offset = "0xBF33D0", VA = "0xBF33D0")]
	public bool BecomeDestroyed()
	{
		return default(bool);
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0xBF3444", Offset = "0xBF3444", VA = "0xBF3444", Slot = "4")]
	public void ReceiveWater(float waterAmount, Vector3? worldPosition, InputHandedness? hand, Vector3? worldSprayVelocity)
	{
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0xBF355C", Offset = "0xBF355C", VA = "0xBF355C")]
	private static bool CheckIfTutorialComplete()
	{
		return default(bool);
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0xBF35D4", Offset = "0xBF35D4", VA = "0xBF35D4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0xBF3634", Offset = "0xBF3634", VA = "0xBF3634")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CB04C", Offset = "0x9CB04C")]
	private IEnumerator DoTutorialLoop()
	{
		return null;
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0xBF36D4", Offset = "0xBF36D4", VA = "0xBF36D4")]
	public LightGem()
	{
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0xBF36DC", Offset = "0xBF36DC", VA = "0xBF36DC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CB0B0", Offset = "0x9CB0B0")]
	private void <Start>b__12_0(PlayerControllerInput input)
	{
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0xBF3724", Offset = "0xBF3724", VA = "0xBF3724")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CB0C0", Offset = "0x9CB0C0")]
	private void <Start>b__12_2(PlayerControllerInput input)
	{
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0xBF39F4", Offset = "0xBF39F4", VA = "0xBF39F4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CB0D0", Offset = "0x9CB0D0")]
	private void <Start>b__12_3(PlayerControllerInput input)
	{
	}
}
[Token(Token = "0x2000033")]
public class LightJewel : MonoBehaviour
{
	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private InteractiveCore _interactive;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[EventRef]
	private string _spawnSound;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[EventRef]
	private string _comeToRestSound;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[EventRef]
	private string _lightRingExpansionSound;

	[Token(Token = "0x6000176")]
	[Address(RVA = "0xBF7480", Offset = "0xBF7480", VA = "0xBF7480")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0xBF75B0", Offset = "0xBF75B0", VA = "0xBF75B0")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0xBF7868", Offset = "0xBF7868", VA = "0xBF7868")]
	public LightJewel()
	{
	}

	[Token(Token = "0x6000179")]
	[Address(RVA = "0xBF7870", Offset = "0xBF7870", VA = "0xBF7870")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CB0E0", Offset = "0x9CB0E0")]
	private void <Awake>b__4_0(PlayerControllerInput input)
	{
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0xBF7B1C", Offset = "0xBF7B1C", VA = "0xBF7B1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CB0F0", Offset = "0x9CB0F0")]
	private void <Initialize>b__5_0()
	{
	}
}
[Token(Token = "0x2000034")]
public sealed class LightPyramidPuzzle : MonoBehaviour, IPuzzle, IFujiSerializable, ISpecialGrabbable
{
	[Serializable]
	[Token(Token = "0x2000476")]
	public struct PuzzleTarget
	{
		[Token(Token = "0x40013E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject Target;

		[Token(Token = "0x40013EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public PuzzleTargetType TargetType;

		[Token(Token = "0x40013EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float Val0;
	}

	[Token(Token = "0x2000477")]
	public enum PuzzleTargetType
	{
		[Token(Token = "0x40013ED")]
		GenericPuzzle = 0,
		[Token(Token = "0x40013EE")]
		FullyWateredAtLeastOnce = 1,
		[Token(Token = "0x40013EF")]
		TouchOrWater = 10,
		[Token(Token = "0x40013F0")]
		SequencerFlourish = 20
	}

	[Token(Token = "0x2000478")]
	public struct DummyPuzzle : IPuzzle
	{
		[Token(Token = "0x40013F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C9608", Offset = "0x9C9608")]
		private float <PuzzleTimerSeconds>k__BackingField;

		[Token(Token = "0x40013F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C9618", Offset = "0x9C9618")]
		private LightPyramidPuzzle <LinkedPuzzlePyramid>k__BackingField;

		[Token(Token = "0x17000357")]
		public float PuzzleTimerSeconds
		{
			[Token(Token = "0x600203A")]
			[Address(RVA = "0xA81D20", Offset = "0xA81D20", VA = "0xA81D20", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D5AA4", Offset = "0x9D5AA4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600203B")]
			[Address(RVA = "0xA81D28", Offset = "0xA81D28", VA = "0xA81D28", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D5AB4", Offset = "0x9D5AB4")]
			set
			{
			}
		}

		[Token(Token = "0x17000358")]
		public LightPyramidPuzzle LinkedPuzzlePyramid
		{
			[Token(Token = "0x600203C")]
			[Address(RVA = "0xA81D30", Offset = "0xA81D30", VA = "0xA81D30", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D5AC4", Offset = "0x9D5AC4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600203D")]
			[Address(RVA = "0xA81D38", Offset = "0xA81D38", VA = "0xA81D38", Slot = "7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D5AD4", Offset = "0x9D5AD4")]
			set
			{
			}
		}

		[Token(Token = "0x17000359")]
		public float PuzzleProgress
		{
			[Token(Token = "0x600203E")]
			[Address(RVA = "0xA81D40", Offset = "0xA81D40", VA = "0xA81D40", Slot = "8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1400003E")]
		public event Action<IPuzzle> PuzzleSolved
		{
			[Token(Token = "0x600203F")]
			[Address(RVA = "0xA81D48", Offset = "0xA81D48", VA = "0xA81D48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D5AE4", Offset = "0x9D5AE4")]
			add
			{
			}
			[Token(Token = "0x6002040")]
			[Address(RVA = "0xA81D50", Offset = "0xA81D50", VA = "0xA81D50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D5AF4", Offset = "0x9D5AF4")]
			remove
			{
			}
		}

		[Token(Token = "0x6002041")]
		[Address(RVA = "0xA81D58", Offset = "0xA81D58", VA = "0xA81D58", Slot = "9")]
		public void ResetPuzzle()
		{
		}

		[Token(Token = "0x6002042")]
		[Address(RVA = "0xA81D5C", Offset = "0xA81D5C", VA = "0xA81D5C", Slot = "10")]
		public void SolvePuzzle(bool instant)
		{
		}
	}

	[Token(Token = "0x2000479")]
	public class PuzzleWrapper : IPuzzle
	{
		[Token(Token = "0x40013F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly IPuzzle _wrappedPuzzle;

		[Token(Token = "0x1700035A")]
		public float PuzzleTimerSeconds
		{
			[Token(Token = "0x6002044")]
			[Address(RVA = "0xBFBD60", Offset = "0xBFBD60", VA = "0xBFBD60", Slot = "4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002045")]
			[Address(RVA = "0xBFBE14", Offset = "0xBFBE14", VA = "0xBFBE14", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x1700035B")]
		public LightPyramidPuzzle LinkedPuzzlePyramid
		{
			[Token(Token = "0x6002046")]
			[Address(RVA = "0xBFBEDC", Offset = "0xBFBEDC", VA = "0xBFBEDC", Slot = "6")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002047")]
			[Address(RVA = "0xBFBF94", Offset = "0xBFBF94", VA = "0xBFBF94", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x1700035C")]
		public float PuzzleProgress
		{
			[Token(Token = "0x6002048")]
			[Address(RVA = "0xBFC05C", Offset = "0xBFC05C", VA = "0xBFC05C", Slot = "8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002043")]
		[Address(RVA = "0xBFBD34", Offset = "0xBFBD34", VA = "0xBFBD34")]
		public PuzzleWrapper(IPuzzle wrappedPuzzle)
		{
		}

		[Token(Token = "0x6002049")]
		[Address(RVA = "0xBFC114", Offset = "0xBFC114", VA = "0xBFC114", Slot = "9")]
		public void ResetPuzzle()
		{
		}

		[Token(Token = "0x600204A")]
		[Address(RVA = "0xBFC1CC", Offset = "0xBFC1CC", VA = "0xBFC1CC", Slot = "10")]
		public void SolvePuzzle(bool silent)
		{
		}
	}

	[Token(Token = "0x200047A")]
	public class GenericPuzzle : MonoBehaviour, IPuzzle
	{
		[Token(Token = "0x40013F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _solved;

		[Token(Token = "0x40013F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C9638", Offset = "0x9C9638")]
		private float <PuzzleTimerSeconds>k__BackingField;

		[Token(Token = "0x40013F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C9648", Offset = "0x9C9648")]
		private LightPyramidPuzzle <LinkedPuzzlePyramid>k__BackingField;

		[Token(Token = "0x40013F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject _shine;

		[Token(Token = "0x1700035D")]
		public float PuzzleTimerSeconds
		{
			[Token(Token = "0x600204B")]
			[Address(RVA = "0xBFB5E0", Offset = "0xBFB5E0", VA = "0xBFB5E0", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D5B04", Offset = "0x9D5B04")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600204C")]
			[Address(RVA = "0xBFB5E8", Offset = "0xBFB5E8", VA = "0xBFB5E8", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D5B14", Offset = "0x9D5B14")]
			set
			{
			}
		}

		[Token(Token = "0x1700035E")]
		public LightPyramidPuzzle LinkedPuzzlePyramid
		{
			[Token(Token = "0x600204D")]
			[Address(RVA = "0xBFB5F0", Offset = "0xBFB5F0", VA = "0xBFB5F0", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D5B24", Offset = "0x9D5B24")]
			get
			{
				return null;
			}
			[Token(Token = "0x600204E")]
			[Address(RVA = "0xBFB5F8", Offset = "0xBFB5F8", VA = "0xBFB5F8", Slot = "7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D5B34", Offset = "0x9D5B34")]
			set
			{
			}
		}

		[Token(Token = "0x1700035F")]
		public float PuzzleProgress
		{
			[Token(Token = "0x600204F")]
			[Address(RVA = "0xBFB600", Offset = "0xBFB600", VA = "0xBFB600", Slot = "8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1400003F")]
		public event Action<IPuzzle> PuzzleSolved
		{
			[Token(Token = "0x6002050")]
			[Address(RVA = "0xBFB618", Offset = "0xBFB618", VA = "0xBFB618")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D5B44", Offset = "0x9D5B44")]
			add
			{
			}
			[Token(Token = "0x6002051")]
			[Address(RVA = "0xBFB704", Offset = "0xBFB704", VA = "0xBFB704")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D5B54", Offset = "0x9D5B54")]
			remove
			{
			}
		}

		[Token(Token = "0x6002052")]
		[Address(RVA = "0xBFB7F0", Offset = "0xBFB7F0", VA = "0xBFB7F0", Slot = "9")]
		public void ResetPuzzle()
		{
		}

		[Token(Token = "0x6002053")]
		[Address(RVA = "0xBFB8F4", Offset = "0xBFB8F4", VA = "0xBFB8F4")]
		private void GenerateShineEffect()
		{
		}

		[Token(Token = "0x6002054")]
		[Address(RVA = "0xBFBA48", Offset = "0xBFBA48", VA = "0xBFBA48", Slot = "10")]
		public void SolvePuzzle(bool silent)
		{
		}

		[Token(Token = "0x6002055")]
		[Address(RVA = "0xBFBC64", Offset = "0xBFBC64", VA = "0xBFBC64")]
		public GenericPuzzle()
		{
		}

		[Token(Token = "0x6002056")]
		[Address(RVA = "0xBFBC6C", Offset = "0xBFBC6C", VA = "0xBFBC6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D5B64", Offset = "0x9D5B64")]
		private void <ResetPuzzle>b__15_0(PuzzleSolvedMessage message)
		{
		}
	}

	[Token(Token = "0x200047B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BABB8", Offset = "0x9BABB8")]
	private sealed class <>c__DisplayClass27_0
	{
		[Token(Token = "0x40013FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float t;

		[Token(Token = "0x40013FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float pyramidWhiteFresnelVal;

		[Token(Token = "0x40013FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LightPyramidPuzzle <>4__this;

		[Token(Token = "0x6002057")]
		[Address(RVA = "0xBF9638", Offset = "0xBF9638", VA = "0xBF9638")]
		public <>c__DisplayClass27_0()
		{
		}

		[Token(Token = "0x6002058")]
		[Address(RVA = "0xBF9640", Offset = "0xBF9640", VA = "0xBF9640")]
		internal float <DoPlayTouchActivateSeq>b__0()
		{
			return default(float);
		}

		[Token(Token = "0x6002059")]
		[Address(RVA = "0xBF9648", Offset = "0xBF9648", VA = "0xBF9648")]
		internal void <DoPlayTouchActivateSeq>b__1(float x)
		{
		}

		[Token(Token = "0x600205A")]
		[Address(RVA = "0xBF9650", Offset = "0xBF9650", VA = "0xBF9650")]
		internal void <DoPlayTouchActivateSeq>b__2()
		{
		}
	}

	[Token(Token = "0x200047C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BABC8", Offset = "0x9BABC8")]
	private sealed class <DoPlayTouchActivateSeq>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LightPyramidPuzzle <>4__this;

		[Token(Token = "0x4001400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PlayerControllerInput input;

		[Token(Token = "0x4001401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private <>c__DisplayClass27_0 <>8__1;

		[Token(Token = "0x4001402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform <pyramidTfm>5__2;

		[Token(Token = "0x4001403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 <pyramidStartScale>5__3;

		[Token(Token = "0x17000360")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600205E")]
			[Address(RVA = "0xBFAC40", Offset = "0xBFAC40", VA = "0xBFAC40", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000361")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002060")]
			[Address(RVA = "0xBFACB0", Offset = "0xBFACB0", VA = "0xBFACB0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600205B")]
		[Address(RVA = "0xBF80B0", Offset = "0xBF80B0", VA = "0xBF80B0")]
		[DebuggerHidden]
		public <DoPlayTouchActivateSeq>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x600205C")]
		[Address(RVA = "0xBF971C", Offset = "0xBF971C", VA = "0xBF971C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600205D")]
		[Address(RVA = "0xBF9720", Offset = "0xBF9720", VA = "0xBF9720", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600205F")]
		[Address(RVA = "0xBFAC48", Offset = "0xBFAC48", VA = "0xBFAC48", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200047D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BABD8", Offset = "0x9BABD8")]
	private sealed class <DoPuzzle>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LightPyramidPuzzle <>4__this;

		[Token(Token = "0x4001407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <targetSum>5__2;

		[Token(Token = "0x17000362")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002064")]
			[Address(RVA = "0xBFB360", Offset = "0xBFB360", VA = "0xBFB360", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000363")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002066")]
			[Address(RVA = "0xBFB3D0", Offset = "0xBFB3D0", VA = "0xBFB3D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002061")]
		[Address(RVA = "0xBF8980", Offset = "0xBF8980", VA = "0xBF8980")]
		[DebuggerHidden]
		public <DoPuzzle>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x6002062")]
		[Address(RVA = "0xBFACB8", Offset = "0xBFACB8", VA = "0xBFACB8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002063")]
		[Address(RVA = "0xBFACBC", Offset = "0xBFACBC", VA = "0xBFACBC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002065")]
		[Address(RVA = "0xBFB368", Offset = "0xBFB368", VA = "0xBFB368", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200047E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BABE8", Offset = "0x9BABE8")]
	private sealed class <>c
	{
		[Token(Token = "0x4001408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<PuzzleTarget, bool> <>9__33_0;

		[Token(Token = "0x400140A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Predicate<PuzzleTarget> <>9__33_1;

		[Token(Token = "0x400140B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Predicate<PuzzleTarget> <>9__51_0;

		[Token(Token = "0x6002068")]
		[Address(RVA = "0xBF94D4", Offset = "0xBF94D4", VA = "0xBF94D4")]
		public <>c()
		{
		}

		[Token(Token = "0x6002069")]
		[Address(RVA = "0xBF94DC", Offset = "0xBF94DC", VA = "0xBF94DC")]
		internal bool <SetupPuzzles>b__33_0(PuzzleTarget p)
		{
			return default(bool);
		}

		[Token(Token = "0x600206A")]
		[Address(RVA = "0xBF9550", Offset = "0xBF9550", VA = "0xBF9550")]
		internal bool <SetupPuzzles>b__33_1(PuzzleTarget p)
		{
			return default(bool);
		}

		[Token(Token = "0x600206B")]
		[Address(RVA = "0xBF95C4", Offset = "0xBF95C4", VA = "0xBF95C4")]
		internal bool <RemoveEmptyPuzzles>b__51_0(PuzzleTarget t)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9BD200", Offset = "0x9BD200")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9BD200", Offset = "0x9BD200")]
	public float Threshold;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<PuzzleTarget> Targets;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BD258", Offset = "0x9BD258")]
	[FujiSerialized]
	public bool Activated;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9BD2A4", Offset = "0x9BD2A4")]
	public bool ForceShootBeam;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool ForceNoGrantGem;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	public bool ShowFlowerRadialEffectOnExpand;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private MeshRenderer _shineMesh;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private MeshRenderer _cylinderMesh;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private SkinnedMeshRenderer _pyramidMesh;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private MeshRenderer _stemMesh;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject _particleRenderer;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject _particleSparkLines;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Collider _collider;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private IPuzzle[] _puzzles;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float[] _maxCompletion;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private MaterialPropertyBlock _propBlock;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int _fresnelPropId;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private InteractiveCore _interactive;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Color PyramidPoweredColor;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Color PyramidDepoweredColor;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool _solvedAnimationInProgress;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BD33C", Offset = "0x9BD33C")]
	private float <PuzzleTimerSeconds>k__BackingField;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BD34C", Offset = "0x9BD34C")]
	private LightPyramidPuzzle <LinkedPuzzlePyramid>k__BackingField;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BD35C", Offset = "0x9BD35C")]
	private float <PuzzleProgress>k__BackingField;

	[Token(Token = "0x1700001C")]
	public float PuzzleTimerSeconds
	{
		[Token(Token = "0x6000186")]
		[Address(RVA = "0xBF89AC", Offset = "0xBF89AC", VA = "0xBF89AC", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CB238", Offset = "0x9CB238")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000187")]
		[Address(RVA = "0xBF89B4", Offset = "0xBF89B4", VA = "0xBF89B4", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CB248", Offset = "0x9CB248")]
		set
		{
		}
	}

	[Token(Token = "0x1700001D")]
	public LightPyramidPuzzle LinkedPuzzlePyramid
	{
		[Token(Token = "0x6000188")]
		[Address(RVA = "0xBF89BC", Offset = "0xBF89BC", VA = "0xBF89BC", Slot = "6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CB258", Offset = "0x9CB258")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000189")]
		[Address(RVA = "0xBF89C4", Offset = "0xBF89C4", VA = "0xBF89C4", Slot = "7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CB268", Offset = "0x9CB268")]
		set
		{
		}
	}

	[Token(Token = "0x1700001E")]
	public float PuzzleProgress
	{
		[Token(Token = "0x600018B")]
		[Address(RVA = "0xBF89D4", Offset = "0xBF89D4", VA = "0xBF89D4", Slot = "8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CB288", Offset = "0x9CB288")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600018A")]
		[Address(RVA = "0xBF89CC", Offset = "0xBF89CC", VA = "0xBF89CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CB278", Offset = "0x9CB278")]
		private set
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event Action<IPuzzle> PuzzleSolved
	{
		[Token(Token = "0x600018C")]
		[Address(RVA = "0xBF2884", Offset = "0xBF2884", VA = "0xBF2884")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CB298", Offset = "0x9CB298")]
		add
		{
		}
		[Token(Token = "0x600018D")]
		[Address(RVA = "0xBF2A4C", Offset = "0xBF2A4C", VA = "0xBF2A4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CB2A8", Offset = "0x9CB2A8")]
		remove
		{
		}
	}

	[Token(Token = "0x600017B")]
	[Address(RVA = "0xBF7BE0", Offset = "0xBF7BE0", VA = "0xBF7BE0")]
	public void Awake()
	{
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0xBF7EC8", Offset = "0xBF7EC8", VA = "0xBF7EC8")]
	private bool IsReadyToTouchActivate()
	{
		return default(bool);
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0xBF7EF8", Offset = "0xBF7EF8", VA = "0xBF7EF8")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9CB100", Offset = "0x9CB100")]
	private void PlayTouchPyramidSeq()
	{
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0xBF7FC0", Offset = "0xBF7FC0", VA = "0xBF7FC0")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9CB138", Offset = "0x9CB138")]
	private void MakeAllGeneric()
	{
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0xBF7F28", Offset = "0xBF7F28", VA = "0xBF7F28")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CB170", Offset = "0x9CB170")]
	private IEnumerator DoPlayTouchActivateSeq(PlayerControllerInput input)
	{
		return null;
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0xBF80DC", Offset = "0xBF80DC", VA = "0xBF80DC")]
	private bool ShouldGrantGem()
	{
		return default(bool);
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0xBF823C", Offset = "0xBF823C", VA = "0xBF823C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000182")]
	[Address(RVA = "0xBF885C", Offset = "0xBF885C", VA = "0xBF885C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000183")]
	[Address(RVA = "0xBF88FC", Offset = "0xBF88FC", VA = "0xBF88FC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000184")]
	[Address(RVA = "0xBF8888", Offset = "0xBF8888", VA = "0xBF8888")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CB1D4", Offset = "0x9CB1D4")]
	private IEnumerator DoPuzzle()
	{
		return null;
	}

	[Token(Token = "0x6000185")]
	[Address(RVA = "0xBF8240", Offset = "0xBF8240", VA = "0xBF8240")]
	public void SetupPuzzles()
	{
	}

	[Token(Token = "0x600018E")]
	[Address(RVA = "0xBF89DC", Offset = "0xBF89DC", VA = "0xBF89DC", Slot = "9")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9CB2B8", Offset = "0x9CB2B8")]
	public void ResetPuzzle()
	{
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0xBF8B88", Offset = "0xBF8B88", VA = "0xBF8B88")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9CB2F0", Offset = "0x9CB2F0")]
	private void RemoveEmptyPuzzles()
	{
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0xBF8C8C", Offset = "0xBF8C8C", VA = "0xBF8C8C", Slot = "10")]
	public void SolvePuzzle(bool instant)
	{
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0xBF8C98", Offset = "0xBF8C98", VA = "0xBF8C98")]
	private bool IsReadyToTouch()
	{
		return default(bool);
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0xBF8CC8", Offset = "0xBF8CC8", VA = "0xBF8CC8")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0xBF9040", Offset = "0xBF9040", VA = "0xBF9040")]
	public void EmitLightGemSparks(Vector3 worldPos, int count)
	{
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0xBF91B0", Offset = "0xBF91B0", VA = "0xBF91B0", Slot = "11")]
	public void OnPreSerialize()
	{
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0xBF91B4", Offset = "0xBF91B4", VA = "0xBF91B4", Slot = "12")]
	public void OnPostDeserialize()
	{
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0xBF91B8", Offset = "0xBF91B8", VA = "0xBF91B8", Slot = "13")]
	public Vector3 GetGrabCenterWorld()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0xBF9258", Offset = "0xBF9258", VA = "0xBF9258")]
	public LightPyramidPuzzle()
	{
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0xBF9270", Offset = "0xBF9270", VA = "0xBF9270")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CB328", Offset = "0x9CB328")]
	private void <Awake>b__22_0(PlayerControllerInput input)
	{
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0xBF9444", Offset = "0xBF9444", VA = "0xBF9444")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CB338", Offset = "0x9CB338")]
	private void <Awake>b__22_1(PlayerControllerInput input)
	{
	}
}
[Token(Token = "0x2000035")]
public class LightRingTunedHandler : MonoBehaviour
{
	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlantEntity PlantEntity;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private WorldStateService _worldStateService;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private LoadingZoneKey _currentZone;

	[Token(Token = "0x1700001F")]
	public LoadingZoneKey CurrentZone
	{
		[Token(Token = "0x600019A")]
		[Address(RVA = "0xBFDCBC", Offset = "0xBFDCBC", VA = "0xBFDCBC")]
		get
		{
			return default(LoadingZoneKey);
		}
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0xBFDCC4", Offset = "0xBFDCC4", VA = "0xBFDCC4")]
	public void Awake()
	{
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0xBFDD68", Offset = "0xBFDD68", VA = "0xBFDD68")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0xBFDE70", Offset = "0xBFDE70", VA = "0xBFDE70")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0xBFDF7C", Offset = "0xBFDF7C", VA = "0xBFDF7C")]
	public void Start()
	{
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0xBFE034", Offset = "0xBFE034", VA = "0xBFE034")]
	private void DoHandleLightRingTuned(LightTunedEvent e)
	{
	}

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0xBFE19C", Offset = "0xBFE19C", VA = "0xBFE19C")]
	public LightRingTunedHandler()
	{
	}
}
[Token(Token = "0x2000036")]
public class LightTuner : MonoBehaviour
{
	[Token(Token = "0x200047F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BABF8", Offset = "0x9BABF8")]
	private sealed class <>c__DisplayClass11_0
	{
		[Token(Token = "0x400140C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LightGem lightSeed;

		[Token(Token = "0x400140D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LightTuner <>4__this;

		[Token(Token = "0x600206C")]
		[Address(RVA = "0xBFEEF0", Offset = "0xBFEEF0", VA = "0xBFEEF0")]
		public <>c__DisplayClass11_0()
		{
		}

		[Token(Token = "0x600206D")]
		[Address(RVA = "0xBFEEF8", Offset = "0xBFEEF8", VA = "0xBFEEF8")]
		internal void <Awake>b__1()
		{
		}
	}

	[Token(Token = "0x2000480")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BAC08", Offset = "0x9BAC08")]
	private sealed class <DoConsumeLightSeed>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400140E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400140F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LightGem lightSeed;

		[Token(Token = "0x4001411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LightTuner <>4__this;

		[Token(Token = "0x4001412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 <lightSeedPos>5__2;

		[Token(Token = "0x17000364")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002071")]
			[Address(RVA = "0xBFF408", Offset = "0xBFF408", VA = "0xBFF408", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000365")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002073")]
			[Address(RVA = "0xBFF478", Offset = "0xBFF478", VA = "0xBFF478", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600206E")]
		[Address(RVA = "0xBFE7EC", Offset = "0xBFE7EC", VA = "0xBFE7EC")]
		[DebuggerHidden]
		public <DoConsumeLightSeed>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x600206F")]
		[Address(RVA = "0xBFEF38", Offset = "0xBFEF38", VA = "0xBFEF38", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002070")]
		[Address(RVA = "0xBFEF3C", Offset = "0xBFEF3C", VA = "0xBFEF3C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002072")]
		[Address(RVA = "0xBFF410", Offset = "0xBFF410", VA = "0xBFF410", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[EventRef]
	public string _sfxReceiveLightGem;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[EventRef]
	public string _lightGemExpandEvent;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[EventRef]
	public string _lightGemShatterEvent;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int NumLightSeedsNeeded;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int _NumLightSeedsCollected;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool ResetLightSeedCounterAfterCompleted;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public StorageBubble StorageBubble;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject Beam;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public NarrativeEventIdentifier NarrativeIdentifier;

	[Token(Token = "0x17000020")]
	public int NumLightSeedsCollected
	{
		[Token(Token = "0x60001A1")]
		[Address(RVA = "0xBFE314", Offset = "0xBFE314", VA = "0xBFE314")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0xBFE31C", Offset = "0xBFE31C", VA = "0xBFE31C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0xBFE3D0", Offset = "0xBFE3D0", VA = "0xBFE3D0")]
	public void SetBeamActive(bool active)
	{
	}

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0xBFE4B4", Offset = "0xBFE4B4", VA = "0xBFE4B4")]
	public void ConsumeLightSeed(LightGem lightSeed)
	{
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0xBFE728", Offset = "0xBFE728", VA = "0xBFE728")]
	public void PlayConsumeLightSeedSeq(LightGem lightSeed)
	{
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0xBFE754", Offset = "0xBFE754", VA = "0xBFE754")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CB348", Offset = "0x9CB348")]
	private IEnumerator DoConsumeLightSeed(LightGem lightSeed)
	{
		return null;
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0xBFE818", Offset = "0xBFE818", VA = "0xBFE818")]
	public void IncrementLightSeedCounter(LightGem lightSeed)
	{
	}

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0xBFEB34", Offset = "0xBFEB34", VA = "0xBFEB34")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9CB3AC", Offset = "0x9CB3AC")]
	private void SendUnlock()
	{
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0xBFEBBC", Offset = "0xBFEBBC", VA = "0xBFEBBC")]
	public LightTuner()
	{
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0xBFEC2C", Offset = "0xBFEC2C", VA = "0xBFEC2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CB3E4", Offset = "0x9CB3E4")]
	private void <Awake>b__11_0(StorageBubble.Messages.OnStoredMessage message)
	{
	}
}
[Token(Token = "0x2000037")]
public class LightTunerRing : MonoBehaviour
{
	[Token(Token = "0x2000481")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BAC18", Offset = "0x9BAC18")]
	private sealed class <DoHandleTouch>d__37 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LightTunerRing <>4__this;

		[Token(Token = "0x4001416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PlayerControllerInput input;

		[Token(Token = "0x17000366")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002077")]
			[Address(RVA = "0xC01620", Offset = "0xC01620", VA = "0xC01620", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000367")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002079")]
			[Address(RVA = "0xC01690", Offset = "0xC01690", VA = "0xC01690", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002074")]
		[Address(RVA = "0xC000AC", Offset = "0xC000AC", VA = "0xC000AC")]
		[DebuggerHidden]
		public <DoHandleTouch>d__37(int <>1__state)
		{
		}

		[Token(Token = "0x6002075")]
		[Address(RVA = "0xC00DE0", Offset = "0xC00DE0", VA = "0xC00DE0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002076")]
		[Address(RVA = "0xC00DE4", Offset = "0xC00DE4", VA = "0xC00DE4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002078")]
		[Address(RVA = "0xC01628", Offset = "0xC01628", VA = "0xC01628", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000482")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BAC28", Offset = "0x9BAC28")]
	private sealed class <DoHandleDebug>d__41 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LightTunerRing <>4__this;

		[Token(Token = "0x400141A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <pinPosMinLocal>5__2;

		[Token(Token = "0x400141B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 <pinPosMaxLocal>5__3;

		[Token(Token = "0x17000368")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600207D")]
			[Address(RVA = "0xC00D68", Offset = "0xC00D68", VA = "0xC00D68", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000369")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600207F")]
			[Address(RVA = "0xC00DD8", Offset = "0xC00DD8", VA = "0xC00DD8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600207A")]
		[Address(RVA = "0xC0029C", Offset = "0xC0029C", VA = "0xC0029C")]
		[DebuggerHidden]
		public <DoHandleDebug>d__41(int <>1__state)
		{
		}

		[Token(Token = "0x600207B")]
		[Address(RVA = "0xC00AD0", Offset = "0xC00AD0", VA = "0xC00AD0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600207C")]
		[Address(RVA = "0xC00AD4", Offset = "0xC00AD4", VA = "0xC00AD4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600207E")]
		[Address(RVA = "0xC00D70", Offset = "0xC00D70", VA = "0xC00D70", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000483")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BAC38", Offset = "0x9BAC38")]
	private sealed class <DoHandleColor>d__42 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400141C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400141D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400141E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LightTunerRing <>4__this;

		[Token(Token = "0x400141F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ZoneV1 <zoneModel>5__2;

		[Token(Token = "0x4001420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <timeColor>5__3;

		[Token(Token = "0x1700036A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002083")]
			[Address(RVA = "0xC00A58", Offset = "0xC00A58", VA = "0xC00A58", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700036B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002085")]
			[Address(RVA = "0xC00AC8", Offset = "0xC00AC8", VA = "0xC00AC8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002080")]
		[Address(RVA = "0xC002C8", Offset = "0xC002C8", VA = "0xC002C8")]
		[DebuggerHidden]
		public <DoHandleColor>d__42(int <>1__state)
		{
		}

		[Token(Token = "0x6002081")]
		[Address(RVA = "0xC004EC", Offset = "0xC004EC", VA = "0xC004EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002082")]
		[Address(RVA = "0xC004F0", Offset = "0xC004F0", VA = "0xC004F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002084")]
		[Address(RVA = "0xC00A60", Offset = "0xC00A60", VA = "0xC00A60", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000484")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BAC48", Offset = "0x9BAC48")]
	private sealed class <>c__DisplayClass43_0
	{
		[Token(Token = "0x4001421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ZoneV1 zoneModel;

		[Token(Token = "0x4001422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DOGetter<float> <>9__0;

		[Token(Token = "0x4001423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DOSetter<float> <>9__1;

		[Token(Token = "0x6002086")]
		[Address(RVA = "0xC00428", Offset = "0xC00428", VA = "0xC00428")]
		public <>c__DisplayClass43_0()
		{
		}

		[Token(Token = "0x6002087")]
		[Address(RVA = "0xC00430", Offset = "0xC00430", VA = "0xC00430")]
		internal float <DoTuneDetect>b__0()
		{
			return default(float);
		}

		[Token(Token = "0x6002088")]
		[Address(RVA = "0xC00488", Offset = "0xC00488", VA = "0xC00488")]
		internal void <DoTuneDetect>b__1(float x)
		{
		}
	}

	[Token(Token = "0x2000485")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BAC58", Offset = "0x9BAC58")]
	private sealed class <DoTuneDetect>d__43 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private <>c__DisplayClass43_0 <>8__1;

		[Token(Token = "0x4001427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LightTunerRing <>4__this;

		[Token(Token = "0x4001428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <timer>5__2;

		[Token(Token = "0x4001429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 <storageBubbleEndPos>5__3;

		[Token(Token = "0x400142A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject <keySeed>5__4;

		[Token(Token = "0x1700036C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600208C")]
			[Address(RVA = "0xC02410", Offset = "0xC02410", VA = "0xC02410", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700036D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600208E")]
			[Address(RVA = "0xC02480", Offset = "0xC02480", VA = "0xC02480", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002089")]
		[Address(RVA = "0xC002F4", Offset = "0xC002F4", VA = "0xC002F4")]
		[DebuggerHidden]
		public <DoTuneDetect>d__43(int <>1__state)
		{
		}

		[Token(Token = "0x600208A")]
		[Address(RVA = "0xC01698", Offset = "0xC01698", VA = "0xC01698", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600208B")]
		[Address(RVA = "0xC0169C", Offset = "0xC0169C", VA = "0xC0169C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600208D")]
		[Address(RVA = "0xC02418", Offset = "0xC02418", VA = "0xC02418", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private InteractiveCore _interactive;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Coroutine _threadTouch;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected Coroutine _threadDetectCoroutine;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BD424", Offset = "0x9BD424")]
	[SerializeField]
	[EventRef]
	private string _activateEvent;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[EventRef]
	private string _riseEvent;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[EventRef]
	private string _shrinkEvent;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BD4F0", Offset = "0x9BD4F0")]
	public Transform tfmVisual;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ParticleSystem PfxRingStars;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public MeshRenderer Renderer;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private MaterialPropertyBlock _rendererBlock;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BoxCollider boxCollider;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 boxColliderStartSize;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BD528", Offset = "0x9BD528")]
	public Rigidbody RbRotation;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float RingSpinMaxAngVelocity;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float RingTouchSpinForceScale;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float RingTouchSpinGrindFrictionScale;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float RingTouchStickiness;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float GoalLerpCoeff;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform DebugPin;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Transform DebugPinBG;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Transform DebugGoalLine;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public TextMesh DebugText;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private WorldStateService _worldStateService;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public AnimationCurve CurveRingInnerRadius;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private LoadingZoneKey _currentZone;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public StudioEventEmitter _sfxLoop;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public StudioEventEmitter _sfxBrakeLoop;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public LightTuner Parent;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject PfbLightSeed;

	[Token(Token = "0x17000021")]
	public LoadingZoneKey CurrentZone
	{
		[Token(Token = "0x60001AB")]
		[Address(RVA = "0xBFF480", Offset = "0xBFF480", VA = "0xBFF480")]
		get
		{
			return default(LoadingZoneKey);
		}
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0xBFF488", Offset = "0xBFF488", VA = "0xBFF488")]
	public void Awake()
	{
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0xBFF4DC", Offset = "0xBFF4DC", VA = "0xBFF4DC")]
	public void Start()
	{
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0xBFF530", Offset = "0xBFF530", VA = "0xBFF530")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0xBFF9CC", Offset = "0xBFF9CC", VA = "0xBFF9CC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0xBFFAE4", Offset = "0xBFFAE4", VA = "0xBFFAE4")]
	private void HandleTouchStart(PlayerControllerInput input)
	{
	}

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0xBFFE84", Offset = "0xBFFE84", VA = "0xBFFE84")]
	private void HandleTouchEnd(PlayerControllerInput input)
	{
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0xBFFDEC", Offset = "0xBFFDEC", VA = "0xBFFDEC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CB3F4", Offset = "0x9CB3F4")]
	private IEnumerator DoHandleTouch(PlayerControllerInput input)
	{
		return null;
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0xC000D8", Offset = "0xC000D8", VA = "0xC000D8")]
	private float GetNormalizedAngleVel()
	{
		return default(float);
	}

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0xC001E0", Offset = "0xC001E0", VA = "0xC001E0")]
	private float GetTuningVal()
	{
		return default(float);
	}

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0xC0020C", Offset = "0xC0020C", VA = "0xC0020C")]
	private bool IsWithinTuningThreshold()
	{
		return default(bool);
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0xBFF870", Offset = "0xBFF870", VA = "0xBFF870")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CB458", Offset = "0x9CB458")]
	private IEnumerator DoHandleDebug()
	{
		return null;
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0xBFF8E4", Offset = "0xBFF8E4", VA = "0xBFF8E4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CB4BC", Offset = "0x9CB4BC")]
	private IEnumerator DoHandleColor()
	{
		return null;
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0xBFF958", Offset = "0xBFF958", VA = "0xBFF958")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CB520", Offset = "0x9CB520")]
	private IEnumerator DoTuneDetect()
	{
		return null;
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0xC00320", Offset = "0xC00320", VA = "0xC00320")]
	private void OnTuned()
	{
	}

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0xC0040C", Offset = "0xC0040C", VA = "0xC0040C")]
	public LightTunerRing()
	{
	}
}
[Token(Token = "0x2000038")]
public class LilypadWithRipple : MonoBehaviour
{
	[Token(Token = "0x2000486")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BAC68", Offset = "0x9BAC68")]
	private sealed class <>c__DisplayClass15_0
	{
		[Token(Token = "0x400142B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LilypadWithRipple <>4__this;

		[Token(Token = "0x400142C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool active;

		[Token(Token = "0x600208F")]
		[Address(RVA = "0xC05BEC", Offset = "0xC05BEC", VA = "0xC05BEC")]
		public <>c__DisplayClass15_0()
		{
		}

		[Token(Token = "0x6002090")]
		[Address(RVA = "0xC05C7C", Offset = "0xC05C7C", VA = "0xC05C7C")]
		internal void <ToggleRipple>b__0()
		{
		}
	}

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BD560", Offset = "0x9BD560")]
	[SerializeField]
	private bool _spawnRipple;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject _ripplePrefab;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool _rippleIsChild;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private Vector3 _rippleOffset;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[EditorReadOnly]
	private GameObject _rippleInstance;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BD614", Offset = "0x9BD614")]
	[SerializeField]
	private MeshRenderer meshRenderer;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private float _pingScale;

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0xC053A4", Offset = "0xC053A4", VA = "0xC053A4")]
	public void SetEnableCollider(bool isActive)
	{
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0xC0541C", Offset = "0xC0541C", VA = "0xC0541C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0xC056BC", Offset = "0xC056BC", VA = "0xC056BC")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9CB584", Offset = "0x9CB584")]
	private void RippleOn()
	{
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0xC05880", Offset = "0xC05880", VA = "0xC05880")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9CB5BC", Offset = "0x9CB5BC")]
	private void RippleOff()
	{
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0xC05888", Offset = "0xC05888", VA = "0xC05888")]
	public void PlayPlayerLandSound()
	{
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0xC05948", Offset = "0xC05948", VA = "0xC05948")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9CB5F4", Offset = "0x9CB5F4")]
	public void PlayPlayerLandEffect()
	{
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0xC05BC4", Offset = "0xC05BC4", VA = "0xC05BC4")]
	public void PlayPingEffect()
	{
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0xC0594C", Offset = "0xC0594C", VA = "0xC0594C")]
	private void Pulsate()
	{
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0xC056C4", Offset = "0xC056C4", VA = "0xC056C4")]
	public void ToggleRipple(bool active)
	{
	}

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0xC05BF4", Offset = "0xC05BF4", VA = "0xC05BF4")]
	public LilypadWithRipple()
	{
	}
}
[Token(Token = "0x2000039")]
public class PathNode : MonoBehaviour
{
	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool _isLocked;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BD670", Offset = "0x9BD670")]
	public Color unlockedColorStart;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float unlockedRayOutsideStrength;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float unlockedRayInsideStrength;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Color unlockedCrestColor;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float unlockedCrestRange;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BD6A8", Offset = "0x9BD6A8")]
	public Color teleportColorStart;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float teleportRayOutsideStrength;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float teleportRayInsideStrength;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Color teleportCrestColor;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float teleportCrestRange;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BD6E0", Offset = "0x9BD6E0")]
	public float hiddenDistanceOnY;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private GameObject _node;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private GameObject _lightShaft;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Material _lightShaftMaterial;

	[Token(Token = "0x17000022")]
	public bool IsLocked
	{
		[Token(Token = "0x60001C5")]
		[Address(RVA = "0xEAEE78", Offset = "0xEAEE78", VA = "0xEAEE78")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0xEAEE80", Offset = "0xEAEE80", VA = "0xEAEE80")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0xEAEF94", Offset = "0xEAEF94", VA = "0xEAEF94")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0xEAF018", Offset = "0xEAF018", VA = "0xEAF018")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0xEAF218", Offset = "0xEAF218", VA = "0xEAF218")]
	public bool Lock()
	{
		return default(bool);
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0xEAF4BC", Offset = "0xEAF4BC", VA = "0xEAF4BC")]
	public bool Unlock()
	{
		return default(bool);
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0xEAF6A0", Offset = "0xEAF6A0", VA = "0xEAF6A0")]
	public void HandlePointingAt(PointAtUnrestrictedColliderEvent e)
	{
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0xEAF7A8", Offset = "0xEAF7A8", VA = "0xEAF7A8")]
	public void HandleStopPointingAt(StopPointingAtUnrestrictedColliderEvent e)
	{
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0xEAF8B0", Offset = "0xEAF8B0", VA = "0xEAF8B0")]
	public void PlayFX()
	{
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0xEAF8B4", Offset = "0xEAF8B4", VA = "0xEAF8B4")]
	public PathNode()
	{
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0xEAF8C4", Offset = "0xEAF8C4", VA = "0xEAF8C4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CB62C", Offset = "0x9CB62C")]
	private void <OnEnable>b__18_0(LocomotionService service)
	{
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0xEAFA98", Offset = "0xEAFA98", VA = "0xEAFA98")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CB63C", Offset = "0x9CB63C")]
	private void <Unlock>b__21_0()
	{
	}
}
[Token(Token = "0x200003A")]
public class PathRoot : MonoBehaviour
{
	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool _isLocked;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MeshCollider _meshCollider;

	[Token(Token = "0x17000023")]
	public bool IsLocked
	{
		[Token(Token = "0x60001D1")]
		[Address(RVA = "0xEAFA9C", Offset = "0xEAFA9C", VA = "0xEAFA9C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0xEAFAA4", Offset = "0xEAFAA4", VA = "0xEAFAA4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0xEAFB14", Offset = "0xEAFB14", VA = "0xEAFB14")]
	public bool Lock()
	{
		return default(bool);
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0xEAFC20", Offset = "0xEAFC20", VA = "0xEAFC20")]
	public bool Unlock()
	{
		return default(bool);
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0xEAFD34", Offset = "0xEAFD34", VA = "0xEAFD34")]
	public PathRoot()
	{
	}
}
[Token(Token = "0x200003B")]
public class PlantBulbPassive : MonoBehaviour, ISimulationTickable
{
	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float GemEmissionCooldown;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float _lightGemGrantedCooldown;

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0xEB3898", Offset = "0xEB3898", VA = "0xEB3898")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0xEB38C8", Offset = "0xEB38C8", VA = "0xEB38C8")]
	private void Update()
	{
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0xEB3A18", Offset = "0xEB3A18", VA = "0xEB3A18")]
	private void Start()
	{
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0xEB38F4", Offset = "0xEB38F4", VA = "0xEB38F4", Slot = "4")]
	public void OnSimulationTick(float deltaSeconds, bool liveUpdate)
	{
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0xEB3B44", Offset = "0xEB3B44", VA = "0xEB3B44")]
	public PlantBulbPassive()
	{
	}

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0xEB3B54", Offset = "0xEB3B54", VA = "0xEB3B54")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CB64C", Offset = "0x9CB64C")]
	private void <Start>b__4_0(PlayerControllerInput input)
	{
	}
}
[Token(Token = "0x200003C")]
public class PlanterDispenser : MonoBehaviour
{
	[Token(Token = "0x2000487")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BAC78", Offset = "0x9BAC78")]
	private sealed class <DoAutoSpawn>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400142D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400142E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400142F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlanterDispenser <>4__this;

		[Token(Token = "0x4001430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaitForSeconds <smallWait>5__2;

		[Token(Token = "0x4001431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WaitForSeconds <longWait>5__3;

		[Token(Token = "0x1700036E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002094")]
			[Address(RVA = "0xEBD534", Offset = "0xEBD534", VA = "0xEBD534", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700036F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002096")]
			[Address(RVA = "0xEBD5A4", Offset = "0xEBD5A4", VA = "0xEBD5A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002091")]
		[Address(RVA = "0xEBCE34", Offset = "0xEBCE34", VA = "0xEBCE34")]
		[DebuggerHidden]
		public <DoAutoSpawn>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6002092")]
		[Address(RVA = "0xEBCE70", Offset = "0xEBCE70", VA = "0xEBCE70", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002093")]
		[Address(RVA = "0xEBCE74", Offset = "0xEBCE74", VA = "0xEBCE74", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002095")]
		[Address(RVA = "0xEBD53C", Offset = "0xEBD53C", VA = "0xEBD53C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PersistentEntity PlanterPrefab;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform TfmPlanterSpawnNode;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9BD718", Offset = "0x9BD718")]
	public int gemCost;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private PlanterEntity _currPlanter;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Coroutine _threadAutoSpawn;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private LightGemSlot _gemSlot;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _hasGemSlot;

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0xEBC994", Offset = "0xEBC994", VA = "0xEBC994")]
	private void Start()
	{
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0xEBCAC8", Offset = "0xEBCAC8", VA = "0xEBCAC8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0xEBCB80", Offset = "0xEBCB80", VA = "0xEBCB80")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0xEBCB8C", Offset = "0xEBCB8C", VA = "0xEBCB8C")]
	private PlanterEntity SpawnPlanter()
	{
		return null;
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0xEBCCB4", Offset = "0xEBCCB4", VA = "0xEBCCB4")]
	private bool IsPlanterBlockingSpawnArea()
	{
		return default(bool);
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0xEBCB0C", Offset = "0xEBCB0C", VA = "0xEBCB0C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CB65C", Offset = "0x9CB65C")]
	private IEnumerator DoAutoSpawn()
	{
		return null;
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0xEBCE60", Offset = "0xEBCE60", VA = "0xEBCE60")]
	public PlanterDispenser()
	{
	}
}
[Token(Token = "0x200003D")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9B8068", Offset = "0x9B8068")]
public class PlanterEntity : MonoBehaviour, IPlantableSurface, IGameObject, IFujiSerializable, IWaterReceiver
{
	[Token(Token = "0x2000488")]
	public enum PlanterState
	{
		[Token(Token = "0x4001433")]
		InDispenser,
		[Token(Token = "0x4001434")]
		Unused,
		[Token(Token = "0x4001435")]
		Placing,
		[Token(Token = "0x4001436")]
		Occupied,
		[Token(Token = "0x4001437")]
		PlacedReadyToReshape,
		[Token(Token = "0x4001438")]
		PlacedPlayerReshaping
	}

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlanterState State;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[FujiSerialized]
	public FujiLocalInstanceRef occupant;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PlanterEntityHandle TubeHandle;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PlanterEntityPlanterTubeTop TubeTop;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform TfmFloorGlowRing;

	[Token(Token = "0x17000024")]
	public bool CanBeDestroyed
	{
		[Token(Token = "0x60001E3")]
		[Address(RVA = "0xEBD5AC", Offset = "0xEBD5AC", VA = "0xEBD5AC", Slot = "10")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000025")]
	public Transform UniformScaleTransform
	{
		[Token(Token = "0x60001E4")]
		[Address(RVA = "0xEBD5B4", Offset = "0xEBD5B4", VA = "0xEBD5B4", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000026")]
	[FujiSerialized]
	public PlanterState SerializedState
	{
		[Token(Token = "0x60001E5")]
		[Address(RVA = "0xEBD5BC", Offset = "0xEBD5BC", VA = "0xEBD5BC")]
		get
		{
			return default(PlanterState);
		}
		[Token(Token = "0x60001E6")]
		[Address(RVA = "0xEBD5C4", Offset = "0xEBD5C4", VA = "0xEBD5C4")]
		set
		{
		}
	}

	[Token(Token = "0x17000027")]
	[FujiSerialized]
	public Vector3 PlanterTubeHandlePos
	{
		[Token(Token = "0x60001E8")]
		[Address(RVA = "0xEBD7E0", Offset = "0xEBD7E0", VA = "0xEBD7E0")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60001E7")]
		[Address(RVA = "0xEBD770", Offset = "0xEBD770", VA = "0xEBD770")]
		set
		{
		}
	}

	[Token(Token = "0x17000028")]
	[FujiSerialized]
	public Vector3 PlanterFloorGlowRingPos
	{
		[Token(Token = "0x60001EA")]
		[Address(RVA = "0xEBD928", Offset = "0xEBD928", VA = "0xEBD928")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60001E9")]
		[Address(RVA = "0xEBD8B8", Offset = "0xEBD8B8", VA = "0xEBD8B8")]
		set
		{
		}
	}

	[Token(Token = "0x17000029")]
	public int OccupantCount
	{
		[Token(Token = "0x60001EB")]
		[Address(RVA = "0xEBD970", Offset = "0xEBD970", VA = "0xEBD970", Slot = "7")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0xEBD990", Offset = "0xEBD990", VA = "0xEBD990")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0xEBDB48", Offset = "0xEBDB48", VA = "0xEBDB48")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0xEBDB4C", Offset = "0xEBDB4C", VA = "0xEBDB4C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0xEBD5DC", Offset = "0xEBD5DC", VA = "0xEBD5DC")]
	private void OnStateUpdate()
	{
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0xEBE5FC", Offset = "0xEBE5FC", VA = "0xEBE5FC", Slot = "6")]
	public bool CanBePlantedUpon()
	{
		return default(bool);
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0xEBD7E4", Offset = "0xEBD7E4", VA = "0xEBD7E4")]
	public Vector3 GetHandleRestPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0xEBE60C", Offset = "0xEBE60C", VA = "0xEBE60C")]
	public Vector3 GetTubeTopPosFromHandle()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0xEBE6F0", Offset = "0xEBE6F0", VA = "0xEBE6F0", Slot = "4")]
	public Vector3? GetPlantingPosition(Vector3? desiredPosition)
	{
		return null;
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0xEBE7FC", Offset = "0xEBE7FC", VA = "0xEBE7FC", Slot = "5")]
	public void SetOccupancy(bool occupancy, PersistentEntity localIdOfNewOccupant)
	{
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0xEBDEDC", Offset = "0xEBDEDC", VA = "0xEBDEDC")]
	public void SetAsOccupied()
	{
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0xEBE85C", Offset = "0xEBE85C", VA = "0xEBE85C")]
	public void SetAsUnOccupied()
	{
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0xEBDD9C", Offset = "0xEBDD9C", VA = "0xEBDD9C")]
	public void SetGlowRingVisible(bool isVisible)
	{
	}

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0xEBE918", Offset = "0xEBE918", VA = "0xEBE918", Slot = "15")]
	public void ReceiveWater(float waterAmount, Vector3? worldPosition, InputHandedness? hand, Vector3? worldSprayVelocity)
	{
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0xEBEA4C", Offset = "0xEBEA4C", VA = "0xEBEA4C", Slot = "9")]
	public FujiLocalInstanceRef GetOccupant(int index)
	{
		return default(FujiLocalInstanceRef);
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0xEBEA58", Offset = "0xEBEA58", VA = "0xEBEA58", Slot = "13")]
	public void OnPreSerialize()
	{
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0xEBEAC8", Offset = "0xEBEAC8", VA = "0xEBEAC8", Slot = "14")]
	public void OnPostDeserialize()
	{
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0xEBEB38", Offset = "0xEBEB38", VA = "0xEBEB38")]
	public PlanterEntity()
	{
	}

	[SpecialName]
	[Token(Token = "0x60001FD")]
	[Address(RVA = "0xEBEB40", Offset = "0xEBEB40", VA = "0xEBEB40", Slot = "11")]
	private GameObject IGameObject.get_gameObject()
	{
		return null;
	}

	[SpecialName]
	[Token(Token = "0x60001FE")]
	[Address(RVA = "0xEBEB48", Offset = "0xEBEB48", VA = "0xEBEB48", Slot = "12")]
	private Transform IGameObject.get_transform()
	{
		return null;
	}
}
[Token(Token = "0x200003E")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9B80CC", Offset = "0x9B80CC")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9B80CC", Offset = "0x9B80CC")]
public class PlanterEntityHandle : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000489")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BAC88", Offset = "0x9BAC88")]
	private sealed class <>c
	{
		[Token(Token = "0x4001439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400143A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static InteractiveCore.InteractiveEvent <>9__9_0;

		[Token(Token = "0x6002098")]
		[Address(RVA = "0xEBF514", Offset = "0xEBF514", VA = "0xEBF514")]
		public <>c()
		{
		}

		[Token(Token = "0x6002099")]
		[Address(RVA = "0xEBF51C", Offset = "0xEBF51C", VA = "0xEBF51C")]
		internal void <InitInteractive>b__9_0(PlayerControllerInput input)
		{
		}
	}

	[Token(Token = "0x200048A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BAC98", Offset = "0x9BAC98")]
	private sealed class <DoPullFromDispensor>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400143B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400143C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400143D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlanterEntityHandle <>4__this;

		[Token(Token = "0x400143E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PlayerControllerInput input;

		[Token(Token = "0x400143F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <maxPullDistThreshold>5__2;

		[Token(Token = "0x4001440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 <handleStartPos>5__3;

		[Token(Token = "0x4001441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <tickDistance>5__4;

		[Token(Token = "0x4001442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 <lastTickPos>5__5;

		[Token(Token = "0x17000370")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600209D")]
			[Address(RVA = "0xEC07D0", Offset = "0xEC07D0", VA = "0xEC07D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000371")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600209F")]
			[Address(RVA = "0xEC0840", Offset = "0xEC0840", VA = "0xEC0840", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600209A")]
		[Address(RVA = "0xEBEF94", Offset = "0xEBEF94", VA = "0xEBEF94")]
		[DebuggerHidden]
		public <DoPullFromDispensor>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x600209B")]
		[Address(RVA = "0xEC041C", Offset = "0xEC041C", VA = "0xEC041C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600209C")]
		[Address(RVA = "0xEC0420", Offset = "0xEC0420", VA = "0xEC0420", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600209E")]
		[Address(RVA = "0xEC07D8", Offset = "0xEC07D8", VA = "0xEC07D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200048B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BACA8", Offset = "0x9BACA8")]
	private sealed class <DoPlaceTubeBasePosition>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlanterEntityHandle <>4__this;

		[Token(Token = "0x4001446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PlayerControllerInput input;

		[Token(Token = "0x4001447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <tickDistance>5__2;

		[Token(Token = "0x4001448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 <lastTickPos>5__3;

		[Token(Token = "0x4001449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool <isPlacementValid>5__4;

		[Token(Token = "0x400144A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3? <_trueGroundPos>5__5;

		[Token(Token = "0x17000372")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60020A3")]
			[Address(RVA = "0xEC03A4", Offset = "0xEC03A4", VA = "0xEC03A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000373")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60020A5")]
			[Address(RVA = "0xEC0414", Offset = "0xEC0414", VA = "0xEC0414", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60020A0")]
		[Address(RVA = "0xEBF058", Offset = "0xEBF058", VA = "0xEBF058")]
		[DebuggerHidden]
		public <DoPlaceTubeBasePosition>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x60020A1")]
		[Address(RVA = "0xEBF55C", Offset = "0xEBF55C", VA = "0xEBF55C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60020A2")]
		[Address(RVA = "0xEBF560", Offset = "0xEBF560", VA = "0xEBF560", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60020A4")]
		[Address(RVA = "0xEC03AC", Offset = "0xEC03AC", VA = "0xEC03AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200048C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BACB8", Offset = "0x9BACB8")]
	private sealed class <DoTubeReshape>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400144B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400144C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400144D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlanterEntityHandle <>4__this;

		[Token(Token = "0x400144E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PlayerControllerInput input;

		[Token(Token = "0x400144F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <tickDistance>5__2;

		[Token(Token = "0x4001450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 <lastTickPos>5__3;

		[Token(Token = "0x17000374")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60020A9")]
			[Address(RVA = "0xEC0D94", Offset = "0xEC0D94", VA = "0xEC0D94", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000375")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60020AB")]
			[Address(RVA = "0xEC0E04", Offset = "0xEC0E04", VA = "0xEC0E04", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60020A6")]
		[Address(RVA = "0xEBF11C", Offset = "0xEBF11C", VA = "0xEBF11C")]
		[DebuggerHidden]
		public <DoTubeReshape>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x60020A7")]
		[Address(RVA = "0xEC0848", Offset = "0xEC0848", VA = "0xEC0848", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60020A8")]
		[Address(RVA = "0xEC084C", Offset = "0xEC084C", VA = "0xEC084C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60020AA")]
		[Address(RVA = "0xEC0D9C", Offset = "0xEC0D9C", VA = "0xEC0D9C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlanterEntity Parent;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public InteractiveCore Interactive;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Rigidbody Rb;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public StudioEventEmitter SFX_Grab;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public StudioEventEmitter SFX_Place;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public StudioEventEmitter SFX_Stretch;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _isHeld;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Coroutine _threadHold;

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0xEBEB50", Offset = "0xEBEB50", VA = "0xEBEB50")]
	private void Start()
	{
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0xEBEB54", Offset = "0xEBEB54", VA = "0xEBEB54")]
	private void InitInteractive()
	{
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0xEBEE38", Offset = "0xEBEE38", VA = "0xEBEE38")]
	private void SetSFX_StretchVelocityFromInput(PlayerControllerInput input)
	{
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0xEBEEFC", Offset = "0xEBEEFC", VA = "0xEBEEFC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CB6C0", Offset = "0x9CB6C0")]
	private IEnumerator DoPullFromDispensor(PlayerControllerInput input)
	{
		return null;
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0xEBEFC0", Offset = "0xEBEFC0", VA = "0xEBEFC0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CB724", Offset = "0x9CB724")]
	private IEnumerator DoPlaceTubeBasePosition(PlayerControllerInput input)
	{
		return null;
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0xEBF084", Offset = "0xEBF084", VA = "0xEBF084")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CB788", Offset = "0x9CB788")]
	private IEnumerator DoTubeReshape(PlayerControllerInput input)
	{
		return null;
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0xEBF148", Offset = "0xEBF148", VA = "0xEBF148")]
	public PlanterEntityHandle()
	{
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0xEBF150", Offset = "0xEBF150", VA = "0xEBF150")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CB7EC", Offset = "0x9CB7EC")]
	private void <InitInteractive>b__9_1(PlayerControllerInput input)
	{
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0xEBF368", Offset = "0xEBF368", VA = "0xEBF368")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CB7FC", Offset = "0x9CB7FC")]
	private void <InitInteractive>b__9_2(PlayerControllerInput input)
	{
	}
}
[Token(Token = "0x200003F")]
public class PlanterEntityPlanterTubeTop : MonoBehaviour, IFujiSerializable
{
	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshRenderer MeshTop;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshRenderer MeshTopIndented;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PlanterEntity Parent;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Renderer MeshRendererTubeCylinder;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public MeshFilter MeshFilterTube;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MaterialPropertyBlock _rendererTubeMatBlock;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[FujiSerialized]
	public bool IsGrounded;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[FujiSerialized]
	public Vector3 TubeBotPosWorld;

	[Token(Token = "0x6000208")]
	[Address(RVA = "0xEBDF90", Offset = "0xEBDF90", VA = "0xEBDF90")]
	public void UpdateTubeVisual()
	{
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0xEC02D8", Offset = "0xEC02D8", VA = "0xEC02D8")]
	public void PlayEffectPulsateScale()
	{
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0xEC0E0C", Offset = "0xEC0E0C", VA = "0xEC0E0C")]
	private void InitMaterialBlock()
	{
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0xEBDE44", Offset = "0xEBDE44", VA = "0xEBDE44")]
	public void SetOccupiedVisual(bool isOccupied)
	{
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0xEBDCF4", Offset = "0xEBDCF4", VA = "0xEBDCF4")]
	public void SetTubeVisbility(bool isVisible)
	{
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0xEC111C", Offset = "0xEC111C", VA = "0xEC111C", Slot = "4")]
	public void OnPreSerialize()
	{
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0xEC1120", Offset = "0xEC1120", VA = "0xEC1120", Slot = "5")]
	public void OnPostDeserialize()
	{
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0xEC115C", Offset = "0xEC115C", VA = "0xEC115C")]
	public PlanterEntityPlanterTubeTop()
	{
	}
}
[Token(Token = "0x2000040")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9B8158", Offset = "0x9B8158")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9B8158", Offset = "0x9B8158")]
public sealed class PlantSeedEntity : MonoBehaviour, IPlantable, IWaterReceiver, IFujiSerializable, PlantIndicatorService.IPlantIndicatorDataProvider
{
	[Serializable]
	[Token(Token = "0x200048D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BACC8", Offset = "0x9BACC8")]
	private sealed class <>c
	{
		[Token(Token = "0x4001451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static InteractiveCore.InteractiveEvent <>9__13_1;

		[Token(Token = "0x4001453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action <>9__13_0;

		[Token(Token = "0x60020AD")]
		[Address(RVA = "0xEBA0A0", Offset = "0xEBA0A0", VA = "0xEBA0A0")]
		public <>c()
		{
		}

		[Token(Token = "0x60020AE")]
		[Address(RVA = "0xEBA0A8", Offset = "0xEBA0A8", VA = "0xEBA0A8")]
		internal void <Awake>b__13_1(PlayerControllerInput input)
		{
		}

		[Token(Token = "0x60020AF")]
		[Address(RVA = "0xEBA0F8", Offset = "0xEBA0F8", VA = "0xEBA0F8")]
		internal void <Awake>b__13_0()
		{
		}
	}

	[Token(Token = "0x200048E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BACD8", Offset = "0x9BACD8")]
	private sealed class <DoPlantingRoutine>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IPlantableSurface planter;

		[Token(Token = "0x4001457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 plantingPositionWorld;

		[Token(Token = "0x4001458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public PlantSeedEntity <>4__this;

		[Token(Token = "0x4001459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 <plantingPositionLocal>5__2;

		[Token(Token = "0x400145A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private VisualEffectsService <vfx>5__3;

		[Token(Token = "0x400145B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float <oldWater>5__4;

		[Token(Token = "0x400145C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Cooldown <sprayTimer>5__5;

		[Token(Token = "0x400145D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Color <colorOverlayStart>5__6;

		[Token(Token = "0x400145E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Color <colorOverlayEnd>5__7;

		[Token(Token = "0x400145F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int <uniformId_FujiOverlayColor>5__8;

		[Token(Token = "0x17000376")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60020B3")]
			[Address(RVA = "0xEBB1F0", Offset = "0xEBB1F0", VA = "0xEBB1F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000377")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60020B5")]
			[Address(RVA = "0xEBB260", Offset = "0xEBB260", VA = "0xEBB260", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60020B0")]
		[Address(RVA = "0xEB9B18", Offset = "0xEB9B18", VA = "0xEB9B18")]
		[DebuggerHidden]
		public <DoPlantingRoutine>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x60020B1")]
		[Address(RVA = "0xEBA0FC", Offset = "0xEBA0FC", VA = "0xEBA0FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60020B2")]
		[Address(RVA = "0xEBA100", Offset = "0xEBA100", VA = "0xEBA100", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60020B4")]
		[Address(RVA = "0xEBB1F8", Offset = "0xEBB1F8", VA = "0xEBB1F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BD780", Offset = "0x9BD780")]
	public PersistentEntity SpawnPrefab;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _watered;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float _waterRemaining;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool _isDigging;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private InteractiveCore _interactiveCore;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MaterialPropertyBlock _renderBlock;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private InputHandedness HandednessRecent;

	[Token(Token = "0x40001A0")]
	private const float waterRequired = 1.2f;

	[Token(Token = "0x1700002A")]
	public float WaterRemaining
	{
		[Token(Token = "0x6000210")]
		[Address(RVA = "0xEB8EF8", Offset = "0xEB8EF8", VA = "0xEB8EF8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700002B")]
	public bool Planted
	{
		[Token(Token = "0x6000211")]
		[Address(RVA = "0xEB8F00", Offset = "0xEB8F00", VA = "0xEB8F00")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700002C")]
	public bool CanGestate
	{
		[Token(Token = "0x600021C")]
		[Address(RVA = "0xEB9C0C", Offset = "0xEB9C0C", VA = "0xEB9C0C", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700002D")]
	public bool IsAlive
	{
		[Token(Token = "0x600021D")]
		[Address(RVA = "0xEB9C14", Offset = "0xEB9C14", VA = "0xEB9C14", Slot = "9")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700002E")]
	public float TotalThirstFill
	{
		[Token(Token = "0x600021E")]
		[Address(RVA = "0xEB9C7C", Offset = "0xEB9C7C", VA = "0xEB9C7C", Slot = "10")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700002F")]
	public float ProgressTowardsGrowth
	{
		[Token(Token = "0x600021F")]
		[Address(RVA = "0xEB9C98", Offset = "0xEB9C98", VA = "0xEB9C98", Slot = "11")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0xEB8F08", Offset = "0xEB8F08", VA = "0xEB8F08")]
	private PersistentEntity SpawnPlantAtLocation(Vector3 v)
	{
		return null;
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0xEB92D8", Offset = "0xEB92D8", VA = "0xEB92D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0xEB96F4", Offset = "0xEB96F4", VA = "0xEB96F4")]
	private void OnCollisionEnter(Collision other)
	{
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0xEB99C8", Offset = "0xEB99C8", VA = "0xEB99C8")]
	public void PulsateOverlay(float time = 0.3f)
	{
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0xEB9A50", Offset = "0xEB9A50", VA = "0xEB9A50")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CB80C", Offset = "0x9CB80C")]
	private IEnumerator DoPlantingRoutine(Vector3 plantingPositionWorld, IPlantableSurface planter)
	{
		return null;
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0xEB9B44", Offset = "0xEB9B44", VA = "0xEB9B44", Slot = "5")]
	public void ReceiveWater(float waterAmount, Vector3? worldPosition, InputHandedness? hand, Vector3? worldSprayVelocity)
	{
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0xEB9994", Offset = "0xEB9994", VA = "0xEB9994", Slot = "4")]
	public void BuryIntoPlanter(IPlantableSurface planter, Vector3 plantingPosition)
	{
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0xEB9BF8", Offset = "0xEB9BF8", VA = "0xEB9BF8", Slot = "6")]
	public void OnPreSerialize()
	{
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0xEB9BFC", Offset = "0xEB9BFC", VA = "0xEB9BFC", Slot = "7")]
	public void OnPostDeserialize()
	{
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0xEB9C00", Offset = "0xEB9C00", VA = "0xEB9C00")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9CB870", Offset = "0x9CB870")]
	public void AutoWater()
	{
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0xEB9CA0", Offset = "0xEB9CA0", VA = "0xEB9CA0", Slot = "13")]
	public Vector3 SamplePreferredIndicatorHeight()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0xEB9E1C", Offset = "0xEB9E1C", VA = "0xEB9E1C")]
	public PlantSeedEntity()
	{
	}

	[SpecialName]
	[Token(Token = "0x6000222")]
	[Address(RVA = "0xEB9E2C", Offset = "0xEB9E2C", VA = "0xEB9E2C", Slot = "12")]
	private Transform PlantIndicatorService.IPlantIndicatorDataProvider.get_transform()
	{
		return null;
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0xEB9E34", Offset = "0xEB9E34", VA = "0xEB9E34")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CB8A8", Offset = "0x9CB8A8")]
	private void <Awake>b__13_2(PlayerControllerInput input)
	{
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0xEB9F7C", Offset = "0xEB9F7C", VA = "0xEB9F7C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CB8B8", Offset = "0x9CB8B8")]
	private void <Awake>b__13_3(PlayerControllerInput input)
	{
	}
}
[Token(Token = "0x2000041")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9B81E4", Offset = "0x9B81E4")]
public class PlantWaterTrigger : MonoBehaviour, IWaterReceiver
{
	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlantEntity PlantEntity;

	[Token(Token = "0x14000006")]
	public event PlantEntity.OnWasWateredCallback EventOnWatered
	{
		[Token(Token = "0x6000225")]
		[Address(RVA = "0xEBC4B0", Offset = "0xEBC4B0", VA = "0xEBC4B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CB8C8", Offset = "0x9CB8C8")]
		add
		{
		}
		[Token(Token = "0x6000226")]
		[Address(RVA = "0xEBC59C", Offset = "0xEBC59C", VA = "0xEBC59C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CB8D8", Offset = "0x9CB8D8")]
		remove
		{
		}
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0xEBC688", Offset = "0xEBC688", VA = "0xEBC688", Slot = "4")]
	public void ReceiveWater(float waterAmount, Vector3? worldPosition, InputHandedness? hand, Vector3? worldSprayVelocity)
	{
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0xEBC7AC", Offset = "0xEBC7AC", VA = "0xEBC7AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0xEBC880", Offset = "0xEBC880", VA = "0xEBC880")]
	private void OnTriggerEnter(Collider coll)
	{
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0xEBC98C", Offset = "0xEBC98C", VA = "0xEBC98C")]
	public PlantWaterTrigger()
	{
	}
}
[Token(Token = "0x2000042")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9B8248", Offset = "0x9B8248")]
public class FujiBGMPreset : ScriptableObject
{
	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LoadingZoneKey LoadingZone;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[EventRef]
	public string TrackName;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AreaBGMParamMap[] AreaParamMap;

	[Token(Token = "0x600022B")]
	[Address(RVA = "0xBE6894", Offset = "0xBE6894", VA = "0xBE6894")]
	public string GetBGMParamNameForArea(FujiSubArea area)
	{
		return null;
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0xBE6970", Offset = "0xBE6970", VA = "0xBE6970")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9CB8E8", Offset = "0x9CB8E8")]
	private void AutoPropogate()
	{
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0xBE6CFC", Offset = "0xBE6CFC", VA = "0xBE6CFC")]
	public FujiBGMPreset()
	{
	}
}
[Serializable]
[Token(Token = "0x2000043")]
public struct AreaBGMParamMap
{
	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public FujiSubArea FujiArea;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string FMOD_Param_Name;
}
[Token(Token = "0x2000044")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9B82A8", Offset = "0x9B82A8")]
public class GrabbableNodeMapping : ScriptableObject
{
	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string PullParamName;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string ReleaseParamName;

	[Token(Token = "0x600022E")]
	[Address(RVA = "0xDC5B2C", Offset = "0xDC5B2C", VA = "0xDC5B2C")]
	public GrabbableNodeMapping()
	{
	}
}
[Token(Token = "0x2000045")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9B8308", Offset = "0x9B8308")]
public class PlantMappingPreset : ScriptableObject
{
	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private PlantMapping[] _mappings;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<int, int> _jellyFastLookupTable;

	[Token(Token = "0x600022F")]
	[Address(RVA = "0xEB7240", Offset = "0xEB7240", VA = "0xEB7240")]
	private void CreateLookupTable()
	{
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0xEB73A4", Offset = "0xEB73A4", VA = "0xEB73A4")]
	public int[] GetJellyIndicesAtSequencerIndex(int sequencerIndex)
	{
		return null;
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0xEB73F8", Offset = "0xEB73F8", VA = "0xEB73F8")]
	public int GetJellyLeafAtSequencerIndex(int index)
	{
		return default(int);
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0xEB7490", Offset = "0xEB7490", VA = "0xEB7490")]
	public void GetSequencerIndicesFromJellyTouches(IReadOnlyList<JellySystem.JellyTouchResult> jellyTouches, Dictionary<int, PlayerControllerInput> results)
	{
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0xEB7874", Offset = "0xEB7874", VA = "0xEB7874")]
	public PlantMappingPreset()
	{
	}
}
[Serializable]
[Token(Token = "0x2000046")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x9B8368", Offset = "0x9B8368")]
public struct PlantMapping
{
	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private List<int> JellyIndices;

	[Token(Token = "0x17000030")]
	public int Item
	{
		[Token(Token = "0x6000234")]
		[Address(RVA = "0xA85A84", Offset = "0xA85A84", VA = "0xA85A84")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000031")]
	public int Count
	{
		[Token(Token = "0x6000237")]
		[Address(RVA = "0xA85A9C", Offset = "0xA85A9C", VA = "0xA85A9C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000032")]
	public int Last
	{
		[Token(Token = "0x6000238")]
		[Address(RVA = "0xA85AA4", Offset = "0xA85AA4", VA = "0xA85AA4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0xA85A8C", Offset = "0xA85A8C", VA = "0xA85A8C")]
	public int[] ToArray()
	{
		return null;
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0xA85A94", Offset = "0xA85A94", VA = "0xA85A94")]
	public void Add(int item)
	{
	}
}
[Token(Token = "0x2000047")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9B83A0", Offset = "0x9B83A0")]
public class SequencerPlaybackPreset : ScriptableObject, IEquatable<int[]>
{
	[Serializable]
	[Token(Token = "0x200048F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BACE8", Offset = "0x9BACE8")]
	private sealed class <>c
	{
		[Token(Token = "0x4001460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<int, float> <>9__3_0;

		[Token(Token = "0x60020B7")]
		[Address(RVA = "0xD63BA8", Offset = "0xD63BA8", VA = "0xD63BA8")]
		public <>c()
		{
		}

		[Token(Token = "0x60020B8")]
		[Address(RVA = "0xD63BB0", Offset = "0xD63BB0", VA = "0xD63BB0")]
		internal float <ShuffleSteps>b__3_0(int _)
		{
			return default(float);
		}
	}

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int[] Preset;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9BD7F8", Offset = "0x9BD7F8")]
	public int RandomStepCount;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<int> _setCache;

	[Token(Token = "0x17000033")]
	public int RandomLength
	{
		[Token(Token = "0x600023B")]
		[Address(RVA = "0xD63A94", Offset = "0xD63A94", VA = "0xD63A94")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0xD636E0", Offset = "0xD636E0", VA = "0xD636E0")]
	public void ShuffleSteps()
	{
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0xD637F0", Offset = "0xD637F0", VA = "0xD637F0")]
	public void Randomize(int stepCount, int[] set)
	{
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0xD63AD0", Offset = "0xD63AD0", VA = "0xD63AD0", Slot = "4")]
	public bool Equals(int[] other)
	{
		return default(bool);
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0xD63B30", Offset = "0xD63B30", VA = "0xD63B30")]
	public SequencerPlaybackPreset()
	{
	}
}
[Token(Token = "0x2000048")]
public class SeedDispenser : MonoBehaviour
{
	[Token(Token = "0x2000490")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BACF8", Offset = "0x9BACF8")]
	private sealed class <DoAutoSpawn>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SeedDispenser <>4__this;

		[Token(Token = "0x4001465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaitForSeconds <waitPlanter>5__2;

		[Token(Token = "0x4001466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WaitForSeconds <waitLoop>5__3;

		[Token(Token = "0x17000378")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60020BC")]
			[Address(RVA = "0xD32B44", Offset = "0xD32B44", VA = "0xD32B44", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000379")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60020BE")]
			[Address(RVA = "0xD32BB4", Offset = "0xD32BB4", VA = "0xD32BB4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60020B9")]
		[Address(RVA = "0xD32928", Offset = "0xD32928", VA = "0xD32928")]
		[DebuggerHidden]
		public <DoAutoSpawn>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x60020BA")]
		[Address(RVA = "0xD329BC", Offset = "0xD329BC", VA = "0xD329BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60020BB")]
		[Address(RVA = "0xD329C0", Offset = "0xD329C0", VA = "0xD329C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60020BD")]
		[Address(RVA = "0xD32B4C", Offset = "0xD32B4C", VA = "0xD32B4C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PersistentEntity SeedPrefab;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float LogicRadius;

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform TfmPlanterSpawnNode;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Coroutine _threadAutoSpawn;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BD830", Offset = "0x9BD830")]
	private bool <PostSpawnWait>k__BackingField;

	[Token(Token = "0x17000034")]
	public bool PostSpawnWait
	{
		[Token(Token = "0x6000244")]
		[Address(RVA = "0xD32920", Offset = "0xD32920", VA = "0xD32920")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CB930", Offset = "0x9CB930")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000243")]
		[Address(RVA = "0xD32914", Offset = "0xD32914", VA = "0xD32914")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CB920", Offset = "0x9CB920")]
		private set
		{
		}
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0xD32528", Offset = "0xD32528", VA = "0xD32528")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0xD325E0", Offset = "0xD325E0", VA = "0xD325E0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0xD325EC", Offset = "0xD325EC", VA = "0xD325EC")]
	private PlantSeedEntity SpawnSeed()
	{
		return null;
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0xD32714", Offset = "0xD32714", VA = "0xD32714")]
	private bool IsPlanterBlockingSpawnArea()
	{
		return default(bool);
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0xD3256C", Offset = "0xD3256C", VA = "0xD3256C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CB940", Offset = "0x9CB940")]
	private IEnumerator DoAutoSpawn()
	{
		return null;
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0xD32954", Offset = "0xD32954", VA = "0xD32954")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0xD329AC", Offset = "0xD329AC", VA = "0xD329AC")]
	public SeedDispenser()
	{
	}
}
[Token(Token = "0x2000049")]
public class SeedVendorPurchasable : MonoBehaviour
{
	[Token(Token = "0x2000491")]
	public enum VenderMat
	{
		[Token(Token = "0x4001468")]
		None,
		[Token(Token = "0x4001469")]
		Buyable,
		[Token(Token = "0x400146A")]
		TooExpensive
	}

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int LightGemsRequired;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PersistentEntity PfbSeed;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject DotInstance;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MeshRenderer MeshRing;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private PersistentEntity spawnedSeed;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject[] dots;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isVendableKinematic;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Material previousMaterial;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Renderer previousRenderer;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool _dataSet;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool _isAvailable;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private MeshRenderer[] _dotMeshRenderers;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private MaterialPropertyBlock[] _dotMeshRendererBlocks;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int _uniformId_Color;

	[Token(Token = "0x17000035")]
	public bool IsDiscovered
	{
		[Token(Token = "0x6000248")]
		[Address(RVA = "0xD32BBC", Offset = "0xD32BBC", VA = "0xD32BBC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000036")]
	public bool IsAvailable
	{
		[Token(Token = "0x6000249")]
		[Address(RVA = "0xD32C28", Offset = "0xD32C28", VA = "0xD32C28")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0xD32C30", Offset = "0xD32C30", VA = "0xD32C30")]
	public void SetData(VendingInventory.VendableSlot entry)
	{
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0xD33384", Offset = "0xD33384", VA = "0xD33384")]
	public void Start()
	{
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0xD33388", Offset = "0xD33388", VA = "0xD33388")]
	private void SpawnNewSeed()
	{
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0xD3385C", Offset = "0xD3385C", VA = "0xD3385C")]
	public void SetVenderMaterial(VenderMat venderMat)
	{
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0xD33984", Offset = "0xD33984", VA = "0xD33984")]
	private void OnSeedTouch(PlayerControllerInput input)
	{
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0xD33AC4", Offset = "0xD33AC4", VA = "0xD33AC4")]
	private void OnSeedGrabbed(PlayerControllerInput input)
	{
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0xD349AC", Offset = "0xD349AC", VA = "0xD349AC")]
	public void UpdateDots(int numLightGemsInserted)
	{
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0xD3434C", Offset = "0xD3434C", VA = "0xD3434C")]
	public void SetAvailableForPurchase(bool isAvailable, bool isFound)
	{
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0xD34AF8", Offset = "0xD34AF8", VA = "0xD34AF8")]
	public SeedVendorPurchasable()
	{
	}
}
[Token(Token = "0x200004A")]
public class SelfRightingRigidbody : MonoBehaviour
{
	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float maxAngle;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float selfRightingTorque;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool OnlyWhenNearPlayer;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Rigidbody body;

	[Token(Token = "0x6000253")]
	[Address(RVA = "0xD34B10", Offset = "0xD34B10", VA = "0xD34B10")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0xD34B68", Offset = "0xD34B68", VA = "0xD34B68")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0xD34E38", Offset = "0xD34E38", VA = "0xD34E38")]
	public SelfRightingRigidbody()
	{
	}
}
[Token(Token = "0x200004B")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9B8400", Offset = "0x9B8400")]
public class ShyEelLogic : MonoBehaviour
{
	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float HideDistance;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool _hiding;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Animator _animator;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int _hidingId;

	[Token(Token = "0x6000256")]
	[Address(RVA = "0xD6C2E8", Offset = "0xD6C2E8", VA = "0xD6C2E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0xD6C38C", Offset = "0xD6C38C", VA = "0xD6C38C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0xD6C4F8", Offset = "0xD6C4F8", VA = "0xD6C4F8")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0xD6C550", Offset = "0xD6C550", VA = "0xD6C550")]
	public ShyEelLogic()
	{
	}
}
[Token(Token = "0x200004C")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9B8464", Offset = "0x9B8464")]
public class VendingInventory : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x2000492")]
	public struct VendableSlot
	{
		[Token(Token = "0x400146B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public PersistentEntity Prefab;

		[Token(Token = "0x400146C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int Price;

		[Token(Token = "0x60020BF")]
		[Address(RVA = "0xA8B414", Offset = "0xA8B414", VA = "0xA8B414")]
		public int LightGemCost()
		{
			return default(int);
		}
	}

	[Serializable]
	[Token(Token = "0x2000493")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BAD08", Offset = "0x9BAD08")]
	private sealed class <>c
	{
		[Token(Token = "0x400146D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400146E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<VendableSlot, int> <>9__3_0;

		[Token(Token = "0x60020C1")]
		[Address(RVA = "0xF902DC", Offset = "0xF902DC", VA = "0xF902DC")]
		public <>c()
		{
		}

		[Token(Token = "0x60020C2")]
		[Address(RVA = "0xF902E4", Offset = "0xF902E4", VA = "0xF902E4")]
		internal int <MaxCost>b__3_0(VendableSlot item)
		{
			return default(int);
		}
	}

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VendableSlot[] ItemsForSale;

	[Token(Token = "0x17000037")]
	public int Size
	{
		[Token(Token = "0x600025A")]
		[Address(RVA = "0xF90154", Offset = "0xF90154", VA = "0xF90154")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0xF90180", Offset = "0xF90180", VA = "0xF90180")]
	public int MaxCost()
	{
		return default(int);
	}

	[Token(Token = "0x600025C")]
	[Address(RVA = "0xF90270", Offset = "0xF90270", VA = "0xF90270")]
	public VendingInventory()
	{
	}
}
[Token(Token = "0x200004D")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9B84C4", Offset = "0x9B84C4")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9B84C4", Offset = "0x9B84C4")]
public class WaterSphereEntity : MonoBehaviour, IWaterSource, ISimulationTickable
{
	[Token(Token = "0x2000494")]
	public enum WaterSphereType
	{
		[Token(Token = "0x4001470")]
		Source,
		[Token(Token = "0x4001471")]
		Seperated
	}

	[Token(Token = "0x2000495")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BAD18", Offset = "0x9BAD18")]
	private sealed class <DoHandlePullDroplet>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WaterSphereEntity <>4__this;

		[Token(Token = "0x4001475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PlayerControllerInput input;

		[Token(Token = "0x4001476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 <grabOffset>5__2;

		[Token(Token = "0x4001477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 <startVisualPos>5__3;

		[Token(Token = "0x4001478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 <prevHapticVisualPos>5__4;

		[Token(Token = "0x1700037A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60020C6")]
			[Address(RVA = "0xF96D14", Offset = "0xF96D14", VA = "0xF96D14", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700037B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60020C8")]
			[Address(RVA = "0xF96D84", Offset = "0xF96D84", VA = "0xF96D84", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60020C3")]
		[Address(RVA = "0xF963A0", Offset = "0xF963A0", VA = "0xF963A0")]
		[DebuggerHidden]
		public <DoHandlePullDroplet>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x60020C4")]
		[Address(RVA = "0xF966A8", Offset = "0xF966A8", VA = "0xF966A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60020C5")]
		[Address(RVA = "0xF966AC", Offset = "0xF966AC", VA = "0xF966AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60020C7")]
		[Address(RVA = "0xF96D1C", Offset = "0xF96D1C", VA = "0xF96D1C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000496")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BAD28", Offset = "0x9BAD28")]
	private sealed class <DoHoldDroplet>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400147A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400147B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WaterSphereEntity <>4__this;

		[Token(Token = "0x400147C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PlayerControllerInput input;

		[Token(Token = "0x400147D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Rigidbody <rb>5__2;

		[Token(Token = "0x1700037C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60020CC")]
			[Address(RVA = "0xF97028", Offset = "0xF97028", VA = "0xF97028", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700037D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60020CE")]
			[Address(RVA = "0xF97098", Offset = "0xF97098", VA = "0xF97098", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60020C9")]
		[Address(RVA = "0xF96424", Offset = "0xF96424", VA = "0xF96424")]
		[DebuggerHidden]
		public <DoHoldDroplet>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x60020CA")]
		[Address(RVA = "0xF96D8C", Offset = "0xF96D8C", VA = "0xF96D8C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60020CB")]
		[Address(RVA = "0xF96D90", Offset = "0xF96D90", VA = "0xF96D90", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60020CD")]
		[Address(RVA = "0xF97030", Offset = "0xF97030", VA = "0xF97030", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[FujiSerialized]
	public WaterSphereType SphereType;

	[Token(Token = "0x40001CD")]
	private const float DropMinRadius = 0.005f;

	[Token(Token = "0x40001CE")]
	private const float CubicMetersPerDrop = 0.025f;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform TfmVisual;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TimeSpanStruct RefillFrequency;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TimeSpanStruct DeathInterval;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int MaxDroplets;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SphereCollider sphereCollider;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int _dropsRemaining;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[FujiSerialized]
	public float TimeSinceLastLifeEvent;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BD860", Offset = "0x9BD860")]
	public StudioEventEmitter SFX_TouchStart;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public StudioEventEmitter SFX_Release;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Coroutine _threadPullDroplet;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Coroutine _threadHoldDroplet;

	[Token(Token = "0x17000038")]
	[FujiSerialized]
	public int DropsRemaining
	{
		[Token(Token = "0x600025E")]
		[Address(RVA = "0xF958B0", Offset = "0xF958B0", VA = "0xF958B0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600025D")]
		[Address(RVA = "0xF956F8", Offset = "0xF956F8", VA = "0xF956F8")]
		set
		{
		}
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0xF958B8", Offset = "0xF958B8", VA = "0xF958B8")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0xF958E4", Offset = "0xF958E4", VA = "0xF958E4")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0xF959E0", Offset = "0xF959E0", VA = "0xF959E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000262")]
	[Address(RVA = "0xF95A88", Offset = "0xF95A88", VA = "0xF95A88")]
	private void Start()
	{
	}

	[Token(Token = "0x6000263")]
	[Address(RVA = "0xF95A8C", Offset = "0xF95A8C", VA = "0xF95A8C")]
	private void HandleInteraction()
	{
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0xF95E94", Offset = "0xF95E94", VA = "0xF95E94")]
	private void HandleEventTouchStart(PlayerControllerInput input)
	{
	}

	[Token(Token = "0x6000265")]
	[Address(RVA = "0xF960CC", Offset = "0xF960CC", VA = "0xF960CC")]
	private void HandleEventTouchEnd(PlayerControllerInput input)
	{
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0xF960E0", Offset = "0xF960E0", VA = "0xF960E0")]
	private void HandleEventGrabStart(PlayerControllerInput input)
	{
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0xF960E4", Offset = "0xF960E4", VA = "0xF960E4")]
	private void HandleEventReleaseStart(PlayerControllerInput input)
	{
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0xF960E8", Offset = "0xF960E8", VA = "0xF960E8")]
	private void HandleEventTriggerStart(PlayerControllerInput input)
	{
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0xF96270", Offset = "0xF96270", VA = "0xF96270")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CB9A4", Offset = "0x9CB9A4")]
	private IEnumerator DoHandlePullDroplet(PlayerControllerInput input)
	{
		return null;
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0xF963CC", Offset = "0xF963CC", VA = "0xF963CC")]
	public void ForceHold(PlayerControllerInput input)
	{
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0xF96308", Offset = "0xF96308", VA = "0xF96308")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CBA08", Offset = "0x9CBA08")]
	private IEnumerator DoHoldDroplet(PlayerControllerInput input)
	{
		return null;
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0xF95700", Offset = "0xF95700", VA = "0xF95700")]
	private void SetDropVolume(int dropletAmount, bool bounceAnimation = true)
	{
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0xF96450", Offset = "0xF96450", VA = "0xF96450")]
	private static float GetRadiusFromNumDrops(int numDrops)
	{
		return default(float);
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0xF964EC", Offset = "0xF964EC", VA = "0xF964EC", Slot = "4")]
	public float ConsumeWater(float desiredConsumption)
	{
		return default(float);
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0xF9651C", Offset = "0xF9651C", VA = "0xF9651C")]
	public void Update()
	{
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0xF96548", Offset = "0xF96548", VA = "0xF96548", Slot = "5")]
	public void OnSimulationTick(float deltaSeconds, bool liveUpdate)
	{
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0xF96668", Offset = "0xF96668", VA = "0xF96668")]
	public WaterSphereEntity()
	{
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0xF9669C", Offset = "0xF9669C", VA = "0xF9669C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CBA6C", Offset = "0x9CBA6C")]
	private void <Awake>b__19_0()
	{
	}
}
[Token(Token = "0x200004E")]
public class WindChime : MonoBehaviour
{
	[Token(Token = "0x2000497")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BAD38", Offset = "0x9BAD38")]
	private sealed class <DoPlaySeq>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400147E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400147F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WindChime <>4__this;

		[Token(Token = "0x4001481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <numBeatsToWait>5__2;

		[Token(Token = "0x4001482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <i>5__3;

		[Token(Token = "0x1700037E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60020D2")]
			[Address(RVA = "0xF9A8C8", Offset = "0xF9A8C8", VA = "0xF9A8C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700037F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60020D4")]
			[Address(RVA = "0xF9A938", Offset = "0xF9A938", VA = "0xF9A938", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60020CF")]
		[Address(RVA = "0xF9A780", Offset = "0xF9A780", VA = "0xF9A780")]
		[DebuggerHidden]
		public <DoPlaySeq>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x60020D0")]
		[Address(RVA = "0xF9A7B4", Offset = "0xF9A7B4", VA = "0xF9A7B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60020D1")]
		[Address(RVA = "0xF9A7B8", Offset = "0xF9A7B8", VA = "0xF9A7B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60020D3")]
		[Address(RVA = "0xF9A8D0", Offset = "0xF9A8D0", VA = "0xF9A8D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[EventRef]
	private string _sfx;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Coroutine _threadPlayRandomToBeat;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private InteractiveCore _interactive;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform _visualNode;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private MeshRenderer[] _meshes;

	[Token(Token = "0x6000273")]
	[Address(RVA = "0xF99D6C", Offset = "0xF99D6C", VA = "0xF99D6C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0xF9A0D0", Offset = "0xF9A0D0", VA = "0xF9A0D0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0xF9A394", Offset = "0xF9A394", VA = "0xF9A394")]
	private void OnEventTouchStart(PlayerControllerInput input)
	{
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0xF9A6F0", Offset = "0xF9A6F0", VA = "0xF9A6F0")]
	private void OnEventHoldStart(PlayerControllerInput input)
	{
	}

	[Token(Token = "0x6000277")]
	[Address(RVA = "0xF9A73C", Offset = "0xF9A73C", VA = "0xF9A73C")]
	private void OnEventHoldEnd(PlayerControllerInput input)
	{
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0xF9A05C", Offset = "0xF9A05C", VA = "0xF9A05C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CBA7C", Offset = "0x9CBA7C")]
	private IEnumerator DoPlaySeq()
	{
		return null;
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0xF9A4F4", Offset = "0xF9A4F4", VA = "0xF9A4F4")]
	private void TriggerSound()
	{
	}

	[Token(Token = "0x600027A")]
	[Address(RVA = "0xF9A7AC", Offset = "0xF9A7AC", VA = "0xF9A7AC")]
	public WindChime()
	{
	}
}
[Token(Token = "0x200004F")]
public class FujiVrik : MonoBehaviour
{
	[Token(Token = "0x2000498")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BAD48", Offset = "0x9BAD48")]
	private sealed class <Start>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FujiVrik <>4__this;

		[Token(Token = "0x17000380")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60020D8")]
			[Address(RVA = "0xBEA2F4", Offset = "0xBEA2F4", VA = "0xBEA2F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000381")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60020DA")]
			[Address(RVA = "0xBEA364", Offset = "0xBEA364", VA = "0xBEA364", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60020D5")]
		[Address(RVA = "0xBE9CAC", Offset = "0xBE9CAC", VA = "0xBE9CAC")]
		[DebuggerHidden]
		public <Start>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x60020D6")]
		[Address(RVA = "0xBE9DF4", Offset = "0xBE9DF4", VA = "0xBE9DF4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60020D7")]
		[Address(RVA = "0xBE9DF8", Offset = "0xBE9DF8", VA = "0xBE9DF8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60020D9")]
		[Address(RVA = "0xBEA2FC", Offset = "0xBEA2FC", VA = "0xBEA2FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float _targetHeight;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private VRIK _vrik;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TransformStruct _headConfig;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private TransformStruct _leftConfig;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private TransformStruct _rightConfig;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public WigglyArm[] WiggleArms;

	[Token(Token = "0x17000039")]
	public VRIK VRIK
	{
		[Token(Token = "0x600027B")]
		[Address(RVA = "0xBE9B08", Offset = "0xBE9B08", VA = "0xBE9B08")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700003A")]
	public Transform HipTransform
	{
		[Token(Token = "0x600027C")]
		[Address(RVA = "0xBE9B10", Offset = "0xBE9B10", VA = "0xBE9B10")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600027D")]
	[Address(RVA = "0xBE9B4C", Offset = "0xBE9B4C", VA = "0xBE9B4C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0xBE9C38", Offset = "0xBE9C38", VA = "0xBE9C38")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CBAE0", Offset = "0x9CBAE0")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600027F")]
	[Address(RVA = "0xBE9CD8", Offset = "0xBE9CD8", VA = "0xBE9CD8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0xBE9B50", Offset = "0xBE9B50", VA = "0xBE9B50")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9CBB44", Offset = "0x9CBB44")]
	public void UpdateScaleToTargetHeight()
	{
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0xBE9DE0", Offset = "0xBE9DE0", VA = "0xBE9DE0")]
	public FujiVrik()
	{
	}
}
[Token(Token = "0x2000050")]
public class PersistentEntityForceData : MonoBehaviour
{
	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9BD950", Offset = "0x9BD950")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x9BD950", Offset = "0x9BD950")]
	public string JsonSnippet;

	[Token(Token = "0x6000282")]
	[Address(RVA = "0xEB1458", Offset = "0xEB1458", VA = "0xEB1458")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9CBB7C", Offset = "0x9CBB7C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0xEB1614", Offset = "0xEB1614", VA = "0xEB1614")]
	public PersistentEntityForceData()
	{
	}
}
[Token(Token = "0x2000051")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9B8550", Offset = "0x9B8550")]
public class AnimationFrameIndexesScriptableObject : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x2000499")]
	public struct KeyEvent
	{
		[Token(Token = "0x4001486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int Frame;

		[Token(Token = "0x4001487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[Multiline]
		public string Description;
	}

	[Serializable]
	[Token(Token = "0x200049A")]
	public struct TriggerEvent
	{
		[Token(Token = "0x4001488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string TriggerKey;

		[Token(Token = "0x4001489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[Multiline]
		public string Description;
	}

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Multiline]
	public string Description;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int FrameRate;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public KeyEvent[] Events;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TriggerEvent[] Triggers;

	[Token(Token = "0x6000284")]
	[Address(RVA = "0xB9A0B0", Offset = "0xB9A0B0", VA = "0xB9A0B0")]
	public float DurationFromStartSeconds(int index)
	{
		return default(float);
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0xB9A120", Offset = "0xB9A120", VA = "0xB9A120")]
	public float DurationBetweenSeconds(int indexStart, int indexEnd)
	{
		return default(float);
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0xB9A1D0", Offset = "0xB9A1D0", VA = "0xB9A1D0")]
	public AnimationFrameIndexesScriptableObject()
	{
	}
}
[Token(Token = "0x2000052")]
public class GnomeAnimationTarget : MonoBehaviour
{
	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x9BD9B4", Offset = "0x9BD9B4")]
	public Vector2 SecondsToAnimate;

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string[] AnimationTriggers;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly LinkedList<GnomeAnimationTarget> Targets;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private LinkedListNode<GnomeAnimationTarget> _node;

	[Token(Token = "0x1700003B")]
	public static LinkedListNode<GnomeAnimationTarget> StartingNode
	{
		[Token(Token = "0x6000289")]
		[Address(RVA = "0xDC3300", Offset = "0xDC3300", VA = "0xDC3300")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700003C")]
	public static int NodeCount
	{
		[Token(Token = "0x600028A")]
		[Address(RVA = "0xDC3384", Offset = "0xDC3384", VA = "0xDC3384")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0xDC31CC", Offset = "0xDC31CC", VA = "0xDC31CC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0xDC3260", Offset = "0xDC3260", VA = "0xDC3260")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0xDC3408", Offset = "0xDC3408", VA = "0xDC3408")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600028C")]
	[Address(RVA = "0xDC3680", Offset = "0xDC3680", VA = "0xDC3680")]
	public GnomeAnimationTarget()
	{
	}
}
[Token(Token = "0x2000053")]
public class GnomeFaceItemsConfig : MonoBehaviour
{
	[Token(Token = "0x200049B")]
	public enum FaceItem
	{
		[Token(Token = "0x400148B")]
		FaceItem01,
		[Token(Token = "0x400148C")]
		FaceItem02,
		[Token(Token = "0x400148D")]
		FaceItem03,
		[Token(Token = "0x400148E")]
		FaceItem04,
		[Token(Token = "0x400148F")]
		FaceItem05
	}

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject faceItemsPrefab;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject _faceItemsGameObject;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform _gnomeJointHead;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _faceItemsJointRoot;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject _faceItem01;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject _faceItem02;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject _faceItem03;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject _faceItem04;

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject _faceItem05;

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public FaceItem initialFaceItem;

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GameObject _currentlyActiveFaceItem;

	[Token(Token = "0x600028E")]
	[Address(RVA = "0xDC373C", Offset = "0xDC373C", VA = "0xDC373C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600028F")]
	[Address(RVA = "0xDC37B0", Offset = "0xDC37B0", VA = "0xDC37B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0xDC3BD4", Offset = "0xDC3BD4", VA = "0xDC3BD4")]
	public void SetFaceItem(FaceItem item)
	{
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0xDC3CE4", Offset = "0xDC3CE4", VA = "0xDC3CE4")]
	public GnomeFaceItemsConfig()
	{
	}
}
[Token(Token = "0x2000054")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9B8594", Offset = "0x9B8594")]
public class GnomeHapticFeedback : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200049C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BAD58", Offset = "0x9BAD58")]
	private sealed class <>c
	{
		[Token(Token = "0x4001490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static InteractiveCore.InteractiveEvent <>9__0_0;

		[Token(Token = "0x4001492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static InteractiveCore.InteractiveEvent <>9__0_1;

		[Token(Token = "0x60020DC")]
		[Address(RVA = "0xDC3FDC", Offset = "0xDC3FDC", VA = "0xDC3FDC")]
		public <>c()
		{
		}

		[Token(Token = "0x60020DD")]
		[Address(RVA = "0xDC3FE4", Offset = "0xDC3FE4", VA = "0xDC3FE4")]
		internal void <Start>b__0_0(PlayerControllerInput input)
		{
		}

		[Token(Token = "0x60020DE")]
		[Address(RVA = "0xDC4068", Offset = "0xDC4068", VA = "0xDC4068")]
		internal void <Start>b__0_1(PlayerControllerInput input)
		{
		}
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0xDC3CEC", Offset = "0xDC3CEC", VA = "0xDC3CEC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000293")]
	[Address(RVA = "0xDC3F70", Offset = "0xDC3F70", VA = "0xDC3F70")]
	public GnomeHapticFeedback()
	{
	}
}
[Token(Token = "0x2000055")]
public class GnomeLeavesOnBoatCinematic : MonoBehaviour
{
	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform GnomeSittingPosition;

	[Token(Token = "0x6000294")]
	[Address(RVA = "0xDC40F8", Offset = "0xDC40F8", VA = "0xDC40F8")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000295")]
	[Address(RVA = "0xDC41A4", Offset = "0xDC41A4", VA = "0xDC41A4")]
	public GnomeLeavesOnBoatCinematic()
	{
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0xDC41AC", Offset = "0xDC41AC", VA = "0xDC41AC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CBBB4", Offset = "0x9CBBB4")]
	private void <Awake>b__1_0(BoatEvent eve)
	{
	}
}
[Token(Token = "0x2000056")]
public enum GnomeMacroAnimatorState
{
	[Token(Token = "0x40001FB")]
	StandingIdle = 0,
	[Token(Token = "0x40001FC")]
	HoverIdle = 1,
	[Token(Token = "0x40001FD")]
	SittingSleep = 2,
	[Token(Token = "0x40001FE")]
	GuitarInBoat = 4,
	[Token(Token = "0x40001FF")]
	GrabSeed = 5,
	[Token(Token = "0x4000200")]
	GrabLightGem = 6
}
[Token(Token = "0x2000057")]
public class GnomeStateTesting : MonoBehaviour
{
	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PrototypeGnomeGuideIntelligence gnome;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private StateMachine gnomeStateMachine;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform target;

	[Token(Token = "0x6000297")]
	[Address(RVA = "0xDC5500", Offset = "0xDC5500", VA = "0xDC5500")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0xDC5570", Offset = "0xDC5570", VA = "0xDC5570")]
	private void Start()
	{
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0xDC5574", Offset = "0xDC5574", VA = "0xDC5574")]
	private void Update()
	{
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0xDC5788", Offset = "0xDC5788", VA = "0xDC5788")]
	public GnomeStateTesting()
	{
	}
}
[Token(Token = "0x2000058")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9B85F8", Offset = "0x9B85F8")]
public class GnomeStateTrigger : MonoBehaviour
{
	[Token(Token = "0x200049D")]
	public enum States
	{
		[Token(Token = "0x4001494")]
		HoverIdle,
		[Token(Token = "0x4001495")]
		SittingSleep,
		[Token(Token = "0x4001496")]
		WakeupAndGoToTarget
	}

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GenericTriggerVolume _genericTriggerVolume;

	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PrototypeGnomeGuideIntelligence gnome;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private StateMachine gnomeStateMachine;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform target;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public States stateToTrigger;

	[Token(Token = "0x600029B")]
	[Address(RVA = "0xDC5790", Offset = "0xDC5790", VA = "0xDC5790")]
	private void Awake()
	{
	}

	[Token(Token = "0x600029C")]
	[Address(RVA = "0xDC5810", Offset = "0xDC5810", VA = "0xDC5810")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0xDC589C", Offset = "0xDC589C", VA = "0xDC589C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0xDC5928", Offset = "0xDC5928", VA = "0xDC5928")]
	private void TriggerGnomeState()
	{
	}

	[Token(Token = "0x600029F")]
	[Address(RVA = "0xDC5A2C", Offset = "0xDC5A2C", VA = "0xDC5A2C")]
	private void MoveToTarget()
	{
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0xDC5B24", Offset = "0xDC5B24", VA = "0xDC5B24")]
	public GnomeStateTrigger()
	{
	}
}
[Token(Token = "0x2000059")]
public class PrototypeGnomeGuideIntelligence : MonoBehaviour, IStateProvider
{
	[Token(Token = "0x200049E")]
	public enum InitialStateEnum
	{
		[Token(Token = "0x4001498")]
		HoverIdle,
		[Token(Token = "0x4001499")]
		Grabbing,
		[Token(Token = "0x400149A")]
		MoveToPoint,
		[Token(Token = "0x400149B")]
		PointAt,
		[Token(Token = "0x400149C")]
		SittingSleep,
		[Token(Token = "0x400149D")]
		StandingIdle
	}

	[Token(Token = "0x200049F")]
	public class GnomeState
	{
		[Token(Token = "0x400149E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PrototypeGnomeGuideIntelligence _gnome;

		[Token(Token = "0x60020DF")]
		[Address(RVA = "0x10B347C", Offset = "0x10B347C", VA = "0x10B347C")]
		public GnomeState()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20004A0")]
	public class HoverIdleState : GnomeState, ITickableState, IState
	{
		[Token(Token = "0x400149F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float MinStateTime;

		[Token(Token = "0x40014A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float _cooldown;

		[Token(Token = "0x60020E0")]
		[Address(RVA = "0x10B3778", Offset = "0x10B3778", VA = "0x10B3778", Slot = "5")]
		public IState OnStateEnter()
		{
			return null;
		}

		[Token(Token = "0x60020E1")]
		[Address(RVA = "0x10B39A0", Offset = "0x10B39A0", VA = "0x10B39A0", Slot = "6")]
		public void OnStateExit()
		{
		}

		[Token(Token = "0x60020E2")]
		[Address(RVA = "0x10B3A7C", Offset = "0x10B3A7C", VA = "0x10B3A7C", Slot = "4")]
		public IState OnStateTick()
		{
			return null;
		}

		[Token(Token = "0x60020E3")]
		[Address(RVA = "0x10B2264", Offset = "0x10B2264", VA = "0x10B2264")]
		public HoverIdleState()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20004A1")]
	public class StandingIdleState : GnomeState, ITickableState, IState
	{
		[Token(Token = "0x40014A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float MinStateTime;

		[Token(Token = "0x40014A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float _cooldown;

		[Token(Token = "0x60020E4")]
		[Address(RVA = "0x10B44F8", Offset = "0x10B44F8", VA = "0x10B44F8", Slot = "5")]
		public IState OnStateEnter()
		{
			return null;
		}

		[Token(Token = "0x60020E5")]
		[Address(RVA = "0x10B4720", Offset = "0x10B4720", VA = "0x10B4720", Slot = "6")]
		public void OnStateExit()
		{
		}

		[Token(Token = "0x60020E6")]
		[Address(RVA = "0x10B47FC", Offset = "0x10B47FC", VA = "0x10B47FC", Slot = "4")]
		public IState OnStateTick()
		{
			return null;
		}

		[Token(Token = "0x60020E7")]
		[Address(RVA = "0x10B229C", Offset = "0x10B229C", VA = "0x10B229C")]
		public StandingIdleState()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20004A2")]
	public class SittingSleepState : GnomeState, ITickableState, IState
	{
		[Token(Token = "0x40014A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int sleepLayerIndex;

		[Token(Token = "0x40014A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float wakeSpeed;

		[Token(Token = "0x40014A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float sleepSpeed;

		[Token(Token = "0x60020E8")]
		[Address(RVA = "0x10B4268", Offset = "0x10B4268", VA = "0x10B4268", Slot = "5")]
		public IState OnStateEnter()
		{
			return null;
		}

		[Token(Token = "0x60020E9")]
		[Address(RVA = "0x10B43F0", Offset = "0x10B43F0", VA = "0x10B43F0", Slot = "6")]
		public void OnStateExit()
		{
		}

		[Token(Token = "0x60020EA")]
		[Address(RVA = "0x10B44F4", Offset = "0x10B44F4", VA = "0x10B44F4", Slot = "4")]
		public IState OnStateTick()
		{
			return null;
		}

		[Token(Token = "0x60020EB")]
		[Address(RVA = "0x10B228C", Offset = "0x10B228C", VA = "0x10B228C")]
		public SittingSleepState()
		{
		}
	}

	[Token(Token = "0x20004A3")]
	public class MoveToPointState : GnomeState, ITickableState, IState
	{
		[Token(Token = "0x60020EC")]
		[Address(RVA = "0x10B3B6C", Offset = "0x10B3B6C", VA = "0x10B3B6C", Slot = "5")]
		public IState OnStateEnter()
		{
			return null;
		}

		[Token(Token = "0x60020ED")]
		[Address(RVA = "0x10B3CB8", Offset = "0x10B3CB8", VA = "0x10B3CB8", Slot = "6")]
		public void OnStateExit()
		{
		}

		[Token(Token = "0x60020EE")]
		[Address(RVA = "0x10B3D80", Offset = "0x10B3D80", VA = "0x10B3D80", Slot = "4")]
		public IState OnStateTick()
		{
			return null;
		}

		[Token(Token = "0x60020EF")]
		[Address(RVA = "0x10B227C", Offset = "0x10B227C", VA = "0x10B227C")]
		public MoveToPointState()
		{
		}
	}

	[Token(Token = "0x20004A4")]
	public class PointAtState : GnomeState, ITickableState, IState
	{
		[Token(Token = "0x40014A6")]
		private const float MinStateTime = 5f;

		[Token(Token = "0x40014A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float _cooldown;

		[Token(Token = "0x60020F0")]
		[Address(RVA = "0x10B3EB8", Offset = "0x10B3EB8", VA = "0x10B3EB8", Slot = "5")]
		public IState OnStateEnter()
		{
			return null;
		}

		[Token(Token = "0x60020F1")]
		[Address(RVA = "0x10B4048", Offset = "0x10B4048", VA = "0x10B4048", Slot = "6")]
		public void OnStateExit()
		{
		}

		[Token(Token = "0x60020F2")]
		[Address(RVA = "0x10B4110", Offset = "0x10B4110", VA = "0x10B4110", Slot = "4")]
		public IState OnStateTick()
		{
			return null;
		}

		[Token(Token = "0x60020F3")]
		[Address(RVA = "0x10B2284", Offset = "0x10B2284", VA = "0x10B2284")]
		public PointAtState()
		{
		}
	}

	[Token(Token = "0x20004A5")]
	public class GrabbingState : GnomeState, ITickableState, IState
	{
		[Token(Token = "0x40014A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CooldownStruct chirpCooldown;

		[Token(Token = "0x60020F4")]
		[Address(RVA = "0x10B3484", Offset = "0x10B3484", VA = "0x10B3484", Slot = "5")]
		public IState OnStateEnter()
		{
			return null;
		}

		[Token(Token = "0x60020F5")]
		[Address(RVA = "0x10B35C0", Offset = "0x10B35C0", VA = "0x10B35C0", Slot = "6")]
		public void OnStateExit()
		{
		}

		[Token(Token = "0x60020F6")]
		[Address(RVA = "0x10B3638", Offset = "0x10B3638", VA = "0x10B3638", Slot = "4")]
		public IState OnStateTick()
		{
			return null;
		}

		[Token(Token = "0x60020F7")]
		[Address(RVA = "0x10B2274", Offset = "0x10B2274", VA = "0x10B2274")]
		public GrabbingState()
		{
		}
	}

	[Token(Token = "0x20004A6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BAD68", Offset = "0x9BAD68")]
	private sealed class <LerpAnimLayerWeight>d__41 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40014A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40014AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40014AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PrototypeGnomeGuideIntelligence gnome;

		[Token(Token = "0x40014AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int layerIndex;

		[Token(Token = "0x40014AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float targetWeight;

		[Token(Token = "0x40014AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PrototypeGnomeGuideIntelligence <>4__this;

		[Token(Token = "0x40014AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float smoothTime;

		[Token(Token = "0x17000382")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60020FB")]
			[Address(RVA = "0x10B30F8", Offset = "0x10B30F8", VA = "0x10B30F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000383")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60020FD")]
			[Address(RVA = "0x10B3168", Offset = "0x10B3168", VA = "0x10B3168", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60020F8")]
		[Address(RVA = "0x10B2C94", Offset = "0x10B2C94", VA = "0x10B2C94")]
		[DebuggerHidden]
		public <LerpAnimLayerWeight>d__41(int <>1__state)
		{
		}

		[Token(Token = "0x60020F9")]
		[Address(RVA = "0x10B2F10", Offset = "0x10B2F10", VA = "0x10B2F10", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60020FA")]
		[Address(RVA = "0x10B2F14", Offset = "0x10B2F14", VA = "0x10B2F14", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60020FC")]
		[Address(RVA = "0x10B3100", Offset = "0x10B3100", VA = "0x10B3100", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20004A7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BAD78", Offset = "0x9BAD78")]
	private sealed class <>c
	{
		[Token(Token = "0x40014B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40014B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<AnimationClip, bool> <>9__42_0;

		[Token(Token = "0x60020FF")]
		[Address(RVA = "0x10B2EA0", Offset = "0x10B2EA0", VA = "0x10B2EA0")]
		public <>c()
		{
		}

		[Token(Token = "0x6002100")]
		[Address(RVA = "0x10B2EA8", Offset = "0x10B2EA8", VA = "0x10B2EA8")]
		internal bool <TriggerIdleEyeAnims>b__42_0(AnimationClip x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20004A8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BAD88", Offset = "0x9BAD88")]
	private sealed class <TriggerIdleEyeAnims>d__42 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40014B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40014B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40014B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PrototypeGnomeGuideIntelligence <>4__this;

		[Token(Token = "0x40014B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <time>5__2;

		[Token(Token = "0x17000384")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002104")]
			[Address(RVA = "0x10B3404", Offset = "0x10B3404", VA = "0x10B3404", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000385")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002106")]
			[Address(RVA = "0x10B3474", Offset = "0x10B3474", VA = "0x10B3474", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002101")]
		[Address(RVA = "0x10B2D34", Offset = "0x10B2D34", VA = "0x10B2D34")]
		[DebuggerHidden]
		public <TriggerIdleEyeAnims>d__42(int <>1__state)
		{
		}

		[Token(Token = "0x6002102")]
		[Address(RVA = "0x10B3170", Offset = "0x10B3170", VA = "0x10B3170", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002103")]
		[Address(RVA = "0x10B3174", Offset = "0x10B3174", VA = "0x10B3174", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002105")]
		[Address(RVA = "0x10B340C", Offset = "0x10B340C", VA = "0x10B340C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform ControlRoot;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform Target;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool ShowPointing;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float FloatSpeed;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float TurnSpeedDegrees;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Animator AnimatorComponent;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float ProximityThreshold;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector3 SoftOffset;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool AllowCloseDuringPoint;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	public bool ShouldGrab;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Coroutine eyesAnimCoroutine;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public InitialStateEnum initialState;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public HoverIdleState State_HoverIdle;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private GrabbingState State_Grabbing;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MoveToPointState State_MoveToPoint;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private PointAtState State_PointAt;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public SittingSleepState State_SittingSleep;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public StandingIdleState State_StandingIdle;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public StudioEventEmitter SFX_Noise;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public StudioEventEmitter SFX_Greeting;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public bool Audible;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float lerpVelocity;

	[Token(Token = "0x1700003D")]
	public Vector3 SoftPosition
	{
		[Token(Token = "0x60002A3")]
		[Address(RVA = "0x10B2388", Offset = "0x10B2388", VA = "0x10B2388")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60002A2")]
		[Address(RVA = "0x10B22AC", Offset = "0x10B22AC", VA = "0x10B22AC")]
		set
		{
		}
	}

	[Token(Token = "0x1700003E")]
	public Quaternion SoftRotation
	{
		[Token(Token = "0x60002A5")]
		[Address(RVA = "0x10B24AC", Offset = "0x10B24AC", VA = "0x10B24AC")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x60002A4")]
		[Address(RVA = "0x10B244C", Offset = "0x10B244C", VA = "0x10B244C")]
		set
		{
		}
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0x10B20EC", Offset = "0x10B20EC", VA = "0x10B20EC")]
	public void Awake()
	{
	}

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0x10B24DC", Offset = "0x10B24DC", VA = "0x10B24DC")]
	public bool IsNearTarget(float distanceRescaling = 1f)
	{
		return default(bool);
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0x10B27CC", Offset = "0x10B27CC", VA = "0x10B27CC")]
	public void FloatTowards(PrototypeGnomeGuideIntelligence _gnome, Vector3 target)
	{
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0x10B29BC", Offset = "0x10B29BC", VA = "0x10B29BC")]
	public void RotateTowards(Vector3 target)
	{
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0x10B2B58", Offset = "0x10B2B58", VA = "0x10B2B58", Slot = "4")]
	public IState InitialState()
	{
		return null;
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0x10B2BB0", Offset = "0x10B2BB0", VA = "0x10B2BB0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CBBC4", Offset = "0x9CBBC4")]
	private IEnumerator LerpAnimLayerWeight(PrototypeGnomeGuideIntelligence gnome, int layerIndex, float targetWeight, float smoothTime)
	{
		return null;
	}

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0x10B2CC0", Offset = "0x10B2CC0", VA = "0x10B2CC0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CBC28", Offset = "0x9CBC28")]
	private IEnumerator TriggerIdleEyeAnims()
	{
		return null;
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0x10B2D60", Offset = "0x10B2D60", VA = "0x10B2D60")]
	public void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0x10B2E14", Offset = "0x10B2E14", VA = "0x10B2E14")]
	public PrototypeGnomeGuideIntelligence()
	{
	}
}
[Token(Token = "0x200005A")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9B865C", Offset = "0x9B865C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9B865C", Offset = "0x9B865C")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9B865C", Offset = "0x9B865C")]
public class InteractiveSpringGrabbable : MonoBehaviour
{
	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject JellyJointToPull;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float TouchForce;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float GrabForce;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool GrabPlant;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float HapticPerVelocitySqr;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool kinematicControlled;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SpringJoint _jointLeft;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private SpringJoint _jointRight;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Rigidbody _body;

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0xDD55BC", Offset = "0xDD55BC", VA = "0xDD55BC")]
	[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0x9CBC8C", Offset = "0x9CBC8C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0xDD594C", Offset = "0xDD594C", VA = "0xDD594C")]
	private void HandleTouchStart(PlayerControllerInput input)
	{
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0xDD5A90", Offset = "0xDD5A90", VA = "0xDD5A90")]
	private void HandleGrabStart(PlayerControllerInput input)
	{
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0xDD5D64", Offset = "0xDD5D64", VA = "0xDD5D64")]
	private void HandleGrabUpdate(PlayerControllerInput input)
	{
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0xDD5B7C", Offset = "0xDD5B7C", VA = "0xDD5B7C")]
	private void HandleGrabStartHelper(ref SpringJoint joint, PlayerControllerInput input)
	{
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0xDD5E14", Offset = "0xDD5E14", VA = "0xDD5E14")]
	private void HandleGrabEnd(PlayerControllerInput input)
	{
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0xDD5F54", Offset = "0xDD5F54", VA = "0xDD5F54")]
	public InteractiveSpringGrabbable()
	{
	}
}
[Token(Token = "0x200005B")]
public class HumanoidIKGoalsController : MonoBehaviour
{
	[Token(Token = "0x20004A9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BAD98", Offset = "0x9BAD98")]
	private sealed class <>c__DisplayClass20_0
	{
		[Token(Token = "0x40014B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float weight;

		[Token(Token = "0x40014B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HumanoidIKGoalsController <>4__this;

		[Token(Token = "0x40014B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform targetTransform;

		[Token(Token = "0x6002107")]
		[Address(RVA = "0xDCD3B0", Offset = "0xDCD3B0", VA = "0xDCD3B0")]
		public <>c__DisplayClass20_0()
		{
		}

		[Token(Token = "0x6002108")]
		[Address(RVA = "0xDCD6AC", Offset = "0xDCD6AC", VA = "0xDCD6AC")]
		internal float <SetLookingWeight>b__0()
		{
			return default(float);
		}

		[Token(Token = "0x6002109")]
		[Address(RVA = "0xDCD6B4", Offset = "0xDCD6B4", VA = "0xDCD6B4")]
		internal void <SetLookingWeight>b__1(float x)
		{
		}

		[Token(Token = "0x600210A")]
		[Address(RVA = "0xDCD6BC", Offset = "0xDCD6BC", VA = "0xDCD6BC")]
		internal void <SetLookingWeight>b__2()
		{
		}

		[Token(Token = "0x600210B")]
		[Address(RVA = "0xDCD708", Offset = "0xDCD708", VA = "0xDCD708")]
		internal void <SetLookingWeight>b__3()
		{
		}

		[Token(Token = "0x600210C")]
		[Address(RVA = "0xDCD738", Offset = "0xDCD738", VA = "0xDCD738")]
		internal void <SetLookingWeight>b__4()
		{
		}
	}

	[Token(Token = "0x20004AA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BADA8", Offset = "0x9BADA8")]
	private sealed class <>c__DisplayClass26_0
	{
		[Token(Token = "0x40014B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float weight;

		[Token(Token = "0x40014BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public AvatarIKGoal avatarIKGoal;

		[Token(Token = "0x40014BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HumanoidIKGoalsController <>4__this;

		[Token(Token = "0x40014BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform targetTransform;

		[Token(Token = "0x600210D")]
		[Address(RVA = "0xDCD690", Offset = "0xDCD690", VA = "0xDCD690")]
		public <>c__DisplayClass26_0()
		{
		}

		[Token(Token = "0x600210E")]
		[Address(RVA = "0xDCD788", Offset = "0xDCD788", VA = "0xDCD788")]
		internal float <SetPointingWeight>b__0()
		{
			return default(float);
		}

		[Token(Token = "0x600210F")]
		[Address(RVA = "0xDCD790", Offset = "0xDCD790", VA = "0xDCD790")]
		internal void <SetPointingWeight>b__1(float x)
		{
		}

		[Token(Token = "0x6002110")]
		[Address(RVA = "0xDCD798", Offset = "0xDCD798", VA = "0xDCD798")]
		internal void <SetPointingWeight>b__2()
		{
		}

		[Token(Token = "0x6002111")]
		[Address(RVA = "0xDCD830", Offset = "0xDCD830", VA = "0xDCD830")]
		internal void <SetPointingWeight>b__3()
		{
		}

		[Token(Token = "0x6002112")]
		[Address(RVA = "0xDCD890", Offset = "0xDCD890", VA = "0xDCD890")]
		internal void <SetPointingWeight>b__4()
		{
		}
	}

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float StandardLookWeight;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Animator _animator;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool _headIKActive;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool _rightHandIKActive;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	private bool _leftHandIKActive;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _headGoal;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform _rightHandGoal;

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform _leftHandGoal;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float _headWeight;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float _rightHandWeight;

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float _leftHandWeight;

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0xDCCD5C", Offset = "0xDCCD5C", VA = "0xDCCD5C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0xDCCDFC", Offset = "0xDCCDFC", VA = "0xDCCDFC")]
	public void OnAnimatorIKUpdate()
	{
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0xDCD094", Offset = "0xDCD094", VA = "0xDCD094")]
	public void StartLookingAtPlayerHead()
	{
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0xDCD114", Offset = "0xDCD114", VA = "0xDCD114")]
	public void StartLooking(Transform targetTransform, float tweenDuration)
	{
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0xDCD124", Offset = "0xDCD124", VA = "0xDCD124")]
	public void StartLooking(Transform targetTransform, float tweenDuration, Ease ease)
	{
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0xDCD378", Offset = "0xDCD378", VA = "0xDCD378")]
	public void StopLooking(float tweenDuration)
	{
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0xDCD38C", Offset = "0xDCD38C", VA = "0xDCD38C")]
	public void StopLooking(Transform targetTransform, float tweenDuration)
	{
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0xDCD39C", Offset = "0xDCD39C", VA = "0xDCD39C")]
	public void StopLooking(Transform targetTransform, float tweenDuration, Ease ease)
	{
	}

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0xDCD3A8", Offset = "0xDCD3A8", VA = "0xDCD3A8")]
	public void SetPointingWeight(Transform targetTransform, float targetWeight, float tweenDuration)
	{
	}

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0xDCD130", Offset = "0xDCD130", VA = "0xDCD130")]
	public void SetLookingWeight(Transform targetTransform, float targetWeight, float tweenDuration, Ease ease)
	{
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0xDCD3B8", Offset = "0xDCD3B8", VA = "0xDCD3B8")]
	public void StartPointing(AvatarIKGoal avatarIKGoal, Transform targetTransform, float tweenDuration)
	{
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0xDCD3C8", Offset = "0xDCD3C8", VA = "0xDCD3C8")]
	public void StartPointing(AvatarIKGoal avatarIKGoal, Transform targetTransform, float tweenDuration, Ease ease)
	{
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0xDCD66C", Offset = "0xDCD66C", VA = "0xDCD66C")]
	public void StopPointing(AvatarIKGoal avatarIKGoal, Transform targetTransform, float tweenDuration)
	{
	}

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0xDCD67C", Offset = "0xDCD67C", VA = "0xDCD67C")]
	public void StopPointing(AvatarIKGoal avatarIKGoal, Transform targetTransform, float tweenDuration, Ease ease)
	{
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0xDCD688", Offset = "0xDCD688", VA = "0xDCD688")]
	public void SetPointingWeight(AvatarIKGoal avatarIKGoal, Transform targetTransform, float targetWeight, float tweenDuration)
	{
	}

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0xDCD3D4", Offset = "0xDCD3D4", VA = "0xDCD3D4")]
	public void SetPointingWeight(AvatarIKGoal avatarIKGoal, Transform targetTransform, float targetWeight, float tweenDuration, Ease ease)
	{
	}

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0xDCD698", Offset = "0xDCD698", VA = "0xDCD698")]
	public HumanoidIKGoalsController()
	{
	}
}
[Token(Token = "0x200005C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9B870C", Offset = "0x9B870C")]
public class GenericTriggerVolume : MonoBehaviour, LocomotionService.IPlayerTriggerable, IGameObject
{
	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly HashSet<GenericTriggerVolume> EnteredVolumes;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool exitOnStart;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9BD9E8", Offset = "0x9BD9E8")]
	private bool runOnce;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string narrativeKey;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private UnityEvent onTriggerEnter;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private UnityEvent onTriggerExit;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _triggered;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool _preventRun;

	[Token(Token = "0x14000007")]
	public event Action EventOnTriggerEnter
	{
		[Token(Token = "0x60002C6")]
		[Address(RVA = "0xDC1E7C", Offset = "0xDC1E7C", VA = "0xDC1E7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CBC9C", Offset = "0x9CBC9C")]
		add
		{
		}
		[Token(Token = "0x60002C7")]
		[Address(RVA = "0xDC2158", Offset = "0xDC2158", VA = "0xDC2158")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CBCAC", Offset = "0x9CBCAC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event Action EventOnTriggerExit
	{
		[Token(Token = "0x60002C8")]
		[Address(RVA = "0xDC1F68", Offset = "0xDC1F68", VA = "0xDC1F68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CBCBC", Offset = "0x9CBCBC")]
		add
		{
		}
		[Token(Token = "0x60002C9")]
		[Address(RVA = "0xDC2244", Offset = "0xDC2244", VA = "0xDC2244")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CBCCC", Offset = "0x9CBCCC")]
		remove
		{
		}
	}

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0xDC2338", Offset = "0xDC2338", VA = "0xDC2338")]
	public static void ExitRegionsNotWithinSet(HashSet<LocomotionService.IPlayerTriggerable> triggered)
	{
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0xDC24B8", Offset = "0xDC24B8", VA = "0xDC24B8", Slot = "4")]
	public void OnPlayerEnterTrigger()
	{
	}

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0xDC2698", Offset = "0xDC2698", VA = "0xDC2698", Slot = "5")]
	public void OnPlayerExitTrigger()
	{
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0xDC27C4", Offset = "0xDC27C4", VA = "0xDC27C4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0xDC287C", Offset = "0xDC287C", VA = "0xDC287C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0xDC2934", Offset = "0xDC2934", VA = "0xDC2934")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0xDC2A98", Offset = "0xDC2A98", VA = "0xDC2A98")]
	private void Start()
	{
	}

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0xDC2AAC", Offset = "0xDC2AAC", VA = "0xDC2AAC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0xDC25E8", Offset = "0xDC25E8", VA = "0xDC25E8")]
	private void PerformPostEventCheck()
	{
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0xDC2A10", Offset = "0xDC2A10", VA = "0xDC2A10")]
	private void Disable()
	{
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0xDC2B54", Offset = "0xDC2B54", VA = "0xDC2B54")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9CBCDC", Offset = "0x9CBCDC")]
	private void AssignRandomKey()
	{
	}

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0xDC2BC0", Offset = "0xDC2BC0", VA = "0xDC2BC0")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0xDC2C2C", Offset = "0xDC2C2C", VA = "0xDC2C2C")]
	public GenericTriggerVolume()
	{
	}

	[SpecialName]
	[Token(Token = "0x60002D8")]
	[Address(RVA = "0xDC2D08", Offset = "0xDC2D08", VA = "0xDC2D08", Slot = "6")]
	private GameObject IGameObject.get_gameObject()
	{
		return null;
	}

	[SpecialName]
	[Token(Token = "0x60002D9")]
	[Address(RVA = "0xDC2D10", Offset = "0xDC2D10", VA = "0xDC2D10", Slot = "7")]
	private Transform IGameObject.get_transform()
	{
		return null;
	}
}
[Token(Token = "0x200005D")]
public class InteractiveCore : MonoBehaviour
{
	[Token(Token = "0x20004AB")]
	public delegate void InteractiveEvent(PlayerControllerInput input);

	[Token(Token = "0x20004AC")]
	public static class Messages
	{
		[Token(Token = "0x20006D5")]
		public struct HoldItemStateChangedEvent
		{
			[Token(Token = "0x2000701")]
			public enum HoldItemStates
			{
				[Token(Token = "0x4001E99")]
				Released,
				[Token(Token = "0x4001E9A")]
				Grabbed
			}

			[Token(Token = "0x4001E00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public InputHandedness Hand;

			[Token(Token = "0x4001E01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public GameObject Entity;

			[Token(Token = "0x4001E02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public HoldItemStates HoldItemState;
		}
	}

	[Token(Token = "0x20004AD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BADB8", Offset = "0x9BADB8")]
	private sealed class <>c__DisplayClass44_0
	{
		[Token(Token = "0x40014BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Color highlightColorOn;

		[Token(Token = "0x40014BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractiveCore <>4__this;

		[Token(Token = "0x6002117")]
		[Address(RVA = "0xDD36B4", Offset = "0xDD36B4", VA = "0xDD36B4")]
		public <>c__DisplayClass44_0()
		{
		}

		[Token(Token = "0x6002118")]
		[Address(RVA = "0xDD3F10", Offset = "0xDD3F10", VA = "0xDD3F10")]
		internal void <InitializeHighlighting>b__2(PlayerControllerInput input)
		{
		}
	}

	[Token(Token = "0x20004AE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BADC8", Offset = "0x9BADC8")]
	private sealed class <DoRejectAnimation>d__46 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40014BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40014C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40014C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractiveCore <>4__this;

		[Token(Token = "0x40014C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 worldRejectSource;

		[Token(Token = "0x40014C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool <prevHoldable>5__2;

		[Token(Token = "0x40014C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <i>5__3;

		[Token(Token = "0x17000386")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600211C")]
			[Address(RVA = "0xDD4488", Offset = "0xDD4488", VA = "0xDD4488", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000387")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600211E")]
			[Address(RVA = "0xDD44F8", Offset = "0xDD44F8", VA = "0xDD44F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002119")]
		[Address(RVA = "0xDD3794", Offset = "0xDD3794", VA = "0xDD3794")]
		[DebuggerHidden]
		public <DoRejectAnimation>d__46(int <>1__state)
		{
		}

		[Token(Token = "0x600211A")]
		[Address(RVA = "0xDD40E4", Offset = "0xDD40E4", VA = "0xDD40E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600211B")]
		[Address(RVA = "0xDD40E8", Offset = "0xDD40E8", VA = "0xDD40E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600211D")]
		[Address(RVA = "0xDD4490", Offset = "0xDD4490", VA = "0xDD4490", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BDA84", Offset = "0x9BDA84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9BDA84", Offset = "0x9BDA84")]
	public bool IsHoldable;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9BDAE4", Offset = "0x9BDAE4")]
	public bool NoRemote;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x9BDB1C", Offset = "0x9BDB1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9BDB1C", Offset = "0x9BDB1C")]
	public bool ForceHandOrientationMatchOnGrab;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BDB68", Offset = "0x9BDB68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9BDB68", Offset = "0x9BDB68")]
	public bool EnableHoldAffectPosition;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9BDBC8", Offset = "0x9BDBC8")]
	public bool EnableHoldAffectRotation;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x9BDC00", Offset = "0x9BDC00")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9BDC00", Offset = "0x9BDC00")]
	public bool EnableHoldThrowApplyVelocity;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9BDC4C", Offset = "0x9BDC4C")]
	public bool EnableHoldThrowApplyAngVelocity;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x9BDC84", Offset = "0x9BDC84")]
	public bool ForceRigidbodyInterpolationWhenHeld;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BDC94", Offset = "0x9BDC94")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9BDC94", Offset = "0x9BDC94")]
	public Renderer MeshHighlightable;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9BDCF4", Offset = "0x9BDCF4")]
	public bool DisableHighlightingIfNotHoldable;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool BecomeKinematicAfterRelease;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public InteractiveEvent EventPointStart;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public InteractiveEvent EventPointEnd;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public InteractiveEvent EventTouchStart;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public InteractiveEvent EventTouchEnd;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public InteractiveEvent EventTouchTriggerStart;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public InteractiveEvent EventTouchingPostUpdate;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public InteractiveEvent EventTouchTriggerEnd;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public InteractiveEvent EventHoldStart;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public InteractiveEvent EventHoldingPostUpdate;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public InteractiveEvent EventHoldEnd;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[EditorReadOnly]
	public bool BeingHeld;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BDD3C", Offset = "0x9BDD3C")]
	private InputHandedness <Hand>k__BackingField;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private RigidbodyInterpolation _defaultInterpolationValue;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private MaterialPropertyBlock _rendererBlock;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Color _highlightColor;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Color _highlightColorOff;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private int _uniformIdFujiHighlightColor;

	[Token(Token = "0x1700003F")]
	public InputHandedness Hand
	{
		[Token(Token = "0x60002DB")]
		[Address(RVA = "0xDD295C", Offset = "0xDD295C", VA = "0xDD295C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CBD24", Offset = "0x9CBD24")]
		get
		{
			return default(InputHandedness);
		}
		[Token(Token = "0x60002DA")]
		[Address(RVA = "0xDD2954", Offset = "0xDD2954", VA = "0xDD2954")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CBD14", Offset = "0x9CBD14")]
		private set
		{
		}
	}

	[Token(Token = "0x17000040")]
	public PlayerControllerInput Input
	{
		[Token(Token = "0x60002DC")]
		[Address(RVA = "0xDD2964", Offset = "0xDD2964", VA = "0xDD2964")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000041")]
	public MaterialPropertyBlock RendererBlock
	{
		[Token(Token = "0x60002E1")]
		[Address(RVA = "0xDD3614", Offset = "0xDD3614", VA = "0xDD3614")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002E2")]
		[Address(RVA = "0xDD361C", Offset = "0xDD361C", VA = "0xDD361C")]
		set
		{
		}
	}

	[Token(Token = "0x17000042")]
	public Vector3 Position
	{
		[Token(Token = "0x60002E3")]
		[Address(RVA = "0xDD3624", Offset = "0xDD3624", VA = "0xDD3624")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60002E4")]
		[Address(RVA = "0xDD3658", Offset = "0xDD3658", VA = "0xDD3658")]
		set
		{
		}
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0xDD29D0", Offset = "0xDD29D0", VA = "0xDD29D0")]
	public void ClearAllEvents()
	{
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0xDD29E4", Offset = "0xDD29E4", VA = "0xDD29E4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0xDD2EC4", Offset = "0xDD2EC4", VA = "0xDD2EC4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0xDD2ECC", Offset = "0xDD2ECC", VA = "0xDD2ECC")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9CBD34", Offset = "0x9CBD34")]
	public void DoSimulateTouch()
	{
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0xDD29E8", Offset = "0xDD29E8", VA = "0xDD29E8")]
	private void InitializeHighlighting()
	{
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0xDD36BC", Offset = "0xDD36BC", VA = "0xDD36BC")]
	public void RejectAnimation(Vector3 worldRejectSource)
	{
	}

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0xDD36E8", Offset = "0xDD36E8", VA = "0xDD36E8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CBD6C", Offset = "0x9CBD6C")]
	private IEnumerator DoRejectAnimation(Vector3 worldRejectSource)
	{
		return null;
	}

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0xDD37C0", Offset = "0xDD37C0", VA = "0xDD37C0")]
	public InteractiveCore()
	{
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0xDD3814", Offset = "0xDD3814", VA = "0xDD3814")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CBDD0", Offset = "0x9CBDD0")]
	private Color <InitializeHighlighting>b__44_5()
	{
		return default(Color);
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0xDD3820", Offset = "0xDD3820", VA = "0xDD3820")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CBDE0", Offset = "0x9CBDE0")]
	private void <InitializeHighlighting>b__44_6(Color x)
	{
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0xDD382C", Offset = "0xDD382C", VA = "0xDD382C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CBDF0", Offset = "0x9CBDF0")]
	private void <InitializeHighlighting>b__44_7()
	{
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0xDD392C", Offset = "0xDD392C", VA = "0xDD392C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CBE00", Offset = "0x9CBE00")]
	private void <InitializeHighlighting>b__44_3(PlayerControllerInput input)
	{
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0xDD3A5C", Offset = "0xDD3A5C", VA = "0xDD3A5C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CBE10", Offset = "0x9CBE10")]
	private void <InitializeHighlighting>b__44_4(PlayerControllerInput input)
	{
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0xDD3BDC", Offset = "0xDD3BDC", VA = "0xDD3BDC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CBE20", Offset = "0x9CBE20")]
	private Color <InitializeHighlighting>b__44_8()
	{
		return default(Color);
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0xDD3BE8", Offset = "0xDD3BE8", VA = "0xDD3BE8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CBE30", Offset = "0x9CBE30")]
	private void <InitializeHighlighting>b__44_9(Color x)
	{
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0xDD3BF4", Offset = "0xDD3BF4", VA = "0xDD3BF4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CBE40", Offset = "0x9CBE40")]
	private void <InitializeHighlighting>b__44_10()
	{
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0xDD3CF4", Offset = "0xDD3CF4", VA = "0xDD3CF4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CBE50", Offset = "0x9CBE50")]
	private void <InitializeHighlighting>b__44_0(PlayerControllerInput input)
	{
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0xDD3DD8", Offset = "0xDD3DD8", VA = "0xDD3DD8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CBE60", Offset = "0x9CBE60")]
	private void <InitializeHighlighting>b__44_1(PlayerControllerInput input)
	{
	}
}
[Token(Token = "0x200005E")]
public class InventoryFlowerVine : MonoBehaviour
{
	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform _parent;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MaterialPropertyBlock _rendererTubeMatBlock;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int uniformId_PosLocalStart;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int uniformId_PosLocalEnd;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int uniformId_CtrlPosLocal0;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int uniformId_CtrlPosLocal1;

	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int uniformId_TubeIsGrounded;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int uniformId_ColorTop;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int uniformId_ColorBot;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float _randOffset;

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0xDD5F74", Offset = "0xDD5F74", VA = "0xDD5F74")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0xDD6370", Offset = "0xDD6370", VA = "0xDD6370")]
	private void Update()
	{
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0xDD6374", Offset = "0xDD6374", VA = "0xDD6374")]
	public void UpdateTubeVisual()
	{
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0xDD607C", Offset = "0xDD607C", VA = "0xDD607C")]
	private void InitMaterialBlock()
	{
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0xDD69D4", Offset = "0xDD69D4", VA = "0xDD69D4")]
	public InventoryFlowerVine()
	{
	}
}
[Token(Token = "0x200005F")]
public class PortableInventory : MonoBehaviour, ServiceLocator.ILocatableService
{
	[Token(Token = "0x20004AF")]
	public static class Messages
	{
		[Token(Token = "0x20006D6")]
		public struct PortableInventoryOpenedMessage
		{
			[Token(Token = "0x4001E03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool Open;
		}
	}

	[Serializable]
	[Token(Token = "0x20004B0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BADD8", Offset = "0x9BADD8")]
	private sealed class <>c
	{
		[Token(Token = "0x40014C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40014C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<StorageBubble, Vector3> <>9__12_0;

		[Token(Token = "0x40014C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<StorageBubble, bool> <>9__12_4;

		[Token(Token = "0x40014C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Func<StorageBubble, string> <>9__12_5;

		[Token(Token = "0x6002120")]
		[Address(RVA = "0x10B071C", Offset = "0x10B071C", VA = "0x10B071C")]
		public <>c()
		{
		}

		[Token(Token = "0x6002121")]
		[Address(RVA = "0x10B0724", Offset = "0x10B0724", VA = "0x10B0724")]
		internal Vector3 <Awake>b__12_0(StorageBubble b)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002122")]
		[Address(RVA = "0x10B076C", Offset = "0x10B076C", VA = "0x10B076C")]
		internal bool <Awake>b__12_4(StorageBubble s)
		{
			return default(bool);
		}

		[Token(Token = "0x6002123")]
		[Address(RVA = "0x10B07D4", Offset = "0x10B07D4", VA = "0x10B07D4")]
		internal string <Awake>b__12_5(StorageBubble s)
		{
			return null;
		}
	}

	[Token(Token = "0x20004B1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BADE8", Offset = "0x9BADE8")]
	private sealed class <DoBehaviourRoutine>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40014C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40014CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40014CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PortableInventory <>4__this;

		[Token(Token = "0x40014CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private PlayerService <playerService>5__2;

		[Token(Token = "0x40014CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Player <player>5__3;

		[Token(Token = "0x40014CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private PlayerController <activePlayerController>5__4;

		[Token(Token = "0x40014CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private PlayerController[] <>7__wrap4;

		[Token(Token = "0x40014D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int <>7__wrap5;

		[Token(Token = "0x17000388")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002127")]
			[Address(RVA = "0x10B1614", Offset = "0x10B1614", VA = "0x10B1614", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000389")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002129")]
			[Address(RVA = "0x10B1684", Offset = "0x10B1684", VA = "0x10B1684", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002124")]
		[Address(RVA = "0x10AF6D8", Offset = "0x10AF6D8", VA = "0x10AF6D8")]
		[DebuggerHidden]
		public <DoBehaviourRoutine>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6002125")]
		[Address(RVA = "0x10B0850", Offset = "0x10B0850", VA = "0x10B0850", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002126")]
		[Address(RVA = "0x10B0854", Offset = "0x10B0854", VA = "0x10B0854", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002128")]
		[Address(RVA = "0x10B161C", Offset = "0x10B161C", VA = "0x10B161C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004B2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BADF8", Offset = "0x9BADF8")]
	private sealed class <>c__DisplayClass17_0
	{
		[Token(Token = "0x40014D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public StorageBubble storageBubble;

		[Token(Token = "0x600212A")]
		[Address(RVA = "0x10AFD6C", Offset = "0x10AFD6C", VA = "0x10AFD6C")]
		public <>c__DisplayClass17_0()
		{
		}

		[Token(Token = "0x600212B")]
		[Address(RVA = "0x10B0804", Offset = "0x10B0804", VA = "0x10B0804")]
		internal void <CloseInventory>b__0()
		{
		}
	}

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool AllowInventory;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Rigidbody _rb;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject _littleSeed;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject _protoStorageFlower;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Transform _nodeFlower;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public StorageBubble[] StorageFlowers;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3[] internalPos;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private float _flowersFwdOffset;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private InputHandedness prevOperatingHandedness;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _open;

	[Token(Token = "0x17000043")]
	public bool Open
	{
		[Token(Token = "0x60002F8")]
		[Address(RVA = "0x10AEED4", Offset = "0x10AEED4", VA = "0x10AEED4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0x10AEEDC", Offset = "0x10AEEDC", VA = "0x10AEEDC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0x10AF5B4", Offset = "0x10AF5B4", VA = "0x10AF5B4")]
	private void DestroyOccupants()
	{
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0x10AF638", Offset = "0x10AF638", VA = "0x10AF638")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0x10AF664", Offset = "0x10AF664", VA = "0x10AF664")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CBE70", Offset = "0x9CBE70")]
	private IEnumerator DoBehaviourRoutine()
	{
		return null;
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0x10AF704", Offset = "0x10AF704", VA = "0x10AF704")]
	private void HandlessClose()
	{
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0x10AF730", Offset = "0x10AF730", VA = "0x10AF730")]
	private void CloseInventory(bool instant = false)
	{
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0x10AFD74", Offset = "0x10AFD74", VA = "0x10AFD74")]
	private void PlayEnterInventorySlots()
	{
	}

	[Token(Token = "0x6000300")]
	[Address(RVA = "0x10B0358", Offset = "0x10B0358", VA = "0x10B0358")]
	public PortableInventory()
	{
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0x10B037C", Offset = "0x10B037C", VA = "0x10B037C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CBED4", Offset = "0x9CBED4")]
	private void <Awake>b__12_1(MenuGameMode.MainMenuMessage message)
	{
	}

	[Token(Token = "0x6000302")]
	[Address(RVA = "0x10B0388", Offset = "0x10B0388", VA = "0x10B0388")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CBEE4", Offset = "0x9CBEE4")]
	private void <Awake>b__12_2(LocomotionService.Messages.PostLocomotionTeleportGlobalMessage _)
	{
	}

	[Token(Token = "0x6000303")]
	[Address(RVA = "0x10B03B4", Offset = "0x10B03B4", VA = "0x10B03B4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CBEF4", Offset = "0x9CBEF4")]
	private void <Awake>b__12_3(WorldStateService.Messages.SaveStateAlteredMessaged message)
	{
	}
}
[Token(Token = "0x2000060")]
public class RewardPlant : MonoBehaviour
{
	[Token(Token = "0x20004B3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BAE08", Offset = "0x9BAE08")]
	private sealed class <Start>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40014D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40014D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40014D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RewardPlant <>4__this;

		[Token(Token = "0x1700038A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600212F")]
			[Address(RVA = "0xD2F880", Offset = "0xD2F880", VA = "0xD2F880", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700038B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002131")]
			[Address(RVA = "0xD2F8F0", Offset = "0xD2F8F0", VA = "0xD2F8F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600212C")]
		[Address(RVA = "0xD2E2BC", Offset = "0xD2E2BC", VA = "0xD2E2BC")]
		[DebuggerHidden]
		public <Start>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x600212D")]
		[Address(RVA = "0xD2F76C", Offset = "0xD2F76C", VA = "0xD2F76C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600212E")]
		[Address(RVA = "0xD2F770", Offset = "0xD2F770", VA = "0xD2F770", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002130")]
		[Address(RVA = "0xD2F888", Offset = "0xD2F888", VA = "0xD2F888", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BDDBC", Offset = "0x9BDDBC")]
	[SerializeField]
	private PersistentEntity _rewardPrefab;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BDE08", Offset = "0x9BDE08")]
	[SerializeField]
	private Transform _slot;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Animator _animator;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private PersistentEntity _storedEntity;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AudioService.AudioServiceLoopHandle _sparkle;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject _shine;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool GrantRewardOnEnable;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool _beActiveNextEnable;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject ObjectToEnableWhenComplete;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject TeleportRelocator;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9BDE64", Offset = "0x9BDE64")]
	public bool PreserveSolvedThroughDisable;

	[Token(Token = "0x4000279")]
	public const string SfxSpawn = "event:/SFX/Plants/SFX_RewardPlantSpawn";

	[Token(Token = "0x400027A")]
	public const string SfxPopReward = "event:/SFX/Plants/SFX_RewardPlantPopReward";

	[Token(Token = "0x400027B")]
	public const string SfxDespawn = "event:/SFX/Plants/SFX_RewardPlantDespawn";

	[Token(Token = "0x400027C")]
	public const string SfxGrabSpeed = "event:/SFX/Plants/SFX_RewardPlantGrabSeed";

	[Token(Token = "0x400027D")]
	public const string SfxSparkleLoop = "event:/SFX/Plants/SFX_RewardPlantSparkleLoop";

	[Token(Token = "0x6000304")]
	[Address(RVA = "0xD2E1AC", Offset = "0xD2E1AC", VA = "0xD2E1AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000305")]
	[Address(RVA = "0xD2E248", Offset = "0xD2E248", VA = "0xD2E248")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CBF04", Offset = "0x9CBF04")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0xD2E2E8", Offset = "0xD2E2E8", VA = "0xD2E2E8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0xD2E304", Offset = "0xD2E304", VA = "0xD2E304")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9CBF68", Offset = "0x9CBF68")]
	public void GrantReward()
	{
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0xD2EB2C", Offset = "0xD2EB2C", VA = "0xD2EB2C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0xD2ECAC", Offset = "0xD2ECAC", VA = "0xD2ECAC")]
	private void OnGrabbed(PlayerControllerInput input)
	{
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0xD2F19C", Offset = "0xD2F19C", VA = "0xD2F19C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0xD2F370", Offset = "0xD2F370", VA = "0xD2F370")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9CBFA0", Offset = "0x9CBFA0")]
	public void CloseEarly()
	{
	}

	[Token(Token = "0x600030C")]
	[Address(RVA = "0xD2F4BC", Offset = "0xD2F4BC", VA = "0xD2F4BC")]
	public RewardPlant()
	{
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0xD2F4C4", Offset = "0xD2F4C4", VA = "0xD2F4C4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CBFD8", Offset = "0x9CBFD8")]
	private void <GrantReward>b__19_0()
	{
	}
}
[Token(Token = "0x2000061")]
public class RewardVine : MonoBehaviour
{
	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private MeshFilter _meshFilterTube;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MaterialPropertyBlock _rendererTubeMatBlock;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform _tfmBase;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Transform _tfmFlower;

	[Token(Token = "0x600030E")]
	[Address(RVA = "0xD2F8F8", Offset = "0xD2F8F8", VA = "0xD2F8F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0xD2FC0C", Offset = "0xD2FC0C", VA = "0xD2FC0C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0xD2FC10", Offset = "0xD2FC10", VA = "0xD2FC10")]
	public void UpdateTubeVisual()
	{
	}

	[Token(Token = "0x6000311")]
	[Address(RVA = "0xD2F8FC", Offset = "0xD2F8FC", VA = "0xD2F8FC")]
	private void InitMaterialBlock()
	{
	}

	[Token(Token = "0x6000312")]
	[Address(RVA = "0xD30270", Offset = "0xD30270", VA = "0xD30270")]
	public RewardVine()
	{
	}
}
[Serializable]
[Token(Token = "0x2000062")]
public struct FogSettingGroup
{
	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BDEDC", Offset = "0x9BDEDC")]
	public Color ColorBackground;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Color ColorHorizonLift;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color ColorHorizon;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BDF14", Offset = "0x9BDF14")]
	public Color ColorFog;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public FogSetting FogSettingBasic;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public FogSetting FogSettingBackgroundObjects;

	[Token(Token = "0x6000313")]
	[Address(RVA = "0xC6AC68", Offset = "0xC6AC68", VA = "0xC6AC68")]
	public static FogSettingGroup Lerp(FogSettingGroup from, FogSettingGroup to, float t)
	{
		return default(FogSettingGroup);
	}
}
[Serializable]
[Token(Token = "0x2000063")]
public struct FogSetting
{
	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9BDF4C", Offset = "0x9BDF4C")]
	public float FogDensity;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9BDF68", Offset = "0x9BDF68")]
	public float FogAlpha;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9BDF80", Offset = "0x9BDF80")]
	public float HeightOffset;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9BDFA0", Offset = "0x9BDFA0")]
	public float HeightFeather;

	[Token(Token = "0x6000314")]
	[Address(RVA = "0xA82084", Offset = "0xA82084", VA = "0xA82084")]
	public Vector4 ToVector4()
	{
		return default(Vector4);
	}

	[Token(Token = "0x6000315")]
	[Address(RVA = "0xC6AB5C", Offset = "0xC6AB5C", VA = "0xC6AB5C")]
	public static FogSetting Lerp(FogSetting from, FogSetting to, float t)
	{
		return default(FogSetting);
	}
}
[Token(Token = "0x2000064")]
[ExecuteInEditMode]
public class FujiBackgroundFog : MonoBehaviour
{
	[Token(Token = "0x20004B4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BAE18", Offset = "0x9BAE18")]
	private sealed class <DoSettingsLerp>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40014D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40014D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40014D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FujiBackgroundFog <>4__this;

		[Token(Token = "0x40014D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float blendTime;

		[Token(Token = "0x40014D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public FogSettingGroup newSettings;

		[Token(Token = "0x40014DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private FogSettingGroup <initialSettings>5__2;

		[Token(Token = "0x40014DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x1700038C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002135")]
			[Address(RVA = "0xBE7228", Offset = "0xBE7228", VA = "0xBE7228", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700038D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002137")]
			[Address(RVA = "0xBE7298", Offset = "0xBE7298", VA = "0xBE7298", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002132")]
		[Address(RVA = "0xBE6F3C", Offset = "0xBE6F3C", VA = "0xBE6F3C")]
		[DebuggerHidden]
		public <DoSettingsLerp>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6002133")]
		[Address(RVA = "0xBE70E8", Offset = "0xBE70E8", VA = "0xBE70E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002134")]
		[Address(RVA = "0xBE70EC", Offset = "0xBE70EC", VA = "0xBE70EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002136")]
		[Address(RVA = "0xBE7230", Offset = "0xBE7230", VA = "0xBE7230", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[NonSerialized]
	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FogSettingGroup CurrFogSettingGroup;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int UniformId_FujiSkyboxColorBG;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int UniformId_FujiSkyboxColorFog;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int UniformId_FujiSkyboxColorHorizonLift;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private int UniformId_FujiSkyboxColorHorizon;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int UniformId_FujiFogSettings;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private int UniformId_FujiFogSettingsBG;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Coroutine _threadSettingsBlend;

	[Token(Token = "0x6000316")]
	[Address(RVA = "0xBE6D04", Offset = "0xBE6D04", VA = "0xBE6D04")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0xBE6DD4", Offset = "0xBE6DD4", VA = "0xBE6DD4")]
	public void BlendSettingsTo(FogSettingGroup newSettings, float blendTime = 1f)
	{
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0xBE6E48", Offset = "0xBE6E48", VA = "0xBE6E48")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CBFE8", Offset = "0x9CBFE8")]
	private IEnumerator DoSettingsLerp(FogSettingGroup newSettings, float blendTime = 1f)
	{
		return null;
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0xBE6F68", Offset = "0xBE6F68", VA = "0xBE6F68")]
	private void Update()
	{
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0xBE6F6C", Offset = "0xBE6F6C", VA = "0xBE6F6C")]
	public void UpdateShaderVals()
	{
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0xBE70E0", Offset = "0xBE70E0", VA = "0xBE70E0")]
	public FujiBackgroundFog()
	{
	}
}
[Serializable]
[Token(Token = "0x2000065")]
public struct FujiCylinderLightSettings
{
	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public FujiCylinderLightColors ColorsBase;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public FujiCylinderLightColors ColorsUndertuned;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public FujiCylinderLightColors ColorsOvertuned;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9BDFBC", Offset = "0x9BDFBC")]
	public float LightFeatherAmount;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9BDFD8", Offset = "0x9BDFD8")]
	public float EmissionDistanceFalloff;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9BDFF4", Offset = "0x9BDFF4")]
	public float EdgeDistance;

	[Token(Token = "0x600031C")]
	[Address(RVA = "0xBE9758", Offset = "0xBE9758", VA = "0xBE9758")]
	public static FujiCylinderLightSettings Lerp(FujiCylinderLightSettings a, FujiCylinderLightSettings b, float tCoeff)
	{
		return default(FujiCylinderLightSettings);
	}
}
[Serializable]
[Token(Token = "0x2000066")]
public struct FujiCylinderLightColors
{
	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Color AmbientSky;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Color AmbientEquator;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color AmbientGround;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Color AmbientEdge;

	[Token(Token = "0x600031D")]
	[Address(RVA = "0xBE7D84", Offset = "0xBE7D84", VA = "0xBE7D84")]
	public static FujiCylinderLightColors Lerp(FujiCylinderLightColors a, FujiCylinderLightColors b, float tCoeff)
	{
		return default(FujiCylinderLightColors);
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0xA81C3C", Offset = "0xA81C3C", VA = "0xA81C3C")]
	public void CopyFrom(FujiCylinderLightColors other)
	{
	}
}
[Token(Token = "0x2000067")]
[ExecuteInEditMode]
public class FujiCylinderLight : MonoBehaviour
{
	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FujiCylinderLightController Controller;

	[NonSerialized]
	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FujiCylinderLightColors CurrLightColors;

	[NonSerialized]
	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float LightFeatherAmount;

	[NonSerialized]
	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float EmissionDistanceFalloff;

	[NonSerialized]
	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float EdgeDistance;

	[NonSerialized]
	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float LightStrength;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int UniformId_FujiLightPos;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int UniformId_FujiLightDir;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int UniformId_FujiLightData;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int UniformId_FujiAmbientSky;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int UniformId_FujiAmbientEquator;

	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private int UniformId_FujiAmbientGround;

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int UniformId_FujiAmbientEdge;

	[Token(Token = "0x17000044")]
	public Vector3 LightDirection
	{
		[Token(Token = "0x600031F")]
		[Address(RVA = "0xBE72C8", Offset = "0xBE72C8", VA = "0xBE72C8")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x6000320")]
	[Address(RVA = "0xBE72FC", Offset = "0xBE72FC", VA = "0xBE72FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0xBE73E4", Offset = "0xBE73E4", VA = "0xBE73E4")]
	public void UpdateShaderVals()
	{
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0xBE770C", Offset = "0xBE770C", VA = "0xBE770C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000323")]
	[Address(RVA = "0xBE7710", Offset = "0xBE7710", VA = "0xBE7710")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000324")]
	[Address(RVA = "0xBE7B84", Offset = "0xBE7B84", VA = "0xBE7B84")]
	private void GizmoDrawDownRays(Vector3 right, Vector3 fwd, Vector3 center, float radius)
	{
	}

	[Token(Token = "0x6000325")]
	[Address(RVA = "0xBE7D70", Offset = "0xBE7D70", VA = "0xBE7D70")]
	public FujiCylinderLight()
	{
	}
}
[Token(Token = "0x2000068")]
[ExecuteInEditMode]
public class FujiCylinderLightController : MonoBehaviour
{
	[Token(Token = "0x20004B5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BAE28", Offset = "0x9BAE28")]
	private sealed class <>c__DisplayClass31_0
	{
		[Token(Token = "0x40014DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FujiCylinderLightController <>4__this;

		[Token(Token = "0x40014DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int uniformId_WiggleStrength;

		[Token(Token = "0x40014DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float prevWiggleStrength;

		[Token(Token = "0x6002138")]
		[Address(RVA = "0xBE8F18", Offset = "0xBE8F18", VA = "0xBE8F18")]
		public <>c__DisplayClass31_0()
		{
		}

		[Token(Token = "0x6002139")]
		[Address(RVA = "0xBE95A8", Offset = "0xBE95A8", VA = "0xBE95A8")]
		internal void <PlayWiggleEffect>b__0()
		{
		}
	}

	[Token(Token = "0x20004B6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BAE38", Offset = "0x9BAE38")]
	private sealed class <DoSettingsLerp>d__37 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40014DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40014E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40014E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FujiCylinderLightController <>4__this;

		[Token(Token = "0x40014E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float blendTime;

		[Token(Token = "0x40014E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public FujiCylinderLightSettings newSettings;

		[Token(Token = "0x40014E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private FujiCylinderLightSettings <initialSettings>5__2;

		[Token(Token = "0x40014E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x1700038E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600213D")]
			[Address(RVA = "0xBE9990", Offset = "0xBE9990", VA = "0xBE9990", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700038F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600213F")]
			[Address(RVA = "0xBE9A00", Offset = "0xBE9A00", VA = "0xBE9A00", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600213A")]
		[Address(RVA = "0xBE94CC", Offset = "0xBE94CC", VA = "0xBE94CC")]
		[DebuggerHidden]
		public <DoSettingsLerp>d__37(int <>1__state)
		{
		}

		[Token(Token = "0x600213B")]
		[Address(RVA = "0xBE961C", Offset = "0xBE961C", VA = "0xBE961C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600213C")]
		[Address(RVA = "0xBE9620", Offset = "0xBE9620", VA = "0xBE9620", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600213E")]
		[Address(RVA = "0xBE9998", Offset = "0xBE9998", VA = "0xBE9998", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private WorldStateService _worldStateService;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FujiCylinderLight LightCylinderArea;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LightRingVisual LightRingVisual;

	[NonSerialized]
	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public FujiCylinderLightSettings CurrLightSettings;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BE00C", Offset = "0x9BE00C")]
	[SerializeField]
	private Transform _positionerTransform;

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Vector3 LightRingTargetGroundPos;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public float RadiusLerpFactor;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public bool EnforceRadiusFromGemCount;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Coroutine _threadSettingsBlend;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private Tween tweenIdExpansionEffect;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private Tween tweenIdWiggleEffect;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private Tween tweenIdColorEffect;

	[Token(Token = "0x17000045")]
	public float CurrentLightRadius
	{
		[Token(Token = "0x6000326")]
		[Address(RVA = "0xBE76DC", Offset = "0xBE76DC", VA = "0xBE76DC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000327")]
		[Address(RVA = "0xBE7F14", Offset = "0xBE7F14", VA = "0xBE7F14")]
		set
		{
		}
	}

	[Token(Token = "0x17000046")]
	public float CurrentLightHeight
	{
		[Token(Token = "0x6000329")]
		[Address(RVA = "0xBE800C", Offset = "0xBE800C", VA = "0xBE800C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000328")]
		[Address(RVA = "0xBE7F8C", Offset = "0xBE7F8C", VA = "0xBE7F8C")]
		set
		{
		}
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0xBE804C", Offset = "0xBE804C", VA = "0xBE804C")]
	public void Start()
	{
	}

	[Token(Token = "0x600032B")]
	[Address(RVA = "0xBE80A0", Offset = "0xBE80A0", VA = "0xBE80A0")]
	public void SetLightRingHeightInEditor(float newPosition)
	{
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0xBE8170", Offset = "0xBE8170", VA = "0xBE8170")]
	public void RelocateLightRing(Vector3 newGroundPosition)
	{
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0xBE82B4", Offset = "0xBE82B4", VA = "0xBE82B4")]
	public void RelocateLightRingToActiveScene()
	{
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0xBE8398", Offset = "0xBE8398", VA = "0xBE8398")]
	public void UpdateTuneLighting(float tuneVal)
	{
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0xBE85C0", Offset = "0xBE85C0", VA = "0xBE85C0")]
	public void Update()
	{
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0xBE8830", Offset = "0xBE8830", VA = "0xBE8830")]
	private float GetTargetRadius()
	{
		return default(float);
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0xBE8890", Offset = "0xBE8890", VA = "0xBE8890")]
	public static float GetTargetRadius(LoadingZoneKey zone)
	{
		return default(float);
	}

	[Token(Token = "0x6000332")]
	[Address(RVA = "0xBE8A3C", Offset = "0xBE8A3C", VA = "0xBE8A3C")]
	private Vector3 GetLightRingTargetHeightOffset()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0xBE833C", Offset = "0xBE833C", VA = "0xBE833C")]
	private Vector3? GetLightRingZonePosition()
	{
		return null;
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0xBE8860", Offset = "0xBE8860", VA = "0xBE8860")]
	private float GetTargetRingHeight()
	{
		return default(float);
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0xBE8ADC", Offset = "0xBE8ADC", VA = "0xBE8ADC")]
	public static float GetTargetRingHeightOfZone(LoadingZoneKey zone)
	{
		return default(float);
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0xBE8C84", Offset = "0xBE8C84", VA = "0xBE8C84")]
	public void PlayColorEffect([Optional] Color? color, float duration = 1f)
	{
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0xBE8D90", Offset = "0xBE8D90", VA = "0xBE8D90")]
	public void PlayWiggleEffect(float wiggleDuration = 3f, float wiggleSpeed = 3f, float wiggleStrength = 0.02f)
	{
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0xBE8F20", Offset = "0xBE8F20", VA = "0xBE8F20")]
	public void PlayPulsateLightStrengthBoost(float duration = 3f, float lightStrengthBoost = 1.3f)
	{
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0xBE9078", Offset = "0xBE9078", VA = "0xBE9078")]
	public void PlayPulsateLightStrengthBoostInstant(float duration = 3f, float lightStrengthBoost = 1.3f)
	{
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0xBE9148", Offset = "0xBE9148", VA = "0xBE9148")]
	public bool IsWithingLightRadius(Vector3 hitPoint)
	{
		return default(bool);
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0xBE9214", Offset = "0xBE9214", VA = "0xBE9214")]
	public bool IsWithinLightRadius(Vector3 hitPoint, int gemCount)
	{
		return default(bool);
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0xBE9364", Offset = "0xBE9364", VA = "0xBE9364")]
	public void BlendSettingsTo(FujiCylinderLightSettings newSettings, float blendTime = 1f)
	{
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0xBE93D8", Offset = "0xBE93D8", VA = "0xBE93D8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CC04C", Offset = "0x9CC04C")]
	private IEnumerator DoSettingsLerp(FujiCylinderLightSettings newSettings, float blendTime = 1f)
	{
		return null;
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0xBE94F8", Offset = "0xBE94F8", VA = "0xBE94F8")]
	public FujiCylinderLightController()
	{
	}

	[Token(Token = "0x600033F")]
	[Address(RVA = "0xBE9514", Offset = "0xBE9514", VA = "0xBE9514")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CC0B0", Offset = "0x9CC0B0")]
	private float <PlayPulsateLightStrengthBoost>b__32_0()
	{
		return default(float);
	}

	[Token(Token = "0x6000340")]
	[Address(RVA = "0xBE9540", Offset = "0xBE9540", VA = "0xBE9540")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CC0C0", Offset = "0x9CC0C0")]
	private void <PlayPulsateLightStrengthBoost>b__32_1(float x)
	{
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0xBE9578", Offset = "0xBE9578", VA = "0xBE9578")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CC0D0", Offset = "0x9CC0D0")]
	private void <PlayPulsateLightStrengthBoostInstant>b__33_0()
	{
	}
}
[Token(Token = "0x2000069")]
public class MenuGameMode : MonoBehaviour
{
	[Token(Token = "0x20004B7")]
	public enum MainMenuSelection
	{
		[Token(Token = "0x40014E7")]
		NewGame,
		[Token(Token = "0x40014E8")]
		Continue
	}

	[Token(Token = "0x20004B8")]
	public struct MainMenuMessage
	{
		[Token(Token = "0x40014E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MainMenuSelection Selection;
	}

	[Token(Token = "0x20004B9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BAE48", Offset = "0x9BAE48")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x40014EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool triggered;

		[Token(Token = "0x6002140")]
		[Address(RVA = "0xCC435C", Offset = "0xCC435C", VA = "0xCC435C")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x6002141")]
		[Address(RVA = "0xCC4364", Offset = "0xCC4364", VA = "0xCC4364")]
		internal void <Start>b__0()
		{
		}
	}

	[Token(Token = "0x20004BA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BAE58", Offset = "0x9BAE58")]
	private sealed class <Start>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40014EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40014EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40014ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MenuGameMode <>4__this;

		[Token(Token = "0x40014EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private <>c__DisplayClass3_0 <>8__1;

		[Token(Token = "0x17000390")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002145")]
			[Address(RVA = "0xCC4698", Offset = "0xCC4698", VA = "0xCC4698", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000391")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002147")]
			[Address(RVA = "0xCC4708", Offset = "0xCC4708", VA = "0xCC4708", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002142")]
		[Address(RVA = "0xCC4328", Offset = "0xCC4328", VA = "0xCC4328")]
		[DebuggerHidden]
		public <Start>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6002143")]
		[Address(RVA = "0xCC4400", Offset = "0xCC4400", VA = "0xCC4400", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002144")]
		[Address(RVA = "0xCC4404", Offset = "0xCC4404", VA = "0xCC4404", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002146")]
		[Address(RVA = "0xCC46A0", Offset = "0xCC46A0", VA = "0xCC46A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SmallMovablePlanter NewGamePlanter;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GenericTriggerVolume ContinueTrigger;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform _startingPose;

	[Token(Token = "0x6000342")]
	[Address(RVA = "0xCC42B4", Offset = "0xCC42B4", VA = "0xCC42B4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CC0E0", Offset = "0x9CC0E0")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0xCC4354", Offset = "0xCC4354", VA = "0xCC4354")]
	public MenuGameMode()
	{
	}
}
[Token(Token = "0x200006A")]
public class BasicLightGemSlot : MonoBehaviour
{
	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private LightGemSlot _lightGemSlot;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform _tfmRing;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private MeshRenderer _ringMesh;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject _baseMesh;

	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject _baseMeshInactive;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int _uniformId_Color;

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private MaterialPropertyBlock _ringMatBlock;

	[Token(Token = "0x6000344")]
	[Address(RVA = "0xB9C85C", Offset = "0xB9C85C", VA = "0xB9C85C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0xB9C8F8", Offset = "0xB9C8F8", VA = "0xB9C8F8")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0xB9CA0C", Offset = "0xB9CA0C", VA = "0xB9CA0C")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0xB9CB20", Offset = "0xB9CB20", VA = "0xB9CB20")]
	public void SetSlotsEnabled(bool slotEnabled)
	{
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0xB9CC28", Offset = "0xB9CC28", VA = "0xB9CC28")]
	private void SetRingColor(Color ringColor)
	{
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0xB9CCC0", Offset = "0xB9CCC0", VA = "0xB9CCC0")]
	private void HandLightGemSlotMsg(LightGemSlotMessage msg)
	{
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0xB9CDE8", Offset = "0xB9CDE8", VA = "0xB9CDE8")]
	private void HandLightGemMsg(LightGemMessage msg)
	{
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0xB9CFA8", Offset = "0xB9CFA8", VA = "0xB9CFA8")]
	public BasicLightGemSlot()
	{
	}
}
[Token(Token = "0x200006B")]
public class CenterInStoreFrontSlot : MonoBehaviour
{
	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PersistentEntity Parent;

	[Token(Token = "0x600034C")]
	[Address(RVA = "0xBB24EC", Offset = "0xBB24EC", VA = "0xBB24EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600034D")]
	[Address(RVA = "0xBB2578", Offset = "0xBB2578", VA = "0xBB2578")]
	private void Update()
	{
	}

	[Token(Token = "0x600034E")]
	[Address(RVA = "0xBB2710", Offset = "0xBB2710", VA = "0xBB2710")]
	public CenterInStoreFrontSlot()
	{
	}
}
[Token(Token = "0x200006C")]
public class GenericLightGemSlot : MonoBehaviour
{
	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public StorageBubble StorageBubble;

	[Token(Token = "0x600034F")]
	[Address(RVA = "0xDC1AA4", Offset = "0xDC1AA4", VA = "0xDC1AA4")]
	public bool IsPowered()
	{
		return default(bool);
	}

	[Token(Token = "0x6000350")]
	[Address(RVA = "0xDC1B84", Offset = "0xDC1B84", VA = "0xDC1B84")]
	public bool ConsumeAttachedPowerSource()
	{
		return default(bool);
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0xDC1C4C", Offset = "0xDC1C4C", VA = "0xDC1C4C")]
	public GenericLightGemSlot()
	{
	}
}
[Token(Token = "0x200006D")]
public class LightGemSlot : MonoBehaviour
{
	[Token(Token = "0x20004BB")]
	public delegate bool AcceptLightGemCondition(LightGem lightGem);

	[Token(Token = "0x20004BC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BAE68", Offset = "0x9BAE68")]
	private sealed class <DoHandleLightGemHoverStart>d__39 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40014EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40014F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40014F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LightGemSlot <>4__this;

		[Token(Token = "0x40014F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LightGem lightGem;

		[Token(Token = "0x40014F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private PlayerService <playerService>5__2;

		[Token(Token = "0x40014F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private PlayerController <playerController>5__3;

		[Token(Token = "0x40014F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private PlayerControllerInput <playerInput>5__4;

		[Token(Token = "0x17000392")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600214F")]
			[Address(RVA = "0xBF64B0", Offset = "0xBF64B0", VA = "0xBF64B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000393")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002151")]
			[Address(RVA = "0xBF6520", Offset = "0xBF6520", VA = "0xBF6520", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600214C")]
		[Address(RVA = "0xBF562C", Offset = "0xBF562C", VA = "0xBF562C")]
		[DebuggerHidden]
		public <DoHandleLightGemHoverStart>d__39(int <>1__state)
		{
		}

		[Token(Token = "0x600214D")]
		[Address(RVA = "0xBF5FDC", Offset = "0xBF5FDC", VA = "0xBF5FDC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600214E")]
		[Address(RVA = "0xBF5FE0", Offset = "0xBF5FE0", VA = "0xBF5FE0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002150")]
		[Address(RVA = "0xBF64B8", Offset = "0xBF64B8", VA = "0xBF64B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004BD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BAE78", Offset = "0x9BAE78")]
	private sealed class <>c__DisplayClass40_0
	{
		[Token(Token = "0x40014F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LightGemSlot <>4__this;

		[Token(Token = "0x40014F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LightGem lightGem;

		[Token(Token = "0x6002152")]
		[Address(RVA = "0xBF5DA0", Offset = "0xBF5DA0", VA = "0xBF5DA0")]
		public <>c__DisplayClass40_0()
		{
		}

		[Token(Token = "0x6002153")]
		[Address(RVA = "0xBF5EA4", Offset = "0xBF5EA4", VA = "0xBF5EA4")]
		internal void <ConsumeLightGem>b__0()
		{
		}
	}

	[Token(Token = "0x20004BE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BAE88", Offset = "0x9BAE88")]
	private sealed class <DoTrapCooldown>d__42 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40014F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40014F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40014FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LightGemSlot <>4__this;

		[Token(Token = "0x17000394")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002157")]
			[Address(RVA = "0xBF6590", Offset = "0xBF6590", VA = "0xBF6590", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000395")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002159")]
			[Address(RVA = "0xBF6600", Offset = "0xBF6600", VA = "0xBF6600", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002154")]
		[Address(RVA = "0xBF5E50", Offset = "0xBF5E50", VA = "0xBF5E50")]
		[DebuggerHidden]
		public <DoTrapCooldown>d__42(int <>1__state)
		{
		}

		[Token(Token = "0x6002155")]
		[Address(RVA = "0xBF6528", Offset = "0xBF6528", VA = "0xBF6528", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002156")]
		[Address(RVA = "0xBF652C", Offset = "0xBF652C", VA = "0xBF652C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002158")]
		[Address(RVA = "0xBF6598", Offset = "0xBF6598", VA = "0xBF6598", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float _dotsRadius;

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private int _numLightGemSlots;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int _numLightGemsFilled;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BE0C8", Offset = "0x9BE0C8")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9BE0C8", Offset = "0x9BE0C8")]
	private float _dotsAngleSpreadDegrees;

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform TfmDots;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform TfmGemTarget;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MeshRenderer[] _dotMeshRenderers;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MaterialPropertyBlock[] _dotMeshRendererBlocks;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int _uniformId_Color;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BE130", Offset = "0x9BE130")]
	private bool <_trapCooldown>k__BackingField;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BE140", Offset = "0x9BE140")]
	public MeshRenderer DotTemplateMeshRenderer;

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public MeshFilter DotTemplateMeshFilter;

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AcceptLightGemCondition AcceptCondition;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Coroutine _threadHandleLightGemHover;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private LightGem _currActiveLightGem;

	[Token(Token = "0x17000047")]
	public int NumLightGemsSlots
	{
		[Token(Token = "0x6000352")]
		[Address(RVA = "0xBF3F1C", Offset = "0xBF3F1C", VA = "0xBF3F1C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000048")]
	public int NumLightGemsFilled
	{
		[Token(Token = "0x6000353")]
		[Address(RVA = "0xBF3F24", Offset = "0xBF3F24", VA = "0xBF3F24")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000049")]
	public bool IsFilled
	{
		[Token(Token = "0x6000354")]
		[Address(RVA = "0xBF3F2C", Offset = "0xBF3F2C", VA = "0xBF3F2C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700004A")]
	public MeshRenderer[] DotMeshRenderers
	{
		[Token(Token = "0x6000355")]
		[Address(RVA = "0xBF3F3C", Offset = "0xBF3F3C", VA = "0xBF3F3C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700004B")]
	public bool _trapCooldown
	{
		[Token(Token = "0x6000357")]
		[Address(RVA = "0xBF3F50", Offset = "0xBF3F50", VA = "0xBF3F50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CC154", Offset = "0x9CC154")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000356")]
		[Address(RVA = "0xBF3F44", Offset = "0xBF3F44", VA = "0xBF3F44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CC144", Offset = "0x9CC144")]
		private set
		{
		}
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0xBF3F58", Offset = "0xBF3F58", VA = "0xBF3F58")]
	public bool SpendLightGems(int numLightGemsToSpend)
	{
		return default(bool);
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0xBF4174", Offset = "0xBF4174", VA = "0xBF4174")]
	public bool AddLightGemNoVisual()
	{
		return default(bool);
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0xBF423C", Offset = "0xBF423C", VA = "0xBF423C")]
	public void TurnOffInteraction()
	{
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0xBF42A8", Offset = "0xBF42A8", VA = "0xBF42A8")]
	public void SetSlotsEnabled(bool enableSlots)
	{
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0xBF435C", Offset = "0xBF435C", VA = "0xBF435C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0xBF4364", Offset = "0xBF4364", VA = "0xBF4364")]
	public void SetupSlots(int numLightGemSlots)
	{
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0xBF48A4", Offset = "0xBF48A4", VA = "0xBF48A4")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0xBF4780", Offset = "0xBF4780", VA = "0xBF4780")]
	private Vector3 CalcLocalSlotPos(int slotIndex)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0xBF4018", Offset = "0xBF4018", VA = "0xBF4018")]
	private void UpdateDotsGraphics()
	{
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0xBF4B90", Offset = "0xBF4B90", VA = "0xBF4B90")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0xBF4CA0", Offset = "0xBF4CA0", VA = "0xBF4CA0")]
	public bool AddLightGem(LightGem lightGem, bool bypassCheck = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0xBF5508", Offset = "0xBF5508", VA = "0xBF5508")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0xBF5470", Offset = "0xBF5470", VA = "0xBF5470")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CC164", Offset = "0x9CC164")]
	private IEnumerator DoHandleLightGemHoverStart(LightGem lightGem)
	{
		return null;
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0xBF5658", Offset = "0xBF5658", VA = "0xBF5658")]
	public bool ConsumeLightGem(LightGem lightGem)
	{
		return default(bool);
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0xBF5DA8", Offset = "0xBF5DA8", VA = "0xBF5DA8")]
	public void StartCooldown()
	{
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0xBF5DDC", Offset = "0xBF5DDC", VA = "0xBF5DDC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CC1C8", Offset = "0x9CC1C8")]
	private IEnumerator DoTrapCooldown()
	{
		return null;
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0xBF5E7C", Offset = "0xBF5E7C", VA = "0xBF5E7C")]
	public LightGemSlot()
	{
	}
}
[Token(Token = "0x200006E")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9B87A0", Offset = "0x9B87A0")]
public class MerchantStorefrontSlot : MonoBehaviour
{
	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PersistentEntity TypeToSpawn;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public StorageBubble StorageBubblePrefab;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private StorageBubble _storageBubble;

	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private PersistentEntity _lastSpawned;

	[Token(Token = "0x6000369")]
	[Address(RVA = "0xCC4710", Offset = "0xCC4710", VA = "0xCC4710")]
	private void Awake()
	{
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0xCC48B4", Offset = "0xCC48B4", VA = "0xCC48B4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0xCC48FC", Offset = "0xCC48FC", VA = "0xCC48FC")]
	public MerchantStorefrontSlot()
	{
	}
}
[Token(Token = "0x200006F")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9B8804", Offset = "0x9B8804")]
public class MultiPuzzleMessageEmitter : MonoBehaviour
{
	[Token(Token = "0x20004BF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BAE98", Offset = "0x9BAE98")]
	private sealed class <>c__DisplayClass6_0
	{
		[Token(Token = "0x40014FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int closuredIndex;

		[Token(Token = "0x40014FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MultiPuzzleMessageEmitter <>4__this;

		[Token(Token = "0x600215A")]
		[Address(RVA = "0xCC7F10", Offset = "0xCC7F10", VA = "0xCC7F10")]
		public <>c__DisplayClass6_0()
		{
		}

		[Token(Token = "0x600215B")]
		[Address(RVA = "0xCC84E0", Offset = "0xCC84E0", VA = "0xCC84E0")]
		internal void <Awake>b__0(PuzzleSolvedMessage message)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20004C0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BAEA8", Offset = "0x9BAEA8")]
	private sealed class <>c
	{
		[Token(Token = "0x40014FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40014FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<GameObject, bool> <>9__11_0;

		[Token(Token = "0x600215D")]
		[Address(RVA = "0xCC8470", Offset = "0xCC8470", VA = "0xCC8470")]
		public <>c()
		{
		}

		[Token(Token = "0x600215E")]
		[Address(RVA = "0xCC8478", Offset = "0xCC8478", VA = "0xCC8478")]
		internal bool <OnValidate>b__11_0(GameObject go)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x9BE178", Offset = "0x9BE178")]
	private GameObject[] _puzzlesToWatch;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9BE1C4", Offset = "0x9BE1C4")]
	public UnityEvent OnAllPuzzlesSolved;

	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9BE1FC", Offset = "0x9BE1FC")]
	public bool EmitMessage;

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9BE234", Offset = "0x9BE234")]
	private bool _cleanupCallbacksOnDestroy;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool[] _solved;

	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MessageBus.MessageCallback<PuzzleSolvedMessage>.Callback[] _callbacks;

	[Token(Token = "0x600036C")]
	[Address(RVA = "0xCC7CEC", Offset = "0xCC7CEC", VA = "0xCC7CEC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0xCC7F9C", Offset = "0xCC7F9C", VA = "0xCC7F9C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0xCC7F18", Offset = "0xCC7F18", VA = "0xCC7F18")]
	private void ResetPuzzleStatus()
	{
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0xCC809C", Offset = "0xCC809C", VA = "0xCC809C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9CC22C", Offset = "0x9CC22C")]
	public void AutoSolveAll()
	{
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0xCC8108", Offset = "0xCC8108", VA = "0xCC8108")]
	private void SetPuzzleIndexAsCompleted(int index)
	{
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0xCC82E0", Offset = "0xCC82E0", VA = "0xCC82E0")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0xCC83FC", Offset = "0xCC83FC", VA = "0xCC83FC")]
	public MultiPuzzleMessageEmitter()
	{
	}
}
[Token(Token = "0x2000070")]
public class OnPuzzleSolvedMessage : MonoBehaviour, IFujiSerializable, IPuzzle
{
	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BE280", Offset = "0x9BE280")]
	public GameObject PuzzleToWatch;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool _watchParentalPlantEntity;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BE2C8", Offset = "0x9BE2C8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9BE2C8", Offset = "0x9BE2C8")]
	public UnityEvent OnEnableCallback;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9BE328", Offset = "0x9BE328")]
	public UnityEvent OnSolvedCallback;

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BE360", Offset = "0x9BE360")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9BE360", Offset = "0x9BE360")]
	public Transform EmitSparkOnSolved;

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool OnEnableMultipleTimes;

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private FujiNarrativeKey _optionalNarrativeKey;

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _fired;

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool _firedOnEnable;

	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BE3D0", Offset = "0x9BE3D0")]
	private float <PuzzleTimerSeconds>k__BackingField;

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BE3E0", Offset = "0x9BE3E0")]
	private LightPyramidPuzzle <LinkedPuzzlePyramid>k__BackingField;

	[Token(Token = "0x1700004C")]
	[FujiSerialized]
	public bool FiredState
	{
		[Token(Token = "0x6000373")]
		[Address(RVA = "0xEABBD4", Offset = "0xEABBD4", VA = "0xEABBD4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000374")]
		[Address(RVA = "0xEABBDC", Offset = "0xEABBDC", VA = "0xEABBDC")]
		set
		{
		}
	}

	[Token(Token = "0x1700004D")]
	public float PuzzleTimerSeconds
	{
		[Token(Token = "0x600037C")]
		[Address(RVA = "0xEAC088", Offset = "0xEAC088", VA = "0xEAC088", Slot = "6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CC29C", Offset = "0x9CC29C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600037D")]
		[Address(RVA = "0xEAC090", Offset = "0xEAC090", VA = "0xEAC090", Slot = "7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CC2AC", Offset = "0x9CC2AC")]
		set
		{
		}
	}

	[Token(Token = "0x1700004E")]
	public LightPyramidPuzzle LinkedPuzzlePyramid
	{
		[Token(Token = "0x600037E")]
		[Address(RVA = "0xEABF50", Offset = "0xEABF50", VA = "0xEABF50", Slot = "8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CC2BC", Offset = "0x9CC2BC")]
		get
		{
			return null;
		}
		[Token(Token = "0x600037F")]
		[Address(RVA = "0xEAC098", Offset = "0xEAC098", VA = "0xEAC098", Slot = "9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CC2CC", Offset = "0x9CC2CC")]
		set
		{
		}
	}

	[Token(Token = "0x1700004F")]
	public float PuzzleProgress
	{
		[Token(Token = "0x6000380")]
		[Address(RVA = "0xEAC0A0", Offset = "0xEAC0A0", VA = "0xEAC0A0", Slot = "10")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0xEABBEC", Offset = "0xEABBEC", VA = "0xEABBEC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0xEABD1C", Offset = "0xEABD1C", VA = "0xEABD1C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0xEABDB0", Offset = "0xEABDB0", VA = "0xEABDB0")]
	private void HandlePuzzle(PuzzleSolvedMessage message)
	{
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0xEABF58", Offset = "0xEABF58", VA = "0xEABF58", Slot = "4")]
	public void OnPreSerialize()
	{
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0xEABF5C", Offset = "0xEABF5C", VA = "0xEABF5C", Slot = "5")]
	public void OnPostDeserialize()
	{
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0xEABBE8", Offset = "0xEABBE8", VA = "0xEABBE8")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9CC264", Offset = "0x9CC264")]
	public void SimulateSolved()
	{
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0xEABF60", Offset = "0xEABF60", VA = "0xEABF60")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0xEAC0B8", Offset = "0xEAC0B8", VA = "0xEAC0B8", Slot = "11")]
	public void ResetPuzzle()
	{
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0xEAC0BC", Offset = "0xEAC0BC", VA = "0xEAC0BC", Slot = "12")]
	public void SolvePuzzle(bool silent)
	{
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0xEAC0C0", Offset = "0xEAC0C0", VA = "0xEAC0C0")]
	public void Util_Animator_SetBool_True(string key)
	{
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0xEAC13C", Offset = "0xEAC13C", VA = "0xEAC13C")]
	public void Util_Animator_SetBool_False(string key)
	{
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0xEAC1B8", Offset = "0xEAC1B8", VA = "0xEAC1B8")]
	public void Util_Set_Narrative_Key()
	{
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0xEAC23C", Offset = "0xEAC23C", VA = "0xEAC23C")]
	public OnPuzzleSolvedMessage()
	{
	}
}
[Token(Token = "0x2000071")]
public class OnAnimatorIKReference : MonoBehaviour
{
	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public HumanoidIKGoalsController humanoidIKGoalsController;

	[Token(Token = "0x6000387")]
	[Address(RVA = "0xEABB34", Offset = "0xEABB34", VA = "0xEABB34")]
	private void OnAnimatorIK()
	{
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0xEABBCC", Offset = "0xEABBCC", VA = "0xEABBCC")]
	public OnAnimatorIKReference()
	{
	}
}
[Token(Token = "0x2000072")]
public class PanningShot : MonoBehaviour
{
	[Token(Token = "0x20004C1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BAEB8", Offset = "0x9BAEB8")]
	private sealed class <DoShot>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40014FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PanningShot <>4__this;

		[Token(Token = "0x4001502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <time>5__2;

		[Token(Token = "0x4001503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <elapsed>5__3;

		[Token(Token = "0x17000396")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002162")]
			[Address(RVA = "0xEACEF8", Offset = "0xEACEF8", VA = "0xEACEF8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000397")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002164")]
			[Address(RVA = "0xEACF68", Offset = "0xEACF68", VA = "0xEACF68", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600215F")]
		[Address(RVA = "0xEACA8C", Offset = "0xEACA8C", VA = "0xEACA8C")]
		[DebuggerHidden]
		public <DoShot>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6002160")]
		[Address(RVA = "0xEACACC", Offset = "0xEACACC", VA = "0xEACACC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002161")]
		[Address(RVA = "0xEACAD0", Offset = "0xEACAD0", VA = "0xEACAD0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002163")]
		[Address(RVA = "0xEACF00", Offset = "0xEACF00", VA = "0xEACF00", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int id;

	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float Distance;

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Speed;

	[Token(Token = "0x6000389")]
	[Address(RVA = "0xEAC8C0", Offset = "0xEAC8C0", VA = "0xEAC8C0")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0xEAC9EC", Offset = "0xEAC9EC", VA = "0xEAC9EC")]
	public void ShotStart()
	{
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0xEACA18", Offset = "0xEACA18", VA = "0xEACA18")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CC2DC", Offset = "0x9CC2DC")]
	private IEnumerator DoShot()
	{
		return null;
	}

	[Token(Token = "0x600038C")]
	[Address(RVA = "0xEACAB8", Offset = "0xEACAB8", VA = "0xEACAB8")]
	public PanningShot()
	{
	}
}
[Token(Token = "0x2000073")]
public class JellyPlayClipAtVelocity : MonoBehaviour
{
	[Token(Token = "0x40002EC")]
	public const float TriggerSpeedSquared = 0.05f;

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Cooldown;

	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public StudioEventEmitter EventEmitter;

	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public JellyPointVelocityTracker VelocityTracker;

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public JellyPoint Point;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float lastPlay;

	[Token(Token = "0x14000009")]
	public event Action OnPlayFromVelocity
	{
		[Token(Token = "0x600038D")]
		[Address(RVA = "0xBEC100", Offset = "0xBEC100", VA = "0xBEC100")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CC340", Offset = "0x9CC340")]
		add
		{
		}
		[Token(Token = "0x600038E")]
		[Address(RVA = "0xBEC1EC", Offset = "0xBEC1EC", VA = "0xBEC1EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CC350", Offset = "0x9CC350")]
		remove
		{
		}
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0xBEC2D8", Offset = "0xBEC2D8", VA = "0xBEC2D8")]
	public void Play()
	{
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0xBEC398", Offset = "0xBEC398", VA = "0xBEC398")]
	private void Start()
	{
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0xBEC4A0", Offset = "0xBEC4A0", VA = "0xBEC4A0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000392")]
	[Address(RVA = "0xBEC4D0", Offset = "0xBEC4D0", VA = "0xBEC4D0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0xBEC560", Offset = "0xBEC560", VA = "0xBEC560")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0xBEC668", Offset = "0xBEC668", VA = "0xBEC668")]
	public JellyPlayClipAtVelocity()
	{
	}
}
[Token(Token = "0x2000074")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9B883C", Offset = "0x9B883C")]
public class JellySway : MonoBehaviour
{
	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Vector3 _gravity;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9BE420", Offset = "0x9BE420")]
	private float _amplitude;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9BE460", Offset = "0x9BE460")]
	private float _frequency;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x9BE4A0", Offset = "0x9BE4A0")]
	private Vector2 _delayRange;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private JellySystem _jellySystem;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Coroutine _swayCoroutine;

	[Token(Token = "0x6000395")]
	[Address(RVA = "0xBEC678", Offset = "0xBEC678", VA = "0xBEC678")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000396")]
	[Address(RVA = "0xBEC720", Offset = "0xBEC720", VA = "0xBEC720")]
	private void JellySystemAwakeStatusChanged(AwakeStatus asleep)
	{
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0xBEC7DC", Offset = "0xBEC7DC", VA = "0xBEC7DC")]
	public JellySway()
	{
	}
}
[Token(Token = "0x2000075")]
public class JellySystemDeveloperVisual : MonoBehaviour
{
	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public JellySystem System;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject Prefab;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 Rescale;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material SharedMaterial;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform[] transforms;

	[Token(Token = "0x6000398")]
	[Address(RVA = "0xBEC868", Offset = "0xBEC868", VA = "0xBEC868")]
	public void Start()
	{
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0xBECEC8", Offset = "0xBECEC8", VA = "0xBECEC8")]
	public void LateUpdate()
	{
	}

	[Token(Token = "0x600039A")]
	[Address(RVA = "0xBEC870", Offset = "0xBEC870", VA = "0xBEC870")]
	private void Tick(bool ignoreSleep)
	{
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0xBECEE0", Offset = "0xBECEE0", VA = "0xBECEE0")]
	public JellySystemDeveloperVisual()
	{
	}
}
[Serializable]
[Token(Token = "0x2000076")]
public struct PhysicsSpring
{
	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float mass;

	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float springKConst;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float springDrag;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 worldPos;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 anchorWorldPos;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 velocity;

	[Token(Token = "0x600039C")]
	[Address(RVA = "0xA85980", Offset = "0xA85980", VA = "0xA85980")]
	public void Update(float dt)
	{
	}

	[Token(Token = "0x600039D")]
	[Address(RVA = "0xA85988", Offset = "0xA85988", VA = "0xA85988")]
	public float3 Update(float dt, float3 newAnchorWorld)
	{
		return default(float3);
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0xA85990", Offset = "0xA85990", VA = "0xA85990")]
	public void Reset()
	{
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0xA85998", Offset = "0xA85998", VA = "0xA85998")]
	public void DebugDrawVisuals()
	{
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0xEB2878", Offset = "0xEB2878", VA = "0xEB2878")]
	public static PhysicsSpring BasicSpring(Vector3 position)
	{
		return default(PhysicsSpring);
	}
}
[Serializable]
[Token(Token = "0x2000077")]
public struct ConstrainedPhysicsSpring
{
	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public PhysicsSpring Spring;

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 Normal;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool Reflect;

	[Token(Token = "0x17000050")]
	public Vector3 worldPos
	{
		[Token(Token = "0x60003A1")]
		[Address(RVA = "0xA852A0", Offset = "0xA852A0", VA = "0xA852A0")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60003A2")]
		[Address(RVA = "0xA852AC", Offset = "0xA852AC", VA = "0xA852AC")]
		set
		{
		}
	}

	[Token(Token = "0x17000051")]
	public Vector3 anchorWorldPos
	{
		[Token(Token = "0x60003A3")]
		[Address(RVA = "0xA852B8", Offset = "0xA852B8", VA = "0xA852B8")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60003A4")]
		[Address(RVA = "0xA852C4", Offset = "0xA852C4", VA = "0xA852C4")]
		set
		{
		}
	}

	[Token(Token = "0x17000052")]
	public Vector3 velocity
	{
		[Token(Token = "0x60003A5")]
		[Address(RVA = "0xA852D0", Offset = "0xA852D0", VA = "0xA852D0")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60003A6")]
		[Address(RVA = "0xA852DC", Offset = "0xA852DC", VA = "0xA852DC")]
		set
		{
		}
	}

	[Token(Token = "0x17000053")]
	public float mass
	{
		[Token(Token = "0x60003A7")]
		[Address(RVA = "0xA852E8", Offset = "0xA852E8", VA = "0xA852E8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60003A8")]
		[Address(RVA = "0xA852F0", Offset = "0xA852F0", VA = "0xA852F0")]
		set
		{
		}
	}

	[Token(Token = "0x17000054")]
	public float springDrag
	{
		[Token(Token = "0x60003A9")]
		[Address(RVA = "0xA852F8", Offset = "0xA852F8", VA = "0xA852F8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60003AA")]
		[Address(RVA = "0xA85300", Offset = "0xA85300", VA = "0xA85300")]
		set
		{
		}
	}

	[Token(Token = "0x17000055")]
	public float springKConst
	{
		[Token(Token = "0x60003AB")]
		[Address(RVA = "0xA85308", Offset = "0xA85308", VA = "0xA85308")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60003AC")]
		[Address(RVA = "0xA85310", Offset = "0xA85310", VA = "0xA85310")]
		set
		{
		}
	}

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0xA85318", Offset = "0xA85318", VA = "0xA85318")]
	public void Update(float dt)
	{
	}

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0xA85320", Offset = "0xA85320", VA = "0xA85320")]
	public void Reset()
	{
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0xE72964", Offset = "0xE72964", VA = "0xE72964")]
	public static ConstrainedPhysicsSpring BasicSpring(Vector3 position)
	{
		return default(ConstrainedPhysicsSpring);
	}
}
[Token(Token = "0x2000078")]
public class PlaceInUserVisionForOneFrame : MonoBehaviour
{
	[Token(Token = "0x20004C2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BAEC8", Offset = "0x9BAEC8")]
	private sealed class <Start>d__0 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlaceInUserVisionForOneFrame <>4__this;

		[Token(Token = "0x4001507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x17000398")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002168")]
			[Address(RVA = "0xEB3618", Offset = "0xEB3618", VA = "0xEB3618", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000399")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600216A")]
			[Address(RVA = "0xEB3688", Offset = "0xEB3688", VA = "0xEB3688", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002165")]
		[Address(RVA = "0xEB33A4", Offset = "0xEB33A4", VA = "0xEB33A4")]
		[DebuggerHidden]
		public <Start>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x6002166")]
		[Address(RVA = "0xEB3534", Offset = "0xEB3534", VA = "0xEB3534", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002167")]
		[Address(RVA = "0xEB3538", Offset = "0xEB3538", VA = "0xEB3538", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002169")]
		[Address(RVA = "0xEB3620", Offset = "0xEB3620", VA = "0xEB3620", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0xEB3330", Offset = "0xEB3330", VA = "0xEB3330")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CC360", Offset = "0x9CC360")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0xEB33D0", Offset = "0xEB33D0", VA = "0xEB33D0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0xEB352C", Offset = "0xEB352C", VA = "0xEB352C")]
	public PlaceInUserVisionForOneFrame()
	{
	}
}
[Token(Token = "0x2000079")]
public class BopItPlant : MonoBehaviour
{
	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly string __FMOD_PARAM_NAME;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly string __FMOD_EVENT_NAME;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly int[] __BOPIT_PLANT_INDEX_LOOKUP;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[EventRef]
	private string _bopEvent;

	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BE520", Offset = "0x9BE520")]
	[SerializeField]
	private bool _doJellyWiggle;

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float _wiggleDuration;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9BE57C", Offset = "0x9BE57C")]
	private float _wiggleAmplitude;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9BE5BC", Offset = "0x9BE5BC")]
	private float _wiggleFrequency;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<GrabbableNodePrototype, bool> _completionMap;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _puzzleCompleted;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private SequencerController _sequencerController;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private JellySystem _jellySystem;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GenericTriggerVolume _triggerVolume;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Dictionary<int, BopItLightGemSpawnerTimer> _lightGemSpawnerLookup;

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Dictionary<int, GameObject> _shineEffectLookup;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private AudioService _audioService;

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0xBA82A8", Offset = "0xBA82A8", VA = "0xBA82A8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0xBA83BC", Offset = "0xBA83BC", VA = "0xBA83BC")]
	private void Start()
	{
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0xBA8784", Offset = "0xBA8784", VA = "0xBA8784")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0xBA897C", Offset = "0xBA897C", VA = "0xBA897C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0xBA8B74", Offset = "0xBA8B74", VA = "0xBA8B74")]
	private void LightGemReadyToSpawn(BopItLightGemSpawnerTimer spawner)
	{
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0xBA8E48", Offset = "0xBA8E48", VA = "0xBA8E48")]
	private void SequencerAutoPlay(int index, SequencerController controller)
	{
	}

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0xBA9084", Offset = "0xBA9084", VA = "0xBA9084")]
	private void SequencerTouch(int index)
	{
	}

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0xBA9284", Offset = "0xBA9284", VA = "0xBA9284")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9CC3C4", Offset = "0x9CC3C4")]
	private void OnPlayerEnterTrigger()
	{
	}

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0xBA9300", Offset = "0xBA9300", VA = "0xBA9300")]
	private void CheckPuzzleComplete()
	{
	}

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0xBA9470", Offset = "0xBA9470", VA = "0xBA9470")]
	public BopItPlant()
	{
	}

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0xBA95A8", Offset = "0xBA95A8", VA = "0xBA95A8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CC3FC", Offset = "0x9CC3FC")]
	private void <Start>b__17_0(GrabbableNodePrototype pulledNode)
	{
	}
}
[Token(Token = "0x200007A")]
public enum CallAndResponseCactusTweens
{
	[Token(Token = "0x4000318")]
	Honk = 1,
	[Token(Token = "0x4000319")]
	Bop = 2,
	[Token(Token = "0x400031A")]
	Pull = 4,
	[Token(Token = "0x400031B")]
	Shake = 8
}
[Token(Token = "0x200007B")]
public class CallResponseCactus_Biome : CallResponsePlant_Biome
{
	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[SerializeField]
	private SkinnedMeshRenderer _motherSkinnedMesh;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private float _blendShapeTweenDuration;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[SerializeField]
	private CallResponseCactus_Controller _childController;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private Dictionary<int, int> _sequencerIndexToBlendShapeIndexMap;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private Dictionary<int, Tweener> _blendShapeTweenMap;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float _pinMultiplier;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private float _pullForceMultiplier;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private CallAndResponseCactusTweens[] _motherTweens;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private Dictionary<CallAndResponseCactusTweens, Action<int>> _motherTweenMap;

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0xBAA7E4", Offset = "0xBAA7E4", VA = "0xBAA7E4", Slot = "7")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0xBAADEC", Offset = "0xBAADEC", VA = "0xBAADEC", Slot = "8")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0xBAB24C", Offset = "0xBAB24C", VA = "0xBAB24C", Slot = "9")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9CC40C", Offset = "0x9CC40C")]
	protected override void OnPlayerApproach()
	{
	}

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0xBAB474", Offset = "0xBAB474", VA = "0xBAB474")]
	private void PullAtIndex(int index)
	{
	}

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0xBAB678", Offset = "0xBAB678", VA = "0xBAB678")]
	private void ShakeAtIndex(int index)
	{
	}

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0xBAB890", Offset = "0xBAB890", VA = "0xBAB890")]
	private void BopAtIndex(int index)
	{
	}

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0xBAB970", Offset = "0xBAB970", VA = "0xBAB970")]
	private void HonkAtIndex(int index)
	{
	}

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0xBABB64", Offset = "0xBABB64", VA = "0xBABB64")]
	public CallResponseCactus_Biome()
	{
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0xBABD0C", Offset = "0xBABD0C", VA = "0xBABD0C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CC444", Offset = "0x9CC444")]
	private void <Awake>b__9_0(int index, SequencerController seq)
	{
	}

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0xBABDD8", Offset = "0xBABDD8", VA = "0xBABDD8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CC454", Offset = "0x9CC454")]
	private void <OnPlayerApproach>b__11_0()
	{
	}

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0xBABEB0", Offset = "0xBABEB0", VA = "0xBABEB0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CC464", Offset = "0x9CC464")]
	private void <OnPlayerApproach>b__11_1(int index)
	{
	}
}
[Token(Token = "0x200007C")]
public class CallResponseCactus_Controller : MonoBehaviour
{
	[Token(Token = "0x20004C3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BAED8", Offset = "0x9BAED8")]
	private sealed class <>c__DisplayClass19_0
	{
		[Token(Token = "0x4001508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CallResponseCactus_Controller <>4__this;

		[Token(Token = "0x4001509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action callback;

		[Token(Token = "0x600216B")]
		[Address(RVA = "0xBAD208", Offset = "0xBAD208", VA = "0xBAD208")]
		public <>c__DisplayClass19_0()
		{
		}

		[Token(Token = "0x600216C")]
		[Address(RVA = "0xBAD80C", Offset = "0xBAD80C", VA = "0xBAD80C")]
		internal void <OpenFlowers>b__0(int index)
		{
		}
	}

	[Token(Token = "0x20004C4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BAEE8", Offset = "0x9BAEE8")]
	private sealed class <>c__DisplayClass24_0
	{
		[Token(Token = "0x400150A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int temp;

		[Token(Token = "0x400150B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CallResponseCactus_Controller <>4__this;

		[Token(Token = "0x600216D")]
		[Address(RVA = "0xBAD6C4", Offset = "0xBAD6C4", VA = "0xBAD6C4")]
		public <>c__DisplayClass24_0()
		{
		}

		[Token(Token = "0x600216E")]
		[Address(RVA = "0xBAD8B4", Offset = "0xBAD8B4", VA = "0xBAD8B4")]
		internal void <SetupHonkInteraction>b__0(PlayerControllerInput input)
		{
		}
	}

	[Token(Token = "0x20004C5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BAEF8", Offset = "0x9BAEF8")]
	private sealed class <>c__DisplayClass26_0
	{
		[Token(Token = "0x400150C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int sequencerIndex;

		[Token(Token = "0x400150D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CallResponseCactus_Controller <>4__this;

		[Token(Token = "0x600216F")]
		[Address(RVA = "0xBAD6CC", Offset = "0xBAD6CC", VA = "0xBAD6CC")]
		public <>c__DisplayClass26_0()
		{
		}

		[Token(Token = "0x6002170")]
		[Address(RVA = "0xBADD50", Offset = "0xBADD50", VA = "0xBADD50")]
		internal void <SetupPullInteraction>b__0(GrabbableNodePrototype pulledNode)
		{
		}
	}

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SequencerController _controller;

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private JellyPoint[] _shakeRootNodes;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private InteractiveCore[] _honkNodes;

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private JellyPoint[] _bopNodes;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GrabbableNodePrototype[] _pullNodes;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[EventRef]
	private string _playerApproachEvent;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private SkinnedMeshRenderer _controllerSkinnedMesh;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private float _blendShapeTweenDuration;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Dictionary<int, int> _sequencerIndexToBlendShapeIndexMap;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Dictionary<int, Tweener> _blendShapeTweenMap;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Dictionary<InteractiveCore, Sequence> _honkLookupTable;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Dictionary<int, List<JellyPoint>> _shakeLookupTable;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Dictionary<GrabbableNodePrototype, int> _pullLookupTable;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<int> _bopSequencerIndices;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private List<GameObject> _flowerShines;

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0xBAC6DC", Offset = "0xBAC6DC", VA = "0xBAC6DC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0xBAC734", Offset = "0xBAC734", VA = "0xBAC734")]
	private void Start()
	{
	}

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0xBAD164", Offset = "0xBAD164", VA = "0xBAD164")]
	private void Update()
	{
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0xBAD198", Offset = "0xBAD198", VA = "0xBAD198")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0xBAB2D8", Offset = "0xBAB2D8", VA = "0xBAB2D8")]
	public void OpenFlowers(Action callback)
	{
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0xBAC3B8", Offset = "0xBAC3B8", VA = "0xBAC3B8")]
	public void PutShineOnFlowers()
	{
	}

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0xBAD210", Offset = "0xBAD210", VA = "0xBAD210")]
	public void RemoveShineFromFlowers(int index)
	{
	}

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0xBAD3C8", Offset = "0xBAD3C8", VA = "0xBAD3C8")]
	private void SequencerTouch(int index)
	{
	}

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0xBAC8E8", Offset = "0xBAC8E8", VA = "0xBAC8E8")]
	private void SetupShakeInteraction()
	{
	}

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0xBACB70", Offset = "0xBACB70", VA = "0xBACB70")]
	private void SetupHonkInteraction()
	{
	}

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0xBACD80", Offset = "0xBACD80", VA = "0xBACD80")]
	private void SetupBopInteraction()
	{
	}

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0xBACEE0", Offset = "0xBACEE0", VA = "0xBACEE0")]
	private void SetupPullInteraction()
	{
	}

	[Token(Token = "0x60003D6")]
	[Address(RVA = "0xBAD6D4", Offset = "0xBAD6D4", VA = "0xBAD6D4")]
	public CallResponseCactus_Controller()
	{
	}

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0xBAD808", Offset = "0xBAD808", VA = "0xBAD808")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CC474", Offset = "0x9CC474")]
	private void <Start>b__16_0(int index, SequencerController seq)
	{
	}
}
[Token(Token = "0x200007D")]
public class CallResponsePlant_Biome : MonoBehaviour, IHeroPlantPuzzle
{
	[Token(Token = "0x20004C6")]
	private enum CallResponsePlantState
	{
		[Token(Token = "0x400150F")]
		MotherToChild,
		[Token(Token = "0x4001510")]
		ChildToMother
	}

	[Token(Token = "0x20004C7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BAF08", Offset = "0x9BAF08")]
	private sealed class <DoSetupPlant>d__46 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CallResponsePlant_Biome <>4__this;

		[Token(Token = "0x1700039A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002174")]
			[Address(RVA = "0xBB02C4", Offset = "0xBB02C4", VA = "0xBB02C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700039B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002176")]
			[Address(RVA = "0xBB0334", Offset = "0xBB0334", VA = "0xBB0334", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002171")]
		[Address(RVA = "0xBAE56C", Offset = "0xBAE56C", VA = "0xBAE56C")]
		[DebuggerHidden]
		public <DoSetupPlant>d__46(int <>1__state)
		{
		}

		[Token(Token = "0x6002172")]
		[Address(RVA = "0xBAFBC8", Offset = "0xBAFBC8", VA = "0xBAFBC8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002173")]
		[Address(RVA = "0xBAFBCC", Offset = "0xBAFBCC", VA = "0xBAFBCC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002175")]
		[Address(RVA = "0xBB02CC", Offset = "0xBB02CC", VA = "0xBB02CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004C8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BAF18", Offset = "0x9BAF18")]
	private sealed class <PlayPatternMother>d__55 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CallResponsePlant_Biome <>4__this;

		[Token(Token = "0x4001517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float waitTimeBeforePlay;

		[Token(Token = "0x4001518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int[] <patternToPlay>5__2;

		[Token(Token = "0x4001519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <i>5__3;

		[Token(Token = "0x1700039C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600217A")]
			[Address(RVA = "0xBB0B14", Offset = "0xBB0B14", VA = "0xBB0B14", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700039D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600217C")]
			[Address(RVA = "0xBB0B84", Offset = "0xBB0B84", VA = "0xBB0B84", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002177")]
		[Address(RVA = "0xBAF7BC", Offset = "0xBAF7BC", VA = "0xBAF7BC")]
		[DebuggerHidden]
		public <PlayPatternMother>d__55(int <>1__state)
		{
		}

		[Token(Token = "0x6002178")]
		[Address(RVA = "0xBB033C", Offset = "0xBB033C", VA = "0xBB033C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002179")]
		[Address(RVA = "0xBB0340", Offset = "0xBB0340", VA = "0xBB0340", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600217B")]
		[Address(RVA = "0xBB0B1C", Offset = "0xBB0B1C", VA = "0xBB0B1C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CallResponsePlantState _plantState;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BE6C4", Offset = "0x9BE6C4")]
	[SerializeField]
	private Transform _motherPlantRing;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float _defaultRingScale;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float _ringFailureScale;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BE730", Offset = "0x9BE730")]
	[SerializeField]
	protected SequencerController _motherPlantSequencer;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	protected JellySystem _motherJellySystem;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private PlantEffectController _motherDecay;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private SequencerController _childPlantSequencer;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private PlantEffectController _childDecay;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9BE79C", Offset = "0x9BE79C")]
	private float _wiltAmount;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Transform[] _flowerPetalRootTransforms;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private SequencerPlaybackPreset[] _matchPresets;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool shufflePresetSteps;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int _currentPlaybackPresetIndex;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private GameObject _rewardSeedPrefab;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private bool _instantiateRewardSeed;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BE81C", Offset = "0x9BE81C")]
	private bool <IsPuzzleSolved>k__BackingField;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BE82C", Offset = "0x9BE82C")]
	private readonly List<IActivatable> <Activatables>k__BackingField;

	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private List<GameObject> _plantShineFX;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected int[] _randomMusicIndexConstraints;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected GenericTriggerVolume _playerApproachTrigger;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public bool ApplyDecayToPlant;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BE83C", Offset = "0x9BE83C")]
	[SerializeField]
	[EventRef]
	private string _motherPlayEvent;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	[EventRef]
	private string _motherTurnEvent;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	[EventRef]
	private string _motherRingExpandEvent;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	[EventRef]
	private string _childPlayEvent;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	[EventRef]
	private string _childTurnEvent;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	[EventRef]
	private string _successEvent;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	[EventRef]
	private string _successFinalEvent;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	[EventRef]
	private string _failureEvent;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private AudioService _audioService;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private VisualEffectsService _vfxService;

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Coroutine _playPatternMotherCoroutine;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Coroutine _preTouchMusicCoroutine;

	[Token(Token = "0x17000056")]
	public bool IsPuzzleSolved
	{
		[Token(Token = "0x60003D8")]
		[Address(RVA = "0xBADDA0", Offset = "0xBADDA0", VA = "0xBADDA0", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CC484", Offset = "0x9CC484")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003D9")]
		[Address(RVA = "0xBADDA8", Offset = "0xBADDA8", VA = "0xBADDA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CC494", Offset = "0x9CC494")]
		private set
		{
		}
	}

	[Token(Token = "0x17000057")]
	public List<IActivatable> Activatables
	{
		[Token(Token = "0x60003DA")]
		[Address(RVA = "0xBADDB4", Offset = "0xBADDB4", VA = "0xBADDB4", Slot = "6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CC4A4", Offset = "0x9CC4A4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0xBAAB98", Offset = "0xBAAB98", VA = "0xBAAB98", Slot = "7")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0xBADDBC", Offset = "0xBADDBC", VA = "0xBADDBC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0xBAAE64", Offset = "0xBAAE64", VA = "0xBAAE64", Slot = "8")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0xBABF58", Offset = "0xBABF58", VA = "0xBABF58", Slot = "9")]
	protected virtual void OnPlayerApproach()
	{
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0xBADF00", Offset = "0xBADF00", VA = "0xBADF00")]
	private void OnPlantFirstTouch(int index)
	{
	}

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0xBAE3FC", Offset = "0xBAE3FC", VA = "0xBAE3FC")]
	private void PlayPingRingEffect()
	{
	}

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0xBAE388", Offset = "0xBAE388", VA = "0xBAE388")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CC4B4", Offset = "0x9CC4B4")]
	private IEnumerator DoSetupPlant()
	{
		return null;
	}

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0xBAE598", Offset = "0xBAE598", VA = "0xBAE598")]
	private void SetActiveChild(bool enable)
	{
	}

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0xBAE778", Offset = "0xBAE778", VA = "0xBAE778")]
	private void SetActiveMother(bool enable)
	{
	}

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0xBAE95C", Offset = "0xBAE95C", VA = "0xBAE95C")]
	private void TimerExpired()
	{
	}

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0xBAF0E0", Offset = "0xBAF0E0", VA = "0xBAF0E0")]
	private void InputRecorded(int index, SequencerController controller)
	{
	}

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0xBAEA74", Offset = "0xBAEA74", VA = "0xBAEA74")]
	private void ResponseSuccessful()
	{
	}

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0xBAF260", Offset = "0xBAF260", VA = "0xBAF260", Slot = "4")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9CC518", Offset = "0x9CC518")]
	public void SolvePuzzle()
	{
	}

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0xBAED1C", Offset = "0xBAED1C", VA = "0xBAED1C")]
	private void ResponseFailed()
	{
	}

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0xBAF730", Offset = "0xBAF730", VA = "0xBAF730")]
	private int[] GetPatternToPlay()
	{
		return null;
	}

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0xBAF048", Offset = "0xBAF048", VA = "0xBAF048")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CC550", Offset = "0x9CC550")]
	private IEnumerator PlayPatternMother(float waitTimeBeforePlay = 0f)
	{
		return null;
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0xBAF7E8", Offset = "0xBAF7E8", VA = "0xBAF7E8")]
	private void MotherPlay(int index, SequencerController source)
	{
	}

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0xBAF8C4", Offset = "0xBAF8C4", VA = "0xBAF8C4")]
	private void ChildPlay(int index, SequencerController source)
	{
	}

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0xBABC7C", Offset = "0xBABC7C", VA = "0xBABC7C")]
	public CallResponsePlant_Biome()
	{
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0xBAF9CC", Offset = "0xBAF9CC", VA = "0xBAF9CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CC5B4", Offset = "0x9CC5B4")]
	private void <SolvePuzzle>b__52_0()
	{
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0xBAFABC", Offset = "0xBAFABC", VA = "0xBAFABC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CC5C4", Offset = "0x9CC5C4")]
	private void <SolvePuzzle>b__52_1()
	{
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0xBAFB08", Offset = "0xBAFB08", VA = "0xBAFB08")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CC5D4", Offset = "0x9CC5D4")]
	private void <ResponseFailed>b__53_0()
	{
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0xBAFB8C", Offset = "0xBAFB8C", VA = "0xBAFB8C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CC5E4", Offset = "0x9CC5E4")]
	private void <ResponseFailed>b__53_1()
	{
	}
}
[Token(Token = "0x200007E")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9B88A0", Offset = "0x9B88A0")]
public class CallResponsePlant_Garden : MonoBehaviour, IHeroPlantPuzzle
{
	[Token(Token = "0x20004C9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BAF28", Offset = "0x9BAF28")]
	private sealed class <Start>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400151A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400151B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400151C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CallResponsePlant_Garden <>4__this;

		[Token(Token = "0x1700039E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002180")]
			[Address(RVA = "0xBB0ED0", Offset = "0xBB0ED0", VA = "0xBB0ED0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700039F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002182")]
			[Address(RVA = "0xBB0F40", Offset = "0xBB0F40", VA = "0xBB0F40", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600217D")]
		[Address(RVA = "0xBB0C88", Offset = "0xBB0C88", VA = "0xBB0C88")]
		[DebuggerHidden]
		public <Start>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x600217E")]
		[Address(RVA = "0xBB0D38", Offset = "0xBB0D38", VA = "0xBB0D38", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600217F")]
		[Address(RVA = "0xBB0D3C", Offset = "0xBB0D3C", VA = "0xBB0D3C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002181")]
		[Address(RVA = "0xBB0ED8", Offset = "0xBB0ED8", VA = "0xBB0ED8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private PlantInputMode _inputMode;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float _activationThreshold;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SequencerController _controller;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private JellySystem _jellySystem;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BEA40", Offset = "0x9BEA40")]
	private List<IActivatable> <Activatables>k__BackingField;

	[Token(Token = "0x17000058")]
	public bool IsPuzzleSolved
	{
		[Token(Token = "0x60003F2")]
		[Address(RVA = "0xBB0B8C", Offset = "0xBB0B8C", VA = "0xBB0B8C", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000059")]
	public List<IActivatable> Activatables
	{
		[Token(Token = "0x60003F3")]
		[Address(RVA = "0xBB0B94", Offset = "0xBB0B94", VA = "0xBB0B94", Slot = "6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CC5F4", Offset = "0x9CC5F4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003F4")]
		[Address(RVA = "0xBB0B9C", Offset = "0xBB0B9C", VA = "0xBB0B9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CC604", Offset = "0x9CC604")]
		private set
		{
		}
	}

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0xBB0BA4", Offset = "0xBB0BA4", VA = "0xBB0BA4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0xBB0C14", Offset = "0xBB0C14", VA = "0xBB0C14")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CC614", Offset = "0x9CC614")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0xBB0CB4", Offset = "0xBB0CB4", VA = "0xBB0CB4", Slot = "4")]
	public void SolvePuzzle()
	{
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0xBB0CB8", Offset = "0xBB0CB8", VA = "0xBB0CB8")]
	public CallResponsePlant_Garden()
	{
	}
}
[Token(Token = "0x200007F")]
public class ClapperPlant : MonoBehaviour
{
	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[EventRef]
	private string[] _soundEvents;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SequencerController _controller;

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0xBB28D4", Offset = "0xBB28D4", VA = "0xBB28D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0xBB2A08", Offset = "0xBB2A08", VA = "0xBB2A08")]
	private void SequencerPlay(int index, SequencerController controller)
	{
	}

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0xBB2B18", Offset = "0xBB2B18", VA = "0xBB2B18")]
	public ClapperPlant()
	{
	}
}
[Token(Token = "0x2000080")]
public class DandelionPlant : MonoBehaviour, IHeroPlantPuzzle
{
	[Token(Token = "0x20004CA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BAF38", Offset = "0x9BAF38")]
	private sealed class <>c__DisplayClass46_0
	{
		[Token(Token = "0x400151D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public DandelionPlant <>4__this;

		[Token(Token = "0x400151E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlayerService playerService;

		[Token(Token = "0x400151F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MaterialPropertyBlock propBlock;

		[Token(Token = "0x4001520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color startEmissionColor;

		[Token(Token = "0x4001521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color startFresnelColor;

		[Token(Token = "0x6002183")]
		[Address(RVA = "0xE770B8", Offset = "0xE770B8", VA = "0xE770B8")]
		public <>c__DisplayClass46_0()
		{
		}

		[Token(Token = "0x6002184")]
		[Address(RVA = "0xE77D18", Offset = "0xE77D18", VA = "0xE77D18")]
		internal void <SetupPlayerInteractions>b__0(InputHandedness hand, bool grabbed, int2 index)
		{
		}
	}

	[Token(Token = "0x20004CB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BAF48", Offset = "0x9BAF48")]
	private sealed class <RemoveSpores>d__57 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DandelionPlant <>4__this;

		[Token(Token = "0x4001525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <numSporesToRemove>5__2;

		[Token(Token = "0x4001526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <numSporesPropogatedThisFrame>5__3;

		[Token(Token = "0x4001527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <i>5__4;

		[Token(Token = "0x4001528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private DandelionSpore <spore>5__5;

		[Token(Token = "0x170003A0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002188")]
			[Address(RVA = "0xE78D28", Offset = "0xE78D28", VA = "0xE78D28", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600218A")]
			[Address(RVA = "0xE78D98", Offset = "0xE78D98", VA = "0xE78D98", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002185")]
		[Address(RVA = "0xE77A78", Offset = "0xE77A78", VA = "0xE77A78")]
		[DebuggerHidden]
		public <RemoveSpores>d__57(int <>1__state)
		{
		}

		[Token(Token = "0x6002186")]
		[Address(RVA = "0xE78694", Offset = "0xE78694", VA = "0xE78694", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002187")]
		[Address(RVA = "0xE78698", Offset = "0xE78698", VA = "0xE78698", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002189")]
		[Address(RVA = "0xE78D30", Offset = "0xE78D30", VA = "0xE78D30", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BAF58", Offset = "0x9BAF58")]
	private sealed class <FindSporeDestinationCoroutine>d__60 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400152A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400152B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DandelionPlant <>4__this;

		[Token(Token = "0x400152C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Ray <meadowRaycast>5__2;

		[Token(Token = "0x400152D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool <foundTarget>5__3;

		[Token(Token = "0x170003A2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600218E")]
			[Address(RVA = "0xE7861C", Offset = "0xE7861C", VA = "0xE7861C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002190")]
			[Address(RVA = "0xE7868C", Offset = "0xE7868C", VA = "0xE7868C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600218B")]
		[Address(RVA = "0xE77BC8", Offset = "0xE77BC8", VA = "0xE77BC8")]
		[DebuggerHidden]
		public <FindSporeDestinationCoroutine>d__60(int <>1__state)
		{
		}

		[Token(Token = "0x600218C")]
		[Address(RVA = "0xE77FAC", Offset = "0xE77FAC", VA = "0xE77FAC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600218D")]
		[Address(RVA = "0xE77FB0", Offset = "0xE77FB0", VA = "0xE77FB0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600218F")]
		[Address(RVA = "0xE78624", Offset = "0xE78624", VA = "0xE78624", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BEA88", Offset = "0x9BEA88")]
	[SerializeField]
	private Transform _dandelionHeadJoint;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private JellyVelocityActivator _velocityActivator;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float _shakeThreshold;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9BEAE4", Offset = "0x9BEAE4")]
	private float _shakeCooldown;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform _sporeRoot;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<GameObject> _sporeList;

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool SolvePuzzleWhenNoMoreSpores;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BEB38", Offset = "0x9BEB38")]
	[SerializeField]
	private GameObject _pooledChildDandelionPrefab;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9BEB84", Offset = "0x9BEB84")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9BEB84", Offset = "0x9BEB84")]
	private float _sporePropagationChance;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9BEBE8", Offset = "0x9BEBE8")]
	private int _totalSporesToPropagate;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private int _maxSpawnPoolSize;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int _sporesLeftToPropagate;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x9BEC3C", Offset = "0x9BEC3C")]
	private Vector2 _sporesToRemoveOnShake;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9BEC88", Offset = "0x9BEC88")]
	private int _maxSporesPerFrame;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BECD4", Offset = "0x9BECD4")]
	[SerializeField]
	private Transform _raycastSource;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Quaternion _raycastSourceOrigRot;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x9BED20", Offset = "0x9BED20")]
	private Vector2 _horizontalSweepRange;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x9BED70", Offset = "0x9BED70")]
	private Vector2 _verticleSweepRange;

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private Collider _meadowMeshCollider;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BEDD0", Offset = "0x9BEDD0")]
	[SerializeField]
	private GameObject _rewardPrefab;

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	[EventRef]
	private string _puzzleSolvedEvent;

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	[EventRef]
	private string _sfxReleaseCluster;

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private JellySystem _jellySystem;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private AudioService _audioService;

	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private VisualEffectsService _vfxService;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Coroutine _removeSporesCoroutine;

	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Coroutine _findDestinationCoroutine;

	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Vector3 _sporeDestination;

	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Queue<GameObject> _childDandelionPool;

	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BEE9C", Offset = "0x9BEE9C")]
	private bool <IsPuzzleSolved>k__BackingField;

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BEEAC", Offset = "0x9BEEAC")]
	private List<IActivatable> <Activatables>k__BackingField;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private List<GameObject> _spawnedPlants;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[SerializeField]
	private SkinnedMeshRenderer _skinnedMeshRenderer;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private bool2 _isHandGrabbing;

	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public bool MustBeGrabbedToShake;

	[Token(Token = "0x1700005A")]
	public Transform HeadJoint
	{
		[Token(Token = "0x60003FC")]
		[Address(RVA = "0xE767E4", Offset = "0xE767E4", VA = "0xE767E4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700005B")]
	public bool IsPuzzleSolved
	{
		[Token(Token = "0x60003FD")]
		[Address(RVA = "0xE767EC", Offset = "0xE767EC", VA = "0xE767EC", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CC678", Offset = "0x9CC678")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003FE")]
		[Address(RVA = "0xE767F4", Offset = "0xE767F4", VA = "0xE767F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CC688", Offset = "0x9CC688")]
		private set
		{
		}
	}

	[Token(Token = "0x1700005C")]
	public List<IActivatable> Activatables
	{
		[Token(Token = "0x60003FF")]
		[Address(RVA = "0xE76800", Offset = "0xE76800", VA = "0xE76800", Slot = "6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CC698", Offset = "0x9CC698")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000400")]
		[Address(RVA = "0xE76808", Offset = "0xE76808", VA = "0xE76808")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CC6A8", Offset = "0x9CC6A8")]
		private set
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event Action EventRemoveSpores
	{
		[Token(Token = "0x6000401")]
		[Address(RVA = "0xE74AC4", Offset = "0xE74AC4", VA = "0xE74AC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CC6B8", Offset = "0x9CC6B8")]
		add
		{
		}
		[Token(Token = "0x6000402")]
		[Address(RVA = "0xE76810", Offset = "0xE76810", VA = "0xE76810")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CC6C8", Offset = "0x9CC6C8")]
		remove
		{
		}
	}

	[Token(Token = "0x6000403")]
	[Address(RVA = "0xE76900", Offset = "0xE76900", VA = "0xE76900")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000404")]
	[Address(RVA = "0xE76EC4", Offset = "0xE76EC4", VA = "0xE76EC4")]
	private void SetupPlayerInteractions()
	{
	}

	[Token(Token = "0x6000405")]
	[Address(RVA = "0xE76B00", Offset = "0xE76B00", VA = "0xE76B00")]
	private void PopulateSporeList()
	{
	}

	[Token(Token = "0x6000406")]
	[Address(RVA = "0xE76C80", Offset = "0xE76C80", VA = "0xE76C80")]
	private void PoolDandelionChildren()
	{
	}

	[Token(Token = "0x6000407")]
	[Address(RVA = "0xE770C0", Offset = "0xE770C0", VA = "0xE770C0")]
	public GameObject GetDandelionChild()
	{
		return null;
	}

	[Token(Token = "0x6000408")]
	[Address(RVA = "0xE77158", Offset = "0xE77158", VA = "0xE77158")]
	private void Update()
	{
	}

	[Token(Token = "0x6000409")]
	[Address(RVA = "0xE753F0", Offset = "0xE753F0", VA = "0xE753F0", Slot = "4")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9CC6D8", Offset = "0x9CC6D8")]
	public void SolvePuzzle()
	{
	}

	[Token(Token = "0x600040A")]
	[Address(RVA = "0xE771D0", Offset = "0xE771D0", VA = "0xE771D0")]
	[HeroPlantInspectorMethod]
	public void Reset()
	{
	}

	[Token(Token = "0x600040B")]
	[Address(RVA = "0xE77300", Offset = "0xE77300", VA = "0xE77300")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600040C")]
	[Address(RVA = "0xE77480", Offset = "0xE77480", VA = "0xE77480")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0xE776A0", Offset = "0xE776A0", VA = "0xE776A0")]
	[HeroPlantInspectorMethod]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9CC720", Offset = "0x9CC720")]
	public void Shake()
	{
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0xE77A04", Offset = "0xE77A04", VA = "0xE77A04")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CC76C", Offset = "0x9CC76C")]
	private IEnumerator RemoveSpores()
	{
		return null;
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0xE77AA4", Offset = "0xE77AA4", VA = "0xE77AA4")]
	private void PlantSpawned(GameObject plant)
	{
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0xE77B14", Offset = "0xE77B14", VA = "0xE77B14")]
	private void FindSporeDestination()
	{
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0xE77B54", Offset = "0xE77B54", VA = "0xE77B54")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CC7D0", Offset = "0x9CC7D0")]
	public IEnumerator FindSporeDestinationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0xE77BF4", Offset = "0xE77BF4", VA = "0xE77BF4")]
	public DandelionPlant()
	{
	}
}
[Token(Token = "0x2000081")]
public class DandelionSpore : MonoBehaviour
{
	[Token(Token = "0x20004CD")]
	private enum SporePathType
	{
		[Token(Token = "0x400152F")]
		Cubic,
		[Token(Token = "0x4001530")]
		Quadratic
	}

	[Token(Token = "0x20004CE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BAF68", Offset = "0x9BAF68")]
	private sealed class <>c__DisplayClass16_0
	{
		[Token(Token = "0x4001531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float duration;

		[Token(Token = "0x4001532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float elapsedTime;

		[Token(Token = "0x6002191")]
		[Address(RVA = "0xE790A4", Offset = "0xE790A4", VA = "0xE790A4")]
		public <>c__DisplayClass16_0()
		{
		}

		[Token(Token = "0x6002192")]
		[Address(RVA = "0xE790AC", Offset = "0xE790AC", VA = "0xE790AC")]
		internal void <DoCurve>b__0()
		{
		}
	}

	[Token(Token = "0x20004CF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BAF78", Offset = "0x9BAF78")]
	private sealed class <DoCurve>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DandelionSpore <>4__this;

		[Token(Token = "0x4001536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 endPoint;

		[Token(Token = "0x4001537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool propagate;

		[Token(Token = "0x4001538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private <>c__DisplayClass16_0 <>8__1;

		[Token(Token = "0x4001539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3[] <curvePoints>5__2;

		[Token(Token = "0x400153A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float <invDuration>5__3;

		[Token(Token = "0x400153B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Sequence <seq>5__4;

		[Token(Token = "0x400153C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private WaitForSeconds <sprayDelay>5__5;

		[Token(Token = "0x400153D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int <sprayCount>5__6;

		[Token(Token = "0x400153E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private int <i>5__7;

		[Token(Token = "0x170003A4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002196")]
			[Address(RVA = "0xE79FC4", Offset = "0xE79FC4", VA = "0xE79FC4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002198")]
			[Address(RVA = "0xE7A034", Offset = "0xE7A034", VA = "0xE7A034", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002193")]
		[Address(RVA = "0xE79014", Offset = "0xE79014", VA = "0xE79014")]
		[DebuggerHidden]
		public <DoCurve>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6002194")]
		[Address(RVA = "0xE790C0", Offset = "0xE790C0", VA = "0xE790C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002195")]
		[Address(RVA = "0xE790C4", Offset = "0xE790C4", VA = "0xE790C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002197")]
		[Address(RVA = "0xE79FCC", Offset = "0xE79FCC", VA = "0xE79FCC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SporePathType _sporePathType;

	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x9BEEEC", Offset = "0x9BEEEC")]
	private Vector2 _lifetimeRange;

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AnimationCurve _pathCurve;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Func<GameObject> GetPlantToPropagate;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Renderer[] _renderers;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BEF54", Offset = "0x9BEF54")]
	private bool <_isPropogating>k__BackingField;

	[Token(Token = "0x1700005D")]
	public bool _isPropogating
	{
		[Token(Token = "0x6000413")]
		[Address(RVA = "0xE78DA0", Offset = "0xE78DA0", VA = "0xE78DA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CC834", Offset = "0x9CC834")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000414")]
		[Address(RVA = "0xE78DA8", Offset = "0xE78DA8", VA = "0xE78DA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CC844", Offset = "0x9CC844")]
		private set
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event Action<GameObject> OnSpawnedPlant
	{
		[Token(Token = "0x6000415")]
		[Address(RVA = "0xE78C3C", Offset = "0xE78C3C", VA = "0xE78C3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CC854", Offset = "0x9CC854")]
		add
		{
		}
		[Token(Token = "0x6000416")]
		[Address(RVA = "0xE78DB4", Offset = "0xE78DB4", VA = "0xE78DB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CC864", Offset = "0x9CC864")]
		remove
		{
		}
	}

	[Token(Token = "0x6000417")]
	[Address(RVA = "0xE78EA0", Offset = "0xE78EA0", VA = "0xE78EA0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0xE78B74", Offset = "0xE78B74", VA = "0xE78B74")]
	public void SetPropogation(bool propagate, Vector3 target)
	{
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0xE78F48", Offset = "0xE78F48", VA = "0xE78F48")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CC874", Offset = "0x9CC874")]
	private IEnumerator DoCurve(Vector3 endPoint, bool propagate)
	{
		return null;
	}

	[Token(Token = "0x600041A")]
	[Address(RVA = "0xE79040", Offset = "0xE79040", VA = "0xE79040")]
	public DandelionSpore()
	{
	}
}
[Token(Token = "0x2000082")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9B8904", Offset = "0x9B8904")]
public class DandelionSporeChunkEmitter : MonoBehaviour
{
	[Token(Token = "0x20004D0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BAF88", Offset = "0x9BAF88")]
	private sealed class <SpawnSpores>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400153F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 spawnPos;

		[Token(Token = "0x4001542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public DandelionSporeChunkEmitter <>4__this;

		[Token(Token = "0x4001543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Ray <ray>5__2;

		[Token(Token = "0x4001544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 <sporeSpawnPoint>5__3;

		[Token(Token = "0x4001545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Vector3 <sporeScale>5__4;

		[Token(Token = "0x4001546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int <i>5__5;

		[Token(Token = "0x170003A6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600219C")]
			[Address(RVA = "0xE7AD98", Offset = "0xE7AD98", VA = "0xE7AD98", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600219E")]
			[Address(RVA = "0xE7AE08", Offset = "0xE7AE08", VA = "0xE7AE08", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002199")]
		[Address(RVA = "0xE7A63C", Offset = "0xE7A63C", VA = "0xE7A63C")]
		[DebuggerHidden]
		public <SpawnSpores>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x600219A")]
		[Address(RVA = "0xE7A708", Offset = "0xE7A708", VA = "0xE7A708", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600219B")]
		[Address(RVA = "0xE7A70C", Offset = "0xE7A70C", VA = "0xE7A70C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600219D")]
		[Address(RVA = "0xE7ADA0", Offset = "0xE7ADA0", VA = "0xE7ADA0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private DandelionPlant _dandelionPlant;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform _raycastSource;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject[] _sporeChunks;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject _sporePrefab;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private int _sporesToEmitOnShake;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x9BEFB4", Offset = "0x9BEFB4")]
	private Vector2 _raycastRadiusRange;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	[EventRef]
	private string _sfxReleaseCluster;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Queue<GameObject> _sporePool;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<GameObject> _sporeChunkList;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Coroutine _spawnSporeCoroutine;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Collider _meadowMesh;

	[Token(Token = "0x600041B")]
	[Address(RVA = "0xE7A03C", Offset = "0xE7A03C", VA = "0xE7A03C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0xE7A224", Offset = "0xE7A224", VA = "0xE7A224")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0xE7A2B0", Offset = "0xE7A2B0", VA = "0xE7A2B0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600041E")]
	[Address(RVA = "0xE7A33C", Offset = "0xE7A33C", VA = "0xE7A33C")]
	private void RemoveSporeChunk()
	{
	}

	[Token(Token = "0x600041F")]
	[Address(RVA = "0xE7A590", Offset = "0xE7A590", VA = "0xE7A590")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CC8D8", Offset = "0x9CC8D8")]
	private IEnumerator SpawnSpores(Vector3 spawnPos)
	{
		return null;
	}

	[Token(Token = "0x6000420")]
	[Address(RVA = "0xE7A668", Offset = "0xE7A668", VA = "0xE7A668")]
	public DandelionSporeChunkEmitter()
	{
	}
}
[Token(Token = "0x2000083")]
public class EyeCactusPlantFace : MonoBehaviour
{
	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float3 StartingRotEulerDegrees;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float3 StartingRotUpEulerDegrees;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public JellyPoint[] Children;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float3[] _localChildPos;

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private quaternion[] _localChildRot;

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform Target;

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public JellySystem Jelly;

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform Root;

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float _interestScalar;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float3 _worldOffset;

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float MaxOffsetRadius;

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private JellyPoint _point;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Cooldown _interestHeldCooldown;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float2 NoiseFactors;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public quaternion oldRot;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public bool yLock;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	[SerializeField]
	private float _activationRadius;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float _targetAttractionCooldown;

	[Token(Token = "0x40003A6")]
	private const float TargetAttractionCooldownMax = 10f;

	[Token(Token = "0x1700005E")]
	private float3 StartingRotForward
	{
		[Token(Token = "0x6000428")]
		[Address(RVA = "0xFDB4DC", Offset = "0xFDB4DC", VA = "0xFDB4DC")]
		get
		{
			return default(float3);
		}
	}

	[Token(Token = "0x1700005F")]
	private float3 StartingRotUp
	{
		[Token(Token = "0x6000429")]
		[Address(RVA = "0xFDB68C", Offset = "0xFDB68C", VA = "0xFDB68C")]
		get
		{
			return default(float3);
		}
	}

	[Token(Token = "0x6000421")]
	[Address(RVA = "0xFDA168", Offset = "0xFDA168", VA = "0xFDA168")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000422")]
	[Address(RVA = "0xFDA674", Offset = "0xFDA674", VA = "0xFDA674")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000423")]
	[Address(RVA = "0xFDA6F8", Offset = "0xFDA6F8", VA = "0xFDA6F8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000424")]
	[Address(RVA = "0xFDA77C", Offset = "0xFDA77C", VA = "0xFDA77C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000425")]
	[Address(RVA = "0xFDA808", Offset = "0xFDA808", VA = "0xFDA808")]
	private void HandleTeleport(LocomotionService.Messages.PostLocomotionTeleportGlobalMessage message)
	{
	}

	[Token(Token = "0x6000426")]
	[Address(RVA = "0xFDA814", Offset = "0xFDA814", VA = "0xFDA814")]
	private void UpdatePhysics(float dt)
	{
	}

	[Token(Token = "0x6000427")]
	[Address(RVA = "0xFDB340", Offset = "0xFDB340", VA = "0xFDB340")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0xFDB83C", Offset = "0xFDB83C", VA = "0xFDB83C")]
	public EyeCactusPlantFace()
	{
	}
}
[Token(Token = "0x2000084")]
public class EyeCactusPuzzle : MonoBehaviour, IPuzzle, IWaterReceiver
{
	[Token(Token = "0x20004D1")]
	public enum EyePuzzleType
	{
		[Token(Token = "0x4001548")]
		TouchOrWater,
		[Token(Token = "0x4001549")]
		Water
	}

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EyeCactusPlantFace PlantFace;

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BF044", Offset = "0x9BF044")]
	private float <PuzzleTimerSeconds>k__BackingField;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BF054", Offset = "0x9BF054")]
	private LightPyramidPuzzle <LinkedPuzzlePyramid>k__BackingField;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BF064", Offset = "0x9BF064")]
	private float <PuzzleProgress>k__BackingField;

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public EyePuzzleType PuzzleType;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9BF074", Offset = "0x9BF074")]
	public float SolveSpeed;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject shine;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform bullsEye;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public JellySystem _jellySystem;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private PlantEntity _plantEntity;

	[Token(Token = "0x17000060")]
	public float PuzzleTimerSeconds
	{
		[Token(Token = "0x600042B")]
		[Address(RVA = "0xC5F9B4", Offset = "0xC5F9B4", VA = "0xC5F9B4", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CC93C", Offset = "0x9CC93C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600042C")]
		[Address(RVA = "0xC5F9BC", Offset = "0xC5F9BC", VA = "0xC5F9BC", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CC94C", Offset = "0x9CC94C")]
		set
		{
		}
	}

	[Token(Token = "0x17000061")]
	public LightPyramidPuzzle LinkedPuzzlePyramid
	{
		[Token(Token = "0x600042D")]
		[Address(RVA = "0xC5F9C4", Offset = "0xC5F9C4", VA = "0xC5F9C4", Slot = "6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CC95C", Offset = "0x9CC95C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600042E")]
		[Address(RVA = "0xC5F9CC", Offset = "0xC5F9CC", VA = "0xC5F9CC", Slot = "7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CC96C", Offset = "0x9CC96C")]
		set
		{
		}
	}

	[Token(Token = "0x17000062")]
	public float PuzzleProgress
	{
		[Token(Token = "0x600042F")]
		[Address(RVA = "0xC5F9D4", Offset = "0xC5F9D4", VA = "0xC5F9D4", Slot = "8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CC97C", Offset = "0x9CC97C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000430")]
		[Address(RVA = "0xC5F9DC", Offset = "0xC5F9DC", VA = "0xC5F9DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CC98C", Offset = "0x9CC98C")]
		set
		{
		}
	}

	[Token(Token = "0x6000431")]
	[Address(RVA = "0xC5F9E4", Offset = "0xC5F9E4", VA = "0xC5F9E4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000432")]
	[Address(RVA = "0xC5FABC", Offset = "0xC5FABC", VA = "0xC5FABC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000433")]
	[Address(RVA = "0xC5FBFC", Offset = "0xC5FBFC", VA = "0xC5FBFC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000434")]
	[Address(RVA = "0xC5FC00", Offset = "0xC5FC00", VA = "0xC5FC00", Slot = "9")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9CC99C", Offset = "0x9CC99C")]
	public void ResetPuzzle()
	{
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0xC5FCD4", Offset = "0xC5FCD4", VA = "0xC5FCD4", Slot = "10")]
	public void SolvePuzzle(bool silent)
	{
	}

	[Token(Token = "0x6000436")]
	[Address(RVA = "0xC5FF34", Offset = "0xC5FF34", VA = "0xC5FF34", Slot = "11")]
	public void ReceiveWater(float waterAmount, Vector3? worldPosition, InputHandedness? hand, Vector3? worldSprayVelocity)
	{
	}

	[Token(Token = "0x6000437")]
	[Address(RVA = "0xC600D8", Offset = "0xC600D8", VA = "0xC600D8")]
	public EyeCactusPuzzle()
	{
	}

	[Token(Token = "0x6000438")]
	[Address(RVA = "0xC600EC", Offset = "0xC600EC", VA = "0xC600EC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CC9D4", Offset = "0x9CC9D4")]
	private void <Start>b__21_0(IReadOnlyList<JellySystem.JellyTouchResult> touches, float dt)
	{
	}
}
[Token(Token = "0x2000085")]
public class GrabbableNodePrototype : MonoBehaviour
{
	[Token(Token = "0x20004D2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BAF98", Offset = "0x9BAF98")]
	private sealed class <DoTrackDistance>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400154A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400154B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400154C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GrabbableNodePrototype <>4__this;

		[Token(Token = "0x400154D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <initialWorldPos>5__2;

		[Token(Token = "0x400154E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <pullDistancePercentage>5__3;

		[Token(Token = "0x170003A8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60021A2")]
			[Address(RVA = "0xDC6FF4", Offset = "0xDC6FF4", VA = "0xDC6FF4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60021A4")]
			[Address(RVA = "0xDC7064", Offset = "0xDC7064", VA = "0xDC7064", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600219F")]
		[Address(RVA = "0xDC6570", Offset = "0xDC6570", VA = "0xDC6570")]
		[DebuggerHidden]
		public <DoTrackDistance>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x60021A0")]
		[Address(RVA = "0xDC6C54", Offset = "0xDC6C54", VA = "0xDC6C54", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60021A1")]
		[Address(RVA = "0xDC6C58", Offset = "0xDC6C58", VA = "0xDC6C58", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60021A3")]
		[Address(RVA = "0xDC6FFC", Offset = "0xDC6FFC", VA = "0xDC6FFC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004D3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BAFA8", Offset = "0x9BAFA8")]
	private sealed class <>c__DisplayClass30_0
	{
		[Token(Token = "0x400154F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GrabbableNodePrototype <>4__this;

		[Token(Token = "0x4001550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action callback;

		[Token(Token = "0x60021A5")]
		[Address(RVA = "0xDC6960", Offset = "0xDC6960", VA = "0xDC6960")]
		public <>c__DisplayClass30_0()
		{
		}

		[Token(Token = "0x60021A6")]
		[Address(RVA = "0xDC6B70", Offset = "0xDC6B70", VA = "0xDC6B70")]
		internal void <ResetAudioParams>b__0()
		{
		}

		[Token(Token = "0x60021A7")]
		[Address(RVA = "0xDC6C40", Offset = "0xDC6C40", VA = "0xDC6C40")]
		internal void <ResetAudioParams>b__1()
		{
		}
	}

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform _grabbableNode;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float _deltaDistanceMeters;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[EventRef]
	private string _pullEvent;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GrabbableNodeMapping _grabbableNodeMapping;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private bool _stayHardPinnedWhenPullDistanceAchieved;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private AudioService.AudioServiceLoopHandle _pullEventInstance;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ATTRIBUTES_3D _fmodPositionParams;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private InteractiveCore _interactiveCore;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private JellyPoint _jellyPoint;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Coroutine _pullDistanceCoroutine;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Sequence _audioResetSequence;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool _updateSpring;

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private Vector3 _startingLocalPoint;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private PlantEntity _plantEntity;

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool _pullDistanceAchievedThisFrame;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
	public bool _setParentAsHardPinnedDuringGrabbed;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public ConstrainedPhysicsSpring Spring;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Rigidbody _body;

	[NonSerialized]
	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public bool DoNotUpdateSpringPosition;

	[Token(Token = "0x1400000C")]
	public event Action<GrabbableNodePrototype> OnPullDistanceAchieved
	{
		[Token(Token = "0x6000439")]
		[Address(RVA = "0xDC5B34", Offset = "0xDC5B34", VA = "0xDC5B34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CC9E4", Offset = "0x9CC9E4")]
		add
		{
		}
		[Token(Token = "0x600043A")]
		[Address(RVA = "0xDC5C20", Offset = "0xDC5C20", VA = "0xDC5C20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CC9F4", Offset = "0x9CC9F4")]
		remove
		{
		}
	}

	[Token(Token = "0x600043B")]
	[Address(RVA = "0xDC5D0C", Offset = "0xDC5D0C", VA = "0xDC5D0C")]
	private void Start()
	{
	}

	[Token(Token = "0x600043C")]
	[Address(RVA = "0xDC61E8", Offset = "0xDC61E8", VA = "0xDC61E8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600043D")]
	[Address(RVA = "0xDC6328", Offset = "0xDC6328", VA = "0xDC6328")]
	private void OnAwakeChange(AwakeStatus asleep)
	{
	}

	[Token(Token = "0x600043E")]
	[Address(RVA = "0xDC6364", Offset = "0xDC6364", VA = "0xDC6364")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0xDC64FC", Offset = "0xDC64FC", VA = "0xDC64FC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CCA04", Offset = "0x9CCA04")]
	private IEnumerator DoTrackDistance()
	{
		return null;
	}

	[Token(Token = "0x6000440")]
	[Address(RVA = "0xDC659C", Offset = "0xDC659C", VA = "0xDC659C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9CCA68", Offset = "0x9CCA68")]
	private void ActivatePullDistance()
	{
	}

	[Token(Token = "0x6000441")]
	[Address(RVA = "0xDC67E0", Offset = "0xDC67E0", VA = "0xDC67E0")]
	public void OnHeld(PlayerControllerInput input)
	{
	}

	[Token(Token = "0x6000442")]
	[Address(RVA = "0xDC6604", Offset = "0xDC6604", VA = "0xDC6604")]
	public void OnReleased(PlayerControllerInput input)
	{
	}

	[Token(Token = "0x6000443")]
	[Address(RVA = "0xDC6370", Offset = "0xDC6370", VA = "0xDC6370")]
	private void ResetAudioParams(bool delay, [Optional] Action callback)
	{
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0xDC6968", Offset = "0xDC6968", VA = "0xDC6968")]
	private void Update()
	{
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0xDC6A90", Offset = "0xDC6A90", VA = "0xDC6A90")]
	public GrabbableNodePrototype()
	{
	}

	[Token(Token = "0x6000446")]
	[Address(RVA = "0xDC6AF4", Offset = "0xDC6AF4", VA = "0xDC6AF4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CCAA0", Offset = "0x9CCAA0")]
	private void <Start>b__22_0(PlayerControllerInput input)
	{
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0xDC6B40", Offset = "0xDC6B40", VA = "0xDC6B40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CCAB0", Offset = "0x9CCAB0")]
	private void <OnReleased>b__29_0()
	{
	}
}
[Token(Token = "0x2000086")]
public class PlantIndicatorGestationRing : MonoBehaviour
{
	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Renderer MeshRenderer;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MaterialPropertyBlock _rendererBlock;

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int _uniformIdFillAmount;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _previousFill;

	[Token(Token = "0x6000448")]
	[Address(RVA = "0xEB4D30", Offset = "0xEB4D30", VA = "0xEB4D30")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0xEB4DD8", Offset = "0xEB4DD8", VA = "0xEB4DD8")]
	public void SetFillVisual(float fill)
	{
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0xEB4ECC", Offset = "0xEB4ECC", VA = "0xEB4ECC")]
	public PlantIndicatorGestationRing()
	{
	}
}
[Token(Token = "0x2000087")]
public class PlantIndicatorService : MonoBehaviour, ServiceLocator.ILocatableService
{
	[Token(Token = "0x20004D4")]
	public interface IPlantIndicatorDataProvider
	{
		[Token(Token = "0x170003AA")]
		bool CanGestate
		{
			[Token(Token = "0x60021A8")]
			get;
		}

		[Token(Token = "0x170003AB")]
		bool IsAlive
		{
			[Token(Token = "0x60021A9")]
			get;
		}

		[Token(Token = "0x170003AC")]
		float TotalThirstFill
		{
			[Token(Token = "0x60021AA")]
			get;
		}

		[Token(Token = "0x170003AD")]
		float ProgressTowardsGrowth
		{
			[Token(Token = "0x60021AB")]
			get;
		}

		[Token(Token = "0x170003AE")]
		Transform transform
		{
			[Token(Token = "0x60021AC")]
			get;
		}

		[Token(Token = "0x60021AD")]
		Vector3 SamplePreferredIndicatorHeight();
	}

	[Token(Token = "0x20004D5")]
	public static class Messages
	{
		[Token(Token = "0x20006D7")]
		public struct PlantWaterIndicatorNeededMessage
		{
			[Token(Token = "0x4001E04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IPlantIndicatorDataProvider Entity;

			[Token(Token = "0x4001E05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public bool Cancel;
		}

		[Token(Token = "0x20006D8")]
		public struct PlantGestationIndicatorNeededMessage
		{
			[Token(Token = "0x4001E06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IPlantIndicatorDataProvider Entity;
		}
	}

	[Token(Token = "0x20004D6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BAFB8", Offset = "0x9BAFB8")]
	private sealed class <Start>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlantIndicatorService <>4__this;

		[Token(Token = "0x170003AF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60021B1")]
			[Address(RVA = "0xEB6EA4", Offset = "0xEB6EA4", VA = "0xEB6EA4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60021B3")]
			[Address(RVA = "0xEB6F14", Offset = "0xEB6F14", VA = "0xEB6F14", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60021AE")]
		[Address(RVA = "0xEB5070", Offset = "0xEB5070", VA = "0xEB5070")]
		[DebuggerHidden]
		public <Start>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x60021AF")]
		[Address(RVA = "0xEB6D2C", Offset = "0xEB6D2C", VA = "0xEB6D2C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60021B0")]
		[Address(RVA = "0xEB6D30", Offset = "0xEB6D30", VA = "0xEB6D30", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60021B2")]
		[Address(RVA = "0xEB6EAC", Offset = "0xEB6EAC", VA = "0xEB6EAC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004D7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BAFC8", Offset = "0x9BAFC8")]
	private sealed class <>c__DisplayClass15_0
	{
		[Token(Token = "0x4001554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float yOffset;

		[Token(Token = "0x4001555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlantIndicatorService <>4__this;

		[Token(Token = "0x60021B4")]
		[Address(RVA = "0xEB5558", Offset = "0xEB5558", VA = "0xEB5558")]
		public <>c__DisplayClass15_0()
		{
		}

		[Token(Token = "0x60021B5")]
		[Address(RVA = "0xEB5560", Offset = "0xEB5560", VA = "0xEB5560")]
		internal void <DoWaterIndicator>b__0(float x)
		{
		}

		[Token(Token = "0x60021B6")]
		[Address(RVA = "0xEB5568", Offset = "0xEB5568", VA = "0xEB5568")]
		internal void <DoWaterIndicator>b__1()
		{
		}
	}

	[Token(Token = "0x20004D8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BAFD8", Offset = "0x9BAFD8")]
	private sealed class <DoWaterIndicator>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlantIndicatorService <>4__this;

		[Token(Token = "0x4001559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private <>c__DisplayClass15_0 <>8__1;

		[Token(Token = "0x400155A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <prevTotalThirstFill>5__2;

		[Token(Token = "0x400155B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <i>5__3;

		[Token(Token = "0x170003B1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60021BA")]
			[Address(RVA = "0xEB6CB4", Offset = "0xEB6CB4", VA = "0xEB6CB4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60021BC")]
			[Address(RVA = "0xEB6D24", Offset = "0xEB6D24", VA = "0xEB6D24", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60021B7")]
		[Address(RVA = "0xEB51B0", Offset = "0xEB51B0", VA = "0xEB51B0")]
		[DebuggerHidden]
		public <DoWaterIndicator>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x60021B8")]
		[Address(RVA = "0xEB62D8", Offset = "0xEB62D8", VA = "0xEB62D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60021B9")]
		[Address(RVA = "0xEB62DC", Offset = "0xEB62DC", VA = "0xEB62DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60021BB")]
		[Address(RVA = "0xEB6CBC", Offset = "0xEB6CBC", VA = "0xEB6CBC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004D9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BAFE8", Offset = "0x9BAFE8")]
	private sealed class <>c__DisplayClass17_0
	{
		[Token(Token = "0x400155C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float yOffset;

		[Token(Token = "0x60021BD")]
		[Address(RVA = "0xEB55C4", Offset = "0xEB55C4", VA = "0xEB55C4")]
		public <>c__DisplayClass17_0()
		{
		}

		[Token(Token = "0x60021BE")]
		[Address(RVA = "0xEB55CC", Offset = "0xEB55CC", VA = "0xEB55CC")]
		internal void <DoGestationIndicator>b__0(float x)
		{
		}
	}

	[Token(Token = "0x20004DA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BAFF8", Offset = "0x9BAFF8")]
	private sealed class <DoGestationIndicator>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400155D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400155E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400155F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlantIndicatorService <>4__this;

		[Token(Token = "0x4001560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private <>c__DisplayClass17_0 <>8__1;

		[Token(Token = "0x170003B3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60021C2")]
			[Address(RVA = "0xEB5B44", Offset = "0xEB5B44", VA = "0xEB5B44", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60021C4")]
			[Address(RVA = "0xEB5BB4", Offset = "0xEB5BB4", VA = "0xEB5BB4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60021BF")]
		[Address(RVA = "0xEB52C0", Offset = "0xEB52C0", VA = "0xEB52C0")]
		[DebuggerHidden]
		public <DoGestationIndicator>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x60021C0")]
		[Address(RVA = "0xEB55D4", Offset = "0xEB55D4", VA = "0xEB55D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60021C1")]
		[Address(RVA = "0xEB55D8", Offset = "0xEB55D8", VA = "0xEB55D8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60021C3")]
		[Address(RVA = "0xEB5B4C", Offset = "0xEB5B4C", VA = "0xEB5B4C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004DB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB008", Offset = "0x9BB008")]
	private sealed class <DoGestationWatcher>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlantIndicatorService <>4__this;

		[Token(Token = "0x4001564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WorldStateService <worldState>5__2;

		[Token(Token = "0x4001565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform <playerHead>5__3;

		[Token(Token = "0x4001566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private IPlantIndicatorDataProvider <candidate>5__4;

		[Token(Token = "0x4001567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <lowestScore>5__5;

		[Token(Token = "0x4001568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private IReadOnlyList<PersistentEntity> <list>5__6;

		[Token(Token = "0x4001569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int <i>5__7;

		[Token(Token = "0x170003B5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60021C8")]
			[Address(RVA = "0xEB6260", Offset = "0xEB6260", VA = "0xEB6260", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60021CA")]
			[Address(RVA = "0xEB62D0", Offset = "0xEB62D0", VA = "0xEB62D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60021C5")]
		[Address(RVA = "0xEB5504", Offset = "0xEB5504", VA = "0xEB5504")]
		[DebuggerHidden]
		public <DoGestationWatcher>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x60021C6")]
		[Address(RVA = "0xEB5BBC", Offset = "0xEB5BBC", VA = "0xEB5BBC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60021C7")]
		[Address(RVA = "0xEB5BC0", Offset = "0xEB5BC0", VA = "0xEB5BC0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60021C9")]
		[Address(RVA = "0xEB6268", Offset = "0xEB6268", VA = "0xEB6268", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlantIndicatorGestationRing IndicatorGestation;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PlantIndicatorWater IndicatorWater;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float ExtraHeight;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IPlantIndicatorDataProvider _waterEntity;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Cooldown _waterCooldown;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Coroutine _waterRoutine;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float WaterCooldownSeconds;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private IPlantIndicatorDataProvider _gestationEntity;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Cooldown _gestationCooldown;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Coroutine _gestationRoutine;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float GestationCooldownSeconds;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public bool RespondToWatering;

	[Token(Token = "0x600044B")]
	[Address(RVA = "0xEB4EDC", Offset = "0xEB4EDC", VA = "0xEB4EDC")]
	private void HandlePlantWateredMessage(Messages.PlantWaterIndicatorNeededMessage message)
	{
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0xEB4FFC", Offset = "0xEB4FFC", VA = "0xEB4FFC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CCAC0", Offset = "0x9CCAC0")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600044D")]
	[Address(RVA = "0xEB509C", Offset = "0xEB509C", VA = "0xEB509C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0xEB4F88", Offset = "0xEB4F88", VA = "0xEB4F88")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CCB24", Offset = "0x9CCB24")]
	private IEnumerator DoWaterIndicator()
	{
		return null;
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0xEB51DC", Offset = "0xEB51DC", VA = "0xEB51DC")]
	private void HandleGestationMessage(Messages.PlantGestationIndicatorNeededMessage message)
	{
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0xEB524C", Offset = "0xEB524C", VA = "0xEB524C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CCB88", Offset = "0x9CCB88")]
	private IEnumerator DoGestationIndicator()
	{
		return null;
	}

	[Token(Token = "0x6000451")]
	[Address(RVA = "0xEB52EC", Offset = "0xEB52EC", VA = "0xEB52EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000452")]
	[Address(RVA = "0xEB5438", Offset = "0xEB5438", VA = "0xEB5438")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000453")]
	[Address(RVA = "0xEB513C", Offset = "0xEB513C", VA = "0xEB513C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CCBEC", Offset = "0x9CCBEC")]
	private IEnumerator DoGestationWatcher()
	{
		return null;
	}

	[Token(Token = "0x6000454")]
	[Address(RVA = "0xEB5530", Offset = "0xEB5530", VA = "0xEB5530")]
	public PlantIndicatorService()
	{
	}
}
[Token(Token = "0x2000088")]
public class PlantIndicatorWater : MonoBehaviour
{
	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Renderer MeshRenderer;

	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MaterialPropertyBlock _rendererBlock;

	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int _uniformIdFillAmount;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _previousFill;

	[Token(Token = "0x6000455")]
	[Address(RVA = "0xEB6F1C", Offset = "0xEB6F1C", VA = "0xEB6F1C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000456")]
	[Address(RVA = "0xEB6BC0", Offset = "0xEB6BC0", VA = "0xEB6BC0")]
	public void SetFillVisual(float fill)
	{
	}

	[Token(Token = "0x6000457")]
	[Address(RVA = "0xEB6FC4", Offset = "0xEB6FC4", VA = "0xEB6FC4")]
	public PlantIndicatorWater()
	{
	}
}
[Token(Token = "0x2000089")]
public class PulsateOverlayOnEnable : MonoBehaviour
{
	[Token(Token = "0x20004DC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB018", Offset = "0x9BB018")]
	private sealed class <DoPulseRoutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400156A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400156B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400156C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PulsateOverlayOnEnable <>4__this;

		[Token(Token = "0x170003B7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60021CE")]
			[Address(RVA = "0x10B4B24", Offset = "0x10B4B24", VA = "0x10B4B24", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60021D0")]
			[Address(RVA = "0x10B4B94", Offset = "0x10B4B94", VA = "0x10B4B94", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60021CB")]
		[Address(RVA = "0x10B49D0", Offset = "0x10B49D0", VA = "0x10B49D0")]
		[DebuggerHidden]
		public <DoPulseRoutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x60021CC")]
		[Address(RVA = "0x10B4A0C", Offset = "0x10B4A0C", VA = "0x10B4A0C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60021CD")]
		[Address(RVA = "0x10B4A10", Offset = "0x10B4A10", VA = "0x10B4A10", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60021CF")]
		[Address(RVA = "0x10B4B2C", Offset = "0x10B4B2C", VA = "0x10B4B2C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlantEffectController Controller;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Delay;

	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool DoOnEnable;

	[Token(Token = "0x6000458")]
	[Address(RVA = "0x10B48EC", Offset = "0x10B48EC", VA = "0x10B48EC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000459")]
	[Address(RVA = "0x10B4930", Offset = "0x10B4930", VA = "0x10B4930")]
	public void DoPulse()
	{
	}

	[Token(Token = "0x600045A")]
	[Address(RVA = "0x10B495C", Offset = "0x10B495C", VA = "0x10B495C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CCC50", Offset = "0x9CCC50")]
	private IEnumerator DoPulseRoutine()
	{
		return null;
	}

	[Token(Token = "0x600045B")]
	[Address(RVA = "0x10B49FC", Offset = "0x10B49FC", VA = "0x10B49FC")]
	public PulsateOverlayOnEnable()
	{
	}
}
[Token(Token = "0x200008A")]
public interface IHeroPlantPuzzle
{
	[Token(Token = "0x17000063")]
	bool IsPuzzleSolved
	{
		[Token(Token = "0x600045D")]
		get;
	}

	[Token(Token = "0x17000064")]
	List<IActivatable> Activatables
	{
		[Token(Token = "0x600045E")]
		get;
	}

	[Token(Token = "0x600045C")]
	void SolvePuzzle();
}
[Token(Token = "0x200008B")]
public interface IPuzzle
{
	[Token(Token = "0x17000065")]
	float PuzzleTimerSeconds
	{
		[Token(Token = "0x600045F")]
		get;
		[Token(Token = "0x6000460")]
		set;
	}

	[Token(Token = "0x17000066")]
	LightPyramidPuzzle LinkedPuzzlePyramid
	{
		[Token(Token = "0x6000461")]
		get;
		[Token(Token = "0x6000462")]
		set;
	}

	[Token(Token = "0x17000067")]
	float PuzzleProgress
	{
		[Token(Token = "0x6000463")]
		get;
	}

	[Token(Token = "0x6000464")]
	void ResetPuzzle();

	[Token(Token = "0x6000465")]
	void SolvePuzzle(bool silent);
}
[Token(Token = "0x200008C")]
public class JellyPlantFaceBehaviourPresentGem : MonoBehaviour
{
	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LightGemSpawnerTimer Spawner;

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public JellyPlantFace Face;

	[Token(Token = "0x6000466")]
	[Address(RVA = "0xBEBB20", Offset = "0xBEBB20", VA = "0xBEBB20")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000467")]
	[Address(RVA = "0xBEBDD4", Offset = "0xBEBDD4", VA = "0xBEBDD4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000468")]
	[Address(RVA = "0xBEC088", Offset = "0xBEC088", VA = "0xBEC088")]
	private void LightGemSpawned(PlantEntity plantEntity)
	{
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0xBEC0C0", Offset = "0xBEC0C0", VA = "0xBEC0C0")]
	private void LightGemGrabbed(PlantEntity plantEntity)
	{
	}

	[Token(Token = "0x600046A")]
	[Address(RVA = "0xBEC0F8", Offset = "0xBEC0F8", VA = "0xBEC0F8")]
	public JellyPlantFaceBehaviourPresentGem()
	{
	}
}
[Token(Token = "0x200008D")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9B8968", Offset = "0x9B8968")]
public class KelpPlant : MonoBehaviour, IHeroPlantPuzzle
{
	[Token(Token = "0x20004DD")]
	public struct GrabToHandTarget
	{
		[Token(Token = "0x400156D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int GrabbableIndex;

		[Token(Token = "0x400156E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public InputHandedness HandTarget;
	}

	[Token(Token = "0x20004DE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB028", Offset = "0x9BB028")]
	private sealed class <>c__DisplayClass71_0
	{
		[Token(Token = "0x400156F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Rigidbody rewardRB;

		[Token(Token = "0x4001570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject shine;

		[Token(Token = "0x4001571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject reward;

		[Token(Token = "0x60021D1")]
		[Address(RVA = "0xBF018C", Offset = "0xBF018C", VA = "0xBF018C")]
		public <>c__DisplayClass71_0()
		{
		}

		[Token(Token = "0x60021D2")]
		[Address(RVA = "0xBF0FE0", Offset = "0xBF0FE0", VA = "0xBF0FE0")]
		internal void <SolvePuzzle>b__0(InteractiveCore.Messages.HoldItemStateChangedEvent ev)
		{
		}
	}

	[Token(Token = "0x20004DF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB038", Offset = "0x9BB038")]
	private sealed class <PlaySequence>d__73 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public KelpPlant <>4__this;

		[Token(Token = "0x170003B9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60021D6")]
			[Address(RVA = "0xBF1BA4", Offset = "0xBF1BA4", VA = "0xBF1BA4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003BA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60021D8")]
			[Address(RVA = "0xBF1C14", Offset = "0xBF1C14", VA = "0xBF1C14", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60021D3")]
		[Address(RVA = "0xBF0194", Offset = "0xBF0194", VA = "0xBF0194")]
		[DebuggerHidden]
		public <PlaySequence>d__73(int <>1__state)
		{
		}

		[Token(Token = "0x60021D4")]
		[Address(RVA = "0xBF1888", Offset = "0xBF1888", VA = "0xBF1888", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60021D5")]
		[Address(RVA = "0xBF188C", Offset = "0xBF188C", VA = "0xBF188C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60021D7")]
		[Address(RVA = "0xBF1BAC", Offset = "0xBF1BAC", VA = "0xBF1BAC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004E0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB048", Offset = "0x9BB048")]
	private sealed class <>c__DisplayClass74_0
	{
		[Token(Token = "0x4001575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public KelpPlant <>4__this;

		[Token(Token = "0x4001576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int index;

		[Token(Token = "0x4001577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TweenCallback <>9__1;

		[Token(Token = "0x60021D9")]
		[Address(RVA = "0xBF06C4", Offset = "0xBF06C4", VA = "0xBF06C4")]
		public <>c__DisplayClass74_0()
		{
		}

		[Token(Token = "0x60021DA")]
		[Address(RVA = "0xBF10E0", Offset = "0xBF10E0", VA = "0xBF10E0")]
		internal void <SequencerPlay>b__0()
		{
		}

		[Token(Token = "0x60021DB")]
		[Address(RVA = "0xBF12E4", Offset = "0xBF12E4", VA = "0xBF12E4")]
		internal void <SequencerPlay>b__1()
		{
		}
	}

	[Token(Token = "0x20004E1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB058", Offset = "0x9BB058")]
	private sealed class <GrabbedLastPoint>d__75 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400157A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public KelpPlant <>4__this;

		[Token(Token = "0x400157B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 finalSpherePos;

		[Token(Token = "0x170003BB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60021DF")]
			[Address(RVA = "0xBF1810", Offset = "0xBF1810", VA = "0xBF1810", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003BC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60021E1")]
			[Address(RVA = "0xBF1880", Offset = "0xBF1880", VA = "0xBF1880", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60021DC")]
		[Address(RVA = "0xBF0918", Offset = "0xBF0918", VA = "0xBF0918")]
		[DebuggerHidden]
		public <GrabbedLastPoint>d__75(int <>1__state)
		{
		}

		[Token(Token = "0x60021DD")]
		[Address(RVA = "0xBF1490", Offset = "0xBF1490", VA = "0xBF1490", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60021DE")]
		[Address(RVA = "0xBF1494", Offset = "0xBF1494", VA = "0xBF1494", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60021E0")]
		[Address(RVA = "0xBF1818", Offset = "0xBF1818", VA = "0xBF1818", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004E2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB068", Offset = "0x9BB068")]
	private sealed class <>c__DisplayClass77_0
	{
		[Token(Token = "0x400157C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public KelpPlant <>4__this;

		[Token(Token = "0x400157D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Renderer renderer;

		[Token(Token = "0x60021E2")]
		[Address(RVA = "0xBF0C70", Offset = "0xBF0C70", VA = "0xBF0C70")]
		public <>c__DisplayClass77_0()
		{
		}

		[Token(Token = "0x60021E3")]
		[Address(RVA = "0xBF1348", Offset = "0xBF1348", VA = "0xBF1348")]
		internal Color <ToggleGrabMaterial>b__0()
		{
			return default(Color);
		}

		[Token(Token = "0x60021E4")]
		[Address(RVA = "0xBF13BC", Offset = "0xBF13BC", VA = "0xBF13BC")]
		internal void <ToggleGrabMaterial>b__1(Color x)
		{
		}
	}

	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9BF104", Offset = "0x9BF104")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9BF104", Offset = "0x9BF104")]
	private float _difficultyFactor;

	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BF16C", Offset = "0x9BF16C")]
	[SerializeField]
	private Renderer _flowerRenderer;

	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform _flowerBase;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject _rewardPrefab;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private InteractiveCore _interactiveCore;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BF1E8", Offset = "0x9BF1E8")]
	[SerializeField]
	[EventRef]
	private string _grabSphereEvent;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	[EventRef]
	private string _grabFinalSphereEvent;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	[EventRef]
	private string _touchFlowerEvent;

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	[EventRef]
	private string _failureEvent;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private bool PlaySingleNote;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool _playEven;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int _initialBPM;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BF2FC", Offset = "0x9BF2FC")]
	[SerializeField]
	private float _failureUpKickForce;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[SerializeField]
	private float _upForce;

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private float _downForce;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float _upForceCache;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BF368", Offset = "0x9BF368")]
	[SerializeField]
	private GameObject _spherePrefab;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private float _activeSphereScaleFactor;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[SerializeField]
	private float _inactiveSphereScaleFactor;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Vector3 _sphereShineEffectLocalScale;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private Material _oddMaterial;

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private Material _evenMaterial;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private Color _failureColor;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private float _penaltyDuration;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	[SerializeField]
	private Color _ungrabbableColor;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[SerializeField]
	private Color _grabbableColor;

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float _canGrabDuration;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public float capsuleRadiusMultiplier;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public float hapsDistance;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public float lerpToHandAssistance;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private int _lastPointIndex;

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private int grabbedJellypointProgress;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private GrabToHandTarget? leftTarget;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private GrabToHandTarget? rightTarget;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private JellyPoint[] _grabbablePoints;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private GameObject[] _spheres;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Renderer[] _sphereRenderers;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private Dictionary<Renderer, TweenerCore<Color, Color, ColorOptions>> _sphereTweens;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private MaterialPropertyBlock _spherePropBlock;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private bool[] _sphereIsGrabbable;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private GameObject _sphereShineEffect;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private JellySystem _jellySystem;

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private SequencerController _controller;

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Animator _animator;

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Coroutine _sequencerCoroutine;

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private Coroutine _grabbedLastPoint;

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BF454", Offset = "0x9BF454")]
	private bool <IsPuzzleSolved>k__BackingField;

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BF464", Offset = "0x9BF464")]
	private List<IActivatable> <Activatables>k__BackingField;

	[Token(Token = "0x17000068")]
	public bool IsPuzzleSolved
	{
		[Token(Token = "0x600046D")]
		[Address(RVA = "0xBED49C", Offset = "0xBED49C", VA = "0xBED49C", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CCCD4", Offset = "0x9CCCD4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600046E")]
		[Address(RVA = "0xBED4A4", Offset = "0xBED4A4", VA = "0xBED4A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CCCE4", Offset = "0x9CCCE4")]
		private set
		{
		}
	}

	[Token(Token = "0x17000069")]
	public List<IActivatable> Activatables
	{
		[Token(Token = "0x600046F")]
		[Address(RVA = "0xBED4B0", Offset = "0xBED4B0", VA = "0xBED4B0", Slot = "6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CCCF4", Offset = "0x9CCCF4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000470")]
		[Address(RVA = "0xBED4B8", Offset = "0xBED4B8", VA = "0xBED4B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CCD04", Offset = "0x9CCD04")]
		private set
		{
		}
	}

	[Token(Token = "0x1400000D")]
	public event Action OnFailedToGrab
	{
		[Token(Token = "0x600046B")]
		[Address(RVA = "0xBED2BC", Offset = "0xBED2BC", VA = "0xBED2BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CCCB4", Offset = "0x9CCCB4")]
		add
		{
		}
		[Token(Token = "0x600046C")]
		[Address(RVA = "0xBED3AC", Offset = "0xBED3AC", VA = "0xBED3AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CCCC4", Offset = "0x9CCCC4")]
		remove
		{
		}
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0xBED4C0", Offset = "0xBED4C0", VA = "0xBED4C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0xBED818", Offset = "0xBED818", VA = "0xBED818")]
	private void Start()
	{
	}

	[Token(Token = "0x6000473")]
	[Address(RVA = "0xBEDBD0", Offset = "0xBEDBD0", VA = "0xBEDBD0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000474")]
	[Address(RVA = "0xBEDC60", Offset = "0xBEDC60", VA = "0xBEDC60")]
	private void HandleAwakeStatusChange(AwakeStatus asleep)
	{
	}

	[Token(Token = "0x6000475")]
	[Address(RVA = "0xBEDC84", Offset = "0xBEDC84", VA = "0xBEDC84")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000476")]
	[Address(RVA = "0xBEE0DC", Offset = "0xBEE0DC", VA = "0xBEE0DC")]
	private void ApplyIronGrips(float deltaTime)
	{
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0xBEE2AC", Offset = "0xBEE2AC", VA = "0xBEE2AC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000478")]
	[Address(RVA = "0xBEE4A0", Offset = "0xBEE4A0", VA = "0xBEE4A0")]
	private void OnJellyPhysicsSync(float deltaTime)
	{
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0xBEF4B8", Offset = "0xBEF4B8", VA = "0xBEF4B8")]
	private void PlantUpdateTick(float deltaTime)
	{
	}

	[Token(Token = "0x600047A")]
	[Address(RVA = "0xBEEA18", Offset = "0xBEEA18", VA = "0xBEEA18")]
	private void CheckHandsUpdate(ref GrabToHandTarget? target, InputHandedness handedness, float deltaTime, out bool failedToGrab)
	{
	}

	[Token(Token = "0x600047B")]
	[Address(RVA = "0xBEF79C", Offset = "0xBEF79C", VA = "0xBEF79C")]
	private bool TryAndGrabAtIndex(int i, ref GrabToHandTarget? target, InputHandedness handedness, PlayerController hand, out bool grabWasInRange)
	{
		return default(bool);
	}

	[Token(Token = "0x600047C")]
	[Address(RVA = "0xBEE110", Offset = "0xBEE110", VA = "0xBEE110")]
	private void ApplyIronGrip(GrabToHandTarget? target)
	{
	}

	[Token(Token = "0x600047D")]
	[Address(RVA = "0xBEFAF4", Offset = "0xBEFAF4", VA = "0xBEFAF4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0xBEFB1C", Offset = "0xBEFB1C", VA = "0xBEFB1C")]
	public void SetRewardPrefab(GameObject newPrefab)
	{
	}

	[Token(Token = "0x600047F")]
	[Address(RVA = "0xBEFB24", Offset = "0xBEFB24", VA = "0xBEFB24", Slot = "4")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9CCD14", Offset = "0x9CCD14")]
	public void SolvePuzzle()
	{
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0xBEE068", Offset = "0xBEE068", VA = "0xBEE068")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CCD4C", Offset = "0x9CCD4C")]
	private IEnumerator PlaySequence()
	{
		return null;
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0xBF01C0", Offset = "0xBF01C0", VA = "0xBF01C0")]
	private void SequencerPlay(int index, SequencerController source)
	{
	}

	[Token(Token = "0x6000482")]
	[Address(RVA = "0xBEFA48", Offset = "0xBEFA48", VA = "0xBEFA48")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CCDB0", Offset = "0x9CCDB0")]
	private IEnumerator GrabbedLastPoint(Vector3 finalSpherePos)
	{
		return null;
	}

	[Token(Token = "0x6000483")]
	[Address(RVA = "0xBF0944", Offset = "0xBF0944", VA = "0xBF0944")]
	private void OnTouchedFlower(PlayerControllerInput input)
	{
	}

	[Token(Token = "0x6000484")]
	[Address(RVA = "0xBF06CC", Offset = "0xBF06CC", VA = "0xBF06CC")]
	private void ToggleGrabMaterial(Renderer renderer, bool isGrabbable)
	{
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0xBEF278", Offset = "0xBEF278", VA = "0xBEF278")]
	private void ToggleFailMaterial()
	{
	}

	[Token(Token = "0x6000486")]
	[Address(RVA = "0xBF0C78", Offset = "0xBF0C78", VA = "0xBF0C78")]
	public KelpPlant()
	{
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0xBF0D3C", Offset = "0xBF0D3C", VA = "0xBF0D3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CCE14", Offset = "0x9CCE14")]
	private float <OnJellyPhysicsSync>b__64_0()
	{
		return default(float);
	}

	[Token(Token = "0x6000488")]
	[Address(RVA = "0xBF0D44", Offset = "0xBF0D44", VA = "0xBF0D44")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CCE24", Offset = "0x9CCE24")]
	private void <OnJellyPhysicsSync>b__64_1(float x)
	{
	}

	[Token(Token = "0x6000489")]
	[Address(RVA = "0xBF0D4C", Offset = "0xBF0D4C", VA = "0xBF0D4C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CCE34", Offset = "0x9CCE34")]
	private void <OnJellyPhysicsSync>b__64_2()
	{
	}
}
[Token(Token = "0x200008E")]
public class LightringRadiusPlantTracker : MonoBehaviour, IFujiSerializable
{
	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly string __NARRATIVE_EVENT_DESC;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private LoadingZoneKey _zone;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private int _ringRadius;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9BF494", Offset = "0x9BF494")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9BF494", Offset = "0x9BF494")]
	private float _percentPlantInteractionThreshold;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BF4F8", Offset = "0x9BF4F8")]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x9BF4F8", Offset = "0x9BF4F8")]
	private GameObject _lightJewelPrefab;

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[EventRef]
	private string _rewardEvent;

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _percentInteracted;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject[] plantGroupsInsideThisRadius;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Dictionary<PlantEntity, bool> _plantDict;

	[Token(Token = "0x1700006A")]
	[FujiSerialized]
	public float PercentInteracted
	{
		[Token(Token = "0x600048A")]
		[Address(RVA = "0xC02488", Offset = "0xC02488", VA = "0xC02488")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600048B")]
		[Address(RVA = "0xC02490", Offset = "0xC02490", VA = "0xC02490")]
		set
		{
		}
	}

	[Token(Token = "0x1700006B")]
	private string _narrativeString
	{
		[Token(Token = "0x600048C")]
		[Address(RVA = "0xC02498", Offset = "0xC02498", VA = "0xC02498")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600048D")]
	[Address(RVA = "0xC0255C", Offset = "0xC0255C", VA = "0xC0255C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0xC0268C", Offset = "0xC0268C", VA = "0xC0268C")]
	private void Start()
	{
	}

	[Token(Token = "0x600048F")]
	[Address(RVA = "0xC02928", Offset = "0xC02928", VA = "0xC02928")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000490")]
	[Address(RVA = "0xC02B8C", Offset = "0xC02B8C", VA = "0xC02B8C", Slot = "4")]
	public void OnPreSerialize()
	{
	}

	[Token(Token = "0x6000491")]
	[Address(RVA = "0xC02B90", Offset = "0xC02B90", VA = "0xC02B90", Slot = "5")]
	public void OnPostDeserialize()
	{
	}

	[Token(Token = "0x6000492")]
	[Address(RVA = "0xC02B94", Offset = "0xC02B94", VA = "0xC02B94")]
	private void LightGemSpawned(PlantEntity source)
	{
	}

	[Token(Token = "0x6000493")]
	[Address(RVA = "0xC031AC", Offset = "0xC031AC", VA = "0xC031AC")]
	private void LightJewelReleased(LightJewelReleasedEvent ev)
	{
	}

	[Token(Token = "0x6000494")]
	[Address(RVA = "0xC02C70", Offset = "0xC02C70", VA = "0xC02C70")]
	private void CheckThreshold(PlantEntity lastPlantInteracted)
	{
	}

	[Token(Token = "0x6000495")]
	[Address(RVA = "0xC0324C", Offset = "0xC0324C", VA = "0xC0324C")]
	public LightringRadiusPlantTracker()
	{
	}
}
[Token(Token = "0x200008F")]
public class MelonLogic : MonoBehaviour
{
	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float FloatHeight;

	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float Bouyancy;

	[Token(Token = "0x6000497")]
	[Address(RVA = "0xCC40B8", Offset = "0xCC40B8", VA = "0xCC40B8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000498")]
	[Address(RVA = "0xCC42A0", Offset = "0xCC42A0", VA = "0xCC42A0")]
	public MelonLogic()
	{
	}
}
[Token(Token = "0x2000090")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9B89E8", Offset = "0x9B89E8")]
public class PianoPlant : MonoBehaviour
{
	[Token(Token = "0x20004E3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB078", Offset = "0x9BB078")]
	private sealed class <DoSequence>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400157E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400157F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PianoPlant <>4__this;

		[Token(Token = "0x4001581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int[] <recordedIndices>5__2;

		[Token(Token = "0x4001582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <i>5__3;

		[Token(Token = "0x170003BD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60021E8")]
			[Address(RVA = "0xEB32B8", Offset = "0xEB32B8", VA = "0xEB32B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003BE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60021EA")]
			[Address(RVA = "0xEB3328", Offset = "0xEB3328", VA = "0xEB3328", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60021E5")]
		[Address(RVA = "0xEB2EB8", Offset = "0xEB2EB8", VA = "0xEB2EB8")]
		[DebuggerHidden]
		public <DoSequence>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x60021E6")]
		[Address(RVA = "0xEB304C", Offset = "0xEB304C", VA = "0xEB304C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60021E7")]
		[Address(RVA = "0xEB3050", Offset = "0xEB3050", VA = "0xEB3050", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60021E9")]
		[Address(RVA = "0xEB32C0", Offset = "0xEB32C0", VA = "0xEB32C0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[EventRef]
	private string _pianoSoundEvent;

	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string _pianoParamName;

	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private SequencerNoteType _noteType;

	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SequencerController _controller;

	[Token(Token = "0x6000499")]
	[Address(RVA = "0xEB28A8", Offset = "0xEB28A8", VA = "0xEB28A8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0xEB292C", Offset = "0xEB292C", VA = "0xEB292C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600049B")]
	[Address(RVA = "0xEB2BA4", Offset = "0xEB2BA4", VA = "0xEB2BA4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600049C")]
	[Address(RVA = "0xEB2E18", Offset = "0xEB2E18", VA = "0xEB2E18")]
	private void PlayRecordedSequence()
	{
	}

	[Token(Token = "0x600049D")]
	[Address(RVA = "0xEB2E44", Offset = "0xEB2E44", VA = "0xEB2E44")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CCE44", Offset = "0x9CCE44")]
	private IEnumerator DoSequence()
	{
		return null;
	}

	[Token(Token = "0x600049E")]
	[Address(RVA = "0xEB2EE4", Offset = "0xEB2EE4", VA = "0xEB2EE4")]
	private void SequencerPlay(int index, SequencerController source)
	{
	}

	[Token(Token = "0x600049F")]
	[Address(RVA = "0xEB2FE8", Offset = "0xEB2FE8", VA = "0xEB2FE8")]
	public void SolvePuzzle()
	{
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0xEB2FEC", Offset = "0xEB2FEC", VA = "0xEB2FEC")]
	public PianoPlant()
	{
	}
}
[Token(Token = "0x2000091")]
public class PlantEffectController : MonoBehaviour
{
	[Token(Token = "0x20004E4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB088", Offset = "0x9BB088")]
	private sealed class <>c__DisplayClass17_0
	{
		[Token(Token = "0x4001583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Color highlightColor;

		[Token(Token = "0x4001584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlantEffectController <>4__this;

		[Token(Token = "0x60021EB")]
		[Address(RVA = "0xEB421C", Offset = "0xEB421C", VA = "0xEB421C")]
		public <>c__DisplayClass17_0()
		{
		}

		[Token(Token = "0x60021EC")]
		[Address(RVA = "0xEB4360", Offset = "0xEB4360", VA = "0xEB4360")]
		internal Color <PulsateOverlay>b__0()
		{
			return default(Color);
		}

		[Token(Token = "0x60021ED")]
		[Address(RVA = "0xEB436C", Offset = "0xEB436C", VA = "0xEB436C")]
		internal void <PulsateOverlay>b__1(Color x)
		{
		}

		[Token(Token = "0x60021EE")]
		[Address(RVA = "0xEB4378", Offset = "0xEB4378", VA = "0xEB4378")]
		internal void <PulsateOverlay>b__2()
		{
		}
	}

	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BF5F8", Offset = "0x9BF5F8")]
	private JellySystem <_jellySystem>k__BackingField;

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer[] Renderers;

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9BF608", Offset = "0x9BF608")]
	private float _brownness;

	[NonSerialized]
	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float decayCurrent;

	[NonSerialized]
	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float emissionCurrent;

	[Token(Token = "0x4000423")]
	private const float DecaySlumpReserve = 0.1f;

	[Token(Token = "0x4000424")]
	private const float DecaySlumpForceMax = 15f;

	[Token(Token = "0x4000425")]
	private const float DecaySlumpSplit01 = 0.5f;

	[Token(Token = "0x4000426")]
	private const float DecayDragMax = 0.3f;

	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MaterialPropertyBlock _block;

	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int uniformId_FujiSickness;

	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int uniformId_FujiOverlayColor;

	[Token(Token = "0x1700006C")]
	public JellySystem _jellySystem
	{
		[Token(Token = "0x60004A2")]
		[Address(RVA = "0xEB3B68", Offset = "0xEB3B68", VA = "0xEB3B68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CCEB8", Offset = "0x9CCEB8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60004A1")]
		[Address(RVA = "0xEB3B60", Offset = "0xEB3B60", VA = "0xEB3B60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CCEA8", Offset = "0x9CCEA8")]
		private set
		{
		}
	}

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0xEB3B70", Offset = "0xEB3B70", VA = "0xEB3B70")]
	public void SetSicknessVisual(float decay, float emission = 1f, float overfill = 0f)
	{
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0xEB3EAC", Offset = "0xEB3EAC", VA = "0xEB3EAC")]
	private void TryInitBlock()
	{
	}

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0xEB3FE0", Offset = "0xEB3FE0", VA = "0xEB3FE0")]
	public void PulsateOverlay(float pulseTime = 0.35f)
	{
	}

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0xEB4224", Offset = "0xEB4224", VA = "0xEB4224")]
	public void CacheChildrenRenderersIfNoneProvided()
	{
	}

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0xEB4290", Offset = "0xEB4290", VA = "0xEB4290")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0xEB4320", Offset = "0xEB4320", VA = "0xEB4320")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9CCEC8", Offset = "0x9CCEC8")]
	private void DoDecay()
	{
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0xEB4330", Offset = "0xEB4330", VA = "0xEB4330")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9CCF00", Offset = "0x9CCF00")]
	private void UndoDecay()
	{
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0xEB4340", Offset = "0xEB4340", VA = "0xEB4340")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9CCF38", Offset = "0x9CCF38")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0xEB4344", Offset = "0xEB4344", VA = "0xEB4344")]
	public PlantEffectController()
	{
	}
}
[Token(Token = "0x2000092")]
public class FlourishPuzzle : MonoBehaviour, IPuzzle
{
	[Serializable]
	[Token(Token = "0x20004E5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB098", Offset = "0x9BB098")]
	private sealed class <>c
	{
		[Token(Token = "0x4001585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<FlourishPuzzleBeacon, int> <>9__22_0;

		[Token(Token = "0x60021F0")]
		[Address(RVA = "0xC67584", Offset = "0xC67584", VA = "0xC67584")]
		public <>c()
		{
		}

		[Token(Token = "0x60021F1")]
		[Address(RVA = "0xC6758C", Offset = "0xC6758C", VA = "0xC6758C")]
		internal int <Awake>b__22_0(FlourishPuzzleBeacon b)
		{
			return default(int);
		}
	}

	[Token(Token = "0x20004E6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB0A8", Offset = "0x9BB0A8")]
	private sealed class <BeaconIterate>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FlourishPuzzle <>4__this;

		[Token(Token = "0x400158A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Cooldown <cooldown>5__2;

		[Token(Token = "0x400158B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private FlourishPuzzleBeacon[] <>7__wrap2;

		[Token(Token = "0x400158C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <>7__wrap3;

		[Token(Token = "0x170003BF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60021F5")]
			[Address(RVA = "0xC679B4", Offset = "0xC679B4", VA = "0xC679B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003C0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60021F7")]
			[Address(RVA = "0xC67A24", Offset = "0xC67A24", VA = "0xC67A24", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60021F2")]
		[Address(RVA = "0xC6723C", Offset = "0xC6723C", VA = "0xC6723C")]
		[DebuggerHidden]
		public <BeaconIterate>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x60021F3")]
		[Address(RVA = "0xC675B8", Offset = "0xC675B8", VA = "0xC675B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60021F4")]
		[Address(RVA = "0xC675BC", Offset = "0xC675BC", VA = "0xC675BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60021F6")]
		[Address(RVA = "0xC679BC", Offset = "0xC679BC", VA = "0xC679BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004E7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB0B8", Offset = "0x9BB0B8")]
	private sealed class <DoRecording>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400158D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400158E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400158F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FlourishPuzzle <>4__this;

		[Token(Token = "0x170003C1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60021FB")]
			[Address(RVA = "0xC67B20", Offset = "0xC67B20", VA = "0xC67B20", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003C2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60021FD")]
			[Address(RVA = "0xC67B90", Offset = "0xC67B90", VA = "0xC67B90", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60021F8")]
		[Address(RVA = "0xC674E4", Offset = "0xC674E4", VA = "0xC674E4")]
		[DebuggerHidden]
		public <DoRecording>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x60021F9")]
		[Address(RVA = "0xC67A2C", Offset = "0xC67A2C", VA = "0xC67A2C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60021FA")]
		[Address(RVA = "0xC67A30", Offset = "0xC67A30", VA = "0xC67A30", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60021FC")]
		[Address(RVA = "0xC67B28", Offset = "0xC67B28", VA = "0xC67B28", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BF648", Offset = "0x9BF648")]
	private float <PuzzleTimerSeconds>k__BackingField;

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject _shine;

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _solved;

	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private FlourishPuzzleBeacon[] _beacons;

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private SequencerController _controller;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<int> _uniqueIndicesRecorded;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Coroutine _recordingCoroutine;

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BF668", Offset = "0x9BF668")]
	private LightPyramidPuzzle <LinkedPuzzlePyramid>k__BackingField;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float _oldProgress;

	[Token(Token = "0x1700006D")]
	public float PuzzleTimerSeconds
	{
		[Token(Token = "0x60004AC")]
		[Address(RVA = "0xC66918", Offset = "0xC66918", VA = "0xC66918", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CCF70", Offset = "0x9CCF70")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60004AD")]
		[Address(RVA = "0xC66920", Offset = "0xC66920", VA = "0xC66920", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CCF80", Offset = "0x9CCF80")]
		set
		{
		}
	}

	[Token(Token = "0x1700006E")]
	public LightPyramidPuzzle LinkedPuzzlePyramid
	{
		[Token(Token = "0x60004B2")]
		[Address(RVA = "0xC66E70", Offset = "0xC66E70", VA = "0xC66E70", Slot = "6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CCFB0", Offset = "0x9CCFB0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60004B3")]
		[Address(RVA = "0xC66E78", Offset = "0xC66E78", VA = "0xC66E78", Slot = "7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CCFC0", Offset = "0x9CCFC0")]
		set
		{
		}
	}

	[Token(Token = "0x1700006F")]
	public float PuzzleProgress
	{
		[Token(Token = "0x60004B4")]
		[Address(RVA = "0xC66E80", Offset = "0xC66E80", VA = "0xC66E80", Slot = "8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1400000E")]
	public event Action<IPuzzle> PuzzleSolved
	{
		[Token(Token = "0x60004AE")]
		[Address(RVA = "0xC66928", Offset = "0xC66928", VA = "0xC66928")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CCF90", Offset = "0x9CCF90")]
		add
		{
		}
		[Token(Token = "0x60004AF")]
		[Address(RVA = "0xC66A14", Offset = "0xC66A14", VA = "0xC66A14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CCFA0", Offset = "0x9CCFA0")]
		remove
		{
		}
	}

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0xC66B00", Offset = "0xC66B00", VA = "0xC66B00", Slot = "9")]
	public void ResetPuzzle()
	{
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0xC66CCC", Offset = "0xC66CCC", VA = "0xC66CCC", Slot = "10")]
	public void SolvePuzzle(bool silent)
	{
	}

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0xC66F3C", Offset = "0xC66F3C", VA = "0xC66F3C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0xC6719C", Offset = "0xC6719C", VA = "0xC6719C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004B7")]
	[Address(RVA = "0xC671C8", Offset = "0xC671C8", VA = "0xC671C8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CCFD0", Offset = "0x9CCFD0")]
	private IEnumerator BeaconIterate()
	{
		return null;
	}

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0xC67268", Offset = "0xC67268", VA = "0xC67268")]
	private void OnInputRecorded(int index, SequencerController source)
	{
	}

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0xC67470", Offset = "0xC67470", VA = "0xC67470")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CD034", Offset = "0x9CD034")]
	private IEnumerator DoRecording()
	{
		return null;
	}

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0xC67510", Offset = "0xC67510", VA = "0xC67510")]
	public FlourishPuzzle()
	{
	}
}
[Token(Token = "0x2000093")]
public class FlourishPuzzleBeacon : MonoBehaviour
{
	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int BeaconId;

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0xC67B98", Offset = "0xC67B98", VA = "0xC67B98")]
	public FlourishPuzzleBeacon()
	{
	}
}
[Token(Token = "0x2000094")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9B8A4C", Offset = "0x9B8A4C")]
public class InteractiveCoreTouchPuzzle : MonoBehaviour
{
	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool OnTouch;

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool OnRemoteTouch;

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool OnGrab;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool OnRelease;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject _shine;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BF678", Offset = "0x9BF678")]
	private bool <_solved>k__BackingField;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool AddShineEffect;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject MessageTarget;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool FindPlantEntityParentAndMessage;

	[Token(Token = "0x17000070")]
	public bool _solved
	{
		[Token(Token = "0x60004BD")]
		[Address(RVA = "0xDD4D44", Offset = "0xDD4D44", VA = "0xDD4D44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CD0A8", Offset = "0x9CD0A8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60004BC")]
		[Address(RVA = "0xDD4D38", Offset = "0xDD4D38", VA = "0xDD4D38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CD098", Offset = "0x9CD098")]
		private set
		{
		}
	}

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0xDD4D4C", Offset = "0xDD4D4C", VA = "0xDD4D4C")]
	private void Start()
	{
	}

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0xDD510C", Offset = "0xDD510C", VA = "0xDD510C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0xDD51BC", Offset = "0xDD51BC", VA = "0xDD51BC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0xDD526C", Offset = "0xDD526C", VA = "0xDD526C")]
	private void SendMessage(PlayerControllerInput input)
	{
	}

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0xDD54F4", Offset = "0xDD54F4", VA = "0xDD54F4")]
	public void DestroyShine()
	{
	}

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0xDD55A4", Offset = "0xDD55A4", VA = "0xDD55A4")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9CD0B8", Offset = "0x9CD0B8")]
	public void Solve()
	{
	}

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0xDD55AC", Offset = "0xDD55AC", VA = "0xDD55AC")]
	public InteractiveCoreTouchPuzzle()
	{
	}
}
[Token(Token = "0x2000095")]
public class KelpBiomePuzzleEffect : MonoBehaviour
{
	[Token(Token = "0x60004C5")]
	[Address(RVA = "0xBECF58", Offset = "0xBECF58", VA = "0xBECF58")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004C6")]
	[Address(RVA = "0xBECFE0", Offset = "0xBECFE0", VA = "0xBECFE0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004C7")]
	[Address(RVA = "0xBED068", Offset = "0xBED068", VA = "0xBED068")]
	private void HandlePuzzleSolved(PuzzleSolvedMessage message)
	{
	}

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0xBED2B4", Offset = "0xBED2B4", VA = "0xBED2B4")]
	public KelpBiomePuzzleEffect()
	{
	}
}
[Token(Token = "0x2000096")]
public class PlaneShineAttachPoint : MonoBehaviour
{
	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float ShineRadius;

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0xEB3690", Offset = "0xEB3690", VA = "0xEB3690")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0xEB36E8", Offset = "0xEB36E8", VA = "0xEB36E8")]
	public PlaneShineAttachPoint()
	{
	}
}
[Token(Token = "0x2000097")]
public enum PlantPuzzleType
{
	[Token(Token = "0x4000440")]
	Flourish
}
[Token(Token = "0x2000098")]
public static class PlantPuzzleMapping
{
	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<PlantPuzzleType, Type> _plantMapping;

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0xEB787C", Offset = "0xEB787C", VA = "0xEB787C")]
	public static Type GetComponentForPuzzleType(PlantPuzzleType puzzleType)
	{
		return null;
	}
}
[Token(Token = "0x2000099")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9B8AB0", Offset = "0x9B8AB0")]
public class PlantShine : MonoBehaviour
{
	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PlantEntity _plantEntity;

	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject _shine;

	[Token(Token = "0x17000071")]
	public Vector3 Position
	{
		[Token(Token = "0x60004D1")]
		[Address(RVA = "0xEBB410", Offset = "0xEBB410", VA = "0xEBB410")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0xEBB268", Offset = "0xEBB268", VA = "0xEBB268")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0xEBB35C", Offset = "0xEBB35C", VA = "0xEBB35C")]
	private void ReplaceShine(int index)
	{
	}

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0xEBB320", Offset = "0xEBB320", VA = "0xEBB320")]
	public void Spawn()
	{
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0xEBB3A4", Offset = "0xEBB3A4", VA = "0xEBB3A4")]
	public void DestroyShine()
	{
	}

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0xEBB4C4", Offset = "0xEBB4C4", VA = "0xEBB4C4")]
	public PlantShine()
	{
	}
}
[Token(Token = "0x200009A")]
public class SpawnLightGemAfterFlourish : MonoBehaviour
{
	[Token(Token = "0x20004E8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB0C8", Offset = "0x9BB0C8")]
	private sealed class <>c__DisplayClass2_0
	{
		[Token(Token = "0x4001590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SpawnLightGemAfterFlourish <>4__this;

		[Token(Token = "0x4001591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LightGemSpawnerTimer lightGemSpawner;

		[Token(Token = "0x60021FE")]
		[Address(RVA = "0xD70B34", Offset = "0xD70B34", VA = "0xD70B34")]
		public <>c__DisplayClass2_0()
		{
		}

		[Token(Token = "0x60021FF")]
		[Address(RVA = "0xD70BE4", Offset = "0xD70BE4", VA = "0xD70BE4")]
		internal void <Start>b__0(IPuzzle puzzle)
		{
		}
	}

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool _solved;

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private InstantiatePrefab _spawner;

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0xD70974", Offset = "0xD70974", VA = "0xD70974")]
	private void Start()
	{
	}

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0xD70B3C", Offset = "0xD70B3C", VA = "0xD70B3C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0xD70BDC", Offset = "0xD70BDC", VA = "0xD70BDC")]
	public SpawnLightGemAfterFlourish()
	{
	}
}
[Token(Token = "0x200009B")]
public class SpawnLightGemAfterTouchOrWater : MonoBehaviour
{
	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool _solved;

	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private InstantiatePrefab _spawner;

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private LightGemSpawnerTimer _lightGemSpawner;

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0xD70C98", Offset = "0xD70C98", VA = "0xD70C98")]
	private void Start()
	{
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0xD70E6C", Offset = "0xD70E6C", VA = "0xD70E6C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9CD0F0", Offset = "0x9CD0F0")]
	private void Solve()
	{
	}

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0xD70F00", Offset = "0xD70F00", VA = "0xD70F00")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0xD70FA0", Offset = "0xD70FA0", VA = "0xD70FA0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0xD71044", Offset = "0xD71044", VA = "0xD71044")]
	public SpawnLightGemAfterTouchOrWater()
	{
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0xD7104C", Offset = "0xD7104C", VA = "0xD7104C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CD128", Offset = "0x9CD128")]
	private void <Start>b__3_0(PlantEntity source, float amount, Vector3? spray, InputHandedness? hand, Vector3? velocity)
	{
	}

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0xD71050", Offset = "0xD71050", VA = "0xD71050")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CD138", Offset = "0x9CD138")]
	private void <Start>b__3_1(IReadOnlyList<JellySystem.JellyTouchResult> results, float dt)
	{
	}
}
[Token(Token = "0x200009C")]
public class SquigglePlant : MonoBehaviour, IHeroPlantPuzzle
{
	[Token(Token = "0x20004E9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB0D8", Offset = "0x9BB0D8")]
	private sealed class <>c__DisplayClass19_0
	{
		[Token(Token = "0x4001592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform trans;

		[Token(Token = "0x4001593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractiveCore fruitInteractive;

		[Token(Token = "0x4001594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SquigglePlant <>4__this;

		[Token(Token = "0x6002200")]
		[Address(RVA = "0xD7369C", Offset = "0xD7369C", VA = "0xD7369C")]
		public <>c__DisplayClass19_0()
		{
		}

		[Token(Token = "0x6002201")]
		[Address(RVA = "0xD7409C", Offset = "0xD7409C", VA = "0xD7409C")]
		internal void <GrowFruits>b__0(PuzzleSolvedMessage _)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20004EA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB0E8", Offset = "0x9BB0E8")]
	private sealed class <>c
	{
		[Token(Token = "0x4001595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static InteractiveCore.InteractiveEvent <>9__19_1;

		[Token(Token = "0x6002203")]
		[Address(RVA = "0xD74060", Offset = "0xD74060", VA = "0xD74060")]
		public <>c()
		{
		}

		[Token(Token = "0x6002204")]
		[Address(RVA = "0xD74068", Offset = "0xD74068", VA = "0xD74068")]
		internal void <GrowFruits>b__19_1(PlayerControllerInput input)
		{
		}
	}

	[Token(Token = "0x20004EB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB0F8", Offset = "0x9BB0F8")]
	private sealed class <>c__DisplayClass21_0
	{
		[Token(Token = "0x4001597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject shine;

		[Token(Token = "0x6002205")]
		[Address(RVA = "0xD73CEC", Offset = "0xD73CEC", VA = "0xD73CEC")]
		public <>c__DisplayClass21_0()
		{
		}

		[Token(Token = "0x6002206")]
		[Address(RVA = "0xD740D0", Offset = "0xD740D0", VA = "0xD740D0")]
		internal void <SolvePuzzle>b__0(InteractiveCore.Messages.HoldItemStateChangedEvent message)
		{
		}
	}

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly string __FRUIT_ROOT_TRANSFORM_NAME;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BF688", Offset = "0x9BF688")]
	[SerializeField]
	private GameObject _fruitPrefab;

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private PersistentEntity _rewardPersistentEntity;

	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform _rewardSpawnTransform;

	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[EventRef]
	private string _rewardEvent;

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform _fruitRootTransform;

	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int _numFruitsGrabbed;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Dictionary<Transform, InteractiveCore> _fruitTransformLookup;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Dictionary<Transform, Rigidbody> _fruitRigidbodyLookup;

	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private SkinnedMeshRenderer _renderer;

	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BF72C", Offset = "0x9BF72C")]
	private bool <IsPuzzleSolved>k__BackingField;

	[Token(Token = "0x17000072")]
	private int _numFruitsToGrab
	{
		[Token(Token = "0x60004DD")]
		[Address(RVA = "0xD72FC4", Offset = "0xD72FC4", VA = "0xD72FC4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000073")]
	public bool IsPuzzleSolved
	{
		[Token(Token = "0x60004DE")]
		[Address(RVA = "0xD72FF4", Offset = "0xD72FF4", VA = "0xD72FF4", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CD148", Offset = "0x9CD148")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60004DF")]
		[Address(RVA = "0xD72FFC", Offset = "0xD72FFC", VA = "0xD72FFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CD158", Offset = "0x9CD158")]
		private set
		{
		}
	}

	[Token(Token = "0x17000074")]
	public List<IActivatable> Activatables
	{
		[Token(Token = "0x60004E0")]
		[Address(RVA = "0xD73008", Offset = "0xD73008", VA = "0xD73008", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0xD73010", Offset = "0xD73010", VA = "0xD73010")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0xD730D4", Offset = "0xD730D4", VA = "0xD730D4")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9CD168", Offset = "0x9CD168")]
	private void GrowFruits()
	{
	}

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0xD736A4", Offset = "0xD736A4", VA = "0xD736A4")]
	private void OnFruitGrabbed(Transform fruitTransform, InteractiveCore fruitInteractive)
	{
	}

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0xD738E0", Offset = "0xD738E0", VA = "0xD738E0", Slot = "4")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9CD1A0", Offset = "0x9CD1A0")]
	public void SolvePuzzle()
	{
	}

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0xD73CF4", Offset = "0xD73CF4", VA = "0xD73CF4")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9CD1D8", Offset = "0x9CD1D8")]
	private void SimulateGrabFruit()
	{
	}

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0xD73F08", Offset = "0xD73F08", VA = "0xD73F08")]
	public SquigglePlant()
	{
	}
}
[Token(Token = "0x200009D")]
public class StarPlant : MonoBehaviour, IHeroPlantPuzzle
{
	[Token(Token = "0x20004EC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB108", Offset = "0x9BB108")]
	private sealed class <>c__DisplayClass17_0
	{
		[Token(Token = "0x4001598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public StarPlant <>4__this;

		[Token(Token = "0x4001599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float timeSecsToOpen;

		[Token(Token = "0x6002207")]
		[Address(RVA = "0xD749B8", Offset = "0xD749B8", VA = "0xD749B8")]
		public <>c__DisplayClass17_0()
		{
		}

		[Token(Token = "0x6002208")]
		[Address(RVA = "0xD749C8", Offset = "0xD749C8", VA = "0xD749C8")]
		internal void <SolvePuzzle>b__0()
		{
		}

		[Token(Token = "0x6002209")]
		[Address(RVA = "0xD74A0C", Offset = "0xD74A0C", VA = "0xD74A0C")]
		internal void <SolvePuzzle>b__1()
		{
		}
	}

	[Token(Token = "0x20004ED")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB118", Offset = "0x9BB118")]
	private sealed class <>c__DisplayClass17_1
	{
		[Token(Token = "0x400159A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject shine;

		[Token(Token = "0x600220A")]
		[Address(RVA = "0xD75008", Offset = "0xD75008", VA = "0xD75008")]
		public <>c__DisplayClass17_1()
		{
		}

		[Token(Token = "0x600220B")]
		[Address(RVA = "0xD75010", Offset = "0xD75010", VA = "0xD75010")]
		internal void <SolvePuzzle>b__2(InteractiveCore.Messages.HoldItemStateChangedEvent message)
		{
		}
	}

	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private PersistentEntity _rewardEntity;

	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform _rewardSpawnTransform;

	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[EventRef]
	private string _touchEvent;

	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[EventRef]
	private string _rewardEvent;

	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Transform _shineTransform;

	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private InteractiveCore _interactiveCore;

	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private SkinnedMeshRenderer _renderer;

	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BF7DC", Offset = "0x9BF7DC")]
	private bool <IsPuzzleSolved>k__BackingField;

	[Token(Token = "0x17000075")]
	public bool IsPuzzleSolved
	{
		[Token(Token = "0x60004E8")]
		[Address(RVA = "0xD74390", Offset = "0xD74390", VA = "0xD74390", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CD210", Offset = "0x9CD210")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60004E9")]
		[Address(RVA = "0xD74398", Offset = "0xD74398", VA = "0xD74398")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CD220", Offset = "0x9CD220")]
		private set
		{
		}
	}

	[Token(Token = "0x17000076")]
	public List<IActivatable> Activatables
	{
		[Token(Token = "0x60004EA")]
		[Address(RVA = "0xD743A4", Offset = "0xD743A4", VA = "0xD743A4", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0xD743AC", Offset = "0xD743AC", VA = "0xD743AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0xD74518", Offset = "0xD74518", VA = "0xD74518")]
	private void Update()
	{
	}

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0xD745EC", Offset = "0xD745EC", VA = "0xD745EC")]
	private void OnTouchFlower(PlayerControllerInput input)
	{
	}

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0xD749B0", Offset = "0xD749B0", VA = "0xD749B0", Slot = "4")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9CD230", Offset = "0x9CD230")]
	public void SolvePuzzle()
	{
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0xD745F0", Offset = "0xD745F0", VA = "0xD745F0")]
	public void SolvePuzzle(PlayerControllerInput input)
	{
	}

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0xD749C0", Offset = "0xD749C0", VA = "0xD749C0")]
	public StarPlant()
	{
	}
}
[Token(Token = "0x200009E")]
public class TrumpetPlant : MonoBehaviour, IHeroPlantPuzzle
{
	[Token(Token = "0x20004EE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB128", Offset = "0x9BB128")]
	private sealed class <>c__DisplayClass22_0
	{
		[Token(Token = "0x400159B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject shine;

		[Token(Token = "0x600220C")]
		[Address(RVA = "0xF84E64", Offset = "0xF84E64", VA = "0xF84E64")]
		public <>c__DisplayClass22_0()
		{
		}

		[Token(Token = "0x600220D")]
		[Address(RVA = "0xF85170", Offset = "0xF85170", VA = "0xF85170")]
		internal void <SolvePuzzle>b__0(InteractiveCore.Messages.HoldItemStateChangedEvent message)
		{
		}
	}

	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3 __PARENTLOCALFORWARD;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private int _requiredNodesToPull;

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9BF7FC", Offset = "0x9BF7FC")]
	private float _pullStateOffset;

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private PersistentEntity _rewardPersistentEntity;

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform _rewardTransform;

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject _rewardInstance;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[EventRef]
	private string _rewardEvent;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<GrabbableNodePrototype> _grabbableNodes;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int _numNodesPulled;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private JellySystem _jellySystem;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private SkinnedMeshRenderer _renderer;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Dictionary<GrabbableNodePrototype, JellyPoint> _jellyPointLookup;

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<GrabbableNodePrototype> _pulledNodes;

	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BF894", Offset = "0x9BF894")]
	private bool <IsPuzzleSolved>k__BackingField;

	[Token(Token = "0x17000077")]
	public bool IsPuzzleSolved
	{
		[Token(Token = "0x60004F1")]
		[Address(RVA = "0xF840DC", Offset = "0xF840DC", VA = "0xF840DC", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CD268", Offset = "0x9CD268")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60004F2")]
		[Address(RVA = "0xF840E4", Offset = "0xF840E4", VA = "0xF840E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CD278", Offset = "0x9CD278")]
		private set
		{
		}
	}

	[Token(Token = "0x17000078")]
	public List<IActivatable> Activatables
	{
		[Token(Token = "0x60004F3")]
		[Address(RVA = "0xF840F0", Offset = "0xF840F0", VA = "0xF840F0", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0xF840F8", Offset = "0xF840F8", VA = "0xF840F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0xF841D0", Offset = "0xF841D0", VA = "0xF841D0")]
	private void Start()
	{
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0xF844A8", Offset = "0xF844A8", VA = "0xF844A8")]
	private void OnNodePulled(GrabbableNodePrototype pulledNode)
	{
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0xF848C0", Offset = "0xF848C0", VA = "0xF848C0", Slot = "4")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9CD288", Offset = "0x9CD288")]
	public void SolvePuzzle()
	{
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0xF84E6C", Offset = "0xF84E6C", VA = "0xF84E6C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9CD2C0", Offset = "0x9CD2C0")]
	public void ResetPlant()
	{
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0xF85048", Offset = "0xF85048", VA = "0xF85048")]
	public TrumpetPlant()
	{
	}
}
[Token(Token = "0x200009F")]
public class PlantRemovalCollider : MonoBehaviour
{
	[Token(Token = "0x20004EF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB138", Offset = "0x9BB138")]
	private sealed class <>c__DisplayClass6_0
	{
		[Token(Token = "0x400159C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlantRemovalCollider <>4__this;

		[Token(Token = "0x400159D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject dirtBall;

		[Token(Token = "0x600220E")]
		[Address(RVA = "0xEB7DE8", Offset = "0xEB7DE8", VA = "0xEB7DE8")]
		public <>c__DisplayClass6_0()
		{
		}

		[Token(Token = "0x600220F")]
		[Address(RVA = "0xEB7E58", Offset = "0xEB7E58", VA = "0xEB7E58")]
		internal void <Awake>b__1(PlayerControllerInput input)
		{
		}

		[Token(Token = "0x6002210")]
		[Address(RVA = "0xEB808C", Offset = "0xEB808C", VA = "0xEB808C")]
		internal void <Awake>b__2(PlayerControllerInput input)
		{
		}

		[Token(Token = "0x6002211")]
		[Address(RVA = "0xEB83F0", Offset = "0xEB83F0", VA = "0xEB83F0")]
		internal void <Awake>b__3(PlayerControllerInput input)
		{
		}

		[Token(Token = "0x6002212")]
		[Address(RVA = "0xEB8E20", Offset = "0xEB8E20", VA = "0xEB8E20")]
		internal void <Awake>b__0(bool occupied)
		{
		}
	}

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SmallMovablePlanter Planter;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public InteractiveCore InteractiveCore;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Renderer DeathShaftVis;

	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float3 _startingLocalPosition;

	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float3 _startingObjectPosition;

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float PullRadius;

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0xEB79E0", Offset = "0xEB79E0", VA = "0xEB79E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0xEB7DF0", Offset = "0xEB7DF0", VA = "0xEB7DF0")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0xEB7E48", Offset = "0xEB7E48", VA = "0xEB7E48")]
	public PlantRemovalCollider()
	{
	}
}
[Token(Token = "0x20000A0")]
[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x9B8B14", Offset = "0x9B8B14")]
public class HeroPlantInspectorMethod : Attribute
{
	[Token(Token = "0x60004FE")]
	[Address(RVA = "0xDCC950", Offset = "0xDCC950", VA = "0xDCC950")]
	public HeroPlantInspectorMethod()
	{
	}
}
[Token(Token = "0x20000A1")]
[Flags]
public enum PlantInputMode
{
	[Token(Token = "0x4000471")]
	None = 0,
	[Token(Token = "0x4000472")]
	JellySystemVelocity = 1,
	[Token(Token = "0x4000473")]
	JellyTouchReporting = 2
}
[Token(Token = "0x20000A2")]
public static class PlantUtils
{
	[Token(Token = "0x20004F0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB148", Offset = "0x9BB148")]
	private sealed class <>c__DisplayClass0_0<T> where T : Component, IActivatable
	{
		[Token(Token = "0x400159E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SequencerController controller;

		[Token(Token = "0x6002213")]
		public <>c__DisplayClass0_0()
		{
		}
	}

	[Token(Token = "0x20004F1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB158", Offset = "0x9BB158")]
	private sealed class <>c__DisplayClass0_1<T> where T : Component, IActivatable
	{
		[Token(Token = "0x400159F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int temp;

		[Token(Token = "0x40015A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public <>c__DisplayClass0_0<T> CS$<>8__locals1;

		[Token(Token = "0x6002214")]
		public <>c__DisplayClass0_1()
		{
		}

		[Token(Token = "0x6002215")]
		internal void <AddActivatables>b__0()
		{
		}
	}

	[Token(Token = "0x20004F2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB168", Offset = "0x9BB168")]
	private sealed class <DoRandomMusic>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40015A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40015A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40015A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int? maxSequenceLength;

		[Token(Token = "0x40015A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SequencerController controller;

		[Token(Token = "0x40015A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int[] indexConstraints;

		[Token(Token = "0x40015A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int numBeatsBetweenSequences;

		[Token(Token = "0x40015A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int <sequenceLength>5__2;

		[Token(Token = "0x40015A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int <i>5__3;

		[Token(Token = "0x170003C3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002219")]
			[Address(RVA = "0xEBC208", Offset = "0xEBC208", VA = "0xEBC208", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003C4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600221B")]
			[Address(RVA = "0xEBC278", Offset = "0xEBC278", VA = "0xEBC278", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002216")]
		[Address(RVA = "0xEBB5E0", Offset = "0xEBB5E0", VA = "0xEBB5E0")]
		[DebuggerHidden]
		public <DoRandomMusic>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6002217")]
		[Address(RVA = "0xEBBF78", Offset = "0xEBBF78", VA = "0xEBBF78", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002218")]
		[Address(RVA = "0xEBBF7C", Offset = "0xEBBF7C", VA = "0xEBBF7C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600221A")]
		[Address(RVA = "0xEBC210", Offset = "0xEBC210", VA = "0xEBC210", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004F3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB178", Offset = "0x9BB178")]
	private sealed class <DoWiggleJelly>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40015A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40015AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40015AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x40015AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float frequency;

		[Token(Token = "0x40015AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float amplitude;

		[Token(Token = "0x40015AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public JellySystem jellySystem;

		[Token(Token = "0x40015AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 gravityDirection;

		[Token(Token = "0x40015B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float duration;

		[Token(Token = "0x40015B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x170003C5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600221F")]
			[Address(RVA = "0xEBC438", Offset = "0xEBC438", VA = "0xEBC438", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003C6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002221")]
			[Address(RVA = "0xEBC4A8", Offset = "0xEBC4A8", VA = "0xEBC4A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600221C")]
		[Address(RVA = "0xEBB75C", Offset = "0xEBB75C", VA = "0xEBB75C")]
		[DebuggerHidden]
		public <DoWiggleJelly>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x600221D")]
		[Address(RVA = "0xEBC280", Offset = "0xEBC280", VA = "0xEBC280", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600221E")]
		[Address(RVA = "0xEBC284", Offset = "0xEBC284", VA = "0xEBC284", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002220")]
		[Address(RVA = "0xEBC440", Offset = "0xEBC440", VA = "0xEBC440", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004F4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB188", Offset = "0x9BB188")]
	private sealed class <>c__DisplayClass6_0
	{
		[Token(Token = "0x40015B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SkinnedMeshRenderer renderer;

		[Token(Token = "0x40015B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int blendShapeIndex;

		[Token(Token = "0x40015B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool open;

		[Token(Token = "0x40015B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float duration;

		[Token(Token = "0x6002222")]
		[Address(RVA = "0xEBB99C", Offset = "0xEBB99C", VA = "0xEBB99C")]
		public <>c__DisplayClass6_0()
		{
		}

		[Token(Token = "0x6002223")]
		[Address(RVA = "0xEBBCF8", Offset = "0xEBBCF8", VA = "0xEBBCF8")]
		internal void <DoBlendShapeTween>b__0(float x)
		{
		}

		[Token(Token = "0x6002224")]
		[Address(RVA = "0xEBBD40", Offset = "0xEBBD40", VA = "0xEBBD40")]
		internal void <DoBlendShapeTween>b__1()
		{
		}
	}

	[Token(Token = "0x20004F5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB198", Offset = "0x9BB198")]
	private sealed class <>c__DisplayClass7_0
	{
		[Token(Token = "0x40015B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int i;

		[Token(Token = "0x40015B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SkinnedMeshRenderer renderer;

		[Token(Token = "0x40015B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool open;

		[Token(Token = "0x40015B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float duration;

		[Token(Token = "0x40015BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action<int> callback;

		[Token(Token = "0x6002225")]
		[Address(RVA = "0xEBBB28", Offset = "0xEBBB28", VA = "0xEBBB28")]
		public <>c__DisplayClass7_0()
		{
		}

		[Token(Token = "0x6002226")]
		[Address(RVA = "0xEBBD64", Offset = "0xEBBD64", VA = "0xEBBD64")]
		internal void <TweenAllBlendShapes>b__0()
		{
		}
	}

	[Token(Token = "0x20004F6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB1A8", Offset = "0x9BB1A8")]
	private sealed class <>c__DisplayClass7_1
	{
		[Token(Token = "0x40015BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int temp;

		[Token(Token = "0x40015BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public <>c__DisplayClass7_0 CS$<>8__locals1;

		[Token(Token = "0x6002227")]
		[Address(RVA = "0xEBBE7C", Offset = "0xEBBE7C", VA = "0xEBBE7C")]
		public <>c__DisplayClass7_1()
		{
		}

		[Token(Token = "0x6002228")]
		[Address(RVA = "0xEBBE84", Offset = "0xEBBE84", VA = "0xEBBE84")]
		internal void <TweenAllBlendShapes>b__1()
		{
		}
	}

	[Token(Token = "0x20004F7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB1B8", Offset = "0x9BB1B8")]
	private sealed class <>c__DisplayClass9_0
	{
		[Token(Token = "0x40015BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SkinnedMeshRenderer renderer;

		[Token(Token = "0x40015BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int blendShapeIndex;

		[Token(Token = "0x6002229")]
		[Address(RVA = "0xEBBCF0", Offset = "0xEBBCF0", VA = "0xEBBCF0")]
		public <>c__DisplayClass9_0()
		{
		}

		[Token(Token = "0x600222A")]
		[Address(RVA = "0xEBBEF8", Offset = "0xEBBEF8", VA = "0xEBBEF8")]
		internal float <TweenBlendShape>b__0()
		{
			return default(float);
		}

		[Token(Token = "0x600222B")]
		[Address(RVA = "0xEBBF30", Offset = "0xEBBF30", VA = "0xEBBF30")]
		internal void <TweenBlendShape>b__1(float x)
		{
		}
	}

	[Token(Token = "0x60004FF")]
	public static List<T> AddActivatables<T>(this IHeroPlantPuzzle plant, JellySystem jellySystem, SequencerController controller, float activationThreshold) where T : Component, IActivatable
	{
		return null;
	}

	[Token(Token = "0x6000500")]
	public static void ToggleActivatables<T>(this IHeroPlantPuzzle plant, bool state) where T : Component, IActivatable
	{
	}

	[Token(Token = "0x6000501")]
	[Address(RVA = "0xEBB4CC", Offset = "0xEBB4CC", VA = "0xEBB4CC")]
	public static Coroutine PlayRandomMusicOnSequencer(SequencerController controller, MonoBehaviour coroutineRunner, [Optional] int[] indexConstraints, int numBeatsBetweenSequences = 4, [Optional] int? maxSequenceLength)
	{
		return null;
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0xEBB514", Offset = "0xEBB514", VA = "0xEBB514")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CD318", Offset = "0x9CD318")]
	private static IEnumerator DoRandomMusic(SequencerController controller, int[] indexConstraints, int numBeatsBetweenSequences, int? maxSequenceLength)
	{
		return null;
	}

	[Token(Token = "0x6000503")]
	[Address(RVA = "0xEBB60C", Offset = "0xEBB60C", VA = "0xEBB60C")]
	public static Coroutine WiggleJellyGravity(MonoBehaviour coroutineRunner, JellySystem jellySystem, Vector3 gravityDirection, float delay, float duration = 3f, float frequency = 0.5f, float amplitude = 1f)
	{
		return null;
	}

	[Token(Token = "0x6000504")]
	[Address(RVA = "0xEBB64C", Offset = "0xEBB64C", VA = "0xEBB64C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CD37C", Offset = "0x9CD37C")]
	private static IEnumerator DoWiggleJelly(JellySystem jellySystem, Vector3 gravityDirection, float delay, float duration, float frequency, float amplitude = 1f)
	{
		return null;
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0xEBB788", Offset = "0xEBB788", VA = "0xEBB788")]
	public static Tweener DoBlendShapeTween(SkinnedMeshRenderer renderer, int blendShapeIndex, bool open, float duration)
	{
		return null;
	}

	[Token(Token = "0x6000506")]
	[Address(RVA = "0xEBB9A4", Offset = "0xEBB9A4", VA = "0xEBB9A4")]
	public static void TweenAllBlendShapes(int blendShapeCount, SkinnedMeshRenderer renderer, bool open, float duration, Action<int> callback, float startupDelay = 0f)
	{
	}

	[Token(Token = "0x6000507")]
	[Address(RVA = "0xEBBB30", Offset = "0xEBBB30", VA = "0xEBBB30")]
	public static void AdjustAllBlendShapes(int blendShapeCount, SkinnedMeshRenderer renderer, int blendShapeValue)
	{
	}

	[Token(Token = "0x6000508")]
	[Address(RVA = "0xEBBB9C", Offset = "0xEBBB9C", VA = "0xEBBB9C")]
	public static TweenerCore<float, float, FloatOptions> TweenBlendShape(this SkinnedMeshRenderer renderer, int blendShapeIndex, float finalVal, float time, Ease easing = Ease.OutBack)
	{
		return null;
	}
}
[Token(Token = "0x20000A3")]
public class SerpentEntity : MonoBehaviour
{
	[Token(Token = "0x20004F8")]
	public static class Messages
	{
		[Token(Token = "0x20006D9")]
		public struct SerpentHeadTouchedMessage
		{
			[Token(Token = "0x4001E07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public PlayerControllerInput Input;
		}
	}

	[Token(Token = "0x20004F9")]
	public enum WiggleMode
	{
		[Token(Token = "0x40015C0")]
		LandSnake,
		[Token(Token = "0x40015C1")]
		SeaSnake
	}

	[Token(Token = "0x20004FA")]
	public enum AnimationDriveMode
	{
		[Token(Token = "0x40015C3")]
		Time,
		[Token(Token = "0x40015C4")]
		Movement
	}

	[Serializable]
	[Token(Token = "0x20004FB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB1C8", Offset = "0x9BB1C8")]
	private sealed class <>c
	{
		[Token(Token = "0x40015C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40015C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static InteractiveCore.InteractiveEvent <>9__20_0;

		[Token(Token = "0x40015C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<Transform, Transform> <>9__43_0;

		[Token(Token = "0x40015C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static TweenCallback <>9__43_1;

		[Token(Token = "0x600222D")]
		[Address(RVA = "0xD691C8", Offset = "0xD691C8", VA = "0xD691C8")]
		public <>c()
		{
		}

		[Token(Token = "0x600222E")]
		[Address(RVA = "0xD691D0", Offset = "0xD691D0", VA = "0xD691D0")]
		internal void <Awake>b__20_0(PlayerControllerInput input)
		{
		}

		[Token(Token = "0x600222F")]
		[Address(RVA = "0xD69220", Offset = "0xD69220", VA = "0xD69220")]
		internal Transform <DoDeconstruct>b__43_0(Transform t)
		{
			return null;
		}

		[Token(Token = "0x6002230")]
		[Address(RVA = "0xD69250", Offset = "0xD69250", VA = "0xD69250")]
		internal void <DoDeconstruct>b__43_1()
		{
		}
	}

	[Token(Token = "0x20004FC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB1D8", Offset = "0x9BB1D8")]
	private sealed class <DoFollowSpline>d__38 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40015C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40015CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40015CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SerpentEntity <>4__this;

		[Token(Token = "0x40015CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float travelTime;

		[Token(Token = "0x40015CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SplineComputer spline;

		[Token(Token = "0x40015CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <deltaPercent>5__2;

		[Token(Token = "0x40015CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float <percent>5__3;

		[Token(Token = "0x40015D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool <tempTargetNeeded>5__4;

		[Token(Token = "0x170003C7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002234")]
			[Address(RVA = "0xD6A5CC", Offset = "0xD6A5CC", VA = "0xD6A5CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003C8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002236")]
			[Address(RVA = "0xD6A63C", Offset = "0xD6A63C", VA = "0xD6A63C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002231")]
		[Address(RVA = "0xD68FD4", Offset = "0xD68FD4", VA = "0xD68FD4")]
		[DebuggerHidden]
		public <DoFollowSpline>d__38(int <>1__state)
		{
		}

		[Token(Token = "0x6002232")]
		[Address(RVA = "0xD6A218", Offset = "0xD6A218", VA = "0xD6A218", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002233")]
		[Address(RVA = "0xD6A21C", Offset = "0xD6A21C", VA = "0xD6A21C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002235")]
		[Address(RVA = "0xD6A5D4", Offset = "0xD6A5D4", VA = "0xD6A5D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004FD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB1E8", Offset = "0x9BB1E8")]
	private sealed class <DoDeconstruct>d__43 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40015D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40015D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40015D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SerpentEntity <>4__this;

		[Token(Token = "0x40015D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x40015D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <elapsed>5__3;

		[Token(Token = "0x170003C9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600223A")]
			[Address(RVA = "0xD6A1A0", Offset = "0xD6A1A0", VA = "0xD6A1A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003CA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600223C")]
			[Address(RVA = "0xD6A210", Offset = "0xD6A210", VA = "0xD6A210", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002237")]
		[Address(RVA = "0xD690A0", Offset = "0xD690A0", VA = "0xD690A0")]
		[DebuggerHidden]
		public <DoDeconstruct>d__43(int <>1__state)
		{
		}

		[Token(Token = "0x6002238")]
		[Address(RVA = "0xD69604", Offset = "0xD69604", VA = "0xD69604", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002239")]
		[Address(RVA = "0xD69608", Offset = "0xD69608", VA = "0xD69608", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600223B")]
		[Address(RVA = "0xD6A1A8", Offset = "0xD6A1A8", VA = "0xD6A1A8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public WiggleMode Wiggle;

	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform GuidingTransform;

	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] ChildLinks;

	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform Target;

	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve WiggleStrengthCurve;

	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BF8A4", Offset = "0x9BF8A4")]
	[SerializeField]
	[EventRef]
	private string _sfxLoop;

	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AudioService.AudioServiceLoopHandle _sfxLoopHandle;

	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BF900", Offset = "0x9BF900")]
	public float WiggleWidth;

	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float WiggleFreq;

	[Token(Token = "0x400047D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float WigglesInBody;

	[Token(Token = "0x400047E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float3[] _previousParentalUps;

	[Token(Token = "0x400047F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float[] _distanceFromParentalLink;

	[Token(Token = "0x4000480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float[] _vTime;

	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float3[] _anchorWorldPos;

	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public AnimationDriveMode animationDriveMode;

	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float animationTimeScalar;

	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public InteractiveCore headInteractiveCore;

	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float Amplitude;

	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float PeriodScalar;

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float3 prevHeadPos;

	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float3 headPos;

	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float headTime;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float3 TwistCompensation;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public float FollowDist;

	[Token(Token = "0x400048C")]
	private const string paramIndexVelocity = "Waving_Serpent";

	[Token(Token = "0x400048D")]
	private const string paramIndexVolume = "SerpentVolume";

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Transform headTransform;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform skeletonRoot;

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform headCircles;

	[Token(Token = "0x6000509")]
	[Address(RVA = "0xD66760", Offset = "0xD66760", VA = "0xD66760")]
	private void Awake()
	{
	}

	[Token(Token = "0x600050A")]
	[Address(RVA = "0xD66D5C", Offset = "0xD66D5C", VA = "0xD66D5C")]
	private void Update()
	{
	}

	[Token(Token = "0x600050B")]
	[Address(RVA = "0xD684A4", Offset = "0xD684A4", VA = "0xD684A4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600050C")]
	[Address(RVA = "0xD68588", Offset = "0xD68588", VA = "0xD68588")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600050D")]
	[Address(RVA = "0xD68324", Offset = "0xD68324", VA = "0xD68324")]
	private void UpdateAudio()
	{
	}

	[Token(Token = "0x600050E")]
	[Address(RVA = "0xD66D8C", Offset = "0xD66D8C", VA = "0xD66D8C")]
	private void PrePhysicsUpdate(float deltaTime)
	{
	}

	[Token(Token = "0x600050F")]
	[Address(RVA = "0xD685CC", Offset = "0xD685CC", VA = "0xD685CC")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000510")]
	[Address(RVA = "0xD688F4", Offset = "0xD688F4", VA = "0xD688F4")]
	public void TeleportTo(Vector3 worldPos, Quaternion worldRot)
	{
	}

	[Token(Token = "0x6000511")]
	[Address(RVA = "0xD68F18", Offset = "0xD68F18", VA = "0xD68F18")]
	public IEnumerator FollowSpline(SplineComputer spline, float travelTime)
	{
		return null;
	}

	[Token(Token = "0x6000512")]
	[Address(RVA = "0xD68F1C", Offset = "0xD68F1C", VA = "0xD68F1C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CD3F0", Offset = "0x9CD3F0")]
	private IEnumerator DoFollowSpline(SplineComputer spline, float travelTime)
	{
		return null;
	}

	[Token(Token = "0x6000513")]
	[Address(RVA = "0xD69000", Offset = "0xD69000", VA = "0xD69000")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9CD454", Offset = "0x9CD454")]
	public void PlayDeconstruct()
	{
	}

	[Token(Token = "0x6000514")]
	[Address(RVA = "0xD6902C", Offset = "0xD6902C", VA = "0xD6902C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CD48C", Offset = "0x9CD48C")]
	private IEnumerator DoDeconstruct()
	{
		return null;
	}

	[Token(Token = "0x6000515")]
	[Address(RVA = "0xD690CC", Offset = "0xD690CC", VA = "0xD690CC")]
	public SerpentEntity()
	{
	}
}
[Token(Token = "0x20000A4")]
public class SimpleBiomeKelp : MonoBehaviour
{
	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Animator _animator;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public InteractiveCore RewardCore;

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool _solved;

	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 _capsuleOffset;

	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private JellySystem _system;

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private int _lowestGrabbableNode;

	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int _highestGrabbedChain;

	[Token(Token = "0x6000516")]
	[Address(RVA = "0xD6C560", Offset = "0xD6C560", VA = "0xD6C560")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000517")]
	[Address(RVA = "0xD6C5F0", Offset = "0xD6C5F0", VA = "0xD6C5F0")]
	private void OnJellyGrabbedCallback(InputHandedness hand, bool grabbed, int2 pointIndex)
	{
	}

	[Token(Token = "0x6000518")]
	[Address(RVA = "0xD6C680", Offset = "0xD6C680", VA = "0xD6C680")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000519")]
	[Address(RVA = "0xD6C8AC", Offset = "0xD6C8AC", VA = "0xD6C8AC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600051A")]
	[Address(RVA = "0xD6C9F8", Offset = "0xD6C9F8", VA = "0xD6C9F8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600051B")]
	[Address(RVA = "0xD6CB24", Offset = "0xD6CB24", VA = "0xD6CB24")]
	private void OnHitReward(PlayerControllerInput input)
	{
	}

	[Token(Token = "0x600051C")]
	[Address(RVA = "0xD6CE70", Offset = "0xD6CE70", VA = "0xD6CE70")]
	public SimpleBiomeKelp()
	{
	}
}
[Token(Token = "0x20000A5")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9B8B48", Offset = "0x9B8B48")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9B8B48", Offset = "0x9B8B48")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9B8B48", Offset = "0x9B8B48")]
public class SpawningEgg : MonoBehaviour, IFujiSerializable
{
	[Token(Token = "0x20004FE")]
	public interface IEggSpawnable
	{
		[Token(Token = "0x600223D")]
		Vector3 RestingLocation();

		[Token(Token = "0x600223E")]
		void SetInitialLocation(Vector3 worldPos);

		[Token(Token = "0x600223F")]
		void OnPostSpawn();

		[Token(Token = "0x6002240")]
		void OnPreDespawn();
	}

	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Prefab;

	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject _instance;

	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _velocityToSmash;

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private PersistentEntity _entity;

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _instanceSpawned;

	[Token(Token = "0x17000079")]
	[FujiSerialized]
	public bool Smashed
	{
		[Token(Token = "0x600051E")]
		[Address(RVA = "0xD71390", Offset = "0xD71390", VA = "0xD71390")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600051D")]
		[Address(RVA = "0xD7128C", Offset = "0xD7128C", VA = "0xD7128C")]
		set
		{
		}
	}

	[Token(Token = "0x600051F")]
	[Address(RVA = "0xD717CC", Offset = "0xD717CC", VA = "0xD717CC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000520")]
	[Address(RVA = "0xD71400", Offset = "0xD71400", VA = "0xD71400")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9CD4F0", Offset = "0x9CD4F0")]
	private void Spawn()
	{
	}

	[Token(Token = "0x6000521")]
	[Address(RVA = "0xD71874", Offset = "0xD71874", VA = "0xD71874")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000522")]
	[Address(RVA = "0xD71924", Offset = "0xD71924", VA = "0xD71924")]
	private void OnCollisionEnter(Collision other)
	{
	}

	[Token(Token = "0x6000523")]
	[Address(RVA = "0xD71A00", Offset = "0xD71A00", VA = "0xD71A00", Slot = "4")]
	public void OnPreSerialize()
	{
	}

	[Token(Token = "0x6000524")]
	[Address(RVA = "0xD71A04", Offset = "0xD71A04", VA = "0xD71A04", Slot = "5")]
	public void OnPostDeserialize()
	{
	}

	[Token(Token = "0x6000525")]
	[Address(RVA = "0xD71A08", Offset = "0xD71A08", VA = "0xD71A08")]
	public SpawningEgg()
	{
	}

	[Token(Token = "0x6000526")]
	[Address(RVA = "0xD71A18", Offset = "0xD71A18", VA = "0xD71A18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CD528", Offset = "0x9CD528")]
	private void <Awake>b__8_0()
	{
	}
}
[Token(Token = "0x20000A6")]
public class VineCactusMother : MonoBehaviour
{
	[Token(Token = "0x20004FF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB1F8", Offset = "0x9BB1F8")]
	private sealed class <>c__DisplayClass23_0
	{
		[Token(Token = "0x40015D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public KelpPlant kelpPlant;

		[Token(Token = "0x40015D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VineCactusMother <>4__this;

		[Token(Token = "0x6002241")]
		[Address(RVA = "0xF90600", Offset = "0xF90600", VA = "0xF90600")]
		public <>c__DisplayClass23_0()
		{
		}

		[Token(Token = "0x6002242")]
		[Address(RVA = "0xF911B4", Offset = "0xF911B4", VA = "0xF911B4")]
		internal void <Awake>b__1(PuzzleSolvedMessage msg)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000500")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB208", Offset = "0x9BB208")]
	private sealed class <>c
	{
		[Token(Token = "0x40015D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40015D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<JellySystem, bool> <>9__23_0;

		[Token(Token = "0x40015DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<Renderer, bool> <>9__24_1;

		[Token(Token = "0x6002244")]
		[Address(RVA = "0xF910E8", Offset = "0xF910E8", VA = "0xF910E8")]
		public <>c()
		{
		}

		[Token(Token = "0x6002245")]
		[Address(RVA = "0xF910F0", Offset = "0xF910F0", VA = "0xF910F0")]
		internal bool <Awake>b__23_0(JellySystem js)
		{
			return default(bool);
		}

		[Token(Token = "0x6002246")]
		[Address(RVA = "0xF91184", Offset = "0xF91184", VA = "0xF91184")]
		internal bool <Start>b__24_1(Renderer r)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000501")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB218", Offset = "0x9BB218")]
	private sealed class <ToggleCurtain>d__35 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40015DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40015DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40015DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VineCactusMother <>4__this;

		[Token(Token = "0x40015DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool state;

		[Token(Token = "0x40015DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AudioService.AudioServiceLoopHandle <handle>5__2;

		[Token(Token = "0x170003CB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600224A")]
			[Address(RVA = "0xF916A4", Offset = "0xF916A4", VA = "0xF916A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003CC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600224C")]
			[Address(RVA = "0xF91714", Offset = "0xF91714", VA = "0xF91714", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002247")]
		[Address(RVA = "0xF90DC4", Offset = "0xF90DC4", VA = "0xF90DC4")]
		[DebuggerHidden]
		public <ToggleCurtain>d__35(int <>1__state)
		{
		}

		[Token(Token = "0x6002248")]
		[Address(RVA = "0xF91368", Offset = "0xF91368", VA = "0xF91368", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002249")]
		[Address(RVA = "0xF9136C", Offset = "0xF9136C", VA = "0xF9136C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600224B")]
		[Address(RVA = "0xF916AC", Offset = "0xF916AC", VA = "0xF916AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _rewardPrefab;

	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BF978", Offset = "0x9BF978")]
	[SerializeField]
	private Collider _navigationBlocker;

	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private JellyPoint[] _leftCurtain;

	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private JellyPoint[] _rightCurtain;

	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GenericTriggerVolume _curtainTrigger;

	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9BF9F4", Offset = "0x9BF9F4")]
	private float _curtainDisplacement;

	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9BFA34", Offset = "0x9BFA34")]
	private float _displacementDuration;

	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private WaitForSeconds _curtainWait;

	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BFA74", Offset = "0x9BFA74")]
	[SerializeField]
	[EventRef]
	private string _puzzleCompletedEvent;

	[Token(Token = "0x40004A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	[EventRef]
	private string _curtainEvent;

	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BFB08", Offset = "0x9BFB08")]
	[SerializeField]
	private float _celebrationDuration;

	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9BFB54", Offset = "0x9BFB54")]
	private float _celebrationAmplitude;

	[Token(Token = "0x40004A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9BFB94", Offset = "0x9BFB94")]
	private float _celebrationFrequency;

	[Token(Token = "0x40004AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3[] _randomGravityVectors;

	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<JellySystem> _celebratoryJellySystems;

	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private AudioService _audioService;

	[Token(Token = "0x40004AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private KelpPlant[] _kelpPlants;

	[Token(Token = "0x40004AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int _numUnsolvedPlants;

	[Token(Token = "0x40004AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Dictionary<KelpPlant, bool> _completionMap;

	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9BFBD4", Offset = "0x9BFBD4")]
	public Renderer FarRenderer;

	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject CloseRendererRoot;

	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Renderer[] _closeRenderers;

	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool? _inNearRenderMode;

	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float nearPlayerDistance;

	[Token(Token = "0x6000527")]
	[Address(RVA = "0xF902F4", Offset = "0xF902F4", VA = "0xF902F4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000528")]
	[Address(RVA = "0xF90608", Offset = "0xF90608", VA = "0xF90608")]
	private void Start()
	{
	}

	[Token(Token = "0x6000529")]
	[Address(RVA = "0xF90788", Offset = "0xF90788", VA = "0xF90788")]
	private void Update()
	{
	}

	[Token(Token = "0x600052A")]
	[Address(RVA = "0xF9078C", Offset = "0xF9078C", VA = "0xF9078C")]
	private void CheckRenderMode()
	{
	}

	[Token(Token = "0x600052B")]
	[Address(RVA = "0xF909B4", Offset = "0xF909B4", VA = "0xF909B4")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9CD538", Offset = "0x9CD538")]
	private void EmitSolvePuzzle()
	{
	}

	[Token(Token = "0x600052C")]
	[Address(RVA = "0xF90A40", Offset = "0xF90A40", VA = "0xF90A40")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600052D")]
	[Address(RVA = "0xF90B3C", Offset = "0xF90B3C", VA = "0xF90B3C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600052E")]
	[Address(RVA = "0xF90C38", Offset = "0xF90C38", VA = "0xF90C38")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600052F")]
	[Address(RVA = "0xF90C3C", Offset = "0xF90C3C", VA = "0xF90C3C")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000530")]
	[Address(RVA = "0xF90C94", Offset = "0xF90C94", VA = "0xF90C94")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9CD570", Offset = "0x9CD570")]
	public void OnPlayerEnterTrigger()
	{
	}

	[Token(Token = "0x6000531")]
	[Address(RVA = "0xF90D60", Offset = "0xF90D60", VA = "0xF90D60")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9CD5A8", Offset = "0x9CD5A8")]
	private void OnPlayerExitTrigger()
	{
	}

	[Token(Token = "0x6000532")]
	[Address(RVA = "0xF90CC4", Offset = "0xF90CC4", VA = "0xF90CC4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CD5E0", Offset = "0x9CD5E0")]
	private IEnumerator ToggleCurtain(bool state)
	{
		return null;
	}

	[Token(Token = "0x6000533")]
	[Address(RVA = "0xF90DF0", Offset = "0xF90DF0", VA = "0xF90DF0")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9CD644", Offset = "0x9CD644")]
	private void TestCelebrate()
	{
	}

	[Token(Token = "0x6000534")]
	[Address(RVA = "0xF90DF4", Offset = "0xF90DF4", VA = "0xF90DF4")]
	private void Celebrate()
	{
	}

	[Token(Token = "0x6000535")]
	[Address(RVA = "0xF90FE0", Offset = "0xF90FE0", VA = "0xF90FE0")]
	public VineCactusMother()
	{
	}

	[Token(Token = "0x6000536")]
	[Address(RVA = "0xF91008", Offset = "0xF91008", VA = "0xF91008")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CD67C", Offset = "0x9CD67C")]
	private bool <Start>b__24_0(Renderer r)
	{
		return default(bool);
	}
}
[Token(Token = "0x20000A7")]
public class VinePlantEntity : MonoBehaviour
{
	[Token(Token = "0x2000502")]
	public struct GrabToHandTarget
	{
		[Token(Token = "0x40015E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int GrabbableIndex;

		[Token(Token = "0x40015E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public InputHandedness HandTarget;
	}

	[Token(Token = "0x2000503")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB228", Offset = "0x9BB228")]
	private sealed class <DoPlantLogic>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40015E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40015E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40015E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VinePlantEntity <>4__this;

		[Token(Token = "0x40015E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <limit>5__2;

		[Token(Token = "0x40015E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <i>5__3;

		[Token(Token = "0x170003CD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002250")]
			[Address(RVA = "0xF92D8C", Offset = "0xF92D8C", VA = "0xF92D8C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003CE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002252")]
			[Address(RVA = "0xF92DFC", Offset = "0xF92DFC", VA = "0xF92DFC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600224D")]
		[Address(RVA = "0xF92AF0", Offset = "0xF92AF0", VA = "0xF92AF0")]
		[DebuggerHidden]
		public <DoPlantLogic>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x600224E")]
		[Address(RVA = "0xF92CAC", Offset = "0xF92CAC", VA = "0xF92CAC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600224F")]
		[Address(RVA = "0xF92CB0", Offset = "0xF92CB0", VA = "0xF92CB0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002251")]
		[Address(RVA = "0xF92D94", Offset = "0xF92D94", VA = "0xF92D94", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000504")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB238", Offset = "0x9BB238")]
	private sealed class <DoSpawnNewGem>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40015E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40015E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40015E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VinePlantEntity <>4__this;

		[Token(Token = "0x40015EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Rigidbody <body>5__2;

		[Token(Token = "0x170003CF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002256")]
			[Address(RVA = "0xF932D0", Offset = "0xF932D0", VA = "0xF932D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003D0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002258")]
			[Address(RVA = "0xF93340", Offset = "0xF93340", VA = "0xF93340", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002253")]
		[Address(RVA = "0xF92B1C", Offset = "0xF92B1C", VA = "0xF92B1C")]
		[DebuggerHidden]
		public <DoSpawnNewGem>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x6002254")]
		[Address(RVA = "0xF92E04", Offset = "0xF92E04", VA = "0xF92E04", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002255")]
		[Address(RVA = "0xF92E08", Offset = "0xF92E08", VA = "0xF92E08", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002257")]
		[Address(RVA = "0xF932D8", Offset = "0xF932D8", VA = "0xF932D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int SequenceProgress;

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float DownForce;

	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private readonly ArrayRingBuffer<int> noteQueue;

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[EventRef]
	private string _vinePlantPlayEvent;

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private JellySystem jellySystem;

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private PersistentEntity gemPrefabToSpawn;

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private JellyPoint[] grabbablePoints;

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Material inactiveMaterial;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Material activeMaterial;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Vector3 localSeedOffset;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SerializeField]
	private SequencerNoteType noteSync;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GrabToHandTarget? leftTarget;

	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private GrabToHandTarget? rightTarget;

	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int lastSetSequenceProgress;

	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private PersistentEntity gemInstance;

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private AudioService _audioService;

	[Token(Token = "0x1700007A")]
	private Vector3 SeedSpawnPosition
	{
		[Token(Token = "0x6000537")]
		[Address(RVA = "0xF9171C", Offset = "0xF9171C", VA = "0xF9171C")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x6000538")]
	[Address(RVA = "0xF917C0", Offset = "0xF917C0", VA = "0xF917C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000539")]
	[Address(RVA = "0xF91864", Offset = "0xF91864", VA = "0xF91864")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600053A")]
	[Address(RVA = "0xF91B0C", Offset = "0xF91B0C", VA = "0xF91B0C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600053B")]
	[Address(RVA = "0xF91CA8", Offset = "0xF91CA8", VA = "0xF91CA8")]
	private void OnJellyPhysicsSync(float deltaTime)
	{
	}

	[Token(Token = "0x600053C")]
	[Address(RVA = "0xF9238C", Offset = "0xF9238C", VA = "0xF9238C")]
	private void PlantUpdateTick()
	{
	}

	[Token(Token = "0x600053D")]
	[Address(RVA = "0xF91CDC", Offset = "0xF91CDC", VA = "0xF91CDC")]
	private void CheckHandsUpdate(ref GrabToHandTarget? target, InputHandedness handIndex, float deltaTime)
	{
	}

	[Token(Token = "0x600053E")]
	[Address(RVA = "0xF92788", Offset = "0xF92788", VA = "0xF92788")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x600053F")]
	[Address(RVA = "0xF92878", Offset = "0xF92878", VA = "0xF92878")]
	private void OnSequencerStep(SequencerStepEvent eve)
	{
	}

	[Token(Token = "0x6000540")]
	[Address(RVA = "0xF91A98", Offset = "0xF91A98", VA = "0xF91A98")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CD68C", Offset = "0x9CD68C")]
	private IEnumerator DoPlantLogic()
	{
		return null;
	}

	[Token(Token = "0x6000541")]
	[Address(RVA = "0xF91A24", Offset = "0xF91A24", VA = "0xF91A24")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CD6F0", Offset = "0x9CD6F0")]
	private IEnumerator DoSpawnNewGem()
	{
		return null;
	}

	[Token(Token = "0x6000542")]
	[Address(RVA = "0xF92B48", Offset = "0xF92B48", VA = "0xF92B48")]
	public VinePlantEntity()
	{
	}

	[Token(Token = "0x6000543")]
	[Address(RVA = "0xF92C08", Offset = "0xF92C08", VA = "0xF92C08")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CD754", Offset = "0x9CD754")]
	private void <Awake>b__18_0(AwakeStatus asleep)
	{
	}

	[Token(Token = "0x6000544")]
	[Address(RVA = "0xF92C18", Offset = "0xF92C18", VA = "0xF92C18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CD764", Offset = "0x9CD764")]
	private void <DoSpawnNewGem>b__27_0(InteractiveCore.Messages.HoldItemStateChangedEvent _)
	{
	}
}
[Token(Token = "0x20000A8")]
public class VirtualVineSegmentMesh : MonoBehaviour
{
	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform Child;

	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private MeshRenderer _pfbVineSegmentVisual;

	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private MeshRenderer _pfbVineBallVisual;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float _ballVerticalOffset;

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float _ballScaleFactor;

	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Mesh _vineMeshCache;

	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Mesh _ballMeshCache;

	[Token(Token = "0x40004CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform _vineVisual;

	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform _ballVisual;

	[Token(Token = "0x6000545")]
	[Address(RVA = "0xF93348", Offset = "0xF93348", VA = "0xF93348")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000546")]
	[Address(RVA = "0xF93414", Offset = "0xF93414", VA = "0xF93414")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000547")]
	[Address(RVA = "0xF93680", Offset = "0xF93680", VA = "0xF93680")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0xF93BA0", Offset = "0xF93BA0", VA = "0xF93BA0")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000549")]
	[Address(RVA = "0xF940C0", Offset = "0xF940C0", VA = "0xF940C0")]
	public VirtualVineSegmentMesh()
	{
	}
}
[Token(Token = "0x20000A9")]
public class HighFive : MonoBehaviour
{
	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string _otherPlayersHandTag;

	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem _particles;

	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool _collisionEventEnabled;

	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private PlayerControllerInput _input;

	[Token(Token = "0x600054A")]
	[Address(RVA = "0xDCC9FC", Offset = "0xDCC9FC", VA = "0xDCC9FC")]
	public void Start()
	{
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0xDCCA00", Offset = "0xDCCA00", VA = "0xDCCA00")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0xDCCAB8", Offset = "0xDCCAB8", VA = "0xDCCAB8")]
	public void Init(int playerNumber)
	{
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0xDCCC04", Offset = "0xDCCC04", VA = "0xDCCC04")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0xDCCD54", Offset = "0xDCCD54", VA = "0xDCCD54")]
	public HighFive()
	{
	}
}
[Token(Token = "0x20000AA")]
public class InventoryPortal : MonoBehaviour
{
	[Token(Token = "0x2000505")]
	public enum InventoryPortalType
	{
		[Token(Token = "0x40015EC")]
		Garden,
		[Token(Token = "0x40015ED")]
		Remote
	}

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public InventoryPortalType PortalType;

	[Token(Token = "0x600054F")]
	[Address(RVA = "0xDD69DC", Offset = "0xDD69DC", VA = "0xDD69DC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000550")]
	[Address(RVA = "0xDD6DFC", Offset = "0xDD6DFC", VA = "0xDD6DFC")]
	public InventoryPortal()
	{
	}
}
[Token(Token = "0x20000AB")]
public class Player : MonoBehaviour
{
	[Token(Token = "0x2000506")]
	public enum DirtyVrRootType
	{
		[Token(Token = "0x40015EF")]
		Position,
		[Token(Token = "0x40015F0")]
		Rotation,
		[Token(Token = "0x40015F1")]
		PositionAndRotation
	}

	[Token(Token = "0x2000507")]
	public static class Messages
	{
		[Token(Token = "0x20006DA")]
		public struct RigWorldPositionDirtied
		{
			[Token(Token = "0x4001E08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public readonly Vector3 Position;

			[Token(Token = "0x6002943")]
			[Address(RVA = "0xA85AAC", Offset = "0xA85AAC", VA = "0xA85AAC")]
			public RigWorldPositionDirtied(Vector3 pos)
			{
			}
		}

		[Token(Token = "0x20006DB")]
		public struct RigWorldRotationDirtied
		{
			[Token(Token = "0x4001E09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public readonly Quaternion Rotation;

			[Token(Token = "0x6002944")]
			[Address(RVA = "0xA85AB8", Offset = "0xA85AB8", VA = "0xA85AB8")]
			public RigWorldRotationDirtied(Quaternion rot)
			{
			}
		}
	}

	[Token(Token = "0x2000508")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB248", Offset = "0x9BB248")]
	private sealed class <DoWaitForBothControllers>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40015F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40015F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40015F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Player <>4__this;

		[Token(Token = "0x170003D1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600225C")]
			[Address(RVA = "0xEC1F98", Offset = "0xEC1F98", VA = "0xEC1F98", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003D2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600225E")]
			[Address(RVA = "0xEC2008", Offset = "0xEC2008", VA = "0xEC2008", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002259")]
		[Address(RVA = "0xEC1A24", Offset = "0xEC1A24", VA = "0xEC1A24")]
		[DebuggerHidden]
		public <DoWaitForBothControllers>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x600225A")]
		[Address(RVA = "0xEC1F34", Offset = "0xEC1F34", VA = "0xEC1F34", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600225B")]
		[Address(RVA = "0xEC1F38", Offset = "0xEC1F38", VA = "0xEC1F38", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600225D")]
		[Address(RVA = "0xEC1FA0", Offset = "0xEC1FA0", VA = "0xEC1FA0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private PlayerMoveableRig MovableRig;

	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform _rigTransformCache;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform HeadTransform;

	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[EditorReadOnly]
	private PlayerController[] _playerControllers;

	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private PlayerControllerVisualHand _leftHand;

	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private PlayerControllerVisualHand _rightHand;

	[Token(Token = "0x1700007B")]
	public Vector3 VrRootPosition
	{
		[Token(Token = "0x6000552")]
		[Address(RVA = "0xEC1580", Offset = "0xEC1580", VA = "0xEC1580")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000551")]
		[Address(RVA = "0xEACDB8", Offset = "0xEACDB8", VA = "0xEACDB8")]
		set
		{
		}
	}

	[Token(Token = "0x1700007C")]
	public Quaternion VrRootRotation
	{
		[Token(Token = "0x6000554")]
		[Address(RVA = "0xEC1720", Offset = "0xEC1720", VA = "0xEC1720")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x6000553")]
		[Address(RVA = "0xEC15B0", Offset = "0xEC15B0", VA = "0xEC15B0")]
		set
		{
		}
	}

	[Token(Token = "0x1700007D")]
	public Transform _VrRoot
	{
		[Token(Token = "0x6000557")]
		[Address(RVA = "0xEC1868", Offset = "0xEC1868", VA = "0xEC1868")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700007E")]
	public PlayerController[] Controllers
	{
		[Token(Token = "0x6000558")]
		[Address(RVA = "0xEC1870", Offset = "0xEC1870", VA = "0xEC1870")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700007F")]
	public PlayerControllerVisualHand LeftHand
	{
		[Token(Token = "0x6000559")]
		[Address(RVA = "0xEC1878", Offset = "0xEC1878", VA = "0xEC1878")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000080")]
	public PlayerControllerVisualHand RightHand
	{
		[Token(Token = "0x600055A")]
		[Address(RVA = "0xEC1880", Offset = "0xEC1880", VA = "0xEC1880")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000081")]
	public bool HasControllers
	{
		[Token(Token = "0x600055C")]
		[Address(RVA = "0xEC18C4", Offset = "0xEC18C4", VA = "0xEC18C4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000555")]
	[Address(RVA = "0xEC1750", Offset = "0xEC1750", VA = "0xEC1750")]
	public void SetVrRootDirty(DirtyVrRootType dirtyType)
	{
	}

	[Token(Token = "0x6000556")]
	[Address(RVA = "0xEC17F8", Offset = "0xEC17F8", VA = "0xEC17F8")]
	public Vector3 VrRootTransformPoint(Vector3 localvec)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600055B")]
	[Address(RVA = "0xEC1888", Offset = "0xEC1888", VA = "0xEC1888")]
	public void Awake()
	{
	}

	[Token(Token = "0x600055D")]
	[Address(RVA = "0xEC19B0", Offset = "0xEC19B0", VA = "0xEC19B0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CD774", Offset = "0x9CD774")]
	public IEnumerator DoWaitForBothControllers()
	{
		return null;
	}

	[Token(Token = "0x600055E")]
	[Address(RVA = "0xEC1A50", Offset = "0xEC1A50", VA = "0xEC1A50")]
	public void AddController(PlayerController controller)
	{
	}

	[Token(Token = "0x600055F")]
	[Address(RVA = "0xEC1B4C", Offset = "0xEC1B4C", VA = "0xEC1B4C")]
	public void GetPlayerAnimationTransforms(out Transform root, out Transform head, out Transform leftHand, out Transform rightHand)
	{
	}

	[Token(Token = "0x6000560")]
	[Address(RVA = "0xEC1CD8", Offset = "0xEC1CD8", VA = "0xEC1CD8")]
	public PlayerController GetController(InputHandedness handedness)
	{
		return null;
	}

	[Token(Token = "0x6000561")]
	[Address(RVA = "0xEC1D2C", Offset = "0xEC1D2C", VA = "0xEC1D2C")]
	public Vector3 GetControllerPosition(InputHandedness handedness)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000562")]
	[Address(RVA = "0xEC1DF0", Offset = "0xEC1DF0", VA = "0xEC1DF0")]
	public PlayerControllerVisualHand GetHand(InputHandedness handedness)
	{
		return null;
	}

	[Token(Token = "0x6000563")]
	[Address(RVA = "0xEC1E18", Offset = "0xEC1E18", VA = "0xEC1E18")]
	public void SetHandDynamicsActive(bool active)
	{
	}

	[Token(Token = "0x6000564")]
	[Address(RVA = "0xEC1ED4", Offset = "0xEC1ED4", VA = "0xEC1ED4")]
	public Player()
	{
	}
}
[Token(Token = "0x20000AC")]
public class PlayerControllerAutogen : MonoBehaviour
{
	[Token(Token = "0x6000565")]
	[Address(RVA = "0xEC2010", Offset = "0xEC2010", VA = "0xEC2010")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000566")]
	[Address(RVA = "0xEC2284", Offset = "0xEC2284", VA = "0xEC2284")]
	public PlayerControllerAutogen()
	{
	}
}
[Token(Token = "0x20000AD")]
public enum InputHandedness
{
	[Token(Token = "0x40004DA")]
	HAND_LEFT,
	[Token(Token = "0x40004DB")]
	HAND_RIGHT,
	[Token(Token = "0x40004DC")]
	UNDEFINED,
	[Token(Token = "0x40004DD")]
	BOTH
}
[Token(Token = "0x20000AE")]
public static class HandHelper
{
	[Token(Token = "0x6000567")]
	[Address(RVA = "0xDCBE74", Offset = "0xDCBE74", VA = "0xDCBE74")]
	public static InputHandedness Other(this InputHandedness hand)
	{
		return default(InputHandedness);
	}
}
[Token(Token = "0x20000AF")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x9B8C0C", Offset = "0x9B8C0C")]
public struct HandedValue<T>
{
	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T LeftValue;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T RightValue;

	[Token(Token = "0x17000082")]
	public T Item
	{
		[Token(Token = "0x6000568")]
		get
		{
			return (T)null;
		}
		[Token(Token = "0x6000569")]
		set
		{
		}
	}

	[Token(Token = "0x600056A")]
	public T Get(InputHandedness handedness)
	{
		return (T)null;
	}

	[Token(Token = "0x600056B")]
	public void Set(InputHandedness handedness, T value)
	{
	}
}
[Token(Token = "0x20000B0")]
public enum InputActionButton
{
	[Token(Token = "0x40004E1")]
	ANY = 2046,
	[Token(Token = "0x40004E2")]
	BTN_ONE = 2,
	[Token(Token = "0x40004E3")]
	BTN_TWO = 4,
	[Token(Token = "0x40004E4")]
	BTN_THREE = 8,
	[Token(Token = "0x40004E5")]
	BTN_FOUR = 16,
	[Token(Token = "0x40004E6")]
	BTN_WINCH = 32,
	[Token(Token = "0x40004E7")]
	BTN_INVENTORY = 33,
	[Token(Token = "0x40004E8")]
	BTN_RAW_TRIGGER = 64,
	[Token(Token = "0x40004E9")]
	BTN_RAW_GRIP = 128,
	[Token(Token = "0x40004EA")]
	BTN_RAW_TRACKPAD = 256,
	[Token(Token = "0x40004EB")]
	BTN_MENU = 512,
	[Token(Token = "0x40004EC")]
	BTN_RAW_THUMBSTICK = 1024
}
[Token(Token = "0x20000B1")]
internal class InputHapticData
{
	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float val;

	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float scale;

	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float lerpCoeff;

	[Token(Token = "0x600056C")]
	[Address(RVA = "0xDCF0AC", Offset = "0xDCF0AC", VA = "0xDCF0AC")]
	public InputHapticData()
	{
	}
}
[Token(Token = "0x20000B2")]
public enum InputHapticLayerType
{
	[Token(Token = "0x40004F1")]
	HAPTIC,
	[Token(Token = "0x40004F2")]
	HAPTIC_SHORT,
	[Token(Token = "0x40004F3")]
	HAPTIC_LONG
}
[Token(Token = "0x20000B3")]
public class PlayerControllerInput : MonoBehaviour
{
	[Token(Token = "0x2000509")]
	public enum AxisQuadrant
	{
		[Token(Token = "0x40015F6")]
		Left,
		[Token(Token = "0x40015F7")]
		Up,
		[Token(Token = "0x40015F8")]
		Right,
		[Token(Token = "0x40015F9")]
		Down,
		[Token(Token = "0x40015FA")]
		Center
	}

	[Token(Token = "0x200050A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB258", Offset = "0x9BB258")]
	private sealed class <DoHandleTouch>d__43 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40015FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40015FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40015FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerControllerInput <>4__this;

		[Token(Token = "0x40015FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject <currTouchObj>5__2;

		[Token(Token = "0x40015FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <touchMask>5__3;

		[Token(Token = "0x4001600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private PlayerControllerVisual <controllerVisual>5__4;

		[Token(Token = "0x4001601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private InteractiveCore <interactive>5__5;

		[Token(Token = "0x4001602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool <triggerDown>5__6;

		[Token(Token = "0x4001603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private PlayerController <playerController>5__7;

		[Token(Token = "0x4001604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Rigidbody <rb>5__8;

		[Token(Token = "0x4001605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 <holdPosRelOffset>5__9;

		[Token(Token = "0x4001606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Quaternion <holdRotRelOffset>5__10;

		[Token(Token = "0x4001607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private bool <prevKinematicSetting>5__11;

		[Token(Token = "0x4001608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private WaitForFixedUpdate <wait>5__12;

		[Token(Token = "0x170003D3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002262")]
			[Address(RVA = "0xEC4F94", Offset = "0xEC4F94", VA = "0xEC4F94", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003D4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002264")]
			[Address(RVA = "0xEC5004", Offset = "0xEC5004", VA = "0xEC5004", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600225F")]
		[Address(RVA = "0xEC334C", Offset = "0xEC334C", VA = "0xEC334C")]
		[DebuggerHidden]
		public <DoHandleTouch>d__43(int <>1__state)
		{
		}

		[Token(Token = "0x6002260")]
		[Address(RVA = "0xEC3E4C", Offset = "0xEC3E4C", VA = "0xEC3E4C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002261")]
		[Address(RVA = "0xEC3E50", Offset = "0xEC3E50", VA = "0xEC3E50", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002263")]
		[Address(RVA = "0xEC4F9C", Offset = "0xEC4F9C", VA = "0xEC4F9C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[EditorReadOnly]
	public PlayerMoveableRig movableRig;

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[EditorReadOnly]
	public PlayerController ParentController;

	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform _grabTransform;

	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected Rigidbody throwVolumeHelper;

	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject touchObj;

	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BFD44", Offset = "0x9BFD44")]
	private Vector3 <TouchPoint>k__BackingField;

	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Collider[] touchVolumeColliders;

	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly string[] TouchMasksString;

	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private InputHapticData[] hapticLayers;

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BFD54", Offset = "0x9BFD54")]
	private InputHandedness <Handedness>k__BackingField;

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform _holdPoint;

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool smoothLocomotionActivated;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	private bool breakGrab;

	[Token(Token = "0x4000502")]
	private const float GrabGracePeriod = 0.25f;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int? maskCache;

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private GameObject _forcedGrabObject;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool _forceGrab;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	protected float _timeSinceGrabDown;

	[Token(Token = "0x17000083")]
	public Vector3 TouchPoint
	{
		[Token(Token = "0x600056D")]
		[Address(RVA = "0xEC228C", Offset = "0xEC228C", VA = "0xEC228C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CD7E8", Offset = "0x9CD7E8")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x600056E")]
		[Address(RVA = "0xEC2298", Offset = "0xEC2298", VA = "0xEC2298")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CD7F8", Offset = "0x9CD7F8")]
		private set
		{
		}
	}

	[Token(Token = "0x17000084")]
	public InputHandedness Handedness
	{
		[Token(Token = "0x6000570")]
		[Address(RVA = "0xEC22AC", Offset = "0xEC22AC", VA = "0xEC22AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CD818", Offset = "0x9CD818")]
		get
		{
			return default(InputHandedness);
		}
		[Token(Token = "0x600056F")]
		[Address(RVA = "0xEC22A4", Offset = "0xEC22A4", VA = "0xEC22A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CD808", Offset = "0x9CD808")]
		private set
		{
		}
	}

	[Token(Token = "0x17000085")]
	public float3 WorldPositionLerped
	{
		[Token(Token = "0x6000573")]
		[Address(RVA = "0xEC248C", Offset = "0xEC248C", VA = "0xEC248C")]
		get
		{
			return default(float3);
		}
	}

	[Token(Token = "0x1400000F")]
	public event Action OnPoseWritten
	{
		[Token(Token = "0x6000571")]
		[Address(RVA = "0xEC22B4", Offset = "0xEC22B4", VA = "0xEC22B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CD828", Offset = "0x9CD828")]
		add
		{
		}
		[Token(Token = "0x6000572")]
		[Address(RVA = "0xEC23A0", Offset = "0xEC23A0", VA = "0xEC23A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CD838", Offset = "0x9CD838")]
		remove
		{
		}
	}

	[Token(Token = "0x6000574")]
	[Address(RVA = "0xEC24D4", Offset = "0xEC24D4", VA = "0xEC24D4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000575")]
	[Address(RVA = "0xEC29B8", Offset = "0xEC29B8", VA = "0xEC29B8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0xEC2A70", Offset = "0xEC2A70", VA = "0xEC2A70")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000577")]
	[Address(RVA = "0xEC2AA4", Offset = "0xEC2AA4", VA = "0xEC2AA4")]
	private void OnApplicationPauseEvent(ApplicationPauseEvent message)
	{
	}

	[Token(Token = "0x6000578")]
	[Address(RVA = "0xEC2AB0", Offset = "0xEC2AB0", VA = "0xEC2AB0")]
	public void BreakGrab()
	{
	}

	[Token(Token = "0x6000579")]
	[Address(RVA = "0xEC2ABC", Offset = "0xEC2ABC", VA = "0xEC2ABC", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x600057A")]
	[Address(RVA = "0xEC2DD0", Offset = "0xEC2DD0", VA = "0xEC2DD0", Slot = "5")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x600057B")]
	[Address(RVA = "0xEC25E4", Offset = "0xEC25E4", VA = "0xEC25E4")]
	private void InitHaptics()
	{
	}

	[Token(Token = "0x600057C")]
	[Address(RVA = "0xEC3100", Offset = "0xEC3100", VA = "0xEC3100", Slot = "6")]
	protected virtual void DoHapticPulsateLayer(InputHapticLayerType layer, float value = 1f)
	{
	}

	[Token(Token = "0x600057D")]
	[Address(RVA = "0xEC3218", Offset = "0xEC3218", VA = "0xEC3218", Slot = "7")]
	public virtual Vector3 GetThrowVelocity()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600057E")]
	[Address(RVA = "0xEC3278", Offset = "0xEC3278", VA = "0xEC3278", Slot = "8")]
	public virtual Vector3 GetThrowVelocity(Vector3 pos)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600057F")]
	[Address(RVA = "0xEC32D8", Offset = "0xEC32D8", VA = "0xEC32D8", Slot = "9")]
	public virtual Vector3 GetThrowAngularVelocity()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000580")]
	[Address(RVA = "0xEC0394", Offset = "0xEC0394", VA = "0xEC0394")]
	public void DoHapticPulsate(float value = 1f)
	{
	}

	[Token(Token = "0x6000581")]
	[Address(RVA = "0xEC3338", Offset = "0xEC3338", VA = "0xEC3338")]
	public void DoHapticPulsateLong(float value = 1f)
	{
	}

	[Token(Token = "0x6000582")]
	[Address(RVA = "0xEBA0E8", Offset = "0xEBA0E8", VA = "0xEBA0E8")]
	public void DoHapticPulsateShort(float value = 1f)
	{
	}

	[Token(Token = "0x6000583")]
	[Address(RVA = "0xEC2E80", Offset = "0xEC2E80", VA = "0xEC2E80")]
	private void UpdateHaptics()
	{
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0xEC3348", Offset = "0xEC3348", VA = "0xEC3348", Slot = "10")]
	protected virtual void UpdateHapticFrame(float hapticVal)
	{
	}

	[Token(Token = "0x6000585")]
	[Address(RVA = "0xEC2D5C", Offset = "0xEC2D5C", VA = "0xEC2D5C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CD848", Offset = "0x9CD848")]
	private IEnumerator DoHandleTouch()
	{
		return null;
	}

	[Token(Token = "0x6000586")]
	[Address(RVA = "0xEC3378", Offset = "0xEC3378", VA = "0xEC3378")]
	public void ForceGrab(GameObject forcedGrabObject)
	{
	}

	[Token(Token = "0x6000587")]
	[Address(RVA = "0xEC3380", Offset = "0xEC3380", VA = "0xEC3380")]
	public GameObject ScanTouch(LayerMask mask)
	{
		return null;
	}

	[Token(Token = "0x6000588")]
	[Address(RVA = "0xEC37D0", Offset = "0xEC37D0", VA = "0xEC37D0", Slot = "11")]
	public virtual bool DeviceGetPress(InputActionButton actionBtn)
	{
		return default(bool);
	}

	[Token(Token = "0x6000589")]
	[Address(RVA = "0xEC37D8", Offset = "0xEC37D8", VA = "0xEC37D8", Slot = "12")]
	public virtual bool DeviceGetPressDown(InputActionButton actionBtn)
	{
		return default(bool);
	}

	[Token(Token = "0x600058A")]
	[Address(RVA = "0xEC37E0", Offset = "0xEC37E0", VA = "0xEC37E0", Slot = "13")]
	public virtual bool DeviceGetPressUp(InputActionButton actionBtn)
	{
		return default(bool);
	}

	[Token(Token = "0x600058B")]
	[Address(RVA = "0xEC37E8", Offset = "0xEC37E8", VA = "0xEC37E8", Slot = "14")]
	public virtual float DeviceGetTriggerValue()
	{
		return default(float);
	}

	[Token(Token = "0x600058C")]
	[Address(RVA = "0xEC37F0", Offset = "0xEC37F0", VA = "0xEC37F0", Slot = "15")]
	public virtual float DeviceGetGrabTriggerValue()
	{
		return default(float);
	}

	[Token(Token = "0x600058D")]
	[Address(RVA = "0xEC3800", Offset = "0xEC3800", VA = "0xEC3800", Slot = "16")]
	public virtual bool DeviceGetHairTrigger()
	{
		return default(bool);
	}

	[Token(Token = "0x600058E")]
	[Address(RVA = "0xEC3808", Offset = "0xEC3808", VA = "0xEC3808", Slot = "17")]
	public virtual bool DeviceGetGrabTrigger()
	{
		return default(bool);
	}

	[Token(Token = "0x600058F")]
	[Address(RVA = "0xEC3818", Offset = "0xEC3818", VA = "0xEC3818", Slot = "18")]
	public virtual bool DeviceGetHairTriggerUp()
	{
		return default(bool);
	}

	[Token(Token = "0x6000590")]
	[Address(RVA = "0xEC3820", Offset = "0xEC3820", VA = "0xEC3820", Slot = "19")]
	public virtual bool DeviceGetHairTriggerDown()
	{
		return default(bool);
	}

	[Token(Token = "0x6000591")]
	[Address(RVA = "0xEC3828", Offset = "0xEC3828", VA = "0xEC3828", Slot = "20")]
	public virtual bool DeviceGetGrabTriggerDown()
	{
		return default(bool);
	}

	[Token(Token = "0x6000592")]
	[Address(RVA = "0xEC3838", Offset = "0xEC3838", VA = "0xEC3838", Slot = "21")]
	public virtual bool DeviceGetGrabTriggerDownLenient(float gracePeriod)
	{
		return default(bool);
	}

	[Token(Token = "0x6000593")]
	[Address(RVA = "0xEC3854", Offset = "0xEC3854", VA = "0xEC3854", Slot = "22")]
	public virtual bool DeviceGetGrabTriggerUp()
	{
		return default(bool);
	}

	[Token(Token = "0x6000594")]
	[Address(RVA = "0xEC3864", Offset = "0xEC3864", VA = "0xEC3864", Slot = "23")]
	public virtual bool DeviceGetHairTriggerDown(float timeHeld)
	{
		return default(bool);
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0xEC3874", Offset = "0xEC3874", VA = "0xEC3874", Slot = "24")]
	public virtual bool DeviceGetGrabTriggerDown(float timeHeld)
	{
		return default(bool);
	}

	[Token(Token = "0x6000596")]
	[Address(RVA = "0xEC3884", Offset = "0xEC3884", VA = "0xEC3884", Slot = "25")]
	public virtual Vector2 DeviceGetAxis()
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000597")]
	[Address(RVA = "0xEC38E4", Offset = "0xEC38E4", VA = "0xEC38E4", Slot = "26")]
	public virtual float? DeviceGetAxisAngleRadians(float minimumSqrMag = 0.1f)
	{
		return null;
	}

	[Token(Token = "0x6000598")]
	[Address(RVA = "0xEC39F0", Offset = "0xEC39F0", VA = "0xEC39F0", Slot = "27")]
	public virtual AxisQuadrant DeviceGetAxisQuadrant(float minimumSqrMag = 0.1f)
	{
		return default(AxisQuadrant);
	}

	[Token(Token = "0x6000599")]
	[Address(RVA = "0xEC3B98", Offset = "0xEC3B98", VA = "0xEC3B98", Slot = "28")]
	public virtual bool DeviceGetAxisTouch()
	{
		return default(bool);
	}

	[Token(Token = "0x600059A")]
	[Address(RVA = "0xEC3BA0", Offset = "0xEC3BA0", VA = "0xEC3BA0", Slot = "29")]
	public virtual bool DeviceGetAxisTouchDown()
	{
		return default(bool);
	}

	[Token(Token = "0x600059B")]
	[Address(RVA = "0xEC3BA8", Offset = "0xEC3BA8", VA = "0xEC3BA8", Slot = "30")]
	public virtual bool DeviceGetAxisTouchUp()
	{
		return default(bool);
	}

	[Token(Token = "0x600059C")]
	[Address(RVA = "0xEC3BB0", Offset = "0xEC3BB0", VA = "0xEC3BB0", Slot = "31")]
	public virtual bool DeviceGetTouch(InputActionButton actionBtn)
	{
		return default(bool);
	}

	[Token(Token = "0x600059D")]
	[Address(RVA = "0xEC3BB8", Offset = "0xEC3BB8", VA = "0xEC3BB8", Slot = "32")]
	public virtual bool DeviceGetNearTouch(InputActionButton actionBtn)
	{
		return default(bool);
	}

	[Token(Token = "0x600059E")]
	[Address(RVA = "0xEC3BC8", Offset = "0xEC3BC8", VA = "0xEC3BC8", Slot = "33")]
	public virtual bool DeviceGetTouchUp(InputActionButton actionBtn)
	{
		return default(bool);
	}

	[Token(Token = "0x600059F")]
	[Address(RVA = "0xEC3BD0", Offset = "0xEC3BD0", VA = "0xEC3BD0", Slot = "34")]
	public virtual bool DeviceGetTouchDown(InputActionButton actionBtn)
	{
		return default(bool);
	}

	[Token(Token = "0x60005A0")]
	[Address(RVA = "0xEC3BD8", Offset = "0xEC3BD8", VA = "0xEC3BD8", Slot = "35")]
	public virtual bool DeviceIsConnected()
	{
		return default(bool);
	}

	[Token(Token = "0x60005A1")]
	[Address(RVA = "0xEC3BE0", Offset = "0xEC3BE0", VA = "0xEC3BE0")]
	protected void SendUpdatePoseSignal()
	{
	}

	[Token(Token = "0x60005A2")]
	[Address(RVA = "0xEC3BF4", Offset = "0xEC3BF4", VA = "0xEC3BF4")]
	public PlayerControllerInput()
	{
	}
}
[Token(Token = "0x20000B4")]
public class PlayerControllerInputObserver
{
	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Transform _cameraTransform;

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private InteractiveCore _currentInteractive;

	[Token(Token = "0x60005A4")]
	[Address(RVA = "0xEC500C", Offset = "0xEC500C", VA = "0xEC500C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005A5")]
	[Address(RVA = "0xEC504C", Offset = "0xEC504C", VA = "0xEC504C")]
	private void Update()
	{
	}

	[Token(Token = "0x60005A6")]
	[Address(RVA = "0xEC525C", Offset = "0xEC525C", VA = "0xEC525C")]
	public PlayerControllerInputObserver()
	{
	}
}
[Token(Token = "0x20000B5")]
public sealed class PlayerControllerInputOculus : PlayerControllerInput
{
	[Serializable]
	[Token(Token = "0x200050B")]
	public struct ControllerLocalOffset
	{
		[Token(Token = "0x4001609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 LocalPosOffset;

		[Token(Token = "0x400160A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 LocalRotOffset;

		[Token(Token = "0x400160B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 LocalScaleScalar;
	}

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[EditorReadOnly]
	public OVRInput.Controller controllerId;

	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private bool GripIsGrab;

	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float hairTriggerDown;

	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float grabTriggerDown;

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float smoothLocoActivationTimer;

	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float3 localPreviousPos;

	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float3 localVelocity;

	[Token(Token = "0x4000510")]
	private const float throwVelocityBoost = 1f;

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public ControllerLocalOffset RiftOffset;

	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public ControllerLocalOffset QuestOffset;

	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private bool _useAndroid;

	[Token(Token = "0x4000514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private float prevHapticVal;

	[Token(Token = "0x60005A7")]
	[Address(RVA = "0xEC5264", Offset = "0xEC5264", VA = "0xEC5264")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005A8")]
	[Address(RVA = "0xEC5378", Offset = "0xEC5378", VA = "0xEC5378")]
	public static OVRInput.Button FromInputActionButtonToButton(InputActionButton InputActionButton)
	{
		return default(OVRInput.Button);
	}

	[Token(Token = "0x60005A9")]
	[Address(RVA = "0xEC5428", Offset = "0xEC5428", VA = "0xEC5428")]
	private OVRInput.Touch FromActionBtnToTouch(InputActionButton actionBtn)
	{
		return default(OVRInput.Touch);
	}

	[Token(Token = "0x60005AA")]
	[Address(RVA = "0xEC5480", Offset = "0xEC5480", VA = "0xEC5480")]
	private OVRInput.NearTouch FromActionBtnToNearTouch(InputActionButton actionBtn)
	{
		return default(OVRInput.NearTouch);
	}

	[Token(Token = "0x60005AB")]
	[Address(RVA = "0xEC5568", Offset = "0xEC5568", VA = "0xEC5568", Slot = "7")]
	public override Vector3 GetThrowVelocity()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005AC")]
	[Address(RVA = "0xEC55B0", Offset = "0xEC55B0", VA = "0xEC55B0", Slot = "8")]
	public override Vector3 GetThrowVelocity(Vector3 pos)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005AD")]
	[Address(RVA = "0xEC5724", Offset = "0xEC5724", VA = "0xEC5724", Slot = "9")]
	public override Vector3 GetThrowAngularVelocity()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005AE")]
	[Address(RVA = "0xEC5894", Offset = "0xEC5894", VA = "0xEC5894", Slot = "11")]
	public override bool DeviceGetPress(InputActionButton InputActionButton)
	{
		return default(bool);
	}

	[Token(Token = "0x60005AF")]
	[Address(RVA = "0xEC5920", Offset = "0xEC5920", VA = "0xEC5920", Slot = "12")]
	public override bool DeviceGetPressDown(InputActionButton InputActionButton)
	{
		return default(bool);
	}

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0xEC59AC", Offset = "0xEC59AC", VA = "0xEC59AC", Slot = "13")]
	public override bool DeviceGetPressUp(InputActionButton InputActionButton)
	{
		return default(bool);
	}

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0xEC5A38", Offset = "0xEC5A38", VA = "0xEC5A38", Slot = "14")]
	public override float DeviceGetTriggerValue()
	{
		return default(float);
	}

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0xEC5AD0", Offset = "0xEC5AD0", VA = "0xEC5AD0", Slot = "15")]
	public override float DeviceGetGrabTriggerValue()
	{
		return default(float);
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0xEC5B64", Offset = "0xEC5B64", VA = "0xEC5B64", Slot = "16")]
	public override bool DeviceGetHairTrigger()
	{
		return default(bool);
	}

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0xEC5B74", Offset = "0xEC5B74", VA = "0xEC5B74", Slot = "18")]
	public override bool DeviceGetHairTriggerUp()
	{
		return default(bool);
	}

	[Token(Token = "0x60005B5")]
	[Address(RVA = "0xEC5B84", Offset = "0xEC5B84", VA = "0xEC5B84", Slot = "19")]
	public override bool DeviceGetHairTriggerDown()
	{
		return default(bool);
	}

	[Token(Token = "0x60005B6")]
	[Address(RVA = "0xEC5B94", Offset = "0xEC5B94", VA = "0xEC5B94", Slot = "22")]
	public override bool DeviceGetGrabTriggerUp()
	{
		return default(bool);
	}

	[Token(Token = "0x60005B7")]
	[Address(RVA = "0xEC5BB8", Offset = "0xEC5BB8", VA = "0xEC5BB8", Slot = "20")]
	public override bool DeviceGetGrabTriggerDown()
	{
		return default(bool);
	}

	[Token(Token = "0x60005B8")]
	[Address(RVA = "0xEC5BDC", Offset = "0xEC5BDC", VA = "0xEC5BDC", Slot = "24")]
	public override bool DeviceGetGrabTriggerDown(float timeHeld)
	{
		return default(bool);
	}

	[Token(Token = "0x60005B9")]
	[Address(RVA = "0xEC5C58", Offset = "0xEC5C58", VA = "0xEC5C58", Slot = "17")]
	public override bool DeviceGetGrabTrigger()
	{
		return default(bool);
	}

	[Token(Token = "0x60005BA")]
	[Address(RVA = "0xEC5C7C", Offset = "0xEC5C7C", VA = "0xEC5C7C", Slot = "23")]
	public override bool DeviceGetHairTriggerDown(float timeHeld)
	{
		return default(bool);
	}

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0xEC5CCC", Offset = "0xEC5CCC", VA = "0xEC5CCC", Slot = "25")]
	public override Vector2 DeviceGetAxis()
	{
		return default(Vector2);
	}

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0xEC5D3C", Offset = "0xEC5D3C", VA = "0xEC5D3C", Slot = "31")]
	public override bool DeviceGetTouch(InputActionButton actionBtn)
	{
		return default(bool);
	}

	[Token(Token = "0x60005BD")]
	[Address(RVA = "0xEC5E08", Offset = "0xEC5E08", VA = "0xEC5E08", Slot = "32")]
	public override bool DeviceGetNearTouch(InputActionButton actionBtn)
	{
		return default(bool);
	}

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0xEC5E94", Offset = "0xEC5E94", VA = "0xEC5E94", Slot = "33")]
	public override bool DeviceGetTouchUp(InputActionButton actionBtn)
	{
		return default(bool);
	}

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0xEC5F60", Offset = "0xEC5F60", VA = "0xEC5F60", Slot = "34")]
	public override bool DeviceGetTouchDown(InputActionButton actionBtn)
	{
		return default(bool);
	}

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0xEC602C", Offset = "0xEC602C", VA = "0xEC602C", Slot = "5")]
	public override void Update()
	{
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0xEC651C", Offset = "0xEC651C", VA = "0xEC651C", Slot = "35")]
	public override bool DeviceIsConnected()
	{
		return default(bool);
	}

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0xEC6590", Offset = "0xEC6590", VA = "0xEC6590")]
	public void OnConnected(OVRInput.Controller id)
	{
	}

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0xEC673C", Offset = "0xEC673C", VA = "0xEC673C", Slot = "10")]
	protected override void UpdateHapticFrame(float hapticVal)
	{
	}

	[Token(Token = "0x60005C4")]
	[Address(RVA = "0xEC6814", Offset = "0xEC6814", VA = "0xEC6814")]
	public PlayerControllerInputOculus()
	{
	}
}
[Token(Token = "0x20000B6")]
public sealed class PlayerControllerVisual : MonoBehaviour
{
	[Token(Token = "0x200050C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB268", Offset = "0x9BB268")]
	private sealed class <DoHandAnimations>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400160C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400160D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400160E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerControllerVisual <>4__this;

		[Token(Token = "0x400160F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private PlayerControllerInput <input>5__2;

		[Token(Token = "0x170003D5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002268")]
			[Address(RVA = "0x10993C0", Offset = "0x10993C0", VA = "0x10993C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003D6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600226A")]
			[Address(RVA = "0x1099430", Offset = "0x1099430", VA = "0x1099430", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002265")]
		[Address(RVA = "0x1098704", Offset = "0x1098704", VA = "0x1098704")]
		[DebuggerHidden]
		public <DoHandAnimations>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x6002266")]
		[Address(RVA = "0x1098F70", Offset = "0x1098F70", VA = "0x1098F70", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002267")]
		[Address(RVA = "0x1098F74", Offset = "0x1098F74", VA = "0x1098F74", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002269")]
		[Address(RVA = "0x10993C8", Offset = "0x10993C8", VA = "0x10993C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000515")]
	private const float RemoteLerpFactor = 2.5f;

	[Token(Token = "0x4000516")]
	private const float LocalExtendMax = 3f;

	[Token(Token = "0x4000517")]
	private const float ArmLerpExponent = 0.0625f;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[EditorReadOnly]
	public PlayerControllerVisualHand visualHand;

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PlayerControllerVisualHand visualHandSlotLeft;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PlayerControllerVisualHand visualHandSlotRight;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool RetractArmsWhenTeleport;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	public Transform visualRoot;

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BFDC4", Offset = "0x9BFDC4")]
	private InputHandedness <Handedness>k__BackingField;

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Ray _localExtensionRay;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float _extendLocal;

	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 _worldPosition;

	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Vector3 _localPosition;

	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BFDD4", Offset = "0x9BFDD4")]
	private float <LastEvacPush>k__BackingField;

	[Token(Token = "0x17000086")]
	public InputHandedness Handedness
	{
		[Token(Token = "0x60005C9")]
		[Address(RVA = "0x10980C0", Offset = "0x10980C0", VA = "0x10980C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CD8EC", Offset = "0x9CD8EC")]
		get
		{
			return default(InputHandedness);
		}
		[Token(Token = "0x60005CA")]
		[Address(RVA = "0x10980C8", Offset = "0x10980C8", VA = "0x10980C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CD8FC", Offset = "0x9CD8FC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000087")]
	public Ray WorldHandSlideRay
	{
		[Token(Token = "0x60005CB")]
		[Address(RVA = "0x10980D0", Offset = "0x10980D0", VA = "0x10980D0")]
		get
		{
			return default(Ray);
		}
	}

	[Token(Token = "0x17000088")]
	public Vector3 WorldPositionLerped
	{
		[Token(Token = "0x60005D2")]
		[Address(RVA = "0x1098898", Offset = "0x1098898", VA = "0x1098898")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000089")]
	public Vector3 WorldPosition
	{
		[Token(Token = "0x60005D3")]
		[Address(RVA = "0x10988A4", Offset = "0x10988A4", VA = "0x10988A4")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60005D4")]
		[Address(RVA = "0x10985FC", Offset = "0x10985FC", VA = "0x10985FC")]
		set
		{
		}
	}

	[Token(Token = "0x1700008A")]
	public Vector3 RestPositionWorld
	{
		[Token(Token = "0x60005D5")]
		[Address(RVA = "0x10988FC", Offset = "0x10988FC", VA = "0x10988FC")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700008B")]
	public Transform Parent
	{
		[Token(Token = "0x60005D6")]
		[Address(RVA = "0x10981D4", Offset = "0x10981D4", VA = "0x10981D4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700008C")]
	public float ExtensionDistance
	{
		[Token(Token = "0x60005D7")]
		[Address(RVA = "0x1098968", Offset = "0x1098968", VA = "0x1098968")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60005D8")]
		[Address(RVA = "0x1098970", Offset = "0x1098970", VA = "0x1098970")]
		set
		{
		}
	}

	[Token(Token = "0x1700008D")]
	public bool IsMaxExtended
	{
		[Token(Token = "0x60005D9")]
		[Address(RVA = "0x1098A2C", Offset = "0x1098A2C", VA = "0x1098A2C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700008E")]
	public bool IsMinExtended
	{
		[Token(Token = "0x60005DA")]
		[Address(RVA = "0x1098AA4", Offset = "0x1098AA4", VA = "0x1098AA4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700008F")]
	public float LastEvacPush
	{
		[Token(Token = "0x60005DE")]
		[Address(RVA = "0x1098DAC", Offset = "0x1098DAC", VA = "0x1098DAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CD980", Offset = "0x9CD980")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60005DD")]
		[Address(RVA = "0x1098DA4", Offset = "0x1098DA4", VA = "0x1098DA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CD970", Offset = "0x9CD970")]
		private set
		{
		}
	}

	[Token(Token = "0x14000010")]
	public event Action OnPostSetPositionOfHand
	{
		[Token(Token = "0x60005C5")]
		[Address(RVA = "0x1097D10", Offset = "0x1097D10", VA = "0x1097D10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CD8AC", Offset = "0x9CD8AC")]
		add
		{
		}
		[Token(Token = "0x60005C6")]
		[Address(RVA = "0x1097DFC", Offset = "0x1097DFC", VA = "0x1097DFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CD8BC", Offset = "0x9CD8BC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000011")]
	public event Action<float> EvacuationOccured
	{
		[Token(Token = "0x60005C7")]
		[Address(RVA = "0x1097EE8", Offset = "0x1097EE8", VA = "0x1097EE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CD8CC", Offset = "0x9CD8CC")]
		add
		{
		}
		[Token(Token = "0x60005C8")]
		[Address(RVA = "0x1097FD4", Offset = "0x1097FD4", VA = "0x1097FD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CD8DC", Offset = "0x9CD8DC")]
		remove
		{
		}
	}

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0x1098204", Offset = "0x1098204", VA = "0x1098204")]
	public void OnSetHandedness(InputHandedness newHandedness)
	{
	}

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0x10983C8", Offset = "0x10983C8", VA = "0x10983C8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005CE")]
	[Address(RVA = "0x1098664", Offset = "0x1098664", VA = "0x1098664")]
	private void Start()
	{
	}

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0x1098690", Offset = "0x1098690", VA = "0x1098690")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CD90C", Offset = "0x9CD90C")]
	private IEnumerator DoHandAnimations()
	{
		return null;
	}

	[Token(Token = "0x60005D0")]
	[Address(RVA = "0x1098730", Offset = "0x1098730", VA = "0x1098730")]
	public void SetVisible(bool isVisible)
	{
	}

	[Token(Token = "0x60005D1")]
	[Address(RVA = "0x109879C", Offset = "0x109879C", VA = "0x109879C")]
	public void SetDynamicsActive(bool active)
	{
	}

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0x1098B1C", Offset = "0x1098B1C", VA = "0x1098B1C")]
	public void SetWateringMode(bool wateringMode)
	{
	}

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0x1098BC4", Offset = "0x1098BC4", VA = "0x1098BC4")]
	private void EvacuateIfInWall()
	{
	}

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0x1098DB4", Offset = "0x1098DB4", VA = "0x1098DB4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0x1098F50", Offset = "0x1098F50", VA = "0x1098F50")]
	public PlayerControllerVisual()
	{
	}

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0x1098F60", Offset = "0x1098F60", VA = "0x1098F60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CD990", Offset = "0x9CD990")]
	private void <Awake>b__25_0(LocomotionService.Messages.PostLocomotionTeleportGlobalMessage _)
	{
	}

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0x1098F68", Offset = "0x1098F68", VA = "0x1098F68")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CD9A0", Offset = "0x9CD9A0")]
	private void <Awake>b__25_1(LocomotionService.Messages.PostLocomotionClickTurnGlobalMessage _)
	{
	}
}
[Token(Token = "0x20000B7")]
public class PlayerControllerVisualHand : MonoBehaviour
{
	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator Animator;

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public DynamicBone DynamicBone;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SkinnedMeshRenderer HandMesh;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SphereVolume FingerTouchVolume;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public BoxCollider HandTouchVolume;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform TfmWigglyArmAttachPoint;

	[Token(Token = "0x400052B")]
	private const string ColorMaterialKey = "_EmissionColor";

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material materialHand;

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MaterialPropertyBlock block;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Color defaultHandColor;

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly int[] fingerLayers;

	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float?[] fingerPoseOverride;

	[Token(Token = "0x17000090")]
	public Material MaterialHand
	{
		[Token(Token = "0x60005E3")]
		[Address(RVA = "0x1099438", Offset = "0x1099438", VA = "0x1099438")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0x1099440", Offset = "0x1099440", VA = "0x1099440")]
	public void Awake()
	{
	}

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0x10983C4", Offset = "0x10983C4", VA = "0x10983C4")]
	public void Initialize()
	{
	}

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0x1098764", Offset = "0x1098764", VA = "0x1098764")]
	public void SetVisible(bool isVisible)
	{
	}

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0x109956C", Offset = "0x109956C", VA = "0x109956C")]
	public void SetHandColor(Color? color)
	{
	}

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0x10991B4", Offset = "0x10991B4", VA = "0x10991B4")]
	public void SetGrabValue(float grabVal)
	{
	}

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0x109966C", Offset = "0x109966C", VA = "0x109966C")]
	public void SetEnableInteractionEffect(bool enableEffect)
	{
	}

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0x1099708", Offset = "0x1099708", VA = "0x1099708")]
	public void SetEnableLocomotionEffect(bool enableEffect)
	{
	}

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0x10987D0", Offset = "0x10987D0", VA = "0x10987D0")]
	public void SetDynamicsActive(bool active)
	{
	}

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0x1098B50", Offset = "0x1098B50", VA = "0x1098B50")]
	public void SetWateringMode(bool wateringMode)
	{
	}

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0x10997A0", Offset = "0x10997A0", VA = "0x10997A0")]
	public PlayerControllerVisualHand()
	{
	}
}
[Token(Token = "0x20000B8")]
public class PlayerControllerVisualVines : MonoBehaviour
{
	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MaterialPropertyBlock _rendererTubeMatBlock;

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform _tfmStart;

	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform _tfmEnd;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private PlayerController _parentController;

	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int uniformId_PosLocalStart;

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int uniformId_PosLocalEnd;

	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int uniformId_CtrlPosLocal0;

	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int uniformId_CtrlPosLocal1;

	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int uniformId_TubeIsGrounded;

	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int uniformId_ColorTop;

	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int uniformId_ColorBot;

	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float _randOffsetX;

	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float _randOffsetY;

	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float _randSpeedX;

	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float _randSpeedY;

	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float _localPosOffset;

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0x1099830", Offset = "0x1099830", VA = "0x1099830")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0x1099C10", Offset = "0x1099C10", VA = "0x1099C10")]
	private void Update()
	{
	}

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0x109A1D4", Offset = "0x109A1D4", VA = "0x109A1D4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0x1099C14", Offset = "0x1099C14", VA = "0x1099C14")]
	public void UpdateTubeVisual()
	{
	}

	[Token(Token = "0x60005F2")]
	[Address(RVA = "0x109991C", Offset = "0x109991C", VA = "0x109991C")]
	private void InitMaterialBlock()
	{
	}

	[Token(Token = "0x60005F3")]
	[Address(RVA = "0x109A274", Offset = "0x109A274", VA = "0x109A274")]
	public PlayerControllerVisualVines()
	{
	}
}
[Token(Token = "0x20000B9")]
public class PlayerHandLightGemSlot : MonoBehaviour
{
	[Token(Token = "0x200050D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB278", Offset = "0x9BB278")]
	private sealed class <DoHandleAppear>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerHandLightGemSlot <>4__this;

		[Token(Token = "0x4001613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private PlayerControllerInput <input>5__2;

		[Token(Token = "0x170003D7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600226E")]
			[Address(RVA = "0x109B354", Offset = "0x109B354", VA = "0x109B354", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003D8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002270")]
			[Address(RVA = "0x109B3C4", Offset = "0x109B3C4", VA = "0x109B3C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600226B")]
		[Address(RVA = "0x109A410", Offset = "0x109A410", VA = "0x109A410")]
		[DebuggerHidden]
		public <DoHandleAppear>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x600226C")]
		[Address(RVA = "0x109B16C", Offset = "0x109B16C", VA = "0x109B16C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600226D")]
		[Address(RVA = "0x109B170", Offset = "0x109B170", VA = "0x109B170", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600226F")]
		[Address(RVA = "0x109B35C", Offset = "0x109B35C", VA = "0x109B35C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200050E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB288", Offset = "0x9BB288")]
	private sealed class <>c__DisplayClass15_0
	{
		[Token(Token = "0x4001614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlayerController controller;

		[Token(Token = "0x4001615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlayerControllerInput input;

		[Token(Token = "0x4001616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerHandLightGemSlot <>4__this;

		[Token(Token = "0x6002271")]
		[Address(RVA = "0x109AC14", Offset = "0x109AC14", VA = "0x109AC14")]
		public <>c__DisplayClass15_0()
		{
		}

		[Token(Token = "0x6002272")]
		[Address(RVA = "0x109ACA4", Offset = "0x109ACA4", VA = "0x109ACA4")]
		internal bool <Setup>b__0(LightGem lightGem)
		{
			return default(bool);
		}

		[Token(Token = "0x6002273")]
		[Address(RVA = "0x109ADAC", Offset = "0x109ADAC", VA = "0x109ADAC")]
		internal void <Setup>b__1(LightGemSlotMessage msg)
		{
		}
	}

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PlayerController _owner;

	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private LightGemSlot _lightGemSlot;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform _tfmRoot;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform _tfmRing;

	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Collider _collider;

	[Token(Token = "0x17000091")]
	public int LightGemCount
	{
		[Token(Token = "0x60005F4")]
		[Address(RVA = "0x109A27C", Offset = "0x109A27C", VA = "0x109A27C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000092")]
	public bool LightGemsFilled
	{
		[Token(Token = "0x60005F5")]
		[Address(RVA = "0x109A2AC", Offset = "0x109A2AC", VA = "0x109A2AC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0x109A2DC", Offset = "0x109A2DC", VA = "0x109A2DC")]
	public bool SpendSingleGem()
	{
		return default(bool);
	}

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0x109A360", Offset = "0x109A360", VA = "0x109A360")]
	public bool AddLightGem(LightGem gem)
	{
		return default(bool);
	}

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0x109A39C", Offset = "0x109A39C", VA = "0x109A39C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CD9B0", Offset = "0x9CD9B0")]
	private IEnumerator DoHandleAppear()
	{
		return null;
	}

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0x109A43C", Offset = "0x109A43C", VA = "0x109A43C")]
	private void PlayEnterSeq()
	{
	}

	[Token(Token = "0x60005FA")]
	[Address(RVA = "0x109A70C", Offset = "0x109A70C", VA = "0x109A70C")]
	private void PlayExitSeq()
	{
	}

	[Token(Token = "0x60005FB")]
	[Address(RVA = "0x109A810", Offset = "0x109A810", VA = "0x109A810")]
	private bool IsFacingCamera(float dotThreshold)
	{
		return default(bool);
	}

	[Token(Token = "0x60005FC")]
	[Address(RVA = "0x109AA6C", Offset = "0x109AA6C", VA = "0x109AA6C")]
	public void Setup(PlayerController controller)
	{
	}

	[Token(Token = "0x60005FD")]
	[Address(RVA = "0x109AC1C", Offset = "0x109AC1C", VA = "0x109AC1C")]
	public PlayerHandLightGemSlot()
	{
	}

	[Token(Token = "0x60005FE")]
	[Address(RVA = "0x109AC24", Offset = "0x109AC24", VA = "0x109AC24")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CDA14", Offset = "0x9CDA14")]
	private void <PlayEnterSeq>b__12_0()
	{
	}

	[Token(Token = "0x60005FF")]
	[Address(RVA = "0x109AC58", Offset = "0x109AC58", VA = "0x109AC58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CDA24", Offset = "0x9CDA24")]
	private void <PlayExitSeq>b__13_0()
	{
	}
}
[Token(Token = "0x20000BA")]
public class PlayerInputManagerObserver : MonoBehaviour
{
	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float movementSpeed;

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private KeyCode Forward;

	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private KeyCode Back;

	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private KeyCode StrafeLeft;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private KeyCode StrafeRight;

	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _cameraTransform;

	[Token(Token = "0x6000600")]
	[Address(RVA = "0x109B3CC", Offset = "0x109B3CC", VA = "0x109B3CC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000601")]
	[Address(RVA = "0x109B43C", Offset = "0x109B43C", VA = "0x109B43C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000602")]
	[Address(RVA = "0x109B460", Offset = "0x109B460", VA = "0x109B460")]
	private void doKeyboardInput()
	{
	}

	[Token(Token = "0x6000603")]
	[Address(RVA = "0x109B80C", Offset = "0x109B80C", VA = "0x109B80C")]
	private void doMouseInput()
	{
	}

	[Token(Token = "0x6000604")]
	[Address(RVA = "0x109B910", Offset = "0x109B910", VA = "0x109B910")]
	public PlayerInputManagerObserver()
	{
	}
}
[Token(Token = "0x20000BB")]
public class PlayerInputManagerOculus : MonoBehaviour
{
	[Token(Token = "0x6000605")]
	[Address(RVA = "0x109B92C", Offset = "0x109B92C", VA = "0x109B92C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000606")]
	[Address(RVA = "0x109B958", Offset = "0x109B958", VA = "0x109B958")]
	private void OnDeviceConnected(OVRInput.Controller controller)
	{
	}

	[Token(Token = "0x6000607")]
	[Address(RVA = "0x109BC10", Offset = "0x109BC10", VA = "0x109BC10")]
	public PlayerInputManagerOculus()
	{
	}
}
[Token(Token = "0x20000BC")]
public class PlayerMoveableRig : MonoBehaviour
{
	[Token(Token = "0x6000608")]
	[Address(RVA = "0x109BC18", Offset = "0x109BC18", VA = "0x109BC18")]
	public PlayerMoveableRig()
	{
	}
}
[Token(Token = "0x20000BD")]
public class PlayerRigAutoselect : MonoBehaviour
{
	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject prefabControllerVR;

	[Token(Token = "0x6000609")]
	[Address(RVA = "0x109BC20", Offset = "0x109BC20", VA = "0x109BC20")]
	private void Awake()
	{
	}

	[Token(Token = "0x600060A")]
	[Address(RVA = "0x109C008", Offset = "0x109C008", VA = "0x109C008")]
	public PlayerRigAutoselect()
	{
	}
}
[Token(Token = "0x20000BE")]
public class PlayerThirdPersonCamera : MonoBehaviour
{
	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject target;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Camera cam;

	[NonSerialized]
	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float fieldOfView;

	[NonSerialized]
	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float followRange;

	[NonSerialized]
	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float followRaise;

	[NonSerialized]
	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float followLerpPosRate;

	[NonSerialized]
	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float followLerpRotRate;

	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float raiseOffset;

	[Token(Token = "0x600060B")]
	[Address(RVA = "0x109C010", Offset = "0x109C010", VA = "0x109C010")]
	public void Update()
	{
	}

	[Token(Token = "0x600060C")]
	[Address(RVA = "0x109C4AC", Offset = "0x109C4AC", VA = "0x109C4AC")]
	public PlayerThirdPersonCamera()
	{
	}
}
[Token(Token = "0x20000BF")]
public class TeleportationArcVisual : MonoBehaviour
{
	[Token(Token = "0x200050F")]
	public enum VisualSetting
	{
		[Token(Token = "0x4001618")]
		Valid,
		[Token(Token = "0x4001619")]
		SnapValid,
		[Token(Token = "0x400161A")]
		Invalid
	}

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3[] positions;

	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private LineRenderer teleportLine;

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color ValidColor;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color InvalidColor;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Color SnapColor;

	[Token(Token = "0x600060D")]
	[Address(RVA = "0xD7DE3C", Offset = "0xD7DE3C", VA = "0xD7DE3C")]
	public void SetValidVisual(bool valid)
	{
	}

	[Token(Token = "0x600060E")]
	[Address(RVA = "0xD7DE74", Offset = "0xD7DE74", VA = "0xD7DE74")]
	public void SetValidVisual(VisualSetting setting)
	{
	}

	[Token(Token = "0x600060F")]
	[Address(RVA = "0xD7E0CC", Offset = "0xD7E0CC", VA = "0xD7E0CC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0xD7E144", Offset = "0xD7E144", VA = "0xD7E144")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000611")]
	[Address(RVA = "0xD7E14C", Offset = "0xD7E14C", VA = "0xD7E14C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000612")]
	[Address(RVA = "0xD7E278", Offset = "0xD7E278", VA = "0xD7E278")]
	public TeleportationArcVisual()
	{
	}
}
[Token(Token = "0x20000C0")]
public class ReportSequencerErrors : MonoBehaviour
{
	[Token(Token = "0x2000510")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB298", Offset = "0x9BB298")]
	private sealed class <DoRoutine>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400161B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400161C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400161D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ReportSequencerErrors <>4__this;

		[Token(Token = "0x170003D9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002277")]
			[Address(RVA = "0xD2D8C4", Offset = "0xD2D8C4", VA = "0xD2D8C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003DA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002279")]
			[Address(RVA = "0xD2D934", Offset = "0xD2D934", VA = "0xD2D934", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002274")]
		[Address(RVA = "0xD2D5E0", Offset = "0xD2D5E0", VA = "0xD2D5E0")]
		[DebuggerHidden]
		public <DoRoutine>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6002275")]
		[Address(RVA = "0xD2D614", Offset = "0xD2D614", VA = "0xD2D614", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002276")]
		[Address(RVA = "0xD2D618", Offset = "0xD2D618", VA = "0xD2D618", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002278")]
		[Address(RVA = "0xD2D8CC", Offset = "0xD2D8CC", VA = "0xD2D8CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FujiSubArea Area;

	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SequencerController Controller;

	[Token(Token = "0x6000613")]
	[Address(RVA = "0xD2D540", Offset = "0xD2D540", VA = "0xD2D540")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000614")]
	[Address(RVA = "0xD2D56C", Offset = "0xD2D56C", VA = "0xD2D56C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CDA34", Offset = "0x9CDA34")]
	private IEnumerator DoRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000615")]
	[Address(RVA = "0xD2D60C", Offset = "0xD2D60C", VA = "0xD2D60C")]
	public ReportSequencerErrors()
	{
	}
}
[Token(Token = "0x20000C1")]
public class ResizeTest : MonoBehaviour
{
	[Token(Token = "0x2000511")]
	public struct NodeBasedResizer
	{
		[Token(Token = "0x400161E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly float3 PivotNode;

		[Token(Token = "0x400161F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly float3 ControlNode;

		[Token(Token = "0x4001620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Matrix4x4 _trans2OriginalAbLocal;

		[Token(Token = "0x600227A")]
		[Address(RVA = "0xA82EF8", Offset = "0xA82EF8", VA = "0xA82EF8")]
		public NodeBasedResizer(float3 pivotNode, float3 controlNode, Transform transform)
		{
		}

		[Token(Token = "0x600227B")]
		[Address(RVA = "0xA82F00", Offset = "0xA82F00", VA = "0xA82F00")]
		public void UpdateTransformMatrix(float3 pivotNode, float3 controlNode, Transform transform)
		{
		}
	}

	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform A;

	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform B;

	[Token(Token = "0x400055F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private NodeBasedResizer resizer;

	[Token(Token = "0x4000560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Transform _Par;

	[Token(Token = "0x6000616")]
	[Address(RVA = "0xD2D93C", Offset = "0xD2D93C", VA = "0xD2D93C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000617")]
	[Address(RVA = "0xD2DD00", Offset = "0xD2DD00", VA = "0xD2DD00")]
	private void Update()
	{
	}

	[Token(Token = "0x6000618")]
	[Address(RVA = "0xD2E0BC", Offset = "0xD2E0BC", VA = "0xD2E0BC")]
	public static void FindOpposingNodeWorldSpace(float3 worldPos, Transform box, float rescale, out float3 outPivot, out float3 outGrabHandle)
	{
	}

	[Token(Token = "0x6000619")]
	[Address(RVA = "0xD2E1A4", Offset = "0xD2E1A4", VA = "0xD2E1A4")]
	public ResizeTest()
	{
	}
}
[Token(Token = "0x20000C2")]
public class SanitizeDevConsoleInput : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000512")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB2A8", Offset = "0x9BB2A8")]
	private sealed class <>c
	{
		[Token(Token = "0x4001621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static InputField.OnValidateInput <>9__0_0;

		[Token(Token = "0x600227D")]
		[Address(RVA = "0xD32058", Offset = "0xD32058", VA = "0xD32058")]
		public <>c()
		{
		}

		[Token(Token = "0x600227E")]
		[Address(RVA = "0xD32060", Offset = "0xD32060", VA = "0xD32060")]
		internal char <Start>b__0_0(string input, int charIndex, char addedChar)
		{
			return default(char);
		}
	}

	[Token(Token = "0x600061A")]
	[Address(RVA = "0xD31E20", Offset = "0xD31E20", VA = "0xD31E20")]
	private void Start()
	{
	}

	[Token(Token = "0x600061B")]
	[Address(RVA = "0xD31FCC", Offset = "0xD31FCC", VA = "0xD31FCC")]
	private static char Validate(char charToValidate)
	{
		return default(char);
	}

	[Token(Token = "0x600061C")]
	[Address(RVA = "0xD31FEC", Offset = "0xD31FEC", VA = "0xD31FEC")]
	public SanitizeDevConsoleInput()
	{
	}
}
[Token(Token = "0x20000C3")]
public static class SequenceDispatcher
{
	[Token(Token = "0x2000513")]
	public enum SequenceDispatchPolicy
	{
		[Token(Token = "0x4001624")]
		Random,
		[Token(Token = "0x4001625")]
		NearToFar,
		[Token(Token = "0x4001626")]
		Generative
	}

	[Token(Token = "0x2000514")]
	public delegate IEnumerator SequenceDispatch(FujiSubArea area, int?[] sequenceToPlay, SequencerNoteType noteType);

	[Token(Token = "0x2000515")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB2B8", Offset = "0x9BB2B8")]
	private sealed class <RandomDispatch>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SequencerNoteType noteType;

		[Token(Token = "0x400162A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public FujiSubArea area;

		[Token(Token = "0x400162B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int?[] sequenceToPlay;

		[Token(Token = "0x400162C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <i>5__2;

		[Token(Token = "0x170003DB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002286")]
			[Address(RVA = "0xD362C8", Offset = "0xD362C8", VA = "0xD362C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003DC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002288")]
			[Address(RVA = "0xD36338", Offset = "0xD36338", VA = "0xD36338", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002283")]
		[Address(RVA = "0xD35034", Offset = "0xD35034", VA = "0xD35034")]
		[DebuggerHidden]
		public <RandomDispatch>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6002284")]
		[Address(RVA = "0xD35F14", Offset = "0xD35F14", VA = "0xD35F14", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002285")]
		[Address(RVA = "0xD35F18", Offset = "0xD35F18", VA = "0xD35F18", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002287")]
		[Address(RVA = "0xD362D0", Offset = "0xD362D0", VA = "0xD362D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000516")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB2C8", Offset = "0x9BB2C8")]
	private sealed class <>c__DisplayClass7_0
	{
		[Token(Token = "0x400162D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 pos;

		[Token(Token = "0x6002289")]
		[Address(RVA = "0xD35364", Offset = "0xD35364", VA = "0xD35364")]
		public <>c__DisplayClass7_0()
		{
		}

		[Token(Token = "0x600228A")]
		[Address(RVA = "0xD3536C", Offset = "0xD3536C", VA = "0xD3536C")]
		internal int <NearToFarDispatch>b__0(SequencerController x, SequencerController y)
		{
			return default(int);
		}
	}

	[Token(Token = "0x2000517")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB2D8", Offset = "0x9BB2D8")]
	private sealed class <NearToFarDispatch>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400162E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400162F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FujiSubArea area;

		[Token(Token = "0x4001631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public SequencerNoteType noteType;

		[Token(Token = "0x4001632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int?[] sequenceToPlay;

		[Token(Token = "0x4001633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <index>5__2;

		[Token(Token = "0x4001634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <i>5__3;

		[Token(Token = "0x170003DD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600228E")]
			[Address(RVA = "0xD35E9C", Offset = "0xD35E9C", VA = "0xD35E9C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003DE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002290")]
			[Address(RVA = "0xD35F0C", Offset = "0xD35F0C", VA = "0xD35F0C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600228B")]
		[Address(RVA = "0xD35110", Offset = "0xD35110", VA = "0xD35110")]
		[DebuggerHidden]
		public <NearToFarDispatch>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x600228C")]
		[Address(RVA = "0xD35AB0", Offset = "0xD35AB0", VA = "0xD35AB0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600228D")]
		[Address(RVA = "0xD35AB4", Offset = "0xD35AB4", VA = "0xD35AB4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600228F")]
		[Address(RVA = "0xD35EA4", Offset = "0xD35EA4", VA = "0xD35EA4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000518")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB2E8", Offset = "0x9BB2E8")]
	private sealed class <GenerativeDispatch>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SequencerNoteType noteType;

		[Token(Token = "0x4001638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public FujiSubArea area;

		[Token(Token = "0x4001639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int?[] <randomSequence>5__2;

		[Token(Token = "0x400163A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <i>5__3;

		[Token(Token = "0x170003DF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002294")]
			[Address(RVA = "0xD35A38", Offset = "0xD35A38", VA = "0xD35A38", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002296")]
			[Address(RVA = "0xD35AA8", Offset = "0xD35AA8", VA = "0xD35AA8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002291")]
		[Address(RVA = "0xD351D0", Offset = "0xD351D0", VA = "0xD351D0")]
		[DebuggerHidden]
		public <GenerativeDispatch>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6002292")]
		[Address(RVA = "0xD354B4", Offset = "0xD354B4", VA = "0xD354B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002293")]
		[Address(RVA = "0xD354B8", Offset = "0xD354B8", VA = "0xD354B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002295")]
		[Address(RVA = "0xD35A40", Offset = "0xD35A40", VA = "0xD35A40", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<SequencerController> _sequencerList;

	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Dictionary<SequenceDispatchPolicy, SequenceDispatch> _dispatchDict;

	[Token(Token = "0x600061D")]
	[Address(RVA = "0xD34E5C", Offset = "0xD34E5C", VA = "0xD34E5C")]
	public static SequenceDispatch GetPolicyDelegate(SequenceDispatchPolicy policy)
	{
		return null;
	}

	[Token(Token = "0x600061E")]
	[Address(RVA = "0xD34EE8", Offset = "0xD34EE8", VA = "0xD34EE8")]
	private static void SetSequencerList(FujiSubArea area)
	{
	}

	[Token(Token = "0x600061F")]
	[Address(RVA = "0xD34F88", Offset = "0xD34F88", VA = "0xD34F88")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CDA98", Offset = "0x9CDA98")]
	private static IEnumerator RandomDispatch(FujiSubArea area, int?[] sequenceToPlay, SequencerNoteType noteType)
	{
		return null;
	}

	[Token(Token = "0x6000620")]
	[Address(RVA = "0xD35060", Offset = "0xD35060", VA = "0xD35060")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CDAFC", Offset = "0x9CDAFC")]
	private static IEnumerator NearToFarDispatch(FujiSubArea area, int?[] sequenceToPlay, SequencerNoteType noteType)
	{
		return null;
	}

	[Token(Token = "0x6000621")]
	[Address(RVA = "0xD3513C", Offset = "0xD3513C", VA = "0xD3513C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CDB60", Offset = "0x9CDB60")]
	private static IEnumerator GenerativeDispatch(FujiSubArea area, int?[] sequenceToPlay_UNUSED, SequencerNoteType noteType)
	{
		return null;
	}
}
[Token(Token = "0x20000C4")]
public class SequenceDistributor : MonoBehaviour
{
	[Token(Token = "0x2000519")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB2F8", Offset = "0x9BB2F8")]
	private sealed class <RecordSequence>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400163B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400163C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400163D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SequenceDistributor <>4__this;

		[Token(Token = "0x170003E1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600229A")]
			[Address(RVA = "0xD378F4", Offset = "0xD378F4", VA = "0xD378F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600229C")]
			[Address(RVA = "0xD37964", Offset = "0xD37964", VA = "0xD37964", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002297")]
		[Address(RVA = "0xD37234", Offset = "0xD37234", VA = "0xD37234")]
		[DebuggerHidden]
		public <RecordSequence>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6002298")]
		[Address(RVA = "0xD37798", Offset = "0xD37798", VA = "0xD37798", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002299")]
		[Address(RVA = "0xD3779C", Offset = "0xD3779C", VA = "0xD3779C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600229B")]
		[Address(RVA = "0xD378FC", Offset = "0xD378FC", VA = "0xD378FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200051A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB308", Offset = "0x9BB308")]
	private sealed class <RecordingComplete>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400163E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400163F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SequenceDistributor <>4__this;

		[Token(Token = "0x4001641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool newRecording;

		[Token(Token = "0x170003E3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60022A0")]
			[Address(RVA = "0xD37D54", Offset = "0xD37D54", VA = "0xD37D54", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60022A2")]
			[Address(RVA = "0xD37DC4", Offset = "0xD37DC4", VA = "0xD37DC4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600229D")]
		[Address(RVA = "0xD372FC", Offset = "0xD372FC", VA = "0xD372FC")]
		[DebuggerHidden]
		public <RecordingComplete>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x600229E")]
		[Address(RVA = "0xD3796C", Offset = "0xD3796C", VA = "0xD3796C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600229F")]
		[Address(RVA = "0xD37970", Offset = "0xD37970", VA = "0xD37970", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60022A1")]
		[Address(RVA = "0xD37D5C", Offset = "0xD37D5C", VA = "0xD37D5C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200051B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB318", Offset = "0x9BB318")]
	private sealed class <DoIdle>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SequenceDistributor <>4__this;

		[Token(Token = "0x4001645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <idleMeasures>5__2;

		[Token(Token = "0x4001646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <elapsedMeasures>5__3;

		[Token(Token = "0x170003E5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60022A6")]
			[Address(RVA = "0xD37720", Offset = "0xD37720", VA = "0xD37720", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60022A8")]
			[Address(RVA = "0xD37790", Offset = "0xD37790", VA = "0xD37790", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022A3")]
		[Address(RVA = "0xD37328", Offset = "0xD37328", VA = "0xD37328")]
		[DebuggerHidden]
		public <DoIdle>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x60022A4")]
		[Address(RVA = "0xD3749C", Offset = "0xD3749C", VA = "0xD3749C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60022A5")]
		[Address(RVA = "0xD374A0", Offset = "0xD374A0", VA = "0xD374A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60022A7")]
		[Address(RVA = "0xD37728", Offset = "0xD37728", VA = "0xD37728", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private FujiSubArea _area;

	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private SequenceDispatcher.SequenceDispatchPolicy _dispatchPolicy;

	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private int _maxSequencerNotes;

	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private int _maxStoredSequences;

	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private SequencerNoteType _noteType;

	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x9BFF14", Offset = "0x9BFF14")]
	private Vector2 _idleMeasureRange;

	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ArrayRingBuffer<int?[]> _storedSequences;

	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int?[] _currentSequence;

	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int _currentStepIndex;

	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Coroutine _playbackCoroutine;

	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Coroutine _recordingCoroutine;

	[Token(Token = "0x400056E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Coroutine _idleCoroutine;

	[Token(Token = "0x6000623")]
	[Address(RVA = "0xD368BC", Offset = "0xD368BC", VA = "0xD368BC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000624")]
	[Address(RVA = "0xD36AD4", Offset = "0xD36AD4", VA = "0xD36AD4")]
	private void OnAreaChanged(FujiAreaService areaService)
	{
	}

	[Token(Token = "0x6000625")]
	[Address(RVA = "0xD36DB8", Offset = "0xD36DB8", VA = "0xD36DB8")]
	private void ControllersAddedToArea(FujiSubArea area, List<SequencerController> sequencers)
	{
	}

	[Token(Token = "0x6000626")]
	[Address(RVA = "0xD37060", Offset = "0xD37060", VA = "0xD37060")]
	private void SequencerInputRecorded(int index, SequencerController controller)
	{
	}

	[Token(Token = "0x6000627")]
	[Address(RVA = "0xD371C0", Offset = "0xD371C0", VA = "0xD371C0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CDBC4", Offset = "0x9CDBC4")]
	private IEnumerator RecordSequence()
	{
		return null;
	}

	[Token(Token = "0x6000628")]
	[Address(RVA = "0xD37260", Offset = "0xD37260", VA = "0xD37260")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CDC28", Offset = "0x9CDC28")]
	private IEnumerator RecordingComplete(bool newRecording)
	{
		return null;
	}

	[Token(Token = "0x6000629")]
	[Address(RVA = "0xD36A60", Offset = "0xD36A60", VA = "0xD36A60")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CDC8C", Offset = "0x9CDC8C")]
	private IEnumerator DoIdle()
	{
		return null;
	}

	[Token(Token = "0x600062A")]
	[Address(RVA = "0xD36C3C", Offset = "0xD36C3C", VA = "0xD36C3C")]
	private void ToggleSequencers(bool state)
	{
	}

	[Token(Token = "0x600062B")]
	[Address(RVA = "0xD37440", Offset = "0xD37440", VA = "0xD37440")]
	public SequenceDistributor()
	{
	}
}
[Serializable]
[Token(Token = "0x20000C5")]
public class SequencerInputRecorder
{
	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool SupportsSequencerDistributon;

	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<int> _recordedIndices;

	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SequencerController _controller;

	[Token(Token = "0x17000093")]
	public int[] RecordedIndices
	{
		[Token(Token = "0x600062C")]
		[Address(RVA = "0xD38EB4", Offset = "0xD38EB4", VA = "0xD38EB4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000012")]
	public event Action<int, SequencerController> InputRecorded
	{
		[Token(Token = "0x600062D")]
		[Address(RVA = "0xD36F74", Offset = "0xD36F74", VA = "0xD36F74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CDCF0", Offset = "0x9CDCF0")]
		add
		{
		}
		[Token(Token = "0x600062E")]
		[Address(RVA = "0xD37354", Offset = "0xD37354", VA = "0xD37354")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CDD00", Offset = "0x9CDD00")]
		remove
		{
		}
	}

	[Token(Token = "0x600062F")]
	[Address(RVA = "0xD38884", Offset = "0xD38884", VA = "0xD38884")]
	public void Enable(SequencerController controller)
	{
	}

	[Token(Token = "0x6000630")]
	[Address(RVA = "0xD38B5C", Offset = "0xD38B5C", VA = "0xD38B5C")]
	public void Disable()
	{
	}

	[Token(Token = "0x6000631")]
	[Address(RVA = "0xD39610", Offset = "0xD39610", VA = "0xD39610")]
	private void SequencerIndexToggled(int index, SequencerController source)
	{
	}

	[Token(Token = "0x6000632")]
	[Address(RVA = "0xD396B4", Offset = "0xD396B4", VA = "0xD396B4")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000633")]
	[Address(RVA = "0xD39714", Offset = "0xD39714", VA = "0xD39714")]
	public SequencerInputRecorder()
	{
	}
}
[Serializable]
[Token(Token = "0x20000C6")]
public class SequencerTimer
{
	[Token(Token = "0x200051C")]
	public enum SequencerTimerMode
	{
		[Token(Token = "0x4001648")]
		StandardTimer,
		[Token(Token = "0x4001649")]
		UserIdle,
		[Token(Token = "0x400164A")]
		UserIdleBeats
	}

	[Token(Token = "0x200051D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB328", Offset = "0x9BB328")]
	private sealed class <DoTimer>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400164B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400164C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400164D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SequencerTimer <>4__this;

		[Token(Token = "0x170003E7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60022AC")]
			[Address(RVA = "0xD65174", Offset = "0xD65174", VA = "0xD65174", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60022AE")]
			[Address(RVA = "0xD651E4", Offset = "0xD651E4", VA = "0xD651E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022A9")]
		[Address(RVA = "0xD64E64", Offset = "0xD64E64", VA = "0xD64E64")]
		[DebuggerHidden]
		public <DoTimer>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x60022AA")]
		[Address(RVA = "0xD64F1C", Offset = "0xD64F1C", VA = "0xD64F1C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60022AB")]
		[Address(RVA = "0xD64F20", Offset = "0xD64F20", VA = "0xD64F20", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60022AD")]
		[Address(RVA = "0xD6517C", Offset = "0xD6517C", VA = "0xD6517C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private bool _timerEnabled;

	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private SequencerTimerMode _timerMode;

	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float _timerDuration;

	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SequencerController _controller;

	[Token(Token = "0x4000577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Coroutine _doTimerCoroutine;

	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float _timeSinceLastSequencerInput;

	[Token(Token = "0x4000579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int _beatsSinceLastInput;

	[Token(Token = "0x17000094")]
	public bool TimerEnabled
	{
		[Token(Token = "0x6000638")]
		[Address(RVA = "0xD64B3C", Offset = "0xD64B3C", VA = "0xD64B3C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000639")]
		[Address(RVA = "0xD64B44", Offset = "0xD64B44", VA = "0xD64B44")]
		set
		{
		}
	}

	[Token(Token = "0x14000013")]
	public event Action OnTimerExpired
	{
		[Token(Token = "0x6000636")]
		[Address(RVA = "0xD64964", Offset = "0xD64964", VA = "0xD64964")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CDD10", Offset = "0x9CDD10")]
		add
		{
		}
		[Token(Token = "0x6000637")]
		[Address(RVA = "0xD64A50", Offset = "0xD64A50", VA = "0xD64A50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CDD20", Offset = "0x9CDD20")]
		remove
		{
		}
	}

	[Token(Token = "0x6000634")]
	[Address(RVA = "0xD64950", Offset = "0xD64950", VA = "0xD64950")]
	public void SetNumWaitBeats(int beats)
	{
	}

	[Token(Token = "0x6000635")]
	[Address(RVA = "0xD6495C", Offset = "0xD6495C", VA = "0xD6495C")]
	public void SetNumWaitSecs(float secs)
	{
	}

	[Token(Token = "0x600063A")]
	[Address(RVA = "0xD64B68", Offset = "0xD64B68", VA = "0xD64B68")]
	public void ResetTimer()
	{
	}

	[Token(Token = "0x600063B")]
	[Address(RVA = "0xD64BA4", Offset = "0xD64BA4", VA = "0xD64BA4")]
	public void SetTimerMode(SequencerTimerMode mode)
	{
	}

	[Token(Token = "0x600063C")]
	[Address(RVA = "0xD64BAC", Offset = "0xD64BAC", VA = "0xD64BAC")]
	public void Enable(SequencerController controller)
	{
	}

	[Token(Token = "0x600063D")]
	[Address(RVA = "0xD64CD0", Offset = "0xD64CD0", VA = "0xD64CD0")]
	public void Disable()
	{
	}

	[Token(Token = "0x600063E")]
	[Address(RVA = "0xD64DF0", Offset = "0xD64DF0", VA = "0xD64DF0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CDD30", Offset = "0x9CDD30")]
	private IEnumerator DoTimer()
	{
		return null;
	}

	[Token(Token = "0x600063F")]
	[Address(RVA = "0xD64E90", Offset = "0xD64E90", VA = "0xD64E90")]
	private void SequencerIndexToggled(int index, SequencerController controller)
	{
	}

	[Token(Token = "0x6000640")]
	[Address(RVA = "0xD64EA0", Offset = "0xD64EA0", VA = "0xD64EA0")]
	public void InputReceived()
	{
	}

	[Token(Token = "0x6000641")]
	[Address(RVA = "0xD64F00", Offset = "0xD64F00", VA = "0xD64F00")]
	public SequencerTimer()
	{
	}
}
[Token(Token = "0x20000C7")]
public class PlantAutoGrow : MonoBehaviour
{
	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float _delaySec;

	[Token(Token = "0x400057C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private PlantEntity _parentPlantEntity;

	[Token(Token = "0x6000642")]
	[Address(RVA = "0xEB36F8", Offset = "0xEB36F8", VA = "0xEB36F8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000643")]
	[Address(RVA = "0xEB3750", Offset = "0xEB3750", VA = "0xEB3750")]
	private void Start()
	{
	}

	[Token(Token = "0x6000644")]
	[Address(RVA = "0xEB385C", Offset = "0xEB385C", VA = "0xEB385C")]
	public PlantAutoGrow()
	{
	}

	[Token(Token = "0x6000645")]
	[Address(RVA = "0xEB386C", Offset = "0xEB386C", VA = "0xEB386C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CDD94", Offset = "0x9CDD94")]
	private void <Start>b__3_0()
	{
	}
}
[Token(Token = "0x20000C8")]
public class PlantGrowOnTrigger : MonoBehaviour
{
	[Token(Token = "0x400057D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private int _destroyAfterUses;

	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private PlantEntity _plantEntity;

	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Collider _collider;

	[Token(Token = "0x6000646")]
	[Address(RVA = "0xEB48D8", Offset = "0xEB48D8", VA = "0xEB48D8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000647")]
	[Address(RVA = "0xEB4C20", Offset = "0xEB4C20", VA = "0xEB4C20")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000648")]
	[Address(RVA = "0xEB4D20", Offset = "0xEB4D20", VA = "0xEB4D20")]
	public PlantGrowOnTrigger()
	{
	}
}
[Serializable]
[Token(Token = "0x20000C9")]
public struct SequencerToBlendshapeMap
{
	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int SequencerIndex;

	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public int BlendShapeIndex;
}
[Serializable]
[Token(Token = "0x20000CA")]
public class SequencerBlendShapeController
{
	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private bool _enableBlendShapeTweening;

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private float _blendShapeDuration;

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SkinnedMeshRenderer _skinnedRenderer;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private SequencerToBlendshapeMap[] _sequencerToBlendshapeIndexMap;

	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SequencerController _controller;

	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<int, Tweener> _tweenMap;

	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<int, int> _sequencerToBlendShapeLUT;

	[Token(Token = "0x6000649")]
	[Address(RVA = "0xD37DCC", Offset = "0xD37DCC", VA = "0xD37DCC")]
	public void Enable(SequencerController controller)
	{
	}

	[Token(Token = "0x600064A")]
	[Address(RVA = "0xD38024", Offset = "0xD38024", VA = "0xD38024")]
	public void Disable()
	{
	}

	[Token(Token = "0x600064B")]
	[Address(RVA = "0xD38200", Offset = "0xD38200", VA = "0xD38200")]
	private void OnSequencerPlay(int sequencerIndex, SequencerController controller)
	{
	}

	[Token(Token = "0x600064C")]
	[Address(RVA = "0xD38368", Offset = "0xD38368", VA = "0xD38368")]
	public SequencerBlendShapeController()
	{
	}
}
[Token(Token = "0x20000CB")]
public class SequencerController : MonoBehaviour
{
	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private PlantMappingPreset _plantMapping;

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject[] _inputNodes;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SequencerAutoPlayback PlaybackOptions;

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x9C002C", Offset = "0x9C002C")]
	private NullableFloat _cooldownTime;

	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<int, float> _cooldownDict;

	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private SequencerPlaySound _sequencerSoundOptions;

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private SequencerTweakJelly _jellyTweakingOptions;

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private SequencerInputRecorder _inputRecordingOptions;

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private SequencerTimer _sequencerTimerOptions;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private SequencerTouch _sequencerTouchOptions;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private SequencerBlendShapeController _sequencerBlendShapeOptions;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C00D8", Offset = "0x9C00D8")]
	private bool <CanPlay>k__BackingField;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C00E8", Offset = "0x9C00E8")]
	private BitArray <SequencerMask>k__BackingField;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int _currentMaskIndex;

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Action<int, SequencerController> OnSequencerPlay;

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Action<int, SequencerController> OnSequencerAutoPlay;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Action<int, SequencerController> OnSequencerIndexToggled;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Dictionary<int, int> _jellyPointToSequencerIndexLookup;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private FujiSubArea _fallbackArea;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C0108", Offset = "0x9C0108")]
	private FujiSubArea <_chosenArea>k__BackingField;

	[Token(Token = "0x17000095")]
	public PlantMappingPreset PlantMapping
	{
		[Token(Token = "0x600064D")]
		[Address(RVA = "0xD38408", Offset = "0xD38408", VA = "0xD38408")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000096")]
	public GameObject[] InputNodes
	{
		[Token(Token = "0x600064E")]
		[Address(RVA = "0xD38410", Offset = "0xD38410", VA = "0xD38410")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000097")]
	public float CooldownTime
	{
		[Token(Token = "0x600064F")]
		[Address(RVA = "0xD38418", Offset = "0xD38418", VA = "0xD38418")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000098")]
	public SequencerPlaySound SoundOptions
	{
		[Token(Token = "0x6000650")]
		[Address(RVA = "0xD38420", Offset = "0xD38420", VA = "0xD38420")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000099")]
	public SequencerTweakJelly JellyTweakingOptions
	{
		[Token(Token = "0x6000651")]
		[Address(RVA = "0xD38428", Offset = "0xD38428", VA = "0xD38428")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700009A")]
	public SequencerInputRecorder InputRecorder
	{
		[Token(Token = "0x6000652")]
		[Address(RVA = "0xD36F6C", Offset = "0xD36F6C", VA = "0xD36F6C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700009B")]
	public SequencerTimer SequencerTimer
	{
		[Token(Token = "0x6000653")]
		[Address(RVA = "0xD38430", Offset = "0xD38430", VA = "0xD38430")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700009C")]
	public SequencerTouch SequencerTouchOptions
	{
		[Token(Token = "0x6000654")]
		[Address(RVA = "0xD38438", Offset = "0xD38438", VA = "0xD38438")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700009D")]
	public SequencerBlendShapeController BlendShapeController
	{
		[Token(Token = "0x6000655")]
		[Address(RVA = "0xD38440", Offset = "0xD38440", VA = "0xD38440")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700009E")]
	public bool CanPlay
	{
		[Token(Token = "0x6000656")]
		[Address(RVA = "0xD38448", Offset = "0xD38448", VA = "0xD38448")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CDDA4", Offset = "0x9CDDA4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000657")]
		[Address(RVA = "0xD38450", Offset = "0xD38450", VA = "0xD38450")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CDDB4", Offset = "0x9CDDB4")]
		set
		{
		}
	}

	[Token(Token = "0x1700009F")]
	public int NumInputs
	{
		[Token(Token = "0x6000658")]
		[Address(RVA = "0xD35930", Offset = "0xD35930", VA = "0xD35930")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000A0")]
	public BitArray SequencerMask
	{
		[Token(Token = "0x6000659")]
		[Address(RVA = "0xD3845C", Offset = "0xD3845C", VA = "0xD3845C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CDDC4", Offset = "0x9CDDC4")]
		get
		{
			return null;
		}
		[Token(Token = "0x600065A")]
		[Address(RVA = "0xD38464", Offset = "0xD38464", VA = "0xD38464")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CDDD4", Offset = "0x9CDDD4")]
		private set
		{
		}
	}

	[Token(Token = "0x170000A1")]
	public FujiSubArea _chosenArea
	{
		[Token(Token = "0x600065C")]
		[Address(RVA = "0xD2D8BC", Offset = "0xD2D8BC", VA = "0xD2D8BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CDDF4", Offset = "0x9CDDF4")]
		get
		{
			return default(FujiSubArea);
		}
		[Token(Token = "0x600065B")]
		[Address(RVA = "0xD3846C", Offset = "0xD3846C", VA = "0xD3846C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CDDE4", Offset = "0x9CDDE4")]
		private set
		{
		}
	}

	[Token(Token = "0x600065D")]
	[Address(RVA = "0xD38474", Offset = "0xD38474", VA = "0xD38474")]
	private void Awake()
	{
	}

	[Token(Token = "0x600065E")]
	[Address(RVA = "0xD386E4", Offset = "0xD386E4", VA = "0xD386E4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600065F")]
	[Address(RVA = "0xD389CC", Offset = "0xD389CC", VA = "0xD389CC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000660")]
	[Address(RVA = "0xD38C94", Offset = "0xD38C94", VA = "0xD38C94")]
	public void Reregister(FujiSubArea oldArea, FujiSubArea newArea)
	{
	}

	[Token(Token = "0x6000661")]
	[Address(RVA = "0xD38D40", Offset = "0xD38D40", VA = "0xD38D40")]
	private void OnSequencerStep(SequencerStepEvent e)
	{
	}

	[Token(Token = "0x6000662")]
	[Address(RVA = "0xD359D0", Offset = "0xD359D0", VA = "0xD359D0")]
	public Transform GetInputTransformAtIndex(int index)
	{
		return null;
	}

	[Token(Token = "0x6000663")]
	[Address(RVA = "0xD38DE0", Offset = "0xD38DE0", VA = "0xD38DE0")]
	public int[] GetAllJellyIndicesForIndex(int index)
	{
		return null;
	}

	[Token(Token = "0x6000664")]
	[Address(RVA = "0xD38E18", Offset = "0xD38E18", VA = "0xD38E18")]
	public int GetSequencerIndexForJellyPointIndex(int jellyPointIndex)
	{
		return default(int);
	}

	[Token(Token = "0x6000665")]
	[Address(RVA = "0xD38E88", Offset = "0xD38E88", VA = "0xD38E88")]
	public int[] GetRecordedIndices()
	{
		return null;
	}

	[Token(Token = "0x6000666")]
	[Address(RVA = "0xD3595C", Offset = "0xD3595C", VA = "0xD3595C")]
	public void AutoPlayAtIndex(int index)
	{
	}

	[Token(Token = "0x6000667")]
	[Address(RVA = "0xD39088", Offset = "0xD39088", VA = "0xD39088")]
	public void PlayAtIndex(int index)
	{
	}

	[Token(Token = "0x6000668")]
	[Address(RVA = "0xD38F14", Offset = "0xD38F14", VA = "0xD38F14")]
	private void PlayInternal(int index)
	{
	}

	[Token(Token = "0x6000669")]
	[Address(RVA = "0xD391F8", Offset = "0xD391F8", VA = "0xD391F8")]
	public void ToggleMaskAtIndex(int index, [Optional] GameObject source)
	{
	}

	[Token(Token = "0x600066A")]
	[Address(RVA = "0xD39124", Offset = "0xD39124", VA = "0xD39124")]
	public bool IsOnCooldown(int index)
	{
		return default(bool);
	}

	[Token(Token = "0x600066B")]
	[Address(RVA = "0xD3935C", Offset = "0xD3935C", VA = "0xD3935C")]
	public void PutIndexOnCooldown(int index)
	{
	}

	[Token(Token = "0x600066C")]
	[Address(RVA = "0xD393E4", Offset = "0xD393E4", VA = "0xD393E4")]
	public void SetMask(bool[] mask)
	{
	}

	[Token(Token = "0x600066D")]
	[Address(RVA = "0xD39454", Offset = "0xD39454", VA = "0xD39454")]
	public void SetMask(BitArray mask)
	{
	}

	[Token(Token = "0x600066E")]
	[Address(RVA = "0xD394C4", Offset = "0xD394C4", VA = "0xD394C4")]
	public void ClearMask()
	{
	}

	[Token(Token = "0x600066F")]
	[Address(RVA = "0xD3953C", Offset = "0xD3953C", VA = "0xD3953C")]
	public void ResetIndex()
	{
	}

	[Token(Token = "0x6000670")]
	[Address(RVA = "0xD39544", Offset = "0xD39544", VA = "0xD39544")]
	public bool IsIndexActive(int index)
	{
		return default(bool);
	}

	[Token(Token = "0x6000671")]
	[Address(RVA = "0xD39558", Offset = "0xD39558", VA = "0xD39558")]
	public SequencerController()
	{
	}
}
[Serializable]
[Token(Token = "0x20000CC")]
public class SequencerPlaySound
{
	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool BypassSound;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[EventRef]
	public string EventToPlay;

	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string ParamName;

	[Token(Token = "0x6000672")]
	[Address(RVA = "0xD636D8", Offset = "0xD636D8", VA = "0xD636D8")]
	public SequencerPlaySound()
	{
	}
}
[Serializable]
[Token(Token = "0x20000CD")]
public struct SequencerAutoPlayback
{
	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool AutoPlayback;

	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public SequencerNoteType NoteType;
}
[Serializable]
[Token(Token = "0x20000CE")]
public class SequencerTouch
{
	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool PlayOnTouch;

	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public bool ReactToTouch;

	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9C0128", Offset = "0x9C0128")]
	public float ForceMultiplier;

	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool PreventSameIndexTriggering;

	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SequencerController _controller;

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private JellySystem _jellySystem;

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int lastIndexTriggered;

	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Dictionary<int, PlayerControllerInput> _jellyTouchesThisFrame;

	[Token(Token = "0x14000014")]
	public event Action<int> OnSequencerTouch
	{
		[Token(Token = "0x6000673")]
		[Address(RVA = "0xD651EC", Offset = "0xD651EC", VA = "0xD651EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CDE04", Offset = "0x9CDE04")]
		add
		{
		}
		[Token(Token = "0x6000674")]
		[Address(RVA = "0xD652D8", Offset = "0xD652D8", VA = "0xD652D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CDE14", Offset = "0x9CDE14")]
		remove
		{
		}
	}

	[Token(Token = "0x6000675")]
	[Address(RVA = "0xD653C4", Offset = "0xD653C4", VA = "0xD653C4")]
	public void Enable(SequencerController controller)
	{
	}

	[Token(Token = "0x6000676")]
	[Address(RVA = "0xD65498", Offset = "0xD65498", VA = "0xD65498")]
	public void Disable()
	{
	}

	[Token(Token = "0x6000677")]
	[Address(RVA = "0xD6548C", Offset = "0xD6548C", VA = "0xD6548C")]
	public void ResetLastTouchedIndex()
	{
	}

	[Token(Token = "0x6000678")]
	[Address(RVA = "0xD65528", Offset = "0xD65528", VA = "0xD65528")]
	private void OnJellyTouchReport(IReadOnlyList<JellySystem.JellyTouchResult> results, float dt)
	{
	}

	[Token(Token = "0x6000679")]
	[Address(RVA = "0xD65B78", Offset = "0xD65B78", VA = "0xD65B78")]
	public SequencerTouch()
	{
	}
}
[Serializable]
[Token(Token = "0x20000CF")]
public class SequencerTweakJelly
{
	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private bool _tweakOnAutoplay;

	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private Vector3 _tweakDirection;

	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<int, int> _jellyPointLookupTable;

	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SequencerController _controller;

	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private JellySystem _jellySystem;

	[Token(Token = "0x170000A2")]
	public Vector3 TweakDirection
	{
		[Token(Token = "0x600067A")]
		[Address(RVA = "0xD65BF8", Offset = "0xD65BF8", VA = "0xD65BF8")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170000A3")]
	public bool IsJellyAsleep
	{
		[Token(Token = "0x600067B")]
		[Address(RVA = "0xD65C04", Offset = "0xD65C04", VA = "0xD65C04")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600067C")]
	[Address(RVA = "0xD65CA0", Offset = "0xD65CA0", VA = "0xD65CA0")]
	public void Enable(SequencerController controller)
	{
	}

	[Token(Token = "0x600067D")]
	[Address(RVA = "0xD65FB0", Offset = "0xD65FB0", VA = "0xD65FB0")]
	public void Disable()
	{
	}

	[Token(Token = "0x600067E")]
	[Address(RVA = "0xD661C4", Offset = "0xD661C4", VA = "0xD661C4")]
	private void TweakAtIndex(int index, SequencerController source)
	{
	}

	[Token(Token = "0x600067F")]
	[Address(RVA = "0xD662B0", Offset = "0xD662B0", VA = "0xD662B0")]
	public SequencerTweakJelly()
	{
	}
}
[Token(Token = "0x20000D0")]
public class SerpentBoatEvent : MonoBehaviour
{
	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LightRailPath ConnectedLightRailPath;

	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private BoatEventType _EventType;

	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float _SerpentSplineTravelTime;

	[Token(Token = "0x6000680")]
	[Address(RVA = "0xD662B8", Offset = "0xD662B8", VA = "0xD662B8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000681")]
	[Address(RVA = "0xD663C0", Offset = "0xD663C0", VA = "0xD663C0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000682")]
	[Address(RVA = "0xD664CC", Offset = "0xD664CC", VA = "0xD664CC")]
	private void HandleBoatEventMessage(BoatEvent message)
	{
	}

	[Token(Token = "0x6000683")]
	[Address(RVA = "0xD66524", Offset = "0xD66524", VA = "0xD66524")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9CDE24", Offset = "0x9CDE24")]
	public void PlayFollowSpline()
	{
	}

	[Token(Token = "0x6000684")]
	[Address(RVA = "0xD66750", Offset = "0xD66750", VA = "0xD66750")]
	public SerpentBoatEvent()
	{
	}
}
[Token(Token = "0x20000D1")]
public class SerpentPath : MonoBehaviour
{
	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SplineComputer _spline;

	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float _SerpentSplineTravelTime;

	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private FujiNarrativeKey _OptionalOneTimeUseKey;

	[Token(Token = "0x170000A4")]
	public float SerpentSplintTravelTime
	{
		[Token(Token = "0x6000685")]
		[Address(RVA = "0xD6A644", Offset = "0xD6A644", VA = "0xD6A644")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000686")]
	[Address(RVA = "0xD6A64C", Offset = "0xD6A64C", VA = "0xD6A64C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9CDE5C", Offset = "0x9CDE5C")]
	public void PlaySerpentFollowSpline()
	{
	}

	[Token(Token = "0x6000687")]
	[Address(RVA = "0xD6A654", Offset = "0xD6A654", VA = "0xD6A654")]
	public void PlaySerpentFollowSpline(bool hideSerpAtEnd)
	{
	}

	[Token(Token = "0x6000688")]
	[Address(RVA = "0xD6A788", Offset = "0xD6A788", VA = "0xD6A788")]
	public SerpentPath()
	{
	}
}
[Token(Token = "0x20000D2")]
public class SerpentService : MonoBehaviour, ServiceLocator.ILocatableService
{
	[Token(Token = "0x200051E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB338", Offset = "0x9BB338")]
	private sealed class <DoPostEnding>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400164E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400164F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SerpentService <>4__this;

		[Token(Token = "0x4001651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float3 <startingHeadPos>5__2;

		[Token(Token = "0x4001652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform[] <targets>5__3;

		[Token(Token = "0x170003E9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60022B2")]
			[Address(RVA = "0xD6B56C", Offset = "0xD6B56C", VA = "0xD6B56C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003EA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60022B4")]
			[Address(RVA = "0xD6B5DC", Offset = "0xD6B5DC", VA = "0xD6B5DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022AF")]
		[Address(RVA = "0xD6ACDC", Offset = "0xD6ACDC", VA = "0xD6ACDC")]
		[DebuggerHidden]
		public <DoPostEnding>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x60022B0")]
		[Address(RVA = "0xD6AFB8", Offset = "0xD6AFB8", VA = "0xD6AFB8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60022B1")]
		[Address(RVA = "0xD6AFBC", Offset = "0xD6AFBC", VA = "0xD6AFBC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60022B3")]
		[Address(RVA = "0xD6B574", Offset = "0xD6B574", VA = "0xD6B574", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200051F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB348", Offset = "0x9BB348")]
	private sealed class <>c
	{
		[Token(Token = "0x4001653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static DelegateActionTask<SerpentService>.DelegateTaskAction <>9__13_0;

		[Token(Token = "0x60022B6")]
		[Address(RVA = "0xD6AF80", Offset = "0xD6AF80", VA = "0xD6AF80")]
		public <>c()
		{
		}

		[Token(Token = "0x60022B7")]
		[Address(RVA = "0xD6AF88", Offset = "0xD6AF88", VA = "0xD6AF88")]
		internal void <HideSerpent>b__13_0(SerpentService self)
		{
		}
	}

	[Token(Token = "0x2000520")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB358", Offset = "0x9BB358")]
	private sealed class <_DoMoveSerpentBeneathWorld>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SerpentService <>4__this;

		[Token(Token = "0x170003EB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60022BB")]
			[Address(RVA = "0xD6B77C", Offset = "0xD6B77C", VA = "0xD6B77C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003EC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60022BD")]
			[Address(RVA = "0xD6B7EC", Offset = "0xD6B7EC", VA = "0xD6B7EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022B8")]
		[Address(RVA = "0xD6AED8", Offset = "0xD6AED8", VA = "0xD6AED8")]
		[DebuggerHidden]
		public <_DoMoveSerpentBeneathWorld>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x60022B9")]
		[Address(RVA = "0xD6B5E4", Offset = "0xD6B5E4", VA = "0xD6B5E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60022BA")]
		[Address(RVA = "0xD6B5E8", Offset = "0xD6B5E8", VA = "0xD6B5E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60022BC")]
		[Address(RVA = "0xD6B784", Offset = "0xD6B784", VA = "0xD6B784", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SerpentEntity _pfbSerpentEntity;

	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform _globalTarget;

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SerpentEntity _serpentInstance;

	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private TaskQueue<SerpentService> _taskQueue;

	[Token(Token = "0x6000689")]
	[Address(RVA = "0xD6A7A0", Offset = "0xD6A7A0", VA = "0xD6A7A0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600068A")]
	[Address(RVA = "0xD6A80C", Offset = "0xD6A80C", VA = "0xD6A80C")]
	public void Start()
	{
	}

	[Token(Token = "0x600068B")]
	[Address(RVA = "0xD6AA88", Offset = "0xD6AA88", VA = "0xD6AA88")]
	private void SetupMessageCallbacks()
	{
	}

	[Token(Token = "0x600068C")]
	[Address(RVA = "0xD6AA8C", Offset = "0xD6AA8C", VA = "0xD6AA8C")]
	private void Update()
	{
	}

	[Token(Token = "0x600068D")]
	[Address(RVA = "0xD665BC", Offset = "0xD665BC", VA = "0xD665BC")]
	public void FollowSpline(SplineComputer spline, float travelTime, bool force, bool deactivateSerpAtEnd)
	{
	}

	[Token(Token = "0x600068E")]
	[Address(RVA = "0xD6AAEC", Offset = "0xD6AAEC", VA = "0xD6AAEC")]
	public void PlayEndingDeconstruct()
	{
	}

	[Token(Token = "0x600068F")]
	[Address(RVA = "0xD6ABA8", Offset = "0xD6ABA8", VA = "0xD6ABA8")]
	public void AddPostEndingToTasks()
	{
	}

	[Token(Token = "0x6000690")]
	[Address(RVA = "0xD6A810", Offset = "0xD6A810", VA = "0xD6A810")]
	public void RecreateSerpent()
	{
	}

	[Token(Token = "0x6000691")]
	[Address(RVA = "0xD6AC18", Offset = "0xD6AC18", VA = "0xD6AC18")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CDE94", Offset = "0x9CDE94")]
	private IEnumerator DoPostEnding()
	{
		return null;
	}

	[Token(Token = "0x6000692")]
	[Address(RVA = "0xD6AD08", Offset = "0xD6AD08", VA = "0xD6AD08")]
	public void HideSerpent(bool immediate)
	{
	}

	[Token(Token = "0x6000693")]
	[Address(RVA = "0xD6AC8C", Offset = "0xD6AC8C", VA = "0xD6AC8C")]
	private void SetSerpentActive(bool active)
	{
	}

	[Token(Token = "0x6000694")]
	[Address(RVA = "0xD6AE64", Offset = "0xD6AE64", VA = "0xD6AE64")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CDEF8", Offset = "0x9CDEF8")]
	private IEnumerator _DoMoveSerpentBeneathWorld()
	{
		return null;
	}

	[Token(Token = "0x6000695")]
	[Address(RVA = "0xD6AF04", Offset = "0xD6AF04", VA = "0xD6AF04")]
	public SerpentService()
	{
	}

	[Token(Token = "0x6000696")]
	[Address(RVA = "0xD6AF0C", Offset = "0xD6AF0C", VA = "0xD6AF0C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CDF5C", Offset = "0x9CDF5C")]
	private void <FollowSpline>b__8_0()
	{
	}

	[Token(Token = "0x6000697")]
	[Address(RVA = "0xD6AF14", Offset = "0xD6AF14", VA = "0xD6AF14")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CDF6C", Offset = "0x9CDF6C")]
	private void <FollowSpline>b__8_1()
	{
	}
}
[Token(Token = "0x20000D3")]
public class SerpentTargetDemo : MonoBehaviour
{
	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float3 Center;

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float Radius;

	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float SimulationSpeed;

	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float AngleSpeed;

	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float Height;

	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float HeightSpeed;

	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float TwirlSpeed;

	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float3 oldPos;

	[Token(Token = "0x6000698")]
	[Address(RVA = "0xD6B7F4", Offset = "0xD6B7F4", VA = "0xD6B7F4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000699")]
	[Address(RVA = "0xD6BAE8", Offset = "0xD6BAE8", VA = "0xD6BAE8")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600069A")]
	[Address(RVA = "0xD6BB1C", Offset = "0xD6BB1C", VA = "0xD6BB1C")]
	public SerpentTargetDemo()
	{
	}
}
[Token(Token = "0x20000D4")]
public class SerpentTargetDemoRandomSpace : MonoBehaviour
{
	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float3 Center;

	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float Radius;

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float SimulationSpeed;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float AngleSpeed;

	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float Height;

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float HeightSpeed;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float TwirlSpeed;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float3 randomPlace;

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private quaternion worldRot;

	[Token(Token = "0x600069B")]
	[Address(RVA = "0xD6BB3C", Offset = "0xD6BB3C", VA = "0xD6BB3C")]
	private void Update()
	{
	}

	[Token(Token = "0x600069C")]
	[Address(RVA = "0xD6BF88", Offset = "0xD6BF88", VA = "0xD6BF88")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600069D")]
	[Address(RVA = "0xD6BFBC", Offset = "0xD6BFBC", VA = "0xD6BFBC")]
	public SerpentTargetDemoRandomSpace()
	{
	}
}
[Token(Token = "0x20000D5")]
public class BGMService : MonoBehaviour, ServiceLocator.ILocatableService
{
	[Token(Token = "0x2000521")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB368", Offset = "0x9BB368")]
	private sealed class <>c__DisplayClass13_0
	{
		[Token(Token = "0x4001658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BGMService <>4__this;

		[Token(Token = "0x4001659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string paramName;

		[Token(Token = "0x60022BE")]
		[Address(RVA = "0xB9BC4C", Offset = "0xB9BC4C", VA = "0xB9BC4C")]
		public <>c__DisplayClass13_0()
		{
		}

		[Token(Token = "0x60022BF")]
		[Address(RVA = "0xB9C80C", Offset = "0xB9C80C", VA = "0xB9C80C")]
		internal void <ChangeBGMParam>b__1(float x)
		{
		}
	}

	[Token(Token = "0x2000522")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB378", Offset = "0x9BB378")]
	private sealed class <>c__DisplayClass13_1
	{
		[Token(Token = "0x400165A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float startVal;

		[Token(Token = "0x60022C0")]
		[Address(RVA = "0xB9BC54", Offset = "0xB9BC54", VA = "0xB9BC54")]
		public <>c__DisplayClass13_1()
		{
		}

		[Token(Token = "0x60022C1")]
		[Address(RVA = "0xB9C854", Offset = "0xB9C854", VA = "0xB9C854")]
		internal float <ChangeBGMParam>b__0()
		{
			return default(float);
		}
	}

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private FujiBGMPreset[] _bgmPreset;

	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AudioService _audioService;

	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<string, AudioService.AudioServiceLoopHandle> _BGMTrackLookup;

	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AudioService.AudioServiceLoopHandle _currentBGMTrack;

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private FujiBGMPreset _currentPreset;

	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C01F4", Offset = "0x9C01F4")]
	private bool <RespondToOnAreaChanged>k__BackingField;

	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Dictionary<string, TweenerCore<float, float, FloatOptions>> _currentTweens;

	[Token(Token = "0x170000A5")]
	public bool RespondToOnAreaChanged
	{
		[Token(Token = "0x600069E")]
		[Address(RVA = "0xB9BB44", Offset = "0xB9BB44", VA = "0xB9BB44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CDF7C", Offset = "0x9CDF7C")]
		private get
		{
			return default(bool);
		}
		[Token(Token = "0x600069F")]
		[Address(RVA = "0xB9BB4C", Offset = "0xB9BB4C", VA = "0xB9BB4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CDF8C", Offset = "0x9CDF8C")]
		set
		{
		}
	}

	[Token(Token = "0x170000A6")]
	public FujiBGMPreset CurrentPreset
	{
		[Token(Token = "0x60006A0")]
		[Address(RVA = "0xB9BB58", Offset = "0xB9BB58", VA = "0xB9BB58")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60006A1")]
	[Address(RVA = "0xB9BB60", Offset = "0xB9BB60", VA = "0xB9BB60")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0xB9901C", Offset = "0xB9901C", VA = "0xB9901C")]
	public void ChangeBGMParam(string paramName, float paramValue, float lerpTime = 0f)
	{
	}

	[Token(Token = "0x60006A3")]
	[Address(RVA = "0xB99714", Offset = "0xB99714", VA = "0xB99714")]
	public float GetBGMParam(string paramName)
	{
		return default(float);
	}

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0xB9BC5C", Offset = "0xB9BC5C", VA = "0xB9BC5C")]
	private void OnAreaChanged(FujiAreaService service)
	{
	}

	[Token(Token = "0x60006A5")]
	[Address(RVA = "0xB9C19C", Offset = "0xB9C19C", VA = "0xB9C19C")]
	private void ResetAllParamsForCurrentArea()
	{
	}

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0xB9BE18", Offset = "0xB9BE18", VA = "0xB9BE18")]
	public void StartBGMForZone(LoadingZoneKey zone)
	{
	}

	[Token(Token = "0x60006A7")]
	[Address(RVA = "0xB9C274", Offset = "0xB9C274", VA = "0xB9C274")]
	public void StopBGMForZone(LoadingZoneKey zone)
	{
	}

	[Token(Token = "0x60006A8")]
	[Address(RVA = "0xB9C608", Offset = "0xB9C608", VA = "0xB9C608")]
	public void StopAllBGM()
	{
	}

	[Token(Token = "0x60006A9")]
	[Address(RVA = "0xB9C794", Offset = "0xB9C794", VA = "0xB9C794")]
	public BGMService()
	{
	}
}
[Token(Token = "0x20000D6")]
public class FMODMarkerService : ServiceLocator.ILocatableService
{
	[StructLayout(0)]
	[Token(Token = "0x2000523")]
	private class TimelineInfo
	{
		[Token(Token = "0x400165B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int currentMusicBar;

		[Token(Token = "0x400165C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StringWrapper lastMarker;

		[Token(Token = "0x60022C2")]
		[Address(RVA = "0xC60F38", Offset = "0xC60F38", VA = "0xC60F38")]
		public TimelineInfo()
		{
		}
	}

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private TimelineInfo timelineInfo;

	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GCHandle timelineHandle;

	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private EVENT_CALLBACK beatCallback;

	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private EventInstance musicInstance;

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0xC60DFC", Offset = "0xC60DFC", VA = "0xC60DFC")]
	public FMODMarkerService()
	{
	}

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0xC60F40", Offset = "0xC60F40", VA = "0xC60F40", Slot = "1")]
	~FMODMarkerService()
	{
	}

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0xC60AA0", Offset = "0xC60AA0", VA = "0xC60AA0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9CDF9C", Offset = "0x9CDF9C")]
	private static RESULT EventCallback(EVENT_CALLBACK_TYPE type, EventInstance instance, IntPtr parameterPtr)
	{
		return default(RESULT);
	}
}
[Token(Token = "0x20000D7")]
public class FujiAreaService : ServiceLocator.ILocatableService
{
	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C0204", Offset = "0x9C0204")]
	private FujiSubArea <CurrentArea>k__BackingField;

	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C0214", Offset = "0x9C0214")]
	private FujiSubArea <PreviousArea>k__BackingField;

	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C0224", Offset = "0x9C0224")]
	private FujiAtmosphericPreset <CurrentAtmosphericPreset>k__BackingField;

	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C0234", Offset = "0x9C0234")]
	private FujiAreaEntryBlendParams <CurrentEnterAreaParams>k__BackingField;

	[Token(Token = "0x170000A7")]
	public FujiSubArea CurrentArea
	{
		[Token(Token = "0x60006AD")]
		[Address(RVA = "0xBE6570", Offset = "0xBE6570", VA = "0xBE6570")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CE000", Offset = "0x9CE000")]
		get
		{
			return default(FujiSubArea);
		}
		[Token(Token = "0x60006AE")]
		[Address(RVA = "0xBE6578", Offset = "0xBE6578", VA = "0xBE6578")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CE010", Offset = "0x9CE010")]
		private set
		{
		}
	}

	[Token(Token = "0x170000A8")]
	public FujiSubArea PreviousArea
	{
		[Token(Token = "0x60006AF")]
		[Address(RVA = "0xBE6580", Offset = "0xBE6580", VA = "0xBE6580")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CE020", Offset = "0x9CE020")]
		get
		{
			return default(FujiSubArea);
		}
		[Token(Token = "0x60006B0")]
		[Address(RVA = "0xBE6588", Offset = "0xBE6588", VA = "0xBE6588")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CE030", Offset = "0x9CE030")]
		private set
		{
		}
	}

	[Token(Token = "0x170000A9")]
	public FujiAtmosphericPreset CurrentAtmosphericPreset
	{
		[Token(Token = "0x60006B1")]
		[Address(RVA = "0xBE6590", Offset = "0xBE6590", VA = "0xBE6590")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CE040", Offset = "0x9CE040")]
		get
		{
			return null;
		}
		[Token(Token = "0x60006B2")]
		[Address(RVA = "0xBE6598", Offset = "0xBE6598", VA = "0xBE6598")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CE050", Offset = "0x9CE050")]
		private set
		{
		}
	}

	[Token(Token = "0x170000AA")]
	public FujiAreaEntryBlendParams CurrentEnterAreaParams
	{
		[Token(Token = "0x60006B3")]
		[Address(RVA = "0xBE65A0", Offset = "0xBE65A0", VA = "0xBE65A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CE060", Offset = "0x9CE060")]
		get
		{
			return default(FujiAreaEntryBlendParams);
		}
		[Token(Token = "0x60006B4")]
		[Address(RVA = "0xBE65A8", Offset = "0xBE65A8", VA = "0xBE65A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CE070", Offset = "0x9CE070")]
		private set
		{
		}
	}

	[Token(Token = "0x14000015")]
	public event Action<FujiAreaService> AreaChanged
	{
		[Token(Token = "0x60006B5")]
		[Address(RVA = "0xBE65B0", Offset = "0xBE65B0", VA = "0xBE65B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CE080", Offset = "0x9CE080")]
		add
		{
		}
		[Token(Token = "0x60006B6")]
		[Address(RVA = "0xBE669C", Offset = "0xBE669C", VA = "0xBE669C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CE090", Offset = "0x9CE090")]
		remove
		{
		}
	}

	[Token(Token = "0x60006B7")]
	[Address(RVA = "0xBE6788", Offset = "0xBE6788", VA = "0xBE6788")]
	public void AreaEntered(FujiSubArea newArea, FujiAtmosphericPreset atmosphericPreset, FujiAreaEntryBlendParams newEnterAreaParams)
	{
	}

	[Token(Token = "0x60006B8")]
	[Address(RVA = "0xBE6884", Offset = "0xBE6884", VA = "0xBE6884")]
	public FujiAreaService()
	{
	}
}
[Token(Token = "0x20000D8")]
public interface IBoundaryDisplayService : ServiceLocator.ILocatableService
{
	[Token(Token = "0x170000AB")]
	bool Visible
	{
		[Token(Token = "0x60006B9")]
		get;
		[Token(Token = "0x60006BA")]
		set;
	}

	[Token(Token = "0x170000AC")]
	bool Enabled
	{
		[Token(Token = "0x60006BB")]
		get;
		[Token(Token = "0x60006BC")]
		set;
	}

	[Token(Token = "0x170000AD")]
	bool IsAvailable
	{
		[Token(Token = "0x60006BF")]
		get;
	}

	[Token(Token = "0x60006BD")]
	void SetLocationAbsolute(Vector3 pos, Quaternion rot);

	[Token(Token = "0x60006BE")]
	void SetLocationFromVr(Vector3 targetFootPosition);
}
[Token(Token = "0x20000D9")]
public class InactiveBoundaryDisplayService : IBoundaryDisplayService, ServiceLocator.ILocatableService
{
	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C0254", Offset = "0x9C0254")]
	private bool <Visible>k__BackingField;

	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C0264", Offset = "0x9C0264")]
	private bool <Enabled>k__BackingField;

	[Token(Token = "0x170000AE")]
	public bool IsAvailable
	{
		[Token(Token = "0x60006C0")]
		[Address(RVA = "0xDCDA0C", Offset = "0xDCDA0C", VA = "0xDCDA0C", Slot = "10")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000AF")]
	public bool Visible
	{
		[Token(Token = "0x60006C1")]
		[Address(RVA = "0xDCDA14", Offset = "0xDCDA14", VA = "0xDCDA14", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CE0A0", Offset = "0x9CE0A0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60006C2")]
		[Address(RVA = "0xDCDA1C", Offset = "0xDCDA1C", VA = "0xDCDA1C", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CE0B0", Offset = "0x9CE0B0")]
		set
		{
		}
	}

	[Token(Token = "0x170000B0")]
	public bool Enabled
	{
		[Token(Token = "0x60006C3")]
		[Address(RVA = "0xDCDA28", Offset = "0xDCDA28", VA = "0xDCDA28", Slot = "6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CE0C0", Offset = "0x9CE0C0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60006C4")]
		[Address(RVA = "0xDCDA30", Offset = "0xDCDA30", VA = "0xDCDA30", Slot = "7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CE0D0", Offset = "0x9CE0D0")]
		set
		{
		}
	}

	[Token(Token = "0x60006C5")]
	[Address(RVA = "0xDCDA3C", Offset = "0xDCDA3C", VA = "0xDCDA3C", Slot = "8")]
	public void SetLocationAbsolute(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x60006C6")]
	[Address(RVA = "0xDCDA40", Offset = "0xDCDA40", VA = "0xDCDA40", Slot = "9")]
	public void SetLocationFromVr(Vector3 targetFootPosition)
	{
	}

	[Token(Token = "0x60006C7")]
	[Address(RVA = "0xDCDA44", Offset = "0xDCDA44", VA = "0xDCDA44")]
	public void SetVisible(bool visible)
	{
	}

	[Token(Token = "0x60006C8")]
	[Address(RVA = "0xDCDA48", Offset = "0xDCDA48", VA = "0xDCDA48")]
	public InactiveBoundaryDisplayService()
	{
	}
}
[Token(Token = "0x20000DA")]
public class InventoryPortalService : MonoBehaviour, ServiceLocator.ILocatableService
{
	[Token(Token = "0x2000524")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB388", Offset = "0x9BB388")]
	private sealed class <>c__DisplayClass9_0
	{
		[Token(Token = "0x400165D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 targetPos;

		[Token(Token = "0x60022C3")]
		[Address(RVA = "0xDD7404", Offset = "0xDD7404", VA = "0xDD7404")]
		public <>c__DisplayClass9_0()
		{
		}

		[Token(Token = "0x60022C4")]
		[Address(RVA = "0xDD7600", Offset = "0xDD7600", VA = "0xDD7600")]
		internal void <WarpPlayer>b__0()
		{
		}
	}

	[Token(Token = "0x2000525")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB398", Offset = "0x9BB398")]
	private sealed class <DoPortals>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400165E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400165F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InventoryPortalService <>4__this;

		[Token(Token = "0x170003ED")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60022C8")]
			[Address(RVA = "0xDD7A14", Offset = "0xDD7A14", VA = "0xDD7A14", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003EE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60022CA")]
			[Address(RVA = "0xDD7A84", Offset = "0xDD7A84", VA = "0xDD7A84", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022C5")]
		[Address(RVA = "0xDD740C", Offset = "0xDD740C", VA = "0xDD740C")]
		[DebuggerHidden]
		public <DoPortals>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x60022C6")]
		[Address(RVA = "0xDD7688", Offset = "0xDD7688", VA = "0xDD7688", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60022C7")]
		[Address(RVA = "0xDD768C", Offset = "0xDD768C", VA = "0xDD768C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60022C9")]
		[Address(RVA = "0xDD7A1C", Offset = "0xDD7A1C", VA = "0xDD7A1C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9C0274", Offset = "0x9C0274")]
	public float InventoryRadius;

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float InventoryFloorHeight;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float InventoryCeilingHeight;

	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9C02AC", Offset = "0x9C02AC")]
	[SerializeField]
	private InventoryPortal _gardenPortalInstance;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private InventoryPortal _remotePortalInstance;

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0xDD6E04", Offset = "0xDD6E04", VA = "0xDD6E04")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006CA")]
	[Address(RVA = "0xDD6E54", Offset = "0xDD6E54", VA = "0xDD6E54")]
	private void Start()
	{
	}

	[Token(Token = "0x60006CB")]
	[Address(RVA = "0xDD6F84", Offset = "0xDD6F84", VA = "0xDD6F84")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0xDD7028", Offset = "0xDD7028", VA = "0xDD7028")]
	private void OnPostTeleport()
	{
	}

	[Token(Token = "0x60006CD")]
	[Address(RVA = "0xDD7258", Offset = "0xDD7258", VA = "0xDD7258")]
	private void WarpPlayer(InventoryPortal inPortal)
	{
	}

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0xDD6F10", Offset = "0xDD6F10", VA = "0xDD6F10")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CE0E0", Offset = "0x9CE0E0")]
	private IEnumerator DoPortals()
	{
		return null;
	}

	[Token(Token = "0x60006CF")]
	[Address(RVA = "0xDD7438", Offset = "0xDD7438", VA = "0xDD7438")]
	private float3 RandomWorldPositionInInventory()
	{
		return default(float3);
	}

	[Token(Token = "0x60006D0")]
	[Address(RVA = "0xDD7520", Offset = "0xDD7520", VA = "0xDD7520")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60006D1")]
	[Address(RVA = "0xDD6AE8", Offset = "0xDD6AE8", VA = "0xDD6AE8")]
	public void Warp(InteractiveCore iCore, InventoryPortal inventoryPortal)
	{
	}

	[Token(Token = "0x60006D2")]
	[Address(RVA = "0xDD75E4", Offset = "0xDD75E4", VA = "0xDD75E4")]
	public InventoryPortalService()
	{
	}
}
[Token(Token = "0x20000DB")]
public sealed class OculusBoundaryDisplayService : MonoBehaviour, IBoundaryDisplayService, ServiceLocator.ILocatableService
{
	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C0308", Offset = "0x9C0308")]
	private bool <Enabled>k__BackingField;

	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Cooldown cool;

	[Token(Token = "0x170000B1")]
	public bool IsAvailable
	{
		[Token(Token = "0x60006D3")]
		[Address(RVA = "0x117C374", Offset = "0x117C374", VA = "0x117C374", Slot = "10")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000B2")]
	public bool Visible
	{
		[Token(Token = "0x60006D4")]
		[Address(RVA = "0x117C37C", Offset = "0x117C37C", VA = "0x117C37C", Slot = "4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60006D5")]
		[Address(RVA = "0x117C3B0", Offset = "0x117C3B0", VA = "0x117C3B0", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x170000B3")]
	public bool Enabled
	{
		[Token(Token = "0x60006D6")]
		[Address(RVA = "0x117C454", Offset = "0x117C454", VA = "0x117C454", Slot = "6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CE144", Offset = "0x9CE144")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60006D7")]
		[Address(RVA = "0x117C45C", Offset = "0x117C45C", VA = "0x117C45C", Slot = "7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CE154", Offset = "0x9CE154")]
		set
		{
		}
	}

	[Token(Token = "0x60006D8")]
	[Address(RVA = "0x117C468", Offset = "0x117C468", VA = "0x117C468")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006D9")]
	[Address(RVA = "0x117CB54", Offset = "0x117CB54", VA = "0x117CB54")]
	private void Start()
	{
	}

	[Token(Token = "0x60006DA")]
	[Address(RVA = "0x117CB5C", Offset = "0x117CB5C", VA = "0x117CB5C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006DB")]
	[Address(RVA = "0x117CC24", Offset = "0x117CC24", VA = "0x117CC24")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60006DC")]
	[Address(RVA = "0x117CCEC", Offset = "0x117CCEC", VA = "0x117CCEC")]
	private void Update()
	{
	}

	[Token(Token = "0x60006DD")]
	[Address(RVA = "0x117C3B8", Offset = "0x117C3B8", VA = "0x117C3B8")]
	public void SetVisible(bool visible)
	{
	}

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0x117CE14", Offset = "0x117CE14", VA = "0x117CE14", Slot = "8")]
	public void SetLocationAbsolute(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x60006DF")]
	[Address(RVA = "0x117CEA0", Offset = "0x117CEA0", VA = "0x117CEA0", Slot = "9")]
	public void SetLocationFromVr(Vector3 targetFootPosition)
	{
	}

	[Token(Token = "0x60006E0")]
	[Address(RVA = "0x117D03C", Offset = "0x117D03C", VA = "0x117D03C")]
	public OculusBoundaryDisplayService()
	{
	}
}
[Token(Token = "0x20000DC")]
public class SequencerService : ServiceLocator.ILocatableService
{
	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Dictionary<FujiSubArea, List<SequencerController>> _sequencerDict;

	[Token(Token = "0x14000016")]
	public event Action<FujiSubArea, List<SequencerController>> ControllersAddedToArea
	{
		[Token(Token = "0x60006E1")]
		[Address(RVA = "0xD63BB8", Offset = "0xD63BB8", VA = "0xD63BB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CE164", Offset = "0x9CE164")]
		add
		{
		}
		[Token(Token = "0x60006E2")]
		[Address(RVA = "0xD63CA4", Offset = "0xD63CA4", VA = "0xD63CA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CE174", Offset = "0x9CE174")]
		remove
		{
		}
	}

	[Token(Token = "0x60006E3")]
	[Address(RVA = "0xD63D90", Offset = "0xD63D90", VA = "0xD63D90")]
	public SequencerService()
	{
	}

	[Token(Token = "0x60006E4")]
	[Address(RVA = "0xD63E70", Offset = "0xD63E70", VA = "0xD63E70")]
	public void RegisterSequencer(FujiSubArea area, SequencerController controller)
	{
	}

	[Token(Token = "0x60006E5")]
	[Address(RVA = "0xD640B0", Offset = "0xD640B0", VA = "0xD640B0")]
	public void RegisterSequencers(FujiSubArea area, SequencerController[] controllers)
	{
	}

	[Token(Token = "0x60006E6")]
	[Address(RVA = "0xD643EC", Offset = "0xD643EC", VA = "0xD643EC")]
	public void UnregisterSequencer(FujiSubArea area, SequencerController controller)
	{
	}

	[Token(Token = "0x60006E7")]
	[Address(RVA = "0xD64634", Offset = "0xD64634", VA = "0xD64634")]
	public List<SequencerController> GetSequencersInArea(FujiSubArea area)
	{
		return null;
	}

	[Token(Token = "0x60006E8")]
	[Address(RVA = "0xD646DC", Offset = "0xD646DC", VA = "0xD646DC")]
	private void OnAreaChanged(FujiAreaService areaService)
	{
	}

	[Token(Token = "0x60006E9")]
	[Address(RVA = "0xD647C8", Offset = "0xD647C8", VA = "0xD647C8")]
	private void ToggleSequencers(FujiSubArea area, bool state)
	{
	}

	[Token(Token = "0x60006EA")]
	[Address(RVA = "0xD64078", Offset = "0xD64078", VA = "0xD64078")]
	private void ToggleSequencer(SequencerController controller, bool state)
	{
	}
}
[Token(Token = "0x20000DD")]
public class SplashLogic : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000526")]
	private struct SplashStruct
	{
		[Token(Token = "0x4001661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Renderer[] Renderer;

		[Token(Token = "0x4001662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool Enabled;
	}

	[Serializable]
	[Token(Token = "0x2000527")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB3A8", Offset = "0x9BB3A8")]
	private sealed class <>c
	{
		[Token(Token = "0x4001663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<bool> <>9__10_0;

		[Token(Token = "0x60022CC")]
		[Address(RVA = "0xD723F0", Offset = "0xD723F0", VA = "0xD723F0")]
		public <>c()
		{
		}

		[Token(Token = "0x60022CD")]
		[Address(RVA = "0xD723F8", Offset = "0xD723F8", VA = "0xD723F8")]
		internal bool <Start>b__10_0()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000528")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB3B8", Offset = "0x9BB3B8")]
	private sealed class <Start>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SplashLogic <>4__this;

		[Token(Token = "0x4001668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private MaterialPropertyBlock <block>5__2;

		[Token(Token = "0x4001669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <colorTintId>5__3;

		[Token(Token = "0x400166A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private UserService <userService>5__4;

		[Token(Token = "0x400166B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private SplashStruct[] <>7__wrap4;

		[Token(Token = "0x400166C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int <>7__wrap5;

		[Token(Token = "0x170003EF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60022D1")]
			[Address(RVA = "0xD72F4C", Offset = "0xD72F4C", VA = "0xD72F4C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003F0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60022D3")]
			[Address(RVA = "0xD72FBC", Offset = "0xD72FBC", VA = "0xD72FBC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022CE")]
		[Address(RVA = "0xD71EA0", Offset = "0xD71EA0", VA = "0xD71EA0")]
		[DebuggerHidden]
		public <Start>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x60022CF")]
		[Address(RVA = "0xD729F0", Offset = "0xD729F0", VA = "0xD729F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60022D0")]
		[Address(RVA = "0xD729F4", Offset = "0xD729F4", VA = "0xD729F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60022D2")]
		[Address(RVA = "0xD72F54", Offset = "0xD72F54", VA = "0xD72F54", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000529")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB3C8", Offset = "0x9BB3C8")]
	private sealed class <DoFadeCycle>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400166D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400166E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400166F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Renderer[] rends;

		[Token(Token = "0x4001670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MaterialPropertyBlock block;

		[Token(Token = "0x4001671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int colorTintId;

		[Token(Token = "0x4001672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float timeIn;

		[Token(Token = "0x4001673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float timeStay;

		[Token(Token = "0x4001674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float timeOut;

		[Token(Token = "0x4001675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <t>5__2;

		[Token(Token = "0x170003F1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60022D7")]
			[Address(RVA = "0xD72978", Offset = "0xD72978", VA = "0xD72978", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003F2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60022D9")]
			[Address(RVA = "0xD729E8", Offset = "0xD729E8", VA = "0xD729E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022D4")]
		[Address(RVA = "0xD71FC8", Offset = "0xD71FC8", VA = "0xD71FC8")]
		[DebuggerHidden]
		public <DoFadeCycle>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x60022D5")]
		[Address(RVA = "0xD72458", Offset = "0xD72458", VA = "0xD72458", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60022D6")]
		[Address(RVA = "0xD7245C", Offset = "0xD7245C", VA = "0xD7245C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60022D8")]
		[Address(RVA = "0xD72980", Offset = "0xD72980", VA = "0xD72980", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool EntitlementCheck;

	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform _camera;

	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private SplashStruct[] _slides;

	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float TimeIn;

	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float TimeStay;

	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float TimeOut;

	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float TimeBetweenSlides;

	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float LerpStrength;

	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool? _hasFocus;

	[Token(Token = "0x60006EB")]
	[Address(RVA = "0xD71D40", Offset = "0xD71D40", VA = "0xD71D40")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006EC")]
	[Address(RVA = "0xD71E2C", Offset = "0xD71E2C", VA = "0xD71E2C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CE184", Offset = "0x9CE184")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60006ED")]
	[Address(RVA = "0xD71ECC", Offset = "0xD71ECC", VA = "0xD71ECC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CE1E8", Offset = "0x9CE1E8")]
	private IEnumerator DoFadeCycle(Renderer[] rends, MaterialPropertyBlock block, int colorTintId, float timeIn, float timeStay, float timeOut)
	{
		return null;
	}

	[Token(Token = "0x60006EE")]
	[Address(RVA = "0xD71FF4", Offset = "0xD71FF4", VA = "0xD71FF4")]
	private void Update()
	{
	}

	[Token(Token = "0x60006EF")]
	[Address(RVA = "0xD72140", Offset = "0xD72140", VA = "0xD72140")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60006F0")]
	[Address(RVA = "0xD72368", Offset = "0xD72368", VA = "0xD72368")]
	public SplashLogic()
	{
	}
}
[Token(Token = "0x20000DE")]
public class StonehengeFillAnimation : MonoBehaviour
{
	[Token(Token = "0x200052A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB3D8", Offset = "0x9BB3D8")]
	private sealed class <DoFill>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StonehengeFillAnimation <>4__this;

		[Token(Token = "0x4001679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <t>5__2;

		[Token(Token = "0x170003F3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60022DD")]
			[Address(RVA = "0xD789C4", Offset = "0xD789C4", VA = "0xD789C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003F4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60022DF")]
			[Address(RVA = "0xD78A34", Offset = "0xD78A34", VA = "0xD78A34", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022DA")]
		[Address(RVA = "0xD786B0", Offset = "0xD786B0", VA = "0xD786B0")]
		[DebuggerHidden]
		public <DoFill>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60022DB")]
		[Address(RVA = "0xD786EC", Offset = "0xD786EC", VA = "0xD786EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60022DC")]
		[Address(RVA = "0xD786F0", Offset = "0xD786F0", VA = "0xD786F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60022DE")]
		[Address(RVA = "0xD789CC", Offset = "0xD789CC", VA = "0xD789CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject CenterPool;

	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public StonehengePillarLogic[] stonehengePillars;

	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float WaitTimeAfterWaterFalls;

	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public DandelionConstellationPlant Mother;

	[Token(Token = "0x60006F1")]
	[Address(RVA = "0xD7845C", Offset = "0xD7845C", VA = "0xD7845C")]
	private void Start()
	{
	}

	[Token(Token = "0x60006F2")]
	[Address(RVA = "0xD78610", Offset = "0xD78610", VA = "0xD78610")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9CE24C", Offset = "0x9CE24C")]
	public void DoFillAnimation()
	{
	}

	[Token(Token = "0x60006F3")]
	[Address(RVA = "0xD7863C", Offset = "0xD7863C", VA = "0xD7863C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CE284", Offset = "0x9CE284")]
	private IEnumerator DoFill()
	{
		return null;
	}

	[Token(Token = "0x60006F4")]
	[Address(RVA = "0xD786DC", Offset = "0xD786DC", VA = "0xD786DC")]
	public StonehengeFillAnimation()
	{
	}
}
[Token(Token = "0x20000DF")]
public class StonehengePillarLogic : MonoBehaviour
{
	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material Unlit;

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material Lit;

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MeshRenderer stonhengeMeshRenderer;

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Animator _animator;

	[Token(Token = "0x60006F5")]
	[Address(RVA = "0xD78A3C", Offset = "0xD78A3C", VA = "0xD78A3C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006F6")]
	[Address(RVA = "0xD78A94", Offset = "0xD78A94", VA = "0xD78A94")]
	public void SetLitMaterial(bool lit)
	{
	}

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0xD78960", Offset = "0xD78960", VA = "0xD78960")]
	public void TriggerWaterfall()
	{
	}

	[Token(Token = "0x60006F8")]
	[Address(RVA = "0xD78D40", Offset = "0xD78D40", VA = "0xD78D40")]
	public StonehengePillarLogic()
	{
	}
}
[Token(Token = "0x20000E0")]
public interface IStorageContainer
{
}
[Token(Token = "0x20000E1")]
public class StorageBubble : MonoBehaviour, IFujiSerializable
{
	[Token(Token = "0x200052B")]
	public delegate void StoreEvent();

	[Token(Token = "0x200052C")]
	public static class Messages
	{
		[Token(Token = "0x20006DC")]
		public enum StoreState
		{
			[Token(Token = "0x4001E0B")]
			Stored,
			[Token(Token = "0x4001E0C")]
			Grabbed,
			[Token(Token = "0x4001E0D")]
			Dropped,
			[Token(Token = "0x4001E0E")]
			Rejected
		}

		[Token(Token = "0x20006DD")]
		public struct OnStoredMessage
		{
			[Token(Token = "0x4001E0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public StoreState StoreState;

			[Token(Token = "0x4001E10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public StorageBubble StorageBubble;

			[Token(Token = "0x4001E11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject StoredItem;
		}
	}

	[Token(Token = "0x200052D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB3E8", Offset = "0x9BB3E8")]
	private sealed class <DoHandleSlot>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400167A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400167B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400167C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StorageBubble <>4__this;

		[Token(Token = "0x400167D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private PlayerController[] <playerHands>5__2;

		[Token(Token = "0x400167E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private PlayerController <handTouching>5__3;

		[Token(Token = "0x400167F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private PersistentEntity <prevStoredObj>5__4;

		[Token(Token = "0x170003F5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60022E7")]
			[Address(RVA = "0xD7B098", Offset = "0xD7B098", VA = "0xD7B098", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003F6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60022E9")]
			[Address(RVA = "0xD7B108", Offset = "0xD7B108", VA = "0xD7B108", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022E4")]
		[Address(RVA = "0xD79BC4", Offset = "0xD79BC4", VA = "0xD79BC4")]
		[DebuggerHidden]
		public <DoHandleSlot>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x60022E5")]
		[Address(RVA = "0xD7A718", Offset = "0xD7A718", VA = "0xD7A718", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60022E6")]
		[Address(RVA = "0xD7A71C", Offset = "0xD7A71C", VA = "0xD7A71C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60022E8")]
		[Address(RVA = "0xD7B0A0", Offset = "0xD7B0A0", VA = "0xD7B0A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200052E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB3F8", Offset = "0x9BB3F8")]
	private sealed class <DoTrapObject>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PersistentEntity entity;

		[Token(Token = "0x4001683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public StorageBubble <>4__this;

		[Token(Token = "0x4001684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WaitForFixedUpdate <waitForFixedUpdate>5__2;

		[Token(Token = "0x4001685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform <root>5__3;

		[Token(Token = "0x4001686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 <rootLocalPos>5__4;

		[Token(Token = "0x4001687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Quaternion <rootLocalRot>5__5;

		[Token(Token = "0x170003F7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60022ED")]
			[Address(RVA = "0xD7B740", Offset = "0xD7B740", VA = "0xD7B740", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003F8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60022EF")]
			[Address(RVA = "0xD7B7B0", Offset = "0xD7B7B0", VA = "0xD7B7B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022EA")]
		[Address(RVA = "0xD7A00C", Offset = "0xD7A00C", VA = "0xD7A00C")]
		[DebuggerHidden]
		public <DoTrapObject>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x60022EB")]
		[Address(RVA = "0xD7B110", Offset = "0xD7B110", VA = "0xD7B110", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60022EC")]
		[Address(RVA = "0xD7B114", Offset = "0xD7B114", VA = "0xD7B114", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60022EE")]
		[Address(RVA = "0xD7B748", Offset = "0xD7B748", VA = "0xD7B748", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float _activationRadius;

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform _visual;

	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PlayerService _playerService;

	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private PlayerController _handCurrTouching;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _initialOrbScale;

	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C0368", Offset = "0x9C0368")]
	private PersistentEntity <StoredObject>k__BackingField;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool lookAtPlayer;

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool PreventUseByPlayer;

	[Token(Token = "0x170000B4")]
	public float Radius
	{
		[Token(Token = "0x60006F9")]
		[Address(RVA = "0xD78E8C", Offset = "0xD78E8C", VA = "0xD78E8C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000B5")]
	public bool Occupied
	{
		[Token(Token = "0x60006FA")]
		[Address(RVA = "0xD78E94", Offset = "0xD78E94", VA = "0xD78E94")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000B6")]
	public PersistentEntity StoredObject
	{
		[Token(Token = "0x60006FB")]
		[Address(RVA = "0xD78F04", Offset = "0xD78F04", VA = "0xD78F04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CE2E8", Offset = "0x9CE2E8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60006FC")]
		[Address(RVA = "0xD78F0C", Offset = "0xD78F0C", VA = "0xD78F0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CE2F8", Offset = "0x9CE2F8")]
		private set
		{
		}
	}

	[Token(Token = "0x170000B7")]
	[FujiSerialized]
	public string StoredObjectKey
	{
		[Token(Token = "0x60006FF")]
		[Address(RVA = "0xD790EC", Offset = "0xD790EC", VA = "0xD790EC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000700")]
		[Address(RVA = "0xD7918C", Offset = "0xD7918C", VA = "0xD7918C")]
		set
		{
		}
	}

	[Token(Token = "0x14000017")]
	public event StoreEvent OnStore
	{
		[Token(Token = "0x60006FD")]
		[Address(RVA = "0xD78F14", Offset = "0xD78F14", VA = "0xD78F14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CE308", Offset = "0x9CE308")]
		add
		{
		}
		[Token(Token = "0x60006FE")]
		[Address(RVA = "0xD79000", Offset = "0xD79000", VA = "0xD79000")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CE318", Offset = "0x9CE318")]
		remove
		{
		}
	}

	[Token(Token = "0x6000701")]
	[Address(RVA = "0xD795E0", Offset = "0xD795E0", VA = "0xD795E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000702")]
	[Address(RVA = "0xD79650", Offset = "0xD79650", VA = "0xD79650")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000703")]
	[Address(RVA = "0xD79840", Offset = "0xD79840", VA = "0xD79840")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000704")]
	[Address(RVA = "0xD7994C", Offset = "0xD7994C", VA = "0xD7994C")]
	private bool IsHandTouching(PlayerController hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000705")]
	[Address(RVA = "0xD79A98", Offset = "0xD79A98", VA = "0xD79A98")]
	private Vector3 GetControllerTouchPunchDir(PlayerController controller, float scale = 1f)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000706")]
	[Address(RVA = "0xD797CC", Offset = "0xD797CC", VA = "0xD797CC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CE328", Offset = "0x9CE328")]
	private IEnumerator DoHandleSlot()
	{
		return null;
	}

	[Token(Token = "0x6000707")]
	[Address(RVA = "0xD79BF0", Offset = "0xD79BF0", VA = "0xD79BF0")]
	private void HandleItemStateChanged(InteractiveCore.Messages.HoldItemStateChangedEvent e)
	{
	}

	[Token(Token = "0x6000708")]
	[Address(RVA = "0xD79F74", Offset = "0xD79F74", VA = "0xD79F74")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CE38C", Offset = "0x9CE38C")]
	private IEnumerator DoTrapObject(PersistentEntity entity)
	{
		return null;
	}

	[Token(Token = "0x6000709")]
	[Address(RVA = "0xD7A038", Offset = "0xD7A038", VA = "0xD7A038")]
	private void Update()
	{
	}

	[Token(Token = "0x600070A")]
	[Address(RVA = "0xD79E74", Offset = "0xD79E74", VA = "0xD79E74")]
	public void Store(GameObject go)
	{
	}

	[Token(Token = "0x600070B")]
	[Address(RVA = "0xD79320", Offset = "0xD79320", VA = "0xD79320")]
	public void Store(PersistentEntity entity)
	{
	}

	[Token(Token = "0x600070C")]
	[Address(RVA = "0xD7A4F8", Offset = "0xD7A4F8", VA = "0xD7A4F8")]
	public void DestroyOccupant()
	{
	}

	[Token(Token = "0x600070D")]
	[Address(RVA = "0xD7A5C8", Offset = "0xD7A5C8", VA = "0xD7A5C8")]
	public void Drop()
	{
	}

	[Token(Token = "0x600070E")]
	[Address(RVA = "0xD7A69C", Offset = "0xD7A69C", VA = "0xD7A69C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600070F")]
	[Address(RVA = "0xD7A6F4", Offset = "0xD7A6F4", VA = "0xD7A6F4", Slot = "4")]
	public void OnPreSerialize()
	{
	}

	[Token(Token = "0x6000710")]
	[Address(RVA = "0xD7A6F8", Offset = "0xD7A6F8", VA = "0xD7A6F8", Slot = "5")]
	public void OnPostDeserialize()
	{
	}

	[Token(Token = "0x6000711")]
	[Address(RVA = "0xD7A6FC", Offset = "0xD7A6FC", VA = "0xD7A6FC")]
	public StorageBubble()
	{
	}
}
[Token(Token = "0x20000E2")]
public class StorageUtilityBelt : MonoBehaviour
{
	[Token(Token = "0x200052F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB408", Offset = "0x9BB408")]
	private sealed class <WorldSpawnPositions>d__17 : IEnumerable<Vector3>, IEnumerable, IEnumerator<Vector3>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Vector3 <>2__current;

		[Token(Token = "0x400168A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <>l__initialThreadId;

		[Token(Token = "0x400168B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public StorageUtilityBelt <>4__this;

		[Token(Token = "0x400168C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Matrix4x4 <local2World>5__2;

		[Token(Token = "0x400168D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 <startingLocalVect>5__3;

		[Token(Token = "0x400168E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float <step>5__4;

		[Token(Token = "0x400168F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int <i>5__5;

		[Token(Token = "0x170003F9")]
		private Vector3 System.Collections.Generic.IEnumerator<UnityEngine.Vector3>.Current
		{
			[Token(Token = "0x60022F3")]
			[Address(RVA = "0xD7CC70", Offset = "0xD7CC70", VA = "0xD7CC70", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170003FA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60022F5")]
			[Address(RVA = "0xD7CCE4", Offset = "0xD7CCE4", VA = "0xD7CCE4", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022F0")]
		[Address(RVA = "0xD7C878", Offset = "0xD7C878", VA = "0xD7C878")]
		[DebuggerHidden]
		public <WorldSpawnPositions>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x60022F1")]
		[Address(RVA = "0xD7C950", Offset = "0xD7C950", VA = "0xD7C950", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60022F2")]
		[Address(RVA = "0xD7C954", Offset = "0xD7C954", VA = "0xD7C954", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60022F4")]
		[Address(RVA = "0xD7CC7C", Offset = "0xD7CC7C", VA = "0xD7CC7C", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x60022F6")]
		[Address(RVA = "0xD7CD50", Offset = "0xD7CD50", VA = "0xD7CD50", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<Vector3> System.Collections.Generic.IEnumerable<UnityEngine.Vector3>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60022F7")]
		[Address(RVA = "0xD7CE00", Offset = "0xD7CE00", VA = "0xD7CE00", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9C0388", Offset = "0x9C0388")]
	[SerializeField]
	private int _orbCount;

	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float _radius;

	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float _rotateThreshold;

	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float _rotateSpeed;

	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float _rotateSpeedLookDown;

	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float _startingDegrees;

	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float _endDegrees;

	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private StorageBubble _storageBubblePrefab;

	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float _hipRatio;

	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private Vector3 _hipRescaling;

	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Vector3 _hipOffset;

	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SerializeField]
	private bool _attachToIkHip;

	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TransformStruct LocalHipOffset;

	[Token(Token = "0x6000712")]
	[Address(RVA = "0xD7B808", Offset = "0xD7B808", VA = "0xD7B808")]
	private void Start()
	{
	}

	[Token(Token = "0x6000713")]
	[Address(RVA = "0xD7B9A0", Offset = "0xD7B9A0", VA = "0xD7B9A0")]
	public void LateUpdate()
	{
	}

	[Token(Token = "0x6000714")]
	[Address(RVA = "0xD7BD54", Offset = "0xD7BD54", VA = "0xD7BD54")]
	public void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000715")]
	[Address(RVA = "0xD7C17C", Offset = "0xD7C17C", VA = "0xD7C17C")]
	public void RebuildOrbs()
	{
	}

	[Token(Token = "0x6000716")]
	[Address(RVA = "0xD7C0F8", Offset = "0xD7C0F8", VA = "0xD7C0F8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CE3F0", Offset = "0x9CE3F0")]
	public IEnumerable<Vector3> WorldSpawnPositions()
	{
		return null;
	}

	[Token(Token = "0x6000717")]
	[Address(RVA = "0xD7C8B0", Offset = "0xD7C8B0", VA = "0xD7C8B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000718")]
	[Address(RVA = "0xD7C8B4", Offset = "0xD7C8B4", VA = "0xD7C8B4")]
	public StorageUtilityBelt()
	{
	}
}
[Token(Token = "0x20000E3")]
public class TextMeshLOC : MonoBehaviour
{
	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextMeshLOC_Asset _textAsset;

	[Token(Token = "0x400060E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool _autoFacePlayerHead;

	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MeshFilter _meshFilter;

	[Token(Token = "0x6000719")]
	[Address(RVA = "0xD7E55C", Offset = "0xD7E55C", VA = "0xD7E55C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600071A")]
	[Address(RVA = "0xD7E5CC", Offset = "0xD7E5CC", VA = "0xD7E5CC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600071B")]
	[Address(RVA = "0xD7E718", Offset = "0xD7E718", VA = "0xD7E718")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600071C")]
	[Address(RVA = "0xD7E79C", Offset = "0xD7E79C", VA = "0xD7E79C")]
	private void HandleLanguageUpdate(LocalizationService.Messages.LocalizationChangedMessage message)
	{
	}

	[Token(Token = "0x600071D")]
	[Address(RVA = "0xD7E658", Offset = "0xD7E658", VA = "0xD7E658")]
	private void PollLang()
	{
	}

	[Token(Token = "0x600071E")]
	[Address(RVA = "0xD7E7A0", Offset = "0xD7E7A0", VA = "0xD7E7A0")]
	private void Update()
	{
	}

	[Token(Token = "0x600071F")]
	[Address(RVA = "0xD7E9C4", Offset = "0xD7E9C4", VA = "0xD7E9C4")]
	public void PlayEnterSeq(bool playSound = true, float enterTime = 0.2f)
	{
	}

	[Token(Token = "0x6000720")]
	[Address(RVA = "0xD6939C", Offset = "0xD6939C", VA = "0xD6939C")]
	public void PlayEnterSeqFadeIn(bool playSound = true, float enterTime = 0.2f)
	{
	}

	[Token(Token = "0x6000721")]
	[Address(RVA = "0xD7EC04", Offset = "0xD7EC04", VA = "0xD7EC04")]
	public void PlayExitSeq(bool playSound = true)
	{
	}

	[Token(Token = "0x6000722")]
	[Address(RVA = "0xD7ED68", Offset = "0xD7ED68", VA = "0xD7ED68")]
	public TextMeshLOC()
	{
	}

	[Token(Token = "0x6000723")]
	[Address(RVA = "0xD7ED70", Offset = "0xD7ED70", VA = "0xD7ED70")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CE454", Offset = "0x9CE454")]
	private void <PlayEnterSeq>b__10_0()
	{
	}
}
[Token(Token = "0x20000E4")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9B8C44", Offset = "0x9B8C44")]
public class ThereminRegion : MonoBehaviour
{
	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private InteractiveCore _interactiveCore;

	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int _handsTouching;

	[Token(Token = "0x4000613")]
	private const string Sfx = "event:/SFX/Plants/TheraminPlant/SFX_Theramin_Loop";

	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AudioService.AudioServiceLoopHandle _loopHandle;

	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float3 _internalPos;

	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C04C4", Offset = "0x9C04C4")]
	private float3? <CurrentTone>k__BackingField;

	[Token(Token = "0x170000B8")]
	public float3? CurrentTone
	{
		[Token(Token = "0x6000727")]
		[Address(RVA = "0xD7F2DC", Offset = "0xD7F2DC", VA = "0xD7F2DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CE494", Offset = "0x9CE494")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000726")]
		[Address(RVA = "0xD7F2D4", Offset = "0xD7F2D4", VA = "0xD7F2D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CE484", Offset = "0x9CE484")]
		private set
		{
		}
	}

	[Token(Token = "0x14000018")]
	public event Action<bool> PlayStateChanged
	{
		[Token(Token = "0x6000724")]
		[Address(RVA = "0xD7F0FC", Offset = "0xD7F0FC", VA = "0xD7F0FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CE464", Offset = "0x9CE464")]
		add
		{
		}
		[Token(Token = "0x6000725")]
		[Address(RVA = "0xD7F1E8", Offset = "0xD7F1E8", VA = "0xD7F1E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CE474", Offset = "0x9CE474")]
		remove
		{
		}
	}

	[Token(Token = "0x6000728")]
	[Address(RVA = "0xD7F2E8", Offset = "0xD7F2E8", VA = "0xD7F2E8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000729")]
	[Address(RVA = "0xD7F57C", Offset = "0xD7F57C", VA = "0xD7F57C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600072A")]
	[Address(RVA = "0xD7F854", Offset = "0xD7F854", VA = "0xD7F854")]
	private void HandleEventTouchStart(PlayerControllerInput input)
	{
	}

	[Token(Token = "0x600072B")]
	[Address(RVA = "0xD7F91C", Offset = "0xD7F91C", VA = "0xD7F91C")]
	private void HandleEventTouchingPostUpdate(PlayerControllerInput input)
	{
	}

	[Token(Token = "0x600072C")]
	[Address(RVA = "0xD7FBA4", Offset = "0xD7FBA4", VA = "0xD7FBA4")]
	private void HandleEventTouchEnd(PlayerControllerInput input)
	{
	}

	[Token(Token = "0x600072D")]
	[Address(RVA = "0xD7FC38", Offset = "0xD7FC38", VA = "0xD7FC38")]
	public ThereminRegion()
	{
	}
}
[Token(Token = "0x20000E5")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9B8CA8", Offset = "0x9B8CA8")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9B8CA8", Offset = "0x9B8CA8")]
public abstract class GenericPlayerTrigger : MonoBehaviour
{
	[Token(Token = "0x600072E")]
	protected abstract void HandleTriggerEnter();

	[Token(Token = "0x600072F")]
	protected abstract void HandleTriggerExit();

	[Token(Token = "0x6000730")]
	[Address(RVA = "0xDC1C54", Offset = "0xDC1C54", VA = "0xDC1C54")]
	protected void Awake()
	{
	}

	[Token(Token = "0x6000731")]
	[Address(RVA = "0xDC1D78", Offset = "0xDC1D78", VA = "0xDC1D78")]
	protected void OnEnable()
	{
	}

	[Token(Token = "0x6000732")]
	[Address(RVA = "0xDC2054", Offset = "0xDC2054", VA = "0xDC2054")]
	protected void OnDisable()
	{
	}

	[Token(Token = "0x6000733")]
	[Address(RVA = "0xDC1C58", Offset = "0xDC1C58", VA = "0xDC1C58")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9CE4A4", Offset = "0x9CE4A4")]
	private void Setup()
	{
	}

	[Token(Token = "0x6000734")]
	[Address(RVA = "0xDC2330", Offset = "0xDC2330", VA = "0xDC2330")]
	protected GenericPlayerTrigger()
	{
	}
}
[Token(Token = "0x20000E6")]
public class DynamicChild : MonoBehaviour
{
	[Token(Token = "0x2000530")]
	public class DynamicParent : MonoBehaviour
	{
		[Token(Token = "0x4001690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[EditorReadOnly]
		public DynamicChild Child;

		[Token(Token = "0x4001691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool IgnoreChild;

		[Token(Token = "0x60022F8")]
		[Address(RVA = "0xFD2E44", Offset = "0xFD2E44", VA = "0xFD2E44")]
		public void SetupChild(DynamicChild child)
		{
		}

		[Token(Token = "0x60022F9")]
		[Address(RVA = "0xFD318C", Offset = "0xFD318C", VA = "0xFD318C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60022FA")]
		[Address(RVA = "0xFD30D0", Offset = "0xFD30D0", VA = "0xFD30D0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60022FB")]
		[Address(RVA = "0xFD3248", Offset = "0xFD3248", VA = "0xFD3248")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60022FC")]
		[Address(RVA = "0xFD3320", Offset = "0xFD3320", VA = "0xFD3320")]
		public DynamicParent()
		{
		}
	}

	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[EditorReadOnly]
	public DynamicParent Parent;

	[Token(Token = "0x6000735")]
	[Address(RVA = "0xFD2D28", Offset = "0xFD2D28", VA = "0xFD2D28")]
	private void Start()
	{
	}

	[Token(Token = "0x6000736")]
	[Address(RVA = "0xFD2ED8", Offset = "0xFD2ED8", VA = "0xFD2ED8")]
	public void DisconnectFromParent()
	{
	}

	[Token(Token = "0x6000737")]
	[Address(RVA = "0xFD2FA0", Offset = "0xFD2FA0", VA = "0xFD2FA0")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000738")]
	[Address(RVA = "0xFD30C8", Offset = "0xFD30C8", VA = "0xFD30C8")]
	public DynamicChild()
	{
	}
}
[Token(Token = "0x20000E7")]
public class InactiveAtRuntime : MonoBehaviour
{
	[Token(Token = "0x6000739")]
	[Address(RVA = "0xDCD9CC", Offset = "0xDCD9CC", VA = "0xDCD9CC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600073A")]
	[Address(RVA = "0xDCDA04", Offset = "0xDCDA04", VA = "0xDCDA04")]
	public InactiveAtRuntime()
	{
	}
}
[Token(Token = "0x20000E8")]
public class MatchUserHeadDirection : MonoBehaviour
{
	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float LerpScalar;

	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool lockToHead;

	[Token(Token = "0x600073B")]
	[Address(RVA = "0xC06B3C", Offset = "0xC06B3C", VA = "0xC06B3C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600073C")]
	[Address(RVA = "0xC06E18", Offset = "0xC06E18", VA = "0xC06E18")]
	public MatchUserHeadDirection()
	{
	}
}
[Token(Token = "0x20000E9")]
public class PreviousParent : MonoBehaviour
{
	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform PreviousParentObject;

	[Token(Token = "0x600073D")]
	[Address(RVA = "0x10B1910", Offset = "0x10B1910", VA = "0x10B1910")]
	public PreviousParent()
	{
	}
}
[Token(Token = "0x20000EA")]
public class SlaveToTransform : MonoBehaviour
{
	[Token(Token = "0x400061C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform Master;

	[Token(Token = "0x400061D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Quaternion _rotOffset;

	[Token(Token = "0x400061E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 _localOffset;

	[Token(Token = "0x600073E")]
	[Address(RVA = "0xD6F210", Offset = "0xD6F210", VA = "0xD6F210")]
	private void Awake()
	{
	}

	[Token(Token = "0x600073F")]
	[Address(RVA = "0xD6F390", Offset = "0xD6F390", VA = "0xD6F390")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9CE4DC", Offset = "0x9CE4DC")]
	public void LateUpdate()
	{
	}

	[Token(Token = "0x6000740")]
	[Address(RVA = "0xD6F500", Offset = "0xD6F500", VA = "0xD6F500")]
	public SlaveToTransform()
	{
	}
}
[Token(Token = "0x20000EB")]
public static class Util
{
	[Token(Token = "0x6000741")]
	[Address(RVA = "0xF8F04C", Offset = "0xF8F04C", VA = "0xF8F04C")]
	public static float RemapNumber(float num, float low1, float high1, float low2, float high2)
	{
		return default(float);
	}

	[Token(Token = "0x6000742")]
	[Address(RVA = "0xF8F068", Offset = "0xF8F068", VA = "0xF8F068")]
	public static float RemapNumberClamped(float num, float low1, float high1, float low2, float high2)
	{
		return default(float);
	}

	[Token(Token = "0x6000743")]
	public static bool ArraysEqual<T>(T[] a1, T[] a2)
	{
		return default(bool);
	}

	[Token(Token = "0x6000744")]
	public static bool IsTruncatedFormOf<T>(this T[] a1, T[] a2)
	{
		return default(bool);
	}
}
[Token(Token = "0x20000EC")]
public class BoatTouchEffect : MonoBehaviour
{
	[Token(Token = "0x2000531")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB418", Offset = "0x9BB418")]
	private sealed class <DoHandleHandInWater>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerControllerInput input;

		[Token(Token = "0x4001695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BoatTouchEffect <>4__this;

		[Token(Token = "0x170003FB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002300")]
			[Address(RVA = "0xBA7FC4", Offset = "0xBA7FC4", VA = "0xBA7FC4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003FC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002302")]
			[Address(RVA = "0xBA8034", Offset = "0xBA8034", VA = "0xBA8034", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022FD")]
		[Address(RVA = "0xBA7A34", Offset = "0xBA7A34", VA = "0xBA7A34")]
		[DebuggerHidden]
		public <DoHandleHandInWater>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x60022FE")]
		[Address(RVA = "0xBA7D40", Offset = "0xBA7D40", VA = "0xBA7D40", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60022FF")]
		[Address(RVA = "0xBA7D44", Offset = "0xBA7D44", VA = "0xBA7D44", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002301")]
		[Address(RVA = "0xBA7FCC", Offset = "0xBA7FCC", VA = "0xBA7FCC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private InteractiveCore _interactive;

	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9C04E4", Offset = "0x9C04E4")]
	[SerializeField]
	[EventRef]
	private string _eventTouchLoop;

	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AudioService.AudioServiceLoopHandle? _sfxSpinLoop;

	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Coroutine _threadHandleHandInWater;

	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ParticleSystem particleSystem;

	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ParticleSystem particleSystemSmall;

	[Token(Token = "0x6000745")]
	[Address(RVA = "0xBA76D0", Offset = "0xBA76D0", VA = "0xBA76D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000746")]
	[Address(RVA = "0xBA7724", Offset = "0xBA7724", VA = "0xBA7724")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000747")]
	[Address(RVA = "0xBA78F8", Offset = "0xBA78F8", VA = "0xBA78F8")]
	private void StopSfxLoop(AudioService.AudioStopMode stopMode = AudioService.AudioStopMode.Immediate)
	{
	}

	[Token(Token = "0x6000748")]
	[Address(RVA = "0xBA799C", Offset = "0xBA799C", VA = "0xBA799C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CE524", Offset = "0x9CE524")]
	private IEnumerator DoHandleHandInWater(PlayerControllerInput input)
	{
		return null;
	}

	[Token(Token = "0x6000749")]
	[Address(RVA = "0xBA7A60", Offset = "0xBA7A60", VA = "0xBA7A60")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600074A")]
	[Address(RVA = "0xBA7A90", Offset = "0xBA7A90", VA = "0xBA7A90")]
	public BoatTouchEffect()
	{
	}

	[Token(Token = "0x600074B")]
	[Address(RVA = "0xBA7AE8", Offset = "0xBA7AE8", VA = "0xBA7AE8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CE588", Offset = "0x9CE588")]
	private void <OnEnable>b__7_0(PlayerControllerInput input)
	{
	}

	[Token(Token = "0x600074C")]
	[Address(RVA = "0xBA7CEC", Offset = "0xBA7CEC", VA = "0xBA7CEC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CE598", Offset = "0x9CE598")]
	private void <OnEnable>b__7_1(PlayerControllerInput input)
	{
	}
}
[Token(Token = "0x20000ED")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9B8D44", Offset = "0x9B8D44")]
public class CameraFade : MonoBehaviour
{
	[Token(Token = "0x2000532")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB428", Offset = "0x9BB428")]
	private sealed class <DoBlink>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CameraFade <>4__this;

		[Token(Token = "0x4001699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float blinkOutTime;

		[Token(Token = "0x400169A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float blinkInTime;

		[Token(Token = "0x170003FD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002306")]
			[Address(RVA = "0xBB1814", Offset = "0xBB1814", VA = "0xBB1814", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003FE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002308")]
			[Address(RVA = "0xBB1884", Offset = "0xBB1884", VA = "0xBB1884", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002303")]
		[Address(RVA = "0xBB13CC", Offset = "0xBB13CC", VA = "0xBB13CC")]
		[DebuggerHidden]
		public <DoBlink>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6002304")]
		[Address(RVA = "0xBB16BC", Offset = "0xBB16BC", VA = "0xBB16BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002305")]
		[Address(RVA = "0xBB16C0", Offset = "0xBB16C0", VA = "0xBB16C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002307")]
		[Address(RVA = "0xBB181C", Offset = "0xBB181C", VA = "0xBB181C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000533")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB438", Offset = "0x9BB438")]
	private sealed class <DoFadeIn>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400169B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400169C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400169D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CameraFade <>4__this;

		[Token(Token = "0x400169E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x400169F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x40016A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color <color>5__3;

		[Token(Token = "0x170003FF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600230C")]
			[Address(RVA = "0xBB1AF4", Offset = "0xBB1AF4", VA = "0xBB1AF4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000400")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600230E")]
			[Address(RVA = "0xBB1B64", Offset = "0xBB1B64", VA = "0xBB1B64", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002309")]
		[Address(RVA = "0xBB13F8", Offset = "0xBB13F8", VA = "0xBB13F8")]
		[DebuggerHidden]
		public <DoFadeIn>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x600230A")]
		[Address(RVA = "0xBB188C", Offset = "0xBB188C", VA = "0xBB188C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600230B")]
		[Address(RVA = "0xBB1890", Offset = "0xBB1890", VA = "0xBB1890", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600230D")]
		[Address(RVA = "0xBB1AFC", Offset = "0xBB1AFC", VA = "0xBB1AFC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000534")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB448", Offset = "0x9BB448")]
	private sealed class <DoFadeOut>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40016A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40016A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40016A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CameraFade <>4__this;

		[Token(Token = "0x40016A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x40016A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x40016A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color <color>5__3;

		[Token(Token = "0x17000401")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002312")]
			[Address(RVA = "0xBB1DD4", Offset = "0xBB1DD4", VA = "0xBB1DD4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000402")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002314")]
			[Address(RVA = "0xBB1E44", Offset = "0xBB1E44", VA = "0xBB1E44", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600230F")]
		[Address(RVA = "0xBB1424", Offset = "0xBB1424", VA = "0xBB1424")]
		[DebuggerHidden]
		public <DoFadeOut>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6002310")]
		[Address(RVA = "0xBB1B6C", Offset = "0xBB1B6C", VA = "0xBB1B6C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002311")]
		[Address(RVA = "0xBB1B70", Offset = "0xBB1B70", VA = "0xBB1B70", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002313")]
		[Address(RVA = "0xBB1DDC", Offset = "0xBB1DDC", VA = "0xBB1DDC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000625")]
	public const string ShaderName = "VR/Unlit Transparent Color";

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float fadeTime;

	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Color fadeColor;

	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material FadeMaterial;

	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C0540", Offset = "0x9C0540")]
	private bool <IsFading>k__BackingField;

	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C0550", Offset = "0x9C0550")]
	private bool <IsClear>k__BackingField;

	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private YieldInstruction fadeInstruction;

	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Color _tempColor;

	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Action _onHalfBlink;

	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Action _onFullBlink;

	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Color _matOldColor;

	[Token(Token = "0x170000B9")]
	public bool IsFading
	{
		[Token(Token = "0x600074E")]
		[Address(RVA = "0xBA63E8", Offset = "0xBA63E8", VA = "0xBA63E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CE5B8", Offset = "0x9CE5B8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600074D")]
		[Address(RVA = "0xBB0F48", Offset = "0xBB0F48", VA = "0xBB0F48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CE5A8", Offset = "0x9CE5A8")]
		private set
		{
		}
	}

	[Token(Token = "0x170000BA")]
	public bool IsClear
	{
		[Token(Token = "0x600074F")]
		[Address(RVA = "0xBB0F54", Offset = "0xBB0F54", VA = "0xBB0F54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CE5C8", Offset = "0x9CE5C8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000750")]
		[Address(RVA = "0xBB0F5C", Offset = "0xBB0F5C", VA = "0xBB0F5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CE5D8", Offset = "0x9CE5D8")]
		private set
		{
		}
	}

	[Token(Token = "0x6000751")]
	[Address(RVA = "0xBB0F68", Offset = "0xBB0F68", VA = "0xBB0F68")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000752")]
	[Address(RVA = "0xBB0FCC", Offset = "0xBB0FCC", VA = "0xBB0FCC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000753")]
	[Address(RVA = "0xBB1070", Offset = "0xBB1070", VA = "0xBB1070")]
	public void TriggerBlink(float blinkTimeOutTime, float blinkInTime, [Optional] Action onHalfBlink, [Optional] Action onBlinkComplete)
	{
	}

	[Token(Token = "0x6000754")]
	[Address(RVA = "0xBA63A0", Offset = "0xBA63A0", VA = "0xBA63A0")]
	public void TriggerFadeOut(float fadeTime)
	{
	}

	[Token(Token = "0x6000755")]
	[Address(RVA = "0xBA62F0", Offset = "0xBA62F0", VA = "0xBA62F0")]
	public void TriggerFadeIn(float fadeTime)
	{
	}

	[Token(Token = "0x6000756")]
	[Address(RVA = "0xBB0FF4", Offset = "0xBB0FF4", VA = "0xBB0FF4")]
	public void SetColor(Color color)
	{
	}

	[Token(Token = "0x6000757")]
	[Address(RVA = "0xBB11EC", Offset = "0xBB11EC", VA = "0xBB11EC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CE5E8", Offset = "0x9CE5E8")]
	private IEnumerator DoBlink(float blinkOutTime, float blinkInTime)
	{
		return null;
	}

	[Token(Token = "0x6000758")]
	[Address(RVA = "0xBB1334", Offset = "0xBB1334", VA = "0xBB1334")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CE64C", Offset = "0x9CE64C")]
	public IEnumerator DoFadeIn(float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x6000759")]
	[Address(RVA = "0xBB129C", Offset = "0xBB129C", VA = "0xBB129C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CE6B0", Offset = "0x9CE6B0")]
	public IEnumerator DoFadeOut(float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x600075A")]
	[Address(RVA = "0xBB1450", Offset = "0xBB1450", VA = "0xBB1450")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x600075B")]
	[Address(RVA = "0xBB156C", Offset = "0xBB156C", VA = "0xBB156C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600075C")]
	[Address(RVA = "0xBB15AC", Offset = "0xBB15AC", VA = "0xBB15AC")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x600075D")]
	[Address(RVA = "0xBB1604", Offset = "0xBB1604", VA = "0xBB1604")]
	public CameraFade()
	{
	}
}
[Token(Token = "0x20000EE")]
public class CenterOnPlayerRig : MonoBehaviour
{
	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform _rig;

	[Token(Token = "0x600075E")]
	[Address(RVA = "0xBB2718", Offset = "0xBB2718", VA = "0xBB2718")]
	private void Start()
	{
	}

	[Token(Token = "0x600075F")]
	[Address(RVA = "0xBB28CC", Offset = "0xBB28CC", VA = "0xBB28CC")]
	public CenterOnPlayerRig()
	{
	}
}
[Token(Token = "0x20000EF")]
[ExecuteInEditMode]
public class FlockFish : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000535")]
	public struct PerFishInstanceData
	{
		[Token(Token = "0x40016A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 headVel;

		[Token(Token = "0x40016A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 headPos;

		[Token(Token = "0x40016A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 midPos;

		[Token(Token = "0x40016AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 buttPos;

		[Token(Token = "0x40016AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float glow;

		[Token(Token = "0x40016AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float rand0;

		[Token(Token = "0x40016AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float rand1;

		[Token(Token = "0x40016AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float rand2;
	}

	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9C0560", Offset = "0x9C0560")]
	[SerializeField]
	private PerFishInstanceData[] _instancesData;

	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9C05AC", Offset = "0x9C05AC")]
	public Mesh InstanceMesh;

	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material InstanceMaterial;

	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9C05E4", Offset = "0x9C05E4")]
	public float FishCylinderRadius;

	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float FishCylinderHeightOffset;

	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float FishCylinderWobbleFreq;

	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float FishCylinderWobbleStrength;

	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9C061C", Offset = "0x9C061C")]
	public float FishBodyMass;

	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float FishBodyDrag;

	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9C0654", Offset = "0x9C0654")]
	public float FishBodyLength;

	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9C068C", Offset = "0x9C068C")]
	public float FishSpineMidpoint;

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AnimationCurve FishBodyShapeCurve;

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[EditorReadOnly]
	public Texture2D TexFishBodyShape;

	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9C06B4", Offset = "0x9C06B4")]
	public float FishForceVortexSpin;

	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float FishForceRingAttraction;

	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float FishForceNoiseFreq;

	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float FishForceNoiseStrength;

	[NonSerialized]
	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector4[] RepelObjects;

	[NonSerialized]
	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int NumRepelObjects;

	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9C06EC", Offset = "0x9C06EC")]
	public bool EffectReactToPlayer;

	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int FishGenerateCount;

	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private MaterialPropertyBlock _rendererBlock;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private ComputeBuffer[] _positionBuffer;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int _positionBufferIndex;

	[Token(Token = "0x4000649")]
	private const int _positionBufferNumBuffers = 2;

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private ComputeBuffer _drawArgsBuffer;

	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private uint[] _drawArgs;

	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public ComputeShader ComputeShaderMovement;

	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private int _kernelFishMovement;

	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private int UniformId_Time;

	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int UniformId_CylinderProperties;

	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int UniformId_FishBodyProperties;

	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private int UniformId_FishPhysicsForceProps;

	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private int UniformId_FishBodyShapeMap;

	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private int UniformId_PositionBuffer;

	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private int UniformId_PositionBufferSrc;

	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private int UniformId_PositionBufferDst;

	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private int UniformId_MatObjToWorld;

	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private int UniformId_RepelObjects;

	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private int UniformId_NumRepelObjects;

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private PlayerService _playerService;

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9C0724", Offset = "0x9C0724")]
	[SerializeField]
	private float _lowQualityDensity;

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	[SerializeField]
	private InstancedPlantField.RenderDistance _renderDistance;

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Bounds _worldBounds;

	[Token(Token = "0x170000BB")]
	public int NumInstances
	{
		[Token(Token = "0x6000760")]
		[Address(RVA = "0xC64834", Offset = "0xC64834", VA = "0xC64834")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000761")]
	[Address(RVA = "0xC64860", Offset = "0xC64860", VA = "0xC64860")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000762")]
	[Address(RVA = "0xC64BB0", Offset = "0xC64BB0", VA = "0xC64BB0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000763")]
	[Address(RVA = "0xC65980", Offset = "0xC65980", VA = "0xC65980")]
	private void UpdateRepelObjects()
	{
	}

	[Token(Token = "0x6000764")]
	[Address(RVA = "0xC64E44", Offset = "0xC64E44", VA = "0xC64E44")]
	public void GenerateFish()
	{
	}

	[Token(Token = "0x6000765")]
	[Address(RVA = "0xC65D08", Offset = "0xC65D08", VA = "0xC65D08")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000766")]
	[Address(RVA = "0xC65D0C", Offset = "0xC65D0C", VA = "0xC65D0C")]
	private void ReleaseBuffers()
	{
	}

	[Token(Token = "0x6000767")]
	[Address(RVA = "0xC655E4", Offset = "0xC655E4", VA = "0xC655E4")]
	public void SendTexFishBodyToGPU()
	{
	}

	[Token(Token = "0x6000768")]
	[Address(RVA = "0xC65DE8", Offset = "0xC65DE8", VA = "0xC65DE8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000769")]
	[Address(RVA = "0xC6650C", Offset = "0xC6650C", VA = "0xC6650C")]
	public void FlipBuffer()
	{
	}

	[Token(Token = "0x600076A")]
	[Address(RVA = "0xC65F98", Offset = "0xC65F98", VA = "0xC65F98")]
	public void UpdateFishSim()
	{
	}

	[Token(Token = "0x600076B")]
	[Address(RVA = "0xC66338", Offset = "0xC66338", VA = "0xC66338")]
	private void Draw()
	{
	}

	[Token(Token = "0x600076C")]
	[Address(RVA = "0xC657C4", Offset = "0xC657C4", VA = "0xC657C4")]
	private Bounds GetRenderBoundsWorldSpace()
	{
		return default(Bounds);
	}

	[Token(Token = "0x600076D")]
	[Address(RVA = "0xC65D40", Offset = "0xC65D40", VA = "0xC65D40")]
	private void ReleasePositionBuffers()
	{
	}

	[Token(Token = "0x600076E")]
	[Address(RVA = "0xC65140", Offset = "0xC65140", VA = "0xC65140")]
	private void SendInstancesDataToGpuBuffer()
	{
	}

	[Token(Token = "0x600076F")]
	[Address(RVA = "0xC66530", Offset = "0xC66530", VA = "0xC66530")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000770")]
	[Address(RVA = "0xC66828", Offset = "0xC66828", VA = "0xC66828")]
	public FlockFish()
	{
	}
}
[Token(Token = "0x20000F0")]
[ExecuteInEditMode]
public class InstancedPlantField : MonoBehaviour
{
	[Token(Token = "0x2000536")]
	public enum RenderDistance
	{
		[Token(Token = "0x40016B0")]
		Close = 0,
		[Token(Token = "0x40016B1")]
		SmallRoom = 10,
		[Token(Token = "0x40016B2")]
		LargeRoom = 20,
		[Token(Token = "0x40016B3")]
		BiomeSection = 30,
		[Token(Token = "0x40016B4")]
		Unlimited = 40
	}

	[Serializable]
	[Token(Token = "0x2000537")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB458", Offset = "0x9BB458")]
	private sealed class <>c
	{
		[Token(Token = "0x40016B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40016B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<PerPlantInstanceData, bool> <>9__26_0;

		[Token(Token = "0x6002316")]
		[Address(RVA = "0xDD0E0C", Offset = "0xDD0E0C", VA = "0xDD0E0C")]
		public <>c()
		{
		}

		[Token(Token = "0x6002317")]
		[Address(RVA = "0xDD0E14", Offset = "0xDD0E14", VA = "0xDD0E14")]
		internal bool <ClearEmpty>b__26_0(PerPlantInstanceData data)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9C0774", Offset = "0x9C0774")]
	[SerializeField]
	private PerPlantInstanceData[] _instancesData;

	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Bounds _boundsWorldSpace;

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9C07D0", Offset = "0x9C07D0")]
	public Mesh InstanceMesh;

	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material InstanceMaterial;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int UniformId_MatObjToWorld;

	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MaterialPropertyBlock _rendererBlock;

	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private ComputeBuffer _positionBuffer;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private ComputeBuffer _drawArgsBuffer;

	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private uint[] _drawArgs;

	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9C0808", Offset = "0x9C0808")]
	[SerializeField]
	private float _lowQualityDensity;

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[SerializeField]
	private RenderDistance _renderDistance;

	[Token(Token = "0x170000BC")]
	public int NumInstances
	{
		[Token(Token = "0x6000771")]
		[Address(RVA = "0xDCF638", Offset = "0xDCF638", VA = "0xDCF638")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000772")]
	[Address(RVA = "0xDCF664", Offset = "0xDCF664", VA = "0xDCF664")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000773")]
	[Address(RVA = "0xDCF904", Offset = "0xDCF904", VA = "0xDCF904")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000774")]
	[Address(RVA = "0xDCFED4", Offset = "0xDCFED4", VA = "0xDCFED4")]
	public void ClearAllInstances()
	{
	}

	[Token(Token = "0x6000775")]
	[Address(RVA = "0xDCFF34", Offset = "0xDCFF34", VA = "0xDCFF34")]
	public void RefreshGpuBufferAndBounds()
	{
	}

	[Token(Token = "0x6000776")]
	[Address(RVA = "0xDD04C4", Offset = "0xDD04C4", VA = "0xDD04C4")]
	public void ResetTransform()
	{
	}

	[Token(Token = "0x6000777")]
	[Address(RVA = "0xDD08CC", Offset = "0xDD08CC", VA = "0xDD08CC")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000778")]
	[Address(RVA = "0xDCFF58", Offset = "0xDCFF58", VA = "0xDCFF58")]
	private void UpdateBounds()
	{
	}

	[Token(Token = "0x6000779")]
	[Address(RVA = "0xDD08D0", Offset = "0xDD08D0", VA = "0xDD08D0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600077A")]
	[Address(RVA = "0xDD0918", Offset = "0xDD0918", VA = "0xDD0918")]
	public static float DistanceFromRenderDistance(RenderDistance distance)
	{
		return default(float);
	}

	[Token(Token = "0x600077B")]
	[Address(RVA = "0xDD09AC", Offset = "0xDD09AC", VA = "0xDD09AC")]
	private void Update()
	{
	}

	[Token(Token = "0x600077C")]
	[Address(RVA = "0xDD08D4", Offset = "0xDD08D4", VA = "0xDD08D4")]
	private void ReleaseBuffers()
	{
	}

	[Token(Token = "0x600077D")]
	[Address(RVA = "0xDCFA8C", Offset = "0xDCFA8C", VA = "0xDCFA8C")]
	private void SendInstancesDataToGpuBuffer()
	{
	}

	[Token(Token = "0x600077E")]
	[Address(RVA = "0xDD0C1C", Offset = "0xDD0C1C", VA = "0xDD0C1C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9CE714", Offset = "0x9CE714")]
	private void ClearEmpty()
	{
	}

	[Token(Token = "0x600077F")]
	[Address(RVA = "0xDD0D2C", Offset = "0xDD0D2C", VA = "0xDD0D2C")]
	public InstancedPlantField()
	{
	}
}
[Serializable]
[Token(Token = "0x20000F1")]
public struct PerPlantInstanceData
{
	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float posX;

	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float posY;

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float posZ;

	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float scale;

	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float rotQuatX;

	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float rotQuatY;

	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float rotQuatZ;

	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float rotQuatW;

	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float colorR;

	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float colorG;

	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float colorB;

	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float emission;

	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float rand;

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float colorMaskScatteringR;

	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float colorMaskScatteringG;

	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float colorMaskScatteringB;

	[Token(Token = "0x6000780")]
	[Address(RVA = "0xA85860", Offset = "0xA85860", VA = "0xA85860")]
	public Vector3 GetPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000781")]
	[Address(RVA = "0xA8589C", Offset = "0xA8589C", VA = "0xA8589C")]
	public float3 GetFloat3Pos()
	{
		return default(float3);
	}

	[Token(Token = "0x6000782")]
	[Address(RVA = "0xA858D8", Offset = "0xA858D8", VA = "0xA858D8")]
	public void SetPos(Vector3 pos)
	{
	}

	[Token(Token = "0x6000783")]
	[Address(RVA = "0xA858E4", Offset = "0xA858E4", VA = "0xA858E4")]
	public Quaternion GetRot()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000784")]
	[Address(RVA = "0xA858EC", Offset = "0xA858EC", VA = "0xA858EC")]
	public void SetRot(Quaternion rot)
	{
	}

	[Token(Token = "0x6000785")]
	[Address(RVA = "0xA858F8", Offset = "0xA858F8", VA = "0xA858F8")]
	public Color GetColor()
	{
		return default(Color);
	}

	[Token(Token = "0x6000786")]
	[Address(RVA = "0xA85900", Offset = "0xA85900", VA = "0xA85900")]
	public void SetColor(Color color)
	{
	}

	[Token(Token = "0x6000787")]
	[Address(RVA = "0xA8590C", Offset = "0xA8590C", VA = "0xA8590C")]
	public Color GetScatteringMaskColor()
	{
		return default(Color);
	}

	[Token(Token = "0x6000788")]
	[Address(RVA = "0xA85914", Offset = "0xA85914", VA = "0xA85914")]
	public void SetScatteringMaskColor(Color color)
	{
	}
}
[Serializable]
[Token(Token = "0x20000F2")]
public struct PerPlantInstanceGrowthData
{
	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float startTimeStamp;

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float growthCurveCoeff;

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float scaleMax;

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float baseColorR;

	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float baseColorG;

	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float baseColorB;

	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float HOLDER;

	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float HOLDER2;

	[Token(Token = "0x6000789")]
	[Address(RVA = "0xA85920", Offset = "0xA85920", VA = "0xA85920")]
	public void SetBaseColor(Color color)
	{
	}
}
[Token(Token = "0x20000F3")]
public class InstancedPlantSpray : MonoBehaviour
{
	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Bounds _boundsWorldSpace;

	[Token(Token = "0x4000681")]
	private const int _stagingArrayMaxSize = 16;

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int _stagingArrayNumInstances;

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private PerPlantInstanceData[] _stagingArrayPlantInstances;

	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9C0858", Offset = "0x9C0858")]
	public Mesh InstanceMesh;

	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material InstanceMaterial;

	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MaterialPropertyBlock _rendererBlock;

	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9C0890", Offset = "0x9C0890")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9C0890", Offset = "0x9C0890")]
	public float SpawnScaleMin;

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9C08E8", Offset = "0x9C08E8")]
	public float SpawnScaleMax;

	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Gradient SpawnColorGradient;

	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9C0904", Offset = "0x9C0904")]
	public float SpawnInstanceLifeTime;

	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9C091C", Offset = "0x9C091C")]
	public ComputeShader ComputeShaderPlantSpray;

	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int _kernelGrowthDecay;

	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private ComputeBuffer _growthDataBuffer;

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private PerPlantInstanceGrowthData[] _stagingArrayGrowthData;

	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int UniformId_MatObjToWorld;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private int UniformId_Time;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int UniformId_PositionBuffer;

	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private int UniformId_GrowthDataBuffer;

	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private int UniformId_PositionBufferTotalInstanceCount;

	[Token(Token = "0x4000694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private int UniformId_PositionBufferIndexOffset;

	[Token(Token = "0x4000695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int UniformId_PlantInstanceGrowthSpeed;

	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private ComputeBuffer _drawArgsBuffer;

	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private uint[] _drawArgs;

	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int _numInstancesLive;

	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private ComputeBuffer _positionBuffer;

	[Token(Token = "0x400069A")]
	private const int _positionBufferInstanceCountMax = 64;

	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private int _positionBufferIndexOffset;

	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private float _secsSinceLastSpawn;

	[Token(Token = "0x170000BD")]
	public int NumInstancesLive
	{
		[Token(Token = "0x600078A")]
		[Address(RVA = "0xDD0E28", Offset = "0xDD0E28", VA = "0xDD0E28")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x600078B")]
	[Address(RVA = "0xDD0E30", Offset = "0xDD0E30", VA = "0xDD0E30")]
	private void Awake()
	{
	}

	[Token(Token = "0x600078C")]
	[Address(RVA = "0xDD0FE4", Offset = "0xDD0FE4", VA = "0xDD0FE4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600078D")]
	[Address(RVA = "0xDD1298", Offset = "0xDD1298", VA = "0xDD1298")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600078E")]
	[Address(RVA = "0xDD12E0", Offset = "0xDD12E0", VA = "0xDD12E0")]
	private void SendStagingArrayToLiveGPU()
	{
	}

	[Token(Token = "0x600078F")]
	[Address(RVA = "0xDD14BC", Offset = "0xDD14BC", VA = "0xDD14BC")]
	public PerPlantInstanceGrowthData SpawnNew()
	{
		return default(PerPlantInstanceGrowthData);
	}

	[Token(Token = "0x6000790")]
	[Address(RVA = "0xDD1578", Offset = "0xDD1578", VA = "0xDD1578")]
	public void AppendNewPlant(Vector3 worldPos, Quaternion worldRot)
	{
	}

	[Token(Token = "0x6000791")]
	[Address(RVA = "0xDD1774", Offset = "0xDD1774", VA = "0xDD1774")]
	private void AppendNewPlant(PerPlantInstanceData plantData)
	{
	}

	[Token(Token = "0x6000792")]
	[Address(RVA = "0xDD1890", Offset = "0xDD1890", VA = "0xDD1890")]
	private void RunComputeShaderGrowthDecay()
	{
	}

	[Token(Token = "0x6000793")]
	[Address(RVA = "0xDD1AB0", Offset = "0xDD1AB0", VA = "0xDD1AB0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000794")]
	[Address(RVA = "0xDD129C", Offset = "0xDD129C", VA = "0xDD129C")]
	private void ReleaseBuffers()
	{
	}

	[Token(Token = "0x6000795")]
	[Address(RVA = "0xDD1EC4", Offset = "0xDD1EC4", VA = "0xDD1EC4")]
	public InstancedPlantSpray()
	{
	}
}
[Token(Token = "0x20000F4")]
public class Lichen : MonoBehaviour
{
	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SkinnedMeshRenderer mesh;

	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LightPyramidPuzzle puzzleToListenTo;

	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9C0954", Offset = "0x9C0954")]
	public float BlendVal;

	[Token(Token = "0x6000796")]
	[Address(RVA = "0xBF26EC", Offset = "0xBF26EC", VA = "0xBF26EC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000797")]
	[Address(RVA = "0xBF27A8", Offset = "0xBF27A8", VA = "0xBF27A8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000798")]
	[Address(RVA = "0xBF2970", Offset = "0xBF2970", VA = "0xBF2970")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000799")]
	[Address(RVA = "0xBF2B38", Offset = "0xBF2B38", VA = "0xBF2B38")]
	private void PuzzleToListenTo_PuzzleSolved(IPuzzle obj)
	{
	}

	[Token(Token = "0x600079A")]
	[Address(RVA = "0xBF2C48", Offset = "0xBF2C48", VA = "0xBF2C48")]
	public Lichen()
	{
	}

	[Token(Token = "0x600079B")]
	[Address(RVA = "0xBF2C50", Offset = "0xBF2C50", VA = "0xBF2C50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CE74C", Offset = "0x9CE74C")]
	private float <PuzzleToListenTo_PuzzleSolved>b__6_0()
	{
		return default(float);
	}

	[Token(Token = "0x600079C")]
	[Address(RVA = "0xBF2C58", Offset = "0xBF2C58", VA = "0xBF2C58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CE75C", Offset = "0x9CE75C")]
	private void <PuzzleToListenTo_PuzzleSolved>b__6_1(float x)
	{
	}
}
[Token(Token = "0x20000F5")]
public class LightGemVfx : WorldSpaceParticleVfx
{
	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform Target;

	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float Power;

	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float CylinderPower;

	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float CylinderLerp;

	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve PowerCurveOverLifetime;

	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ParticleSystem.Particle[] _particles;

	[Token(Token = "0x600079D")]
	[Address(RVA = "0xBF6EB4", Offset = "0xBF6EB4", VA = "0xBF6EB4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600079E")]
	[Address(RVA = "0xBF6EB8", Offset = "0xBF6EB8", VA = "0xBF6EB8")]
	private void ForceParticlesTowardLight()
	{
	}

	[Token(Token = "0x600079F")]
	[Address(RVA = "0xBF7464", Offset = "0xBF7464", VA = "0xBF7464")]
	public LightGemVfx()
	{
	}
}
[Token(Token = "0x20000F6")]
public class LightRingVisual : MonoBehaviour
{
	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshRenderer lightShaftMesh;

	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshRenderer lightRingMesh;

	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ParticleSystem pfxParticles;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform _tfmScaleNode;

	[NonSerialized]
	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color RingBaseColor;

	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int uniformId_WiggleStrength;

	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int uniformId_Color;

	[Token(Token = "0x170000BE")]
	public Material RingMaterial
	{
		[Token(Token = "0x60007A0")]
		[Address(RVA = "0xBFE1A4", Offset = "0xBFE1A4", VA = "0xBFE1A4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60007A1")]
	[Address(RVA = "0xBFE1D4", Offset = "0xBFE1D4", VA = "0xBFE1D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007A2")]
	[Address(RVA = "0xBFE27C", Offset = "0xBFE27C", VA = "0xBFE27C")]
	public void SetRadius(float radius)
	{
	}

	[Token(Token = "0x60007A3")]
	[Address(RVA = "0xBFE2DC", Offset = "0xBFE2DC", VA = "0xBFE2DC")]
	public float GetRadius()
	{
		return default(float);
	}

	[Token(Token = "0x60007A4")]
	[Address(RVA = "0xBFE30C", Offset = "0xBFE30C", VA = "0xBFE30C")]
	public LightRingVisual()
	{
	}
}
[Token(Token = "0x20000F7")]
public class RecordingPlaybackDummy : MonoBehaviour
{
	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform Root;

	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform Head;

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform LeftHand;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform RightHand;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform GnomeFeet;

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float Height;

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float PushBack;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool RotateRootTowardUser;

	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float FeetLerpScalar;

	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private CapsuleCollider _bodyCapsuleCollider;

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float _leftHandRadius;

	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float _rightHandRadius;

	[Token(Token = "0x170000BF")]
	public CapsuleCollider BodyCapsuleCollider
	{
		[Token(Token = "0x60007A5")]
		[Address(RVA = "0xD2C2C8", Offset = "0xD2C2C8", VA = "0xD2C2C8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000C0")]
	public float LeftHandRadius
	{
		[Token(Token = "0x60007A6")]
		[Address(RVA = "0xD2C2D0", Offset = "0xD2C2D0", VA = "0xD2C2D0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000C1")]
	public float RightHandRadius
	{
		[Token(Token = "0x60007A7")]
		[Address(RVA = "0xD2C2D8", Offset = "0xD2C2D8", VA = "0xD2C2D8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x60007A8")]
	[Address(RVA = "0xD2C2E0", Offset = "0xD2C2E0", VA = "0xD2C2E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007A9")]
	[Address(RVA = "0xD2C518", Offset = "0xD2C518", VA = "0xD2C518")]
	public void LateUpdate()
	{
	}

	[Token(Token = "0x60007AA")]
	[Address(RVA = "0xD2CB24", Offset = "0xD2CB24", VA = "0xD2CB24")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60007AB")]
	[Address(RVA = "0xD2CA58", Offset = "0xD2CA58", VA = "0xD2CA58")]
	private float AdjustedHeight()
	{
		return default(float);
	}

	[Token(Token = "0x60007AC")]
	[Address(RVA = "0xD2CD50", Offset = "0xD2CD50", VA = "0xD2CD50")]
	public RecordingPlaybackDummy()
	{
	}
}
[Token(Token = "0x20000F8")]
public class TouchRingEffect : MonoBehaviour
{
	[Token(Token = "0x2000538")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB468", Offset = "0x9BB468")]
	private sealed class <>c__DisplayClass5_0
	{
		[Token(Token = "0x40016B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float lerpVal;

		[Token(Token = "0x40016B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TouchRingEffect <>4__this;

		[Token(Token = "0x40016B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float ringStartScale;

		[Token(Token = "0x40016BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float ringEndScale;

		[Token(Token = "0x40016BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int uniformId_RingInnterRadius;

		[Token(Token = "0x40016BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float ringThicknessStart;

		[Token(Token = "0x6002318")]
		[Address(RVA = "0xF82F88", Offset = "0xF82F88", VA = "0xF82F88")]
		public <>c__DisplayClass5_0()
		{
		}

		[Token(Token = "0x6002319")]
		[Address(RVA = "0xF82F98", Offset = "0xF82F98", VA = "0xF82F98")]
		internal float <PlayTouchRingEffectGeneric>b__0()
		{
			return default(float);
		}

		[Token(Token = "0x600231A")]
		[Address(RVA = "0xF82FA0", Offset = "0xF82FA0", VA = "0xF82FA0")]
		internal void <PlayTouchRingEffectGeneric>b__1(float x)
		{
		}

		[Token(Token = "0x600231B")]
		[Address(RVA = "0xF82FA8", Offset = "0xF82FA8", VA = "0xF82FA8")]
		internal void <PlayTouchRingEffectGeneric>b__2()
		{
		}

		[Token(Token = "0x600231C")]
		[Address(RVA = "0xF83178", Offset = "0xF83178", VA = "0xF83178")]
		internal void <PlayTouchRingEffectGeneric>b__3()
		{
		}
	}

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MaterialPropertyBlock _rendererBlock;

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private TweenerCore<float, float, FloatOptions> _tween;

	[Token(Token = "0x60007AD")]
	[Address(RVA = "0xF829F0", Offset = "0xF829F0", VA = "0xF829F0")]
	public void Awake()
	{
	}

	[Token(Token = "0x60007AE")]
	[Address(RVA = "0xF82A9C", Offset = "0xF82A9C", VA = "0xF82A9C")]
	public bool IsFree()
	{
		return default(bool);
	}

	[Token(Token = "0x60007AF")]
	[Address(RVA = "0xF82B3C", Offset = "0xF82B3C", VA = "0xF82B3C")]
	public void PlayTouchRingEffectGeneric(Color color, Vector3 pos, Quaternion rot, float animTime = 0.3f, float ringEndScale = 0.15f, float ringThicknessStart = 0.015f, float ringStartScale = 0f)
	{
	}

	[Token(Token = "0x60007B0")]
	[Address(RVA = "0xF82F90", Offset = "0xF82F90", VA = "0xF82F90")]
	public TouchRingEffect()
	{
	}
}
[Token(Token = "0x20000F9")]
public class WigglyArm : MonoBehaviour
{
	[Token(Token = "0x2000539")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB478", Offset = "0x9BB478")]
	private sealed class <>c__DisplayClass19_0
	{
		[Token(Token = "0x40016BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float bulgeAmount;

		[Token(Token = "0x40016BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WigglyArm <>4__this;

		[Token(Token = "0x600231D")]
		[Address(RVA = "0xF98440", Offset = "0xF98440", VA = "0xF98440")]
		public <>c__DisplayClass19_0()
		{
		}

		[Token(Token = "0x600231E")]
		[Address(RVA = "0xF98F6C", Offset = "0xF98F6C", VA = "0xF98F6C")]
		internal float <PlayWaterBudgetBoostEffect>b__0()
		{
			return default(float);
		}

		[Token(Token = "0x600231F")]
		[Address(RVA = "0xF98F74", Offset = "0xF98F74", VA = "0xF98F74")]
		internal void <PlayWaterBudgetBoostEffect>b__1(float x)
		{
		}

		[Token(Token = "0x6002320")]
		[Address(RVA = "0xF98F7C", Offset = "0xF98F7C", VA = "0xF98F7C")]
		internal void <PlayWaterBudgetBoostEffect>b__2()
		{
		}
	}

	[Token(Token = "0x200053A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB488", Offset = "0x9BB488")]
	private sealed class <>c__DisplayClass25_0
	{
		[Token(Token = "0x40016BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform attachPt;

		[Token(Token = "0x40016C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int shaderUniformIdPosLocalEnd;

		[Token(Token = "0x40016C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int shaderUniformIdWristPosLocalVecX;

		[Token(Token = "0x40016C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int shaderUniformIdWristPosLocalVecY;

		[Token(Token = "0x40016C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int shaderUniformIdCtrlPosLocal0;

		[Token(Token = "0x40016C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int shaderUniformIdCtrlPosLocal1;

		[Token(Token = "0x40016C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int shaderUniformIdPosLocalStart;

		[Token(Token = "0x40016C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int shaderUniformIdIsObjectHeld;

		[Token(Token = "0x40016C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public PlayerController controller;

		[Token(Token = "0x40016C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public WigglyArm <>4__this;

		[Token(Token = "0x6002321")]
		[Address(RVA = "0xF98F64", Offset = "0xF98F64", VA = "0xF98F64")]
		public <>c__DisplayClass25_0()
		{
		}

		[Token(Token = "0x6002322")]
		[Address(RVA = "0xF99034", Offset = "0xF99034", VA = "0xF99034")]
		internal void <InitWigglyUpdate>b__1()
		{
		}
	}

	[Token(Token = "0x200053B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB498", Offset = "0x9BB498")]
	private sealed class <DoBindHandToWaterSource>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40016C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40016CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40016CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WigglyArm <>4__this;

		[Token(Token = "0x40016CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private PlayerService <playerService>5__2;

		[Token(Token = "0x40016CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private PlayerController <controller>5__3;

		[Token(Token = "0x40016CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private PlayerControllerVisual <visualHand>5__4;

		[Token(Token = "0x40016CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private InteractiveCore <waterObj>5__5;

		[Token(Token = "0x40016D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 <posAttachOffsetWorld>5__6;

		[Token(Token = "0x17000403")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002326")]
			[Address(RVA = "0xF99CF4", Offset = "0xF99CF4", VA = "0xF99CF4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000404")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002328")]
			[Address(RVA = "0xF99D64", Offset = "0xF99D64", VA = "0xF99D64", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002323")]
		[Address(RVA = "0xF98AF4", Offset = "0xF98AF4", VA = "0xF98AF4")]
		[DebuggerHidden]
		public <DoBindHandToWaterSource>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x6002324")]
		[Address(RVA = "0xF9994C", Offset = "0xF9994C", VA = "0xF9994C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002325")]
		[Address(RVA = "0xF99950", Offset = "0xF99950", VA = "0xF99950", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002327")]
		[Address(RVA = "0xF99CFC", Offset = "0xF99CFC", VA = "0xF99CFC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private VRIK _vrik;

	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public InputHandedness handedness;

	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Renderer MeshRendererTubeCylinder;

	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MaterialPropertyBlock _rendererTubeMatBlock;

	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int UniformId_WaterBulgeStorage;

	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int UniformId_WaterBulgeFillingAnimHeight;

	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int UniformId_WaterBulgeFillingAnimSpeed;

	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int UniformId_WaterBulgeBoost;

	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _resetSpringNextUpdate;

	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float WristLenX;

	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float WristLenY;

	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	private PhysicsSpring _springElbow;

	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public bool EnableSpringPhysics;

	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Mesh wiggleTubeMesh;

	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Transform tfmArmStart;

	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Transform tfmArmCtrlSpringBase;

	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 wristPosWorld;

	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Coroutine _threadBindHandToWaterSource;

	[Token(Token = "0x170000C2")]
	public float3 WorldElbow
	{
		[Token(Token = "0x60007BC")]
		[Address(RVA = "0xF98AD8", Offset = "0xF98AD8", VA = "0xF98AD8")]
		get
		{
			return default(float3);
		}
	}

	[Token(Token = "0x60007B1")]
	[Address(RVA = "0xF97960", Offset = "0xF97960", VA = "0xF97960")]
	private void Start()
	{
	}

	[Token(Token = "0x60007B2")]
	[Address(RVA = "0xF97D74", Offset = "0xF97D74", VA = "0xF97D74")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007B3")]
	[Address(RVA = "0xF97E40", Offset = "0xF97E40", VA = "0xF97E40")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60007B4")]
	[Address(RVA = "0xF97F0C", Offset = "0xF97F0C", VA = "0xF97F0C")]
	public void SetVisible(bool isVisible)
	{
	}

	[Token(Token = "0x60007B5")]
	[Address(RVA = "0xF97CC0", Offset = "0xF97CC0", VA = "0xF97CC0")]
	private void HandlePlayerWaterStorageMessage(PlayerToolService.Messages.PlayerWaterStorageMessage message)
	{
	}

	[Token(Token = "0x60007B6")]
	[Address(RVA = "0xF97F44", Offset = "0xF97F44", VA = "0xF97F44")]
	private void HandlePlayerWaterStateMessage(PlayerToolService.Messages.PlayerWaterStateMessage message)
	{
	}

	[Token(Token = "0x60007B7")]
	[Address(RVA = "0xF9827C", Offset = "0xF9827C", VA = "0xF9827C")]
	private void PlayWaterBudgetBoostEffect(float boost)
	{
	}

	[Token(Token = "0x60007B8")]
	[Address(RVA = "0xF97994", Offset = "0xF97994", VA = "0xF97994")]
	private void InitRendering()
	{
	}

	[Token(Token = "0x60007B9")]
	[Address(RVA = "0xF97B54", Offset = "0xF97B54", VA = "0xF97B54")]
	private void InitWigglyUpdate()
	{
	}

	[Token(Token = "0x60007BA")]
	[Address(RVA = "0xF98448", Offset = "0xF98448", VA = "0xF98448")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60007BB")]
	[Address(RVA = "0xF9861C", Offset = "0xF9861C", VA = "0xF9861C")]
	public void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60007BD")]
	[Address(RVA = "0xF98AE8", Offset = "0xF98AE8", VA = "0xF98AE8")]
	public void SetElbowSpringVelocity(Vector3 vel)
	{
	}

	[Token(Token = "0x60007BE")]
	[Address(RVA = "0xF98208", Offset = "0xF98208", VA = "0xF98208")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CE76C", Offset = "0x9CE76C")]
	private IEnumerator DoBindHandToWaterSource()
	{
		return null;
	}

	[Token(Token = "0x60007BF")]
	[Address(RVA = "0xF98B20", Offset = "0xF98B20", VA = "0xF98B20")]
	public void ResetPhysics()
	{
	}

	[Token(Token = "0x60007C0")]
	[Address(RVA = "0xF98B2C", Offset = "0xF98B2C", VA = "0xF98B2C")]
	public WigglyArm()
	{
	}

	[Token(Token = "0x60007C1")]
	[Address(RVA = "0xF98B50", Offset = "0xF98B50", VA = "0xF98B50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CE7D0", Offset = "0x9CE7D0")]
	private void <InitWigglyUpdate>b__25_0()
	{
	}
}
[Token(Token = "0x20000FA")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9B8DC8", Offset = "0x9B8DC8")]
public class WorldSpaceParticleVfx : MonoBehaviour
{
	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected ParticleSystem _particleSystem;

	[Token(Token = "0x60007C2")]
	[Address(RVA = "0xF9BF14", Offset = "0xF9BF14", VA = "0xF9BF14")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007C3")]
	[Address(RVA = "0xF9BF6C", Offset = "0xF9BF6C", VA = "0xF9BF6C")]
	public void EmitAtLocation(Vector3 location, int count)
	{
	}

	[Token(Token = "0x60007C4")]
	[Address(RVA = "0xF9C080", Offset = "0xF9C080", VA = "0xF9C080")]
	public WorldSpaceParticleVfx()
	{
	}
}
[Token(Token = "0x20000FB")]
public class Biome1Gate : MonoBehaviour
{
	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PersistentEntity PrefabToUnlock;

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material ActiveMaterial;

	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material DormantMaterial;

	[Token(Token = "0x60007C5")]
	[Address(RVA = "0xB9DB34", Offset = "0xB9DB34", VA = "0xB9DB34")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007C6")]
	[Address(RVA = "0xB9DC80", Offset = "0xB9DC80", VA = "0xB9DC80")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60007C7")]
	[Address(RVA = "0xB9DD04", Offset = "0xB9DD04", VA = "0xB9DD04")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9CE7E0", Offset = "0x9CE7E0")]
	private void FindPrefab()
	{
	}

	[Token(Token = "0x60007C8")]
	[Address(RVA = "0xB9DC14", Offset = "0xB9DC14", VA = "0xB9DC14")]
	private void PollGlow(WorldStateService.Messages.PrefabFoundMessage message)
	{
	}

	[Token(Token = "0x60007C9")]
	[Address(RVA = "0xB9DD74", Offset = "0xB9DD74", VA = "0xB9DD74")]
	private void SetGlow(bool glow)
	{
	}

	[Token(Token = "0x60007CA")]
	[Address(RVA = "0xB9DECC", Offset = "0xB9DECC", VA = "0xB9DECC")]
	public Biome1Gate()
	{
	}
}
[Token(Token = "0x20000FC")]
public class Biome3BellController : MonoBehaviour
{
	[Token(Token = "0x200053C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB4A8", Offset = "0x9BB4A8")]
	private sealed class <>c__DisplayClass10_0
	{
		[Token(Token = "0x40016D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float lerpCoeff;

		[Token(Token = "0x40016D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Biome3BellController <>4__this;

		[Token(Token = "0x40016D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float fishStartCylinderRadius;

		[Token(Token = "0x40016D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float fishStartFishLength;

		[Token(Token = "0x40016D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fishEndFishLength;

		[Token(Token = "0x6002329")]
		[Address(RVA = "0xB9E184", Offset = "0xB9E184", VA = "0xB9E184")]
		public <>c__DisplayClass10_0()
		{
		}

		[Token(Token = "0x600232A")]
		[Address(RVA = "0xB9E18C", Offset = "0xB9E18C", VA = "0xB9E18C")]
		internal float <DoFishFlockSeq>b__0()
		{
			return default(float);
		}

		[Token(Token = "0x600232B")]
		[Address(RVA = "0xB9E194", Offset = "0xB9E194", VA = "0xB9E194")]
		internal void <DoFishFlockSeq>b__1(float x)
		{
		}

		[Token(Token = "0x600232C")]
		[Address(RVA = "0xB9E19C", Offset = "0xB9E19C", VA = "0xB9E19C")]
		internal void <DoFishFlockSeq>b__2()
		{
		}

		[Token(Token = "0x600232D")]
		[Address(RVA = "0xB9E2CC", Offset = "0xB9E2CC", VA = "0xB9E2CC")]
		internal float <DoFishFlockSeq>b__3()
		{
			return default(float);
		}

		[Token(Token = "0x600232E")]
		[Address(RVA = "0xB9E2D4", Offset = "0xB9E2D4", VA = "0xB9E2D4")]
		internal void <DoFishFlockSeq>b__4(float x)
		{
		}

		[Token(Token = "0x600232F")]
		[Address(RVA = "0xB9E2DC", Offset = "0xB9E2DC", VA = "0xB9E2DC")]
		internal void <DoFishFlockSeq>b__5()
		{
		}
	}

	[Token(Token = "0x200053D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB4B8", Offset = "0x9BB4B8")]
	private sealed class <DoFishFlockSeq>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40016D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40016D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40016D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Biome3BellController <>4__this;

		[Token(Token = "0x40016D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private <>c__DisplayClass10_0 <>8__1;

		[Token(Token = "0x40016DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <lerpTimeSecs>5__2;

		[Token(Token = "0x17000405")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002333")]
			[Address(RVA = "0xB9EB14", Offset = "0xB9EB14", VA = "0xB9EB14", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000406")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002335")]
			[Address(RVA = "0xB9EB84", Offset = "0xB9EB84", VA = "0xB9EB84", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002330")]
		[Address(RVA = "0xB9E140", Offset = "0xB9E140", VA = "0xB9E140")]
		[DebuggerHidden]
		public <DoFishFlockSeq>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6002331")]
		[Address(RVA = "0xB9E3E0", Offset = "0xB9E3E0", VA = "0xB9E3E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002332")]
		[Address(RVA = "0xB9E3E4", Offset = "0xB9E3E4", VA = "0xB9E3E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002334")]
		[Address(RVA = "0xB9EB1C", Offset = "0xB9EB1C", VA = "0xB9EB1C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Bell _bellSource;

	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9C09BC", Offset = "0x9C09BC")]
	[SerializeField]
	private FlockFish _fish;

	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float _fishEndCylinderRadius;

	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float _fishBodyLengthCache;

	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float _fishEnterIdleTime;

	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AudioService.AudioServiceLoopHandle _sfxLoopHandle;

	[Token(Token = "0x60007CB")]
	[Address(RVA = "0xB9DED4", Offset = "0xB9DED4", VA = "0xB9DED4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007CC")]
	[Address(RVA = "0xB9DFB0", Offset = "0xB9DFB0", VA = "0xB9DFB0")]
	private void HandleBellEvent(BellHitEvent bellEvent)
	{
	}

	[Token(Token = "0x60007CD")]
	[Address(RVA = "0xB9E05C", Offset = "0xB9E05C", VA = "0xB9E05C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9CE818", Offset = "0x9CE818")]
	public void PlayFishFlockSeq()
	{
	}

	[Token(Token = "0x60007CE")]
	[Address(RVA = "0xB9E0FC", Offset = "0xB9E0FC", VA = "0xB9E0FC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60007CF")]
	[Address(RVA = "0xB9E088", Offset = "0xB9E088", VA = "0xB9E088")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CE850", Offset = "0x9CE850")]
	private IEnumerator DoFishFlockSeq()
	{
		return null;
	}

	[Token(Token = "0x60007D0")]
	[Address(RVA = "0xB9E16C", Offset = "0xB9E16C", VA = "0xB9E16C")]
	public Biome3BellController()
	{
	}
}
[Token(Token = "0x20000FD")]
public class Biome3BoatVisual : MonoBehaviour
{
	[Token(Token = "0x60007D1")]
	[Address(RVA = "0xB9EB8C", Offset = "0xB9EB8C", VA = "0xB9EB8C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007D2")]
	[Address(RVA = "0xB9EC38", Offset = "0xB9EC38", VA = "0xB9EC38")]
	public Biome3BoatVisual()
	{
	}

	[Token(Token = "0x60007D3")]
	[Address(RVA = "0xB9EC40", Offset = "0xB9EC40", VA = "0xB9EC40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CE8B4", Offset = "0x9CE8B4")]
	private void <Awake>b__0_0(BoatEvent eve)
	{
	}
}
[Token(Token = "0x20000FE")]
public class Biome3SayonaraAudioControl : MonoBehaviour
{
	[Token(Token = "0x200053E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB4C8", Offset = "0x9BB4C8")]
	private sealed class <DoBeginSayonarAudioRoutine>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40016DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40016DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40016DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Biome3SayonaraAudioControl <>4__this;

		[Token(Token = "0x17000407")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002339")]
			[Address(RVA = "0xB9FA5C", Offset = "0xB9FA5C", VA = "0xB9FA5C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000408")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600233B")]
			[Address(RVA = "0xB9FACC", Offset = "0xB9FACC", VA = "0xB9FACC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002336")]
		[Address(RVA = "0xB9F834", Offset = "0xB9F834", VA = "0xB9F834")]
		[DebuggerHidden]
		public <DoBeginSayonarAudioRoutine>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6002337")]
		[Address(RVA = "0xB9F868", Offset = "0xB9F868", VA = "0xB9F868", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002338")]
		[Address(RVA = "0xB9F86C", Offset = "0xB9F86C", VA = "0xB9F86C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600233A")]
		[Address(RVA = "0xB9FA64", Offset = "0xB9FA64", VA = "0xB9FA64", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x60007D4")]
	[Address(RVA = "0xB9F6FC", Offset = "0xB9F6FC", VA = "0xB9F6FC")]
	public void BeginSayonarAudioRoutine()
	{
	}

	[Token(Token = "0x60007D5")]
	[Address(RVA = "0xB9F7C0", Offset = "0xB9F7C0", VA = "0xB9F7C0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CE8C4", Offset = "0x9CE8C4")]
	private IEnumerator DoBeginSayonarAudioRoutine()
	{
		return null;
	}

	[Token(Token = "0x60007D6")]
	[Address(RVA = "0xB9F860", Offset = "0xB9F860", VA = "0xB9F860")]
	public Biome3SayonaraAudioControl()
	{
	}
}
[Token(Token = "0x20000FF")]
public class Biome3SpecialUseRailNarrativeController : MonoBehaviour
{
	[Token(Token = "0x60007D7")]
	[Address(RVA = "0xB9FAD4", Offset = "0xB9FAD4", VA = "0xB9FAD4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007D8")]
	[Address(RVA = "0xB9FB80", Offset = "0xB9FB80", VA = "0xB9FB80")]
	public Biome3SpecialUseRailNarrativeController()
	{
	}

	[Token(Token = "0x60007D9")]
	[Address(RVA = "0xB9FB88", Offset = "0xB9FB88", VA = "0xB9FB88")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CE928", Offset = "0x9CE928")]
	private void <Awake>b__0_0(FujiAreaService service)
	{
	}
}
[Token(Token = "0x2000100")]
public class BiomeEndingConnector : MonoBehaviour
{
	[Token(Token = "0x60007DA")]
	[Address(RVA = "0xB9FD5C", Offset = "0xB9FD5C", VA = "0xB9FD5C")]
	public void PlayActivateSeq()
	{
	}

	[Token(Token = "0x60007DB")]
	[Address(RVA = "0xBA0000", Offset = "0xBA0000", VA = "0xBA0000")]
	public BiomeEndingConnector()
	{
	}
}
[Token(Token = "0x2000101")]
public class BiomeEndingIslandHandler : MonoBehaviour
{
	[Token(Token = "0x200053F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB4D8", Offset = "0x9BB4D8")]
	private sealed class <DoFinalLightPuzzleSeq>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40016DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40016DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40016E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BiomeEndingIslandHandler <>4__this;

		[Token(Token = "0x17000409")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600233F")]
			[Address(RVA = "0xBA0C10", Offset = "0xBA0C10", VA = "0xBA0C10", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700040A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002341")]
			[Address(RVA = "0xBA0C80", Offset = "0xBA0C80", VA = "0xBA0C80", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600233C")]
		[Address(RVA = "0xBA0350", Offset = "0xBA0350", VA = "0xBA0350")]
		[DebuggerHidden]
		public <DoFinalLightPuzzleSeq>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x600233D")]
		[Address(RVA = "0xBA04E0", Offset = "0xBA04E0", VA = "0xBA04E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600233E")]
		[Address(RVA = "0xBA04E4", Offset = "0xBA04E4", VA = "0xBA04E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002340")]
		[Address(RVA = "0xBA0C18", Offset = "0xBA0C18", VA = "0xBA0C18", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000540")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB4E8", Offset = "0x9BB4E8")]
	private sealed class <PlaySolveIslandSeq>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40016E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40016E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40016E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BiomeEndingIslandHandler <>4__this;

		[Token(Token = "0x40016E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int islandIndex;

		[Token(Token = "0x40016E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject <plantsSpawnedParent>5__2;

		[Token(Token = "0x40016E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <i>5__3;

		[Token(Token = "0x1700040B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002345")]
			[Address(RVA = "0xBA122C", Offset = "0xBA122C", VA = "0xBA122C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700040C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002347")]
			[Address(RVA = "0xBA129C", Offset = "0xBA129C", VA = "0xBA129C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002342")]
		[Address(RVA = "0xBA0414", Offset = "0xBA0414", VA = "0xBA0414")]
		[DebuggerHidden]
		public <PlaySolveIslandSeq>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6002343")]
		[Address(RVA = "0xBA0C88", Offset = "0xBA0C88", VA = "0xBA0C88", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002344")]
		[Address(RVA = "0xBA0C8C", Offset = "0xBA0C8C", VA = "0xBA0C8C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002346")]
		[Address(RVA = "0xBA1234", Offset = "0xBA1234", VA = "0xBA1234", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BiomeEndingConnector[] Connectors;

	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] IslandNewPlantsSpawnedNode;

	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject LightPyramid;

	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject Boat;

	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject[] ObjectsToHideWhenInEnding;

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float TimeUntilHideObjectAfterInBoat;

	[Token(Token = "0x60007DC")]
	[Address(RVA = "0xBA0008", Offset = "0xBA0008", VA = "0xBA0008")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007DD")]
	[Address(RVA = "0xBA01D0", Offset = "0xBA01D0", VA = "0xBA01D0")]
	private void ActivateConnector(int connectorIndex)
	{
	}

	[Token(Token = "0x60007DE")]
	[Address(RVA = "0xBA02B0", Offset = "0xBA02B0", VA = "0xBA02B0")]
	public void OnFinalLightPuzzleTouched()
	{
	}

	[Token(Token = "0x60007DF")]
	[Address(RVA = "0xBA02DC", Offset = "0xBA02DC", VA = "0xBA02DC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CE938", Offset = "0x9CE938")]
	private IEnumerator DoFinalLightPuzzleSeq()
	{
		return null;
	}

	[Token(Token = "0x60007E0")]
	[Address(RVA = "0xBA037C", Offset = "0xBA037C", VA = "0xBA037C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CE99C", Offset = "0x9CE99C")]
	private IEnumerator PlaySolveIslandSeq(int islandIndex)
	{
		return null;
	}

	[Token(Token = "0x60007E1")]
	[Address(RVA = "0xBA0440", Offset = "0xBA0440", VA = "0xBA0440")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9CEA00", Offset = "0x9CEA00")]
	public void OnPuzzleSolveIsland1()
	{
	}

	[Token(Token = "0x60007E2")]
	[Address(RVA = "0xBA0470", Offset = "0xBA0470", VA = "0xBA0470")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9CEA38", Offset = "0x9CEA38")]
	public void OnPuzzleSolveIsland2()
	{
	}

	[Token(Token = "0x60007E3")]
	[Address(RVA = "0xBA04A0", Offset = "0xBA04A0", VA = "0xBA04A0")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9CEA70", Offset = "0x9CEA70")]
	public void OnPuzzleSolveIsland3()
	{
	}

	[Token(Token = "0x60007E4")]
	[Address(RVA = "0xBA04D0", Offset = "0xBA04D0", VA = "0xBA04D0")]
	public BiomeEndingIslandHandler()
	{
	}
}
[Token(Token = "0x2000102")]
public class BiomeNarrativeController : MonoBehaviour
{
	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private LoadingZoneKey _loadingZone;

	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private FujiNarrativeKey _narrativeKey;

	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject WaitingBoat;

	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform GnomeBeconingTransform;

	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int PrefabsNeededToBeatBiomeCount;

	[Token(Token = "0x40006E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PersistentEntity[] PrefabsNeededToBeatBiome;

	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool DisallowLightRailUsageAfterFirstLanding;

	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject SerpentPathTriggerReturnHome;

	[Token(Token = "0x60007E5")]
	[Address(RVA = "0xBA12A4", Offset = "0xBA12A4", VA = "0xBA12A4")]
	public void Start()
	{
	}

	[Token(Token = "0x60007E6")]
	[Address(RVA = "0xBA1430", Offset = "0xBA1430", VA = "0xBA1430")]
	private void CheckPrefabs()
	{
	}

	[Token(Token = "0x60007E7")]
	[Address(RVA = "0xBA1518", Offset = "0xBA1518", VA = "0xBA1518")]
	private bool CollectedEnoughSeeds()
	{
		return default(bool);
	}

	[Token(Token = "0x60007E8")]
	[Address(RVA = "0xBA160C", Offset = "0xBA160C", VA = "0xBA160C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9CEAA8", Offset = "0x9CEAA8")]
	private void DemoSendBeconEvent()
	{
	}

	[Token(Token = "0x60007E9")]
	[Address(RVA = "0xBA165C", Offset = "0xBA165C", VA = "0xBA165C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9CEAE0", Offset = "0x9CEAE0")]
	private void DemoFindAll()
	{
	}

	[Token(Token = "0x60007EA")]
	[Address(RVA = "0xBA1664", Offset = "0xBA1664", VA = "0xBA1664")]
	public BiomeNarrativeController()
	{
	}

	[Token(Token = "0x60007EB")]
	[Address(RVA = "0xBA1684", Offset = "0xBA1684", VA = "0xBA1684")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CEB18", Offset = "0x9CEB18")]
	private void <Start>b__8_0(BoatEvent eve)
	{
	}

	[Token(Token = "0x60007EC")]
	[Address(RVA = "0xBA18B8", Offset = "0xBA18B8", VA = "0xBA18B8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CEB28", Offset = "0x9CEB28")]
	private void <Start>b__8_1(WorldStateService.Messages.UserDataSetMessage message)
	{
	}

	[Token(Token = "0x60007ED")]
	[Address(RVA = "0xBA1ADC", Offset = "0xBA1ADC", VA = "0xBA1ADC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CEB38", Offset = "0x9CEB38")]
	private void <Start>b__8_2(WorldStateService.Messages.PrefabFoundMessage message)
	{
	}
}
[Token(Token = "0x2000103")]
public class FakeLightRing : MonoBehaviour
{
	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LoadingZoneKey Zone;

	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3? WorldAnchor;

	[Token(Token = "0x60007EE")]
	[Address(RVA = "0xC61024", Offset = "0xC61024", VA = "0xC61024")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9CEB48", Offset = "0x9CEB48")]
	public void Sample()
	{
	}

	[Token(Token = "0x60007EF")]
	[Address(RVA = "0xC6122C", Offset = "0xC6122C", VA = "0xC6122C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007F0")]
	[Address(RVA = "0xC61360", Offset = "0xC61360", VA = "0xC61360")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007F1")]
	[Address(RVA = "0xC61470", Offset = "0xC61470", VA = "0xC61470")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60007F2")]
	[Address(RVA = "0xC6157C", Offset = "0xC6157C", VA = "0xC6157C")]
	private void HandleSaveStateMessage(WorldStateService.Messages.SaveStateAlteredMessaged message)
	{
	}

	[Token(Token = "0x60007F3")]
	[Address(RVA = "0xC6158C", Offset = "0xC6158C", VA = "0xC6158C")]
	public FakeLightRing()
	{
	}
}
[Token(Token = "0x2000104")]
public class FlowerPoofOnEnable : MonoBehaviour
{
	[Token(Token = "0x60007F4")]
	[Address(RVA = "0xC67BA0", Offset = "0xC67BA0", VA = "0xC67BA0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007F5")]
	[Address(RVA = "0xC67C6C", Offset = "0xC67C6C", VA = "0xC67C6C")]
	public FlowerPoofOnEnable()
	{
	}
}
[Serializable]
[Token(Token = "0x2000105")]
public enum FujiNarrativeKey
{
	[Token(Token = "0x40006E9")]
	NULL = -1337,
	[Token(Token = "0x40006EA")]
	Biome1Completed = 0,
	[Token(Token = "0x40006EB")]
	Biome1SerpentKelp = 1,
	[Token(Token = "0x40006EC")]
	Biome2Completed = 2,
	[Token(Token = "0x40006ED")]
	Biome3Completed = 3,
	[Token(Token = "0x40006EE")]
	Biome3BellHit = 100,
	[Token(Token = "0x40006EF")]
	Biome3Sayonara = 101,
	[Token(Token = "0x40006F0")]
	EndingBiomeCompleted = 4,
	[Token(Token = "0x40006F1")]
	GnomeTutorialCompleted = 5,
	[Token(Token = "0x40006F2")]
	BirthingSequenceCompleted = 6,
	[Token(Token = "0x40006F3")]
	TextEvent_BoatFirstTimeCompleted = 7,
	[Token(Token = "0x40006F4")]
	TextEvent_PlantSeeds = 8,
	[Token(Token = "0x40006F5")]
	Garden1BoatUnlocked = 9,
	[Token(Token = "0x40006F6")]
	Garden3OuterDoorOpened = 10,
	[Token(Token = "0x40006F7")]
	GardenEndingOuterDoorOpened = 11,
	[Token(Token = "0x40006F8")]
	EndingIslandsCompleted = 12
}
[Token(Token = "0x2000106")]
public class GardenBoatPuzzleController : MonoBehaviour
{
	[Token(Token = "0x2000541")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB4F8", Offset = "0x9BB4F8")]
	private sealed class <DoSpawnBoatRoutine>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40016E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40016E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40016E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GardenBoatPuzzleController <>4__this;

		[Token(Token = "0x40016EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <previousLerp>5__2;

		[Token(Token = "0x1700040D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600234B")]
			[Address(RVA = "0xDC0FE4", Offset = "0xDC0FE4", VA = "0xDC0FE4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700040E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600234D")]
			[Address(RVA = "0xDC1054", Offset = "0xDC1054", VA = "0xDC1054", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002348")]
		[Address(RVA = "0xDC0950", Offset = "0xDC0950", VA = "0xDC0950")]
		[DebuggerHidden]
		public <DoSpawnBoatRoutine>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6002349")]
		[Address(RVA = "0xDC0984", Offset = "0xDC0984", VA = "0xDC0984", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600234A")]
		[Address(RVA = "0xDC0988", Offset = "0xDC0988", VA = "0xDC0988", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600234C")]
		[Address(RVA = "0xDC0FEC", Offset = "0xDC0FEC", VA = "0xDC0FEC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject LightPyramid;

	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject EnableWithBoat;

	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject Boat;

	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform _boatPos;

	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private TextMeshLOC _textSpreadLight;

	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private FujiNarrativeKey Key;

	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private FujiNarrativeKey[] AdditionalKeysToSet;

	[Token(Token = "0x60007F6")]
	[Address(RVA = "0xDC058C", Offset = "0xDC058C", VA = "0xDC058C")]
	private void Start()
	{
	}

	[Token(Token = "0x60007F7")]
	[Address(RVA = "0xDC077C", Offset = "0xDC077C", VA = "0xDC077C")]
	private void OnTouchLightPyramid(LightPyramidTouchEvent eventMsg)
	{
	}

	[Token(Token = "0x60007F8")]
	[Address(RVA = "0xDC0830", Offset = "0xDC0830", VA = "0xDC0830")]
	private void OnPuzzleSolved(PuzzleSolvedMessage solved)
	{
	}

	[Token(Token = "0x60007F9")]
	[Address(RVA = "0xDC08DC", Offset = "0xDC08DC", VA = "0xDC08DC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CEB80", Offset = "0x9CEB80")]
	private IEnumerator DoSpawnBoatRoutine()
	{
		return null;
	}

	[Token(Token = "0x60007FA")]
	[Address(RVA = "0xDC097C", Offset = "0xDC097C", VA = "0xDC097C")]
	public GardenBoatPuzzleController()
	{
	}
}
[Token(Token = "0x2000107")]
public class GardenBoatVisual : MonoBehaviour
{
	[Token(Token = "0x60007FB")]
	[Address(RVA = "0xDC105C", Offset = "0xDC105C", VA = "0xDC105C")]
	private void Start()
	{
	}

	[Token(Token = "0x60007FC")]
	[Address(RVA = "0xDC10E0", Offset = "0xDC10E0", VA = "0xDC10E0")]
	public GardenBoatVisual()
	{
	}

	[Token(Token = "0x60007FD")]
	[Address(RVA = "0xDC10E8", Offset = "0xDC10E8", VA = "0xDC10E8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CEBE4", Offset = "0x9CEBE4")]
	private void <Start>b__0_0(BoatEvent eve)
	{
	}
}
[Token(Token = "0x2000108")]
public class GardenEntityPostProcessor : MonoBehaviour
{
	[Token(Token = "0x2000542")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB508", Offset = "0x9BB508")]
	private sealed class <WaitForGardenAndThenSetItToBePostEnding>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40016EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40016EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40016ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GardenEntityPostProcessor <>4__this;

		[Token(Token = "0x40016EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private BGMService <bgm>5__2;

		[Token(Token = "0x1700040F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002351")]
			[Address(RVA = "0xDC164C", Offset = "0xDC164C", VA = "0xDC164C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000410")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002353")]
			[Address(RVA = "0xDC16BC", Offset = "0xDC16BC", VA = "0xDC16BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600234E")]
		[Address(RVA = "0xDC1230", Offset = "0xDC1230", VA = "0xDC1230")]
		[DebuggerHidden]
		public <WaitForGardenAndThenSetItToBePostEnding>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x600234F")]
		[Address(RVA = "0xDC150C", Offset = "0xDC150C", VA = "0xDC150C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002350")]
		[Address(RVA = "0xDC1510", Offset = "0xDC1510", VA = "0xDC1510", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002352")]
		[Address(RVA = "0xDC1654", Offset = "0xDC1654", VA = "0xDC1654", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FujiBGMPreset GardenPreset;

	[Token(Token = "0x60007FE")]
	[Address(RVA = "0xDC1138", Offset = "0xDC1138", VA = "0xDC1138")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007FF")]
	[Address(RVA = "0xDC11BC", Offset = "0xDC11BC", VA = "0xDC11BC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CEBF4", Offset = "0x9CEBF4")]
	private IEnumerator WaitForGardenAndThenSetItToBePostEnding()
	{
		return null;
	}

	[Token(Token = "0x6000800")]
	[Address(RVA = "0xDC125C", Offset = "0xDC125C", VA = "0xDC125C")]
	private void OnPlayerSpawnedInGardenMessage(PlayerSpawnedInGardenMessage message)
	{
	}

	[Token(Token = "0x6000801")]
	[Address(RVA = "0xDC1504", Offset = "0xDC1504", VA = "0xDC1504")]
	public GardenEntityPostProcessor()
	{
	}
}
[Token(Token = "0x2000109")]
public class GardenOpeningPod : MonoBehaviour
{
	[Token(Token = "0x6000802")]
	[Address(RVA = "0xDC16C4", Offset = "0xDC16C4", VA = "0xDC16C4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000803")]
	[Address(RVA = "0xDC17C0", Offset = "0xDC17C0", VA = "0xDC17C0")]
	private void TryDoSequence(PlayerSpawnedInGardenMessage _)
	{
	}

	[Token(Token = "0x6000804")]
	[Address(RVA = "0xDC1A20", Offset = "0xDC1A20", VA = "0xDC1A20")]
	public GardenOpeningPod()
	{
	}

	[Token(Token = "0x6000805")]
	[Address(RVA = "0xDC1A28", Offset = "0xDC1A28", VA = "0xDC1A28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CEC58", Offset = "0x9CEC58")]
	private void <TryDoSequence>b__1_0()
	{
	}
}
[Token(Token = "0x200010A")]
public class InfiniteWaterSource : MonoBehaviour, IWaterSource
{
	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private InteractiveCore _interactiveCore;

	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform tfmVisualNodeTouchPunchBack;

	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform tfmScaleNode;

	[Token(Token = "0x6000806")]
	[Address(RVA = "0xDCE044", Offset = "0xDCE044", VA = "0xDCE044")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000807")]
	[Address(RVA = "0xDCE53C", Offset = "0xDCE53C", VA = "0xDCE53C")]
	private void PulsateMesh()
	{
	}

	[Token(Token = "0x6000808")]
	[Address(RVA = "0xDCE6D0", Offset = "0xDCE6D0", VA = "0xDCE6D0")]
	private void EmitTouchRingAtSphereEdge(Vector3 inputPos)
	{
	}

	[Token(Token = "0x6000809")]
	[Address(RVA = "0xDCE908", Offset = "0xDCE908", VA = "0xDCE908", Slot = "4")]
	public float ConsumeWater(float desiredConsumption)
	{
		return default(float);
	}

	[Token(Token = "0x600080A")]
	[Address(RVA = "0xDCE90C", Offset = "0xDCE90C", VA = "0xDCE90C")]
	public InfiniteWaterSource()
	{
	}

	[Token(Token = "0x600080B")]
	[Address(RVA = "0xDCE914", Offset = "0xDCE914", VA = "0xDCE914")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CEC68", Offset = "0x9CEC68")]
	private void <Awake>b__3_0(PlayerControllerInput input)
	{
	}

	[Token(Token = "0x600080C")]
	[Address(RVA = "0xDCEB40", Offset = "0xDCEB40", VA = "0xDCEB40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CEC78", Offset = "0x9CEC78")]
	private void <Awake>b__3_1(PlayerControllerInput input)
	{
	}

	[Token(Token = "0x600080D")]
	[Address(RVA = "0xDCECF8", Offset = "0xDCECF8", VA = "0xDCECF8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CEC88", Offset = "0x9CEC88")]
	private void <Awake>b__3_2(PlayerControllerInput input)
	{
	}

	[Token(Token = "0x600080E")]
	[Address(RVA = "0xDCEE5C", Offset = "0xDCEE5C", VA = "0xDCEE5C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CEC98", Offset = "0x9CEC98")]
	private void <Awake>b__3_3(PlayerControllerInput input)
	{
	}

	[Token(Token = "0x600080F")]
	[Address(RVA = "0xDCEEB8", Offset = "0xDCEEB8", VA = "0xDCEEB8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CECA8", Offset = "0x9CECA8")]
	private void <Awake>b__3_4(PlayerControllerInput input)
	{
	}
}
[Token(Token = "0x200010B")]
public class InteractiveCoreDestroyer : MonoBehaviour
{
	[Token(Token = "0x6000810")]
	[Address(RVA = "0xDD4530", Offset = "0xDD4530", VA = "0xDD4530")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000811")]
	[Address(RVA = "0xDD4828", Offset = "0xDD4828", VA = "0xDD4828")]
	public InteractiveCoreDestroyer()
	{
	}
}
[Token(Token = "0x200010C")]
public class InventoryTutorialExplanationBox : MonoBehaviour
{
	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent OnOpen;

	[Token(Token = "0x6000812")]
	[Address(RVA = "0xDD7A8C", Offset = "0xDD7A8C", VA = "0xDD7A8C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000813")]
	[Address(RVA = "0xDD7B10", Offset = "0xDD7B10", VA = "0xDD7B10")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000814")]
	[Address(RVA = "0xDD7B94", Offset = "0xDD7B94", VA = "0xDD7B94")]
	private void HandleInventoryOpenMessage(PortableInventory.Messages.PortableInventoryOpenedMessage message)
	{
	}

	[Token(Token = "0x6000815")]
	[Address(RVA = "0xDD7C4C", Offset = "0xDD7C4C", VA = "0xDD7C4C")]
	public InventoryTutorialExplanationBox()
	{
	}
}
[Token(Token = "0x200010D")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9B8E2C", Offset = "0x9B8E2C")]
public class LightRailTeleporter : MonoBehaviour
{
	[Token(Token = "0x2000543")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB518", Offset = "0x9BB518")]
	private sealed class <Routine>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40016EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40016F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40016F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LightRailTeleporter <>4__this;

		[Token(Token = "0x17000411")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002357")]
			[Address(RVA = "0xBFDC44", Offset = "0xBFDC44", VA = "0xBFDC44", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000412")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002359")]
			[Address(RVA = "0xBFDCB4", Offset = "0xBFDCB4", VA = "0xBFDCB4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002354")]
		[Address(RVA = "0xBFD944", Offset = "0xBFD944", VA = "0xBFD944")]
		[DebuggerHidden]
		public <Routine>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6002355")]
		[Address(RVA = "0xBFD984", Offset = "0xBFD984", VA = "0xBFD984", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002356")]
		[Address(RVA = "0xBFD988", Offset = "0xBFD988", VA = "0xBFD988", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002358")]
		[Address(RVA = "0xBFDC4C", Offset = "0xBFDC4C", VA = "0xBFDC4C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string _searchableSceneObjectName;

	[Token(Token = "0x4000706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9C0AD8", Offset = "0x9C0AD8")]
	private float _targetLightRailProgress;

	[Token(Token = "0x4000707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private LightRailDirection _direction;

	[Token(Token = "0x4000708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool _hideExteriorsAfterTeleport;

	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEvent CallBeforeTeleport;

	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GenericTriggerVolume _triggerVolume;

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private LightRailPath _targetLightRail;

	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool inProg;

	[Token(Token = "0x6000816")]
	[Address(RVA = "0xBFD63C", Offset = "0xBFD63C", VA = "0xBFD63C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000817")]
	[Address(RVA = "0xBFD694", Offset = "0xBFD694", VA = "0xBFD694")]
	private void Start()
	{
	}

	[Token(Token = "0x6000818")]
	[Address(RVA = "0xBFD71C", Offset = "0xBFD71C", VA = "0xBFD71C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000819")]
	[Address(RVA = "0xBFD7AC", Offset = "0xBFD7AC", VA = "0xBFD7AC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600081A")]
	[Address(RVA = "0xBFD83C", Offset = "0xBFD83C", VA = "0xBFD83C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9CECB8", Offset = "0x9CECB8")]
	private void OnTriggerEnter()
	{
	}

	[Token(Token = "0x600081B")]
	[Address(RVA = "0xBFD8D0", Offset = "0xBFD8D0", VA = "0xBFD8D0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CECF0", Offset = "0x9CECF0")]
	private IEnumerator Routine()
	{
		return null;
	}

	[Token(Token = "0x600081C")]
	[Address(RVA = "0xBFD970", Offset = "0xBFD970", VA = "0xBFD970")]
	public LightRailTeleporter()
	{
	}
}
[Token(Token = "0x200010E")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9B8E90", Offset = "0x9B8E90")]
public class LilyFlowerBiomeAnimation : MonoBehaviour
{
	[Token(Token = "0x2000544")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB528", Offset = "0x9BB528")]
	private sealed class <DoAnimationRoutine>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40016F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40016F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40016F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LilyFlowerBiomeAnimation <>4__this;

		[Token(Token = "0x17000413")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600235D")]
			[Address(RVA = "0xC03CE0", Offset = "0xC03CE0", VA = "0xC03CE0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000414")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600235F")]
			[Address(RVA = "0xC03D50", Offset = "0xC03D50", VA = "0xC03D50", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600235A")]
		[Address(RVA = "0xC03710", Offset = "0xC03710", VA = "0xC03710")]
		[DebuggerHidden]
		public <DoAnimationRoutine>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x600235B")]
		[Address(RVA = "0xC0388C", Offset = "0xC0388C", VA = "0xC0388C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600235C")]
		[Address(RVA = "0xC03890", Offset = "0xC03890", VA = "0xC03890", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600235E")]
		[Address(RVA = "0xC03CE8", Offset = "0xC03CE8", VA = "0xC03CE8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float FloatFallDistance;

	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Animator LilyAnimator;

	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform Head;

	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 _startingPos;

	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool _animated;

	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject _shine;

	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private InteractiveCoreTouchPuzzle puzzle;

	[Token(Token = "0x600081D")]
	[Address(RVA = "0xC03310", Offset = "0xC03310", VA = "0xC03310")]
	private void Awake()
	{
	}

	[Token(Token = "0x600081E")]
	[Address(RVA = "0xC03404", Offset = "0xC03404", VA = "0xC03404")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9CED54", Offset = "0x9CED54")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x600081F")]
	[Address(RVA = "0xC035CC", Offset = "0xC035CC", VA = "0xC035CC")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9CED8C", Offset = "0x9CED8C")]
	public void DoAnimation()
	{
	}

	[Token(Token = "0x6000820")]
	[Address(RVA = "0xC0369C", Offset = "0xC0369C", VA = "0xC0369C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CEDC4", Offset = "0x9CEDC4")]
	private IEnumerator DoAnimationRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000821")]
	[Address(RVA = "0xC0373C", Offset = "0xC0373C", VA = "0xC0373C")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000822")]
	[Address(RVA = "0xC0387C", Offset = "0xC0387C", VA = "0xC0387C")]
	public LilyFlowerBiomeAnimation()
	{
	}
}
[Token(Token = "0x200010F")]
public class LilyFlowerBiomeEnding : MonoBehaviour
{
	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Animator animator;

	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private SkinnedMeshRenderer meshRenderer;

	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform tfmFlowerHead;

	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[EventRef]
	private string _lilyFlowerOpenEvent;

	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject _ripplePrefab;

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject _rippleInstance;

	[Token(Token = "0x6000823")]
	[Address(RVA = "0xC03D58", Offset = "0xC03D58", VA = "0xC03D58")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000824")]
	[Address(RVA = "0xC03F94", Offset = "0xC03F94", VA = "0xC03F94")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9CEE28", Offset = "0x9CEE28")]
	public void PlayOpenAnim()
	{
	}

	[Token(Token = "0x6000825")]
	[Address(RVA = "0xC04200", Offset = "0xC04200", VA = "0xC04200")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9CEE60", Offset = "0x9CEE60")]
	public void PlayDetach(float yOffset, float animTime)
	{
	}

	[Token(Token = "0x6000826")]
	[Address(RVA = "0xC040D8", Offset = "0xC040D8", VA = "0xC040D8")]
	private void PlayPulsateEffect()
	{
	}

	[Token(Token = "0x6000827")]
	[Address(RVA = "0xC0440C", Offset = "0xC0440C", VA = "0xC0440C")]
	public LilyFlowerBiomeEnding()
	{
	}

	[Token(Token = "0x6000828")]
	[Address(RVA = "0xC04414", Offset = "0xC04414", VA = "0xC04414")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CEE98", Offset = "0x9CEE98")]
	private void <PlayDetach>b__8_0()
	{
	}
}
[Token(Token = "0x2000110")]
public class LilyNode : MonoBehaviour
{
	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly LinkedList<LilyNode> Nodes;

	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LinkedListNode<LilyNode> _node;

	[Token(Token = "0x170000C3")]
	public static IReadOnlyCollection<LilyNode> Lilies
	{
		[Token(Token = "0x600082B")]
		[Address(RVA = "0xC045B4", Offset = "0xC045B4", VA = "0xC045B4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000829")]
	[Address(RVA = "0xC04480", Offset = "0xC04480", VA = "0xC04480")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600082A")]
	[Address(RVA = "0xC04514", Offset = "0xC04514", VA = "0xC04514")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600082C")]
	[Address(RVA = "0xC0461C", Offset = "0xC0461C", VA = "0xC0461C")]
	public static LilyNode FindClosestLilyInDirection(Ray ray, float minDistance = 0.5f, float maxDistance = 4f)
	{
		return null;
	}

	[Token(Token = "0x600082D")]
	[Address(RVA = "0xC04920", Offset = "0xC04920", VA = "0xC04920")]
	public LilyNode()
	{
	}
}
[Token(Token = "0x2000111")]
public class LilyPopUpChildren : MonoBehaviour
{
	[Token(Token = "0x2000545")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB538", Offset = "0x9BB538")]
	private sealed class <>c__DisplayClass6_0
	{
		[Token(Token = "0x40016F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 pos;

		[Token(Token = "0x40016F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform currChild;

		[Token(Token = "0x40016F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LilyPopUpChildren <>4__this;

		[Token(Token = "0x6002360")]
		[Address(RVA = "0xC04DF4", Offset = "0xC04DF4", VA = "0xC04DF4")]
		public <>c__DisplayClass6_0()
		{
		}

		[Token(Token = "0x6002361")]
		[Address(RVA = "0xC051D0", Offset = "0xC051D0", VA = "0xC051D0")]
		internal void <RiseUp>b__0()
		{
		}
	}

	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] PopUpChildren;

	[Token(Token = "0x400071D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3[] childScales;

	[Token(Token = "0x400071E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[EventRef]
	public string LilyPopSfx;

	[Token(Token = "0x600082F")]
	[Address(RVA = "0xC0499C", Offset = "0xC0499C", VA = "0xC0499C")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000830")]
	[Address(RVA = "0xC049A0", Offset = "0xC049A0", VA = "0xC049A0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000831")]
	[Address(RVA = "0xC04AE4", Offset = "0xC04AE4", VA = "0xC04AE4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000832")]
	[Address(RVA = "0xC04B84", Offset = "0xC04B84", VA = "0xC04B84")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9CEEA8", Offset = "0x9CEEA8")]
	public void RiseUp()
	{
	}

	[Token(Token = "0x6000833")]
	[Address(RVA = "0xC04DFC", Offset = "0xC04DFC", VA = "0xC04DFC")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000834")]
	[Address(RVA = "0xC051C8", Offset = "0xC051C8", VA = "0xC051C8")]
	public LilyPopUpChildren()
	{
	}
}
[Token(Token = "0x2000112")]
public class MakeJellySystemsUnfoldInAnOrder : MonoBehaviour, IFujiSerializable
{
	[Token(Token = "0x2000546")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB548", Offset = "0x9BB548")]
	private sealed class <DoShowPlants>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40016F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40016F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40016FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MakeJellySystemsUnfoldInAnOrder <>4__this;

		[Token(Token = "0x40016FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private JellySystem[] <>7__wrap1;

		[Token(Token = "0x40016FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <>7__wrap2;

		[Token(Token = "0x40016FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private JellySystem <jellySystem>5__4;

		[Token(Token = "0x17000415")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002365")]
			[Address(RVA = "0xC06818", Offset = "0xC06818", VA = "0xC06818", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000416")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002367")]
			[Address(RVA = "0xC06888", Offset = "0xC06888", VA = "0xC06888", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002362")]
		[Address(RVA = "0xC0650C", Offset = "0xC0650C", VA = "0xC0650C")]
		[DebuggerHidden]
		public <DoShowPlants>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6002363")]
		[Address(RVA = "0xC065B8", Offset = "0xC065B8", VA = "0xC065B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002364")]
		[Address(RVA = "0xC065BC", Offset = "0xC065BC", VA = "0xC065BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002366")]
		[Address(RVA = "0xC06820", Offset = "0xC06820", VA = "0xC06820", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public JellySystem[] jellySystems;

	[Token(Token = "0x4000720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float delayBetweenPops;

	[Token(Token = "0x4000721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool _unfolded;

	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[EventRef]
	public string PopSfx;

	[Token(Token = "0x170000C4")]
	[FujiSerialized]
	public bool UnfoldedIo
	{
		[Token(Token = "0x6000835")]
		[Address(RVA = "0xC061D8", Offset = "0xC061D8", VA = "0xC061D8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000836")]
		[Address(RVA = "0xC061E0", Offset = "0xC061E0", VA = "0xC061E0")]
		set
		{
		}
	}

	[Token(Token = "0x6000837")]
	[Address(RVA = "0xC06284", Offset = "0xC06284", VA = "0xC06284")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000838")]
	[Address(RVA = "0xC06324", Offset = "0xC06324", VA = "0xC06324")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000839")]
	[Address(RVA = "0xC063CC", Offset = "0xC063CC", VA = "0xC063CC")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9CEEE0", Offset = "0x9CEEE0")]
	public void HidePlants()
	{
	}

	[Token(Token = "0x600083A")]
	[Address(RVA = "0xC0646C", Offset = "0xC0646C", VA = "0xC0646C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9CEF18", Offset = "0x9CEF18")]
	public void ShowPlants()
	{
	}

	[Token(Token = "0x600083B")]
	[Address(RVA = "0xC06498", Offset = "0xC06498", VA = "0xC06498")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CEF50", Offset = "0x9CEF50")]
	private IEnumerator DoShowPlants()
	{
		return null;
	}

	[Token(Token = "0x600083C")]
	[Address(RVA = "0xC06538", Offset = "0xC06538", VA = "0xC06538")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9CEFB4", Offset = "0x9CEFB4")]
	private void ReverseOrder()
	{
	}

	[Token(Token = "0x600083D")]
	[Address(RVA = "0xC065A0", Offset = "0xC065A0", VA = "0xC065A0", Slot = "4")]
	public void OnPreSerialize()
	{
	}

	[Token(Token = "0x600083E")]
	[Address(RVA = "0xC065A4", Offset = "0xC065A4", VA = "0xC065A4", Slot = "5")]
	public void OnPostDeserialize()
	{
	}

	[Token(Token = "0x600083F")]
	[Address(RVA = "0xC065A8", Offset = "0xC065A8", VA = "0xC065A8")]
	public MakeJellySystemsUnfoldInAnOrder()
	{
	}
}
[Token(Token = "0x2000113")]
public class NarrativeCustom_ActivateKidsJustOnce : MonoBehaviour
{
	[Token(Token = "0x2000547")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB558", Offset = "0x9BB558")]
	private sealed class <WaitOneFrame>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40016FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40016FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NarrativeCustom_ActivateKidsJustOnce <>4__this;

		[Token(Token = "0x17000417")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600236B")]
			[Address(RVA = "0xCC9040", Offset = "0xCC9040", VA = "0xCC9040", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000418")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600236D")]
			[Address(RVA = "0xCC90B0", Offset = "0xCC90B0", VA = "0xCC90B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002368")]
		[Address(RVA = "0xCC866C", Offset = "0xCC866C", VA = "0xCC866C")]
		[DebuggerHidden]
		public <WaitOneFrame>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6002369")]
		[Address(RVA = "0xCC8BD8", Offset = "0xCC8BD8", VA = "0xCC8BD8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600236A")]
		[Address(RVA = "0xCC8BDC", Offset = "0xCC8BDC", VA = "0xCC8BDC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600236C")]
		[Address(RVA = "0xCC9048", Offset = "0xCC9048", VA = "0xCC9048", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FujiNarrativeKey NarrativeKeyToCauseActivation;

	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string OneTimeKey;

	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public double TimeSkipHours;

	[Token(Token = "0x6000840")]
	[Address(RVA = "0xCC8514", Offset = "0xCC8514", VA = "0xCC8514")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000841")]
	[Address(RVA = "0xCC85CC", Offset = "0xCC85CC", VA = "0xCC85CC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000842")]
	[Address(RVA = "0xCC85F8", Offset = "0xCC85F8", VA = "0xCC85F8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CEFEC", Offset = "0x9CEFEC")]
	private IEnumerator WaitOneFrame()
	{
		return null;
	}

	[Token(Token = "0x6000843")]
	[Address(RVA = "0xCC8698", Offset = "0xCC8698", VA = "0xCC8698")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000844")]
	[Address(RVA = "0xCC8A8C", Offset = "0xCC8A8C", VA = "0xCC8A8C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9CF050", Offset = "0x9CF050")]
	private void ReBuildOneTimeKey()
	{
	}

	[Token(Token = "0x6000845")]
	[Address(RVA = "0xCC8AF8", Offset = "0xCC8AF8", VA = "0xCC8AF8")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9CF088", Offset = "0x9CF088")]
	private void SetNarrativeKeyAsTrue()
	{
	}

	[Token(Token = "0x6000846")]
	[Address(RVA = "0xCC8B64", Offset = "0xCC8B64", VA = "0xCC8B64")]
	public NarrativeCustom_ActivateKidsJustOnce()
	{
	}
}
[Token(Token = "0x2000114")]
public class ObjectSwapOnTrigger : MonoBehaviour
{
	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GenericTriggerVolume _triggerVolume;

	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float _swapDelay;

	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject[] _objectsToDisable;

	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject[] _objectsToEnable;

	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private bool _destroyAfterFirstUse;

	[Token(Token = "0x6000847")]
	[Address(RVA = "0xCDBA04", Offset = "0xCDBA04", VA = "0xCDBA04")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000848")]
	[Address(RVA = "0xCDBA90", Offset = "0xCDBA90", VA = "0xCDBA90")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000849")]
	[Address(RVA = "0xCDBB20", Offset = "0xCDBB20", VA = "0xCDBB20")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600084A")]
	[Address(RVA = "0xCDBBB0", Offset = "0xCDBBB0", VA = "0xCDBBB0")]
	private void OnTriggerEnter()
	{
	}

	[Token(Token = "0x600084B")]
	[Address(RVA = "0xCDBC34", Offset = "0xCDBC34", VA = "0xCDBC34")]
	public ObjectSwapOnTrigger()
	{
	}

	[Token(Token = "0x600084C")]
	[Address(RVA = "0xCDBC4C", Offset = "0xCDBC4C", VA = "0xCDBC4C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CF0C0", Offset = "0x9CF0C0")]
	private void <OnTriggerEnter>b__8_0(LocomotionService.Messages.PostLocomotionTeleportGlobalMessage message)
	{
	}

	[Token(Token = "0x600084D")]
	[Address(RVA = "0xCDBD10", Offset = "0xCDBD10", VA = "0xCDBD10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CF0D0", Offset = "0x9CF0D0")]
	private void <OnTriggerEnter>b__8_1()
	{
	}
}
[Token(Token = "0x2000115")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9B8EF4", Offset = "0x9B8EF4")]
public class SearchableObjectTeleporter : MonoBehaviour
{
	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string _searchableObjectName;

	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool _singleActivation;

	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject _disableRoot;

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float _blinkOutTime;

	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float _blinkInTime;

	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GenericTriggerVolume _triggerVolume;

	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform _searchableObjectTransform;

	[Token(Token = "0x600084E")]
	[Address(RVA = "0xD32078", Offset = "0xD32078", VA = "0xD32078")]
	private void Awake()
	{
	}

	[Token(Token = "0x600084F")]
	[Address(RVA = "0xD3214C", Offset = "0xD3214C", VA = "0xD3214C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000850")]
	[Address(RVA = "0xD321DC", Offset = "0xD321DC", VA = "0xD321DC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000851")]
	[Address(RVA = "0xD3226C", Offset = "0xD3226C", VA = "0xD3226C")]
	private void OnTriggerEnter()
	{
	}

	[Token(Token = "0x6000852")]
	[Address(RVA = "0xD322F0", Offset = "0xD322F0", VA = "0xD322F0")]
	public SearchableObjectTeleporter()
	{
	}

	[Token(Token = "0x6000853")]
	[Address(RVA = "0xD32308", Offset = "0xD32308", VA = "0xD32308")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CF0E0", Offset = "0x9CF0E0")]
	private void <OnTriggerEnter>b__10_0(LocomotionService.Messages.PostLocomotionTeleportGlobalMessage message)
	{
	}

	[Token(Token = "0x6000854")]
	[Address(RVA = "0xD323DC", Offset = "0xD323DC", VA = "0xD323DC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CF0F0", Offset = "0x9CF0F0")]
	private void <OnTriggerEnter>b__10_1()
	{
	}
}
[Token(Token = "0x2000116")]
public class SwapMaterialOnNarrativeKey : MonoBehaviour
{
	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FujiNarrativeKey Key;

	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material MaterialToSwap;

	[Token(Token = "0x6000855")]
	[Address(RVA = "0xD7D9F8", Offset = "0xD7D9F8", VA = "0xD7D9F8")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000856")]
	[Address(RVA = "0xD7DAEC", Offset = "0xD7DAEC", VA = "0xD7DAEC")]
	public SwapMaterialOnNarrativeKey()
	{
	}
}
[Token(Token = "0x2000117")]
public class TeleportRedirectNode : MonoBehaviour
{
	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9C0C70", Offset = "0x9C0C70")]
	public float3 LocalPosition;

	[Token(Token = "0x4000735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool DestroyVisualsOnBuildAwake;

	[Token(Token = "0x6000857")]
	[Address(RVA = "0xD7DAF4", Offset = "0xD7DAF4", VA = "0xD7DAF4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000858")]
	[Address(RVA = "0xD7DC28", Offset = "0xD7DC28", VA = "0xD7DC28")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000859")]
	[Address(RVA = "0xD7DCD4", Offset = "0xD7DCD4", VA = "0xD7DCD4")]
	internal Vector3 CalculateWorldNodePosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600085A")]
	[Address(RVA = "0xD7DDF4", Offset = "0xD7DDF4", VA = "0xD7DDF4")]
	public TeleportRedirectNode()
	{
	}
}
[Token(Token = "0x2000118")]
public class TextEventNarrativeBoat : MonoBehaviour
{
	[Token(Token = "0x600085B")]
	[Address(RVA = "0xD7E2CC", Offset = "0xD7E2CC", VA = "0xD7E2CC")]
	private void Start()
	{
	}

	[Token(Token = "0x600085C")]
	[Address(RVA = "0xD7E350", Offset = "0xD7E350", VA = "0xD7E350")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600085D")]
	[Address(RVA = "0xD7E3D4", Offset = "0xD7E3D4", VA = "0xD7E3D4")]
	private void HandleBoatEvent(BoatEvent eve)
	{
	}

	[Token(Token = "0x600085E")]
	[Address(RVA = "0xD7E49C", Offset = "0xD7E49C", VA = "0xD7E49C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600085F")]
	[Address(RVA = "0xD7E554", Offset = "0xD7E554", VA = "0xD7E554")]
	public TextEventNarrativeBoat()
	{
	}
}
[Token(Token = "0x2000119")]
public class VizMapArea : MonoBehaviour
{
	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[EditorReadOnly]
	private GameObject _environmentRoot;

	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[EditorReadOnly]
	private GameObject _nonEnvironmentRoot;

	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Renderer> _environmentRenderers;

	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<InstancedPlantField> _environmentInstancePlantFields;

	[Token(Token = "0x6000860")]
	[Address(RVA = "0xF940D8", Offset = "0xF940D8", VA = "0xF940D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000861")]
	[Address(RVA = "0xF943F4", Offset = "0xF943F4", VA = "0xF943F4")]
	public void ToggleEnvironmentRenderers(bool enable)
	{
	}

	[Token(Token = "0x6000862")]
	[Address(RVA = "0xF94674", Offset = "0xF94674", VA = "0xF94674")]
	public void ToggleNonEnvironmentGameObjects(bool enable)
	{
	}

	[Token(Token = "0x6000863")]
	[Address(RVA = "0xF94724", Offset = "0xF94724", VA = "0xF94724")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9CF100", Offset = "0x9CF100")]
	private void TransferAllPersistentEntitiesOut()
	{
	}

	[Token(Token = "0x6000864")]
	[Address(RVA = "0xF9491C", Offset = "0xF9491C", VA = "0xF9491C")]
	public VizMapArea()
	{
	}
}
[Serializable]
[Token(Token = "0x200011A")]
public struct VizMapState
{
	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public VizMapArea Area;

	[Token(Token = "0x400073B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public bool EnvironmentEnabled;

	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
	public bool NonEnvironmentEnabled;
}
[Token(Token = "0x200011B")]
public class VizMapTrigger : MonoBehaviour, LocomotionService.IPlayerTriggerable, IGameObject
{
	[Serializable]
	[Token(Token = "0x2000548")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB568", Offset = "0x9BB568")]
	private sealed class <>c
	{
		[Token(Token = "0x4001701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<VizMapArea, string> <>9__6_0;

		[Token(Token = "0x4001703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<VizMapState, bool> <>9__8_0;

		[Token(Token = "0x600236F")]
		[Address(RVA = "0xF951D0", Offset = "0xF951D0", VA = "0xF951D0")]
		public <>c()
		{
		}

		[Token(Token = "0x6002370")]
		[Address(RVA = "0xF951D8", Offset = "0xF951D8", VA = "0xF951D8")]
		internal string <Reset>b__6_0(VizMapArea x)
		{
			return null;
		}

		[Token(Token = "0x6002371")]
		[Address(RVA = "0xF95208", Offset = "0xF95208", VA = "0xF95208")]
		internal bool <ClearEmptyEntries>b__8_0(VizMapState entry)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool GlobalEnabled;

	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool Enabled;

	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VizMapState[] _otherVizMaps;

	[Token(Token = "0x6000865")]
	[Address(RVA = "0xF949B4", Offset = "0xF949B4", VA = "0xF949B4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000866")]
	[Address(RVA = "0xF94B0C", Offset = "0xF94B0C", VA = "0xF94B0C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000867")]
	[Address(RVA = "0xF94BE4", Offset = "0xF94BE4", VA = "0xF94BE4", Slot = "4")]
	public void OnPlayerEnterTrigger()
	{
	}

	[Token(Token = "0x6000868")]
	[Address(RVA = "0xF94D1C", Offset = "0xF94D1C", VA = "0xF94D1C")]
	private void Reset()
	{
	}

	[Token(Token = "0x6000869")]
	[Address(RVA = "0xF94FE4", Offset = "0xF94FE4", VA = "0xF94FE4", Slot = "5")]
	public void OnPlayerExitTrigger()
	{
	}

	[Token(Token = "0x600086A")]
	[Address(RVA = "0xF94FE8", Offset = "0xF94FE8", VA = "0xF94FE8")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9CF13C", Offset = "0x9CF13C")]
	private void ClearEmptyEntries()
	{
	}

	[Token(Token = "0x600086B")]
	[Address(RVA = "0xF950F8", Offset = "0xF950F8", VA = "0xF950F8")]
	public VizMapTrigger()
	{
	}

	[SpecialName]
	[Token(Token = "0x600086D")]
	[Address(RVA = "0xF9515C", Offset = "0xF9515C", VA = "0xF9515C", Slot = "6")]
	private GameObject IGameObject.get_gameObject()
	{
		return null;
	}

	[SpecialName]
	[Token(Token = "0x600086E")]
	[Address(RVA = "0xF95164", Offset = "0xF95164", VA = "0xF95164", Slot = "7")]
	private Transform IGameObject.get_transform()
	{
		return null;
	}
}
[Token(Token = "0x200011C")]
public class PlantGalleryTests
{
	[Token(Token = "0x2000549")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB578", Offset = "0x9BB578")]
	private sealed class <LoadFreshGarden>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000419")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002375")]
			[Address(RVA = "0xEB4860", Offset = "0xEB4860", VA = "0xEB4860", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700041A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002377")]
			[Address(RVA = "0xEB48D0", Offset = "0xEB48D0", VA = "0xEB48D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002372")]
		[Address(RVA = "0xEB4558", Offset = "0xEB4558", VA = "0xEB4558")]
		[DebuggerHidden]
		public <LoadFreshGarden>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6002373")]
		[Address(RVA = "0xEB476C", Offset = "0xEB476C", VA = "0xEB476C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002374")]
		[Address(RVA = "0xEB4770", Offset = "0xEB4770", VA = "0xEB4770", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002376")]
		[Address(RVA = "0xEB4868", Offset = "0xEB4868", VA = "0xEB4868", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200054A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB588", Offset = "0x9BB588")]
	private sealed class <IdleInGalleryTest>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x1700041B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600237B")]
			[Address(RVA = "0xEB46F4", Offset = "0xEB46F4", VA = "0xEB46F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700041C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600237D")]
			[Address(RVA = "0xEB4764", Offset = "0xEB4764", VA = "0xEB4764", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002378")]
		[Address(RVA = "0xEB45E4", Offset = "0xEB45E4", VA = "0xEB45E4")]
		[DebuggerHidden]
		public <IdleInGalleryTest>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6002379")]
		[Address(RVA = "0xEB461C", Offset = "0xEB461C", VA = "0xEB461C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600237A")]
		[Address(RVA = "0xEB4620", Offset = "0xEB4620", VA = "0xEB4620", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600237C")]
		[Address(RVA = "0xEB46FC", Offset = "0xEB46FC", VA = "0xEB46FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool gardenLoadedForTesting;

	[Token(Token = "0x600086F")]
	[Address(RVA = "0xEB44F8", Offset = "0xEB44F8", VA = "0xEB44F8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CF174", Offset = "0x9CF174")]
	private static IEnumerator LoadFreshGarden()
	{
		return null;
	}

	[Token(Token = "0x6000870")]
	[Address(RVA = "0xEB4584", Offset = "0xEB4584", VA = "0xEB4584")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CF1D8", Offset = "0x9CF1D8")]
	[AttributeAttribute(Name = "UnityTestAttribute", RVA = "0x9CF1D8", Offset = "0x9CF1D8")]
	public IEnumerator IdleInGalleryTest()
	{
		return null;
	}

	[Token(Token = "0x6000871")]
	[Address(RVA = "0xEB4610", Offset = "0xEB4610", VA = "0xEB4610")]
	public PlantGalleryTests()
	{
	}
}
[Token(Token = "0x200011D")]
public class UserPlaymodeTests
{
	[Token(Token = "0x200054B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB598", Offset = "0x9BB598")]
	private sealed class <LoadFreshGarden>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400170A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float <time>5__2;

		[Token(Token = "0x1700041D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002381")]
			[Address(RVA = "0xF8EEE0", Offset = "0xF8EEE0", VA = "0xF8EEE0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700041E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002383")]
			[Address(RVA = "0xF8EF50", Offset = "0xF8EF50", VA = "0xF8EF50", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600237E")]
		[Address(RVA = "0xF8EB78", Offset = "0xF8EB78", VA = "0xF8EB78")]
		[DebuggerHidden]
		public <LoadFreshGarden>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x600237F")]
		[Address(RVA = "0xF8EC50", Offset = "0xF8EC50", VA = "0xF8EC50", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002380")]
		[Address(RVA = "0xF8EC54", Offset = "0xF8EC54", VA = "0xF8EC54", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002382")]
		[Address(RVA = "0xF8EEE8", Offset = "0xF8EEE8", VA = "0xF8EEE8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200054C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB5A8", Offset = "0x9BB5A8")]
	private sealed class <ZoneWarp>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400170B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400170C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400170D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LoadingZoneKey zone;

		[Token(Token = "0x400170E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int <i>5__2;

		[Token(Token = "0x1700041F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002387")]
			[Address(RVA = "0xF8EFD4", Offset = "0xF8EFD4", VA = "0xF8EFD4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000420")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002389")]
			[Address(RVA = "0xF8F044", Offset = "0xF8F044", VA = "0xF8F044", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002384")]
		[Address(RVA = "0xF8EC18", Offset = "0xF8EC18", VA = "0xF8EC18")]
		[DebuggerHidden]
		public <ZoneWarp>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6002385")]
		[Address(RVA = "0xF8EF58", Offset = "0xF8EF58", VA = "0xF8EF58", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002386")]
		[Address(RVA = "0xF8EF5C", Offset = "0xF8EF5C", VA = "0xF8EF5C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002388")]
		[Address(RVA = "0xF8EFDC", Offset = "0xF8EFDC", VA = "0xF8EFDC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool gardenLoadedForTesting;

	[Token(Token = "0x6000873")]
	[Address(RVA = "0xF8EB18", Offset = "0xF8EB18", VA = "0xF8EB18")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CF24C", Offset = "0x9CF24C")]
	private static IEnumerator LoadFreshGarden()
	{
		return null;
	}

	[Token(Token = "0x6000874")]
	[Address(RVA = "0xF8EBA4", Offset = "0xF8EBA4", VA = "0xF8EBA4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CF2B0", Offset = "0x9CF2B0")]
	private static IEnumerator ZoneWarp(LoadingZoneKey zone)
	{
		return null;
	}

	[Token(Token = "0x6000875")]
	[Address(RVA = "0xF8EC44", Offset = "0xF8EC44", VA = "0xF8EC44")]
	public UserPlaymodeTests()
	{
	}
}
[Token(Token = "0x200011E")]
public class ActivateChildrenOnFrame : MonoBehaviour
{
	[Token(Token = "0x200054D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB5B8", Offset = "0x9BB5B8")]
	private sealed class <Start>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400170F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ActivateChildrenOnFrame <>4__this;

		[Token(Token = "0x4001712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x17000421")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600238D")]
			[Address(RVA = "0xB97BBC", Offset = "0xB97BBC", VA = "0xB97BBC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000422")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600238F")]
			[Address(RVA = "0xB97C2C", Offset = "0xB97C2C", VA = "0xB97C2C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600238A")]
		[Address(RVA = "0xB977A4", Offset = "0xB977A4", VA = "0xB977A4")]
		[DebuggerHidden]
		public <Start>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x600238B")]
		[Address(RVA = "0xB977E0", Offset = "0xB977E0", VA = "0xB977E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600238C")]
		[Address(RVA = "0xB977E4", Offset = "0xB977E4", VA = "0xB977E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600238E")]
		[Address(RVA = "0xB97BC4", Offset = "0xB97BC4", VA = "0xB97BC4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int FramesToWait;

	[Token(Token = "0x6000877")]
	[Address(RVA = "0xB97730", Offset = "0xB97730", VA = "0xB97730")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CF314", Offset = "0x9CF314")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000878")]
	[Address(RVA = "0xB977D0", Offset = "0xB977D0", VA = "0xB977D0")]
	public ActivateChildrenOnFrame()
	{
	}
}
[Token(Token = "0x200011F")]
public class AnimatorStateEventEmitter : StateMachineBehaviour
{
	[Token(Token = "0x200054E")]
	public interface IAnimatorStateEventReceiver
	{
		[Token(Token = "0x6002390")]
		void HandleStateEnter(string state);

		[Token(Token = "0x6002391")]
		void HandleStateExit(string state);
	}

	[Token(Token = "0x4000743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string StateName;

	[Token(Token = "0x6000879")]
	[Address(RVA = "0xB9A1E0", Offset = "0xB9A1E0", VA = "0xB9A1E0", Slot = "4")]
	public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x600087A")]
	[Address(RVA = "0xB9A38C", Offset = "0xB9A38C", VA = "0xB9A38C", Slot = "6")]
	public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x600087B")]
	[Address(RVA = "0xB9A53C", Offset = "0xB9A53C", VA = "0xB9A53C")]
	public AnimatorStateEventEmitter()
	{
	}
}
[Token(Token = "0x2000120")]
public class AnimatorTriggerOnRigidbodyForce : MonoBehaviour
{
	[Token(Token = "0x4000745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Animator Animator;

	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string Trigger;

	[Token(Token = "0x4000747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float MinForce;

	[Token(Token = "0x4000748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public CooldownStruct TriggerCooldown;

	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public StudioEventEmitter SFX_Event;

	[Token(Token = "0x14000019")]
	public event Action OnTrigger
	{
		[Token(Token = "0x600087C")]
		[Address(RVA = "0xB9A594", Offset = "0xB9A594", VA = "0xB9A594")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CF378", Offset = "0x9CF378")]
		add
		{
		}
		[Token(Token = "0x600087D")]
		[Address(RVA = "0xB9A680", Offset = "0xB9A680", VA = "0xB9A680")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CF388", Offset = "0x9CF388")]
		remove
		{
		}
	}

	[Token(Token = "0x600087E")]
	[Address(RVA = "0xB9A76C", Offset = "0xB9A76C", VA = "0xB9A76C")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x600087F")]
	[Address(RVA = "0xB9A778", Offset = "0xB9A778", VA = "0xB9A778")]
	public void OnCollisionEnter(Collision col)
	{
	}

	[Token(Token = "0x6000880")]
	[Address(RVA = "0xB9A838", Offset = "0xB9A838", VA = "0xB9A838")]
	public AnimatorTriggerOnRigidbodyForce()
	{
	}
}
[Token(Token = "0x2000121")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9B8F58", Offset = "0x9B8F58")]
public class ApplyForceOnTouch : MonoBehaviour
{
	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float ForceFromHand;

	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ForceRadius;

	[Token(Token = "0x400074C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Cooldown;

	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float lastPlayTime;

	[Token(Token = "0x6000881")]
	[Address(RVA = "0xB9A894", Offset = "0xB9A894", VA = "0xB9A894")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000882")]
	[Address(RVA = "0xB9A9C0", Offset = "0xB9A9C0", VA = "0xB9A9C0")]
	public ApplyForceOnTouch()
	{
	}

	[Token(Token = "0x6000883")]
	[Address(RVA = "0xB9A9D4", Offset = "0xB9A9D4", VA = "0xB9A9D4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CF398", Offset = "0x9CF398")]
	private void <Awake>b__4_0(PlayerControllerInput input)
	{
	}
}
[Token(Token = "0x2000122")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9B8FD8", Offset = "0x9B8FD8")]
public class ApplySinForceToRigidbody : MonoBehaviour
{
	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 ForceAxis;

	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float SinPeriod;

	[Token(Token = "0x4000750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float SinForce;

	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Rigidbody _body;

	[Token(Token = "0x6000884")]
	[Address(RVA = "0xB9AAFC", Offset = "0xB9AAFC", VA = "0xB9AAFC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000885")]
	[Address(RVA = "0xB9AB54", Offset = "0xB9AB54", VA = "0xB9AB54")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000886")]
	[Address(RVA = "0xB9AC5C", Offset = "0xB9AC5C", VA = "0xB9AC5C")]
	public ApplySinForceToRigidbody()
	{
	}
}
[Token(Token = "0x2000123")]
public class AutoMover : MonoBehaviour
{
	[Token(Token = "0x4000752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 PosVelocity;

	[Token(Token = "0x4000753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 RotationVelocity;

	[Token(Token = "0x4000754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float ZMin;

	[Token(Token = "0x4000755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float ZMax;

	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool SineWave;

	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float FloatRange;

	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float FloatSpeed;

	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float RandomOffset;

	[Token(Token = "0x6000887")]
	[Address(RVA = "0xB9ACE0", Offset = "0xB9ACE0", VA = "0xB9ACE0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000888")]
	[Address(RVA = "0xB9AD14", Offset = "0xB9AD14", VA = "0xB9AD14")]
	private void Update()
	{
	}

	[Token(Token = "0x6000889")]
	[Address(RVA = "0xB9B168", Offset = "0xB9B168", VA = "0xB9B168")]
	public AutoMover()
	{
	}
}
[Token(Token = "0x2000124")]
public class AutoMoverRotateY : MonoBehaviour
{
	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float RotationSpeed;

	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float LerpSpeed;

	[Token(Token = "0x600088A")]
	[Address(RVA = "0xB9B20C", Offset = "0xB9B20C", VA = "0xB9B20C")]
	private void Update()
	{
	}

	[Token(Token = "0x600088B")]
	[Address(RVA = "0xB9B3C4", Offset = "0xB9B3C4", VA = "0xB9B3C4")]
	public AutoMoverRotateY()
	{
	}
}
[Token(Token = "0x2000125")]
public class AutoMoverRotateZ : MonoBehaviour
{
	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float RotationSpeed;

	[Token(Token = "0x400075D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float LerpSpeed;

	[Token(Token = "0x600088C")]
	[Address(RVA = "0xB9B3D8", Offset = "0xB9B3D8", VA = "0xB9B3D8")]
	private void Update()
	{
	}

	[Token(Token = "0x600088D")]
	[Address(RVA = "0xB9B590", Offset = "0xB9B590", VA = "0xB9B590")]
	public AutoMoverRotateZ()
	{
	}
}
[Token(Token = "0x2000126")]
public class AutoMoverSine : MonoBehaviour
{
	[Token(Token = "0x400075E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 PosDelta;

	[Token(Token = "0x400075F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float FloatSpeed;

	[Token(Token = "0x4000760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool WorldSpace;

	[Token(Token = "0x4000761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 PosBase;

	[Token(Token = "0x4000762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float RandomOffset;

	[Token(Token = "0x600088E")]
	[Address(RVA = "0xB9B5A4", Offset = "0xB9B5A4", VA = "0xB9B5A4")]
	public void Reset()
	{
	}

	[Token(Token = "0x600088F")]
	[Address(RVA = "0xB9B5A8", Offset = "0xB9B5A8", VA = "0xB9B5A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000890")]
	[Address(RVA = "0xB9B62C", Offset = "0xB9B62C", VA = "0xB9B62C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000891")]
	[Address(RVA = "0xB9B848", Offset = "0xB9B848", VA = "0xB9B848")]
	public AutoMoverSine()
	{
	}
}
[Serializable]
[Token(Token = "0x2000127")]
public struct AxisStruct
{
	[Token(Token = "0x200054F")]
	public enum AxisDefinition
	{
		[Token(Token = "0x4001714")]
		Z,
		[Token(Token = "0x4001715")]
		X,
		[Token(Token = "0x4001716")]
		Y,
		[Token(Token = "0x4001717")]
		ZMinus,
		[Token(Token = "0x4001718")]
		XMinus,
		[Token(Token = "0x4001719")]
		YMinus
	}

	[Token(Token = "0x4000763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AxisDefinition Axis;

	[Token(Token = "0x6000892")]
	[Address(RVA = "0xA8177C", Offset = "0xA8177C", VA = "0xA8177C")]
	public Vector3 GetAxis()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000893")]
	[Address(RVA = "0xA81784", Offset = "0xA81784", VA = "0xA81784")]
	public Vector3 GetAxisTransformed(Transform space)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000894")]
	[Address(RVA = "0xB9BB3C", Offset = "0xB9BB3C", VA = "0xB9BB3C")]
	public static implicit operator AxisStruct(AxisDefinition d)
	{
		return default(AxisStruct);
	}
}
[Token(Token = "0x2000128")]
public class BecomeChildOf : MonoBehaviour
{
	[Token(Token = "0x4000764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform Parent;

	[Token(Token = "0x6000895")]
	[Address(RVA = "0xB9CFB0", Offset = "0xB9CFB0", VA = "0xB9CFB0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000896")]
	[Address(RVA = "0xB9D090", Offset = "0xB9D090", VA = "0xB9D090")]
	public BecomeChildOf()
	{
	}
}
[Token(Token = "0x2000129")]
public static class BezierUtil
{
	[Token(Token = "0x6000897")]
	[Address(RVA = "0xB9D510", Offset = "0xB9D510", VA = "0xB9D510")]
	public static Vector3 GetPoint(Vector3 p0, Vector3 p1, Vector3 p2, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000898")]
	[Address(RVA = "0xB9D69C", Offset = "0xB9D69C", VA = "0xB9D69C")]
	public static Vector3 GetPoint(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000899")]
	[Address(RVA = "0xB9D894", Offset = "0xB9D894", VA = "0xB9D894")]
	public static Vector3 GetPoint(Vector3[] pointArray, float t)
	{
		return default(Vector3);
	}
}
[Token(Token = "0x200012A")]
public static class BitExtentions
{
	[Token(Token = "0x2000550")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x9BB5C8", Offset = "0x9BB5C8")]
	public struct BitSet
	{
		[Token(Token = "0x400171A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int _bits;

		[Token(Token = "0x17000423")]
		public bool Item
		{
			[Token(Token = "0x6002392")]
			[Address(RVA = "0xA8178C", Offset = "0xA8178C", VA = "0xA8178C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002393")]
			[Address(RVA = "0xA817A8", Offset = "0xA817A8", VA = "0xA817A8")]
			set
			{
			}
		}

		[Token(Token = "0x6002394")]
		[Address(RVA = "0xA817D0", Offset = "0xA817D0", VA = "0xA817D0")]
		public void Clear()
		{
		}

		[Token(Token = "0x6002395")]
		[Address(RVA = "0xA817D8", Offset = "0xA817D8", VA = "0xA817D8")]
		public void Fill()
		{
		}
	}

	[Token(Token = "0x600089A")]
	[Address(RVA = "0xBA7604", Offset = "0xBA7604", VA = "0xBA7604")]
	public static int SetBit(this int i, int bit)
	{
		return default(int);
	}

	[Token(Token = "0x600089B")]
	[Address(RVA = "0xBA7618", Offset = "0xBA7618", VA = "0xBA7618")]
	public static int SetBit(this int i, int bit, bool b)
	{
		return default(int);
	}

	[Token(Token = "0x600089C")]
	[Address(RVA = "0xBA7638", Offset = "0xBA7638", VA = "0xBA7638")]
	public static int ClearBit(this int i, int bit)
	{
		return default(int);
	}

	[Token(Token = "0x600089D")]
	[Address(RVA = "0xBA764C", Offset = "0xBA764C", VA = "0xBA764C")]
	public static int ToggleBit(this int i, int bit)
	{
		return default(int);
	}

	[Token(Token = "0x600089E")]
	[Address(RVA = "0xBA7660", Offset = "0xBA7660", VA = "0xBA7660")]
	public static bool GetBit(this int i, int bit)
	{
		return default(bool);
	}
}
[Token(Token = "0x200012B")]
public class BounceOnEnable : MonoBehaviour
{
	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float3 _startingLocalScale;

	[Token(Token = "0x600089F")]
	[Address(RVA = "0xBA972C", Offset = "0xBA972C", VA = "0xBA972C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60008A0")]
	[Address(RVA = "0xBA9850", Offset = "0xBA9850", VA = "0xBA9850")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60008A1")]
	[Address(RVA = "0xBA98C4", Offset = "0xBA98C4", VA = "0xBA98C4")]
	public BounceOnEnable()
	{
	}
}
[Token(Token = "0x200012C")]
public static class ColliderExtension
{
	[Token(Token = "0x60008A2")]
	[Address(RVA = "0xE6DE70", Offset = "0xE6DE70", VA = "0xE6DE70")]
	public static bool ContainsPoint(this BoxCollider coll, Vector3 worldPoint)
	{
		return default(bool);
	}
}
[Token(Token = "0x200012D")]
public static class ColorExtension
{
	[Token(Token = "0x4000766")]
	private const float EPSILON = 1E-10f;

	[Token(Token = "0x60008A3")]
	[Address(RVA = "0xE6E09C", Offset = "0xE6E09C", VA = "0xE6E09C")]
	public static Color WithAlpha(this Color self, float a)
	{
		return default(Color);
	}

	[Token(Token = "0x60008A4")]
	[Address(RVA = "0xE6E0D0", Offset = "0xE6E0D0", VA = "0xE6E0D0")]
	public static Color RgbInt(float r, float g, float b)
	{
		return default(Color);
	}

	[Token(Token = "0x60008A5")]
	[Address(RVA = "0xE6E114", Offset = "0xE6E114", VA = "0xE6E114")]
	public static ColorHSV ToHSV(this Color rgb)
	{
		return default(ColorHSV);
	}

	[Token(Token = "0x60008A6")]
	[Address(RVA = "0xE6E148", Offset = "0xE6E148", VA = "0xE6E148")]
	private static Vector3 RGBtoHCV(Color rgb)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60008A7")]
	[Address(RVA = "0xE6E2BC", Offset = "0xE6E2BC", VA = "0xE6E2BC")]
	public static Color LerpHsv(this Color a, Color b, float t)
	{
		return default(Color);
	}

	[Token(Token = "0x60008A8")]
	[Address(RVA = "0xE6E3A4", Offset = "0xE6E3A4", VA = "0xE6E3A4")]
	public static Color LerpHsv(ColorHSV a, ColorHSV b, float t)
	{
		return default(Color);
	}
}
[Token(Token = "0x200012E")]
public struct ColorHSV
{
	[Token(Token = "0x4000767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float h;

	[Token(Token = "0x4000768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float s;

	[Token(Token = "0x4000769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float v;

	[Token(Token = "0x400076A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float a;

	[Token(Token = "0x60008A9")]
	[Address(RVA = "0xA85218", Offset = "0xA85218", VA = "0xA85218")]
	public ColorHSV(float h, float s, float v, float a)
	{
	}

	[Token(Token = "0x60008AA")]
	[Address(RVA = "0xA85224", Offset = "0xA85224", VA = "0xA85224", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x60008AB")]
	[Address(RVA = "0xE6E370", Offset = "0xE6E370", VA = "0xE6E370")]
	public static implicit operator ColorHSV(Color c)
	{
		return default(ColorHSV);
	}

	[Token(Token = "0x60008AC")]
	[Address(RVA = "0xE6E498", Offset = "0xE6E498", VA = "0xE6E498")]
	public static implicit operator Color(ColorHSV hsv)
	{
		return default(Color);
	}

	[Token(Token = "0x60008AD")]
	[Address(RVA = "0xE6E7F4", Offset = "0xE6E7F4", VA = "0xE6E7F4")]
	public static implicit operator ColorHSV(Color32 c32)
	{
		return default(ColorHSV);
	}

	[Token(Token = "0x60008AE")]
	[Address(RVA = "0xE6E834", Offset = "0xE6E834", VA = "0xE6E834")]
	public static implicit operator Color32(ColorHSV hsv)
	{
		return default(Color32);
	}

	[Token(Token = "0x60008AF")]
	[Address(RVA = "0xA8522C", Offset = "0xA8522C", VA = "0xA8522C", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x60008B0")]
	[Address(RVA = "0xA85234", Offset = "0xA85234", VA = "0xA85234")]
	public Color ToRGB()
	{
		return default(Color);
	}

	[Token(Token = "0x60008B1")]
	[Address(RVA = "0xE6E8A4", Offset = "0xE6E8A4", VA = "0xE6E8A4")]
	private static Vector3 HUEtoRGB(float h)
	{
		return default(Vector3);
	}
}
[Token(Token = "0x200012F")]
public class CombineChildMeshesAtRuntime : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000551")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB600", Offset = "0x9BB600")]
	private sealed class <>c
	{
		[Token(Token = "0x400171B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400171C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Renderer, CombineInstance> <>9__1_0;

		[Token(Token = "0x6002397")]
		[Address(RVA = "0xE6ECF4", Offset = "0xE6ECF4", VA = "0xE6ECF4")]
		public <>c()
		{
		}

		[Token(Token = "0x6002398")]
		[Address(RVA = "0xE6ECFC", Offset = "0xE6ECFC", VA = "0xE6ECFC")]
		internal CombineInstance <Awake>b__1_0(Renderer rend)
		{
			return default(CombineInstance);
		}
	}

	[Token(Token = "0x400076B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Mesh _mesh;

	[Token(Token = "0x60008B2")]
	[Address(RVA = "0xE6E9AC", Offset = "0xE6E9AC", VA = "0xE6E9AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008B3")]
	[Address(RVA = "0xE6EBD8", Offset = "0xE6EBD8", VA = "0xE6EBD8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60008B4")]
	[Address(RVA = "0xE6EC88", Offset = "0xE6EC88", VA = "0xE6EC88")]
	public CombineChildMeshesAtRuntime()
	{
	}
}
[Token(Token = "0x2000130")]
[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x9B906C", Offset = "0x9B906C")]
public class ConditionalHideAttribute : PropertyAttribute
{
	[Token(Token = "0x400076C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string ConditionalSourceField;

	[Token(Token = "0x400076D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool HideInInspector;

	[Token(Token = "0x400076E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool HideWhen;

	[Token(Token = "0x400076F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool HideWhenGreater;

	[Token(Token = "0x4000770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float HideComparison;

	[Token(Token = "0x4000771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SpatialSettingsType ShowWhenType;

	[Token(Token = "0x60008B5")]
	[Address(RVA = "0xE6FD70", Offset = "0xE6FD70", VA = "0xE6FD70")]
	public ConditionalHideAttribute(string conditionalSourceField)
	{
	}

	[Token(Token = "0x60008B6")]
	[Address(RVA = "0xE6FDE0", Offset = "0xE6FDE0", VA = "0xE6FDE0")]
	public ConditionalHideAttribute(string conditionalSourceField, bool hideWhen, bool hideInInspector = true)
	{
	}

	[Token(Token = "0x60008B7")]
	[Address(RVA = "0xE6FE6C", Offset = "0xE6FE6C", VA = "0xE6FE6C")]
	public ConditionalHideAttribute(string conditionalSourceField, float hideComparison, bool whenGreater, bool hideInInspector = true)
	{
	}

	[Token(Token = "0x60008B8")]
	[Address(RVA = "0xE6FF08", Offset = "0xE6FF08", VA = "0xE6FF08")]
	public ConditionalHideAttribute(string conditionalSourceField, SpatialSettingsType showIfEqualsType, bool hideInInspector = true)
	{
	}
}
[Token(Token = "0x2000131")]
[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x9B90A8", Offset = "0x9B90A8")]
public class ConsoleCommandAttribute : Attribute
{
	[Token(Token = "0x4000772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string name;

	[Token(Token = "0x4000773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string shortcut;

	[Token(Token = "0x4000774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public object[] args;

	[Token(Token = "0x60008B9")]
	[Address(RVA = "0xE706E0", Offset = "0xE706E0", VA = "0xE706E0")]
	public ConsoleCommandAttribute(string n, [Optional] string s, params object[] a)
	{
	}
}
[Token(Token = "0x2000132")]
[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x9B90BC", Offset = "0x9B90BC")]
public class ConsoleCommandAttributeFinalBuild : ConsoleCommandAttribute
{
	[Token(Token = "0x60008BA")]
	[Address(RVA = "0xE70720", Offset = "0xE70720", VA = "0xE70720")]
	public ConsoleCommandAttributeFinalBuild(string n, [Optional] string s, params object[] a)
	{
	}
}
[Token(Token = "0x2000133")]
public class ConsoleCommandListener : MonoBehaviour
{
	[Token(Token = "0x60008BB")]
	[Address(RVA = "0xE70760", Offset = "0xE70760", VA = "0xE70760")]
	public void Update()
	{
	}

	[Token(Token = "0x60008BC")]
	[Address(RVA = "0xE709A8", Offset = "0xE709A8", VA = "0xE709A8")]
	public ConsoleCommandListener()
	{
	}
}
[Token(Token = "0x2000134")]
public class Console
{
	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GameObject ConsoleObject;

	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Font FontResource;

	[Token(Token = "0x60008BD")]
	[Address(RVA = "0xE701EC", Offset = "0xE701EC", VA = "0xE701EC")]
	public static void OpenConsole()
	{
	}

	[Token(Token = "0x60008BE")]
	[Address(RVA = "0xE7028C", Offset = "0xE7028C", VA = "0xE7028C")]
	public static void EnsureFont()
	{
	}

	[Token(Token = "0x60008BF")]
	[Address(RVA = "0xE70354", Offset = "0xE70354", VA = "0xE70354")]
	public static void EnsureConsole()
	{
	}

	[Token(Token = "0x60008C0")]
	[Address(RVA = "0xE706D8", Offset = "0xE706D8", VA = "0xE706D8")]
	public Console()
	{
	}
}
[Token(Token = "0x2000135")]
public class ConsoleCommands
{
	[Token(Token = "0x2000552")]
	public class ConsoleCommand
	{
		[Token(Token = "0x400171D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x400171E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string shortcut;

		[Token(Token = "0x400171F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public object[] args;

		[Token(Token = "0x4001720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MethodInfo _method;

		[Token(Token = "0x4001721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool _ctrl;

		[Token(Token = "0x4001722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool _alt;

		[Token(Token = "0x4001723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		public bool _shift;

		[Token(Token = "0x4001724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public KeyCode _key;

		[Token(Token = "0x6002399")]
		[Address(RVA = "0xE720B4", Offset = "0xE720B4", VA = "0xE720B4")]
		public ConsoleCommand()
		{
		}
	}

	[Token(Token = "0x2000553")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB610", Offset = "0x9BB610")]
	private sealed class <LateCreateConsole>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000424")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600239D")]
			[Address(RVA = "0xE723DC", Offset = "0xE723DC", VA = "0xE723DC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000425")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600239F")]
			[Address(RVA = "0xE7244C", Offset = "0xE7244C", VA = "0xE7244C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600239A")]
		[Address(RVA = "0xE7211C", Offset = "0xE7211C", VA = "0xE7211C")]
		[DebuggerHidden]
		public <LateCreateConsole>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x600239B")]
		[Address(RVA = "0xE721D0", Offset = "0xE721D0", VA = "0xE721D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600239C")]
		[Address(RVA = "0xE721D4", Offset = "0xE721D4", VA = "0xE721D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600239E")]
		[Address(RVA = "0xE723E4", Offset = "0xE723E4", VA = "0xE723E4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<ConsoleCommand> Commands;

	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool initialized;

	[Token(Token = "0x60008C1")]
	[Address(RVA = "0xE709B0", Offset = "0xE709B0", VA = "0xE709B0")]
	[AttributeAttribute(Name = "ConsoleCommandAttribute", RVA = "0x9CF438", Offset = "0x9CF438")]
	public static void Help()
	{
	}

	[Token(Token = "0x60008C2")]
	[Address(RVA = "0xE70C38", Offset = "0xE70C38", VA = "0xE70C38")]
	public static void Invoke(string name)
	{
	}

	[Token(Token = "0x60008C3")]
	[Address(RVA = "0xE70DC0", Offset = "0xE70DC0", VA = "0xE70DC0")]
	public static void InvokeCommand(ConsoleCommand command)
	{
	}

	[Token(Token = "0x60008C4")]
	[Address(RVA = "0xE70F8C", Offset = "0xE70F8C", VA = "0xE70F8C")]
	public static bool IsKnownUnityKeyCombo(ConsoleCommand command)
	{
		return default(bool);
	}

	[Token(Token = "0x60008C5")]
	[Address(RVA = "0xE70FF0", Offset = "0xE70FF0", VA = "0xE70FF0")]
	public static string CleanKeyCodeString(string raw)
	{
		return null;
	}

	[Token(Token = "0x60008C6")]
	[Address(RVA = "0xE710BC", Offset = "0xE710BC", VA = "0xE710BC")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x9CF4D0", Offset = "0x9CF4D0")]
	public static void AutomaticInitialize()
	{
	}

	[Token(Token = "0x60008C7")]
	[Address(RVA = "0xE71118", Offset = "0xE71118", VA = "0xE71118")]
	public static void Initialize()
	{
	}

	[Token(Token = "0x60008C8")]
	[Address(RVA = "0xE71400", Offset = "0xE71400", VA = "0xE71400")]
	public static void CollectCommands()
	{
	}

	[Token(Token = "0x60008C9")]
	[Address(RVA = "0xE71240", Offset = "0xE71240", VA = "0xE71240")]
	public static void InitializeObject()
	{
	}

	[Token(Token = "0x60008CA")]
	[Address(RVA = "0xE720BC", Offset = "0xE720BC", VA = "0xE720BC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CF4E4", Offset = "0x9CF4E4")]
	public static IEnumerator LateCreateConsole()
	{
		return null;
	}

	[Token(Token = "0x60008CB")]
	[Address(RVA = "0xE707BC", Offset = "0xE707BC", VA = "0xE707BC")]
	public static void Update()
	{
	}

	[Token(Token = "0x60008CC")]
	[Address(RVA = "0xE72148", Offset = "0xE72148", VA = "0xE72148")]
	public ConsoleCommands()
	{
	}
}
[Token(Token = "0x2000136")]
public class CopyMovement : MonoBehaviour
{
	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform obj;

	[Token(Token = "0x400077A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 Offset;

	[Token(Token = "0x60008CE")]
	[Address(RVA = "0xE72DF0", Offset = "0xE72DF0", VA = "0xE72DF0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008CF")]
	[Address(RVA = "0xE72EEC", Offset = "0xE72EEC", VA = "0xE72EEC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60008D0")]
	[Address(RVA = "0xE72DF4", Offset = "0xE72DF4", VA = "0xE72DF4")]
	private void SampleOffset()
	{
	}

	[Token(Token = "0x60008D1")]
	[Address(RVA = "0xE72FF8", Offset = "0xE72FF8", VA = "0xE72FF8")]
	public CopyMovement()
	{
	}
}
[Serializable]
[Token(Token = "0x2000137")]
public struct NullableVector3
{
	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool HasValue;

	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public Vector3 Value;

	[Token(Token = "0x60008D2")]
	[Address(RVA = "0xCC95F4", Offset = "0xCC95F4", VA = "0xCC95F4")]
	public static implicit operator Vector3?(NullableVector3 d)
	{
		return null;
	}

	[Token(Token = "0x60008D3")]
	[Address(RVA = "0xCC9688", Offset = "0xCC9688", VA = "0xCC9688")]
	public static implicit operator NullableVector3(Vector3? d)
	{
		return default(NullableVector3);
	}
}
[Serializable]
[Token(Token = "0x2000138")]
public struct NullableFloat
{
	[Token(Token = "0x400077D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool HasValue;

	[Token(Token = "0x400077E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float Value;

	[Token(Token = "0x60008D4")]
	[Address(RVA = "0xCC94F4", Offset = "0xCC94F4", VA = "0xCC94F4")]
	public static implicit operator float?(NullableFloat d)
	{
		return null;
	}

	[Token(Token = "0x60008D5")]
	[Address(RVA = "0xCC9574", Offset = "0xCC9574", VA = "0xCC9574")]
	public static implicit operator NullableFloat(float? d)
	{
		return default(NullableFloat);
	}
}
[Token(Token = "0x2000139")]
public class DebugDrawExtension
{
	[Token(Token = "0x60008D6")]
	[Address(RVA = "0xE7B10C", Offset = "0xE7B10C", VA = "0xE7B10C")]
	public static void DrawCubeCentered(Vector3 center, Vector3 size, Color color, float duration = 0f)
	{
	}

	[Token(Token = "0x60008D7")]
	[Address(RVA = "0xE7B31C", Offset = "0xE7B31C", VA = "0xE7B31C")]
	public static void DrawCubeCentered(Vector3 center, Quaternion rot, Vector3 size, Color color, float duration = 0f)
	{
	}

	[Token(Token = "0x60008D8")]
	[Address(RVA = "0xE7B224", Offset = "0xE7B224", VA = "0xE7B224")]
	public static void DrawCube(Vector3 pos, Vector3 size, Color color, float duration = 0f)
	{
	}

	[Token(Token = "0x60008D9")]
	[Address(RVA = "0xE7B4B0", Offset = "0xE7B4B0", VA = "0xE7B4B0")]
	public static void DrawCube(Vector3 pos, Quaternion rot, Vector3 size, Color color, float duration = 0f)
	{
	}

	[Token(Token = "0x60008DA")]
	[Address(RVA = "0xE7BE7C", Offset = "0xE7BE7C", VA = "0xE7BE7C")]
	public DebugDrawExtension()
	{
	}
}
[Token(Token = "0x200013A")]
public class DebugGizmoHelper : MonoBehaviour
{
	[Token(Token = "0x400077F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject preview;

	[Token(Token = "0x4000780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Renderer previewRenderer;

	[Token(Token = "0x4000781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material previewMaterial;

	[Token(Token = "0x4000782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Color color;

	[Token(Token = "0x4000783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9C0D38", Offset = "0x9C0D38")]
	public float scale;

	[Token(Token = "0x60008DB")]
	[Address(RVA = "0xE7BE84", Offset = "0xE7BE84", VA = "0xE7BE84")]
	public DebugGizmoHelper()
	{
	}
}
[Token(Token = "0x200013B")]
public static class DelegateHelper
{
	[Token(Token = "0x60008DC")]
	public static void LogMulticastDelegate<T>(T md)
	{
	}
}
[Token(Token = "0x200013C")]
[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9B90D0", Offset = "0x9B90D0")]
public class Description : MonoBehaviour
{
	[Token(Token = "0x60008DD")]
	[Address(RVA = "0xE7C67C", Offset = "0xE7C67C", VA = "0xE7C67C")]
	public Description()
	{
	}
}
[Token(Token = "0x200013D")]
public class DestroyOnSceneLoad : MonoBehaviour
{
	[Token(Token = "0x4000784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool active;

	[Token(Token = "0x60008DE")]
	[Address(RVA = "0xE7C750", Offset = "0xE7C750", VA = "0xE7C750")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60008DF")]
	[Address(RVA = "0xE7C7CC", Offset = "0xE7C7CC", VA = "0xE7C7CC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60008E0")]
	[Address(RVA = "0xE7C848", Offset = "0xE7C848", VA = "0xE7C848")]
	private void DestroyMe(Scene scene, LoadSceneMode mode)
	{
	}

	[Token(Token = "0x60008E1")]
	[Address(RVA = "0xE7C8D8", Offset = "0xE7C8D8", VA = "0xE7C8D8")]
	public DestroyOnSceneLoad()
	{
	}
}
[Token(Token = "0x200013E")]
public class DisableMesh : MonoBehaviour
{
	[Token(Token = "0x60008E2")]
	[Address(RVA = "0xE7C8E8", Offset = "0xE7C8E8", VA = "0xE7C8E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008E3")]
	[Address(RVA = "0xE7C998", Offset = "0xE7C998", VA = "0xE7C998")]
	public DisableMesh()
	{
	}
}
[Token(Token = "0x200013F")]
public class DisableOnEnableIf : MonoBehaviour
{
	[Token(Token = "0x4000785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FujiNarrativeKey Key;

	[Token(Token = "0x4000786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9C0D54", Offset = "0x9C0D54")]
	public GameObject Opposite;

	[Token(Token = "0x60008E4")]
	[Address(RVA = "0xE7C9A0", Offset = "0xE7C9A0", VA = "0xE7C9A0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60008E5")]
	[Address(RVA = "0xE7CAF4", Offset = "0xE7CAF4", VA = "0xE7CAF4")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9CF548", Offset = "0x9CF548")]
	private void FireEvent()
	{
	}

	[Token(Token = "0x60008E6")]
	[Address(RVA = "0xE7CB60", Offset = "0xE7CB60", VA = "0xE7CB60")]
	public DisableOnEnableIf()
	{
	}
}
[Token(Token = "0x2000140")]
public class DisableOnStart : MonoBehaviour
{
	[Token(Token = "0x60008E7")]
	[Address(RVA = "0xE7CB68", Offset = "0xE7CB68", VA = "0xE7CB68")]
	public void Start()
	{
	}

	[Token(Token = "0x60008E8")]
	[Address(RVA = "0xE7CBA0", Offset = "0xE7CBA0", VA = "0xE7CBA0")]
	public DisableOnStart()
	{
	}
}
[Token(Token = "0x2000141")]
public sealed class EditorOnlyVisual : MonoBehaviour
{
	[Token(Token = "0x60008E9")]
	[Address(RVA = "0xFD3328", Offset = "0xFD3328", VA = "0xFD3328")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008EA")]
	[Address(RVA = "0xFD33D8", Offset = "0xFD33D8", VA = "0xFD33D8")]
	public EditorOnlyVisual()
	{
	}
}
[Token(Token = "0x2000142")]
public class EnableMeshCollider : MonoBehaviour
{
	[Token(Token = "0x60008EB")]
	[Address(RVA = "0xFD33E8", Offset = "0xFD33E8", VA = "0xFD33E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008EC")]
	[Address(RVA = "0xFD34A0", Offset = "0xFD34A0", VA = "0xFD34A0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60008ED")]
	[Address(RVA = "0xFD33EC", Offset = "0xFD33EC", VA = "0xFD33EC")]
	private void EnableCollider()
	{
	}

	[Token(Token = "0x60008EE")]
	[Address(RVA = "0xFD34A4", Offset = "0xFD34A4", VA = "0xFD34A4")]
	public EnableMeshCollider()
	{
	}
}
[Token(Token = "0x2000143")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9B9108", Offset = "0x9B9108")]
public class EnableRendererAfterDelay : MonoBehaviour
{
	[Token(Token = "0x2000554")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB620", Offset = "0x9BB620")]
	private sealed class <DoSetEnabledAfterDelay>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x400172A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public EnableRendererAfterDelay <>4__this;

		[Token(Token = "0x400172B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool vizEnabled;

		[Token(Token = "0x400172C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <t>5__2;

		[Token(Token = "0x17000426")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60023A3")]
			[Address(RVA = "0xFD377C", Offset = "0xFD377C", VA = "0xFD377C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000427")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60023A5")]
			[Address(RVA = "0xFD37EC", Offset = "0xFD37EC", VA = "0xFD37EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60023A0")]
		[Address(RVA = "0xFD3694", Offset = "0xFD3694", VA = "0xFD3694")]
		[DebuggerHidden]
		public <DoSetEnabledAfterDelay>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60023A1")]
		[Address(RVA = "0xFD36D0", Offset = "0xFD36D0", VA = "0xFD36D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60023A2")]
		[Address(RVA = "0xFD36D4", Offset = "0xFD36D4", VA = "0xFD36D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60023A4")]
		[Address(RVA = "0xFD3784", Offset = "0xFD3784", VA = "0xFD3784", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool ActivateOnEnable;

	[Token(Token = "0x4000788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float StartingDelay;

	[Token(Token = "0x60008EF")]
	[Address(RVA = "0xFD34AC", Offset = "0xFD34AC", VA = "0xFD34AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008F0")]
	[Address(RVA = "0xFD352C", Offset = "0xFD352C", VA = "0xFD352C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60008F1")]
	[Address(RVA = "0xFD34B4", Offset = "0xFD34B4", VA = "0xFD34B4")]
	public void SetEnabled(bool vizEnabled)
	{
	}

	[Token(Token = "0x60008F2")]
	[Address(RVA = "0xFD3578", Offset = "0xFD3578", VA = "0xFD3578")]
	public void EnableAfterDelay(float delay)
	{
	}

	[Token(Token = "0x60008F3")]
	[Address(RVA = "0xFD3664", Offset = "0xFD3664", VA = "0xFD3664")]
	public void DisableAfterDelay(float delay)
	{
	}

	[Token(Token = "0x60008F4")]
	[Address(RVA = "0xFD35A8", Offset = "0xFD35A8", VA = "0xFD35A8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CF580", Offset = "0x9CF580")]
	private IEnumerator DoSetEnabledAfterDelay(float delay, bool vizEnabled)
	{
		return null;
	}

	[Token(Token = "0x60008F5")]
	[Address(RVA = "0xFD36C0", Offset = "0xFD36C0", VA = "0xFD36C0")]
	public EnableRendererAfterDelay()
	{
	}
}
[Token(Token = "0x2000144")]
public class EnumFlagAttribute : PropertyAttribute
{
	[Token(Token = "0x4000789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string enumName;

	[Token(Token = "0x60008F6")]
	[Address(RVA = "0xFD9744", Offset = "0xFD9744", VA = "0xFD9744")]
	public EnumFlagAttribute()
	{
	}

	[Token(Token = "0x60008F7")]
	[Address(RVA = "0xFD974C", Offset = "0xFD974C", VA = "0xFD974C")]
	public EnumFlagAttribute(string name)
	{
	}
}
[Token(Token = "0x2000145")]
public static class FastMathExtension
{
	[Serializable]
	[Token(Token = "0x2000555")]
	public struct CapsuleStruct
	{
		[Token(Token = "0x400172D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public LineSegment Points;

		[Token(Token = "0x400172E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float Radius;
	}

	[Serializable]
	[Token(Token = "0x2000556")]
	public struct LineSegmentShared
	{
		[Token(Token = "0x400172F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float3 P0;

		[Token(Token = "0x4001730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float3 P1;

		[Token(Token = "0x4001731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float3 P2;

		[Token(Token = "0x60023A6")]
		[Address(RVA = "0xA8203C", Offset = "0xA8203C", VA = "0xA8203C")]
		public LineSegmentShared(float3 p0, float3 p1, float3 p2)
		{
		}

		[Token(Token = "0x60023A7")]
		[Address(RVA = "0xA8205C", Offset = "0xA8205C", VA = "0xA8205C")]
		public LineSegment Segment1()
		{
			return default(LineSegment);
		}

		[Token(Token = "0x60023A8")]
		[Address(RVA = "0xA82070", Offset = "0xA82070", VA = "0xA82070")]
		public LineSegment Segment2()
		{
			return default(LineSegment);
		}

		[Token(Token = "0x60023A9")]
		[Address(RVA = "0xC63798", Offset = "0xC63798", VA = "0xC63798")]
		public static implicit operator LineSegmentShared(float3x3 f)
		{
			return default(LineSegmentShared);
		}

		[Token(Token = "0x60023AA")]
		[Address(RVA = "0xC637BC", Offset = "0xC637BC", VA = "0xC637BC")]
		public static implicit operator float3x3(LineSegmentShared f)
		{
			return default(float3x3);
		}
	}

	[Serializable]
	[Token(Token = "0x2000557")]
	public struct LineSegment
	{
		[Token(Token = "0x4001732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float3 P0;

		[Token(Token = "0x4001733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float3 P1;

		[Token(Token = "0x17000428")]
		public float Length
		{
			[Token(Token = "0x60023AC")]
			[Address(RVA = "0xA82018", Offset = "0xA82018", VA = "0xA82018")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000429")]
		public float3 Normal
		{
			[Token(Token = "0x60023AD")]
			[Address(RVA = "0xA8202C", Offset = "0xA8202C", VA = "0xA8202C")]
			get
			{
				return default(float3);
			}
		}

		[Token(Token = "0x60023AB")]
		[Address(RVA = "0xA82008", Offset = "0xA82008", VA = "0xA82008")]
		public LineSegment(float3 p0, float3 p1)
		{
		}

		[Token(Token = "0x60023AE")]
		[Address(RVA = "0xA82034", Offset = "0xA82034", VA = "0xA82034")]
		public float3 Evaluate(float distance)
		{
			return default(float3);
		}

		[Token(Token = "0x60023AF")]
		[Address(RVA = "0xC6207C", Offset = "0xC6207C", VA = "0xC6207C")]
		public static implicit operator LineSegment(float3x2 f)
		{
			return default(LineSegment);
		}

		[Token(Token = "0x60023B0")]
		[Address(RVA = "0xC61D30", Offset = "0xC61D30", VA = "0xC61D30")]
		public static implicit operator float3x2(LineSegment f)
		{
			return default(float3x2);
		}
	}

	[Serializable]
	[Token(Token = "0x2000558")]
	public struct Orientation
	{
		[Token(Token = "0x4001734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float3 Translation;

		[Token(Token = "0x4001735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public quaternion Rotation;
	}

	[Token(Token = "0x400078A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly float Pi;

	[Token(Token = "0x400078B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static readonly float Tau;

	[Token(Token = "0x400078C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly float HalfPi;

	[Token(Token = "0x400078D")]
	public const int K = 1000;

	[MethodImpl(256)]
	[Token(Token = "0x60008F8")]
	[Address(RVA = "0xC61594", Offset = "0xC61594", VA = "0xC61594")]
	public static float3 MultiplyPoint(float4x4 mat, float3 vect)
	{
		return default(float3);
	}

	[MethodImpl(256)]
	[Token(Token = "0x60008F9")]
	[Address(RVA = "0xC61618", Offset = "0xC61618", VA = "0xC61618")]
	public static float3 MultiplyVector(float4x4 mat, float3 vect)
	{
		return default(float3);
	}

	[Token(Token = "0x60008FA")]
	[Address(RVA = "0xC6169C", Offset = "0xC6169C", VA = "0xC6169C")]
	public static float3 CalculatePointDeltaJobSafe(float3 a, float3 b, float idealDistance, float globalScale)
	{
		return default(float3);
	}

	[Token(Token = "0x60008FB")]
	[Address(RVA = "0xC61780", Offset = "0xC61780", VA = "0xC61780")]
	public static float3 NearestPointOnLineSegment(float3 a, float3 b, float3 point)
	{
		return default(float3);
	}

	[MethodImpl(256)]
	[Token(Token = "0x60008FC")]
	[Address(RVA = "0xC619B4", Offset = "0xC619B4", VA = "0xC619B4")]
	public static float3 Project(float3 vect, float3 normal)
	{
		return default(float3);
	}

	[Token(Token = "0x60008FD")]
	[Address(RVA = "0xC619FC", Offset = "0xC619FC", VA = "0xC619FC")]
	public static bool ClosestPointOnCapsuleSurface(float3 capA, float3 capB, float capRadius, float3 point, out float3 closestPoint, out float radialDistanceSqr)
	{
		return default(bool);
	}

	[Token(Token = "0x60008FE")]
	[Address(RVA = "0xC61BA8", Offset = "0xC61BA8", VA = "0xC61BA8")]
	public static bool EvacuateCapsuleFromLineSegment(float3 a, float3 b, float3x2 line, float radius, out float3 outA, out float3 outB, out float radialDistanceSqr, out float3 closestPointOnLine)
	{
		return default(bool);
	}

	[Token(Token = "0x60008FF")]
	[Address(RVA = "0xC62090", Offset = "0xC62090", VA = "0xC62090")]
	public static bool EvacuateCapsuleFromPoint(float3 a, float3 b, float3 point, float radius, out float3 outA, out float3 outB, out float radialDistanceSqr)
	{
		return default(bool);
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000900")]
	[Address(RVA = "0xC62368", Offset = "0xC62368", VA = "0xC62368")]
	public static float SqrGroundDistance(float3 a, float3 b)
	{
		return default(float);
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000901")]
	[Address(RVA = "0xC623D8", Offset = "0xC623D8", VA = "0xC623D8")]
	public static float GroundDistance(float3 a, float3 b)
	{
		return default(float);
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000902")]
	[Address(RVA = "0xC62448", Offset = "0xC62448", VA = "0xC62448")]
	public static quaternion Lerp(quaternion a, quaternion b, float t)
	{
		return default(quaternion);
	}

	[Token(Token = "0x6000903")]
	[Address(RVA = "0xC62458", Offset = "0xC62458", VA = "0xC62458")]
	public static float2 QuadraticEquation(float a, float b, float c)
	{
		return default(float2);
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000904")]
	[Address(RVA = "0xC624B0", Offset = "0xC624B0", VA = "0xC624B0")]
	public static float3 Rk2Euler(float3 initialPosition, float3 initialVelocity, float3 force, float time)
	{
		return default(float3);
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000905")]
	[Address(RVA = "0xC62578", Offset = "0xC62578", VA = "0xC62578")]
	public static float3 Rk2EulerDerivative(float3 initialVelocity, float3 force, float time)
	{
		return default(float3);
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000906")]
	[Address(RVA = "0xC625D8", Offset = "0xC625D8", VA = "0xC625D8")]
	public static bool AreParallel(this float3 a, float3 b)
	{
		return default(bool);
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000907")]
	[Address(RVA = "0xC62600", Offset = "0xC62600", VA = "0xC62600")]
	public static bool NonZero(this float3 vect)
	{
		return default(bool);
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000908")]
	[Address(RVA = "0xC6262C", Offset = "0xC6262C", VA = "0xC6262C")]
	public static float4 xyz0(this float3 vect)
	{
		return default(float4);
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000909")]
	[Address(RVA = "0xC62660", Offset = "0xC62660", VA = "0xC62660")]
	public static float4 xyz1(this float3 vect)
	{
		return default(float4);
	}

	[MethodImpl(256)]
	[Token(Token = "0x600090A")]
	[Address(RVA = "0xC62694", Offset = "0xC62694", VA = "0xC62694")]
	public static float3 x0z(this float3 vect)
	{
		return default(float3);
	}

	[MethodImpl(256)]
	[Token(Token = "0x600090B")]
	[Address(RVA = "0xC626CC", Offset = "0xC626CC", VA = "0xC626CC")]
	public static float3 x0y(this float2 vect)
	{
		return default(float3);
	}

	[Token(Token = "0x600090C")]
	[Address(RVA = "0xC61D44", Offset = "0xC61D44", VA = "0xC61D44")]
	public static float3x2 ShortestSegmentBetweenSegments(float3x2 p, float3x2 q)
	{
		return default(float3x2);
	}

	[MethodImpl(256)]
	[Token(Token = "0x600090D")]
	[Address(RVA = "0xC62708", Offset = "0xC62708", VA = "0xC62708")]
	public static float Lerp2(float a, float b, float rate, float deltaTime)
	{
		return default(float);
	}

	[MethodImpl(256)]
	[Token(Token = "0x600090E")]
	[Address(RVA = "0xC62748", Offset = "0xC62748", VA = "0xC62748")]
	public static float3 Lerp2(float3 a, float3 b, float rate, float deltaTime)
	{
		return default(float3);
	}

	[MethodImpl(256)]
	[Token(Token = "0x600090F")]
	[Address(RVA = "0xC6286C", Offset = "0xC6286C", VA = "0xC6286C")]
	public static quaternion mul(quaternion a, quaternion b, quaternion c)
	{
		return default(quaternion);
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000910")]
	[Address(RVA = "0xC628B0", Offset = "0xC628B0", VA = "0xC628B0")]
	public static float3 ClampLength(float3 v, float maxLength)
	{
		return default(float3);
	}

	[Token(Token = "0x6000911")]
	[Address(RVA = "0xC6293C", Offset = "0xC6293C", VA = "0xC6293C")]
	public static float AbsAngle(float radians)
	{
		return default(float);
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000912")]
	[Address(RVA = "0xC629F0", Offset = "0xC629F0", VA = "0xC629F0")]
	public static float Pow2Signed(float n)
	{
		return default(float);
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000913")]
	[Address(RVA = "0xC62A0C", Offset = "0xC62A0C", VA = "0xC62A0C")]
	public static float DistanceSquared(float3 rayOrigin, float3 rayDirection, float3 point)
	{
		return default(float);
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000914")]
	[Address(RVA = "0xC62A80", Offset = "0xC62A80", VA = "0xC62A80")]
	public static float DistanceSquared(float3 origin, float3 point)
	{
		return default(float);
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000915")]
	[Address(RVA = "0xC62AC0", Offset = "0xC62AC0", VA = "0xC62AC0")]
	public static bool WithinRadius(float3 origin, float3 point, float radius)
	{
		return default(bool);
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000916")]
	[Address(RVA = "0xC62B1C", Offset = "0xC62B1C", VA = "0xC62B1C")]
	public static float3 ProjectOntoSphere(float3 sphereCenter, float sphereRadius, float3 point)
	{
		return default(float3);
	}

	[Token(Token = "0x6000917")]
	[Address(RVA = "0xC62BA8", Offset = "0xC62BA8", VA = "0xC62BA8")]
	public static float3 ProjectIntoSphere(float3 sphereCenter, float sphereRadius, float3 point)
	{
		return default(float3);
	}

	[Token(Token = "0x6000918")]
	[Address(RVA = "0xC62CAC", Offset = "0xC62CAC", VA = "0xC62CAC")]
	public static float3 ProjectOutsideSphere(float3 sphereCenter, float sphereRadius, float3 point)
	{
		return default(float3);
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000919")]
	[Address(RVA = "0xC62DB0", Offset = "0xC62DB0", VA = "0xC62DB0")]
	public static float TransformLinear(float fromLower, float fromUpper, float toLower, float toUpper, float v)
	{
		return default(float);
	}

	[MethodImpl(256)]
	[Token(Token = "0x600091A")]
	[Address(RVA = "0xC62DD8", Offset = "0xC62DD8", VA = "0xC62DD8")]
	public static float TransformLinearClamped(float fromLower, float fromUpper, float toLower, float toUpper, float v)
	{
		return default(float);
	}

	[MethodImpl(256)]
	[Token(Token = "0x600091B")]
	[Address(RVA = "0xC62F4C", Offset = "0xC62F4C", VA = "0xC62F4C")]
	public static float UnitParabola(float x01)
	{
		return default(float);
	}

	[MethodImpl(256)]
	[Token(Token = "0x600091C")]
	[Address(RVA = "0xC62F7C", Offset = "0xC62F7C", VA = "0xC62F7C")]
	public static float2 RandomInsideUnitCircle(ref Unity.Mathematics.Random random)
	{
		return default(float2);
	}

	[MethodImpl(256)]
	[Token(Token = "0x600091D")]
	[Address(RVA = "0xC62E8C", Offset = "0xC62E8C", VA = "0xC62E8C")]
	public static float TransformLinearSafe(float fromLower, float fromUpper, float toLower, float toUpper, float v)
	{
		return default(float);
	}

	[MethodImpl(256)]
	[Token(Token = "0x600091E")]
	[Address(RVA = "0xC63000", Offset = "0xC63000", VA = "0xC63000")]
	public static float3 MoveTowards(float3 current, float3 target, float maxDistanceDelta)
	{
		return default(float3);
	}

	[Token(Token = "0x600091F")]
	[Address(RVA = "0xC630EC", Offset = "0xC630EC", VA = "0xC630EC")]
	public static float RoundToNearest(float num, float step)
	{
		return default(float);
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000920")]
	[Address(RVA = "0xC63138", Offset = "0xC63138", VA = "0xC63138")]
	public static float2 RadToVec2(float radians)
	{
		return default(float2);
	}

	[Token(Token = "0x6000921")]
	[Address(RVA = "0xC63178", Offset = "0xC63178", VA = "0xC63178")]
	public static bool GroundDistanceCheck(float3 a, float3 b, float maxValue)
	{
		return default(bool);
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000922")]
	[Address(RVA = "0xC63238", Offset = "0xC63238", VA = "0xC63238")]
	public static float3 Average(float3 p0, float3 p1)
	{
		return default(float3);
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000923")]
	[Address(RVA = "0xC63258", Offset = "0xC63258", VA = "0xC63258")]
	public static float3 Average(float3 p0, float3 p1, float3 p2)
	{
		return default(float3);
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000924")]
	[Address(RVA = "0xC632A4", Offset = "0xC632A4", VA = "0xC632A4")]
	public static float3 Average(float3 p0, float3 p1, float3 p2, float3 p3)
	{
		return default(float3);
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000925")]
	[Address(RVA = "0xC63314", Offset = "0xC63314", VA = "0xC63314")]
	public static float ClampUnit(float f)
	{
		return default(float);
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000926")]
	[Address(RVA = "0xC63324", Offset = "0xC63324", VA = "0xC63324")]
	public static float2 ClampUnitPiecewise(float2 vector2)
	{
		return default(float2);
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000927")]
	[Address(RVA = "0xC633D8", Offset = "0xC633D8", VA = "0xC633D8")]
	public static float2 Deadzone(float2 unitCircleInput, float innerDeadzone, float outerDeadzone)
	{
		return default(float2);
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000928")]
	[Address(RVA = "0xC63474", Offset = "0xC63474", VA = "0xC63474")]
	public static float2 Deadzone(float2 unitCircleInput, float innerDeadzone)
	{
		return default(float2);
	}

	[MethodImpl(256)]
	[Token(Token = "0x6000929")]
	[Address(RVA = "0xC634FC", Offset = "0xC634FC", VA = "0xC634FC")]
	public static int Wrap(int x, int l)
	{
		return default(int);
	}

	[Token(Token = "0x600092A")]
	[Address(RVA = "0xC63528", Offset = "0xC63528", VA = "0xC63528")]
	public static Vector3 NegX(this Vector3 v)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600092B")]
	[Address(RVA = "0xC63560", Offset = "0xC63560", VA = "0xC63560")]
	public static float SubToZero(in float num, in float sub)
	{
		return default(float);
	}

	[Token(Token = "0x600092C")]
	[Address(RVA = "0xC63578", Offset = "0xC63578", VA = "0xC63578")]
	public static bool DiffAssign(ref float dst, in float src)
	{
		return default(bool);
	}

	[Token(Token = "0x600092D")]
	[Address(RVA = "0xC6359C", Offset = "0xC6359C", VA = "0xC6359C")]
	public static float MultInv(in float n)
	{
		return default(float);
	}

	[Token(Token = "0x600092E")]
	[Address(RVA = "0xC63618", Offset = "0xC63618", VA = "0xC63618")]
	public static float MultInv(in float n, in float zeroCase)
	{
		return default(float);
	}
}
[Token(Token = "0x2000146")]
public static class FMODHelper
{
	[Token(Token = "0x2000559")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB630", Offset = "0x9BB630")]
	private sealed class <DoMatchRuntimeFormat>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int sampleRate;

		[Token(Token = "0x4001739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private FMOD.System <sys>5__2;

		[Token(Token = "0x1700042A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60023B4")]
			[Address(RVA = "0xC60A28", Offset = "0xC60A28", VA = "0xC60A28", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700042B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60023B6")]
			[Address(RVA = "0xC60A98", Offset = "0xC60A98", VA = "0xC60A98", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60023B1")]
		[Address(RVA = "0xC60838", Offset = "0xC60838", VA = "0xC60838")]
		[DebuggerHidden]
		public <DoMatchRuntimeFormat>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60023B2")]
		[Address(RVA = "0xC60864", Offset = "0xC60864", VA = "0xC60864", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60023B3")]
		[Address(RVA = "0xC60868", Offset = "0xC60868", VA = "0xC60868", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60023B5")]
		[Address(RVA = "0xC60A30", Offset = "0xC60A30", VA = "0xC60A30", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000930")]
	[Address(RVA = "0xC60214", Offset = "0xC60214", VA = "0xC60214")]
	public static void PlaySafe(this StudioEventEmitter emitter)
	{
	}

	[Token(Token = "0x6000931")]
	[Address(RVA = "0xC603F4", Offset = "0xC603F4", VA = "0xC603F4")]
	public static void StopSafe(this StudioEventEmitter emitter)
	{
	}

	[Token(Token = "0x6000932")]
	[Address(RVA = "0xC6058C", Offset = "0xC6058C", VA = "0xC6058C")]
	public static void ConditionalActive(this StudioEventEmitter emitter, bool active)
	{
	}

	[Token(Token = "0x6000933")]
	[Address(RVA = "0xC60670", Offset = "0xC60670", VA = "0xC60670")]
	public static void TargetOvr()
	{
	}

	[Token(Token = "0x6000934")]
	[Address(RVA = "0xC607C4", Offset = "0xC607C4", VA = "0xC607C4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CF684", Offset = "0x9CF684")]
	public static IEnumerator DoMatchRuntimeFormat(int sampleRate)
	{
		return null;
	}
}
[Token(Token = "0x2000147")]
public class FmodVelocityParameter : MonoBehaviour
{
	[Token(Token = "0x400078E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public StudioEventEmitter EventEmitter;

	[Token(Token = "0x400078F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float SmoothFactor;

	[Token(Token = "0x4000790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float SpeedScale;

	[Token(Token = "0x4000791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _speed;

	[Token(Token = "0x4000792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 _previousPosition;

	[Token(Token = "0x6000935")]
	[Address(RVA = "0xC6A924", Offset = "0xC6A924", VA = "0xC6A924")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000936")]
	[Address(RVA = "0xC6A96C", Offset = "0xC6A96C", VA = "0xC6A96C")]
	public void Update()
	{
	}

	[Token(Token = "0x6000937")]
	[Address(RVA = "0xC6AB0C", Offset = "0xC6AB0C", VA = "0xC6AB0C")]
	public FmodVelocityParameter()
	{
	}
}
[Token(Token = "0x2000148")]
public class FollowCircle : MonoBehaviour
{
	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 WorldCenter;

	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float Radius;

	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float DegreesPerSecond;

	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float AngleDegrees;

	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9C0D8C", Offset = "0x9C0D8C")]
	public bool PingPong;

	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector2 PingPongDegrees;

	[Token(Token = "0x6000938")]
	[Address(RVA = "0xC6AE34", Offset = "0xC6AE34", VA = "0xC6AE34")]
	private void Update()
	{
	}

	[Token(Token = "0x6000939")]
	[Address(RVA = "0xC6B04C", Offset = "0xC6B04C", VA = "0xC6B04C")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x600093A")]
	[Address(RVA = "0xC6B0B0", Offset = "0xC6B0B0", VA = "0xC6B0B0")]
	public FollowCircle()
	{
	}
}
[Token(Token = "0x2000149")]
public class GameObjectCenterRadiusHelper : MonoBehaviour
{
	[Token(Token = "0x200055A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB640", Offset = "0x9BB640")]
	private sealed class <DoInternalUpdate>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400173A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400173B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400173C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObjectCenterRadiusHelper <>4__this;

		[Token(Token = "0x1700042C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60023BA")]
			[Address(RVA = "0xDBECFC", Offset = "0xDBECFC", VA = "0xDBECFC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700042D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60023BC")]
			[Address(RVA = "0xDBED6C", Offset = "0xDBED6C", VA = "0xDBED6C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60023B7")]
		[Address(RVA = "0xDBE4D0", Offset = "0xDBE4D0", VA = "0xDBE4D0")]
		[DebuggerHidden]
		public <DoInternalUpdate>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x60023B8")]
		[Address(RVA = "0xDBEC24", Offset = "0xDBEC24", VA = "0xDBEC24", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60023B9")]
		[Address(RVA = "0xDBEC28", Offset = "0xDBEC28", VA = "0xDBEC28", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60023BB")]
		[Address(RVA = "0xDBED04", Offset = "0xDBED04", VA = "0xDBED04", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool scanned;

	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SphereCollider sphereCollider;

	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Collider selfCollider;

	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer selfRenderer;

	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Collider childCollider;

	[Token(Token = "0x400079E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Renderer childRenderer;

	[Token(Token = "0x400079F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 cachedCenter;

	[Token(Token = "0x40007A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float cachedRadius;

	[Token(Token = "0x600093B")]
	[Address(RVA = "0xDBE454", Offset = "0xDBE454", VA = "0xDBE454")]
	public void OnScriptReload()
	{
	}

	[Token(Token = "0x600093C")]
	[Address(RVA = "0xDBE45C", Offset = "0xDBE45C", VA = "0xDBE45C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CF6E8", Offset = "0x9CF6E8")]
	private IEnumerator DoInternalUpdate()
	{
		return null;
	}

	[Token(Token = "0x600093D")]
	[Address(RVA = "0xDBE4FC", Offset = "0xDBE4FC", VA = "0xDBE4FC")]
	private void Scan()
	{
	}

	[Token(Token = "0x600093E")]
	[Address(RVA = "0xDBEBB0", Offset = "0xDBEBB0", VA = "0xDBEBB0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600093F")]
	[Address(RVA = "0xDBEBB8", Offset = "0xDBEBB8", VA = "0xDBEBB8")]
	public Vector3 EstimateCenter()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000940")]
	[Address(RVA = "0xDBEBEC", Offset = "0xDBEBEC", VA = "0xDBEBEC")]
	public float EstimateRadius()
	{
		return default(float);
	}

	[Token(Token = "0x6000941")]
	[Address(RVA = "0xDBE90C", Offset = "0xDBE90C", VA = "0xDBE90C")]
	private float DoEstimateRadius()
	{
		return default(float);
	}

	[Token(Token = "0x6000942")]
	[Address(RVA = "0xDBE6C0", Offset = "0xDBE6C0", VA = "0xDBE6C0")]
	private Vector3 DoEstimateCenter()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000943")]
	[Address(RVA = "0xDBEC1C", Offset = "0xDBEC1C", VA = "0xDBEC1C")]
	public GameObjectCenterRadiusHelper()
	{
	}
}
[Token(Token = "0x200014A")]
public static class GameObjectExtension
{
	[Token(Token = "0x6000944")]
	public static T InstantiateDefaultObject<T>(string path) where T : Component
	{
		return null;
	}

	[Token(Token = "0x6000945")]
	[Address(RVA = "0xDBED74", Offset = "0xDBED74", VA = "0xDBED74")]
	public static GameObject InstantiatePrefab(string path)
	{
		return null;
	}

	[Token(Token = "0x6000946")]
	public static T InstantiatePrefabTyped<T>(string path) where T : Component
	{
		return null;
	}

	[Token(Token = "0x6000947")]
	public static T EnsureComponent<T>(this GameObject obj) where T : Component
	{
		return null;
	}

	[Token(Token = "0x6000948")]
	public static bool HasComponent<T>(this GameObject self) where T : Component
	{
		return default(bool);
	}

	[Token(Token = "0x6000949")]
	[Address(RVA = "0xDBEF9C", Offset = "0xDBEF9C", VA = "0xDBEF9C")]
	public static float EstimateRadius(this GameObject self)
	{
		return default(float);
	}

	[Token(Token = "0x600094A")]
	[Address(RVA = "0xDBF06C", Offset = "0xDBF06C", VA = "0xDBF06C")]
	public static Vector3 EstimateCenter(this GameObject self)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600094B")]
	[Address(RVA = "0xDBF1A8", Offset = "0xDBF1A8", VA = "0xDBF1A8")]
	public static void NullifyAndStartCoroutine(this MonoBehaviour obj, ref Coroutine thread, IEnumerator routine)
	{
	}

	[Token(Token = "0x600094C")]
	[Address(RVA = "0xDBF1F8", Offset = "0xDBF1F8", VA = "0xDBF1F8")]
	public static void StopAndNullify(this MonoBehaviour obj, ref Coroutine thread)
	{
	}

	[Token(Token = "0x600094D")]
	[Address(RVA = "0xDBF248", Offset = "0xDBF248", VA = "0xDBF248")]
	public static void StopAndNullify(this MonoBehaviour obj, ref IEnumerator thread)
	{
	}

	[Token(Token = "0x600094E")]
	[Address(RVA = "0xDBF298", Offset = "0xDBF298", VA = "0xDBF298")]
	public static void StopIfNotNull(this MonoBehaviour obj, Coroutine thread)
	{
	}

	[Token(Token = "0x600094F")]
	[Address(RVA = "0xDBF2E0", Offset = "0xDBF2E0", VA = "0xDBF2E0")]
	public static void StopIfNotNull(this MonoBehaviour obj, IEnumerator thread)
	{
	}

	[Token(Token = "0x6000950")]
	[Address(RVA = "0xDBF328", Offset = "0xDBF328", VA = "0xDBF328")]
	public static GameObject CreatePrimitiveNoCollision(PrimitiveType type)
	{
		return null;
	}

	[Token(Token = "0x6000951")]
	[Address(RVA = "0xDBF3B4", Offset = "0xDBF3B4", VA = "0xDBF3B4")]
	public static bool IsInLayerMask(this GameObject self, int layerMask)
	{
		return default(bool);
	}

	[Token(Token = "0x6000952")]
	[Address(RVA = "0xDBF3FC", Offset = "0xDBF3FC", VA = "0xDBF3FC")]
	public static bool IsInLayer(this GameObject self, params string[] layerNames)
	{
		return default(bool);
	}

	[Token(Token = "0x6000953")]
	[Address(RVA = "0xDBF454", Offset = "0xDBF454", VA = "0xDBF454")]
	public static void DisableCollidersInChildren(this GameObject self)
	{
	}

	[Token(Token = "0x6000954")]
	[Address(RVA = "0xDBF524", Offset = "0xDBF524", VA = "0xDBF524")]
	public static void EnableCollidersInChildren(this GameObject self)
	{
	}

	[Token(Token = "0x6000955")]
	[Address(RVA = "0xDBF5F4", Offset = "0xDBF5F4", VA = "0xDBF5F4")]
	public static void DestroyTrace(this GameObject obj)
	{
	}

	[Token(Token = "0x6000956")]
	[Address(RVA = "0xDBF700", Offset = "0xDBF700", VA = "0xDBF700")]
	public static string GenerateFullPathName(this GameObject self)
	{
		return null;
	}

	[Token(Token = "0x6000957")]
	[Address(RVA = "0xDBF830", Offset = "0xDBF830", VA = "0xDBF830")]
	public static void GizmoDrawRing(Vector3 right, Vector3 fwd, Vector3 center, float radius)
	{
	}

	[Token(Token = "0x6000958")]
	public static List<T> GetComponentsInChildrenAndReturn<T>(this Component go, bool includeInactive, List<T> results)
	{
		return null;
	}

	[Token(Token = "0x6000959")]
	public static List<T> GetComponentsInChildrenAndReturn<T>(this Component go, bool includeInactive = false)
	{
		return null;
	}

	[Token(Token = "0x600095A")]
	public static List<T> GetComponentsInChildrenAndReturn<T>(this GameObject go, bool includeInactive, List<T> results)
	{
		return null;
	}

	[Token(Token = "0x600095B")]
	public static List<T> GetComponentsInChildrenAndReturn<T>(this GameObject go, bool includeInactive = false)
	{
		return null;
	}

	[Token(Token = "0x600095C")]
	public static List<T> GetComponentsAndReturn<T>(this GameObject go, bool includeInactive, List<T> results)
	{
		return null;
	}

	[Token(Token = "0x600095D")]
	public static List<T> GetComponentsAndReturn<T>(this GameObject go, bool includeInactive)
	{
		return null;
	}

	[Token(Token = "0x600095E")]
	public static bool CheckComponent<T>(this GameObject go) where T : class
	{
		return default(bool);
	}

	[Token(Token = "0x600095F")]
	public static bool CheckComponent<T>(this MonoBehaviour go) where T : class
	{
		return default(bool);
	}

	[Token(Token = "0x6000960")]
	public static bool CheckComponentOr<T1, T2>(this MonoBehaviour go) where T1 : class where T2 : class
	{
		return default(bool);
	}

	[Token(Token = "0x6000961")]
	public static T GetComponentSafe<T>(this GameObject go) where T : class
	{
		return null;
	}

	[Token(Token = "0x6000962")]
	public static T GetComponentInParentSafe<T>(this GameObject go) where T : class
	{
		return null;
	}

	[Token(Token = "0x6000963")]
	public static T GetComponentSafe<T>(this MonoBehaviour go) where T : class
	{
		return null;
	}

	[Token(Token = "0x6000964")]
	public static T GetComponentInParentSafe<T>(this MonoBehaviour go) where T : class
	{
		return null;
	}

	[Token(Token = "0x6000965")]
	public static T GetComponentSafe<T>(this GameObject go, ref T t) where T : class
	{
		return null;
	}

	[Token(Token = "0x6000966")]
	public static T GetComponentSafe<T>(this MonoBehaviour go, ref T t) where T : class
	{
		return null;
	}

	[Token(Token = "0x6000967")]
	public static void Duplicate<T>(this T[] list, T firstInstance) where T : Component
	{
	}

	[Token(Token = "0x6000968")]
	public static void Duplicate<T>(this T[] list, T firstInstance, Transform parent) where T : Component
	{
	}

	[Token(Token = "0x6000969")]
	public static T FetchComponent<T>(this MonoBehaviour mono, ref T cache) where T : Component
	{
		return null;
	}

	[Token(Token = "0x600096A")]
	public static T GetOrAddComponent<T>(this GameObject go) where T : Component
	{
		return null;
	}

	[Token(Token = "0x600096B")]
	[Address(RVA = "0xDBFAA8", Offset = "0xDBFAA8", VA = "0xDBFAA8")]
	public static string GetRelativePathToParent(Transform child, Transform parent)
	{
		return null;
	}

	[Token(Token = "0x600096C")]
	[Address(RVA = "0xDBFC24", Offset = "0xDBFC24", VA = "0xDBFC24")]
	public static Transform FindInChildren(this Transform self, string name)
	{
		return null;
	}

	[Token(Token = "0x600096D")]
	[Address(RVA = "0xDBFD40", Offset = "0xDBFD40", VA = "0xDBFD40")]
	public static GameObject FindInChildren(this GameObject self, string name)
	{
		return null;
	}

	[Token(Token = "0x600096E")]
	public static T GetComponent<T>(this GameObject go, Action<T> onGet)
	{
		return (T)null;
	}

	[Token(Token = "0x600096F")]
	public static T GetComponent<T>(this Component go, Action<T> onGet)
	{
		return (T)null;
	}

	[Token(Token = "0x6000970")]
	public static bool GetComponent<T>(this Component go, out T t)
	{
		return default(bool);
	}

	[Token(Token = "0x6000971")]
	public static T GetComponentInParent<T>(this Component go, Action<T> onGet)
	{
		return (T)null;
	}

	[Token(Token = "0x6000972")]
	public static bool GetComponentInParent<T>(this Component go, out T t)
	{
		return default(bool);
	}

	[Token(Token = "0x6000973")]
	public static T GetComponentInChildren<T>(this Component go, Action<T> onGet)
	{
		return (T)null;
	}
}
[Serializable]
[Token(Token = "0x200014B")]
public class GameSettings : SingletonMonoBehaviourOnDemand<GameSettings>
{
	[Token(Token = "0x40007A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string DefaultGameSettingsFile;

	[Token(Token = "0x40007A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string GameVersion;

	[Token(Token = "0x40007A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float GameCameraScale;

	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string GameController;

	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool EnableGuiDebug;

	[Token(Token = "0x40007A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string LanguageCodeDefault;

	[Token(Token = "0x40007A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string VRHeadsetOverride;

	[Token(Token = "0x40007A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool PhotonOfflineMode;

	[Token(Token = "0x40007A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int PhotonNetworkSendRate;

	[Token(Token = "0x6000974")]
	[Address(RVA = "0xDBFE10", Offset = "0xDBFE10", VA = "0xDBFE10")]
	[AttributeAttribute(Name = "ConsoleCommandAttribute", RVA = "0x9CF9EC", Offset = "0x9CF9EC")]
	public static void SettingsReload()
	{
	}

	[Token(Token = "0x6000975")]
	[Address(RVA = "0xDBFE14", Offset = "0xDBFE14", VA = "0xDBFE14")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000976")]
	[Address(RVA = "0xDBFE18", Offset = "0xDBFE18", VA = "0xDBFE18")]
	private static void CheckConfigOverride()
	{
	}

	[Token(Token = "0x6000977")]
	[Address(RVA = "0xDC0010", Offset = "0xDC0010", VA = "0xDC0010")]
	public GameSettings()
	{
	}
}
[Token(Token = "0x200014C")]
public class GameSettingsEmbedded : MonoBehaviour
{
	[Token(Token = "0x40007AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool dirtyToggle;

	[Token(Token = "0x40007AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool dontUpdate;

	[Token(Token = "0x6000979")]
	[Address(RVA = "0xDC00BC", Offset = "0xDC00BC", VA = "0xDC00BC")]
	public void OnValidate()
	{
	}

	[Token(Token = "0x600097A")]
	[Address(RVA = "0xDC01F0", Offset = "0xDC01F0", VA = "0xDC01F0")]
	public GameSettingsEmbedded()
	{
	}
}
[Serializable]
[Token(Token = "0x200014D")]
public class GameSettingsSerializeHelper : SingletonMonoBehaviourOnDemand<GameSettingsSerializeHelper>
{
	[Token(Token = "0x600097B")]
	[Address(RVA = "0xDC01F8", Offset = "0xDC01F8", VA = "0xDC01F8")]
	public static void WriteSettings()
	{
	}

	[Token(Token = "0x600097C")]
	[Address(RVA = "0xDC047C", Offset = "0xDC047C", VA = "0xDC047C")]
	public void ReadSettings()
	{
	}

	[Token(Token = "0x600097D")]
	[Address(RVA = "0xDC0314", Offset = "0xDC0314", VA = "0xDC0314")]
	public void WriteSingle(string filenameNoExt, string folderPath, object output, bool overwrite)
	{
	}

	[Token(Token = "0x600097E")]
	public void ReadSingle<T>(string filenameNoExt, object output)
	{
	}

	[Token(Token = "0x600097F")]
	[Address(RVA = "0xDC053C", Offset = "0xDC053C", VA = "0xDC053C")]
	public GameSettingsSerializeHelper()
	{
	}
}
[Token(Token = "0x200014E")]
public static class GenericCache<T>
{
	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly T[] Cache20;
}
[Token(Token = "0x200014F")]
public static class GenericList<T>
{
	[Token(Token = "0x40007AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly List<T> Cache;
}
[Token(Token = "0x2000150")]
public static class GizmoExtension
{
	[Token(Token = "0x6000982")]
	[Address(RVA = "0xDC2D18", Offset = "0xDC2D18", VA = "0xDC2D18")]
	public static void WireCircle(Vector3 pos, float radius)
	{
	}

	[Token(Token = "0x6000983")]
	[Address(RVA = "0xDC2D28", Offset = "0xDC2D28", VA = "0xDC2D28")]
	public static void WireCircle(Vector3 pos, float radius, float radianLower, float radianUpper)
	{
	}

	[Token(Token = "0x6000984")]
	[Address(RVA = "0xDC3130", Offset = "0xDC3130", VA = "0xDC3130")]
	public static void WireCircle(Vector3 pos, float radius, int segments)
	{
	}

	[Token(Token = "0x6000985")]
	[Address(RVA = "0xDC2E74", Offset = "0xDC2E74", VA = "0xDC2E74")]
	public static void WireCircle(float3 pos, float radius, int segments, float radianLower, float radianUpper, float3 forwardVec)
	{
	}
}
[Token(Token = "0x2000151")]
public static class GraphicUtils
{
	[Token(Token = "0x200055B")]
	private struct VertData
	{
		[Token(Token = "0x400173D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 pos;

		[Token(Token = "0x400173E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 normal;

		[Token(Token = "0x400173F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector2 uv0;

		[Token(Token = "0x4001740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector2 uv1;
	}

	[Token(Token = "0x6000986")]
	[Address(RVA = "0xDC77B8", Offset = "0xDC77B8", VA = "0xDC77B8")]
	public static ComputeBuffer GenerateComputeBufferFromMesh(Mesh mesh)
	{
		return null;
	}
}
[Token(Token = "0x2000152")]
public class GridCollisionScanner : MonoBehaviour
{
	[Token(Token = "0x200055C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB650", Offset = "0x9BB650")]
	private sealed class <DoGridCollisionScanning>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GridCollisionScanner <>4__this;

		[Token(Token = "0x4001744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <mask>5__2;

		[Token(Token = "0x4001745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GridManager <gridManager>5__3;

		[Token(Token = "0x4001746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Collider[] <results>5__4;

		[Token(Token = "0x1700042E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60023C0")]
			[Address(RVA = "0xDCA17C", Offset = "0xDCA17C", VA = "0xDCA17C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700042F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60023C2")]
			[Address(RVA = "0xDCA1EC", Offset = "0xDCA1EC", VA = "0xDCA1EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60023BD")]
		[Address(RVA = "0xDC9C68", Offset = "0xDC9C68", VA = "0xDC9C68")]
		[DebuggerHidden]
		public <DoGridCollisionScanning>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60023BE")]
		[Address(RVA = "0xDC9CAC", Offset = "0xDC9CAC", VA = "0xDC9CAC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60023BF")]
		[Address(RVA = "0xDC9CB0", Offset = "0xDC9CB0", VA = "0xDC9CB0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60023C1")]
		[Address(RVA = "0xDCA184", Offset = "0xDCA184", VA = "0xDCA184", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool scanAllOnStart;

	[Token(Token = "0x40007AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9C0DC4", Offset = "0x9C0DC4")]
	public int checksPerFrame;

	[Token(Token = "0x6000987")]
	[Address(RVA = "0xDC9654", Offset = "0xDC9654", VA = "0xDC9654")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000988")]
	[Address(RVA = "0xDC96F4", Offset = "0xDC96F4", VA = "0xDC96F4")]
	public void ScanAll()
	{
	}

	[Token(Token = "0x6000989")]
	[Address(RVA = "0xDC9680", Offset = "0xDC9680", VA = "0xDC9680")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CFA84", Offset = "0x9CFA84")]
	private IEnumerator DoGridCollisionScanning()
	{
		return null;
	}

	[Token(Token = "0x600098A")]
	[Address(RVA = "0xDC9C94", Offset = "0xDC9C94", VA = "0xDC9C94")]
	public GridCollisionScanner()
	{
	}
}
[Token(Token = "0x2000153")]
public class GridManager : SingletonMonoBehaviourOnDemand<GridManager>
{
	[Token(Token = "0x200055D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB660", Offset = "0x9BB660")]
	private sealed class <DoQueryPath>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int rate;

		[Token(Token = "0x400174A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GridManager <>4__this;

		[Token(Token = "0x400174B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 src;

		[Token(Token = "0x400174C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 dst;

		[Token(Token = "0x400174D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<Vector3> results;

		[Token(Token = "0x400174E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Grid.Query <query>5__2;

		[Token(Token = "0x400174F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private IEnumerator <queryF>5__3;

		[Token(Token = "0x4001750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int <i>5__4;

		[Token(Token = "0x17000430")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60023C6")]
			[Address(RVA = "0xDCBBE8", Offset = "0xDCBBE8", VA = "0xDCBBE8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000431")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60023C8")]
			[Address(RVA = "0xDCBC58", Offset = "0xDCBC58", VA = "0xDCBC58", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60023C3")]
		[Address(RVA = "0xDCB530", Offset = "0xDCB530", VA = "0xDCB530")]
		[DebuggerHidden]
		public <DoQueryPath>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x60023C4")]
		[Address(RVA = "0xDCB5D8", Offset = "0xDCB5D8", VA = "0xDCB5D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60023C5")]
		[Address(RVA = "0xDCB5DC", Offset = "0xDCB5DC", VA = "0xDCB5DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60023C7")]
		[Address(RVA = "0xDCBBF0", Offset = "0xDCBBF0", VA = "0xDCBBF0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Grid grid;

	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool useWorldPosition;

	[Token(Token = "0x40007B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool debugDrawSelected;

	[Token(Token = "0x40007B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool debugDrawAlways;

	[Token(Token = "0x40007B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	public bool debugDrawQueries;

	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int debugQueryFrameDelay;

	[Token(Token = "0x40007B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float debugDrawAlphaGrid;

	[Token(Token = "0x40007B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float debugDrawAlphaQuery;

	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int cellCount;

	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float cellSize;

	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float gridSize;

	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int queryRateDefault;

	[Token(Token = "0x40007BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int queryOpenSetLimit;

	[Token(Token = "0x40007BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int queryClosedSetLimit;

	[Token(Token = "0x600098B")]
	[Address(RVA = "0xDCA1F4", Offset = "0xDCA1F4", VA = "0xDCA1F4")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x600098C")]
	[Address(RVA = "0xDCA200", Offset = "0xDCA200", VA = "0xDCA200")]
	public void Init(int _cellCount, float _gridSize)
	{
	}

	[Token(Token = "0x600098D")]
	[Address(RVA = "0xDCA2A8", Offset = "0xDCA2A8", VA = "0xDCA2A8")]
	public void Update()
	{
	}

	[Token(Token = "0x600098E")]
	[Address(RVA = "0xDCA54C", Offset = "0xDCA54C", VA = "0xDCA54C")]
	public void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600098F")]
	[Address(RVA = "0xDCA550", Offset = "0xDCA550", VA = "0xDCA550")]
	public void QueryPath(List<Vector3> results, Vector3 src, Vector3 dst)
	{
	}

	[Token(Token = "0x6000990")]
	[Address(RVA = "0xDCB418", Offset = "0xDCB418", VA = "0xDCB418")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CFAE8", Offset = "0x9CFAE8")]
	public IEnumerator DoQueryPath(List<Vector3> results, Vector3 src, Vector3 dst, int rate = -1)
	{
		return null;
	}

	[Token(Token = "0x6000991")]
	[Address(RVA = "0xDCA88C", Offset = "0xDCA88C", VA = "0xDCA88C")]
	public Grid.Coord WorldToGrid(Vector3 pos)
	{
		return default(Grid.Coord);
	}

	[Token(Token = "0x6000992")]
	[Address(RVA = "0xDCAA80", Offset = "0xDCAA80", VA = "0xDCAA80")]
	public Vector3 GridToWorldCentered(Grid.Coord coord)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000993")]
	[Address(RVA = "0xDC9A84", Offset = "0xDC9A84", VA = "0xDC9A84")]
	public Vector3 GridToWorldCentered(int x, int y, int z)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000994")]
	[Address(RVA = "0xDCA2B8", Offset = "0xDCA2B8", VA = "0xDCA2B8")]
	private void DebugDrawGrid()
	{
	}

	[Token(Token = "0x6000995")]
	[Address(RVA = "0xDCAA90", Offset = "0xDCAA90", VA = "0xDCAA90")]
	private void DebugDrawQuery(Grid.Query query)
	{
	}

	[Token(Token = "0x6000996")]
	[Address(RVA = "0xDCB55C", Offset = "0xDCB55C", VA = "0xDCB55C")]
	public GridManager()
	{
	}
}
[Token(Token = "0x2000154")]
public class Grid
{
	[Token(Token = "0x200055E")]
	public struct Coord
	{
		[Token(Token = "0x4001751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int x;

		[Token(Token = "0x4001752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int y;

		[Token(Token = "0x4001753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int z;

		[Token(Token = "0x60023C9")]
		[Address(RVA = "0xA838E4", Offset = "0xA838E4", VA = "0xA838E4")]
		public Coord(int _x, int _y, int _z)
		{
		}
	}

	[Token(Token = "0x200055F")]
	public class Node
	{
		[Token(Token = "0x4001754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int x;

		[Token(Token = "0x4001755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int y;

		[Token(Token = "0x4001756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int z;

		[Token(Token = "0x4001757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool walkable;

		[Token(Token = "0x60023CA")]
		[Address(RVA = "0xDC7D9C", Offset = "0xDC7D9C", VA = "0xDC7D9C")]
		public Node(int _x, int _y, int _z)
		{
		}
	}

	[Token(Token = "0x2000560")]
	public class Benchmark
	{
		[Token(Token = "0x60023CB")]
		[Address(RVA = "0xDC9238", Offset = "0xDC9238", VA = "0xDC9238")]
		public static float Run(Grid grid, Query query)
		{
			return default(float);
		}

		[Token(Token = "0x60023CC")]
		[Address(RVA = "0xDC9478", Offset = "0xDC9478", VA = "0xDC9478")]
		public Benchmark()
		{
		}
	}

	[Token(Token = "0x2000561")]
	public class Query
	{
		[Token(Token = "0x4001758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Node srcNode;

		[Token(Token = "0x4001759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Node dstNode;

		[Token(Token = "0x400175A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool runningCoroutine;

		[Token(Token = "0x400175B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool allowUnwalkableTarget;

		[Token(Token = "0x400175C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int openSetLimit;

		[Token(Token = "0x400175D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int closedSetLimit;

		[Token(Token = "0x400175E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<Node> results;

		[Token(Token = "0x400175F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<Node> closedSet;

		[Token(Token = "0x4001760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<Node> openSet;

		[Token(Token = "0x4001761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Dictionary<Node, bool> closedSetContains;

		[Token(Token = "0x4001762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Dictionary<Node, bool> openSetContains;

		[Token(Token = "0x4001763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<Node> neighbours;

		[Token(Token = "0x4001764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Dictionary<Node, float> gScore;

		[Token(Token = "0x4001765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Dictionary<Node, float> fScore;

		[Token(Token = "0x4001766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Dictionary<Node, Node> cameFrom;

		[Token(Token = "0x60023CD")]
		[Address(RVA = "0xDC948C", Offset = "0xDC948C", VA = "0xDC948C")]
		public Query(Node src, Node dst, bool _allowUnwalkableTarget = false, int _openSetLimit = -1, int _closedSetLimit = -1)
		{
		}

		[Token(Token = "0x60023CE")]
		[Address(RVA = "0xDC84F4", Offset = "0xDC84F4", VA = "0xDC84F4")]
		public void Reset(bool _allowUnwalkableTarget = false, int _openSetLimit = -1, int _closedSetLimit = -1)
		{
		}
	}

	[Token(Token = "0x2000562")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB670", Offset = "0x9BB670")]
	private sealed class <DoQueryPath>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Query query;

		[Token(Token = "0x400176A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Grid <>4__this;

		[Token(Token = "0x400176B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int rate;

		[Token(Token = "0x400176C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Node <final>5__2;

		[Token(Token = "0x400176D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool <done>5__3;

		[Token(Token = "0x17000432")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60023D2")]
			[Address(RVA = "0xDC91C0", Offset = "0xDC91C0", VA = "0xDC91C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000433")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60023D4")]
			[Address(RVA = "0xDC9230", Offset = "0xDC9230", VA = "0xDC9230", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60023CF")]
		[Address(RVA = "0xDC8DF0", Offset = "0xDC8DF0", VA = "0xDC8DF0")]
		[DebuggerHidden]
		public <DoQueryPath>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x60023D0")]
		[Address(RVA = "0xDC8E24", Offset = "0xDC8E24", VA = "0xDC8E24", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60023D1")]
		[Address(RVA = "0xDC8E28", Offset = "0xDC8E28", VA = "0xDC8E28", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60023D3")]
		[Address(RVA = "0xDC91C8", Offset = "0xDC91C8", VA = "0xDC91C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int dimX;

	[Token(Token = "0x40007BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int dimY;

	[Token(Token = "0x40007C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int dimZ;

	[Token(Token = "0x40007C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Node[,,] nodes;

	[Token(Token = "0x40007C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int nodesCount;

	[Token(Token = "0x6000997")]
	[Address(RVA = "0xDC7BAC", Offset = "0xDC7BAC", VA = "0xDC7BAC")]
	public void Init(int x, int y, int z)
	{
	}

	[Token(Token = "0x6000998")]
	[Address(RVA = "0xDC7DE0", Offset = "0xDC7DE0", VA = "0xDC7DE0")]
	public Node GetNode(Coord coord)
	{
		return null;
	}

	[Token(Token = "0x6000999")]
	[Address(RVA = "0xDC7EA0", Offset = "0xDC7EA0", VA = "0xDC7EA0")]
	public int GetNodeCount()
	{
		return default(int);
	}

	[Token(Token = "0x600099A")]
	[Address(RVA = "0xDC7EA8", Offset = "0xDC7EA8", VA = "0xDC7EA8")]
	public bool IsValidCoord(Coord coord)
	{
		return default(bool);
	}

	[Token(Token = "0x600099B")]
	[Address(RVA = "0xDC7EE8", Offset = "0xDC7EE8", VA = "0xDC7EE8")]
	public bool IsValidCoord(int x, int y, int z)
	{
		return default(bool);
	}

	[Token(Token = "0x600099C")]
	[Address(RVA = "0xDC7F24", Offset = "0xDC7F24", VA = "0xDC7F24")]
	public void GetNeighbours(Node node, List<Node> results, Node ignorableTargetNode)
	{
	}

	[Token(Token = "0x600099D")]
	[Address(RVA = "0xDC8140", Offset = "0xDC8140", VA = "0xDC8140")]
	public float Cost(Node node, Node target)
	{
		return default(float);
	}

	[Token(Token = "0x600099E")]
	[Address(RVA = "0xDC82D4", Offset = "0xDC82D4", VA = "0xDC82D4")]
	public bool QueryPath(Query query)
	{
		return default(bool);
	}

	[Token(Token = "0x600099F")]
	[Address(RVA = "0xDC8D44", Offset = "0xDC8D44", VA = "0xDC8D44")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CFB4C", Offset = "0x9CFB4C")]
	public IEnumerator DoQueryPath(Query query, int rate = 1)
	{
		return null;
	}

	[Token(Token = "0x60009A0")]
	[Address(RVA = "0xDC8678", Offset = "0xDC8678", VA = "0xDC8678")]
	public bool QueryPathStep(Query query, out Node final)
	{
		return default(bool);
	}

	[Token(Token = "0x60009A1")]
	[Address(RVA = "0xDC8E1C", Offset = "0xDC8E1C", VA = "0xDC8E1C")]
	public Grid()
	{
	}
}
[Token(Token = "0x2000155")]
public class HardwareSetup
{
	[Serializable]
	[Token(Token = "0x2000563")]
	public enum DeviceType
	{
		[Token(Token = "0x400176F")]
		STEAMVR,
		[Token(Token = "0x4001770")]
		OCULUS,
		[Token(Token = "0x4001771")]
		GAMEPAD,
		[Token(Token = "0x4001772")]
		DAYDREAM,
		[Token(Token = "0x4001773")]
		WAVE,
		[Token(Token = "0x4001774")]
		GALAXY,
		[Token(Token = "0x4001775")]
		NULL
	}

	[Token(Token = "0x60009A2")]
	[Address(RVA = "0xDCBE80", Offset = "0xDCBE80", VA = "0xDCBE80")]
	public static DeviceType GetDevice()
	{
		return default(DeviceType);
	}

	[Token(Token = "0x60009A3")]
	[Address(RVA = "0xDCC30C", Offset = "0xDCC30C", VA = "0xDCC30C")]
	public HardwareSetup()
	{
	}
}
[Token(Token = "0x2000156")]
public class Helpers : MonoBehaviour
{
	[Token(Token = "0x60009A4")]
	[Address(RVA = "0xDCC314", Offset = "0xDCC314", VA = "0xDCC314")]
	public static GameObject GetChildObj(GameObject obj, string name)
	{
		return null;
	}

	[Token(Token = "0x60009A5")]
	[Address(RVA = "0xDCC504", Offset = "0xDCC504", VA = "0xDCC504")]
	public static Vector3 GetChildObjLocalPos(GameObject obj, string name)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60009A6")]
	[Address(RVA = "0xDCC7A4", Offset = "0xDCC7A4", VA = "0xDCC7A4")]
	public static Vector3 IterativeCollisionEject(Vector3 point, float radius, LayerMask mask, int iterations, float step)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60009A7")]
	[Address(RVA = "0xDCC948", Offset = "0xDCC948", VA = "0xDCC948")]
	public Helpers()
	{
	}
}
[Token(Token = "0x2000157")]
public class HideInReleaseMode : MonoBehaviour
{
	[Token(Token = "0x60009A8")]
	[Address(RVA = "0xDCC958", Offset = "0xDCC958", VA = "0xDCC958")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009A9")]
	[Address(RVA = "0xDCC9F4", Offset = "0xDCC9F4", VA = "0xDCC9F4")]
	public HideInReleaseMode()
	{
	}
}
[Token(Token = "0x2000158")]
public static class IEnumerableExtensions
{
	[Token(Token = "0x60009AA")]
	public static void ForEach<T>(this IEnumerable<T> ie, Action<T> func)
	{
	}

	[Token(Token = "0x60009AB")]
	public static HashSet<T> ToSet<T>(this IEnumerable<T> ie)
	{
		return null;
	}

	[Token(Token = "0x60009AC")]
	public static void RemoveLast<T>(this IList<T> ie, Func<T, bool> func)
	{
	}

	[Token(Token = "0x60009AD")]
	public static T RemoveLast<T>(this IList<T> ie)
	{
		return (T)null;
	}

	[Token(Token = "0x60009AE")]
	public static T Get<T>(this IList<T> ie, int index, T defaultValue)
	{
		return (T)null;
	}

	[Token(Token = "0x60009AF")]
	public static bool NonEmpty<T>(this Queue<T> ie)
	{
		return default(bool);
	}

	[Token(Token = "0x60009B0")]
	public static bool Empty<T>(this Queue<T> ie)
	{
		return default(bool);
	}

	[Token(Token = "0x60009B1")]
	public static bool NonEmpty<T>(this IList<T> ie)
	{
		return default(bool);
	}

	[Token(Token = "0x60009B2")]
	public static bool Empty<T>(this IList<T> ie)
	{
		return default(bool);
	}

	[Token(Token = "0x60009B3")]
	public static T GetOrDefault<T>(this T[] ie, int index, T defaultValue)
	{
		return (T)null;
	}

	[Token(Token = "0x60009B4")]
	public static bool InBounds<T>(this T[] ie, int index)
	{
		return default(bool);
	}

	[Token(Token = "0x60009B5")]
	public static int SafeLength<T>(this T[] t)
	{
		return default(int);
	}

	[Token(Token = "0x60009B6")]
	public static int SafeLength<T>(this List<T> t)
	{
		return default(int);
	}

	[Token(Token = "0x60009B7")]
	public static bool SafeEmpty<T>(this List<T> t)
	{
		return default(bool);
	}

	[Token(Token = "0x60009B8")]
	public static void CopyTo<T>(this List<T> from, List<T> to)
	{
	}

	[Token(Token = "0x60009B9")]
	public static IEnumerable<T> NullSafe<T>(this IEnumerable<T> t)
	{
		return null;
	}

	[MethodImpl(256)]
	[Token(Token = "0x60009BA")]
	public static void Fill<T>(this T[] t, T v)
	{
	}

	[Token(Token = "0x60009BB")]
	[Address(RVA = "0xDCD920", Offset = "0xDCD920", VA = "0xDCD920")]
	public static float Average(this float[] n, int lowerIndexInclusive, int upperIndexExclusive)
	{
		return default(float);
	}
}
[Token(Token = "0x2000159")]
public interface IGameObject
{
	[Token(Token = "0x170000C5")]
	GameObject gameObject
	{
		[Token(Token = "0x60009BC")]
		get;
	}

	[Token(Token = "0x170000C6")]
	Transform transform
	{
		[Token(Token = "0x60009BD")]
		get;
	}
}
[Token(Token = "0x200015A")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9B91AC", Offset = "0x9B91AC")]
public class InputFieldFocusOnEnable : MonoBehaviour
{
	[Token(Token = "0x60009BE")]
	[Address(RVA = "0xDCEFE0", Offset = "0xDCEFE0", VA = "0xDCEFE0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009BF")]
	[Address(RVA = "0xDCF0A4", Offset = "0xDCF0A4", VA = "0xDCF0A4")]
	public InputFieldFocusOnEnable()
	{
	}
}
[Token(Token = "0x200015B")]
public class InstantiatePrefab : MonoBehaviour
{
	[Token(Token = "0x40007C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PersistentEntity Prefab;

	[Token(Token = "0x40007C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool SpawnOnAwake;

	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool CenterLocalPosition;

	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool CenterLocalOrientation;

	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	public bool IdentityScale;

	[Token(Token = "0x170000C7")]
	public bool Occupied
	{
		[Token(Token = "0x60009C1")]
		[Address(RVA = "0xDD2288", Offset = "0xDD2288", VA = "0xDD2288")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60009C0")]
	[Address(RVA = "0xDD1F38", Offset = "0xDD1F38", VA = "0xDD1F38")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009C2")]
	[Address(RVA = "0xDD22C8", Offset = "0xDD22C8", VA = "0xDD22C8")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9CFCD0", Offset = "0x9CFCD0")]
	public void DestroyChildren()
	{
	}

	[Token(Token = "0x60009C3")]
	[Address(RVA = "0xDD2644", Offset = "0xDD2644", VA = "0xDD2644")]
	public bool SpawnIfEmpty(out GameObject go)
	{
		return default(bool);
	}

	[Token(Token = "0x60009C4")]
	[Address(RVA = "0xDD1F48", Offset = "0xDD1F48", VA = "0xDD1F48")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x9CFD08", Offset = "0x9CFD08")]
	public GameObject Spawn()
	{
		return null;
	}

	[Token(Token = "0x60009C5")]
	[Address(RVA = "0xDD26F0", Offset = "0xDD26F0", VA = "0xDD26F0")]
	public void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60009C6")]
	[Address(RVA = "0xDD293C", Offset = "0xDD293C", VA = "0xDD293C")]
	public InstantiatePrefab()
	{
	}
}
[Token(Token = "0x200015C")]
public class InteractiveCoreEventFmodTrigger : MonoBehaviour
{
	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public InteractiveCore InteractiveCore;

	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public StudioEventEmitter EmitterToPlay;

	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool PlayOnTouch;

	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool PlayOnGrab;

	[Token(Token = "0x40007CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool StopOnUnTouch;

	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	public bool StopOnRelease;

	[Token(Token = "0x60009C7")]
	[Address(RVA = "0xDD4830", Offset = "0xDD4830", VA = "0xDD4830")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009C8")]
	[Address(RVA = "0xDD4BB0", Offset = "0xDD4BB0", VA = "0xDD4BB0")]
	private void HandlePlayOnTouch(PlayerControllerInput input)
	{
	}

	[Token(Token = "0x60009C9")]
	[Address(RVA = "0xDD4CE8", Offset = "0xDD4CE8", VA = "0xDD4CE8")]
	private void HandlePlayOnGrab(PlayerControllerInput input)
	{
	}

	[Token(Token = "0x60009CA")]
	[Address(RVA = "0xDD4D00", Offset = "0xDD4D00", VA = "0xDD4D00")]
	private void HandleStopOnUnTouch(PlayerControllerInput input)
	{
	}

	[Token(Token = "0x60009CB")]
	[Address(RVA = "0xDD4D18", Offset = "0xDD4D18", VA = "0xDD4D18")]
	private void HandleStopOnRelease(PlayerControllerInput input)
	{
	}

	[Token(Token = "0x60009CC")]
	[Address(RVA = "0xDD4D30", Offset = "0xDD4D30", VA = "0xDD4D30")]
	public InteractiveCoreEventFmodTrigger()
	{
	}
}
[Token(Token = "0x200015D")]
public class MapDistanceToLocalRotation : MonoBehaviour
{
	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 Axis;

	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float RotationsPerUnitTravelledSquared;

	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 _xPrevious;

	[Token(Token = "0x60009CD")]
	[Address(RVA = "0xC06890", Offset = "0xC06890", VA = "0xC06890")]
	public void Update()
	{
	}

	[Token(Token = "0x60009CE")]
	[Address(RVA = "0xC06ABC", Offset = "0xC06ABC", VA = "0xC06ABC")]
	public MapDistanceToLocalRotation()
	{
	}
}
[Token(Token = "0x200015E")]
public static class MathExtension
{
	[Token(Token = "0x2000564")]
	public struct Aabb3
	{
		[Token(Token = "0x4001776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 Center;

		[Token(Token = "0x4001777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 Radius;

		[Token(Token = "0x60023D5")]
		[Address(RVA = "0xA82CE0", Offset = "0xA82CE0", VA = "0xA82CE0")]
		public bool Contains(Vector3 point)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40007D1")]
	public const float GoldenRatio = 1.618034f;

	[Token(Token = "0x40007D2")]
	public const float Tau = (float)Math.PI * 2f;

	[Token(Token = "0x40007D3")]
	public const float GravityOfEarth = 9.80665f;

	[Token(Token = "0x60009CF")]
	[Address(RVA = "0xC06E28", Offset = "0xC06E28", VA = "0xC06E28")]
	public static Vector3 CalcTorqueTorwards(Transform transform, Rigidbody body, Quaternion target)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60009D0")]
	[Address(RVA = "0xC071D8", Offset = "0xC071D8", VA = "0xC071D8")]
	public static Vector3 Hermite(Vector3 ptStart, Vector3 ptEnd, Vector3 tanStart, Vector3 tanEnd, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60009D1")]
	[Address(RVA = "0xC009A8", Offset = "0xC009A8", VA = "0xC009A8")]
	public static float CubicPulse(float center, float width, float val)
	{
		return default(float);
	}

	[Token(Token = "0x60009D2")]
	[Address(RVA = "0xC073A8", Offset = "0xC073A8", VA = "0xC073A8")]
	public static float Parabola(float x, float k)
	{
		return default(float);
	}

	[Token(Token = "0x60009D3")]
	[Address(RVA = "0xC0742C", Offset = "0xC0742C", VA = "0xC0742C")]
	public static float Gain(float x, float gain)
	{
		return default(float);
	}

	[Token(Token = "0x60009D4")]
	[Address(RVA = "0xC0157C", Offset = "0xC0157C", VA = "0xC0157C")]
	public static float SmoothStep(float a, float b, float val)
	{
		return default(float);
	}

	[Token(Token = "0x60009D5")]
	[Address(RVA = "0xC074D8", Offset = "0xC074D8", VA = "0xC074D8")]
	public static float LinearStep(float a, float b, float val)
	{
		return default(float);
	}

	[Token(Token = "0x60009D6")]
	[Address(RVA = "0xC07560", Offset = "0xC07560", VA = "0xC07560")]
	public static float Impulse(float pow, float val)
	{
		return default(float);
	}

	[Token(Token = "0x60009D7")]
	[Address(RVA = "0xC075E0", Offset = "0xC075E0", VA = "0xC075E0")]
	public static void FastScale(ref Vector3 vect, float scale, out Vector3 result)
	{
	}

	[Token(Token = "0x60009D8")]
	[Address(RVA = "0xC07608", Offset = "0xC07608", VA = "0xC07608")]
	public static void FastLerp(ref Vector3 a, Vector3 b, float t, out Vector3 result)
	{
	}

	[Token(Token = "0x60009D9")]
	[Address(RVA = "0xC076E8", Offset = "0xC076E8", VA = "0xC076E8")]
	public static Vector3 NearestPointOnLine(ref Vector3 inLinePoint, ref Vector3 inLineDir, ref Vector3 inPoint)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60009DA")]
	[Address(RVA = "0xC07800", Offset = "0xC07800", VA = "0xC07800")]
	public static Vector3 NearestPointOnLineSegment(ref Vector3 a, ref Vector3 b, ref Vector3 point)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60009DB")]
	[Address(RVA = "0xC079EC", Offset = "0xC079EC", VA = "0xC079EC")]
	public static bool ClosestPointOnCapsuleSurface(Vector3 capA, Vector3 capB, float capRadius, Vector3 point, out Vector3 closestPoint, out float radialDistanceSqr)
	{
		return default(bool);
	}

	[Token(Token = "0x60009DC")]
	[Address(RVA = "0xC07B70", Offset = "0xC07B70", VA = "0xC07B70")]
	public static Vector3 Abs(Vector3 v)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60009DD")]
	[Address(RVA = "0xC07BF4", Offset = "0xC07BF4", VA = "0xC07BF4")]
	public static bool EvacuateCapsuleFromPoint(ref Vector3 a, ref Vector3 b, ref Vector3 point, float radius, out Vector3 aOut, out Vector3 bOut, out float radialDistanceSqr)
	{
		return default(bool);
	}

	[Token(Token = "0x60009DE")]
	[Address(RVA = "0xC07E54", Offset = "0xC07E54", VA = "0xC07E54")]
	public static float SqrGroundDistance(Vector3 a, Vector3 b)
	{
		return default(float);
	}

	[Token(Token = "0x60009DF")]
	[Address(RVA = "0xC07E6C", Offset = "0xC07E6C", VA = "0xC07E6C")]
	public static bool GroundDistanceCheck(Vector3 a, Vector3 b, float maxValue)
	{
		return default(bool);
	}

	[Token(Token = "0x60009E0")]
	[Address(RVA = "0xC07E90", Offset = "0xC07E90", VA = "0xC07E90")]
	public static Vector2 XZ(this Vector3 v)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60009E1")]
	[Address(RVA = "0xC07E98", Offset = "0xC07E98", VA = "0xC07E98")]
	public static Vector3 ZeroY(this Vector3 v)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60009E2")]
	[Address(RVA = "0xC07EA0", Offset = "0xC07EA0", VA = "0xC07EA0")]
	public static Vector3 XY2XZ(this Vector2 v)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60009E3")]
	[Address(RVA = "0xC07EAC", Offset = "0xC07EAC", VA = "0xC07EAC")]
	public static float Lerp2(float a, float b, float rate, float deltaTime)
	{
		return default(float);
	}

	[Token(Token = "0x60009E4")]
	[Address(RVA = "0xC07F40", Offset = "0xC07F40", VA = "0xC07F40")]
	public static Vector3 Lerp2(Vector3 a, Vector3 b, float rate, float deltaTime)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60009E5")]
	[Address(RVA = "0xC07FD4", Offset = "0xC07FD4", VA = "0xC07FD4")]
	public static float Map(float currVal, float currMin, float currMax, float newMin, float newMax)
	{
		return default(float);
	}

	[Token(Token = "0x60009E6")]
	[Address(RVA = "0xC08008", Offset = "0xC08008", VA = "0xC08008")]
	public static float Lerp2(float a, float b, float fps, float factor, float deltaTime)
	{
		return default(float);
	}

	[Token(Token = "0x60009E7")]
	[Address(RVA = "0xBEF790", Offset = "0xBEF790", VA = "0xBEF790")]
	public static bool DistanceCheck(Vector3 a, Vector3 b, float maxDistance)
	{
		return default(bool);
	}

	[Token(Token = "0x60009E8")]
	[Address(RVA = "0xC081B0", Offset = "0xC081B0", VA = "0xC081B0")]
	public static bool DistanceCheck(Vector3 a, Vector3 b, Vector2 clamp)
	{
		return default(bool);
	}

	[Token(Token = "0x60009E9")]
	[Address(RVA = "0xC080B4", Offset = "0xC080B4", VA = "0xC080B4")]
	public static bool DistanceCheck(Vector3 a, Vector3 b, float minDistance, float maxDistance)
	{
		return default(bool);
	}

	[Token(Token = "0x60009EA")]
	[Address(RVA = "0xC081B4", Offset = "0xC081B4", VA = "0xC081B4")]
	public static Vector3 QuadBezier(Vector3 p0, Vector3 p1, Vector3 p2, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60009EB")]
	[Address(RVA = "0xBECED0", Offset = "0xBECED0", VA = "0xBECED0")]
	public static Vector3 Multiply(this Vector3 a, Vector3 b)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60009EC")]
	[Address(RVA = "0xC08310", Offset = "0xC08310", VA = "0xC08310")]
	public static float MapLinear(float value, float startX, float startY, float endX, float endY)
	{
		return default(float);
	}

	[Token(Token = "0x60009ED")]
	[Address(RVA = "0xC08328", Offset = "0xC08328", VA = "0xC08328")]
	public static float TransformLinearClamped(float fromLower, float fromUpper, float toLower, float toUpper, float v)
	{
		return default(float);
	}

	[Token(Token = "0x60009EE")]
	[Address(RVA = "0xC08424", Offset = "0xC08424", VA = "0xC08424")]
	public static float3 TransformLinearClamped(float fromLower, float fromUpper, float toLower, float toUpper, float3 v)
	{
		return default(float3);
	}

	[MethodImpl(256)]
	[Token(Token = "0x60009EF")]
	[Address(RVA = "0xBEFA3C", Offset = "0xBEFA3C", VA = "0xBEFA3C")]
	public static bool IsEven(this int i)
	{
		return default(bool);
	}

	[MethodImpl(256)]
	[Token(Token = "0x60009F0")]
	[Address(RVA = "0xC08548", Offset = "0xC08548", VA = "0xC08548")]
	public static bool IsOdd(this int i)
	{
		return default(bool);
	}

	[Token(Token = "0x60009F1")]
	[Address(RVA = "0xC08550", Offset = "0xC08550", VA = "0xC08550")]
	public static bool ScaledSphereOverlapTest(Transform sphereTransform, Vector3 worldPoint, float worldInflateDistance = 0f)
	{
		return default(bool);
	}

	[Token(Token = "0x60009F2")]
	[Address(RVA = "0xC08688", Offset = "0xC08688", VA = "0xC08688")]
	public static bool ScaledBoxOverlapTest(Transform boxTransform, Vector3 worldPoint, Vector3 inflation)
	{
		return default(bool);
	}

	[Token(Token = "0x60009F3")]
	[Address(RVA = "0xC087DC", Offset = "0xC087DC", VA = "0xC087DC")]
	public static Vector3 Perlin3D(Vector3 pos, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60009F4")]
	[Address(RVA = "0xC0890C", Offset = "0xC0890C", VA = "0xC0890C")]
	public static Vector3 NoiseField3D(Vector3 worldPosition, float t, Vector3 bias, float biasLerpFactor = 0.5f)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60009F5")]
	[Address(RVA = "0xC089E8", Offset = "0xC089E8", VA = "0xC089E8")]
	public static Vector3 NoiseField3D(Vector3 worldPosition, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60009F6")]
	[Address(RVA = "0xC089EC", Offset = "0xC089EC", VA = "0xC089EC")]
	public static Vector3 TransformPoint(this Transform transform, Ray ray, float distance)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60009F7")]
	[Address(RVA = "0xC08A50", Offset = "0xC08A50", VA = "0xC08A50")]
	public static Bounds InverseTransformBounds(this Transform transform, Bounds bounds)
	{
		return default(Bounds);
	}

	[Token(Token = "0x60009F8")]
	[Address(RVA = "0xC08B3C", Offset = "0xC08B3C", VA = "0xC08B3C")]
	public static int[] KMeansCluster(int clusterCount, float3[] data, int maxIterations)
	{
		return null;
	}

	[Token(Token = "0x60009F9")]
	[Address(RVA = "0xC090B4", Offset = "0xC090B4", VA = "0xC090B4")]
	public static int[] KMeansCluster(int clusterCount, float3[] data)
	{
		return null;
	}
}
[Token(Token = "0x200015F")]
public class MinMaxAttribute : PropertyAttribute
{
	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float minDefaultVal;

	[Token(Token = "0x40007D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float maxDefaultVal;

	[Token(Token = "0x40007D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float min;

	[Token(Token = "0x40007D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float max;

	[Token(Token = "0x60009FA")]
	[Address(RVA = "0xCC7924", Offset = "0xCC7924", VA = "0xCC7924")]
	public MinMaxAttribute(float minDefaultVal, float maxDefaultVal, float min, float max)
	{
	}
}
[Token(Token = "0x2000160")]
public class StressSpawner : MonoBehaviour
{
	[Token(Token = "0x60009FB")]
	[Address(RVA = "0xD7CE04", Offset = "0xD7CE04", VA = "0xD7CE04")]
	public StressSpawner()
	{
	}
}
[Token(Token = "0x2000161")]
public class NavigationNodeVisual : MonoBehaviour
{
	[Token(Token = "0x60009FC")]
	[Address(RVA = "0xCC90E0", Offset = "0xCC90E0", VA = "0xCC90E0")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60009FD")]
	[Address(RVA = "0xCC9120", Offset = "0xCC9120", VA = "0xCC9120")]
	public NavigationNodeVisual()
	{
	}
}
[Token(Token = "0x2000162")]
public class Note : MonoBehaviour
{
	[Token(Token = "0x60009FE")]
	[Address(RVA = "0xCC94EC", Offset = "0xCC94EC", VA = "0xCC94EC")]
	public Note()
	{
	}
}
[Token(Token = "0x2000163")]
public static class ObjectExtensions
{
	[Token(Token = "0x60009FF")]
	public static bool IsNull<T>(this T obj) where T : class
	{
		return default(bool);
	}

	[Token(Token = "0x6000A00")]
	public static bool IsNonNull<T>(this T obj) where T : class
	{
		return default(bool);
	}
}
[Serializable]
[Token(Token = "0x2000164")]
public class ParticleEffectSystemType
{
	[Token(Token = "0x40007D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public HardwareSetup.DeviceType TypeOverride;

	[Token(Token = "0x40007D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject PrefabOverride;

	[Token(Token = "0x6000A01")]
	[Address(RVA = "0xEACFEC", Offset = "0xEACFEC", VA = "0xEACFEC")]
	public ParticleEffectSystemType()
	{
	}
}
[Serializable]
[Token(Token = "0x2000165")]
public class ParticleEffect
{
	[Token(Token = "0x40007DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string Name;

	[Token(Token = "0x40007DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject ParticlePrefab;

	[Token(Token = "0x40007DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool PlayOnAwake;

	[Token(Token = "0x40007DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool Loop;

	[Token(Token = "0x40007DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool DestroyWhenFinished;

	[Token(Token = "0x40007DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	public bool DoNotCache;

	[Token(Token = "0x40007E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ParticleEffectSystemType[] Overrides;

	[NonSerialized]
	[Token(Token = "0x40007E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<ParticleSystem> Cache;

	[Token(Token = "0x6000A02")]
	[Address(RVA = "0xEACF70", Offset = "0xEACF70", VA = "0xEACF70")]
	public ParticleEffect()
	{
	}
}
[Token(Token = "0x2000166")]
public class ParticleManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000565")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB680", Offset = "0x9BB680")]
	private sealed class <>c
	{
		[Token(Token = "0x4001778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<ParticleSystem> <>9__10_0;

		[Token(Token = "0x60023D7")]
		[Address(RVA = "0xEADF6C", Offset = "0xEADF6C", VA = "0xEADF6C")]
		public <>c()
		{
		}

		[Token(Token = "0x60023D8")]
		[Address(RVA = "0xEADF74", Offset = "0xEADF74", VA = "0xEADF74")]
		internal bool <DoHandleEffectEnd>b__10_0(ParticleSystem e)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000566")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB690", Offset = "0x9BB690")]
	private sealed class <DoHandleEffectEnd>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400177A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400177B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400177C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ParticleSystem ps;

		[Token(Token = "0x400177D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ParticleEffect effect;

		[Token(Token = "0x17000434")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60023DC")]
			[Address(RVA = "0xEAE24C", Offset = "0xEAE24C", VA = "0xEAE24C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000435")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60023DE")]
			[Address(RVA = "0xEAE2BC", Offset = "0xEAE2BC", VA = "0xEAE2BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60023D9")]
		[Address(RVA = "0xEADED4", Offset = "0xEADED4", VA = "0xEADED4")]
		[DebuggerHidden]
		public <DoHandleEffectEnd>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x60023DA")]
		[Address(RVA = "0xEADFE0", Offset = "0xEADFE0", VA = "0xEADFE0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60023DB")]
		[Address(RVA = "0xEADFE4", Offset = "0xEADFE4", VA = "0xEADFE4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60023DD")]
		[Address(RVA = "0xEAE254", Offset = "0xEAE254", VA = "0xEAE254", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ParticleManager Instance;

	[Token(Token = "0x40007E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject NewEffect;

	[Token(Token = "0x40007E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ParticleEffect[] Effects;

	[Token(Token = "0x6000A03")]
	[Address(RVA = "0xEACFF4", Offset = "0xEACFF4", VA = "0xEACFF4")]
	public static void EnsureInstance()
	{
	}

	[Token(Token = "0x6000A04")]
	[Address(RVA = "0xEAD290", Offset = "0xEAD290", VA = "0xEAD290")]
	private void SetupDeviceSpecificEffects()
	{
	}

	[Token(Token = "0x6000A05")]
	[Address(RVA = "0xEAD39C", Offset = "0xEAD39C", VA = "0xEAD39C")]
	public ParticleEffect GetEffect(string effectName)
	{
		return null;
	}

	[Token(Token = "0x6000A06")]
	[Address(RVA = "0xEAD42C", Offset = "0xEAD42C", VA = "0xEAD42C")]
	public ParticleSystem GetSystem(ParticleEffect effect)
	{
		return null;
	}

	[Token(Token = "0x6000A07")]
	[Address(RVA = "0xEAD76C", Offset = "0xEAD76C", VA = "0xEAD76C")]
	public static ParticleSystem PlayEffectAttachTransform(string effectName, Transform attachTo)
	{
		return null;
	}

	[Token(Token = "0x6000A08")]
	[Address(RVA = "0xEADD88", Offset = "0xEADD88", VA = "0xEADD88")]
	public static ParticleSystem PlayEffect(string effectName, Vector3 position)
	{
		return null;
	}

	[Token(Token = "0x6000A09")]
	[Address(RVA = "0xEADA2C", Offset = "0xEADA2C", VA = "0xEADA2C")]
	public static ParticleSystem PlayEffect(string effectName, Vector3 position, Quaternion rotation)
	{
		return null;
	}

	[Token(Token = "0x6000A0A")]
	[Address(RVA = "0xEADE3C", Offset = "0xEADE3C", VA = "0xEADE3C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CFDE0", Offset = "0x9CFDE0")]
	private IEnumerator DoHandleEffectEnd(ParticleEffect effect, ParticleSystem ps)
	{
		return null;
	}

	[Token(Token = "0x6000A0B")]
	[Address(RVA = "0xEADF00", Offset = "0xEADF00", VA = "0xEADF00")]
	public ParticleManager()
	{
	}
}
[Token(Token = "0x2000167")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9B9230", Offset = "0x9B9230")]
public class ParticleSystemNodeEmitter : MonoBehaviour
{
	[Token(Token = "0x2000567")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB6A0", Offset = "0x9BB6A0")]
	private sealed class <HandleEmission>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400177E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400177F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ParticleSystemNodeEmitter <>4__this;

		[Token(Token = "0x17000436")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60023E2")]
			[Address(RVA = "0xEAEE00", Offset = "0xEAEE00", VA = "0xEAEE00", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000437")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60023E4")]
			[Address(RVA = "0xEAEE70", Offset = "0xEAEE70", VA = "0xEAEE70", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60023DF")]
		[Address(RVA = "0xEAE428", Offset = "0xEAE428", VA = "0xEAE428")]
		[DebuggerHidden]
		public <HandleEmission>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x60023E0")]
		[Address(RVA = "0xEAEBCC", Offset = "0xEAEBCC", VA = "0xEAEBCC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60023E1")]
		[Address(RVA = "0xEAEBD0", Offset = "0xEAEBD0", VA = "0xEAEBD0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60023E3")]
		[Address(RVA = "0xEAEE08", Offset = "0xEAEE08", VA = "0xEAEE08", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9C0DE0", Offset = "0x9C0DE0")]
	public bool IgnoreShape;

	[Token(Token = "0x40007E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Transform> Nodes;

	[Token(Token = "0x40007E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ParticleSystem System;

	[Token(Token = "0x40007E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ParticleSystem.Particle[] Cache;

	[Token(Token = "0x6000A0C")]
	[Address(RVA = "0xEAE2C4", Offset = "0xEAE2C4", VA = "0xEAE2C4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A0D")]
	[Address(RVA = "0xEAE3B4", Offset = "0xEAE3B4", VA = "0xEAE3B4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CFE44", Offset = "0x9CFE44")]
	private IEnumerator HandleEmission()
	{
		return null;
	}

	[Token(Token = "0x6000A0E")]
	[Address(RVA = "0xEAE454", Offset = "0xEAE454", VA = "0xEAE454")]
	public Transform RandomNode()
	{
		return null;
	}

	[Token(Token = "0x6000A0F")]
	[Address(RVA = "0xEAE4EC", Offset = "0xEAE4EC", VA = "0xEAE4EC")]
	public void EmitIgnoreShape()
	{
	}

	[Token(Token = "0x6000A10")]
	[Address(RVA = "0xEAE7E8", Offset = "0xEAE7E8", VA = "0xEAE7E8")]
	public void Emit()
	{
	}

	[Token(Token = "0x6000A11")]
	[Address(RVA = "0xEAEB44", Offset = "0xEAEB44", VA = "0xEAEB44")]
	public ParticleSystemNodeEmitter()
	{
	}
}
[Token(Token = "0x2000168")]
public static class PhysicsExtension
{
	[Token(Token = "0x2000568")]
	public struct SurfacePoint3
	{
		[Token(Token = "0x4001781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 Position;

		[Token(Token = "0x4001782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 Normal;

		[Token(Token = "0x60023E5")]
		[Address(RVA = "0xEB239C", Offset = "0xEB239C", VA = "0xEB239C")]
		public static implicit operator SurfacePoint3(Vector3 d)
		{
			return default(SurfacePoint3);
		}

		[Token(Token = "0x60023E6")]
		[Address(RVA = "0xEB242C", Offset = "0xEB242C", VA = "0xEB242C")]
		public static implicit operator Vector3(SurfacePoint3 d)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60023E7")]
		[Address(RVA = "0xEB22FC", Offset = "0xEB22FC", VA = "0xEB22FC")]
		public static implicit operator SurfacePoint3(RaycastHit d)
		{
			return default(SurfacePoint3);
		}

		[Token(Token = "0x60023E8")]
		[Address(RVA = "0xEB2438", Offset = "0xEB2438", VA = "0xEB2438")]
		public static implicit operator SurfacePoint3(NavMeshHit d)
		{
			return default(SurfacePoint3);
		}
	}

	[Token(Token = "0x2000569")]
	public struct HitComparer : IComparer<RaycastHit>
	{
		[Token(Token = "0x60023E9")]
		[Address(RVA = "0xA8592C", Offset = "0xA8592C", VA = "0xA8592C", Slot = "4")]
		public int Compare(RaycastHit a, RaycastHit b)
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000A12")]
	[Address(RVA = "0xEB161C", Offset = "0xEB161C", VA = "0xEB161C")]
	public static int RaycastNonAllocSorted(Ray ray, RaycastHit[] hits, float maxDistance, int layerMask)
	{
		return default(int);
	}

	[Token(Token = "0x6000A13")]
	[Address(RVA = "0xEB16F0", Offset = "0xEB16F0", VA = "0xEB16F0")]
	public static void ToWorldSpaceCapsule(this CapsuleCollider capsule, out Vector3 point0, out Vector3 point1, out float radius)
	{
	}

	[Token(Token = "0x6000A14")]
	[Address(RVA = "0xEB1CB4", Offset = "0xEB1CB4", VA = "0xEB1CB4")]
	private static Vector3 AbsVec3(Vector3 v)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A15")]
	[Address(RVA = "0xEB1D5C", Offset = "0xEB1D5C", VA = "0xEB1D5C")]
	private static void DebugDraw(Vector3 a, Vector3 b)
	{
	}

	[Token(Token = "0x6000A16")]
	[Address(RVA = "0xEB1E5C", Offset = "0xEB1E5C", VA = "0xEB1E5C")]
	public static SurfacePoint3? ArcCast(Vector3 initialPos, Vector3 initialVelocity, Vector3 constantForce, float arcParticleTime, LayerMask mask, int segments, out GameObject hitSurface, out float hitTime, QueryTriggerInteraction queryTriggerInteraction)
	{
		return null;
	}

	[Token(Token = "0x6000A17")]
	public static T GetClosestCollider<T>(Collider[] colliders, int count, float3 point) where T : class
	{
		return null;
	}
}
[Serializable]
[Token(Token = "0x2000169")]
public class PlatformVisual
{
	[Token(Token = "0x40007E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject Visual;

	[Token(Token = "0x40007EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int QualityLevel;

	[Token(Token = "0x6000A18")]
	[Address(RVA = "0xEC12F4", Offset = "0xEC12F4", VA = "0xEC12F4")]
	public PlatformVisual()
	{
	}
}
[Token(Token = "0x200016A")]
[ExecuteInEditMode]
public class PlatformDependentVisual : MonoBehaviour
{
	[NonSerialized]
	[Token(Token = "0x40007EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject CurrentVisual;

	[Token(Token = "0x40007EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PlatformVisual[] Visuals;

	[Token(Token = "0x6000A19")]
	[Address(RVA = "0xEC11D4", Offset = "0xEC11D4", VA = "0xEC11D4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A1A")]
	[Address(RVA = "0xEC12EC", Offset = "0xEC12EC", VA = "0xEC12EC")]
	public PlatformDependentVisual()
	{
	}
}
[Token(Token = "0x200016B")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9B92B4", Offset = "0x9B92B4")]
public class PlaySfxOnTouch : MonoBehaviour
{
	[Token(Token = "0x40007ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public StudioEventEmitter SfxEvent;

	[Token(Token = "0x6000A1B")]
	[Address(RVA = "0xEC13C8", Offset = "0xEC13C8", VA = "0xEC13C8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A1C")]
	[Address(RVA = "0xEC150C", Offset = "0xEC150C", VA = "0xEC150C")]
	public PlaySfxOnTouch()
	{
	}

	[Token(Token = "0x6000A1D")]
	[Address(RVA = "0xEC1514", Offset = "0xEC1514", VA = "0xEC1514")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9CFEB8", Offset = "0x9CFEB8")]
	private void <Awake>b__1_0(PlayerControllerInput player)
	{
	}
}
[Token(Token = "0x200016C")]
public class PrefabNode : MonoBehaviour
{
	[Token(Token = "0x40007EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject prefab;

	[Token(Token = "0x40007EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject instance;

	[Token(Token = "0x6000A1E")]
	[Address(RVA = "0x10B168C", Offset = "0x10B168C", VA = "0x10B168C")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000A1F")]
	[Address(RVA = "0x10B1900", Offset = "0x10B1900", VA = "0x10B1900")]
	public PrefabNode()
	{
	}
}
[Token(Token = "0x200016D")]
public class PrefabPreview : MonoBehaviour
{
	[Token(Token = "0x40007F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject prefab;

	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject instance;

	[Token(Token = "0x6000A20")]
	[Address(RVA = "0x10B1908", Offset = "0x10B1908", VA = "0x10B1908")]
	public PrefabPreview()
	{
	}
}
[Token(Token = "0x200016E")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x9B9318", Offset = "0x9B9318")]
public class ProbabilityStateModel
{
	[Token(Token = "0x40007F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly int STATE_COUNT;

	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly float[][] binarySearchPModel;

	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool validated;

	[Token(Token = "0x170000C8")]
	public float Item
	{
		[Token(Token = "0x6000A25")]
		[Address(RVA = "0x10B1D54", Offset = "0x10B1D54", VA = "0x10B1D54")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000A24")]
		[Address(RVA = "0x10B1C1C", Offset = "0x10B1C1C", VA = "0x10B1C1C")]
		set
		{
		}
	}

	[Token(Token = "0x6000A21")]
	[Address(RVA = "0x10B1918", Offset = "0x10B1918", VA = "0x10B1918")]
	public ProbabilityStateModel(int uniqueStateCount)
	{
	}

	[Token(Token = "0x6000A22")]
	[Address(RVA = "0x10B1A40", Offset = "0x10B1A40", VA = "0x10B1A40")]
	public void Prepare()
	{
	}

	[Token(Token = "0x6000A23")]
	[Address(RVA = "0x10B1B3C", Offset = "0x10B1B3C", VA = "0x10B1B3C")]
	public int Transition(int currentState)
	{
		return default(int);
	}
}
[Token(Token = "0x200016F")]
public class WeightedRandom
{
	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private readonly float[] stateWeights;

	[Token(Token = "0x6000A26")]
	[Address(RVA = "0xF974D4", Offset = "0xF974D4", VA = "0xF974D4")]
	public WeightedRandom(float[] stateWeights)
	{
	}

	[Token(Token = "0x6000A27")]
	[Address(RVA = "0xF97628", Offset = "0xF97628", VA = "0xF97628")]
	public int Sample()
	{
		return default(int);
	}

	[Token(Token = "0x6000A28")]
	[Address(RVA = "0xF97650", Offset = "0xF97650", VA = "0xF97650")]
	public static int BinarySearchWeightArrayFromSample(float[] stateWeights, float sample)
	{
		return default(int);
	}

	[Token(Token = "0x6000A29")]
	[Address(RVA = "0xF97578", Offset = "0xF97578", VA = "0xF97578")]
	public static void MakeWeightArraySearchable(float[] a)
	{
	}

	[Token(Token = "0x6000A2A")]
	[Address(RVA = "0xF9782C", Offset = "0xF9782C", VA = "0xF9782C")]
	public static void Normalize(float[] a)
	{
	}
}
[Token(Token = "0x2000170")]
public sealed class WeightedSampler<T> : WeightedRandom
{
	[Serializable]
	[Token(Token = "0x200056A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB6B0", Offset = "0x9BB6B0")]
	private sealed class <>c
	{
		[Token(Token = "0x4001783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Func<Tuple<T, float>, float> <>9__1_0;

		[Token(Token = "0x4001785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Func<Tuple<T, float>, T> <>9__1_1;

		[Token(Token = "0x60023EB")]
		public <>c()
		{
		}

		[Token(Token = "0x60023EC")]
		internal float <.ctor>b__1_0(Tuple<T, float> tup)
		{
			return default(float);
		}

		[Token(Token = "0x60023ED")]
		internal T <.ctor>b__1_1(Tuple<T, float> tup)
		{
			return (T)null;
		}
	}

	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private readonly T[] _mappings;

	[Token(Token = "0x6000A2B")]
	public WeightedSampler(params Tuple<T, float>[] typesAndWeights)
	{
	}

	[Token(Token = "0x6000A2C")]
	public new T Sample()
	{
		return (T)null;
	}
}
[Token(Token = "0x2000171")]
public static class QEase
{
	[Token(Token = "0x40007F7")]
	private const float _PiOver2 = (float)Math.PI / 2f;

	[Token(Token = "0x40007F8")]
	private const float _TwoPi = (float)Math.PI * 2f;

	[Token(Token = "0x6000A2D")]
	[Address(RVA = "0x10B4B9C", Offset = "0x10B4B9C", VA = "0x10B4B9C")]
	public static float Eval(float time, Ease easeType = Ease.OutBack, float duration = 1f)
	{
		return default(float);
	}

	[Token(Token = "0x6000A2E")]
	[Address(RVA = "0x10B546C", Offset = "0x10B546C", VA = "0x10B546C")]
	private static float BounceEaseOut(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x6000A2F")]
	[Address(RVA = "0x10B5438", Offset = "0x10B5438", VA = "0x10B5438")]
	private static float BounceEaseIn(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x6000A30")]
	[Address(RVA = "0x10B553C", Offset = "0x10B553C", VA = "0x10B553C")]
	private static float BounceEaseInOut(float t, float b, float c, float d)
	{
		return default(float);
	}
}
[Token(Token = "0x2000172")]
public static class QuaternionExtension
{
	[Token(Token = "0x6000A31")]
	[Address(RVA = "0xD1DFC4", Offset = "0xD1DFC4", VA = "0xD1DFC4")]
	public static Quaternion RelativeRotation(Quaternion from, Quaternion to)
	{
		return default(Quaternion);
	}
}
[Token(Token = "0x2000173")]
public static class RandomExtension
{
	[Token(Token = "0x6000A32")]
	[Address(RVA = "0xD2B638", Offset = "0xD2B638", VA = "0xD2B638")]
	public static float RangeVariance(float value, float variance)
	{
		return default(float);
	}

	[Token(Token = "0x6000A33")]
	[Address(RVA = "0xD2B654", Offset = "0xD2B654", VA = "0xD2B654")]
	public static float NextFloat(this System.Random self)
	{
		return default(float);
	}

	[Token(Token = "0x6000A34")]
	[Address(RVA = "0xD2B68C", Offset = "0xD2B68C", VA = "0xD2B68C")]
	public static bool Boolean()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A35")]
	[Address(RVA = "0xD2B6B8", Offset = "0xD2B6B8", VA = "0xD2B6B8")]
	public static bool Roll(float chance)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A36")]
	[Address(RVA = "0xD2B6EC", Offset = "0xD2B6EC", VA = "0xD2B6EC")]
	public static float CircleRadians()
	{
		return default(float);
	}

	[Token(Token = "0x6000A37")]
	[Address(RVA = "0xD2B700", Offset = "0xD2B700", VA = "0xD2B700")]
	public static float Sign()
	{
		return default(float);
	}
}
[Token(Token = "0x2000174")]
public class RandomGroup : MonoBehaviour
{
	[Token(Token = "0x200056B")]
	public delegate void OnChange(GameObject o);

	[Serializable]
	[Token(Token = "0x200056C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB6C0", Offset = "0x9BB6C0")]
	private sealed class <>c
	{
		[Token(Token = "0x4001786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static OnChange <>9__7_0;

		[Token(Token = "0x60023F3")]
		[Address(RVA = "0xD2C28C", Offset = "0xD2C28C", VA = "0xD2C28C")]
		public <>c()
		{
		}

		[Token(Token = "0x60023F4")]
		[Address(RVA = "0xD2C294", Offset = "0xD2C294", VA = "0xD2C294")]
		internal void <.ctor>b__7_0(GameObject o)
		{
		}
	}

	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OnChange onChange;

	[Token(Token = "0x6000A38")]
	[Address(RVA = "0xD2B784", Offset = "0xD2B784", VA = "0xD2B784")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000A39")]
	[Address(RVA = "0xD2B7DC", Offset = "0xD2B7DC", VA = "0xD2B7DC")]
	public GameObject GetActive()
	{
		return null;
	}

	[Token(Token = "0x6000A3A")]
	[Address(RVA = "0xD2B8B8", Offset = "0xD2B8B8", VA = "0xD2B8B8")]
	public void SetActive(int index)
	{
	}

	[Token(Token = "0x6000A3B")]
	[Address(RVA = "0xD2B788", Offset = "0xD2B788", VA = "0xD2B788")]
	public void Shuffle()
	{
	}

	[Token(Token = "0x6000A3C")]
	[Address(RVA = "0xD2C0F4", Offset = "0xD2C0F4", VA = "0xD2C0F4")]
	public int GetCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000A3D")]
	[Address(RVA = "0xD2C128", Offset = "0xD2C128", VA = "0xD2C128")]
	public RandomGroup()
	{
	}
}
[Token(Token = "0x2000175")]
public class RandomWeightedHelper<T>
{
	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public List<T> choices;

	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public List<float> weights;

	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float sum;

	[Token(Token = "0x6000A3E")]
	public RandomWeightedHelper()
	{
	}

	[Token(Token = "0x6000A3F")]
	public void Add(T t, float weight)
	{
	}

	[Token(Token = "0x6000A40")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000A41")]
	public T GetRandom()
	{
		return (T)null;
	}

	[Token(Token = "0x6000A42")]
	private void RecalculateSum()
	{
	}
}
[Token(Token = "0x2000176")]
public class EditorReadOnlyAttribute : PropertyAttribute
{
	[Token(Token = "0x6000A43")]
	[Address(RVA = "0xFD33E0", Offset = "0xFD33E0", VA = "0xFD33E0")]
	public EditorReadOnlyAttribute()
	{
	}
}
[Token(Token = "0x2000177")]
public class RegisterService : MonoBehaviour
{
	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MonoBehaviour Service;

	[Token(Token = "0x6000A44")]
	[Address(RVA = "0xD2CD74", Offset = "0xD2CD74", VA = "0xD2CD74")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A45")]
	[Address(RVA = "0xD2CE88", Offset = "0xD2CE88", VA = "0xD2CE88")]
	public RegisterService()
	{
	}
}
[Token(Token = "0x2000178")]
public static class RigidbodyExtensions
{
	[Token(Token = "0x6000A46")]
	[Address(RVA = "0xD30280", Offset = "0xD30280", VA = "0xD30280")]
	public static void TorqueTowards(this Rigidbody body, Quaternion targetRot, float torqueMult = 1f, float torqueLimit = 360f)
	{
	}
}
[Token(Token = "0x2000179")]
public class RigMoveDevelopment : MonoBehaviour
{
	[Token(Token = "0x6000A47")]
	[Address(RVA = "0xD30278", Offset = "0xD30278", VA = "0xD30278")]
	public RigMoveDevelopment()
	{
	}
}
[Token(Token = "0x200017A")]
public static class ServiceLocator
{
	[Token(Token = "0x200056D")]
	public interface ILocatableService
	{
	}

	[Token(Token = "0x200056E")]
	private static class DataStore<T>
	{
		[Token(Token = "0x4001788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static T Instance;

		[Token(Token = "0x4001789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Action Awaits;
	}

	[Token(Token = "0x200056F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB6D0", Offset = "0x9BB6D0")]
	private sealed class <>c__DisplayClass3_0<T> where T : class, ILocatableService
	{
		[Token(Token = "0x400178A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Action<T> serviceReady;

		[Token(Token = "0x60023F5")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x60023F6")]
		internal void <Await>b__0()
		{
		}
	}

	[Token(Token = "0x6000A48")]
	public static T Get<T>() where T : class, ILocatableService
	{
		return null;
	}

	[Token(Token = "0x6000A49")]
	public static void Await<T>(Action<T> serviceReady) where T : class, ILocatableService
	{
	}

	[Token(Token = "0x6000A4A")]
	public static void Get<T>(out T t) where T : class, ILocatableService
	{
	}

	[Token(Token = "0x6000A4B")]
	public static void GetIfNull<T>(ref T t) where T : class, ILocatableService
	{
	}

	[Token(Token = "0x6000A4C")]
	public static bool Exists<T>() where T : class, ILocatableService
	{
		return default(bool);
	}

	[Token(Token = "0x6000A4D")]
	public static bool Unbound<T>() where T : class, ILocatableService
	{
		return default(bool);
	}

	[Token(Token = "0x6000A4E")]
	public static T Bind<T>(T t) where T : class, ILocatableService
	{
		return null;
	}

	[Token(Token = "0x6000A4F")]
	public static void Release<T>() where T : class, ILocatableService
	{
	}

	[Token(Token = "0x6000A50")]
	private static bool IsNull<T>(T t) where T : class, ILocatableService
	{
		return default(bool);
	}
}
[Token(Token = "0x200017B")]
public class SingletonMonoBehaviourOnDemand<T> : MonoBehaviour where T : Component
{
	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static T instance;

	[Token(Token = "0x170000C9")]
	public static T Instance
	{
		[Token(Token = "0x6000A51")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000A52")]
	public static T Initialize()
	{
		return null;
	}

	[Token(Token = "0x6000A53")]
	protected void ForceSetInstanceEarly(T obj)
	{
	}

	[Token(Token = "0x6000A54")]
	public SingletonMonoBehaviourOnDemand()
	{
	}
}
[Token(Token = "0x200017C")]
public class SpawnChildFromPrefab : MonoBehaviour
{
	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Prefab;

	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool ZeroLocalPos;

	[Token(Token = "0x6000A55")]
	[Address(RVA = "0xD70258", Offset = "0xD70258", VA = "0xD70258")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A56")]
	[Address(RVA = "0xD70410", Offset = "0xD70410", VA = "0xD70410")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000A57")]
	[Address(RVA = "0xD70414", Offset = "0xD70414", VA = "0xD70414")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000A58")]
	[Address(RVA = "0xD70964", Offset = "0xD70964", VA = "0xD70964")]
	public SpawnChildFromPrefab()
	{
	}
}
[Token(Token = "0x200017D")]
public class SphereVolume : MonoBehaviour
{
	[Token(Token = "0x4000801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Radius;

	[Token(Token = "0x170000CA")]
	public Vector3 Position
	{
		[Token(Token = "0x6000A59")]
		[Address(RVA = "0xD71CA4", Offset = "0xD71CA4", VA = "0xD71CA4")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x6000A5A")]
	[Address(RVA = "0xD71CD8", Offset = "0xD71CD8", VA = "0xD71CD8")]
	public void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000A5B")]
	[Address(RVA = "0xD71D30", Offset = "0xD71D30", VA = "0xD71D30")]
	public SphereVolume()
	{
	}
}
[Token(Token = "0x200017E")]
public class StateNode
{
	[Token(Token = "0x2000570")]
	public delegate void MainFunction();

	[Token(Token = "0x2000571")]
	public delegate void ExitFunction();

	[Token(Token = "0x4000802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string name;

	[Token(Token = "0x4000803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MainFunction main;

	[Token(Token = "0x4000804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ExitFunction exit;

	[Token(Token = "0x4000805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public IEnumerator loop;

	[Token(Token = "0x6000A5C")]
	[Address(RVA = "0xD75960", Offset = "0xD75960", VA = "0xD75960")]
	public StateNode()
	{
	}
}
[Token(Token = "0x200017F")]
public static class StateNodePool
{
	[Token(Token = "0x4000806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Stack<StateNode> pool;

	[Token(Token = "0x6000A5D")]
	[Address(RVA = "0xD76208", Offset = "0xD76208", VA = "0xD76208")]
	public static void Push(StateNode node)
	{
	}

	[Token(Token = "0x6000A5E")]
	[Address(RVA = "0xD762E0", Offset = "0xD762E0", VA = "0xD762E0")]
	public static StateNode Pop()
	{
		return null;
	}
}
[Token(Token = "0x2000180")]
public class StateSequence : MonoBehaviour
{
	[Token(Token = "0x2000572")]
	public delegate bool AbortCondition();

	[Token(Token = "0x2000573")]
	public delegate void AbortFunction();

	[Serializable]
	[Token(Token = "0x2000574")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB6E0", Offset = "0x9BB6E0")]
	private sealed class <>c
	{
		[Token(Token = "0x400178B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400178C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static AbortFunction <>9__20_0;

		[Token(Token = "0x400178D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static StateNode.MainFunction <>9__28_0;

		[Token(Token = "0x6002408")]
		[Address(RVA = "0xD7790C", Offset = "0xD7790C", VA = "0xD7790C")]
		public <>c()
		{
		}

		[Token(Token = "0x6002409")]
		[Address(RVA = "0xD77914", Offset = "0xD77914", VA = "0xD77914")]
		internal void <SetAbort>b__20_0()
		{
		}

		[Token(Token = "0x600240A")]
		[Address(RVA = "0xD77918", Offset = "0xD77918", VA = "0xD77918")]
		internal void <AddBreakpoint>b__28_0()
		{
		}
	}

	[Token(Token = "0x2000575")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB6F0", Offset = "0x9BB6F0")]
	private sealed class <DoRun>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400178E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400178F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StateSequence <>4__this;

		[Token(Token = "0x4001791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private StateNode.ExitFunction <exit>5__2;

		[Token(Token = "0x4001792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private IEnumerator <loop>5__3;

		[Token(Token = "0x17000438")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600240E")]
			[Address(RVA = "0xD78124", Offset = "0xD78124", VA = "0xD78124", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000439")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002410")]
			[Address(RVA = "0xD78194", Offset = "0xD78194", VA = "0xD78194", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600240B")]
		[Address(RVA = "0xD7756C", Offset = "0xD7756C", VA = "0xD7756C")]
		[DebuggerHidden]
		public <DoRun>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x600240C")]
		[Address(RVA = "0xD7797C", Offset = "0xD7797C", VA = "0xD7797C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600240D")]
		[Address(RVA = "0xD77980", Offset = "0xD77980", VA = "0xD77980", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600240F")]
		[Address(RVA = "0xD7812C", Offset = "0xD7812C", VA = "0xD7812C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000576")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB700", Offset = "0x9BB700")]
	private sealed class <DoWaitSeconds>d__36 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x1700043A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002414")]
			[Address(RVA = "0xD78324", Offset = "0xD78324", VA = "0xD78324", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700043B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002416")]
			[Address(RVA = "0xD78394", Offset = "0xD78394", VA = "0xD78394", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002411")]
		[Address(RVA = "0xD776E4", Offset = "0xD776E4", VA = "0xD776E4")]
		[DebuggerHidden]
		public <DoWaitSeconds>d__36(int <>1__state)
		{
		}

		[Token(Token = "0x6002412")]
		[Address(RVA = "0xD78280", Offset = "0xD78280", VA = "0xD78280", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002413")]
		[Address(RVA = "0xD78284", Offset = "0xD78284", VA = "0xD78284", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002415")]
		[Address(RVA = "0xD7832C", Offset = "0xD7832C", VA = "0xD7832C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000577")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB710", Offset = "0x9BB710")]
	private sealed class <DoWait>d__37 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x1700043C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600241A")]
			[Address(RVA = "0xD78208", Offset = "0xD78208", VA = "0xD78208", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700043D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600241C")]
			[Address(RVA = "0xD78278", Offset = "0xD78278", VA = "0xD78278", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002417")]
		[Address(RVA = "0xD7778C", Offset = "0xD7778C", VA = "0xD7778C")]
		[DebuggerHidden]
		public <DoWait>d__37(int <>1__state)
		{
		}

		[Token(Token = "0x6002418")]
		[Address(RVA = "0xD7819C", Offset = "0xD7819C", VA = "0xD7819C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002419")]
		[Address(RVA = "0xD781A0", Offset = "0xD781A0", VA = "0xD781A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600241B")]
		[Address(RVA = "0xD78210", Offset = "0xD78210", VA = "0xD78210", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool running;

	[Token(Token = "0x4000808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool requestCancel;

	[Token(Token = "0x4000809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int NodeIndex;

	[Token(Token = "0x400080A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<StateNode> nodes;

	[Token(Token = "0x400080B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<IEnumerator> pastActions;

	[Token(Token = "0x400080C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<IEnumerator> actions;

	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<Coroutine> actionRoutines;

	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private AbortCondition abortCondition;

	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AbortFunction abortFunction;

	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string DebugStatus;

	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public object DebugInfo;

	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private IEnumerator runEnumerator;

	[Token(Token = "0x6000A60")]
	[Address(RVA = "0xD764A4", Offset = "0xD764A4", VA = "0xD764A4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A61")]
	[Address(RVA = "0xD764A8", Offset = "0xD764A8", VA = "0xD764A8")]
	public void OnScriptReload()
	{
	}

	[Token(Token = "0x6000A62")]
	[Address(RVA = "0xD76704", Offset = "0xD76704", VA = "0xD76704")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000A63")]
	[Address(RVA = "0xD764AC", Offset = "0xD764AC", VA = "0xD764AC")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000A64")]
	[Address(RVA = "0xD76700", Offset = "0xD76700", VA = "0xD76700")]
	public void RebuildDebugText()
	{
	}

	[Token(Token = "0x6000A65")]
	[Address(RVA = "0xD76B08", Offset = "0xD76B08", VA = "0xD76B08")]
	public void Update()
	{
	}

	[Token(Token = "0x6000A66")]
	[Address(RVA = "0xD76C8C", Offset = "0xD76C8C", VA = "0xD76C8C")]
	public void SetAbort(AbortCondition condition, [Optional] AbortFunction function)
	{
	}

	[Token(Token = "0x6000A67")]
	[Address(RVA = "0xD76D80", Offset = "0xD76D80", VA = "0xD76D80")]
	public void SetDebugInfo(object o)
	{
	}

	[Token(Token = "0x6000A68")]
	[Address(RVA = "0xD76D84", Offset = "0xD76D84", VA = "0xD76D84")]
	public int Add(string name, IEnumerator loop)
	{
		return default(int);
	}

	[Token(Token = "0x6000A69")]
	[Address(RVA = "0xD76E94", Offset = "0xD76E94", VA = "0xD76E94")]
	public int AddDebug(string name, IEnumerator loop)
	{
		return default(int);
	}

	[Token(Token = "0x6000A6A")]
	[Address(RVA = "0xD76E9C", Offset = "0xD76E9C", VA = "0xD76E9C")]
	public void Add(string name, StateNode.MainFunction main)
	{
	}

	[Token(Token = "0x6000A6B")]
	[Address(RVA = "0xD76F80", Offset = "0xD76F80", VA = "0xD76F80")]
	public void AddDebug(string name, StateNode.MainFunction main)
	{
	}

	[Token(Token = "0x6000A6C")]
	[Address(RVA = "0xD76F84", Offset = "0xD76F84", VA = "0xD76F84")]
	public void Add(string name, StateNode.MainFunction main, StateNode.ExitFunction exit, IEnumerator loop)
	{
	}

	[Token(Token = "0x6000A6D")]
	[Address(RVA = "0xD77078", Offset = "0xD77078", VA = "0xD77078")]
	public void AddDebug(string name, StateNode.MainFunction main, StateNode.ExitFunction exit, IEnumerator loop)
	{
	}

	[Token(Token = "0x6000A6E")]
	[Address(RVA = "0xD7707C", Offset = "0xD7707C", VA = "0xD7707C")]
	public void AddBreakpoint()
	{
	}

	[Token(Token = "0x6000A6F")]
	[Address(RVA = "0xD771B4", Offset = "0xD771B4", VA = "0xD771B4")]
	public void Run()
	{
	}

	[Token(Token = "0x6000A70")]
	[Address(RVA = "0xD7727C", Offset = "0xD7727C", VA = "0xD7727C")]
	public Coroutine StartAction(IEnumerator action)
	{
		return null;
	}

	[Token(Token = "0x6000A71")]
	[Address(RVA = "0xD77330", Offset = "0xD77330", VA = "0xD77330")]
	public void StopAction(IEnumerator action)
	{
	}

	[Token(Token = "0x6000A72")]
	[Address(RVA = "0xD77444", Offset = "0xD77444", VA = "0xD77444")]
	public void StopAllActions()
	{
	}

	[Token(Token = "0x6000A73")]
	[Address(RVA = "0xD77208", Offset = "0xD77208", VA = "0xD77208")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CFEE8", Offset = "0x9CFEE8")]
	public IEnumerator DoRun()
	{
		return null;
	}

	[Token(Token = "0x6000A74")]
	[Address(RVA = "0xD77598", Offset = "0xD77598", VA = "0xD77598")]
	public bool IsRunning()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A75")]
	[Address(RVA = "0xD775A0", Offset = "0xD775A0", VA = "0xD775A0")]
	public void Cancel()
	{
	}

	[Token(Token = "0x6000A76")]
	[Address(RVA = "0xD77668", Offset = "0xD77668", VA = "0xD77668")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CFF4C", Offset = "0x9CFF4C")]
	public IEnumerator DoWaitSeconds(float time)
	{
		return null;
	}

	[Token(Token = "0x6000A77")]
	[Address(RVA = "0xD77710", Offset = "0xD77710", VA = "0xD77710")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9CFFB0", Offset = "0x9CFFB0")]
	public IEnumerator DoWait(float time)
	{
		return null;
	}

	[Token(Token = "0x6000A78")]
	[Address(RVA = "0xD777B8", Offset = "0xD777B8", VA = "0xD777B8")]
	public StateSequence()
	{
	}
}
[Token(Token = "0x2000181")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9B9370", Offset = "0x9B9370")]
public class StopRigidbodyOnDisable : MonoBehaviour
{
	[Token(Token = "0x6000A79")]
	[Address(RVA = "0xD78D48", Offset = "0xD78D48", VA = "0xD78D48")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A7A")]
	[Address(RVA = "0xD78E84", Offset = "0xD78E84", VA = "0xD78E84")]
	public StopRigidbodyOnDisable()
	{
	}
}
[Token(Token = "0x2000182")]
public class WaitForAnimatorStateTask : MonoBehaviour
{
	[Token(Token = "0x6000A7B")]
	[Address(RVA = "0xF956F0", Offset = "0xF956F0", VA = "0xF956F0")]
	public WaitForAnimatorStateTask()
	{
	}
}
[Token(Token = "0x2000183")]
public static class TextUtils
{
	[Token(Token = "0x6000A7C")]
	[Address(RVA = "0xD7EE28", Offset = "0xD7EE28", VA = "0xD7EE28")]
	public static TextMesh MakeLabel(string text)
	{
		return null;
	}
}
[Serializable]
[Token(Token = "0x2000184")]
public struct TimeSpanStruct
{
	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9C0E18", Offset = "0x9C0E18")]
	public float Seconds;

	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9C0E34", Offset = "0x9C0E34")]
	public float Minutes;

	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9C0E50", Offset = "0x9C0E50")]
	public float Hours;

	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9C0E68", Offset = "0x9C0E68")]
	public float Days;

	[Token(Token = "0x170000CB")]
	public float TotalSeconds
	{
		[Token(Token = "0x6000A7D")]
		[Address(RVA = "0xA8B1A0", Offset = "0xA8B1A0", VA = "0xA8B1A0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000CC")]
	public float TotalSecondsOrSmall
	{
		[Token(Token = "0x6000A7E")]
		[Address(RVA = "0xA8B1E8", Offset = "0xA8B1E8", VA = "0xA8B1E8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000CD")]
	public bool IsZero
	{
		[Token(Token = "0x6000A82")]
		[Address(RVA = "0xA8B2F4", Offset = "0xA8B2F4", VA = "0xA8B2F4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000A7F")]
	[Address(RVA = "0xA8B1F0", Offset = "0xA8B1F0", VA = "0xA8B1F0")]
	public bool Elapsed(float seconds)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A80")]
	[Address(RVA = "0xA8B240", Offset = "0xA8B240", VA = "0xA8B240")]
	public bool Elapsed(double seconds)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A81")]
	[Address(RVA = "0xA8B290", Offset = "0xA8B290", VA = "0xA8B290")]
	public bool Consume(ref float seconds)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A83")]
	[Address(RVA = "0xF829D0", Offset = "0xF829D0", VA = "0xF829D0")]
	public static TimeSpanStruct FromSeconds(float seconds)
	{
		return default(TimeSpanStruct);
	}

	[Token(Token = "0x6000A84")]
	[Address(RVA = "0xF829E0", Offset = "0xF829E0", VA = "0xF829E0")]
	public static implicit operator TimeSpanStruct(float seconds)
	{
		return default(TimeSpanStruct);
	}
}
[Serializable]
[Token(Token = "0x2000185")]
public struct CooldownStruct
{
	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public TimeSpanStruct TimeSpan;

	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float LastTimeOccured;

	[Token(Token = "0x170000CE")]
	private float SampleTime
	{
		[Token(Token = "0x6000A85")]
		[Address(RVA = "0xA853C0", Offset = "0xA853C0", VA = "0xA853C0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000A86")]
	[Address(RVA = "0xA853C4", Offset = "0xA853C4", VA = "0xA853C4")]
	public bool Fire()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A87")]
	[Address(RVA = "0xA853CC", Offset = "0xA853CC", VA = "0xA853CC")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000A88")]
	[Address(RVA = "0xA853F0", Offset = "0xA853F0", VA = "0xA853F0")]
	public void Reset(float delaySeconds)
	{
	}

	[Token(Token = "0x6000A89")]
	[Address(RVA = "0xE72DD0", Offset = "0xE72DD0", VA = "0xE72DD0")]
	public static CooldownStruct FromSeconds(float seconds)
	{
		return default(CooldownStruct);
	}

	[Token(Token = "0x6000A8A")]
	[Address(RVA = "0xE72DE0", Offset = "0xE72DE0", VA = "0xE72DE0")]
	public static implicit operator CooldownStruct(float seconds)
	{
		return default(CooldownStruct);
	}
}
[Token(Token = "0x2000186")]
public struct Cooldown
{
	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float Duration;

	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float LastTimeOccured;

	[Token(Token = "0x170000CF")]
	private float SampleTime
	{
		[Token(Token = "0x6000A8B")]
		[Address(RVA = "0xA85328", Offset = "0xA85328", VA = "0xA85328")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000D0")]
	private float Elapsed
	{
		[Token(Token = "0x6000A8C")]
		[Address(RVA = "0xA8532C", Offset = "0xA8532C", VA = "0xA8532C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000D1")]
	public float Progress
	{
		[Token(Token = "0x6000A8D")]
		[Address(RVA = "0xA85354", Offset = "0xA85354", VA = "0xA85354")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000D2")]
	public bool InProgress
	{
		[Token(Token = "0x6000A91")]
		[Address(RVA = "0xA85390", Offset = "0xA85390", VA = "0xA85390")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000A8E")]
	[Address(RVA = "0xA8535C", Offset = "0xA8535C", VA = "0xA8535C")]
	public bool Fire()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A8F")]
	[Address(RVA = "0xA85364", Offset = "0xA85364", VA = "0xA85364")]
	public bool Fire(float varianceSeconds)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A90")]
	[Address(RVA = "0xA8536C", Offset = "0xA8536C", VA = "0xA8536C")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000A92")]
	[Address(RVA = "0xE72C28", Offset = "0xE72C28", VA = "0xE72C28")]
	public static Cooldown FromSeconds(float seconds)
	{
		return default(Cooldown);
	}

	[Token(Token = "0x6000A93")]
	[Address(RVA = "0xE72C50", Offset = "0xE72C50", VA = "0xE72C50")]
	public static implicit operator Cooldown(float seconds)
	{
		return default(Cooldown);
	}

	[Token(Token = "0x6000A94")]
	[Address(RVA = "0xE72C78", Offset = "0xE72C78", VA = "0xE72C78")]
	public static implicit operator bool(Cooldown cooldown)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000187")]
public static class TransformExtension
{
	[Token(Token = "0x6000A95")]
	[Address(RVA = "0xF831D4", Offset = "0xF831D4", VA = "0xF831D4")]
	public static void CopyTransformLocal(this Transform a, Transform src)
	{
	}

	[Token(Token = "0x6000A96")]
	[Address(RVA = "0xF832E0", Offset = "0xF832E0", VA = "0xF832E0")]
	public static void ResetLocalPos(this Transform a)
	{
	}

	[Token(Token = "0x6000A97")]
	[Address(RVA = "0xF83384", Offset = "0xF83384", VA = "0xF83384")]
	public static void ResetLocalRot(this Transform a)
	{
	}

	[Token(Token = "0x6000A98")]
	[Address(RVA = "0xF83430", Offset = "0xF83430", VA = "0xF83430")]
	public static void ResetLocalScale(this Transform a)
	{
	}

	[Token(Token = "0x6000A99")]
	[Address(RVA = "0xF834D4", Offset = "0xF834D4", VA = "0xF834D4")]
	public static void ResetAll(this Transform a)
	{
	}

	[Token(Token = "0x6000A9A")]
	[Address(RVA = "0xF83610", Offset = "0xF83610", VA = "0xF83610")]
	public static void ResetPosRot(this Transform a)
	{
	}

	[Token(Token = "0x6000A9B")]
	[Address(RVA = "0xF83714", Offset = "0xF83714", VA = "0xF83714")]
	public static Transform[] GetDecendents(this Transform transform, bool includeSelf = false)
	{
		return null;
	}
}
[Serializable]
[Token(Token = "0x2000188")]
public struct TransformStruct
{
	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 Position;

	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 EulerRotation;

	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 Scale;

	[Token(Token = "0x6000A9C")]
	[Address(RVA = "0xA8B344", Offset = "0xA8B344", VA = "0xA8B344")]
	public void Apply(Transform transform)
	{
	}

	[Token(Token = "0x6000A9D")]
	[Address(RVA = "0xA8B34C", Offset = "0xA8B34C", VA = "0xA8B34C")]
	public void ApplyLocal(Transform transform)
	{
	}

	[Token(Token = "0x6000A9E")]
	[Address(RVA = "0xA8B354", Offset = "0xA8B354", VA = "0xA8B354")]
	public void ApplyLocalWithoutScale(Transform transform)
	{
	}
}
[Token(Token = "0x2000189")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9B93E4", Offset = "0x9B93E4")]
public class TriggerOnRigidbodyForce : MonoBehaviour, IWaterReceiver
{
	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float MinForce;

	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public CooldownStruct TriggerCooldown;

	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float WaterForceMod;

	[Token(Token = "0x4000821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool PunchScaleOnHit;

	[Token(Token = "0x1400001A")]
	public event Action OnTrigger
	{
		[Token(Token = "0x6000A9F")]
		[Address(RVA = "0xF83C00", Offset = "0xF83C00", VA = "0xF83C00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D0084", Offset = "0x9D0084")]
		add
		{
		}
		[Token(Token = "0x6000AA0")]
		[Address(RVA = "0xF83CEC", Offset = "0xF83CEC", VA = "0xF83CEC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D0094", Offset = "0x9D0094")]
		remove
		{
		}
	}

	[Token(Token = "0x6000AA1")]
	[Address(RVA = "0xF83DD8", Offset = "0xF83DD8", VA = "0xF83DD8")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000AA2")]
	[Address(RVA = "0xF83DE4", Offset = "0xF83DE4", VA = "0xF83DE4")]
	public void OnCollisionEnter(Collision col)
	{
	}

	[Token(Token = "0x6000AA3")]
	[Address(RVA = "0xF83F08", Offset = "0xF83F08", VA = "0xF83F08", Slot = "4")]
	public void ReceiveWater(float waterAmount, Vector3? worldPosition, InputHandedness? hand, Vector3? worldVelocity)
	{
	}

	[Token(Token = "0x6000AA4")]
	[Address(RVA = "0xF84078", Offset = "0xF84078", VA = "0xF84078")]
	public TriggerOnRigidbodyForce()
	{
	}
}
[Serializable]
[Token(Token = "0x200018A")]
public struct TupleStruct<T1, T2>
{
	[Token(Token = "0x4000823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T1 First;

	[Token(Token = "0x4000824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T2 Second;
}
[Serializable]
[Token(Token = "0x200018B")]
public struct TupleStruct<T1, T2, T3>
{
	[Token(Token = "0x4000825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T1 First;

	[Token(Token = "0x4000826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T2 Second;

	[Token(Token = "0x4000827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T3 Third;
}
[Token(Token = "0x200018C")]
public static class TypedObjectTracking<T> where T : Component
{
	[NonSerialized]
	[Token(Token = "0x4000828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<T> Instances;

	[Token(Token = "0x6000AA5")]
	public static void OnEnable(T instance)
	{
	}

	[Token(Token = "0x6000AA6")]
	public static void OnDisable(T instance)
	{
	}

	[Token(Token = "0x6000AA7")]
	public static void DisableAll()
	{
	}

	[Token(Token = "0x6000AA8")]
	public static void DestroyAll()
	{
	}

	[Token(Token = "0x6000AA9")]
	public static T FindFarthest(Vector3 point, float minDistance = 0f, float maxDistance = float.MaxValue)
	{
		return null;
	}

	[Token(Token = "0x6000AAA")]
	public static T FindNearest(Vector3 point)
	{
		return null;
	}

	[Token(Token = "0x6000AAB")]
	public static T FindNearestExcludeType(Vector3 point, Type exclude)
	{
		return null;
	}

	[Token(Token = "0x6000AAC")]
	public static float FindNearestDistance(Vector3 point)
	{
		return default(float);
	}

	[Token(Token = "0x6000AAD")]
	public static T FindRandom()
	{
		return null;
	}

	[Token(Token = "0x6000AAE")]
	public static T FindRandomExclude(T exclude)
	{
		return null;
	}

	[Token(Token = "0x6000AAF")]
	public static List<T> FindClosest(Vector3 point, int count)
	{
		return null;
	}
}
[Token(Token = "0x200018D")]
public static class VectorExtension
{
	[Token(Token = "0x6000AB1")]
	[Address(RVA = "0xF8F13C", Offset = "0xF8F13C", VA = "0xF8F13C")]
	public static Vector3 UnitCircleXY(float degrees)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000AB2")]
	[Address(RVA = "0xF8F1F0", Offset = "0xF8F1F0", VA = "0xF8F1F0")]
	public static Vector3 UnitCircleXZ(float degrees)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000AB3")]
	[Address(RVA = "0xF8F2A4", Offset = "0xF8F2A4", VA = "0xF8F2A4")]
	public static Vector3 Lerp(Vector3 a, Vector3 b, Vector3 coeff)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000AB4")]
	[Address(RVA = "0xF8F390", Offset = "0xF8F390", VA = "0xF8F390")]
	public static Vector3 Div(this Vector3 a, Vector3 b)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000AB5")]
	[Address(RVA = "0xF8F3A0", Offset = "0xF8F3A0", VA = "0xF8F3A0")]
	public static Vector3 ToVector3(this Vector4 a)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000AB6")]
	[Address(RVA = "0xF8F3D4", Offset = "0xF8F3D4", VA = "0xF8F3D4")]
	public static Vector4 ToVector4(this Vector3 a, float w = 0f)
	{
		return default(Vector4);
	}

	[Token(Token = "0x6000AB7")]
	[Address(RVA = "0xF8F404", Offset = "0xF8F404", VA = "0xF8F404")]
	public static Vector4 ToVector4(this Color a)
	{
		return default(Vector4);
	}

	[Token(Token = "0x6000AB8")]
	[Address(RVA = "0xF8F434", Offset = "0xF8F434", VA = "0xF8F434")]
	public static Vector3 Invert(this Vector3 a)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000AB9")]
	[Address(RVA = "0xF8F478", Offset = "0xF8F478", VA = "0xF8F478")]
	public static Vector3 FlattenXZ(this Vector3 a)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000ABA")]
	[Address(RVA = "0xF8F480", Offset = "0xF8F480", VA = "0xF8F480")]
	public static Vector4 Clamp(this Vector4 a, Vector4 minVal, Vector4 maxVal)
	{
		return default(Vector4);
	}

	[Token(Token = "0x6000ABB")]
	[Address(RVA = "0xF8F590", Offset = "0xF8F590", VA = "0xF8F590")]
	public static Vector4 Clamp01(this Vector4 a)
	{
		return default(Vector4);
	}

	[Token(Token = "0x6000ABC")]
	[Address(RVA = "0xF8F670", Offset = "0xF8F670", VA = "0xF8F670")]
	public static Vector3 Clamp(this Vector3 a, Vector3 minVal, Vector3 maxVal)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000ABD")]
	[Address(RVA = "0xF8F75C", Offset = "0xF8F75C", VA = "0xF8F75C")]
	public static Vector3 Clamp01(this Vector3 a)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000ABE")]
	[Address(RVA = "0xF8F824", Offset = "0xF8F824", VA = "0xF8F824")]
	public static float LargestDimensionXYZ(this Vector3 self)
	{
		return default(float);
	}

	[Token(Token = "0x6000ABF")]
	[Address(RVA = "0xF8F868", Offset = "0xF8F868", VA = "0xF8F868")]
	public static float SafeMagnitude(this Vector3 v)
	{
		return default(float);
	}

	[Token(Token = "0x6000AC0")]
	[Address(RVA = "0xF8F8F8", Offset = "0xF8F8F8", VA = "0xF8F8F8")]
	public static Vector3 SafeNormalize(this Vector3 v)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000AC1")]
	[Address(RVA = "0xF8F9BC", Offset = "0xF8F9BC", VA = "0xF8F9BC")]
	public static Vector3 SafeNormalizeOr(this Vector3 v, Vector3 fallback)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000AC2")]
	[Address(RVA = "0xF8F8BC", Offset = "0xF8F8BC", VA = "0xF8F8BC")]
	public static bool IsZeroEpsilon(this Vector3 self)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AC3")]
	[Address(RVA = "0xF8FAD4", Offset = "0xF8FAD4", VA = "0xF8FAD4")]
	public static Vector3 GetPointAlongArc(Vector3 start, Vector3 startVelocity, float time)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000AC4")]
	[Address(RVA = "0xF8FC00", Offset = "0xF8FC00", VA = "0xF8FC00")]
	public static Vector3 ClosestPointOnLine(Vector3 lineA, Vector3 lineB, Vector3 point)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000AC5")]
	[Address(RVA = "0xF8FDEC", Offset = "0xF8FDEC", VA = "0xF8FDEC")]
	public static float InitialSpeedForArcShot(Vector3 start, Vector3 end, float angleInDegrees)
	{
		return default(float);
	}

	[Token(Token = "0x6000AC6")]
	[Address(RVA = "0xF8FF80", Offset = "0xF8FF80", VA = "0xF8FF80")]
	public static float TimeOfArcShot(Vector3 start, Vector3 end, float angleInDegrees, float initialSpeed)
	{
		return default(float);
	}

	[Token(Token = "0x6000AC7")]
	[Address(RVA = "0xF900A0", Offset = "0xF900A0", VA = "0xF900A0")]
	public static Vector3 SetX(this Vector3 vector, float x)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000AC8")]
	[Address(RVA = "0xF900D8", Offset = "0xF900D8", VA = "0xF900D8")]
	public static Vector3 SetY(this Vector3 vector, float y)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000AC9")]
	[Address(RVA = "0xF90110", Offset = "0xF90110", VA = "0xF90110")]
	public static Vector3 SetZ(this Vector3 vector, float z)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000ACA")]
	[Address(RVA = "0xF90148", Offset = "0xF90148", VA = "0xF90148")]
	public static Vector3 SetXZ(this Vector3 vector, float x, float z)
	{
		return default(Vector3);
	}
}
[Token(Token = "0x200018E")]
public class WorldQuery
{
	[Serializable]
	[Token(Token = "0x2000578")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB720", Offset = "0x9BB720")]
	private sealed class <>c__6<T>
	{
		[Token(Token = "0x4001799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c__6<T> <>9;

		[Token(Token = "0x400179A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Predicate<GameObject> <>9__6_0;

		[Token(Token = "0x600241E")]
		public <>c__6()
		{
		}

		[Token(Token = "0x600241F")]
		internal bool <FilterByComponent>b__6_0(GameObject x)
		{
			return default(bool);
		}
	}

	[Serializable]
	[Token(Token = "0x2000579")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB730", Offset = "0x9BB730")]
	private sealed class <>c__7<T>
	{
		[Token(Token = "0x400179B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c__7<T> <>9;

		[Token(Token = "0x400179C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Comparison<GameObject> <>9__7_0;

		[Token(Token = "0x6002421")]
		public <>c__7()
		{
		}

		[Token(Token = "0x6002422")]
		internal int <FilterSortByComponent>b__7_0(GameObject a, GameObject b)
		{
			return default(int);
		}
	}

	[Token(Token = "0x200057A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB740", Offset = "0x9BB740")]
	private sealed class <>c__DisplayClass9_0
	{
		[Token(Token = "0x400179D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 pos;

		[Token(Token = "0x6002423")]
		[Address(RVA = "0xF9AA80", Offset = "0xF9AA80", VA = "0xF9AA80")]
		public <>c__DisplayClass9_0()
		{
		}

		[Token(Token = "0x6002424")]
		[Address(RVA = "0xF9BD88", Offset = "0xF9BD88", VA = "0xF9BD88")]
		internal int <FilterNearest>b__0(GameObject a, GameObject b)
		{
			return default(int);
		}
	}

	[Token(Token = "0x200057B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB750", Offset = "0x9BB750")]
	private sealed class <>c__DisplayClass10_0
	{
		[Token(Token = "0x400179E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WorldQuery <>4__this;

		[Token(Token = "0x400179F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject src;

		[Token(Token = "0x6002425")]
		[Address(RVA = "0xF9AB70", Offset = "0xF9AB70", VA = "0xF9AB70")]
		public <>c__DisplayClass10_0()
		{
		}

		[Token(Token = "0x6002426")]
		[Address(RVA = "0xF9BD08", Offset = "0xF9BD08", VA = "0xF9BD08")]
		internal int <FilterNearestBetween>b__0(GameObject a, GameObject b)
		{
			return default(int);
		}
	}

	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Collider[] cache;

	[Token(Token = "0x400082A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<GameObject> results;

	[Token(Token = "0x6000ACB")]
	public List<GameObject> ScanSphereByComponent<T>(GameObject src, float radius, LayerMask mask, QueryTriggerInteraction trigger = QueryTriggerInteraction.Ignore) where T : Component
	{
		return null;
	}

	[Token(Token = "0x6000ACC")]
	public List<GameObject> ScanSphereByComponent<T>(Vector3 pos, float radius, LayerMask mask, QueryTriggerInteraction trigger = QueryTriggerInteraction.Ignore) where T : Component
	{
		return null;
	}

	[Token(Token = "0x6000ACD")]
	public List<GameObject> ScanSphereByComponentMerge<T>(GameObject src, float radius, LayerMask mask, QueryTriggerInteraction trigger = QueryTriggerInteraction.Ignore) where T : Component
	{
		return null;
	}

	[Token(Token = "0x6000ACE")]
	public List<GameObject> ScanSphereByComponentMerge<T>(Vector3 pos, float radius, LayerMask mask, QueryTriggerInteraction trigger = QueryTriggerInteraction.Ignore) where T : Component
	{
		return null;
	}

	[Token(Token = "0x6000ACF")]
	public void FilterByComponent<T>()
	{
	}

	[Token(Token = "0x6000AD0")]
	public void FilterSortByComponent<T>()
	{
	}

	[Token(Token = "0x6000AD1")]
	[Address(RVA = "0xF9A940", Offset = "0xF9A940", VA = "0xF9A940")]
	public void FilterNearest(GameObject src)
	{
	}

	[Token(Token = "0x6000AD2")]
	[Address(RVA = "0xF9A994", Offset = "0xF9A994", VA = "0xF9A994")]
	public void FilterNearest(Vector3 pos)
	{
	}

	[Token(Token = "0x6000AD3")]
	[Address(RVA = "0xF9AA88", Offset = "0xF9AA88", VA = "0xF9AA88")]
	public void FilterNearestBetween(GameObject src)
	{
	}

	[Token(Token = "0x6000AD4")]
	[Address(RVA = "0xF9AB78", Offset = "0xF9AB78", VA = "0xF9AB78")]
	public void FilterShuffle(GameObject src)
	{
	}

	[Token(Token = "0x6000AD5")]
	[Address(RVA = "0xF9ACE0", Offset = "0xF9ACE0", VA = "0xF9ACE0")]
	public void FilterRemoveIfUnlessRemovesAll(Predicate<GameObject> predicate)
	{
	}

	[Token(Token = "0x6000AD6")]
	[Address(RVA = "0xF9ADDC", Offset = "0xF9ADDC", VA = "0xF9ADDC")]
	public void FilterRemoveIf(Predicate<GameObject> predicate)
	{
	}

	[Token(Token = "0x6000AD7")]
	[Address(RVA = "0xF9AE4C", Offset = "0xF9AE4C", VA = "0xF9AE4C")]
	public void FilterN(int n)
	{
	}

	[Token(Token = "0x6000AD8")]
	[Address(RVA = "0xF9AF24", Offset = "0xF9AF24", VA = "0xF9AF24")]
	public bool CalcDistanceCheckWithin(GameObject src, Vector3 target, float range)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AD9")]
	[Address(RVA = "0xF9B048", Offset = "0xF9B048", VA = "0xF9B048")]
	public bool CalcDistanceCheckWithin(GameObject src, GameObject dst, float range)
	{
		return default(bool);
	}

	[Token(Token = "0x6000ADA")]
	[Address(RVA = "0xF9B190", Offset = "0xF9B190", VA = "0xF9B190")]
	public float CalcDistanceBetween(GameObject src, GameObject dst)
	{
		return default(float);
	}

	[Token(Token = "0x6000ADB")]
	[Address(RVA = "0xF9B2B8", Offset = "0xF9B2B8", VA = "0xF9B2B8")]
	public float CalcDistanceBetween(GameObject src, Vector3 target)
	{
		return default(float);
	}

	[Token(Token = "0x6000ADC")]
	[Address(RVA = "0xF9B3B4", Offset = "0xF9B3B4", VA = "0xF9B3B4")]
	public Vector3 CalcAverageCenter()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000ADD")]
	[Address(RVA = "0xF9B5D0", Offset = "0xF9B5D0", VA = "0xF9B5D0")]
	public static Vector3 QuickRay(GameObject src, Vector3 dst, LayerMask mask)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000ADE")]
	[Address(RVA = "0xF9B8D0", Offset = "0xF9B8D0", VA = "0xF9B8D0")]
	public static Vector3 QuickRay(Vector3 src, Vector3 dst, LayerMask mask)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000ADF")]
	[Address(RVA = "0xF9BA34", Offset = "0xF9BA34", VA = "0xF9BA34")]
	public static Vector3 QuickRayTerrainHeight(Vector3 pos, float height, float range = 100f)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000AE0")]
	public static T QuickFindNearestComponent<T>(GameObject src, float range, LayerMask mask) where T : Component
	{
		return null;
	}

	[Token(Token = "0x6000AE1")]
	public static T QuickFindNearestComponent<T>(Vector3 pos, float range, LayerMask mask) where T : Component
	{
		return null;
	}

	[Token(Token = "0x6000AE2")]
	public static int QuickCount<T>(Vector3 pos, float range, LayerMask mask) where T : Component
	{
		return default(int);
	}

	[Token(Token = "0x6000AE3")]
	[Address(RVA = "0xF9BC34", Offset = "0xF9BC34", VA = "0xF9BC34")]
	public WorldQuery()
	{
	}
}
[Token(Token = "0x200018F")]
public class ActiveIfHeadsetMissing : MonoBehaviour
{
	[Token(Token = "0x400082B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject active;

	[Token(Token = "0x6000AE5")]
	[Address(RVA = "0xB97C34", Offset = "0xB97C34", VA = "0xB97C34")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AE6")]
	[Address(RVA = "0xB97CBC", Offset = "0xB97CBC", VA = "0xB97CBC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AE7")]
	[Address(RVA = "0xB97D88", Offset = "0xB97D88", VA = "0xB97D88")]
	public ActiveIfHeadsetMissing()
	{
	}
}
[Token(Token = "0x2000190")]
public class AddOculusTilt : MonoBehaviour
{
	[Token(Token = "0x400082C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 tilt;

	[Token(Token = "0x6000AE8")]
	[Address(RVA = "0xB97D90", Offset = "0xB97D90", VA = "0xB97D90")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AE9")]
	[Address(RVA = "0xB97E74", Offset = "0xB97E74", VA = "0xB97E74")]
	public AddOculusTilt()
	{
	}
}
[Token(Token = "0x2000191")]
public class CameraStabilizer : MonoBehaviour
{
	[Token(Token = "0x400082D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform cameraToTrack;

	[Token(Token = "0x400082E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool autoFindHead;

	[Token(Token = "0x400082F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float rotSlerpFactor;

	[Token(Token = "0x4000830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float posLerpFactor;

	[Token(Token = "0x4000831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 oldPos;

	[Token(Token = "0x4000832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Quaternion oldRot;

	[Token(Token = "0x6000AEA")]
	[Address(RVA = "0xBB1E4C", Offset = "0xBB1E4C", VA = "0xBB1E4C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000AEB")]
	[Address(RVA = "0xBB1F80", Offset = "0xBB1F80", VA = "0xBB1F80")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000AEC")]
	[Address(RVA = "0xBB2004", Offset = "0xBB2004", VA = "0xBB2004")]
	private void OnTeleport(LocomotionService.Messages.PostLocomotionTeleportGlobalMessage message)
	{
	}

	[Token(Token = "0x6000AED")]
	[Address(RVA = "0xBB2120", Offset = "0xBB2120", VA = "0xBB2120")]
	public void LateUpdate()
	{
	}

	[Token(Token = "0x6000AEE")]
	[Address(RVA = "0xBB24DC", Offset = "0xBB24DC", VA = "0xBB24DC")]
	public CameraStabilizer()
	{
	}
}
[Token(Token = "0x2000192")]
public class ConnectControllersDialog : MonoBehaviour
{
	[Token(Token = "0x4000833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject popupRoot;

	[Token(Token = "0x4000834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject hmdMissingRoot;

	[Token(Token = "0x4000835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x9C0E90", Offset = "0x9C0E90")]
	public Sprite unboundSprite;

	[Token(Token = "0x4000836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Sprite boundSprite;

	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public SpriteRenderer leftSprite;

	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public SpriteRenderer rightSprite;

	[Token(Token = "0x6000AEF")]
	[Address(RVA = "0xE6FF90", Offset = "0xE6FF90", VA = "0xE6FF90")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AF0")]
	[Address(RVA = "0xE701E4", Offset = "0xE701E4", VA = "0xE701E4")]
	public ConnectControllersDialog()
	{
	}
}
[Token(Token = "0x2000193")]
public class DemoMode : MonoBehaviour
{
	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PresetCollider[] toSimulateHit;

	[Token(Token = "0x6000AF1")]
	[Address(RVA = "0xE7C414", Offset = "0xE7C414", VA = "0xE7C414")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AF2")]
	[Address(RVA = "0xE7C514", Offset = "0xE7C514", VA = "0xE7C514")]
	private void OnLoadingComplete(PlayerSpawnedInGardenMessage message)
	{
	}

	[Token(Token = "0x6000AF3")]
	[Address(RVA = "0xE7C674", Offset = "0xE7C674", VA = "0xE7C674")]
	public DemoMode()
	{
	}
}
[Token(Token = "0x2000194")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9B9458", Offset = "0x9B9458")]
public class DynamicBone : MonoBehaviour
{
	[Token(Token = "0x200057C")]
	public enum UpdateMode
	{
		[Token(Token = "0x40017A1")]
		Normal,
		[Token(Token = "0x40017A2")]
		AnimatePhysics,
		[Token(Token = "0x40017A3")]
		UnscaledTime
	}

	[Token(Token = "0x200057D")]
	public enum FreezeAxis
	{
		[Token(Token = "0x40017A5")]
		None,
		[Token(Token = "0x40017A6")]
		X,
		[Token(Token = "0x40017A7")]
		Y,
		[Token(Token = "0x40017A8")]
		Z
	}

	[Token(Token = "0x200057E")]
	private class Particle
	{
		[Token(Token = "0x40017A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform m_Transform;

		[Token(Token = "0x40017AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int m_ParentIndex;

		[Token(Token = "0x40017AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m_Damping;

		[Token(Token = "0x40017AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m_Elasticity;

		[Token(Token = "0x40017AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m_Stiffness;

		[Token(Token = "0x40017AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m_Inert;

		[Token(Token = "0x40017AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m_Radius;

		[Token(Token = "0x40017B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m_BoneLength;

		[Token(Token = "0x40017B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 m_Position;

		[Token(Token = "0x40017B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 m_PrevPosition;

		[Token(Token = "0x40017B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Vector3 m_EndOffset;

		[Token(Token = "0x40017B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Vector3 m_InitLocalPosition;

		[Token(Token = "0x40017B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public Quaternion m_InitLocalRotation;

		[Token(Token = "0x6002427")]
		[Address(RVA = "0xFD1508", Offset = "0xFD1508", VA = "0xFD1508")]
		public Particle()
		{
		}
	}

	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform m_Root;

	[Token(Token = "0x400083B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_UpdateRate;

	[Token(Token = "0x400083C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public UpdateMode m_UpdateMode;

	[Token(Token = "0x400083D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9C0EA0", Offset = "0x9C0EA0")]
	public float m_Damping;

	[Token(Token = "0x400083E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve m_DampingDistrib;

	[Token(Token = "0x400083F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9C0EB8", Offset = "0x9C0EB8")]
	public float m_Elasticity;

	[Token(Token = "0x4000840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AnimationCurve m_ElasticityDistrib;

	[Token(Token = "0x4000841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9C0ED0", Offset = "0x9C0ED0")]
	public float m_Stiffness;

	[Token(Token = "0x4000842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AnimationCurve m_StiffnessDistrib;

	[Token(Token = "0x4000843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9C0EE8", Offset = "0x9C0EE8")]
	public float m_Inert;

	[Token(Token = "0x4000844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AnimationCurve m_InertDistrib;

	[Token(Token = "0x4000845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float m_Radius;

	[Token(Token = "0x4000846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AnimationCurve m_RadiusDistrib;

	[Token(Token = "0x4000847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float m_EndLength;

	[Token(Token = "0x4000848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public Vector3 m_EndOffset;

	[Token(Token = "0x4000849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector3 m_Gravity;

	[Token(Token = "0x400084A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public Vector3 m_Force;

	[Token(Token = "0x400084B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public List<DynamicBoneColliderBase> m_Colliders;

	[Token(Token = "0x400084C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public List<Transform> m_Exclusions;

	[Token(Token = "0x400084D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public FreezeAxis m_FreezeAxis;

	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public bool m_DistantDisable;

	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Transform m_ReferenceObject;

	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float m_DistanceToObject;

	[Token(Token = "0x4000851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private Vector3 m_LocalGravity;

	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Vector3 m_ObjectMove;

	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private Vector3 m_ObjectPrevPosition;

	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float m_BoneTotalLength;

	[Token(Token = "0x4000855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private float m_ObjectScale;

	[Token(Token = "0x4000856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private float m_Time;

	[Token(Token = "0x4000857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private float m_Weight;

	[Token(Token = "0x4000858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private bool m_DistantDisabled;

	[Token(Token = "0x4000859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private List<Particle> m_Particles;

	[Token(Token = "0x6000AF4")]
	[Address(RVA = "0xFCE4A0", Offset = "0xFCE4A0", VA = "0xFCE4A0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AF5")]
	[Address(RVA = "0xFCE664", Offset = "0xFCE664", VA = "0xFCE664")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000AF6")]
	[Address(RVA = "0xFCE6B8", Offset = "0xFCE6B8", VA = "0xFCE6B8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AF7")]
	[Address(RVA = "0xFCE6E8", Offset = "0xFCE6E8", VA = "0xFCE6E8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000AF8")]
	[Address(RVA = "0xFCE694", Offset = "0xFCE694", VA = "0xFCE694")]
	private void PreUpdate()
	{
	}

	[Token(Token = "0x6000AF9")]
	[Address(RVA = "0xFCE748", Offset = "0xFCE748", VA = "0xFCE748")]
	private void CheckDistance()
	{
	}

	[Token(Token = "0x6000AFA")]
	[Address(RVA = "0xFCEF0C", Offset = "0xFCEF0C", VA = "0xFCEF0C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000AFB")]
	[Address(RVA = "0xFCEF10", Offset = "0xFCEF10", VA = "0xFCEF10")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000AFC")]
	[Address(RVA = "0xFCEF14", Offset = "0xFCEF14", VA = "0xFCEF14")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000AFD")]
	[Address(RVA = "0xFCF030", Offset = "0xFCF030", VA = "0xFCF030")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000AFE")]
	[Address(RVA = "0xFCF228", Offset = "0xFCF228", VA = "0xFCF228")]
	public void SetWeight(float w)
	{
	}

	[Token(Token = "0x6000AFF")]
	[Address(RVA = "0xFCF284", Offset = "0xFCF284", VA = "0xFCF284")]
	public float GetWeight()
	{
		return default(float);
	}

	[Token(Token = "0x6000B00")]
	[Address(RVA = "0xFCE968", Offset = "0xFCE968", VA = "0xFCE968")]
	private void UpdateDynamicBones(float t)
	{
	}

	[Token(Token = "0x6000B01")]
	[Address(RVA = "0xFCE4A4", Offset = "0xFCE4A4", VA = "0xFCE4A4")]
	private void SetupParticles()
	{
	}

	[Token(Token = "0x6000B02")]
	[Address(RVA = "0xFD0924", Offset = "0xFD0924", VA = "0xFD0924")]
	private void AppendParticles(Transform b, int parentIndex, float boneLength)
	{
	}

	[Token(Token = "0x6000B03")]
	[Address(RVA = "0xFD110C", Offset = "0xFD110C", VA = "0xFD110C")]
	public void UpdateParameters()
	{
	}

	[Token(Token = "0x6000B04")]
	[Address(RVA = "0xFCEBD8", Offset = "0xFCEBD8", VA = "0xFCEBD8")]
	private void InitTransforms()
	{
	}

	[Token(Token = "0x6000B05")]
	[Address(RVA = "0xFCED48", Offset = "0xFCED48", VA = "0xFCED48")]
	private void ResetParticlesPosition()
	{
	}

	[Token(Token = "0x6000B06")]
	[Address(RVA = "0xFCF28C", Offset = "0xFCF28C", VA = "0xFCF28C")]
	private void UpdateParticles1()
	{
	}

	[Token(Token = "0x6000B07")]
	[Address(RVA = "0xFCF624", Offset = "0xFCF624", VA = "0xFCF624")]
	private void UpdateParticles2()
	{
	}

	[Token(Token = "0x6000B08")]
	[Address(RVA = "0xFCFEB0", Offset = "0xFCFEB0", VA = "0xFCFEB0")]
	private void SkipUpdateParticles()
	{
	}

	[Token(Token = "0x6000B09")]
	[Address(RVA = "0xFD15E8", Offset = "0xFD15E8", VA = "0xFD15E8")]
	private static Vector3 MirrorVector(Vector3 v, Vector3 axis)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000B0A")]
	[Address(RVA = "0xFD05B0", Offset = "0xFD05B0", VA = "0xFD05B0")]
	private void ApplyParticlesToTransforms()
	{
	}

	[Token(Token = "0x6000B0B")]
	[Address(RVA = "0xFD16C8", Offset = "0xFD16C8", VA = "0xFD16C8")]
	public DynamicBone()
	{
	}
}
[Token(Token = "0x2000195")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9B9490", Offset = "0x9B9490")]
public class DynamicBoneCollider : DynamicBoneColliderBase
{
	[Token(Token = "0x400085A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float m_Radius;

	[Token(Token = "0x400085B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float m_Height;

	[Token(Token = "0x6000B0C")]
	[Address(RVA = "0xFD17E8", Offset = "0xFD17E8", VA = "0xFD17E8")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000B0D")]
	[Address(RVA = "0xFD1880", Offset = "0xFD1880", VA = "0xFD1880", Slot = "4")]
	public override void Collide(ref Vector3 particlePosition, float particleRadius)
	{
	}

	[Token(Token = "0x6000B0E")]
	[Address(RVA = "0xFD1ADC", Offset = "0xFD1ADC", VA = "0xFD1ADC")]
	private static void OutsideSphere(ref Vector3 particlePosition, float particleRadius, Vector3 sphereCenter, float sphereRadius)
	{
	}

	[Token(Token = "0x6000B0F")]
	[Address(RVA = "0xFD1C70", Offset = "0xFD1C70", VA = "0xFD1C70")]
	private static void InsideSphere(ref Vector3 particlePosition, float particleRadius, Vector3 sphereCenter, float sphereRadius)
	{
	}

	[Token(Token = "0x6000B10")]
	[Address(RVA = "0xFD1E14", Offset = "0xFD1E14", VA = "0xFD1E14")]
	private static void OutsideCapsule(ref Vector3 particlePosition, float particleRadius, Vector3 capsuleP0, Vector3 capsuleP1, float capsuleRadius)
	{
	}

	[Token(Token = "0x6000B11")]
	[Address(RVA = "0xFD2250", Offset = "0xFD2250", VA = "0xFD2250")]
	private static void InsideCapsule(ref Vector3 particlePosition, float particleRadius, Vector3 capsuleP0, Vector3 capsuleP1, float capsuleRadius)
	{
	}

	[Token(Token = "0x6000B12")]
	[Address(RVA = "0xFD2660", Offset = "0xFD2660", VA = "0xFD2660")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000B13")]
	[Address(RVA = "0xFD284C", Offset = "0xFD284C", VA = "0xFD284C")]
	public DynamicBoneCollider()
	{
	}
}
[Token(Token = "0x2000196")]
public class DynamicBoneColliderBase : MonoBehaviour
{
	[Token(Token = "0x200057F")]
	public enum Direction
	{
		[Token(Token = "0x40017B7")]
		X,
		[Token(Token = "0x40017B8")]
		Y,
		[Token(Token = "0x40017B9")]
		Z
	}

	[Token(Token = "0x2000580")]
	public enum Bound
	{
		[Token(Token = "0x40017BB")]
		Outside,
		[Token(Token = "0x40017BC")]
		Inside
	}

	[Token(Token = "0x400085C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Direction m_Direction;

	[Token(Token = "0x400085D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 m_Center;

	[Token(Token = "0x400085E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Bound m_Bound;

	[Token(Token = "0x6000B14")]
	[Address(RVA = "0xFD28D8", Offset = "0xFD28D8", VA = "0xFD28D8", Slot = "4")]
	public virtual void Collide(ref Vector3 particlePosition, float particleRadius)
	{
	}

	[Token(Token = "0x6000B15")]
	[Address(RVA = "0xFD2858", Offset = "0xFD2858", VA = "0xFD2858")]
	public DynamicBoneColliderBase()
	{
	}
}
[Token(Token = "0x2000197")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9B94C8", Offset = "0x9B94C8")]
public class DynamicBonePlaneCollider : DynamicBoneColliderBase
{
	[Token(Token = "0x6000B16")]
	[Address(RVA = "0xFD28DC", Offset = "0xFD28DC", VA = "0xFD28DC")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000B17")]
	[Address(RVA = "0xFD28E0", Offset = "0xFD28E0", VA = "0xFD28E0", Slot = "4")]
	public override void Collide(ref Vector3 particlePosition, float particleRadius)
	{
	}

	[Token(Token = "0x6000B18")]
	[Address(RVA = "0xFD2B10", Offset = "0xFD2B10", VA = "0xFD2B10")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000B19")]
	[Address(RVA = "0xFD2D24", Offset = "0xFD2D24", VA = "0xFD2D24")]
	public DynamicBonePlaneCollider()
	{
	}
}
[Token(Token = "0x2000198")]
public class ExitMenu : MonoBehaviour
{
	[Token(Token = "0x400085F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform blackShell;

	[Token(Token = "0x4000860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public InteractiveCore powerIcon;

	[Token(Token = "0x4000861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool active;

	[Token(Token = "0x4000862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float heldTime;

	[Token(Token = "0x4000863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 _blackShellSize;

	[Token(Token = "0x4000864")]
	private const float holdTimeToQuit = 3f;

	[Token(Token = "0x6000B1A")]
	[Address(RVA = "0xFD9778", Offset = "0xFD9778", VA = "0xFD9778")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B1B")]
	[Address(RVA = "0xFD97B8", Offset = "0xFD97B8", VA = "0xFD97B8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B1C")]
	[Address(RVA = "0xFD992C", Offset = "0xFD992C", VA = "0xFD992C")]
	private void Show()
	{
	}

	[Token(Token = "0x6000B1D")]
	[Address(RVA = "0xFD97BC", Offset = "0xFD97BC", VA = "0xFD97BC")]
	private void Hide()
	{
	}

	[Token(Token = "0x6000B1E")]
	[Address(RVA = "0xFD9BDC", Offset = "0xFD9BDC", VA = "0xFD9BDC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B1F")]
	[Address(RVA = "0xFD9EB8", Offset = "0xFD9EB8", VA = "0xFD9EB8")]
	public ExitMenu()
	{
	}
}
[Token(Token = "0x2000199")]
[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9B9500", Offset = "0x9B9500")]
public class FSPStaticMeshHolder : MonoBehaviour
{
	[Token(Token = "0x6000B20")]
	[Address(RVA = "0xC6101C", Offset = "0xC6101C", VA = "0xC6101C")]
	public FSPStaticMeshHolder()
	{
	}
}
[Token(Token = "0x200019A")]
[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9B9510", Offset = "0x9B9510")]
public class GlobalProjectorLightCamera : MonoBehaviour
{
	[Token(Token = "0x6000B21")]
	[Address(RVA = "0xDC31BC", Offset = "0xDC31BC", VA = "0xDC31BC")]
	public GlobalProjectorLightCamera()
	{
	}
}
[Token(Token = "0x200019B")]
[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9B9520", Offset = "0x9B9520")]
public class GlobalProjectorManager : MonoBehaviour
{
	[Token(Token = "0x6000B22")]
	[Address(RVA = "0xDC31C4", Offset = "0xDC31C4", VA = "0xDC31C4")]
	public GlobalProjectorManager()
	{
	}
}
[Serializable]
[Token(Token = "0x200019C")]
public class ProjectorEyeTexture
{
	[Token(Token = "0x4000865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private RenderTexture _RenderTexture;

	[Token(Token = "0x4000866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Texture2D _RenderTextureDummy;

	[Token(Token = "0x4000867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Camera _Camera;

	[Token(Token = "0x6000B23")]
	[Address(RVA = "0x10B1E74", Offset = "0x10B1E74", VA = "0x10B1E74")]
	public ProjectorEyeTexture(Camera camera, int size)
	{
	}

	[Token(Token = "0x6000B24")]
	[Address(RVA = "0x10B1FFC", Offset = "0x10B1FFC", VA = "0x10B1FFC")]
	public void CleanUp()
	{
	}

	[Token(Token = "0x6000B25")]
	[Address(RVA = "0x10B20D0", Offset = "0x10B20D0", VA = "0x10B20D0")]
	public Texture GetTexture()
	{
		return null;
	}

	[Token(Token = "0x6000B26")]
	[Address(RVA = "0x10B20D8", Offset = "0x10B20D8", VA = "0x10B20D8")]
	public RenderTexture GetRenderTexture()
	{
		return null;
	}

	[Token(Token = "0x6000B27")]
	[Address(RVA = "0x10B20E0", Offset = "0x10B20E0", VA = "0x10B20E0")]
	public void GrabScreenIfNeeded()
	{
	}

	[Token(Token = "0x6000B28")]
	[Address(RVA = "0x10B1FF4", Offset = "0x10B1FF4", VA = "0x10B1FF4")]
	public bool RenderTextureSupported()
	{
		return default(bool);
	}
}
[Token(Token = "0x200019D")]
[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9B9530", Offset = "0x9B9530")]
public class ProjectorShadowDummy : MonoBehaviour
{
	[Token(Token = "0x6000B29")]
	[Address(RVA = "0x10B20E4", Offset = "0x10B20E4", VA = "0x10B20E4")]
	public ProjectorShadowDummy()
	{
	}
}
[Token(Token = "0x200019E")]
[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9B9540", Offset = "0x9B9540")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9B9540", Offset = "0x9B9540")]
public class ShadowProjector : MonoBehaviour
{
	[Token(Token = "0x6000B2A")]
	[Address(RVA = "0xD6C18C", Offset = "0xD6C18C", VA = "0xD6C18C")]
	public ShadowProjector()
	{
	}
}
[Token(Token = "0x200019F")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9B958C", Offset = "0x9B958C")]
[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9B958C", Offset = "0x9B958C")]
public class ShadowReceiver : MonoBehaviour
{
	[Token(Token = "0x6000B2B")]
	[Address(RVA = "0xD6C194", Offset = "0xD6C194", VA = "0xD6C194")]
	public ShadowReceiver()
	{
	}
}
[Token(Token = "0x20001A0")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9B95D8", Offset = "0x9B95D8")]
[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9B95D8", Offset = "0x9B95D8")]
public class ShadowTrigger : MonoBehaviour
{
	[Token(Token = "0x6000B2C")]
	[Address(RVA = "0xD6C19C", Offset = "0xD6C19C", VA = "0xD6C19C")]
	public ShadowTrigger()
	{
	}
}
[Serializable]
[Token(Token = "0x20001A1")]
public class FujiConfig
{
	[Token(Token = "0x4000868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool allowShowBuildString;

	[Token(Token = "0x4000869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public bool allowTildeConsole;

	[Token(Token = "0x400086A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float renderScale;

	[Token(Token = "0x400086B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool demoMode;

	[Token(Token = "0x400086C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool smoothedCamera;

	[Token(Token = "0x400086D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float smoothedCameraLerp;

	[Token(Token = "0x400086E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float smoothedCameraSlerp;

	[Token(Token = "0x400086F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int smoothedCameraFov;

	[Token(Token = "0x4000870")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool disableClickTurn;

	[Token(Token = "0x4000871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool disableSmoothLocomotion;

	[Token(Token = "0x4000872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool useHeadForLocomotionFrame;

	[Token(Token = "0x6000B2D")]
	[Address(RVA = "0xBE72A0", Offset = "0xBE72A0", VA = "0xBE72A0")]
	public FujiConfig()
	{
	}
}
[Token(Token = "0x20001A2")]
public static class FuijiConfigHelper
{
	[Serializable]
	[Token(Token = "0x2000581")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB760", Offset = "0x9BB760")]
	private sealed class <>c
	{
		[Token(Token = "0x40017BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x6002429")]
		[Address(RVA = "0xC6DE1C", Offset = "0xC6DE1C", VA = "0xC6DE1C")]
		public <>c()
		{
		}

		[Token(Token = "0x600242A")]
		[Address(RVA = "0xC6DE24", Offset = "0xC6DE24", VA = "0xC6DE24")]
		internal string <.cctor>b__3_0()
		{
			return null;
		}
	}

	[Token(Token = "0x4000873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Lazy<string> AbsConfigLocation;

	[Token(Token = "0x6000B2E")]
	[Address(RVA = "0xC6D7C4", Offset = "0xC6D7C4", VA = "0xC6D7C4")]
	public static void WriteConfigIfMissing(FujiConfig defaultConfig)
	{
	}

	[Token(Token = "0x6000B2F")]
	[Address(RVA = "0xC6D99C", Offset = "0xC6D99C", VA = "0xC6D99C")]
	public static FujiConfig PollConfig(FujiConfig defaultConfig)
	{
		return null;
	}
}
[Token(Token = "0x20001A3")]
public class FujiFlyControls : MonoBehaviour
{
	[Token(Token = "0x6000B31")]
	[Address(RVA = "0xBE9A08", Offset = "0xBE9A08", VA = "0xBE9A08")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B32")]
	[Address(RVA = "0xBE9A0C", Offset = "0xBE9A0C", VA = "0xBE9A0C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B33")]
	[Address(RVA = "0xBE9B00", Offset = "0xBE9B00", VA = "0xBE9B00")]
	public FujiFlyControls()
	{
	}
}
[Token(Token = "0x20001A4")]
public static class FmodGvrAudio
{
	[Token(Token = "0x2000582")]
	private struct RoomProperties
	{
		[Token(Token = "0x40017BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float positionX;

		[Token(Token = "0x40017BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float positionY;

		[Token(Token = "0x40017C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float positionZ;

		[Token(Token = "0x40017C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float rotationX;

		[Token(Token = "0x40017C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float rotationY;

		[Token(Token = "0x40017C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float rotationZ;

		[Token(Token = "0x40017C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float rotationW;

		[Token(Token = "0x40017C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float dimensionsX;

		[Token(Token = "0x40017C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float dimensionsY;

		[Token(Token = "0x40017C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float dimensionsZ;

		[Token(Token = "0x40017C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public FmodGvrAudioRoom.SurfaceMaterial materialLeft;

		[Token(Token = "0x40017C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public FmodGvrAudioRoom.SurfaceMaterial materialRight;

		[Token(Token = "0x40017CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public FmodGvrAudioRoom.SurfaceMaterial materialBottom;

		[Token(Token = "0x40017CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public FmodGvrAudioRoom.SurfaceMaterial materialTop;

		[Token(Token = "0x40017CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public FmodGvrAudioRoom.SurfaceMaterial materialFront;

		[Token(Token = "0x40017CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public FmodGvrAudioRoom.SurfaceMaterial materialBack;

		[Token(Token = "0x40017CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float reflectionScalar;

		[Token(Token = "0x40017CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float reverbGain;

		[Token(Token = "0x40017D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float reverbTime;

		[Token(Token = "0x40017D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float reverbBrightness;
	}

	[Token(Token = "0x4000874")]
	public const float maxGainDb = 24f;

	[Token(Token = "0x4000875")]
	public const float minGainDb = -24f;

	[Token(Token = "0x4000876")]
	public const float maxReverbBrightness = 1f;

	[Token(Token = "0x4000877")]
	public const float minReverbBrightness = -1f;

	[Token(Token = "0x4000878")]
	public const float maxReverbTime = 3f;

	[Token(Token = "0x4000879")]
	public const float maxReflectivity = 2f;

	[Token(Token = "0x400087A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Matrix4x4 flipZ;

	[Token(Token = "0x400087B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static readonly string listenerPluginName;

	[Token(Token = "0x400087C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static readonly int roomPropertiesSize;

	[Token(Token = "0x400087D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private static readonly int roomPropertiesIndex;

	[Token(Token = "0x400087E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static Bounds bounds;

	[Token(Token = "0x400087F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static List<FmodGvrAudioRoom> enabledRooms;

	[Token(Token = "0x4000880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static VECTOR listenerPositionFmod;

	[Token(Token = "0x4000881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static DSP listenerPlugin;

	[Token(Token = "0x170000D3")]
	private static DSP ListenerPlugin
	{
		[Token(Token = "0x6000B36")]
		[Address(RVA = "0xC681BC", Offset = "0xC681BC", VA = "0xC681BC")]
		get
		{
			return default(DSP);
		}
	}

	[Token(Token = "0x6000B34")]
	[Address(RVA = "0xC67C74", Offset = "0xC67C74", VA = "0xC67C74")]
	public static void UpdateAudioRoom(FmodGvrAudioRoom room, bool roomEnabled)
	{
	}

	[Token(Token = "0x6000B35")]
	[Address(RVA = "0xC68350", Offset = "0xC68350", VA = "0xC68350")]
	public static bool IsListenerInsideRoom(FmodGvrAudioRoom room)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B37")]
	[Address(RVA = "0xC68A80", Offset = "0xC68A80", VA = "0xC68A80")]
	private static float ConvertAmplitudeFromDb(float db)
	{
		return default(float);
	}

	[Token(Token = "0x6000B38")]
	[Address(RVA = "0xC68AF8", Offset = "0xC68AF8", VA = "0xC68AF8")]
	private static void ConvertAudioTransformFromUnity(ref Vector3 position, ref Quaternion rotation)
	{
	}

	[Token(Token = "0x6000B39")]
	[Address(RVA = "0xC68280", Offset = "0xC68280", VA = "0xC68280")]
	private static byte[] GetBytes(IntPtr ptr, int length)
	{
		return null;
	}

	[Token(Token = "0x6000B3A")]
	[Address(RVA = "0xC67F70", Offset = "0xC67F70", VA = "0xC67F70")]
	private static RoomProperties GetRoomProperties(FmodGvrAudioRoom room)
	{
		return default(RoomProperties);
	}

	[Token(Token = "0x6000B3B")]
	[Address(RVA = "0xC68620", Offset = "0xC68620", VA = "0xC68620")]
	private static DSP Initialize()
	{
		return default(DSP);
	}
}
[Token(Token = "0x20001A5")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9B9624", Offset = "0x9B9624")]
public class FmodGvrAudioRoom : MonoBehaviour
{
	[Token(Token = "0x2000583")]
	public enum SurfaceMaterial
	{
		[Token(Token = "0x40017D3")]
		Transparent,
		[Token(Token = "0x40017D4")]
		AcousticCeilingTiles,
		[Token(Token = "0x40017D5")]
		BrickBare,
		[Token(Token = "0x40017D6")]
		BrickPainted,
		[Token(Token = "0x40017D7")]
		ConcreteBlockCoarse,
		[Token(Token = "0x40017D8")]
		ConcreteBlockPainted,
		[Token(Token = "0x40017D9")]
		CurtainHeavy,
		[Token(Token = "0x40017DA")]
		FiberglassInsulation,
		[Token(Token = "0x40017DB")]
		GlassThin,
		[Token(Token = "0x40017DC")]
		GlassThick,
		[Token(Token = "0x40017DD")]
		Grass,
		[Token(Token = "0x40017DE")]
		LinoleumOnConcrete,
		[Token(Token = "0x40017DF")]
		Marble,
		[Token(Token = "0x40017E0")]
		Metal,
		[Token(Token = "0x40017E1")]
		ParquetOnConcrete,
		[Token(Token = "0x40017E2")]
		PlasterRough,
		[Token(Token = "0x40017E3")]
		PlasterSmooth,
		[Token(Token = "0x40017E4")]
		PlywoodPanel,
		[Token(Token = "0x40017E5")]
		PolishedConcreteOrTile,
		[Token(Token = "0x40017E6")]
		Sheetrock,
		[Token(Token = "0x40017E7")]
		WaterOrIceSurface,
		[Token(Token = "0x40017E8")]
		WoodCeiling,
		[Token(Token = "0x40017E9")]
		WoodPanel
	}

	[Token(Token = "0x4000882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SurfaceMaterial leftWall;

	[Token(Token = "0x4000883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public SurfaceMaterial rightWall;

	[Token(Token = "0x4000884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SurfaceMaterial floor;

	[Token(Token = "0x4000885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public SurfaceMaterial ceiling;

	[Token(Token = "0x4000886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SurfaceMaterial backWall;

	[Token(Token = "0x4000887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public SurfaceMaterial frontWall;

	[Token(Token = "0x4000888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float reflectivity;

	[Token(Token = "0x4000889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float reverbGainDb;

	[Token(Token = "0x400088A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float reverbBrightness;

	[Token(Token = "0x400088B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float reverbTime;

	[Token(Token = "0x400088C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector3 size;

	[Token(Token = "0x6000B3D")]
	[Address(RVA = "0xC69018", Offset = "0xC69018", VA = "0xC69018")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B3E")]
	[Address(RVA = "0xC69088", Offset = "0xC69088", VA = "0xC69088")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B3F")]
	[Address(RVA = "0xC690F0", Offset = "0xC690F0", VA = "0xC690F0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B40")]
	[Address(RVA = "0xC69160", Offset = "0xC69160", VA = "0xC69160")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000B41")]
	[Address(RVA = "0xC69234", Offset = "0xC69234", VA = "0xC69234")]
	public FmodGvrAudioRoom()
	{
	}
}
[Token(Token = "0x20001A6")]
public class LightPyramidPuzzle_FullyWatered : MonoBehaviour, IPuzzle
{
	[Token(Token = "0x400088D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PlantEntity _plantEntity;

	[Token(Token = "0x400088E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float _progress;

	[Token(Token = "0x400088F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject _shine;

	[Token(Token = "0x4000890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C0F00", Offset = "0x9C0F00")]
	private float <PuzzleTimerSeconds>k__BackingField;

	[Token(Token = "0x4000891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C0F10", Offset = "0x9C0F10")]
	private LightPyramidPuzzle <LinkedPuzzlePyramid>k__BackingField;

	[Token(Token = "0x170000D4")]
	public float PuzzleTimerSeconds
	{
		[Token(Token = "0x6000B43")]
		[Address(RVA = "0xBFC34C", Offset = "0xBFC34C", VA = "0xBFC34C", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D01D4", Offset = "0x9D01D4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000B44")]
		[Address(RVA = "0xBFC354", Offset = "0xBFC354", VA = "0xBFC354", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D01E4", Offset = "0x9D01E4")]
		set
		{
		}
	}

	[Token(Token = "0x170000D5")]
	public LightPyramidPuzzle LinkedPuzzlePyramid
	{
		[Token(Token = "0x6000B45")]
		[Address(RVA = "0xBFC35C", Offset = "0xBFC35C", VA = "0xBFC35C", Slot = "6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D01F4", Offset = "0x9D01F4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000B46")]
		[Address(RVA = "0xBFC364", Offset = "0xBFC364", VA = "0xBFC364", Slot = "7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D0204", Offset = "0x9D0204")]
		set
		{
		}
	}

	[Token(Token = "0x170000D6")]
	public float PuzzleProgress
	{
		[Token(Token = "0x6000B47")]
		[Address(RVA = "0xBFC36C", Offset = "0xBFC36C", VA = "0xBFC36C", Slot = "8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1400001B")]
	public event Action<IPuzzle> PuzzleSolved
	{
		[Token(Token = "0x6000B48")]
		[Address(RVA = "0xBFC39C", Offset = "0xBFC39C", VA = "0xBFC39C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D0214", Offset = "0x9D0214")]
		add
		{
		}
		[Token(Token = "0x6000B49")]
		[Address(RVA = "0xBFC488", Offset = "0xBFC488", VA = "0xBFC488")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D0224", Offset = "0x9D0224")]
		remove
		{
		}
	}

	[Token(Token = "0x6000B42")]
	[Address(RVA = "0xBFC294", Offset = "0xBFC294", VA = "0xBFC294")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B4A")]
	[Address(RVA = "0xBFC574", Offset = "0xBFC574", VA = "0xBFC574", Slot = "9")]
	public void ResetPuzzle()
	{
	}

	[Token(Token = "0x6000B4B")]
	[Address(RVA = "0xBFC658", Offset = "0xBFC658", VA = "0xBFC658", Slot = "10")]
	public void SolvePuzzle(bool silent)
	{
	}

	[Token(Token = "0x6000B4C")]
	[Address(RVA = "0xBFC7F8", Offset = "0xBFC7F8", VA = "0xBFC7F8")]
	public LightPyramidPuzzle_FullyWatered()
	{
	}

	[Token(Token = "0x6000B4D")]
	[Address(RVA = "0xBFC800", Offset = "0xBFC800", VA = "0xBFC800")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D0234", Offset = "0x9D0234")]
	private void <Awake>b__3_0(PlantEntity source, float amount, Vector3? worldSpray, InputHandedness? hand, Vector3? velocity)
	{
	}
}
[Token(Token = "0x20001A7")]
public class LightPyramidPuzzle_TouchPlantFace : MonoBehaviour, IPuzzle
{
	[Token(Token = "0x4000893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PlantEntity _plantEntity;

	[Token(Token = "0x4000894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private PlantShine _shine;

	[Token(Token = "0x4000895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float SecondsOfTouchingToTrigger;

	[Token(Token = "0x4000896")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _timeTouched;

	[Token(Token = "0x4000897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float _oldProgress;

	[Token(Token = "0x4000898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool _solved;

	[Token(Token = "0x4000899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private JellySystem _jellySystem;

	[Token(Token = "0x400089A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C0F30", Offset = "0x9C0F30")]
	private float <PuzzleTimerSeconds>k__BackingField;

	[Token(Token = "0x400089B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C0F40", Offset = "0x9C0F40")]
	private LightPyramidPuzzle <LinkedPuzzlePyramid>k__BackingField;

	[Token(Token = "0x170000D7")]
	public float PuzzleTimerSeconds
	{
		[Token(Token = "0x6000B4F")]
		[Address(RVA = "0xBFCACC", Offset = "0xBFCACC", VA = "0xBFCACC", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D0244", Offset = "0x9D0244")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000B50")]
		[Address(RVA = "0xBFCAD4", Offset = "0xBFCAD4", VA = "0xBFCAD4", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D0254", Offset = "0x9D0254")]
		set
		{
		}
	}

	[Token(Token = "0x170000D8")]
	public LightPyramidPuzzle LinkedPuzzlePyramid
	{
		[Token(Token = "0x6000B51")]
		[Address(RVA = "0xBFCADC", Offset = "0xBFCADC", VA = "0xBFCADC", Slot = "6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D0264", Offset = "0x9D0264")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000B52")]
		[Address(RVA = "0xBFCAE4", Offset = "0xBFCAE4", VA = "0xBFCAE4", Slot = "7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D0274", Offset = "0x9D0274")]
		set
		{
		}
	}

	[Token(Token = "0x170000D9")]
	public float PuzzleProgress
	{
		[Token(Token = "0x6000B53")]
		[Address(RVA = "0xBFCAEC", Offset = "0xBFCAEC", VA = "0xBFCAEC", Slot = "8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1400001C")]
	public event Action<IPuzzle> PuzzleSolved
	{
		[Token(Token = "0x6000B54")]
		[Address(RVA = "0xBFCAF8", Offset = "0xBFCAF8", VA = "0xBFCAF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D0284", Offset = "0x9D0284")]
		add
		{
		}
		[Token(Token = "0x6000B55")]
		[Address(RVA = "0xBFCBE4", Offset = "0xBFCBE4", VA = "0xBFCBE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D0294", Offset = "0x9D0294")]
		remove
		{
		}
	}

	[Token(Token = "0x6000B4E")]
	[Address(RVA = "0xBFC8FC", Offset = "0xBFC8FC", VA = "0xBFC8FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B56")]
	[Address(RVA = "0xBFCCD0", Offset = "0xBFCCD0", VA = "0xBFCCD0")]
	private void OnJellyUpdateTouch(IReadOnlyList<JellySystem.JellyTouchResult> results, float dt)
	{
	}

	[Token(Token = "0x6000B57")]
	[Address(RVA = "0xBFD554", Offset = "0xBFD554", VA = "0xBFD554", Slot = "9")]
	public void ResetPuzzle()
	{
	}

	[Token(Token = "0x6000B58")]
	[Address(RVA = "0xBFD20C", Offset = "0xBFD20C", VA = "0xBFD20C", Slot = "10")]
	public void SolvePuzzle(bool silent)
	{
	}

	[Token(Token = "0x6000B59")]
	[Address(RVA = "0xBFD624", Offset = "0xBFD624", VA = "0xBFD624")]
	public LightPyramidPuzzle_TouchPlantFace()
	{
	}

	[Token(Token = "0x6000B5A")]
	[Address(RVA = "0xBFD634", Offset = "0xBFD634", VA = "0xBFD634")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D02A4", Offset = "0x9D02A4")]
	private void <Awake>b__7_0(PlantEntity source, float amount, Vector3? spray, InputHandedness? hand, Vector3? velocity)
	{
	}
}
[Token(Token = "0x20001A8")]
public class LanguagePickerUi : MonoBehaviour
{
	[Token(Token = "0x2000584")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB770", Offset = "0x9BB770")]
	private sealed class <>c__DisplayClass7_0
	{
		[Token(Token = "0x40017EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool locked;

		[Token(Token = "0x40017EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action callback;

		[Token(Token = "0x40017EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractiveCore core;

		[Token(Token = "0x40017ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TweenCallback <>9__1;

		[Token(Token = "0x600242B")]
		[Address(RVA = "0xBF2014", Offset = "0xBF2014", VA = "0xBF2014")]
		public <>c__DisplayClass7_0()
		{
		}

		[Token(Token = "0x600242C")]
		[Address(RVA = "0xBF2488", Offset = "0xBF2488", VA = "0xBF2488")]
		internal void <SetupButton>b__0(PlayerControllerInput input)
		{
		}

		[Token(Token = "0x600242D")]
		[Address(RVA = "0xBF26E4", Offset = "0xBF26E4", VA = "0xBF26E4")]
		internal void <SetupButton>b__1()
		{
		}
	}

	[Token(Token = "0x400089D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9C0F60", Offset = "0x9C0F60")]
	public GameObject downButton;

	[Token(Token = "0x400089E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject upButton;

	[Token(Token = "0x400089F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TMP_Text tempText;

	[Token(Token = "0x40008A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int chosenLangIndex;

	[Token(Token = "0x40008A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LocalizationService _locService;

	[Token(Token = "0x6000B5B")]
	[Address(RVA = "0xBF1C1C", Offset = "0xBF1C1C", VA = "0xBF1C1C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B5C")]
	[Address(RVA = "0xBF1F48", Offset = "0xBF1F48", VA = "0xBF1F48")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B5D")]
	[Address(RVA = "0xBF1CE4", Offset = "0xBF1CE4", VA = "0xBF1CE4")]
	private void SetupButton(GameObject button, Action callback)
	{
	}

	[Token(Token = "0x6000B5E")]
	[Address(RVA = "0xBF201C", Offset = "0xBF201C", VA = "0xBF201C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B5F")]
	[Address(RVA = "0xBF2104", Offset = "0xBF2104", VA = "0xBF2104")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B60")]
	[Address(RVA = "0xBF2188", Offset = "0xBF2188", VA = "0xBF2188")]
	private void HandleLanguageChange(LocalizationService.Messages.LocalizationChangedMessage message)
	{
	}

	[Token(Token = "0x6000B61")]
	[Address(RVA = "0xBF20A8", Offset = "0xBF20A8", VA = "0xBF20A8")]
	private void SetTextToCurrentLanguage()
	{
	}

	[Token(Token = "0x6000B62")]
	[Address(RVA = "0xBF218C", Offset = "0xBF218C", VA = "0xBF218C")]
	private void UpdateLanguageText(int index)
	{
	}

	[Token(Token = "0x6000B63")]
	[Address(RVA = "0xBF22F8", Offset = "0xBF22F8", VA = "0xBF22F8")]
	private void UpButton()
	{
	}

	[Token(Token = "0x6000B64")]
	[Address(RVA = "0xBF23B8", Offset = "0xBF23B8", VA = "0xBF23B8")]
	private void DownButton()
	{
	}

	[Token(Token = "0x6000B65")]
	[Address(RVA = "0xBF2478", Offset = "0xBF2478", VA = "0xBF2478")]
	public LanguagePickerUi()
	{
	}
}
[Token(Token = "0x20001A9")]
public class BufferedAudioStream
{
	[Token(Token = "0x40008A2")]
	private const bool VerboseLogging = false;

	[Token(Token = "0x40008A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private AudioSource audio;

	[Token(Token = "0x40008A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float[] audioBuffer;

	[Token(Token = "0x40008A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int writePos;

	[Token(Token = "0x40008A6")]
	private const float bufferLengthSeconds = 0.25f;

	[Token(Token = "0x40008A7")]
	private const int sampleRate = 48000;

	[Token(Token = "0x40008A8")]
	private const int bufferSize = 12000;

	[Token(Token = "0x40008A9")]
	private const float playbackDelayTimeSeconds = 0.05f;

	[Token(Token = "0x40008AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float playbackDelayRemaining;

	[Token(Token = "0x40008AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float remainingBufferTime;

	[Token(Token = "0x6000B66")]
	[Address(RVA = "0xBA98CC", Offset = "0xBA98CC", VA = "0xBA98CC")]
	public BufferedAudioStream(AudioSource audio)
	{
	}

	[Token(Token = "0x6000B67")]
	[Address(RVA = "0xBA9A04", Offset = "0xBA9A04", VA = "0xBA9A04")]
	public void Update()
	{
	}

	[Token(Token = "0x6000B68")]
	[Address(RVA = "0xBA99A0", Offset = "0xBA99A0", VA = "0xBA99A0")]
	private void Stop()
	{
	}

	[Token(Token = "0x6000B69")]
	[Address(RVA = "0xBA9C08", Offset = "0xBA9C08", VA = "0xBA9C08")]
	public void AddData(float[] samples)
	{
	}
}
[Token(Token = "0x20001AA")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9B965C", Offset = "0x9B965C")]
public class MouseLook : MonoBehaviour
{
	[Token(Token = "0x2000585")]
	public enum RotationAxes
	{
		[Token(Token = "0x40017EF")]
		MouseXAndY,
		[Token(Token = "0x40017F0")]
		MouseX,
		[Token(Token = "0x40017F1")]
		MouseY
	}

	[Token(Token = "0x40008AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RotationAxes axes;

	[Token(Token = "0x40008AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float sensitivityX;

	[Token(Token = "0x40008AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float sensitivityY;

	[Token(Token = "0x40008AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minimumX;

	[Token(Token = "0x40008B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maximumX;

	[Token(Token = "0x40008B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minimumY;

	[Token(Token = "0x40008B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maximumY;

	[Token(Token = "0x40008B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float rotationY;

	[Token(Token = "0x6000B6A")]
	[Address(RVA = "0xCC7980", Offset = "0xCC7980", VA = "0xCC7980")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B6B")]
	[Address(RVA = "0xCC7C04", Offset = "0xCC7C04", VA = "0xCC7C04")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B6C")]
	[Address(RVA = "0xCC7CCC", Offset = "0xCC7CCC", VA = "0xCC7CCC")]
	public MouseLook()
	{
	}
}
[Token(Token = "0x20001AB")]
public struct ReflectionSnapshot
{
	[Token(Token = "0x40008B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x40008B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float fadeTime;
}
[Token(Token = "0x20001AC")]
public class ONSPReflectionZone : MonoBehaviour
{
	[Token(Token = "0x40008B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x40008B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fadeTime;

	[Token(Token = "0x40008B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Stack<ReflectionSnapshot> snapshotList;

	[Token(Token = "0x40008B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ReflectionSnapshot currentSnapshot;

	[Token(Token = "0x6000B6D")]
	[Address(RVA = "0xCDB20C", Offset = "0xCDB20C", VA = "0xCDB20C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B6E")]
	[Address(RVA = "0xCDB210", Offset = "0xCDB210", VA = "0xCDB210")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B6F")]
	[Address(RVA = "0xCDB214", Offset = "0xCDB214", VA = "0xCDB214")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000B70")]
	[Address(RVA = "0xCDB3A0", Offset = "0xCDB3A0", VA = "0xCDB3A0")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000B71")]
	[Address(RVA = "0xCDB268", Offset = "0xCDB268", VA = "0xCDB268")]
	private bool CheckForAudioListener(GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B72")]
	[Address(RVA = "0xCDB2FC", Offset = "0xCDB2FC", VA = "0xCDB2FC")]
	private void PushCurrentMixerShapshot()
	{
	}

	[Token(Token = "0x6000B73")]
	[Address(RVA = "0xCDB3F4", Offset = "0xCDB3F4", VA = "0xCDB3F4")]
	private void PopCurrentMixerSnapshot()
	{
	}

	[Token(Token = "0x6000B74")]
	[Address(RVA = "0xCDB494", Offset = "0xCDB494", VA = "0xCDB494")]
	private void SetReflectionValues()
	{
	}

	[Token(Token = "0x6000B75")]
	[Address(RVA = "0xCDB620", Offset = "0xCDB620", VA = "0xCDB620")]
	private void SetReflectionValues(ref ReflectionSnapshot mss)
	{
	}

	[Token(Token = "0x6000B76")]
	[Address(RVA = "0xCDB7AC", Offset = "0xCDB7AC", VA = "0xCDB7AC")]
	public ONSPReflectionZone()
	{
	}
}
[Token(Token = "0x20001AD")]
public class OculusSpatializerUnity : MonoBehaviour
{
	[Token(Token = "0x2000586")]
	public delegate void AudioRaycastCallback(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data);

	[Token(Token = "0x40008BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask layerMask;

	[Token(Token = "0x40008BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool visualizeRoom;

	[Token(Token = "0x40008BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool roomVisualizationInitialized;

	[Token(Token = "0x40008BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int raysPerSecond;

	[Token(Token = "0x40008BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float roomInterpSpeed;

	[Token(Token = "0x40008BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxWallDistance;

	[Token(Token = "0x40008C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int rayCacheSize;

	[Token(Token = "0x40008C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool dynamicReflectionsEnabled;

	[Token(Token = "0x40008C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AudioRaycastCallback _raycastCallback;

	[Token(Token = "0x40008C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float particleSize;

	[Token(Token = "0x40008C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float particleOffset;

	[Token(Token = "0x40008C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject room;

	[Token(Token = "0x40008C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Renderer[] wallRenderer;

	[Token(Token = "0x40008C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float[] dims;

	[Token(Token = "0x40008C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float[] coefs;

	[Token(Token = "0x40008C9")]
	private const int HIT_COUNT = 2048;

	[Token(Token = "0x40008CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3[] points;

	[Token(Token = "0x40008CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3[] normals;

	[Token(Token = "0x40008CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ParticleSystem sys;

	[Token(Token = "0x40008CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x40008CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LayerMask gLayerMask;

	[Token(Token = "0x40008CF")]
	private const string strOSP = "AudioPluginOculusSpatializer";

	[Token(Token = "0x6000B78")]
	[Address(RVA = "0x117FE00", Offset = "0x117FE00", VA = "0x117FE00")]
	private static Vector3 swapHandedness(Vector3 vec)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000B79")]
	[Address(RVA = "0x117FE38", Offset = "0x117FE38", VA = "0x117FE38")]
	private static void AudioRaycast(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data)
	{
	}

	[Token(Token = "0x6000B7A")]
	[Address(RVA = "0x1180008", Offset = "0x1180008", VA = "0x1180008")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B7B")]
	[Address(RVA = "0x11800B4", Offset = "0x11800B4", VA = "0x11800B4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000B7C")]
	[Address(RVA = "0x11801C4", Offset = "0x11801C4", VA = "0x11801C4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B7D")]
	[Address(RVA = "0x1180DFC", Offset = "0x1180DFC", VA = "0x1180DFC")]
	private void inititalizeRoomVisualization()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000B7E")]
	[Address(RVA = "0x1180090", Offset = "0x1180090", VA = "0x1180090")]
	private static extern int OSP_Unity_AssignRaycastCallback(MulticastDelegate callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x6000B7F")]
	[Address(RVA = "0x1180118", Offset = "0x1180118", VA = "0x1180118")]
	private static extern int OSP_Unity_AssignRaycastCallback(IntPtr callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x6000B80")]
	[Address(RVA = "0x1180AE4", Offset = "0x1180AE4", VA = "0x1180AE4")]
	private static extern int OSP_Unity_SetDynamicRoomRaysPerSecond(int RaysPerSecond);

	[PreserveSig]
	[Token(Token = "0x6000B81")]
	[Address(RVA = "0x1180B80", Offset = "0x1180B80", VA = "0x1180B80")]
	private static extern int OSP_Unity_SetDynamicRoomInterpSpeed(float InterpSpeed);

	[PreserveSig]
	[Token(Token = "0x6000B82")]
	[Address(RVA = "0x1180C20", Offset = "0x1180C20", VA = "0x1180C20")]
	private static extern int OSP_Unity_SetDynamicRoomMaxWallDistance(float MaxWallDistance);

	[PreserveSig]
	[Token(Token = "0x6000B83")]
	[Address(RVA = "0x1180CC0", Offset = "0x1180CC0", VA = "0x1180CC0")]
	private static extern int OSP_Unity_SetDynamicRoomRaysRayCacheSize(int RayCacheSize);

	[PreserveSig]
	[Token(Token = "0x6000B84")]
	[Address(RVA = "0x1180D5C", Offset = "0x1180D5C", VA = "0x1180D5C")]
	private static extern int OSP_Unity_UpdateRoomModel(float wetLevel);

	[PreserveSig]
	[Token(Token = "0x6000B85")]
	[Address(RVA = "0x1182164", Offset = "0x1182164", VA = "0x1182164")]
	private static extern int OSP_Unity_GetRoomDimensions(float[] roomDimensions, float[] reflectionsCoefs, out Vector3 position);

	[PreserveSig]
	[Token(Token = "0x6000B86")]
	[Address(RVA = "0x1182228", Offset = "0x1182228", VA = "0x1182228")]
	private static extern int OSP_Unity_GetRaycastHits(Vector3[] points, Vector3[] normals, int length);

	[Token(Token = "0x6000B87")]
	[Address(RVA = "0x11822EC", Offset = "0x11822EC", VA = "0x11822EC")]
	public OculusSpatializerUnity()
	{
	}
}
[Token(Token = "0x20001AE")]
public class ONSPAmbisonicsNative : MonoBehaviour
{
	[Token(Token = "0x2000587")]
	public enum ovrAmbisonicsNativeStatus
	{
		[Token(Token = "0x40017F3")]
		Uninitialized = -1,
		[Token(Token = "0x40017F4")]
		NotEnabled,
		[Token(Token = "0x40017F5")]
		Success,
		[Token(Token = "0x40017F6")]
		StreamError,
		[Token(Token = "0x40017F7")]
		ProcessError,
		[Token(Token = "0x40017F8")]
		MaxStatValue
	}

	[Token(Token = "0x40008D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int numFOAChannels;

	[Token(Token = "0x40008D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int paramVSpeakerMode;

	[Token(Token = "0x40008D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int paramAmbiStat;

	[Token(Token = "0x40008D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ovrAmbisonicsNativeStatus currentStatus;

	[Token(Token = "0x40008D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private bool useVirtualSpeakers;

	[Token(Token = "0x170000DA")]
	public bool UseVirtualSpeakers
	{
		[Token(Token = "0x6000B89")]
		[Address(RVA = "0xCC9730", Offset = "0xCC9730", VA = "0xCC9730")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000B8A")]
		[Address(RVA = "0xCC9738", Offset = "0xCC9738", VA = "0xCC9738")]
		set
		{
		}
	}

	[Token(Token = "0x6000B8B")]
	[Address(RVA = "0xCC9744", Offset = "0xCC9744", VA = "0xCC9744")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B8C")]
	[Address(RVA = "0xCC9994", Offset = "0xCC9994", VA = "0xCC9994")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B8D")]
	[Address(RVA = "0xCC9C20", Offset = "0xCC9C20", VA = "0xCC9C20")]
	public ONSPAmbisonicsNative()
	{
	}
}
[Token(Token = "0x20001AF")]
public class ONSPAudioSource : MonoBehaviour
{
	[Token(Token = "0x2000588")]
	private enum Parameters
	{
		[Token(Token = "0x40017FA")]
		P_GAIN,
		[Token(Token = "0x40017FB")]
		P_USEINVSQR,
		[Token(Token = "0x40017FC")]
		P_NEAR,
		[Token(Token = "0x40017FD")]
		P_FAR,
		[Token(Token = "0x40017FE")]
		P_RADIUS,
		[Token(Token = "0x40017FF")]
		P_DISABLE_RFL,
		[Token(Token = "0x4001800")]
		P_VSPEAKERMODE,
		[Token(Token = "0x4001801")]
		P_AMBISTAT,
		[Token(Token = "0x4001802")]
		P_READONLY_GLOBAL_RFL_ENABLED,
		[Token(Token = "0x4001803")]
		P_READONLY_NUM_VOICES,
		[Token(Token = "0x4001804")]
		P_SENDLEVEL,
		[Token(Token = "0x4001805")]
		P_NUM
	}

	[Token(Token = "0x40008D5")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x40008D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool enableSpatialization;

	[Token(Token = "0x40008D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float gain;

	[Token(Token = "0x40008D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool useInvSqr;

	[Token(Token = "0x40008D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float near;

	[Token(Token = "0x40008DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float far;

	[Token(Token = "0x40008DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float volumetricRadius;

	[Token(Token = "0x40008DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float reverbSend;

	[Token(Token = "0x40008DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private bool enableRfl;

	[Token(Token = "0x40008DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPAudioSource RoomReflectionGizmoAS;

	[Token(Token = "0x170000DB")]
	public bool EnableSpatialization
	{
		[Token(Token = "0x6000B90")]
		[Address(RVA = "0xCC9DA0", Offset = "0xCC9DA0", VA = "0xCC9DA0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000B91")]
		[Address(RVA = "0xCC9DA8", Offset = "0xCC9DA8", VA = "0xCC9DA8")]
		set
		{
		}
	}

	[Token(Token = "0x170000DC")]
	public float Gain
	{
		[Token(Token = "0x6000B92")]
		[Address(RVA = "0xCC9DB4", Offset = "0xCC9DB4", VA = "0xCC9DB4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000B93")]
		[Address(RVA = "0xCC9DBC", Offset = "0xCC9DBC", VA = "0xCC9DBC")]
		set
		{
		}
	}

	[Token(Token = "0x170000DD")]
	public bool UseInvSqr
	{
		[Token(Token = "0x6000B94")]
		[Address(RVA = "0xCC9E40", Offset = "0xCC9E40", VA = "0xCC9E40")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000B95")]
		[Address(RVA = "0xCC9E48", Offset = "0xCC9E48", VA = "0xCC9E48")]
		set
		{
		}
	}

	[Token(Token = "0x170000DE")]
	public float Near
	{
		[Token(Token = "0x6000B96")]
		[Address(RVA = "0xCC9E54", Offset = "0xCC9E54", VA = "0xCC9E54")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000B97")]
		[Address(RVA = "0xCC9E5C", Offset = "0xCC9E5C", VA = "0xCC9E5C")]
		set
		{
		}
	}

	[Token(Token = "0x170000DF")]
	public float Far
	{
		[Token(Token = "0x6000B98")]
		[Address(RVA = "0xCC9EE4", Offset = "0xCC9EE4", VA = "0xCC9EE4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000B99")]
		[Address(RVA = "0xCC9EEC", Offset = "0xCC9EEC", VA = "0xCC9EEC")]
		set
		{
		}
	}

	[Token(Token = "0x170000E0")]
	public float VolumetricRadius
	{
		[Token(Token = "0x6000B9A")]
		[Address(RVA = "0xCC9F74", Offset = "0xCC9F74", VA = "0xCC9F74")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000B9B")]
		[Address(RVA = "0xCC9F7C", Offset = "0xCC9F7C", VA = "0xCC9F7C")]
		set
		{
		}
	}

	[Token(Token = "0x170000E1")]
	public float ReverbSend
	{
		[Token(Token = "0x6000B9C")]
		[Address(RVA = "0xCCA004", Offset = "0xCCA004", VA = "0xCCA004")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000B9D")]
		[Address(RVA = "0xCCA00C", Offset = "0xCCA00C", VA = "0xCCA00C")]
		set
		{
		}
	}

	[Token(Token = "0x170000E2")]
	public bool EnableRfl
	{
		[Token(Token = "0x6000B9E")]
		[Address(RVA = "0xCCA094", Offset = "0xCCA094", VA = "0xCCA094")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000B9F")]
		[Address(RVA = "0xCCA09C", Offset = "0xCCA09C", VA = "0xCCA09C")]
		set
		{
		}
	}

	[PreserveSig]
	[Token(Token = "0x6000B8F")]
	[Address(RVA = "0xCC9CA4", Offset = "0xCC9CA4", VA = "0xCC9CA4")]
	private static extern void ONSP_GetGlobalRoomReflectionValues(ref bool reflOn, ref bool reverbOn, ref float width, ref float height, ref float length);

	[Token(Token = "0x6000BA0")]
	[Address(RVA = "0xCCA0A8", Offset = "0xCCA0A8", VA = "0xCCA0A8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BA1")]
	[Address(RVA = "0xCCA2A8", Offset = "0xCCA2A8", VA = "0xCCA2A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BA2")]
	[Address(RVA = "0xCCA2AC", Offset = "0xCCA2AC", VA = "0xCCA2AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BA3")]
	[Address(RVA = "0xCCA114", Offset = "0xCCA114", VA = "0xCCA114")]
	public void SetParameters(ref AudioSource source)
	{
	}

	[Token(Token = "0x6000BA4")]
	[Address(RVA = "0xCCA38C", Offset = "0xCCA38C", VA = "0xCCA38C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000BA5")]
	[Address(RVA = "0xCCA860", Offset = "0xCCA860", VA = "0xCCA860")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000BA6")]
	[Address(RVA = "0xCCA930", Offset = "0xCCA930", VA = "0xCCA930")]
	public ONSPAudioSource()
	{
	}
}
[Token(Token = "0x20001B0")]
public class ONSPProfiler : MonoBehaviour
{
	[Token(Token = "0x40008DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool profilerEnabled;

	[Token(Token = "0x40008E0")]
	private const int DEFAULT_PORT = 2121;

	[Token(Token = "0x40008E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int port;

	[Token(Token = "0x40008E2")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x6000BA8")]
	[Address(RVA = "0xCCA950", Offset = "0xCCA950", VA = "0xCCA950")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BA9")]
	[Address(RVA = "0xCCA95C", Offset = "0xCCA95C", VA = "0xCCA95C")]
	private void Update()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000BAA")]
	[Address(RVA = "0xCCAA30", Offset = "0xCCAA30", VA = "0xCCAA30")]
	private static extern int ONSP_SetProfilerEnabled(bool enabled);

	[PreserveSig]
	[Token(Token = "0x6000BAB")]
	[Address(RVA = "0xCCA994", Offset = "0xCCA994", VA = "0xCCA994")]
	private static extern int ONSP_SetProfilerPort(int port);

	[Token(Token = "0x6000BAC")]
	[Address(RVA = "0xCCAACC", Offset = "0xCCAACC", VA = "0xCCAACC")]
	public ONSPProfiler()
	{
	}
}
[Token(Token = "0x20001B1")]
public class ONSPPropagationGeometry : MonoBehaviour
{
	[Token(Token = "0x2000589")]
	private struct MeshMaterial
	{
		[Token(Token = "0x4001806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MeshFilter meshFilter;

		[Token(Token = "0x4001807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;
	}

	[Token(Token = "0x200058A")]
	private struct TerrainMaterial
	{
		[Token(Token = "0x4001808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Terrain terrain;

		[Token(Token = "0x4001809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;
	}

	[Token(Token = "0x40008E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string GeometryAssetDirectory;

	[Token(Token = "0x40008E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string filePathRelative;

	[Token(Token = "0x40008E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool fileEnabled;

	[Token(Token = "0x40008E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool includeChildMeshes;

	[Token(Token = "0x40008E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr geometryHandle;

	[Token(Token = "0x40008E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int OSPSuccess;

	[Token(Token = "0x40008E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static int terrainDecimation;

	[Token(Token = "0x170000E3")]
	public static string GeometryAssetPath
	{
		[Token(Token = "0x6000BAD")]
		[Address(RVA = "0xCCD7D8", Offset = "0xCCD7D8", VA = "0xCCD7D8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000E4")]
	public string filePath
	{
		[Token(Token = "0x6000BAE")]
		[Address(RVA = "0xCCD864", Offset = "0xCCD864", VA = "0xCCD864")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000BAF")]
	[Address(RVA = "0xCCD8DC", Offset = "0xCCD8DC", VA = "0xCCD8DC")]
	public static string GetPath(Transform current)
	{
		return null;
	}

	[Token(Token = "0x6000BB0")]
	[Address(RVA = "0xCCDA54", Offset = "0xCCDA54", VA = "0xCCDA54")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BB1")]
	[Address(RVA = "0xCCDA58", Offset = "0xCCDA58", VA = "0xCCDA58")]
	private void CreatePropagationGeometry()
	{
	}

	[Token(Token = "0x6000BB2")]
	[Address(RVA = "0xCCDF68", Offset = "0xCCDF68", VA = "0xCCDF68")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BB3")]
	[Address(RVA = "0xCCE440", Offset = "0xCCE440", VA = "0xCCE440")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000BB4")]
	[Address(RVA = "0xCCE5A4", Offset = "0xCCE5A4", VA = "0xCCE5A4")]
	private static void traverseMeshHierarchy(GameObject obj, ONSPPropagationMaterial[] currentMaterials, bool includeChildren, List<MeshMaterial> meshMaterials, List<TerrainMaterial> terrainMaterials, bool ignoreStatic)
	{
	}

	[Token(Token = "0x6000BB5")]
	[Address(RVA = "0xCCEDD8", Offset = "0xCCEDD8", VA = "0xCCEDD8")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal, bool ignoreStatic)
	{
		return default(int);
	}

	[Token(Token = "0x6000BB6")]
	[Address(RVA = "0xCCDE1C", Offset = "0xCCDE1C", VA = "0xCCDE1C")]
	public void UploadGeometry()
	{
	}

	[Token(Token = "0x6000BB7")]
	[Address(RVA = "0xCCDC3C", Offset = "0xCCDC3C", VA = "0xCCDC3C")]
	public bool ReadFile()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BB8")]
	[Address(RVA = "0xCD0748", Offset = "0xCD0748", VA = "0xCD0748")]
	public ONSPPropagationGeometry()
	{
	}
}
[Token(Token = "0x20001B2")]
internal class ONSPPropagation
{
	[Token(Token = "0x200058B")]
	public enum ovrAudioScalarType : uint
	{
		[Token(Token = "0x400180B")]
		Int8,
		[Token(Token = "0x400180C")]
		UInt8,
		[Token(Token = "0x400180D")]
		Int16,
		[Token(Token = "0x400180E")]
		UInt16,
		[Token(Token = "0x400180F")]
		Int32,
		[Token(Token = "0x4001810")]
		UInt32,
		[Token(Token = "0x4001811")]
		Int64,
		[Token(Token = "0x4001812")]
		UInt64,
		[Token(Token = "0x4001813")]
		Float16,
		[Token(Token = "0x4001814")]
		Float32,
		[Token(Token = "0x4001815")]
		Float64
	}

	[Token(Token = "0x200058C")]
	public class ClientType
	{
		[Token(Token = "0x4001816")]
		public const uint OVRA_CLIENT_TYPE_NATIVE = 0u;

		[Token(Token = "0x4001817")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2016 = 1u;

		[Token(Token = "0x4001818")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_1 = 2u;

		[Token(Token = "0x4001819")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_2 = 3u;

		[Token(Token = "0x400181A")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2018_1 = 4u;

		[Token(Token = "0x400181B")]
		public const uint OVRA_CLIENT_TYPE_FMOD = 5u;

		[Token(Token = "0x400181C")]
		public const uint OVRA_CLIENT_TYPE_UNITY = 6u;

		[Token(Token = "0x400181D")]
		public const uint OVRA_CLIENT_TYPE_UE4 = 7u;

		[Token(Token = "0x400181E")]
		public const uint OVRA_CLIENT_TYPE_VST = 8u;

		[Token(Token = "0x400181F")]
		public const uint OVRA_CLIENT_TYPE_AAX = 9u;

		[Token(Token = "0x4001820")]
		public const uint OVRA_CLIENT_TYPE_TEST = 10u;

		[Token(Token = "0x4001821")]
		public const uint OVRA_CLIENT_TYPE_OTHER = 11u;

		[Token(Token = "0x4001822")]
		public const uint OVRA_CLIENT_TYPE_WWISE_UNKNOWN = 12u;

		[Token(Token = "0x6002432")]
		[Address(RVA = "0xCCAFC0", Offset = "0xCCAFC0", VA = "0xCCAFC0")]
		public ClientType()
		{
		}
	}

	[Token(Token = "0x200058D")]
	public interface PropagationInterface
	{
		[Token(Token = "0x6002433")]
		int SetPropagationQuality(float quality);

		[Token(Token = "0x6002434")]
		int SetPropagationThreadAffinity(ulong cpuMask);

		[Token(Token = "0x6002435")]
		int CreateAudioGeometry(out IntPtr geometry);

		[Token(Token = "0x6002436")]
		int DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6002437")]
		int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount);

		[Token(Token = "0x6002438")]
		int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6002439")]
		int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x600243A")]
		int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x600243B")]
		int AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x600243C")]
		int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x600243D")]
		int CreateAudioMaterial(out IntPtr material);

		[Token(Token = "0x600243E")]
		int DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x600243F")]
		int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6002440")]
		int AudioMaterialReset(IntPtr material, MaterialProperty property);
	}

	[Token(Token = "0x200058E")]
	public class UnityNativeInterface : PropagationInterface
	{
		[Token(Token = "0x4001823")]
		public const string strOSPS = "AudioPluginOculusSpatializer";

		[Token(Token = "0x4001824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x1700043E")]
		private IntPtr context
		{
			[Token(Token = "0x6002441")]
			[Address(RVA = "0xCCBCEC", Offset = "0xCCBCEC", VA = "0xCCBCEC")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6002442")]
		[Address(RVA = "0xCCBD50", Offset = "0xCCBD50", VA = "0xCCBD50")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6002443")]
		[Address(RVA = "0xCCBDFC", Offset = "0xCCBDFC", VA = "0xCCBDFC")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6002444")]
		[Address(RVA = "0xCCBEA8", Offset = "0xCCBEA8", VA = "0xCCBEA8", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002445")]
		[Address(RVA = "0xCCBECC", Offset = "0xCCBECC", VA = "0xCCBECC")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6002446")]
		[Address(RVA = "0xCCBF78", Offset = "0xCCBF78", VA = "0xCCBF78", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002447")]
		[Address(RVA = "0xCCBF9C", Offset = "0xCCBF9C", VA = "0xCCBF9C")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6002448")]
		[Address(RVA = "0xCCC044", Offset = "0xCCC044", VA = "0xCCC044", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002449")]
		[Address(RVA = "0xCCC068", Offset = "0xCCC068", VA = "0xCCC068")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x600244A")]
		[Address(RVA = "0xCCC104", Offset = "0xCCC104", VA = "0xCCC104", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600244B")]
		[Address(RVA = "0xCCC10C", Offset = "0xCCC10C", VA = "0xCCC10C")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x600244C")]
		[Address(RVA = "0xCCC234", Offset = "0xCCC234", VA = "0xCCC234", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600244D")]
		[Address(RVA = "0xCCC32C", Offset = "0xCCC32C", VA = "0xCCC32C")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x600244E")]
		[Address(RVA = "0xCCC3E0", Offset = "0xCCC3E0", VA = "0xCCC3E0", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600244F")]
		[Address(RVA = "0xCCC3EC", Offset = "0xCCC3EC", VA = "0xCCC3EC")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6002450")]
		[Address(RVA = "0xCCC534", Offset = "0xCCC534", VA = "0xCCC534", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002451")]
		[Address(RVA = "0xCCC540", Offset = "0xCCC540", VA = "0xCCC540")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6002452")]
		[Address(RVA = "0xCCC608", Offset = "0xCCC608", VA = "0xCCC608", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002453")]
		[Address(RVA = "0xCCC614", Offset = "0xCCC614", VA = "0xCCC614")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6002454")]
		[Address(RVA = "0xCCC6DC", Offset = "0xCCC6DC", VA = "0xCCC6DC", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002455")]
		[Address(RVA = "0xCCC6E8", Offset = "0xCCC6E8", VA = "0xCCC6E8")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6002456")]
		[Address(RVA = "0xCCC790", Offset = "0xCCC790", VA = "0xCCC790", Slot = "14")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002457")]
		[Address(RVA = "0xCCC7B4", Offset = "0xCCC7B4", VA = "0xCCC7B4")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6002458")]
		[Address(RVA = "0xCCC850", Offset = "0xCCC850", VA = "0xCCC850", Slot = "15")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002459")]
		[Address(RVA = "0xCCC858", Offset = "0xCCC858", VA = "0xCCC858")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x600245A")]
		[Address(RVA = "0xCCC91C", Offset = "0xCCC91C", VA = "0xCCC91C", Slot = "16")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600245B")]
		[Address(RVA = "0xCCC928", Offset = "0xCCC928", VA = "0xCCC928")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x600245C")]
		[Address(RVA = "0xCCC9EC", Offset = "0xCCC9EC", VA = "0xCCC9EC", Slot = "13")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600245D")]
		[Address(RVA = "0xCCC9FC", Offset = "0xCCC9FC", VA = "0xCCC9FC")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x600245E")]
		[Address(RVA = "0xCCCAA8", Offset = "0xCCCAA8", VA = "0xCCCAA8", Slot = "17")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x600245F")]
		[Address(RVA = "0xCCAF6C", Offset = "0xCCAF6C", VA = "0xCCAF6C")]
		public UnityNativeInterface()
		{
		}
	}

	[Token(Token = "0x200058F")]
	public class WwisePluginInterface : PropagationInterface
	{
		[Token(Token = "0x4001825")]
		public const string strOSPS = "OculusSpatializerWwise";

		[Token(Token = "0x4001826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x1700043F")]
		private IntPtr context
		{
			[Token(Token = "0x6002460")]
			[Address(RVA = "0xCCCAB4", Offset = "0xCCCAB4", VA = "0xCCCAB4")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6002461")]
		[Address(RVA = "0xCCAD7C", Offset = "0xCCAD7C", VA = "0xCCAD7C")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6002462")]
		[Address(RVA = "0xCCCB18", Offset = "0xCCCB18", VA = "0xCCCB18")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6002463")]
		[Address(RVA = "0xCCCBC4", Offset = "0xCCCBC4", VA = "0xCCCBC4", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002464")]
		[Address(RVA = "0xCCCBE8", Offset = "0xCCCBE8", VA = "0xCCCBE8")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6002465")]
		[Address(RVA = "0xCCCC94", Offset = "0xCCCC94", VA = "0xCCCC94", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002466")]
		[Address(RVA = "0xCCCCB8", Offset = "0xCCCCB8", VA = "0xCCCCB8")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6002467")]
		[Address(RVA = "0xCCCD64", Offset = "0xCCCD64", VA = "0xCCCD64", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002468")]
		[Address(RVA = "0xCCCD88", Offset = "0xCCCD88", VA = "0xCCCD88")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6002469")]
		[Address(RVA = "0xCCCE24", Offset = "0xCCCE24", VA = "0xCCCE24", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600246A")]
		[Address(RVA = "0xCCCE2C", Offset = "0xCCCE2C", VA = "0xCCCE2C")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x600246B")]
		[Address(RVA = "0xCCCF54", Offset = "0xCCCF54", VA = "0xCCCF54", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600246C")]
		[Address(RVA = "0xCCD04C", Offset = "0xCCD04C", VA = "0xCCD04C")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x600246D")]
		[Address(RVA = "0xCCD100", Offset = "0xCCD100", VA = "0xCCD100", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600246E")]
		[Address(RVA = "0xCCD10C", Offset = "0xCCD10C", VA = "0xCCD10C")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x600246F")]
		[Address(RVA = "0xCCD254", Offset = "0xCCD254", VA = "0xCCD254", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002470")]
		[Address(RVA = "0xCCD260", Offset = "0xCCD260", VA = "0xCCD260")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6002471")]
		[Address(RVA = "0xCCD328", Offset = "0xCCD328", VA = "0xCCD328", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002472")]
		[Address(RVA = "0xCCD334", Offset = "0xCCD334", VA = "0xCCD334")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6002473")]
		[Address(RVA = "0xCCD3FC", Offset = "0xCCD3FC", VA = "0xCCD3FC", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002474")]
		[Address(RVA = "0xCCD408", Offset = "0xCCD408", VA = "0xCCD408")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6002475")]
		[Address(RVA = "0xCCD4B4", Offset = "0xCCD4B4", VA = "0xCCD4B4", Slot = "14")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002476")]
		[Address(RVA = "0xCCD4D8", Offset = "0xCCD4D8", VA = "0xCCD4D8")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6002477")]
		[Address(RVA = "0xCCD574", Offset = "0xCCD574", VA = "0xCCD574", Slot = "15")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002478")]
		[Address(RVA = "0xCCD57C", Offset = "0xCCD57C", VA = "0xCCD57C")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6002479")]
		[Address(RVA = "0xCCD640", Offset = "0xCCD640", VA = "0xCCD640", Slot = "16")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600247A")]
		[Address(RVA = "0xCCD64C", Offset = "0xCCD64C", VA = "0xCCD64C")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x600247B")]
		[Address(RVA = "0xCCD710", Offset = "0xCCD710", VA = "0xCCD710", Slot = "13")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600247C")]
		[Address(RVA = "0xCCD720", Offset = "0xCCD720", VA = "0xCCD720")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x600247D")]
		[Address(RVA = "0xCCD7CC", Offset = "0xCCD7CC", VA = "0xCCD7CC", Slot = "17")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x600247E")]
		[Address(RVA = "0xCCAE28", Offset = "0xCCAE28", VA = "0xCCAE28")]
		public WwisePluginInterface()
		{
		}
	}

	[Token(Token = "0x2000590")]
	public class FMODPluginInterface : PropagationInterface
	{
		[Token(Token = "0x4001827")]
		public const string strOSPS = "OculusSpatializerFMOD";

		[Token(Token = "0x4001828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x17000440")]
		private IntPtr context
		{
			[Token(Token = "0x600247F")]
			[Address(RVA = "0xCCAFC8", Offset = "0xCCAFC8", VA = "0xCCAFC8")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6002480")]
		[Address(RVA = "0xCCAE74", Offset = "0xCCAE74", VA = "0xCCAE74")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6002481")]
		[Address(RVA = "0xCCB02C", Offset = "0xCCB02C", VA = "0xCCB02C")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6002482")]
		[Address(RVA = "0xCCB0D8", Offset = "0xCCB0D8", VA = "0xCCB0D8", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002483")]
		[Address(RVA = "0xCCB0FC", Offset = "0xCCB0FC", VA = "0xCCB0FC")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6002484")]
		[Address(RVA = "0xCCB1A8", Offset = "0xCCB1A8", VA = "0xCCB1A8", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002485")]
		[Address(RVA = "0xCCB1CC", Offset = "0xCCB1CC", VA = "0xCCB1CC")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6002486")]
		[Address(RVA = "0xCCB278", Offset = "0xCCB278", VA = "0xCCB278", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002487")]
		[Address(RVA = "0xCCB29C", Offset = "0xCCB29C", VA = "0xCCB29C")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6002488")]
		[Address(RVA = "0xCCB338", Offset = "0xCCB338", VA = "0xCCB338", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002489")]
		[Address(RVA = "0xCCB340", Offset = "0xCCB340", VA = "0xCCB340")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x600248A")]
		[Address(RVA = "0xCCB468", Offset = "0xCCB468", VA = "0xCCB468", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600248B")]
		[Address(RVA = "0xCCB560", Offset = "0xCCB560", VA = "0xCCB560")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x600248C")]
		[Address(RVA = "0xCCB614", Offset = "0xCCB614", VA = "0xCCB614", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600248D")]
		[Address(RVA = "0xCCB620", Offset = "0xCCB620", VA = "0xCCB620")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x600248E")]
		[Address(RVA = "0xCCB768", Offset = "0xCCB768", VA = "0xCCB768", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600248F")]
		[Address(RVA = "0xCCB774", Offset = "0xCCB774", VA = "0xCCB774")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6002490")]
		[Address(RVA = "0xCCB83C", Offset = "0xCCB83C", VA = "0xCCB83C", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002491")]
		[Address(RVA = "0xCCB848", Offset = "0xCCB848", VA = "0xCCB848")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6002492")]
		[Address(RVA = "0xCCB910", Offset = "0xCCB910", VA = "0xCCB910", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002493")]
		[Address(RVA = "0xCCB91C", Offset = "0xCCB91C", VA = "0xCCB91C")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6002494")]
		[Address(RVA = "0xCCB9C8", Offset = "0xCCB9C8", VA = "0xCCB9C8", Slot = "14")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002495")]
		[Address(RVA = "0xCCB9EC", Offset = "0xCCB9EC", VA = "0xCCB9EC")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6002496")]
		[Address(RVA = "0xCCBA88", Offset = "0xCCBA88", VA = "0xCCBA88", Slot = "15")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002497")]
		[Address(RVA = "0xCCBA90", Offset = "0xCCBA90", VA = "0xCCBA90")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6002498")]
		[Address(RVA = "0xCCBB54", Offset = "0xCCBB54", VA = "0xCCBB54", Slot = "16")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002499")]
		[Address(RVA = "0xCCBB60", Offset = "0xCCBB60", VA = "0xCCBB60")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x600249A")]
		[Address(RVA = "0xCCBC24", Offset = "0xCCBC24", VA = "0xCCBC24", Slot = "13")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600249B")]
		[Address(RVA = "0xCCBC34", Offset = "0xCCBC34", VA = "0xCCBC34")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x600249C")]
		[Address(RVA = "0xCCBCE0", Offset = "0xCCBCE0", VA = "0xCCBCE0", Slot = "17")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x600249D")]
		[Address(RVA = "0xCCAF20", Offset = "0xCCAF20", VA = "0xCCAF20")]
		public FMODPluginInterface()
		{
		}
	}

	[Token(Token = "0x40008EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PropagationInterface CachedInterface;

	[Token(Token = "0x170000E5")]
	public static PropagationInterface Interface
	{
		[Token(Token = "0x6000BBA")]
		[Address(RVA = "0xCCAADC", Offset = "0xCCAADC", VA = "0xCCAADC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000BBB")]
	[Address(RVA = "0xCCAB4C", Offset = "0xCCAB4C", VA = "0xCCAB4C")]
	private static PropagationInterface FindInterface()
	{
		return null;
	}

	[Token(Token = "0x6000BBC")]
	[Address(RVA = "0xCCAFB8", Offset = "0xCCAFB8", VA = "0xCCAFB8")]
	public ONSPPropagation()
	{
	}
}
[Token(Token = "0x20001B3")]
public sealed class ONSPPropagationMaterial : MonoBehaviour
{
	[Token(Token = "0x2000591")]
	public enum Preset
	{
		[Token(Token = "0x400182A")]
		Custom,
		[Token(Token = "0x400182B")]
		AcousticTile,
		[Token(Token = "0x400182C")]
		Brick,
		[Token(Token = "0x400182D")]
		BrickPainted,
		[Token(Token = "0x400182E")]
		Carpet,
		[Token(Token = "0x400182F")]
		CarpetHeavy,
		[Token(Token = "0x4001830")]
		CarpetHeavyPadded,
		[Token(Token = "0x4001831")]
		CeramicTile,
		[Token(Token = "0x4001832")]
		Concrete,
		[Token(Token = "0x4001833")]
		ConcreteRough,
		[Token(Token = "0x4001834")]
		ConcreteBlock,
		[Token(Token = "0x4001835")]
		ConcreteBlockPainted,
		[Token(Token = "0x4001836")]
		Curtain,
		[Token(Token = "0x4001837")]
		Foliage,
		[Token(Token = "0x4001838")]
		Glass,
		[Token(Token = "0x4001839")]
		GlassHeavy,
		[Token(Token = "0x400183A")]
		Grass,
		[Token(Token = "0x400183B")]
		Gravel,
		[Token(Token = "0x400183C")]
		GypsumBoard,
		[Token(Token = "0x400183D")]
		PlasterOnBrick,
		[Token(Token = "0x400183E")]
		PlasterOnConcreteBlock,
		[Token(Token = "0x400183F")]
		Soil,
		[Token(Token = "0x4001840")]
		SoundProof,
		[Token(Token = "0x4001841")]
		Snow,
		[Token(Token = "0x4001842")]
		Steel,
		[Token(Token = "0x4001843")]
		Water,
		[Token(Token = "0x4001844")]
		WoodThin,
		[Token(Token = "0x4001845")]
		WoodThick,
		[Token(Token = "0x4001846")]
		WoodFloor,
		[Token(Token = "0x4001847")]
		WoodOnConcrete
	}

	[Serializable]
	[Token(Token = "0x2000592")]
	public sealed class Point
	{
		[Token(Token = "0x4001848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float frequency;

		[Token(Token = "0x4001849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float data;

		[Token(Token = "0x600249E")]
		[Address(RVA = "0xCDAA2C", Offset = "0xCDAA2C", VA = "0xCDAA2C")]
		public Point(float frequency = 0f, float data = 0f)
		{
		}

		[Token(Token = "0x600249F")]
		[Address(RVA = "0xCDAB74", Offset = "0xCDAB74", VA = "0xCDAB74")]
		public static implicit operator Point(Vector2 v)
		{
			return null;
		}

		[Token(Token = "0x60024A0")]
		[Address(RVA = "0xCDABE4", Offset = "0xCDABE4", VA = "0xCDABE4")]
		public static implicit operator Vector2(Point point)
		{
			return default(Vector2);
		}
	}

	[Serializable]
	[Token(Token = "0x2000593")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x9BB780", Offset = "0x9BB780")]
	public sealed class Spectrum
	{
		[Serializable]
		[Token(Token = "0x20006DE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BC174", Offset = "0x9BC174")]
		private sealed class <>c
		{
			[Token(Token = "0x4001E12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001E13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Point, float> <>9__3_0;

			[Token(Token = "0x4001E14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Point, float> <>9__3_1;

			[Token(Token = "0x6002946")]
			[Address(RVA = "0xCDB0CC", Offset = "0xCDB0CC", VA = "0xCDB0CC")]
			public <>c()
			{
			}

			[Token(Token = "0x6002947")]
			[Address(RVA = "0xCDB0D4", Offset = "0xCDB0D4", VA = "0xCDB0D4")]
			internal float <get_Item>b__3_0(Point p)
			{
				return default(float);
			}

			[Token(Token = "0x6002948")]
			[Address(RVA = "0xCDB100", Offset = "0xCDB100", VA = "0xCDB100")]
			internal float <get_Item>b__3_1(Point p)
			{
				return default(float);
			}
		}

		[Token(Token = "0x400184A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int selection;

		[Token(Token = "0x400184B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Point> points;

		[Token(Token = "0x17000441")]
		public float Item
		{
			[Token(Token = "0x60024A1")]
			[Address(RVA = "0xCDAC4C", Offset = "0xCDAC4C", VA = "0xCDAC4C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60024A2")]
		[Address(RVA = "0xCDAAFC", Offset = "0xCDAAFC", VA = "0xCDAAFC")]
		public Spectrum()
		{
		}
	}

	[Token(Token = "0x40008EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr materialHandle;

	[Token(Token = "0x40008EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9C1028", Offset = "0x9C1028")]
	public Spectrum absorption;

	[Token(Token = "0x40008ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9C1060", Offset = "0x9C1060")]
	public Spectrum transmission;

	[Token(Token = "0x40008EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9C1098", Offset = "0x9C1098")]
	public Spectrum scattering;

	[Token(Token = "0x40008EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Preset preset_;

	[Token(Token = "0x170000E6")]
	public Preset preset
	{
		[Token(Token = "0x6000BBD")]
		[Address(RVA = "0xCD0820", Offset = "0xCD0820", VA = "0xCD0820")]
		get
		{
			return default(Preset);
		}
		[Token(Token = "0x6000BBE")]
		[Address(RVA = "0xCD0828", Offset = "0xCD0828", VA = "0xCD0828")]
		set
		{
		}
	}

	[Token(Token = "0x6000BBF")]
	[Address(RVA = "0xCD09E4", Offset = "0xCD09E4", VA = "0xCD09E4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BC0")]
	[Address(RVA = "0xCD05D4", Offset = "0xCD05D4", VA = "0xCD05D4")]
	public void StartInternal()
	{
	}

	[Token(Token = "0x6000BC1")]
	[Address(RVA = "0xCD10A4", Offset = "0xCD10A4", VA = "0xCD10A4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000BC2")]
	[Address(RVA = "0xCD10A8", Offset = "0xCD10A8", VA = "0xCD10A8")]
	public void DestroyInternal()
	{
	}

	[Token(Token = "0x6000BC3")]
	[Address(RVA = "0xCD09E8", Offset = "0xCD09E8", VA = "0xCD09E8")]
	public void UploadMaterial()
	{
	}

	[Token(Token = "0x6000BC4")]
	[Address(RVA = "0xCD0850", Offset = "0xCD0850", VA = "0xCD0850")]
	public void SetPreset(Preset preset)
	{
	}

	[Token(Token = "0x6000BC5")]
	[Address(RVA = "0xCD118C", Offset = "0xCD118C", VA = "0xCD118C")]
	private static void AcousticTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000BC6")]
	[Address(RVA = "0xCD1720", Offset = "0xCD1720", VA = "0xCD1720")]
	private static void Brick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000BC7")]
	[Address(RVA = "0xCD1CBC", Offset = "0xCD1CBC", VA = "0xCD1CBC")]
	private static void BrickPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000BC8")]
	[Address(RVA = "0xCD2258", Offset = "0xCD2258", VA = "0xCD2258")]
	private static void Carpet(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000BC9")]
	[Address(RVA = "0xCD27F8", Offset = "0xCD27F8", VA = "0xCD27F8")]
	private static void CarpetHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000BCA")]
	[Address(RVA = "0xCD2D90", Offset = "0xCD2D90", VA = "0xCD2D90")]
	private static void CarpetHeavyPadded(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000BCB")]
	[Address(RVA = "0xCD3328", Offset = "0xCD3328", VA = "0xCD3328")]
	private static void CeramicTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000BCC")]
	[Address(RVA = "0xCD38C8", Offset = "0xCD38C8", VA = "0xCD38C8")]
	private static void Concrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000BCD")]
	[Address(RVA = "0xCD3E68", Offset = "0xCD3E68", VA = "0xCD3E68")]
	private static void ConcreteRough(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000BCE")]
	[Address(RVA = "0xCD4404", Offset = "0xCD4404", VA = "0xCD4404")]
	private static void ConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000BCF")]
	[Address(RVA = "0xCD49A4", Offset = "0xCD49A4", VA = "0xCD49A4")]
	private static void ConcreteBlockPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000BD0")]
	[Address(RVA = "0xCD4F44", Offset = "0xCD4F44", VA = "0xCD4F44")]
	private static void Curtain(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000BD1")]
	[Address(RVA = "0xCD54DC", Offset = "0xCD54DC", VA = "0xCD54DC")]
	private static void Foliage(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000BD2")]
	[Address(RVA = "0xCD5A74", Offset = "0xCD5A74", VA = "0xCD5A74")]
	private static void Glass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000BD3")]
	[Address(RVA = "0xCD600C", Offset = "0xCD600C", VA = "0xCD600C")]
	private static void GlassHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000BD4")]
	[Address(RVA = "0xCD65AC", Offset = "0xCD65AC", VA = "0xCD65AC")]
	private static void Grass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000BD5")]
	[Address(RVA = "0xCD69C8", Offset = "0xCD69C8", VA = "0xCD69C8")]
	private static void Gravel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000BD6")]
	[Address(RVA = "0xCD6DDC", Offset = "0xCD6DDC", VA = "0xCD6DDC")]
	private static void GypsumBoard(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000BD7")]
	[Address(RVA = "0xCD737C", Offset = "0xCD737C", VA = "0xCD737C")]
	private static void PlasterOnBrick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000BD8")]
	[Address(RVA = "0xCD7918", Offset = "0xCD7918", VA = "0xCD7918")]
	private static void PlasterOnConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000BD9")]
	[Address(RVA = "0xCD7EB4", Offset = "0xCD7EB4", VA = "0xCD7EB4")]
	private static void Soil(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000BDA")]
	[Address(RVA = "0xCD82CC", Offset = "0xCD82CC", VA = "0xCD82CC")]
	private static void SoundProof(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000BDB")]
	[Address(RVA = "0xCD8460", Offset = "0xCD8460", VA = "0xCD8460")]
	private static void Snow(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000BDC")]
	[Address(RVA = "0xCD8874", Offset = "0xCD8874", VA = "0xCD8874")]
	private static void Steel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000BDD")]
	[Address(RVA = "0xCD8E10", Offset = "0xCD8E10", VA = "0xCD8E10")]
	private static void Water(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000BDE")]
	[Address(RVA = "0xCD93B0", Offset = "0xCD93B0", VA = "0xCD93B0")]
	private static void WoodThin(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000BDF")]
	[Address(RVA = "0xCD994C", Offset = "0xCD994C", VA = "0xCD994C")]
	private static void WoodThick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000BE0")]
	[Address(RVA = "0xCD9EEC", Offset = "0xCD9EEC", VA = "0xCD9EEC")]
	private static void WoodFloor(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000BE1")]
	[Address(RVA = "0xCDA48C", Offset = "0xCDA48C", VA = "0xCDA48C")]
	private static void WoodOnConcrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000BE2")]
	[Address(RVA = "0xCDAA64", Offset = "0xCDAA64", VA = "0xCDAA64")]
	public ONSPPropagationMaterial()
	{
	}
}
[Token(Token = "0x20001B4")]
public class ONSPPropagationSettings : MonoBehaviour
{
	[Token(Token = "0x40008F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float quality;

	[Token(Token = "0x6000BE3")]
	[Address(RVA = "0xCDB12C", Offset = "0xCDB12C", VA = "0xCDB12C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BE4")]
	[Address(RVA = "0xCDB1FC", Offset = "0xCDB1FC", VA = "0xCDB1FC")]
	public ONSPPropagationSettings()
	{
	}
}
[Token(Token = "0x20001B5")]
public class ONSPVersion : MonoBehaviour
{
	[Token(Token = "0x40008F1")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[PreserveSig]
	[Token(Token = "0x6000BE5")]
	[Address(RVA = "0xCDB834", Offset = "0xCDB834", VA = "0xCDB834")]
	private static extern void ONSP_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[Token(Token = "0x6000BE6")]
	[Address(RVA = "0xCDB8E8", Offset = "0xCDB8E8", VA = "0xCDB8E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BE7")]
	[Address(RVA = "0xCDB9F4", Offset = "0xCDB9F4", VA = "0xCDB9F4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BE8")]
	[Address(RVA = "0xCDB9F8", Offset = "0xCDB9F8", VA = "0xCDB9F8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BE9")]
	[Address(RVA = "0xCDB9FC", Offset = "0xCDB9FC", VA = "0xCDB9FC")]
	public ONSPVersion()
	{
	}
}
[Token(Token = "0x20001B6")]
public class OculusSpatializerFMOD : MonoBehaviour
{
	[Token(Token = "0x2000594")]
	public delegate void AudioRaycastCallback(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data);

	[Token(Token = "0x40008F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask layerMask;

	[Token(Token = "0x40008F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool visualizeRoom;

	[Token(Token = "0x40008F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool roomVisualizationInitialized;

	[Token(Token = "0x40008F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int raysPerSecond;

	[Token(Token = "0x40008F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float roomInterpSpeed;

	[Token(Token = "0x40008F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxWallDistance;

	[Token(Token = "0x40008F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int rayCacheSize;

	[Token(Token = "0x40008F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool dynamicReflectionsEnabled;

	[Token(Token = "0x40008FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AudioRaycastCallback _raycastCallback;

	[Token(Token = "0x40008FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float particleSize;

	[Token(Token = "0x40008FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float particleOffset;

	[Token(Token = "0x40008FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject room;

	[Token(Token = "0x40008FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject[] walls;

	[Token(Token = "0x40008FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Renderer[] wallRenderer;

	[Token(Token = "0x4000900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float[] dims;

	[Token(Token = "0x4000901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float[] coefs;

	[Token(Token = "0x4000902")]
	private const int HIT_COUNT = 2048;

	[Token(Token = "0x4000903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3[] points;

	[Token(Token = "0x4000904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3[] normals;

	[Token(Token = "0x4000905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private ParticleSystem sys;

	[Token(Token = "0x4000906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x4000907")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LayerMask gLayerMask;

	[Token(Token = "0x4000908")]
	private const string strOSP = "OculusSpatializerFMOD";

	[Token(Token = "0x6000BEA")]
	[Address(RVA = "0x117D078", Offset = "0x117D078", VA = "0x117D078")]
	private static Vector3 swapHandedness(Vector3 vec)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000BEB")]
	[Address(RVA = "0x117D0B0", Offset = "0x117D0B0", VA = "0x117D0B0")]
	private static void AudioRaycast(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data)
	{
	}

	[Token(Token = "0x6000BEC")]
	[Address(RVA = "0x117D280", Offset = "0x117D280", VA = "0x117D280")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BED")]
	[Address(RVA = "0x117D338", Offset = "0x117D338", VA = "0x117D338")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000BEE")]
	[Address(RVA = "0x117D448", Offset = "0x117D448", VA = "0x117D448")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BEF")]
	[Address(RVA = "0x117E080", Offset = "0x117E080", VA = "0x117E080")]
	private void inititalizeRoomVisualization()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000BF0")]
	[Address(RVA = "0x117D314", Offset = "0x117D314", VA = "0x117D314")]
	private static extern int OSP_FMOD_AssignRayCastCallback(MulticastDelegate callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x6000BF1")]
	[Address(RVA = "0x117D39C", Offset = "0x117D39C", VA = "0x117D39C")]
	private static extern int OSP_FMOD_AssignRayCastCallback(IntPtr callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x6000BF2")]
	[Address(RVA = "0x117DD68", Offset = "0x117DD68", VA = "0x117DD68")]
	private static extern int OSP_FMOD_SetDynamicRoomRaysPerSecond(int RaysPerSecond);

	[PreserveSig]
	[Token(Token = "0x6000BF3")]
	[Address(RVA = "0x117DE04", Offset = "0x117DE04", VA = "0x117DE04")]
	private static extern int OSP_FMOD_SetDynamicRoomInterpSpeed(float InterpSpeed);

	[PreserveSig]
	[Token(Token = "0x6000BF4")]
	[Address(RVA = "0x117DEA4", Offset = "0x117DEA4", VA = "0x117DEA4")]
	private static extern int OSP_FMOD_SetDynamicRoomMaxWallDistance(float MaxWallDistance);

	[PreserveSig]
	[Token(Token = "0x6000BF5")]
	[Address(RVA = "0x117DF44", Offset = "0x117DF44", VA = "0x117DF44")]
	private static extern int OSP_FMOD_SetDynamicRoomRaysRayCacheSize(int RayCacheSize);

	[PreserveSig]
	[Token(Token = "0x6000BF6")]
	[Address(RVA = "0x117DFE0", Offset = "0x117DFE0", VA = "0x117DFE0")]
	private static extern int OSP_FMOD_UpdateRoomModel(float wetLevel);

	[PreserveSig]
	[Token(Token = "0x6000BF7")]
	[Address(RVA = "0x117F3E8", Offset = "0x117F3E8", VA = "0x117F3E8")]
	private static extern int OSP_FMOD_GetRoomDimensions(float[] roomDimensions, float[] reflectionsCoefs, out Vector3 position);

	[PreserveSig]
	[Token(Token = "0x6000BF8")]
	[Address(RVA = "0x117F4AC", Offset = "0x117F4AC", VA = "0x117F4AC")]
	private static extern int OSP_FMOD_GetRaycastHits(Vector3[] points, Vector3[] normals, int length);

	[Token(Token = "0x6000BF9")]
	[Address(RVA = "0x117F570", Offset = "0x117F570", VA = "0x117F570")]
	public OculusSpatializerFMOD()
	{
	}
}
[Token(Token = "0x20001B7")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9B9694", Offset = "0x9B9694")]
public class RelocateOnDrop : MonoBehaviour
{
	[Token(Token = "0x2000595")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB7B8", Offset = "0x9BB7B8")]
	private sealed class <DoWaitUntilHeld>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400184C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400184D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400184E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RelocateOnDrop <>4__this;

		[Token(Token = "0x400184F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private InteractiveCore <core>5__2;

		[Token(Token = "0x4001850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <t>5__3;

		[Token(Token = "0x17000442")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60024AA")]
			[Address(RVA = "0xD2D4C8", Offset = "0xD2D4C8", VA = "0xD2D4C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000443")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60024AC")]
			[Address(RVA = "0xD2D538", Offset = "0xD2D538", VA = "0xD2D538", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024A7")]
		[Address(RVA = "0xD2D078", Offset = "0xD2D078", VA = "0xD2D078")]
		[DebuggerHidden]
		public <DoWaitUntilHeld>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60024A8")]
		[Address(RVA = "0xD2D0EC", Offset = "0xD2D0EC", VA = "0xD2D0EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60024A9")]
		[Address(RVA = "0xD2D0F0", Offset = "0xD2D0F0", VA = "0xD2D0F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60024AB")]
		[Address(RVA = "0xD2D4D0", Offset = "0xD2D4D0", VA = "0xD2D4D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000909")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float timeUntilRelocate;

	[Token(Token = "0x400090A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 _startingPos;

	[Token(Token = "0x400090B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool isSaveFruit;

	[Token(Token = "0x6000BFB")]
	[Address(RVA = "0xD2CE90", Offset = "0xD2CE90", VA = "0xD2CE90")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BFC")]
	[Address(RVA = "0xD2D004", Offset = "0xD2D004", VA = "0xD2D004")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9D02B4", Offset = "0x9D02B4")]
	private IEnumerator DoWaitUntilHeld()
	{
		return null;
	}

	[Token(Token = "0x6000BFD")]
	[Address(RVA = "0xD2D0A4", Offset = "0xD2D0A4", VA = "0xD2D0A4")]
	public void ResetStartingPosition(Vector3 newPos)
	{
	}

	[Token(Token = "0x6000BFE")]
	[Address(RVA = "0xD2D0B0", Offset = "0xD2D0B0", VA = "0xD2D0B0")]
	public RelocateOnDrop()
	{
	}

	[Token(Token = "0x6000BFF")]
	[Address(RVA = "0xD2D0C0", Offset = "0xD2D0C0", VA = "0xD2D0C0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D0318", Offset = "0x9D0318")]
	private void <Awake>b__3_0(PlayerControllerInput input)
	{
	}
}
[Token(Token = "0x20001B8")]
public static class FmodResonanceAudio
{
	[Token(Token = "0x2000596")]
	private struct RoomProperties
	{
		[Token(Token = "0x4001851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float positionX;

		[Token(Token = "0x4001852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float positionY;

		[Token(Token = "0x4001853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float positionZ;

		[Token(Token = "0x4001854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float rotationX;

		[Token(Token = "0x4001855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float rotationY;

		[Token(Token = "0x4001856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float rotationZ;

		[Token(Token = "0x4001857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float rotationW;

		[Token(Token = "0x4001858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float dimensionsX;

		[Token(Token = "0x4001859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float dimensionsY;

		[Token(Token = "0x400185A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float dimensionsZ;

		[Token(Token = "0x400185B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public FmodResonanceAudioRoom.SurfaceMaterial materialLeft;

		[Token(Token = "0x400185C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public FmodResonanceAudioRoom.SurfaceMaterial materialRight;

		[Token(Token = "0x400185D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public FmodResonanceAudioRoom.SurfaceMaterial materialBottom;

		[Token(Token = "0x400185E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public FmodResonanceAudioRoom.SurfaceMaterial materialTop;

		[Token(Token = "0x400185F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public FmodResonanceAudioRoom.SurfaceMaterial materialFront;

		[Token(Token = "0x4001860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public FmodResonanceAudioRoom.SurfaceMaterial materialBack;

		[Token(Token = "0x4001861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float reflectionScalar;

		[Token(Token = "0x4001862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float reverbGain;

		[Token(Token = "0x4001863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float reverbTime;

		[Token(Token = "0x4001864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float reverbBrightness;
	}

	[Token(Token = "0x400090C")]
	public const float maxGainDb = 24f;

	[Token(Token = "0x400090D")]
	public const float minGainDb = -24f;

	[Token(Token = "0x400090E")]
	public const float maxReverbBrightness = 1f;

	[Token(Token = "0x400090F")]
	public const float minReverbBrightness = -1f;

	[Token(Token = "0x4000910")]
	public const float maxReverbTime = 3f;

	[Token(Token = "0x4000911")]
	public const float maxReflectivity = 2f;

	[Token(Token = "0x4000912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Matrix4x4 flipZ;

	[Token(Token = "0x4000913")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static readonly string listenerPluginName;

	[Token(Token = "0x4000914")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static readonly int roomPropertiesSize;

	[Token(Token = "0x4000915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private static readonly int roomPropertiesIndex;

	[Token(Token = "0x4000916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static Bounds bounds;

	[Token(Token = "0x4000917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static List<FmodResonanceAudioRoom> enabledRooms;

	[Token(Token = "0x4000918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static VECTOR listenerPositionFmod;

	[Token(Token = "0x4000919")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static DSP listenerPlugin;

	[Token(Token = "0x170000E7")]
	private static DSP ListenerPlugin
	{
		[Token(Token = "0x6000C02")]
		[Address(RVA = "0xC69814", Offset = "0xC69814", VA = "0xC69814")]
		get
		{
			return default(DSP);
		}
	}

	[Token(Token = "0x6000C00")]
	[Address(RVA = "0xC692CC", Offset = "0xC692CC", VA = "0xC692CC")]
	public static void UpdateAudioRoom(FmodResonanceAudioRoom room, bool roomEnabled)
	{
	}

	[Token(Token = "0x6000C01")]
	[Address(RVA = "0xC699A8", Offset = "0xC699A8", VA = "0xC699A8")]
	public static bool IsListenerInsideRoom(FmodResonanceAudioRoom room)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C03")]
	[Address(RVA = "0xC6A0D8", Offset = "0xC6A0D8", VA = "0xC6A0D8")]
	private static float ConvertAmplitudeFromDb(float db)
	{
		return default(float);
	}

	[Token(Token = "0x6000C04")]
	[Address(RVA = "0xC6A150", Offset = "0xC6A150", VA = "0xC6A150")]
	private static void ConvertAudioTransformFromUnity(ref Vector3 position, ref Quaternion rotation)
	{
	}

	[Token(Token = "0x6000C05")]
	[Address(RVA = "0xC698D8", Offset = "0xC698D8", VA = "0xC698D8")]
	private static byte[] GetBytes(IntPtr ptr, int length)
	{
		return null;
	}

	[Token(Token = "0x6000C06")]
	[Address(RVA = "0xC695C8", Offset = "0xC695C8", VA = "0xC695C8")]
	private static RoomProperties GetRoomProperties(FmodResonanceAudioRoom room)
	{
		return default(RoomProperties);
	}

	[Token(Token = "0x6000C07")]
	[Address(RVA = "0xC69C78", Offset = "0xC69C78", VA = "0xC69C78")]
	private static DSP Initialize()
	{
		return default(DSP);
	}
}
[Token(Token = "0x20001B9")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9B96F8", Offset = "0x9B96F8")]
public class FmodResonanceAudioRoom : MonoBehaviour
{
	[Token(Token = "0x2000597")]
	public enum SurfaceMaterial
	{
		[Token(Token = "0x4001866")]
		Transparent,
		[Token(Token = "0x4001867")]
		AcousticCeilingTiles,
		[Token(Token = "0x4001868")]
		BrickBare,
		[Token(Token = "0x4001869")]
		BrickPainted,
		[Token(Token = "0x400186A")]
		ConcreteBlockCoarse,
		[Token(Token = "0x400186B")]
		ConcreteBlockPainted,
		[Token(Token = "0x400186C")]
		CurtainHeavy,
		[Token(Token = "0x400186D")]
		FiberglassInsulation,
		[Token(Token = "0x400186E")]
		GlassThin,
		[Token(Token = "0x400186F")]
		GlassThick,
		[Token(Token = "0x4001870")]
		Grass,
		[Token(Token = "0x4001871")]
		LinoleumOnConcrete,
		[Token(Token = "0x4001872")]
		Marble,
		[Token(Token = "0x4001873")]
		Metal,
		[Token(Token = "0x4001874")]
		ParquetOnConcrete,
		[Token(Token = "0x4001875")]
		PlasterRough,
		[Token(Token = "0x4001876")]
		PlasterSmooth,
		[Token(Token = "0x4001877")]
		PlywoodPanel,
		[Token(Token = "0x4001878")]
		PolishedConcreteOrTile,
		[Token(Token = "0x4001879")]
		Sheetrock,
		[Token(Token = "0x400187A")]
		WaterOrIceSurface,
		[Token(Token = "0x400187B")]
		WoodCeiling,
		[Token(Token = "0x400187C")]
		WoodPanel
	}

	[Token(Token = "0x400091A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SurfaceMaterial leftWall;

	[Token(Token = "0x400091B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public SurfaceMaterial rightWall;

	[Token(Token = "0x400091C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SurfaceMaterial floor;

	[Token(Token = "0x400091D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public SurfaceMaterial ceiling;

	[Token(Token = "0x400091E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SurfaceMaterial backWall;

	[Token(Token = "0x400091F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public SurfaceMaterial frontWall;

	[Token(Token = "0x4000920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float reflectivity;

	[Token(Token = "0x4000921")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float reverbGainDb;

	[Token(Token = "0x4000922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float reverbBrightness;

	[Token(Token = "0x4000923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float reverbTime;

	[Token(Token = "0x4000924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector3 size;

	[Token(Token = "0x6000C09")]
	[Address(RVA = "0xC6A670", Offset = "0xC6A670", VA = "0xC6A670")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C0A")]
	[Address(RVA = "0xC6A6E0", Offset = "0xC6A6E0", VA = "0xC6A6E0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000C0B")]
	[Address(RVA = "0xC6A748", Offset = "0xC6A748", VA = "0xC6A748")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C0C")]
	[Address(RVA = "0xC6A7B8", Offset = "0xC6A7B8", VA = "0xC6A7B8")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000C0D")]
	[Address(RVA = "0xC6A88C", Offset = "0xC6A88C", VA = "0xC6A88C")]
	public FmodResonanceAudioRoom()
	{
	}
}
[Token(Token = "0x20001BA")]
public class LogTypeCounter : MonoBehaviour
{
	[Token(Token = "0x4000925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Text _countLabel;

	[Token(Token = "0x4000926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string _type;

	[Token(Token = "0x4000927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int _count;

	[Token(Token = "0x6000C0E")]
	[Address(RVA = "0xC05CE4", Offset = "0xC05CE4", VA = "0xC05CE4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C0F")]
	[Address(RVA = "0xC05E88", Offset = "0xC05E88", VA = "0xC05E88")]
	private void OnLogsCleared(object sender, EventArgs e)
	{
	}

	[Token(Token = "0x6000C10")]
	[Address(RVA = "0xC05ED4", Offset = "0xC05ED4", VA = "0xC05ED4")]
	private void OnLogRemoved(object sender, LoggerEvent e)
	{
	}

	[Token(Token = "0x6000C11")]
	[Address(RVA = "0xC05F80", Offset = "0xC05F80", VA = "0xC05F80")]
	private void OnLogAdded(object sender, LoggerEvent e)
	{
	}

	[Token(Token = "0x6000C12")]
	[Address(RVA = "0xC0602C", Offset = "0xC0602C", VA = "0xC0602C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000C13")]
	[Address(RVA = "0xC061D0", Offset = "0xC061D0", VA = "0xC061D0")]
	public LogTypeCounter()
	{
	}
}
[Token(Token = "0x20001BB")]
public class CommandStatusText : MonoBehaviour
{
	[Token(Token = "0x4000928")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Text _text;

	[Token(Token = "0x4000929")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string _prevCommand;

	[Token(Token = "0x400092A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Color _executedColor;

	[Token(Token = "0x400092B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Color _failedColor;

	[Token(Token = "0x6000C14")]
	[Address(RVA = "0xE6EF54", Offset = "0xE6EF54", VA = "0xE6EF54")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C15")]
	[Address(RVA = "0xE6F058", Offset = "0xE6F058", VA = "0xE6F058")]
	private void OnCommandExecuted(object sender, CommandEvent e)
	{
	}

	[Token(Token = "0x6000C16")]
	[Address(RVA = "0xE6F128", Offset = "0xE6F128", VA = "0xE6F128")]
	private void OnCommandReceived(object sender, CommandReceivedEvent e)
	{
	}

	[Token(Token = "0x6000C17")]
	[Address(RVA = "0xE6F218", Offset = "0xE6F218", VA = "0xE6F218")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000C18")]
	[Address(RVA = "0xE6F31C", Offset = "0xE6F31C", VA = "0xE6F31C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C19")]
	[Address(RVA = "0xE6F374", Offset = "0xE6F374", VA = "0xE6F374")]
	public CommandStatusText()
	{
	}
}
[Token(Token = "0x20001BC")]
public class StabilizedCamera : MonoBehaviour
{
	[Token(Token = "0x400092C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Camera vrCamera;

	[Token(Token = "0x400092D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Camera mainDisplayCamera;

	[Token(Token = "0x6000C1A")]
	[Address(RVA = "0xD7415C", Offset = "0xD7415C", VA = "0xD7415C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C1B")]
	[Address(RVA = "0xD74278", Offset = "0xD74278", VA = "0xD74278")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C1C")]
	[Address(RVA = "0xD74388", Offset = "0xD74388", VA = "0xD74388")]
	public StabilizedCamera()
	{
	}
}
[Token(Token = "0x20001BD")]
public class SimplifyMeshPreview : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000598")]
	public class ShowcaseObject
	{
		[Token(Token = "0x400187D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MeshSimplify m_meshSimplify;

		[Token(Token = "0x400187E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 m_position;

		[Token(Token = "0x400187F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 m_angles;

		[Token(Token = "0x4001880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 m_rotationAxis;

		[Token(Token = "0x4001881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string m_description;

		[Token(Token = "0x60024AD")]
		[Address(RVA = "0xD6F198", Offset = "0xD6F198", VA = "0xD6F198")]
		public ShowcaseObject()
		{
		}
	}

	[Token(Token = "0x2000599")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB7C8", Offset = "0x9BB7C8")]
	private sealed class <ComputeMeshWithVertices>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SimplifyMeshPreview <>4__this;

		[Token(Token = "0x4001885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fAmount;

		[Token(Token = "0x4001886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<GameObject, Material[]>.Enumerator <>7__wrap1;

		[Token(Token = "0x4001887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshSimplify <meshSimplify>5__3;

		[Token(Token = "0x4001888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private MeshFilter <meshFilter>5__4;

		[Token(Token = "0x4001889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private SkinnedMeshRenderer <skin>5__5;

		[Token(Token = "0x400188A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Mesh <newMesh>5__6;

		[Token(Token = "0x17000444")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60024B2")]
			[Address(RVA = "0xD6F120", Offset = "0xD6F120", VA = "0xD6F120", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000445")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60024B4")]
			[Address(RVA = "0xD6F190", Offset = "0xD6F190", VA = "0xD6F190", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024AE")]
		[Address(RVA = "0xD6E800", Offset = "0xD6E800", VA = "0xD6E800")]
		[DebuggerHidden]
		public <ComputeMeshWithVertices>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x60024AF")]
		[Address(RVA = "0xD6E8B8", Offset = "0xD6E8B8", VA = "0xD6E8B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60024B0")]
		[Address(RVA = "0xD6E92C", Offset = "0xD6E92C", VA = "0xD6E92C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60024B1")]
		[Address(RVA = "0xD6E8D4", Offset = "0xD6E8D4", VA = "0xD6E8D4")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x60024B3")]
		[Address(RVA = "0xD6F128", Offset = "0xD6F128", VA = "0xD6F128", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400092E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ShowcaseObject[] ShowcaseObjects;

	[Token(Token = "0x400092F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material WireframeMaterial;

	[Token(Token = "0x4000930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float MouseSensitvity;

	[Token(Token = "0x4000931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float MouseReleaseSpeed;

	[Token(Token = "0x4000932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<GameObject, Material[]> m_objectMaterials;

	[Token(Token = "0x4000933")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MeshSimplify m_selectedMeshSimplify;

	[Token(Token = "0x4000934")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int m_nSelectedIndex;

	[Token(Token = "0x4000935")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool m_bWireframe;

	[Token(Token = "0x4000936")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float m_fRotationSpeed;

	[Token(Token = "0x4000937")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float m_fLastMouseX;

	[Token(Token = "0x4000938")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Mesh m_newMesh;

	[Token(Token = "0x4000939")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int m_nLastProgress;

	[Token(Token = "0x400093A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string m_strLastTitle;

	[Token(Token = "0x400093B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private string m_strLastMessage;

	[Token(Token = "0x400093C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float m_fVertexAmount;

	[Token(Token = "0x400093D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private bool m_bGUIEnabled;

	[Token(Token = "0x6000C1D")]
	[Address(RVA = "0xD6CE80", Offset = "0xD6CE80", VA = "0xD6CE80")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C1E")]
	[Address(RVA = "0xD6D294", Offset = "0xD6D294", VA = "0xD6D294")]
	private void Progress(string strTitle, string strMessage, float fT)
	{
	}

	[Token(Token = "0x6000C1F")]
	[Address(RVA = "0xD6D364", Offset = "0xD6D364", VA = "0xD6D364")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C20")]
	[Address(RVA = "0xD6D924", Offset = "0xD6D924", VA = "0xD6D924")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000C21")]
	[Address(RVA = "0xD6D000", Offset = "0xD6D000", VA = "0xD6D000")]
	private void SetActiveObject(int index)
	{
	}

	[Token(Token = "0x6000C22")]
	[Address(RVA = "0xD6E5E4", Offset = "0xD6E5E4", VA = "0xD6E5E4")]
	private void AddMaterials(GameObject theGameObject, Dictionary<GameObject, Material[]> dicMaterials)
	{
	}

	[Token(Token = "0x6000C23")]
	[Address(RVA = "0xD6D630", Offset = "0xD6D630", VA = "0xD6D630")]
	private void SetWireframe(bool bEnabled)
	{
	}

	[Token(Token = "0x6000C24")]
	[Address(RVA = "0xD6E54C", Offset = "0xD6E54C", VA = "0xD6E54C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9D0328", Offset = "0x9D0328")]
	private IEnumerator ComputeMeshWithVertices(float fAmount)
	{
		return null;
	}

	[Token(Token = "0x6000C25")]
	[Address(RVA = "0xD6E82C", Offset = "0xD6E82C", VA = "0xD6E82C")]
	public SimplifyMeshPreview()
	{
	}
}
[Token(Token = "0x20001BE")]
public class MeshSimplify : MonoBehaviour
{
	[Token(Token = "0x400093E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public Mesh m_originalMesh;

	[Token(Token = "0x400093F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public Mesh m_simplifiedMesh;

	[Token(Token = "0x4000940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public bool m_bEnablePrefabUsage;

	[Token(Token = "0x4000941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[HideInInspector]
	public float m_fVertexAmount;

	[Token(Token = "0x4000942")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public string m_strAssetPath;

	[Token(Token = "0x4000943")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public MeshSimplify m_meshSimplifyRoot;

	[Token(Token = "0x4000944")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public List<MeshSimplify> m_listDependentChildren;

	[Token(Token = "0x4000945")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public bool m_bExpandRelevanceSpheres;

	[Token(Token = "0x4000946")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public RelevanceSphere[] m_aRelevanceSpheres;

	[Token(Token = "0x4000947")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	[HideInInspector]
	private Simplifier m_meshSimplifier;

	[Token(Token = "0x4000948")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	[HideInInspector]
	private bool m_bGenerateIncludeChildren;

	[Token(Token = "0x4000949")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	[SerializeField]
	[HideInInspector]
	private bool m_bOverrideRootSettings;

	[Token(Token = "0x400094A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	[SerializeField]
	[HideInInspector]
	private bool m_bUseEdgeLength;

	[Token(Token = "0x400094B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
	[SerializeField]
	[HideInInspector]
	private bool m_bUseCurvature;

	[Token(Token = "0x400094C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SerializeField]
	[HideInInspector]
	private bool m_bProtectTexture;

	[Token(Token = "0x400094D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	[SerializeField]
	[HideInInspector]
	private bool m_bLockBorder;

	[Token(Token = "0x400094E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
	[SerializeField]
	[HideInInspector]
	private bool m_bDataDirty;

	[Token(Token = "0x400094F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x67")]
	[SerializeField]
	[HideInInspector]
	private bool m_bExcludedFromTree;

	[Token(Token = "0x170000E8")]
	public bool RecurseIntoChildren
	{
		[Token(Token = "0x6000C26")]
		[Address(RVA = "0xCC4904", Offset = "0xCC4904", VA = "0xCC4904")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000E9")]
	public Simplifier MeshSimplifier
	{
		[Token(Token = "0x6000C27")]
		[Address(RVA = "0xCC490C", Offset = "0xCC490C", VA = "0xCC490C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C28")]
		[Address(RVA = "0xCC4914", Offset = "0xCC4914", VA = "0xCC4914")]
		set
		{
		}
	}

	[Token(Token = "0x6000C29")]
	[Address(RVA = "0xCC491C", Offset = "0xCC491C", VA = "0xCC491C")]
	public static bool HasValidMeshData(GameObject go)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C2A")]
	[Address(RVA = "0xCC4A20", Offset = "0xCC4A20", VA = "0xCC4A20")]
	public static bool IsRootOrBelongsToTree(MeshSimplify meshSimplify, MeshSimplify root)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C2B")]
	[Address(RVA = "0xCC4B94", Offset = "0xCC4B94", VA = "0xCC4B94")]
	public bool IsGenerateIncludeChildrenActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C2C")]
	[Address(RVA = "0xCC4B9C", Offset = "0xCC4B9C", VA = "0xCC4B9C")]
	public bool HasDependentChildren()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C2D")]
	[Address(RVA = "0xCC4BFC", Offset = "0xCC4BFC", VA = "0xCC4BFC")]
	public bool HasDataDirty()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C2E")]
	[Address(RVA = "0xCC4C04", Offset = "0xCC4C04", VA = "0xCC4C04")]
	public bool SetDataDirty(bool bDirty)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C2F")]
	[Address(RVA = "0xCC4C14", Offset = "0xCC4C14", VA = "0xCC4C14")]
	public bool HasNonMeshSimplifyGameObjectsInTree()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C30")]
	[Address(RVA = "0xCC4C44", Offset = "0xCC4C44", VA = "0xCC4C44")]
	private bool HasNonMeshSimplifyGameObjectsInTreeRecursive(MeshSimplify root, GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C31")]
	[Address(RVA = "0xCC4DB0", Offset = "0xCC4DB0", VA = "0xCC4DB0")]
	public void ConfigureSimplifier()
	{
	}

	[Token(Token = "0x6000C32")]
	[Address(RVA = "0xCC4FBC", Offset = "0xCC4FBC", VA = "0xCC4FBC")]
	public Simplifier GetMeshSimplifier()
	{
		return null;
	}

	[Token(Token = "0x6000C33")]
	[Address(RVA = "0xCC4FC4", Offset = "0xCC4FC4", VA = "0xCC4FC4")]
	public void ComputeData(bool bRecurseIntoChildren, [Optional] Simplifier.ProgressDelegate progress)
	{
	}

	[Token(Token = "0x6000C34")]
	[Address(RVA = "0xCC5008", Offset = "0xCC5008", VA = "0xCC5008")]
	private static void ComputeDataRecursive(MeshSimplify root, GameObject gameObject, bool bRecurseIntoChildren, [Optional] Simplifier.ProgressDelegate progress)
	{
	}

	[Token(Token = "0x6000C35")]
	[Address(RVA = "0xCC5A54", Offset = "0xCC5A54", VA = "0xCC5A54")]
	public bool HasData()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C36")]
	[Address(RVA = "0xCC5B2C", Offset = "0xCC5B2C", VA = "0xCC5B2C")]
	public bool HasSimplifiedMesh()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C37")]
	[Address(RVA = "0xCC5BD0", Offset = "0xCC5BD0", VA = "0xCC5BD0")]
	public void ComputeMesh(bool bRecurseIntoChildren, [Optional] Simplifier.ProgressDelegate progress)
	{
	}

	[Token(Token = "0x6000C38")]
	[Address(RVA = "0xCC5C14", Offset = "0xCC5C14", VA = "0xCC5C14")]
	private static void ComputeMeshRecursive(MeshSimplify root, GameObject gameObject, bool bRecurseIntoChildren, [Optional] Simplifier.ProgressDelegate progress)
	{
	}

	[Token(Token = "0x6000C39")]
	[Address(RVA = "0xCC6148", Offset = "0xCC6148", VA = "0xCC6148")]
	public void AssignSimplifiedMesh(bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6000C3A")]
	[Address(RVA = "0xCC617C", Offset = "0xCC617C", VA = "0xCC617C")]
	private static void AssignSimplifiedMeshRecursive(MeshSimplify root, GameObject gameObject, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6000C3B")]
	[Address(RVA = "0xCC63F8", Offset = "0xCC63F8", VA = "0xCC63F8")]
	public void RestoreOriginalMesh(bool bDeleteData, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6000C3C")]
	[Address(RVA = "0xCC643C", Offset = "0xCC643C", VA = "0xCC643C")]
	private static void RestoreOriginalMeshRecursive(MeshSimplify root, GameObject gameObject, bool bDeleteData, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6000C3D")]
	[Address(RVA = "0xCC670C", Offset = "0xCC670C", VA = "0xCC670C")]
	public bool HasOriginalMeshActive(bool bRecurseIntoChildren)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C3E")]
	[Address(RVA = "0xCC6740", Offset = "0xCC6740", VA = "0xCC6740")]
	private static bool HasOriginalMeshActiveRecursive(MeshSimplify root, GameObject gameObject, bool bRecurseIntoChildren)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C3F")]
	[Address(RVA = "0xCC6A08", Offset = "0xCC6A08", VA = "0xCC6A08")]
	public bool HasVertexData(bool bRecurseIntoChildren)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C40")]
	[Address(RVA = "0xCC6A3C", Offset = "0xCC6A3C", VA = "0xCC6A3C")]
	private static bool HasVertexDataRecursive(MeshSimplify root, GameObject gameObject, bool bRecurseIntoChildren)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C41")]
	[Address(RVA = "0xCC6C18", Offset = "0xCC6C18", VA = "0xCC6C18")]
	public int GetOriginalVertexCount(bool bRecurseIntoChildren)
	{
		return default(int);
	}

	[Token(Token = "0x6000C42")]
	[Address(RVA = "0xCC6C64", Offset = "0xCC6C64", VA = "0xCC6C64")]
	private static void GetOriginalVertexCountRecursive(MeshSimplify root, GameObject gameObject, ref int nVertexCount, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6000C43")]
	[Address(RVA = "0xCC6E38", Offset = "0xCC6E38", VA = "0xCC6E38")]
	public int GetOriginalTriangleCount(bool bRecurseIntoChildren)
	{
		return default(int);
	}

	[Token(Token = "0x6000C44")]
	[Address(RVA = "0xCC6E84", Offset = "0xCC6E84", VA = "0xCC6E84")]
	private static void GetOriginalTriangleCountRecursive(MeshSimplify root, GameObject gameObject, ref int nTriangleCount, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6000C45")]
	[Address(RVA = "0xCC7080", Offset = "0xCC7080", VA = "0xCC7080")]
	public int GetSimplifiedVertexCount(bool bRecurseIntoChildren)
	{
		return default(int);
	}

	[Token(Token = "0x6000C46")]
	[Address(RVA = "0xCC70CC", Offset = "0xCC70CC", VA = "0xCC70CC")]
	private static void GetSimplifiedVertexCountRecursive(MeshSimplify root, GameObject gameObject, ref int nVertexCount, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6000C47")]
	[Address(RVA = "0xCC72A0", Offset = "0xCC72A0", VA = "0xCC72A0")]
	public int GetSimplifiedTriangleCount(bool bRecurseIntoChildren)
	{
		return default(int);
	}

	[Token(Token = "0x6000C48")]
	[Address(RVA = "0xCC72EC", Offset = "0xCC72EC", VA = "0xCC72EC")]
	private static void GetSimplifiedTriangleCountRecursive(MeshSimplify root, GameObject gameObject, ref int nTriangleCount, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6000C49")]
	[Address(RVA = "0xCC74E8", Offset = "0xCC74E8", VA = "0xCC74E8")]
	public void RemoveFromTree()
	{
	}

	[Token(Token = "0x6000C4A")]
	[Address(RVA = "0xCC5A20", Offset = "0xCC5A20", VA = "0xCC5A20")]
	public void FreeData(bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6000C4B")]
	[Address(RVA = "0xCC75C0", Offset = "0xCC75C0", VA = "0xCC75C0")]
	private static void FreeDataRecursive(MeshSimplify root, GameObject gameObject, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6000C4C")]
	[Address(RVA = "0xCC6050", Offset = "0xCC6050", VA = "0xCC6050")]
	private static Mesh CreateNewEmptyMesh(MeshSimplify meshSimplify)
	{
		return null;
	}

	[Token(Token = "0x6000C4D")]
	[Address(RVA = "0xCC7894", Offset = "0xCC7894", VA = "0xCC7894")]
	public MeshSimplify()
	{
	}
}
[Token(Token = "0x20001BF")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9B9730", Offset = "0x9B9730")]
public class RuntimeMeshSimplifier : MonoBehaviour
{
	[Token(Token = "0x200059A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB7D8", Offset = "0x9BB7D8")]
	private sealed class <ComputeMeshWithVertices>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400188B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400188C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400188D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RuntimeMeshSimplifier <>4__this;

		[Token(Token = "0x400188E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fAmount;

		[Token(Token = "0x400188F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<GameObject, Material[]>.Enumerator <>7__wrap1;

		[Token(Token = "0x4001890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private KeyValuePair<GameObject, Material[]> <pair>5__3;

		[Token(Token = "0x4001891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MeshSimplify <meshSimplify>5__4;

		[Token(Token = "0x4001892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private MeshFilter <meshFilter>5__5;

		[Token(Token = "0x4001893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private SkinnedMeshRenderer <skin>5__6;

		[Token(Token = "0x4001894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Mesh <newMesh>5__7;

		[Token(Token = "0x17000446")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60024B9")]
			[Address(RVA = "0xD31DA8", Offset = "0xD31DA8", VA = "0xD31DA8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000447")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60024BB")]
			[Address(RVA = "0xD31E18", Offset = "0xD31E18", VA = "0xD31E18", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024B5")]
		[Address(RVA = "0xD31084", Offset = "0xD31084", VA = "0xD31084")]
		[DebuggerHidden]
		public <ComputeMeshWithVertices>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x60024B6")]
		[Address(RVA = "0xD31110", Offset = "0xD31110", VA = "0xD31110", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60024B7")]
		[Address(RVA = "0xD31194", Offset = "0xD31194", VA = "0xD31194", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60024B8")]
		[Address(RVA = "0xD3113C", Offset = "0xD3113C", VA = "0xD3113C")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x60024BA")]
		[Address(RVA = "0xD31DB0", Offset = "0xD31DB0", VA = "0xD31DB0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000950")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<GameObject, Material[]> m_objectMaterials;

	[Token(Token = "0x4000951")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshSimplify m_selectedMeshSimplify;

	[Token(Token = "0x4000952")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_bFinished;

	[Token(Token = "0x4000953")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Mesh m_newMesh;

	[Token(Token = "0x4000954")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int m_nLastProgress;

	[Token(Token = "0x4000955")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string m_strLastTitle;

	[Token(Token = "0x4000956")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string m_strLastMessage;

	[Token(Token = "0x170000EA")]
	public string ProgressTitle
	{
		[Token(Token = "0x6000C4E")]
		[Address(RVA = "0xD30B60", Offset = "0xD30B60", VA = "0xD30B60")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000EB")]
	public string ProgressMessage
	{
		[Token(Token = "0x6000C4F")]
		[Address(RVA = "0xD30B68", Offset = "0xD30B68", VA = "0xD30B68")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000EC")]
	public int ProgressPercent
	{
		[Token(Token = "0x6000C50")]
		[Address(RVA = "0xD30B70", Offset = "0xD30B70", VA = "0xD30B70")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000ED")]
	public bool Finished
	{
		[Token(Token = "0x6000C51")]
		[Address(RVA = "0xD30B78", Offset = "0xD30B78", VA = "0xD30B78")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000C52")]
	[Address(RVA = "0xD30B80", Offset = "0xD30B80", VA = "0xD30B80")]
	public void Simplify(float percent)
	{
	}

	[Token(Token = "0x6000C53")]
	[Address(RVA = "0xD30CC4", Offset = "0xD30CC4", VA = "0xD30CC4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C54")]
	[Address(RVA = "0xD30D7C", Offset = "0xD30D7C", VA = "0xD30D7C")]
	private void AddMaterials(GameObject theGameObject, Dictionary<GameObject, Material[]> dicMaterials)
	{
	}

	[Token(Token = "0x6000C55")]
	[Address(RVA = "0xD30FB4", Offset = "0xD30FB4", VA = "0xD30FB4")]
	private void Progress(string strTitle, string strMessage, float fT)
	{
	}

	[Token(Token = "0x6000C56")]
	[Address(RVA = "0xD30C2C", Offset = "0xD30C2C", VA = "0xD30C2C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9D038C", Offset = "0x9D038C")]
	private IEnumerator ComputeMeshWithVertices(float fAmount)
	{
		return null;
	}

	[Token(Token = "0x6000C57")]
	[Address(RVA = "0xD310B0", Offset = "0xD310B0", VA = "0xD310B0")]
	public RuntimeMeshSimplifier()
	{
	}
}
namespace UltimateGameTools.MeshSimplifier
{
	[Serializable]
	[Token(Token = "0x20001C0")]
	public class MeshUniqueVertices
	{
		[Serializable]
		[Token(Token = "0x200059B")]
		public class ListIndices
		{
			[Token(Token = "0x4001895")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<int> m_listIndices;

			[Token(Token = "0x60024BC")]
			[Address(RVA = "0xF859C0", Offset = "0xF859C0", VA = "0xF859C0")]
			public ListIndices()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200059C")]
		public class SerializableBoneWeight
		{
			[Token(Token = "0x4001896")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int _boneIndex0;

			[Token(Token = "0x4001897")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int _boneIndex1;

			[Token(Token = "0x4001898")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int _boneIndex2;

			[Token(Token = "0x4001899")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int _boneIndex3;

			[Token(Token = "0x400189A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float _boneWeight0;

			[Token(Token = "0x400189B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float _boneWeight1;

			[Token(Token = "0x400189C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float _boneWeight2;

			[Token(Token = "0x400189D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float _boneWeight3;

			[Token(Token = "0x60024BD")]
			[Address(RVA = "0xF85BDC", Offset = "0xF85BDC", VA = "0xF85BDC")]
			public SerializableBoneWeight(BoneWeight boneWeight)
			{
			}

			[Token(Token = "0x60024BE")]
			[Address(RVA = "0xF85C9C", Offset = "0xF85C9C", VA = "0xF85C9C")]
			public BoneWeight ToBoneWeight()
			{
				return default(BoneWeight);
			}
		}

		[Token(Token = "0x200059D")]
		public class UniqueVertex
		{
			[Token(Token = "0x400189E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int m_nFixedX;

			[Token(Token = "0x400189F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private int m_nFixedY;

			[Token(Token = "0x40018A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private int m_nFixedZ;

			[Token(Token = "0x40018A1")]
			private const float fDecimalMultiplier = 100000f;

			[Token(Token = "0x60024BF")]
			[Address(RVA = "0xF85D54", Offset = "0xF85D54", VA = "0xF85D54", Slot = "0")]
			public override bool Equals(object obj)
			{
				return default(bool);
			}

			[Token(Token = "0x60024C0")]
			[Address(RVA = "0xF85E28", Offset = "0xF85E28", VA = "0xF85E28", Slot = "2")]
			public override int GetHashCode()
			{
				return default(int);
			}

			[Token(Token = "0x60024C1")]
			[Address(RVA = "0xF85A34", Offset = "0xF85A34", VA = "0xF85A34")]
			public UniqueVertex(Vector3 v3Vertex)
			{
			}

			[Token(Token = "0x60024C2")]
			[Address(RVA = "0xF85E88", Offset = "0xF85E88", VA = "0xF85E88")]
			public Vector3 ToVertex()
			{
				return default(Vector3);
			}

			[Token(Token = "0x60024C3")]
			[Address(RVA = "0xF85F38", Offset = "0xF85F38", VA = "0xF85F38")]
			public static bool operator ==(UniqueVertex a, UniqueVertex b)
			{
				return default(bool);
			}

			[Token(Token = "0x60024C4")]
			[Address(RVA = "0xF85F70", Offset = "0xF85F70", VA = "0xF85F70")]
			public static bool operator !=(UniqueVertex a, UniqueVertex b)
			{
				return default(bool);
			}

			[Token(Token = "0x60024C5")]
			[Address(RVA = "0xF85E3C", Offset = "0xF85E3C", VA = "0xF85E3C")]
			private void FromVertex(Vector3 vertex)
			{
			}

			[Token(Token = "0x60024C6")]
			[Address(RVA = "0xF85FB4", Offset = "0xF85FB4", VA = "0xF85FB4")]
			private int CoordToFixed(float fCoord)
			{
				return default(int);
			}

			[Token(Token = "0x60024C7")]
			[Address(RVA = "0xF85F14", Offset = "0xF85F14", VA = "0xF85F14")]
			private float FixedToCoord(int nFixed)
			{
				return default(float);
			}
		}

		[Token(Token = "0x200059E")]
		private class RepeatedVertex
		{
			[Token(Token = "0x40018A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int _nFaceIndex;

			[Token(Token = "0x40018A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private int _nOriginalVertexIndex;

			[Token(Token = "0x17000448")]
			public int FaceIndex
			{
				[Token(Token = "0x60024C8")]
				[Address(RVA = "0xF85C8C", Offset = "0xF85C8C", VA = "0xF85C8C")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x17000449")]
			public int OriginalVertexIndex
			{
				[Token(Token = "0x60024C9")]
				[Address(RVA = "0xF85C94", Offset = "0xF85C94", VA = "0xF85C94")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x60024CA")]
			[Address(RVA = "0xF85A84", Offset = "0xF85A84", VA = "0xF85A84")]
			public RepeatedVertex(int nFaceIndex, int nOriginalVertexIndex)
			{
			}
		}

		[Token(Token = "0x200059F")]
		private class RepeatedVertexList
		{
			[Token(Token = "0x40018A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int m_nUniqueIndex;

			[Token(Token = "0x40018A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private List<RepeatedVertex> m_listRepeatedVertices;

			[Token(Token = "0x1700044A")]
			public int UniqueIndex
			{
				[Token(Token = "0x60024CB")]
				[Address(RVA = "0xF85B2C", Offset = "0xF85B2C", VA = "0xF85B2C")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x60024CC")]
			[Address(RVA = "0xF85B34", Offset = "0xF85B34", VA = "0xF85B34")]
			public RepeatedVertexList(int nUniqueIndex, RepeatedVertex repeatedVertex)
			{
			}

			[Token(Token = "0x60024CD")]
			[Address(RVA = "0xF85ABC", Offset = "0xF85ABC", VA = "0xF85ABC")]
			public void Add(RepeatedVertex repeatedVertex)
			{
			}
		}

		[Token(Token = "0x4000957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private List<Vector3> m_listVertices;

		[Token(Token = "0x4000958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<Vector3> m_listVerticesWorld;

		[Token(Token = "0x4000959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<SerializableBoneWeight> m_listBoneWeights;

		[Token(Token = "0x400095A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ListIndices[] m_aFaceList;

		[Token(Token = "0x170000EE")]
		public ListIndices[] SubmeshesFaceList
		{
			[Token(Token = "0x6000C58")]
			[Address(RVA = "0xF851FC", Offset = "0xF851FC", VA = "0xF851FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EF")]
		public List<Vector3> ListVertices
		{
			[Token(Token = "0x6000C59")]
			[Address(RVA = "0xF85204", Offset = "0xF85204", VA = "0xF85204")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F0")]
		public List<Vector3> ListVerticesWorld
		{
			[Token(Token = "0x6000C5A")]
			[Address(RVA = "0xF8520C", Offset = "0xF8520C", VA = "0xF8520C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F1")]
		public List<SerializableBoneWeight> ListBoneWeights
		{
			[Token(Token = "0x6000C5B")]
			[Address(RVA = "0xF85214", Offset = "0xF85214", VA = "0xF85214")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C5C")]
		[Address(RVA = "0xF8521C", Offset = "0xF8521C", VA = "0xF8521C")]
		public void BuildData(Mesh sourceMesh, Vector3[] av3VerticesWorld)
		{
		}

		[Token(Token = "0x6000C5D")]
		[Address(RVA = "0xF85C84", Offset = "0xF85C84", VA = "0xF85C84")]
		public MeshUniqueVertices()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001C1")]
	public class RelevanceSphere
	{
		[Token(Token = "0x400095B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool m_bExpanded;

		[Token(Token = "0x400095C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3 m_v3Position;

		[Token(Token = "0x400095D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 m_v3Rotation;

		[Token(Token = "0x400095E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 m_v3Scale;

		[Token(Token = "0x400095F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m_fRelevance;

		[Token(Token = "0x6000C5E")]
		[Address(RVA = "0xF8604C", Offset = "0xF8604C", VA = "0xF8604C")]
		public RelevanceSphere()
		{
		}

		[Token(Token = "0x6000C5F")]
		[Address(RVA = "0xF860C8", Offset = "0xF860C8", VA = "0xF860C8")]
		public void SetDefault(Transform target, float fRelevance)
		{
		}
	}
	[Token(Token = "0x20001C2")]
	public class Simplifier : MonoBehaviour
	{
		[Token(Token = "0x20005A0")]
		public delegate void ProgressDelegate(string strTitle, string strProgressMessage, float fT);

		[Token(Token = "0x20005A1")]
		private class Triangle
		{
			[Token(Token = "0x40018A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Vertex[] m_aVertices;

			[Token(Token = "0x40018A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private bool m_bUVData;

			[Token(Token = "0x40018A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int[] m_aUV;

			[Token(Token = "0x40018A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int[] m_aIndices;

			[Token(Token = "0x40018AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3 m_v3Normal;

			[Token(Token = "0x40018AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private int m_nSubMesh;

			[Token(Token = "0x1700044B")]
			public Vertex[] Vertices
			{
				[Token(Token = "0x60024D2")]
				[Address(RVA = "0xF8A348", Offset = "0xF8A348", VA = "0xF8A348")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700044C")]
			public bool HasUVData
			{
				[Token(Token = "0x60024D3")]
				[Address(RVA = "0xF87BB8", Offset = "0xF87BB8", VA = "0xF87BB8")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x1700044D")]
			public int[] IndicesUV
			{
				[Token(Token = "0x60024D4")]
				[Address(RVA = "0xF8D4E0", Offset = "0xF8D4E0", VA = "0xF8D4E0")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700044E")]
			public Vector3 Normal
			{
				[Token(Token = "0x60024D5")]
				[Address(RVA = "0xF87A50", Offset = "0xF87A50", VA = "0xF87A50")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x1700044F")]
			public int[] Indices
			{
				[Token(Token = "0x60024D6")]
				[Address(RVA = "0xF8D4E8", Offset = "0xF8D4E8", VA = "0xF8D4E8")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60024D7")]
			[Address(RVA = "0xF89AF0", Offset = "0xF89AF0", VA = "0xF89AF0")]
			public Triangle(Simplifier simplifier, int nSubMesh, Vertex v0, Vertex v1, Vertex v2, bool bUVData, int nIndex1, int nIndex2, int nIndex3)
			{
			}

			[Token(Token = "0x60024D8")]
			[Address(RVA = "0xF88A28", Offset = "0xF88A28", VA = "0xF88A28")]
			public void Destructor(Simplifier simplifier)
			{
			}

			[Token(Token = "0x60024D9")]
			[Address(RVA = "0xF8797C", Offset = "0xF8797C", VA = "0xF8797C")]
			public bool HasVertex(Vertex v)
			{
				return default(bool);
			}

			[Token(Token = "0x60024DA")]
			[Address(RVA = "0xF8E2C4", Offset = "0xF8E2C4", VA = "0xF8E2C4")]
			public void ComputeNormal()
			{
			}

			[Token(Token = "0x60024DB")]
			[Address(RVA = "0xF87BC0", Offset = "0xF87BC0", VA = "0xF87BC0")]
			public int TexAt(Vertex vertex)
			{
				return default(int);
			}

			[Token(Token = "0x60024DC")]
			[Address(RVA = "0xF8E5E8", Offset = "0xF8E5E8", VA = "0xF8E5E8")]
			public int TexAt(int i)
			{
				return default(int);
			}

			[Token(Token = "0x60024DD")]
			[Address(RVA = "0xF8890C", Offset = "0xF8890C", VA = "0xF8890C")]
			public void SetTexAt(Vertex vertex, int uv)
			{
			}

			[Token(Token = "0x60024DE")]
			[Address(RVA = "0xF8E63C", Offset = "0xF8E63C", VA = "0xF8E63C")]
			public void SetTexAt(int i, int uv)
			{
			}

			[Token(Token = "0x60024DF")]
			[Address(RVA = "0xF88D30", Offset = "0xF88D30", VA = "0xF88D30")]
			public void ReplaceVertex(Vertex vold, Vertex vnew)
			{
			}
		}

		[Token(Token = "0x20005A2")]
		private class TriangleList
		{
			[Token(Token = "0x40018AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<Triangle> m_listTriangles;

			[Token(Token = "0x60024E0")]
			[Address(RVA = "0xF8BE5C", Offset = "0xF8BE5C", VA = "0xF8BE5C")]
			public TriangleList()
			{
			}
		}

		[Token(Token = "0x20005A3")]
		private class Vertex
		{
			[Token(Token = "0x40018AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 m_v3Position;

			[Token(Token = "0x40018AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 m_v3PositionWorld;

			[Token(Token = "0x40018AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool m_bHasBoneWeight;

			[Token(Token = "0x40018B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public BoneWeight m_boneWeight;

			[Token(Token = "0x40018B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public int m_nID;

			[Token(Token = "0x40018B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public List<Vertex> m_listNeighbors;

			[Token(Token = "0x40018B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public List<Triangle> m_listFaces;

			[Token(Token = "0x40018B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public float m_fObjDist;

			[Token(Token = "0x40018B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public Vertex m_collapse;

			[Token(Token = "0x40018B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public int m_nHeapSpot;

			[Token(Token = "0x60024E1")]
			[Address(RVA = "0xF89700", Offset = "0xF89700", VA = "0xF89700")]
			public Vertex(Simplifier simplifier, Vector3 v, Vector3 v3World, bool bHasBoneWeight, BoneWeight boneWeight, int nID)
			{
			}

			[Token(Token = "0x60024E2")]
			[Address(RVA = "0xF887B8", Offset = "0xF887B8", VA = "0xF887B8")]
			public void Destructor(Simplifier simplifier)
			{
			}

			[Token(Token = "0x60024E3")]
			[Address(RVA = "0xF8E4B8", Offset = "0xF8E4B8", VA = "0xF8E4B8")]
			public void RemoveIfNonNeighbor(Vertex n)
			{
			}

			[Token(Token = "0x60024E4")]
			[Address(RVA = "0xF87A5C", Offset = "0xF87A5C", VA = "0xF87A5C")]
			public bool IsBorder()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005A4")]
		private class VertexDataHashComparer : IEqualityComparer<VertexDataHash>
		{
			[Token(Token = "0x60024E5")]
			[Address(RVA = "0xF8E94C", Offset = "0xF8E94C", VA = "0xF8E94C", Slot = "4")]
			public bool Equals(VertexDataHash a, VertexDataHash b)
			{
				return default(bool);
			}

			[Token(Token = "0x60024E6")]
			[Address(RVA = "0xF8EAE4", Offset = "0xF8EAE4", VA = "0xF8EAE4", Slot = "5")]
			public int GetHashCode(VertexDataHash vdata)
			{
				return default(int);
			}

			[Token(Token = "0x60024E7")]
			[Address(RVA = "0xF8D4D8", Offset = "0xF8D4D8", VA = "0xF8D4D8")]
			public VertexDataHashComparer()
			{
			}
		}

		[Token(Token = "0x20005A5")]
		private class VertexDataHash
		{
			[Token(Token = "0x40018B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Vector3 _v3Vertex;

			[Token(Token = "0x40018B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private Vector3 _v3Normal;

			[Token(Token = "0x40018B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector2 _v2Mapping1;

			[Token(Token = "0x40018BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector2 _v2Mapping2;

			[Token(Token = "0x40018BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Color32 _color;

			[Token(Token = "0x40018BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private MeshUniqueVertices.UniqueVertex _uniqueVertex;

			[Token(Token = "0x17000450")]
			public Vector3 Vertex
			{
				[Token(Token = "0x60024E8")]
				[Address(RVA = "0xF8D5E0", Offset = "0xF8D5E0", VA = "0xF8D5E0")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x17000451")]
			public Vector3 Normal
			{
				[Token(Token = "0x60024E9")]
				[Address(RVA = "0xF8E69C", Offset = "0xF8E69C", VA = "0xF8E69C")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x17000452")]
			public Vector2 UV1
			{
				[Token(Token = "0x60024EA")]
				[Address(RVA = "0xF8E6A8", Offset = "0xF8E6A8", VA = "0xF8E6A8")]
				get
				{
					return default(Vector2);
				}
			}

			[Token(Token = "0x17000453")]
			public Vector2 UV2
			{
				[Token(Token = "0x60024EB")]
				[Address(RVA = "0xF8E6B0", Offset = "0xF8E6B0", VA = "0xF8E6B0")]
				get
				{
					return default(Vector2);
				}
			}

			[Token(Token = "0x17000454")]
			public Color32 Color
			{
				[Token(Token = "0x60024EC")]
				[Address(RVA = "0xF8E6B8", Offset = "0xF8E6B8", VA = "0xF8E6B8")]
				get
				{
					return default(Color32);
				}
			}

			[Token(Token = "0x60024ED")]
			[Address(RVA = "0xF8D4F0", Offset = "0xF8D4F0", VA = "0xF8D4F0")]
			public VertexDataHash(Vector3 v3Vertex, Vector3 v3Normal, Vector2 v2Mapping1, Vector2 v2Mapping2, Color32 color)
			{
			}

			[Token(Token = "0x60024EE")]
			[Address(RVA = "0xF8E6C0", Offset = "0xF8E6C0", VA = "0xF8E6C0", Slot = "0")]
			public override bool Equals(object obj)
			{
				return default(bool);
			}

			[Token(Token = "0x60024EF")]
			[Address(RVA = "0xF8E89C", Offset = "0xF8E89C", VA = "0xF8E89C", Slot = "2")]
			public override int GetHashCode()
			{
				return default(int);
			}

			[Token(Token = "0x60024F0")]
			[Address(RVA = "0xF8E8D0", Offset = "0xF8E8D0", VA = "0xF8E8D0")]
			public static bool operator ==(VertexDataHash a, VertexDataHash b)
			{
				return default(bool);
			}

			[Token(Token = "0x60024F1")]
			[Address(RVA = "0xF8E908", Offset = "0xF8E908", VA = "0xF8E908")]
			public static bool operator !=(VertexDataHash a, VertexDataHash b)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005A6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB7E8", Offset = "0x9BB7E8")]
		private sealed class <ProgressiveMesh>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40018BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40018BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40018BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Simplifier <>4__this;

			[Token(Token = "0x40018C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Mesh sourceMesh;

			[Token(Token = "0x40018C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public GameObject gameObject;

			[Token(Token = "0x40018C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public ProgressDelegate progress;

			[Token(Token = "0x40018C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public string strProgressDisplayObjectName;

			[Token(Token = "0x40018C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public RelevanceSphere[] aRelevanceSpheres;

			[Token(Token = "0x40018C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private int <nVertices>5__2;

			[Token(Token = "0x17000455")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60024F5")]
				[Address(RVA = "0xF8E190", Offset = "0xF8E190", VA = "0xF8E190", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000456")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60024F7")]
				[Address(RVA = "0xF8E200", Offset = "0xF8E200", VA = "0xF8E200", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60024F2")]
			[Address(RVA = "0xF86504", Offset = "0xF86504", VA = "0xF86504")]
			[DebuggerHidden]
			public <ProgressiveMesh>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x60024F3")]
			[Address(RVA = "0xF8D664", Offset = "0xF8D664", VA = "0xF8D664", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60024F4")]
			[Address(RVA = "0xF8D668", Offset = "0xF8D668", VA = "0xF8D668", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60024F6")]
			[Address(RVA = "0xF8E198", Offset = "0xF8E198", VA = "0xF8E198", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005A7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB7F8", Offset = "0x9BB7F8")]
		private sealed class <ComputeMeshWithVertexCount>d__25 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40018C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40018C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40018C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Simplifier <>4__this;

			[Token(Token = "0x40018C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int nVertices;

			[Token(Token = "0x40018CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Mesh meshOut;

			[Token(Token = "0x40018CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public GameObject gameObject;

			[Token(Token = "0x40018CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public ProgressDelegate progress;

			[Token(Token = "0x40018CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public string strProgressDisplayObjectName;

			[Token(Token = "0x40018CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private List<Vertex> <listVertices>5__2;

			[Token(Token = "0x40018CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private int <nTotalVertices>5__3;

			[Token(Token = "0x17000457")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60024FB")]
				[Address(RVA = "0xF8BED0", Offset = "0xF8BED0", VA = "0xF8BED0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000458")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60024FD")]
				[Address(RVA = "0xF8BF40", Offset = "0xF8BF40", VA = "0xF8BF40", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60024F8")]
			[Address(RVA = "0xF86634", Offset = "0xF86634", VA = "0xF86634")]
			[DebuggerHidden]
			public <ComputeMeshWithVertexCount>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x60024F9")]
			[Address(RVA = "0xF8B114", Offset = "0xF8B114", VA = "0xF8B114", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60024FA")]
			[Address(RVA = "0xF8B118", Offset = "0xF8B118", VA = "0xF8B118", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60024FC")]
			[Address(RVA = "0xF8BED8", Offset = "0xF8BED8", VA = "0xF8BED8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB808", Offset = "0x9BB808")]
		private sealed class <ConsolidateMesh>d__29 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40018D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40018D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40018D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Mesh meshIn;

			[Token(Token = "0x40018D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TriangleList[] aListTriangles;

			[Token(Token = "0x40018D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public ProgressDelegate progress;

			[Token(Token = "0x40018D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string strProgressDisplayObjectName;

			[Token(Token = "0x40018D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Mesh meshOut;

			[Token(Token = "0x40018D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public GameObject gameObject;

			[Token(Token = "0x40018D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Vector3[] <av3NormalsIn>5__2;

			[Token(Token = "0x40018D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Vector4[] <av4TangentsIn>5__3;

			[Token(Token = "0x40018DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Vector2[] <av2Mapping1In>5__4;

			[Token(Token = "0x40018DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private Vector2[] <av2Mapping2In>5__5;

			[Token(Token = "0x40018DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private Color[] <acolColorsIn>5__6;

			[Token(Token = "0x40018DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private Color32[] <aColors32In>5__7;

			[Token(Token = "0x40018DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private List<List<int>> <listlistIndicesOut>5__8;

			[Token(Token = "0x40018DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private List<Vector3> <listVerticesOut>5__9;

			[Token(Token = "0x40018E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			private List<Vector3> <listNormalsOut>5__10;

			[Token(Token = "0x40018E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			private List<Vector4> <listTangentsOut>5__11;

			[Token(Token = "0x40018E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			private List<Vector2> <listMapping1Out>5__12;

			[Token(Token = "0x40018E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			private List<Vector2> <listMapping2Out>5__13;

			[Token(Token = "0x40018E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			private List<Color32> <listColors32Out>5__14;

			[Token(Token = "0x40018E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			private List<BoneWeight> <listBoneWeightsOut>5__15;

			[Token(Token = "0x40018E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			private Dictionary<VertexDataHash, int> <dicVertexDataHash2Index>5__16;

			[Token(Token = "0x40018E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			private bool <bUV1>5__17;

			[Token(Token = "0x40018E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
			private bool <bUV2>5__18;

			[Token(Token = "0x40018E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCA")]
			private bool <bNormal>5__19;

			[Token(Token = "0x40018EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCB")]
			private bool <bTangent>5__20;

			[Token(Token = "0x40018EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
			private int <nSubMesh>5__21;

			[Token(Token = "0x40018EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			private List<int> <listIndicesOut>5__22;

			[Token(Token = "0x40018ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			private string <strMesh>5__23;

			[Token(Token = "0x40018EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			private int <i>5__24;

			[Token(Token = "0x17000459")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002501")]
				[Address(RVA = "0xF8D5EC", Offset = "0xF8D5EC", VA = "0xF8D5EC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700045A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002503")]
				[Address(RVA = "0xF8D65C", Offset = "0xF8D65C", VA = "0xF8D65C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60024FE")]
			[Address(RVA = "0xF87374", Offset = "0xF87374", VA = "0xF87374")]
			[DebuggerHidden]
			public <ConsolidateMesh>d__29(int <>1__state)
			{
			}

			[Token(Token = "0x60024FF")]
			[Address(RVA = "0xF8BF48", Offset = "0xF8BF48", VA = "0xF8BF48", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002500")]
			[Address(RVA = "0xF8BF4C", Offset = "0xF8BF4C", VA = "0xF8BF4C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002502")]
			[Address(RVA = "0xF8D5F4", Offset = "0xF8D5F4", VA = "0xF8D5F4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005A9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB818", Offset = "0x9BB818")]
		private sealed class <ComputeAllEdgeCollapseCosts>d__33 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40018EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40018F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40018F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ProgressDelegate progress;

			[Token(Token = "0x40018F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string strProgressDisplayObjectName;

			[Token(Token = "0x40018F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Simplifier <>4__this;

			[Token(Token = "0x40018F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Transform transform;

			[Token(Token = "0x40018F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public RelevanceSphere[] aRelevanceSpheres;

			[Token(Token = "0x40018F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private int <i>5__2;

			[Token(Token = "0x1700045B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002507")]
				[Address(RVA = "0xF8B09C", Offset = "0xF8B09C", VA = "0xF8B09C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700045C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002509")]
				[Address(RVA = "0xF8B10C", Offset = "0xF8B10C", VA = "0xF8B10C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002504")]
			[Address(RVA = "0xF88164", Offset = "0xF88164", VA = "0xF88164")]
			[DebuggerHidden]
			public <ComputeAllEdgeCollapseCosts>d__33(int <>1__state)
			{
			}

			[Token(Token = "0x6002505")]
			[Address(RVA = "0xF8A5D4", Offset = "0xF8A5D4", VA = "0xF8A5D4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002506")]
			[Address(RVA = "0xF8A5D8", Offset = "0xF8A5D8", VA = "0xF8A5D8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002508")]
			[Address(RVA = "0xF8B0A4", Offset = "0xF8B0A4", VA = "0xF8B0A4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C13D8", Offset = "0x9C13D8")]
		private static bool <Cancelled>k__BackingField;

		[Token(Token = "0x4000961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C13E8", Offset = "0x9C13E8")]
		private bool <CoroutineEnded>k__BackingField;

		[Token(Token = "0x4000962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int m_nCoroutineFrameMiliseconds;

		[Token(Token = "0x4000963")]
		private const float MAX_VERTEX_COLLAPSE_COST = 10000000f;

		[Token(Token = "0x4000964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<Vertex> m_listVertices;

		[Token(Token = "0x4000965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<Vertex> m_listHeap;

		[Token(Token = "0x4000966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TriangleList[] m_aListTriangles;

		[Token(Token = "0x4000967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[HideInInspector]
		private int m_nOriginalMeshVertexCount;

		[Token(Token = "0x4000968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		[HideInInspector]
		private float m_fOriginalMeshSize;

		[Token(Token = "0x4000969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[HideInInspector]
		private List<int> m_listVertexMap;

		[Token(Token = "0x400096A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[HideInInspector]
		private List<int> m_listVertexPermutationBack;

		[Token(Token = "0x400096B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[HideInInspector]
		private MeshUniqueVertices m_meshUniqueVertices;

		[Token(Token = "0x400096C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[HideInInspector]
		private Mesh m_meshOriginal;

		[Token(Token = "0x400096D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[HideInInspector]
		private bool m_bUseEdgeLength;

		[Token(Token = "0x400096E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		[SerializeField]
		[HideInInspector]
		private bool m_bUseCurvature;

		[Token(Token = "0x400096F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		[SerializeField]
		[HideInInspector]
		private bool m_bProtectTexture;

		[Token(Token = "0x4000970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
		[SerializeField]
		[HideInInspector]
		private bool m_bLockBorder;

		[Token(Token = "0x170000F2")]
		public static bool Cancelled
		{
			[Token(Token = "0x6000C60")]
			[Address(RVA = "0xF861F4", Offset = "0xF861F4", VA = "0xF861F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D03F0", Offset = "0x9D03F0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C61")]
			[Address(RVA = "0xF8625C", Offset = "0xF8625C", VA = "0xF8625C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D0400", Offset = "0x9D0400")]
			set
			{
			}
		}

		[Token(Token = "0x170000F3")]
		public static int CoroutineFrameMiliseconds
		{
			[Token(Token = "0x6000C62")]
			[Address(RVA = "0xF862CC", Offset = "0xF862CC", VA = "0xF862CC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000C63")]
			[Address(RVA = "0xF86334", Offset = "0xF86334", VA = "0xF86334")]
			set
			{
			}
		}

		[Token(Token = "0x170000F4")]
		public bool CoroutineEnded
		{
			[Token(Token = "0x6000C64")]
			[Address(RVA = "0xF863A0", Offset = "0xF863A0", VA = "0xF863A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D0410", Offset = "0x9D0410")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C65")]
			[Address(RVA = "0xF863A8", Offset = "0xF863A8", VA = "0xF863A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D0420", Offset = "0x9D0420")]
			set
			{
			}
		}

		[Token(Token = "0x170000F5")]
		public bool UseEdgeLength
		{
			[Token(Token = "0x6000C66")]
			[Address(RVA = "0xF863B4", Offset = "0xF863B4", VA = "0xF863B4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C67")]
			[Address(RVA = "0xF863BC", Offset = "0xF863BC", VA = "0xF863BC")]
			set
			{
			}
		}

		[Token(Token = "0x170000F6")]
		public bool UseCurvature
		{
			[Token(Token = "0x6000C68")]
			[Address(RVA = "0xF863C8", Offset = "0xF863C8", VA = "0xF863C8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C69")]
			[Address(RVA = "0xF863D0", Offset = "0xF863D0", VA = "0xF863D0")]
			set
			{
			}
		}

		[Token(Token = "0x170000F7")]
		public bool ProtectTexture
		{
			[Token(Token = "0x6000C6A")]
			[Address(RVA = "0xF863DC", Offset = "0xF863DC", VA = "0xF863DC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C6B")]
			[Address(RVA = "0xF863E4", Offset = "0xF863E4", VA = "0xF863E4")]
			set
			{
			}
		}

		[Token(Token = "0x170000F8")]
		public bool LockBorder
		{
			[Token(Token = "0x6000C6C")]
			[Address(RVA = "0xF863F0", Offset = "0xF863F0", VA = "0xF863F0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C6D")]
			[Address(RVA = "0xF863F8", Offset = "0xF863F8", VA = "0xF863F8")]
			set
			{
			}
		}

		[Token(Token = "0x6000C6E")]
		[Address(RVA = "0xF86404", Offset = "0xF86404", VA = "0xF86404")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9D0430", Offset = "0x9D0430")]
		public IEnumerator ProgressiveMesh(GameObject gameObject, Mesh sourceMesh, RelevanceSphere[] aRelevanceSpheres, string strProgressDisplayObjectName = "", [Optional] ProgressDelegate progress)
		{
			return null;
		}

		[Token(Token = "0x6000C6F")]
		[Address(RVA = "0xF86530", Offset = "0xF86530", VA = "0xF86530")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9D0494", Offset = "0x9D0494")]
		public IEnumerator ComputeMeshWithVertexCount(GameObject gameObject, Mesh meshOut, int nVertices, string strProgressDisplayObjectName = "", [Optional] ProgressDelegate progress)
		{
			return null;
		}

		[Token(Token = "0x6000C70")]
		[Address(RVA = "0xF86660", Offset = "0xF86660", VA = "0xF86660")]
		public int GetOriginalMeshUniqueVertexCount()
		{
			return default(int);
		}

		[Token(Token = "0x6000C71")]
		[Address(RVA = "0xF86668", Offset = "0xF86668", VA = "0xF86668")]
		public int GetOriginalMeshTriangleCount()
		{
			return default(int);
		}

		[Token(Token = "0x6000C72")]
		[Address(RVA = "0xF866C4", Offset = "0xF866C4", VA = "0xF866C4")]
		public static Vector3[] GetWorldVertices(GameObject gameObject)
		{
			return null;
		}

		[Token(Token = "0x6000C73")]
		[Address(RVA = "0xF87274", Offset = "0xF87274", VA = "0xF87274")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9D04F8", Offset = "0x9D04F8")]
		private IEnumerator ConsolidateMesh(GameObject gameObject, Mesh meshIn, Mesh meshOut, TriangleList[] aListTriangles, Vector3[] av3Vertices, string strProgressDisplayObjectName = "", [Optional] ProgressDelegate progress)
		{
			return null;
		}

		[Token(Token = "0x6000C74")]
		[Address(RVA = "0xF873A0", Offset = "0xF873A0", VA = "0xF873A0")]
		private int MapVertex(int nVertex, int nMax)
		{
			return default(int);
		}

		[Token(Token = "0x6000C75")]
		[Address(RVA = "0xF87448", Offset = "0xF87448", VA = "0xF87448")]
		private float ComputeEdgeCollapseCost(Vertex u, Vertex v, float fRelevanceBias)
		{
			return default(float);
		}

		[Token(Token = "0x6000C76")]
		[Address(RVA = "0xF87CC8", Offset = "0xF87CC8", VA = "0xF87CC8")]
		private void ComputeEdgeCostAtVertex(Vertex v, Transform transform, RelevanceSphere[] aRelevanceSpheres)
		{
		}

		[Token(Token = "0x6000C77")]
		[Address(RVA = "0xF88084", Offset = "0xF88084", VA = "0xF88084")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9D055C", Offset = "0x9D055C")]
		private IEnumerator ComputeAllEdgeCollapseCosts(string strProgressDisplayObjectName, Transform transform, RelevanceSphere[] aRelevanceSpheres, [Optional] ProgressDelegate progress)
		{
			return null;
		}

		[Token(Token = "0x6000C78")]
		[Address(RVA = "0xF88190", Offset = "0xF88190", VA = "0xF88190")]
		private void Collapse(Vertex u, Vertex v, bool bRecompute, Transform transform, RelevanceSphere[] aRelevanceSpheres)
		{
		}

		[Token(Token = "0x6000C79")]
		[Address(RVA = "0xF89520", Offset = "0xF89520", VA = "0xF89520")]
		private void AddVertices(List<Vector3> listVertices, List<Vector3> listVerticesWorld, List<MeshUniqueVertices.SerializableBoneWeight> listBoneWeights)
		{
		}

		[Token(Token = "0x6000C7A")]
		[Address(RVA = "0xF89840", Offset = "0xF89840", VA = "0xF89840")]
		private void AddFaceListSubMesh(int nSubMesh, List<int> listTriangles, int[] anIndices, Vector2[] v2Mapping)
		{
		}

		[Token(Token = "0x6000C7B")]
		[Address(RVA = "0xF8A048", Offset = "0xF8A048", VA = "0xF8A048")]
		private void ShareUV(Vector2[] aMapping, Triangle t)
		{
		}

		[Token(Token = "0x6000C7C")]
		[Address(RVA = "0xF8A350", Offset = "0xF8A350", VA = "0xF8A350")]
		private Vertex MinimumCostEdge()
		{
			return null;
		}

		[Token(Token = "0x6000C7D")]
		[Address(RVA = "0xF8A414", Offset = "0xF8A414", VA = "0xF8A414")]
		private float HeapValue(int i)
		{
			return default(float);
		}

		[Token(Token = "0x6000C7E")]
		[Address(RVA = "0xF89134", Offset = "0xF89134", VA = "0xF89134")]
		private void HeapSortUp(int k)
		{
		}

		[Token(Token = "0x6000C7F")]
		[Address(RVA = "0xF89318", Offset = "0xF89318", VA = "0xF89318")]
		private void HeapSortDown(int k)
		{
		}

		[Token(Token = "0x6000C80")]
		[Address(RVA = "0xF8A500", Offset = "0xF8A500", VA = "0xF8A500")]
		private void HeapAdd(Vertex v)
		{
		}

		[Token(Token = "0x6000C81")]
		[Address(RVA = "0xF8A354", Offset = "0xF8A354", VA = "0xF8A354")]
		private Vertex HeapPop()
		{
			return null;
		}

		[Token(Token = "0x6000C82")]
		[Address(RVA = "0xF8A5B4", Offset = "0xF8A5B4", VA = "0xF8A5B4")]
		public Simplifier()
		{
		}
	}
}
namespace RTC
{
	[Token(Token = "0x20001C3")]
	public sealed class CircularBuffer<T>
	{
		[Token(Token = "0x4000971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T[] _buffer;

		[Token(Token = "0x4000972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int _front;

		[Token(Token = "0x4000973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int _position;

		[Token(Token = "0x4000974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool _full;

		[Token(Token = "0x6000C84")]
		public CircularBuffer(int capacity)
		{
		}

		[Token(Token = "0x6000C85")]
		public void Add(T item)
		{
		}

		[Token(Token = "0x6000C86")]
		public T GetNext()
		{
			return (T)null;
		}

		[Token(Token = "0x6000C87")]
		public T GetPrevious()
		{
			return (T)null;
		}
	}
	[Token(Token = "0x20001C4")]
	public class CircularObjectPool : IDisposable
	{
		[Token(Token = "0x4000975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PoolableGameObject[] _pool;

		[Token(Token = "0x4000976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GameObject _parent;

		[Token(Token = "0x4000977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int _pointer;

		[Token(Token = "0x6000C88")]
		[Address(RVA = "0xD1EF58", Offset = "0xD1EF58", VA = "0xD1EF58")]
		public CircularObjectPool(int capacity, PoolableGameObject prefab)
		{
		}

		[Token(Token = "0x6000C89")]
		public T GetObject<T>() where T : class
		{
			return null;
		}

		[Token(Token = "0x6000C8A")]
		[Address(RVA = "0xD1F0CC", Offset = "0xD1F0CC", VA = "0xD1F0CC")]
		public void Pool(PoolableGameObject obj)
		{
		}

		[Token(Token = "0x6000C8B")]
		[Address(RVA = "0xD1F198", Offset = "0xD1F198", VA = "0xD1F198")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000C8C")]
		[Address(RVA = "0xD1F224", Offset = "0xD1F224", VA = "0xD1F224", Slot = "4")]
		public void Dispose()
		{
		}
	}
	[Token(Token = "0x20001C5")]
	public class CommandFilter
	{
		[Token(Token = "0x20005AA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB828", Offset = "0x9BB828")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x40018F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CommandFilter <>4__this;

			[Token(Token = "0x40018F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string prefix;

			[Token(Token = "0x600250A")]
			[Address(RVA = "0xD1F604", Offset = "0xD1F604", VA = "0xD1F604")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x600250B")]
			[Address(RVA = "0xD1F844", Offset = "0xD1F844", VA = "0xD1F844")]
			internal bool <FilterByName>b__0(CommandInfo info)
			{
				return default(bool);
			}

			[Token(Token = "0x600250C")]
			[Address(RVA = "0xD1F8B4", Offset = "0xD1F8B4", VA = "0xD1F8B4")]
			internal bool <FilterByName>b__1(CommandInfo info)
			{
				return default(bool);
			}

			[Token(Token = "0x600250D")]
			[Address(RVA = "0xD1F924", Offset = "0xD1F924", VA = "0xD1F924")]
			internal bool <FilterByName>b__2(CommandInfo info)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IEnumerable<CommandInfo> cachedCommands;

		[Token(Token = "0x4000979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string lastPrefix;

		[Token(Token = "0x6000C8D")]
		[Address(RVA = "0xD1F324", Offset = "0xD1F324", VA = "0xD1F324")]
		public CommandFilter()
		{
		}

		[Token(Token = "0x6000C8E")]
		[Address(RVA = "0xD1F3A0", Offset = "0xD1F3A0", VA = "0xD1F3A0")]
		public IEnumerable<CommandInfo> FilterByName(string prefix)
		{
			return null;
		}

		[Token(Token = "0x6000C8F")]
		[Address(RVA = "0xD1F808", Offset = "0xD1F808", VA = "0xD1F808")]
		private bool StartsWithIgnoreCase(string str, string prefix)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20001C6")]
	public class ConsoleManager : MonoBehaviour
	{
		[Token(Token = "0x400097A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ConsoleWindow _window;

		[Token(Token = "0x400097B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private KeyCode _toggleKey;

		[Token(Token = "0x6000C90")]
		[Address(RVA = "0xD1F994", Offset = "0xD1F994", VA = "0xD1F994")]
		private void Application_logMessageReceived(string condition, string stackTrace, LogType type)
		{
		}

		[Token(Token = "0x6000C91")]
		[Address(RVA = "0xD1FBF0", Offset = "0xD1FBF0", VA = "0xD1FBF0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C92")]
		[Address(RVA = "0xD1FC9C", Offset = "0xD1FC9C", VA = "0xD1FC9C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C93")]
		[Address(RVA = "0xD1FD54", Offset = "0xD1FD54", VA = "0xD1FD54")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C94")]
		[Address(RVA = "0xD1FDC8", Offset = "0xD1FDC8", VA = "0xD1FDC8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000C95")]
		[Address(RVA = "0xD1FE3C", Offset = "0xD1FE3C", VA = "0xD1FE3C")]
		public ConsoleManager()
		{
		}
	}
	[Token(Token = "0x20001C7")]
	public class PoolableGameObject : MonoBehaviour
	{
		[Token(Token = "0x400097C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _canBePooled;

		[Token(Token = "0x170000F9")]
		public bool CanBePooled
		{
			[Token(Token = "0x6000C97")]
			[Address(RVA = "0xD28464", Offset = "0xD28464", VA = "0xD28464")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C96")]
			[Address(RVA = "0xD28458", Offset = "0xD28458", VA = "0xD28458")]
			set
			{
			}
		}

		[Token(Token = "0x6000C98")]
		[Address(RVA = "0xD284AC", Offset = "0xD284AC", VA = "0xD284AC")]
		public void OnReset()
		{
		}

		[Token(Token = "0x6000C99")]
		[Address(RVA = "0xD1F160", Offset = "0xD1F160", VA = "0xD1F160")]
		public void OnPool()
		{
		}

		[Token(Token = "0x6000C9A")]
		[Address(RVA = "0xD284E4", Offset = "0xD284E4", VA = "0xD284E4")]
		public PoolableGameObject()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001C8")]
	public class ThemedLogDesign : BaseLogDesign
	{
		[Token(Token = "0x400097D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Sprite Icon;

		[Token(Token = "0x6000C9B")]
		[Address(RVA = "0xD284F4", Offset = "0xD284F4", VA = "0xD284F4")]
		public ThemedLogDesign()
		{
		}
	}
}
namespace RTC.Demo
{
	[Token(Token = "0x20001C9")]
	public static class DemoCommands
	{
		[Serializable]
		[Token(Token = "0x20005AB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB838", Offset = "0x9BB838")]
		private sealed class <>c
		{
			[Token(Token = "0x40018F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40018FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<int, string> <>9__3_0;

			[Token(Token = "0x40018FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<char, string> <>9__4_0;

			[Token(Token = "0x40018FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<Vector2, string> <>9__6_0;

			[Token(Token = "0x600250F")]
			[Address(RVA = "0xD27718", Offset = "0xD27718", VA = "0xD27718")]
			public <>c()
			{
			}

			[Token(Token = "0x6002510")]
			[Address(RVA = "0xD27720", Offset = "0xD27720", VA = "0xD27720")]
			internal string <IntList>b__3_0(int i)
			{
				return null;
			}

			[Token(Token = "0x6002511")]
			[Address(RVA = "0xD27748", Offset = "0xD27748", VA = "0xD27748")]
			internal string <CharArray>b__4_0(char c)
			{
				return null;
			}

			[Token(Token = "0x6002512")]
			[Address(RVA = "0xD27770", Offset = "0xD27770", VA = "0xD27770")]
			internal string <VectorList>b__6_0(Vector2 v)
			{
				return null;
			}
		}

		[Token(Token = "0x6000C9C")]
		[Address(RVA = "0xD26EC8", Offset = "0xD26EC8", VA = "0xD26EC8")]
		[AttributeAttribute(Name = "CommandAttribute", RVA = "0x9D05C0", Offset = "0x9D05C0")]
		public static void Add(int x, float y)
		{
		}

		[Token(Token = "0x6000C9D")]
		[Address(RVA = "0xD2700C", Offset = "0xD2700C", VA = "0xD2700C")]
		[AttributeAttribute(Name = "CommandAttribute", RVA = "0x9D063C", Offset = "0x9D063C")]
		public static void Default(bool b = false)
		{
		}

		[Token(Token = "0x6000C9E")]
		[Address(RVA = "0xD2707C", Offset = "0xD2707C", VA = "0xD2707C")]
		[AttributeAttribute(Name = "CommandAttribute", RVA = "0x9D06B8", Offset = "0x9D06B8")]
		public static void Log(string item)
		{
		}

		[Token(Token = "0x6000C9F")]
		[Address(RVA = "0xD270D0", Offset = "0xD270D0", VA = "0xD270D0")]
		[AttributeAttribute(Name = "CommandAttribute", RVA = "0x9D0734", Offset = "0x9D0734")]
		public static void IntList(List<int> ints)
		{
		}

		[Token(Token = "0x6000CA0")]
		[Address(RVA = "0xD27224", Offset = "0xD27224", VA = "0xD27224")]
		[AttributeAttribute(Name = "CommandAttribute", RVA = "0x9D07B0", Offset = "0x9D07B0")]
		public static void CharArray(char[] arr)
		{
		}

		[Token(Token = "0x6000CA1")]
		[Address(RVA = "0xD27378", Offset = "0xD27378", VA = "0xD27378")]
		[AttributeAttribute(Name = "CommandAttribute", RVA = "0x9D082C", Offset = "0x9D082C")]
		public static void PrintVector(Vector3 vector)
		{
		}

		[Token(Token = "0x6000CA2")]
		[Address(RVA = "0xD273F0", Offset = "0xD273F0", VA = "0xD273F0")]
		[AttributeAttribute(Name = "CommandAttribute", RVA = "0x9D08A8", Offset = "0x9D08A8")]
		public static void VectorList(List<Vector2> list)
		{
		}

		[Token(Token = "0x6000CA3")]
		[Address(RVA = "0xD27544", Offset = "0xD27544", VA = "0xD27544")]
		[AttributeAttribute(Name = "CommandAttribute", RVA = "0x9D0924", Offset = "0x9D0924")]
		public static void Exception()
		{
		}

		[Token(Token = "0x6000CA4")]
		[Address(RVA = "0xD275AC", Offset = "0xD275AC", VA = "0xD275AC")]
		[AttributeAttribute(Name = "CommandAttribute", RVA = "0x9D09A0", Offset = "0x9D09A0")]
		public static void Warning(string warning)
		{
		}

		[Token(Token = "0x6000CA5")]
		[Address(RVA = "0xD27614", Offset = "0xD27614", VA = "0xD27614")]
		[AttributeAttribute(Name = "CommandAttribute", RVA = "0x9D0A1C", Offset = "0x9D0A1C")]
		public static void Quit()
		{
		}

		[Token(Token = "0x6000CA6")]
		[Address(RVA = "0xD2761C", Offset = "0xD2761C", VA = "0xD2761C")]
		[AttributeAttribute(Name = "CommandAttribute", RVA = "0x9D0A98", Offset = "0x9D0A98")]
		public static void Test()
		{
		}

		[Token(Token = "0x6000CA7")]
		[Address(RVA = "0xD27668", Offset = "0xD27668", VA = "0xD27668")]
		[AttributeAttribute(Name = "CommandAttribute", RVA = "0x9D0AF8", Offset = "0x9D0AF8")]
		public static void Empty()
		{
		}
	}
	[Token(Token = "0x20001CA")]
	public class DemoCommandsProvider : ITypesProvider
	{
		[Token(Token = "0x6000CA8")]
		[Address(RVA = "0xD27798", Offset = "0xD27798", VA = "0xD27798", Slot = "4")]
		public Type[] GetTypes()
		{
			return null;
		}

		[Token(Token = "0x6000CA9")]
		[Address(RVA = "0xD27818", Offset = "0xD27818", VA = "0xD27818")]
		public DemoCommandsProvider()
		{
		}
	}
	[Token(Token = "0x20001CB")]
	public class Vector3Converter : ITypeConverter
	{
		[Serializable]
		[Token(Token = "0x20005AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB848", Offset = "0x9BB848")]
		private sealed class <>c
		{
			[Token(Token = "0x40018FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40018FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<string, bool> <>9__4_0;

			[Token(Token = "0x40018FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<string, float> <>9__4_1;

			[Token(Token = "0x6002514")]
			[Address(RVA = "0xD283C4", Offset = "0xD283C4", VA = "0xD283C4")]
			public <>c()
			{
			}

			[Token(Token = "0x6002515")]
			[Address(RVA = "0xD283CC", Offset = "0xD283CC", VA = "0xD283CC")]
			internal bool <ConvertFrom>b__4_0(string s)
			{
				return default(bool);
			}

			[Token(Token = "0x6002516")]
			[Address(RVA = "0xD283F0", Offset = "0xD283F0", VA = "0xD283F0")]
			internal float <ConvertFrom>b__4_1(string s)
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000FA")]
		public string Regex
		{
			[Token(Token = "0x6000CAA")]
			[Address(RVA = "0xD27FD4", Offset = "0xD27FD4", VA = "0xD27FD4", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FB")]
		public Type Type
		{
			[Token(Token = "0x6000CAB")]
			[Address(RVA = "0xD2801C", Offset = "0xD2801C", VA = "0xD2801C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CAC")]
		[Address(RVA = "0xD2808C", Offset = "0xD2808C", VA = "0xD2808C", Slot = "6")]
		public object ConvertFrom(string match)
		{
			return null;
		}

		[Token(Token = "0x6000CAD")]
		[Address(RVA = "0xD27AA8", Offset = "0xD27AA8", VA = "0xD27AA8")]
		public Vector3Converter()
		{
		}
	}
	[Token(Token = "0x20001CC")]
	public class Vector2Converter : ITypeConverter
	{
		[Serializable]
		[Token(Token = "0x20005AD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB858", Offset = "0x9BB858")]
		private sealed class <>c
		{
			[Token(Token = "0x4001900")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001901")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<string, bool> <>9__4_0;

			[Token(Token = "0x4001902")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<string, float> <>9__4_1;

			[Token(Token = "0x6002518")]
			[Address(RVA = "0xD27F40", Offset = "0xD27F40", VA = "0xD27F40")]
			public <>c()
			{
			}

			[Token(Token = "0x6002519")]
			[Address(RVA = "0xD27F48", Offset = "0xD27F48", VA = "0xD27F48")]
			internal bool <ConvertFrom>b__4_0(string s)
			{
				return default(bool);
			}

			[Token(Token = "0x600251A")]
			[Address(RVA = "0xD27F6C", Offset = "0xD27F6C", VA = "0xD27F6C")]
			internal float <ConvertFrom>b__4_1(string s)
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000FC")]
		public string Regex
		{
			[Token(Token = "0x6000CAE")]
			[Address(RVA = "0xD27B80", Offset = "0xD27B80", VA = "0xD27B80", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FD")]
		public Type Type
		{
			[Token(Token = "0x6000CAF")]
			[Address(RVA = "0xD27BC8", Offset = "0xD27BC8", VA = "0xD27BC8", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CB0")]
		[Address(RVA = "0xD27C38", Offset = "0xD27C38", VA = "0xD27C38", Slot = "6")]
		public object ConvertFrom(string regexMatch)
		{
			return null;
		}

		[Token(Token = "0x6000CB1")]
		[Address(RVA = "0xD27B70", Offset = "0xD27B70", VA = "0xD27B70")]
		public Vector2Converter()
		{
		}
	}
	[Token(Token = "0x20001CD")]
	public static class DemoLogTypes
	{
		[Token(Token = "0x400097E")]
		public const string None = "None";

		[Token(Token = "0x6000CB2")]
		[Address(RVA = "0xD26F4C", Offset = "0xD26F4C", VA = "0xD26F4C")]
		public static void LogType(this RTConsole console, string type, string title)
		{
		}
	}
	[Token(Token = "0x20001CE")]
	public class DemoManager : MonoBehaviour
	{
		[Token(Token = "0x6000CB3")]
		[Address(RVA = "0xD27820", Offset = "0xD27820", VA = "0xD27820")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CB4")]
		[Address(RVA = "0xD27AB0", Offset = "0xD27AB0", VA = "0xD27AB0")]
		private void AddTypeConverter(ITypeConverter type)
		{
		}

		[Token(Token = "0x6000CB5")]
		[Address(RVA = "0xD27B78", Offset = "0xD27B78", VA = "0xD27B78")]
		public DemoManager()
		{
		}
	}
}
namespace RTC.UI
{
	[Token(Token = "0x20001CF")]
	public class AutocompleteContainer : MonoBehaviour
	{
		[Token(Token = "0x400097F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int _maxSuggestionsCount;

		[Token(Token = "0x4000980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AutocompleteItem _autocompleteItem;

		[Token(Token = "0x4000981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private InputBar _inputBar;

		[Token(Token = "0x4000982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CircularObjectPool _filterPool;

		[Token(Token = "0x4000983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int _filterCount;

		[Token(Token = "0x170000FE")]
		public bool IsFilterActive
		{
			[Token(Token = "0x6000CB6")]
			[Address(RVA = "0xD2852C", Offset = "0xD2852C", VA = "0xD2852C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000CB7")]
		[Address(RVA = "0xD2853C", Offset = "0xD2853C", VA = "0xD2853C")]
		public void Display(IEnumerable<CommandInfo> commands)
		{
		}

		[Token(Token = "0x6000CB8")]
		[Address(RVA = "0xD28A1C", Offset = "0xD28A1C", VA = "0xD28A1C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CB9")]
		[Address(RVA = "0xD28A90", Offset = "0xD28A90", VA = "0xD28A90")]
		private void Update()
		{
		}

		[Token(Token = "0x6000CBA")]
		[Address(RVA = "0xD28C74", Offset = "0xD28C74", VA = "0xD28C74")]
		public AutocompleteContainer()
		{
		}
	}
	[Token(Token = "0x20001D0")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9B97A4", Offset = "0x9B97A4")]
	public class AutocompleteItem : PoolableGameObject
	{
		[Token(Token = "0x20005AE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB868", Offset = "0x9BB868")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x4001903")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public InputBar inputBar;

			[Token(Token = "0x4001904")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public AutocompleteItem <>4__this;

			[Token(Token = "0x600251B")]
			[Address(RVA = "0xD28DC8", Offset = "0xD28DC8", VA = "0xD28DC8")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x600251C")]
			[Address(RVA = "0xD28DE0", Offset = "0xD28DE0", VA = "0xD28DE0")]
			internal void <Start>b__0()
			{
			}
		}

		[Token(Token = "0x4000984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text _name;

		[Token(Token = "0x170000FF")]
		public string Name
		{
			[Token(Token = "0x6000CBB")]
			[Address(RVA = "0xD28C7C", Offset = "0xD28C7C", VA = "0xD28C7C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CBC")]
			[Address(RVA = "0xD289DC", Offset = "0xD289DC", VA = "0xD289DC")]
			set
			{
			}
		}

		[Token(Token = "0x6000CBD")]
		[Address(RVA = "0xD28CB4", Offset = "0xD28CB4", VA = "0xD28CB4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CBE")]
		[Address(RVA = "0xD28DD0", Offset = "0xD28DD0", VA = "0xD28DD0")]
		public AutocompleteItem()
		{
		}
	}
	[Token(Token = "0x20001D1")]
	public class ConsoleWindow : MonoBehaviour
	{
		[Token(Token = "0x4000985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool _startHidden;

		[Token(Token = "0x17000100")]
		public bool IsOpen
		{
			[Token(Token = "0x6000CBF")]
			[Address(RVA = "0xD29630", Offset = "0xD29630", VA = "0xD29630")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000CC0")]
		[Address(RVA = "0xD29664", Offset = "0xD29664", VA = "0xD29664")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CC1")]
		[Address(RVA = "0xD29674", Offset = "0xD29674", VA = "0xD29674")]
		public void Close()
		{
		}

		[Token(Token = "0x6000CC2")]
		[Address(RVA = "0xD296AC", Offset = "0xD296AC", VA = "0xD296AC")]
		public void Open()
		{
		}

		[Token(Token = "0x6000CC3")]
		[Address(RVA = "0xD1FCE8", Offset = "0xD1FCE8", VA = "0xD1FCE8")]
		public void Toggle()
		{
		}

		[Token(Token = "0x6000CC4")]
		[Address(RVA = "0xD296E4", Offset = "0xD296E4", VA = "0xD296E4")]
		public ConsoleWindow()
		{
		}
	}
	[Token(Token = "0x20001D2")]
	public class InputBar : MonoBehaviour
	{
		[Token(Token = "0x20005AF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB878", Offset = "0x9BB878")]
		private sealed class <MoveTextEnd_NextFrame>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001905")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001906")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001907")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public InputBar <>4__this;

			[Token(Token = "0x1700045D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002520")]
				[Address(RVA = "0xD29D90", Offset = "0xD29D90", VA = "0xD29D90", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700045E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002522")]
				[Address(RVA = "0xD29E00", Offset = "0xD29E00", VA = "0xD29E00", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600251D")]
			[Address(RVA = "0xD29884", Offset = "0xD29884", VA = "0xD29884")]
			[DebuggerHidden]
			public <MoveTextEnd_NextFrame>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x600251E")]
			[Address(RVA = "0xD29CC8", Offset = "0xD29CC8", VA = "0xD29CC8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600251F")]
			[Address(RVA = "0xD29CCC", Offset = "0xD29CCC", VA = "0xD29CCC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002521")]
			[Address(RVA = "0xD29D98", Offset = "0xD29D98", VA = "0xD29D98", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private InputField _inputField;

		[Token(Token = "0x4000987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Button _executeButton;

		[Token(Token = "0x4000988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AutocompleteContainer _suggestionsContainer;

		[Token(Token = "0x4000989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private KeyCode _submitKey;

		[Token(Token = "0x400098A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private int _commandHistoryCount;

		[Token(Token = "0x400098B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CircularBuffer<string> _executedCommands;

		[Token(Token = "0x400098C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private CommandFilter _commandFilter;

		[Token(Token = "0x17000101")]
		public InputField InputField
		{
			[Token(Token = "0x6000CC5")]
			[Address(RVA = "0xD296EC", Offset = "0xD296EC", VA = "0xD296EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000102")]
		public string Input
		{
			[Token(Token = "0x6000CC6")]
			[Address(RVA = "0xD289AC", Offset = "0xD289AC", VA = "0xD289AC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CC7")]
			[Address(RVA = "0xD28E44", Offset = "0xD28E44", VA = "0xD28E44")]
			set
			{
			}
		}

		[Token(Token = "0x6000CC8")]
		[Address(RVA = "0xD296F4", Offset = "0xD296F4", VA = "0xD296F4")]
		public void Execute(string command)
		{
		}

		[Token(Token = "0x6000CC9")]
		[Address(RVA = "0xD28C0C", Offset = "0xD28C0C", VA = "0xD28C0C")]
		public void Focus()
		{
		}

		[Token(Token = "0x6000CCA")]
		[Address(RVA = "0xD29810", Offset = "0xD29810", VA = "0xD29810")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9D0B18", Offset = "0x9D0B18")]
		private IEnumerator MoveTextEnd_NextFrame()
		{
			return null;
		}

		[Token(Token = "0x6000CCB")]
		[Address(RVA = "0xD298B0", Offset = "0xD298B0", VA = "0xD298B0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000CCC")]
		[Address(RVA = "0xD298B4", Offset = "0xD298B4", VA = "0xD298B4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CCD")]
		[Address(RVA = "0xD29AE4", Offset = "0xD29AE4", VA = "0xD29AE4")]
		public void Update()
		{
		}

		[Token(Token = "0x6000CCE")]
		[Address(RVA = "0xD29BE0", Offset = "0xD29BE0", VA = "0xD29BE0")]
		public InputBar()
		{
		}

		[Token(Token = "0x6000CCF")]
		[Address(RVA = "0xD29BE8", Offset = "0xD29BE8", VA = "0xD29BE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D0B7C", Offset = "0x9D0B7C")]
		private void <Start>b__16_0(string cmd)
		{
		}

		[Token(Token = "0x6000CD0")]
		[Address(RVA = "0xD29C2C", Offset = "0xD29C2C", VA = "0xD29C2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D0B8C", Offset = "0x9D0B8C")]
		private void <Start>b__16_1(string prefix)
		{
		}

		[Token(Token = "0x6000CD1")]
		[Address(RVA = "0xD29C88", Offset = "0xD29C88", VA = "0xD29C88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D0B9C", Offset = "0x9D0B9C")]
		private void <Start>b__16_2()
		{
		}
	}
	[Token(Token = "0x20001D3")]
	public class BaseLogEntry : PoolableGameObject
	{
		[Token(Token = "0x400098D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text _title;

		[Token(Token = "0x400098E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Color _color;

		[Token(Token = "0x400098F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C1708", Offset = "0x9C1708")]
		private Log <Log>k__BackingField;

		[Token(Token = "0x17000103")]
		public Color TitleColor
		{
			[Token(Token = "0x6000CD2")]
			[Address(RVA = "0xD28ED4", Offset = "0xD28ED4", VA = "0xD28ED4")]
			set
			{
			}
		}

		[Token(Token = "0x17000104")]
		public string Title
		{
			[Token(Token = "0x6000CD3")]
			[Address(RVA = "0xD28F3C", Offset = "0xD28F3C", VA = "0xD28F3C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CD4")]
			[Address(RVA = "0xD28F74", Offset = "0xD28F74", VA = "0xD28F74")]
			set
			{
			}
		}

		[Token(Token = "0x17000105")]
		public Log Log
		{
			[Token(Token = "0x6000CD5")]
			[Address(RVA = "0xD28FB4", Offset = "0xD28FB4", VA = "0xD28FB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D0BAC", Offset = "0x9D0BAC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CD6")]
			[Address(RVA = "0xD28FBC", Offset = "0xD28FBC", VA = "0xD28FBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D0BBC", Offset = "0x9D0BBC")]
			set
			{
			}
		}

		[Token(Token = "0x6000CD7")]
		[Address(RVA = "0xD28FC4", Offset = "0xD28FC4", VA = "0xD28FC4", Slot = "4")]
		public virtual void Initialize(Log log, BaseLogDesign design)
		{
		}

		[Token(Token = "0x6000CD8")]
		[Address(RVA = "0xD29080", Offset = "0xD29080", VA = "0xD29080")]
		public BaseLogEntry()
		{
		}
	}
	[Token(Token = "0x20001D4")]
	public class BaseLogsContainer : MonoBehaviour
	{
		[Token(Token = "0x20005B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB888", Offset = "0x9BB888")]
		private sealed class <>c__DisplayClass14_0
		{
			[Token(Token = "0x4001908")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string log;

			[Token(Token = "0x6002523")]
			[Address(RVA = "0xD295E8", Offset = "0xD295E8", VA = "0xD295E8")]
			public <>c__DisplayClass14_0()
			{
			}

			[Token(Token = "0x6002524")]
			[Address(RVA = "0xD295F8", Offset = "0xD295F8", VA = "0xD295F8")]
			internal bool <GetLogDesign>b__0(ThemedLogDesign l)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CircularObjectPool _logsPool;

		[Token(Token = "0x4000991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AbstractLogger _logger;

		[Token(Token = "0x4000992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ThemedLogDesign[] _logTypes;

		[Token(Token = "0x4000993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private int _maxLogsCount;

		[Token(Token = "0x4000994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private BaseLogEntry _logEntry;

		[Token(Token = "0x6000CD9")]
		[Address(RVA = "0xD29090", Offset = "0xD29090", VA = "0xD29090")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000CDA")]
		[Address(RVA = "0xD2911C", Offset = "0xD2911C", VA = "0xD2911C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CDB")]
		[Address(RVA = "0xD29260", Offset = "0xD29260", VA = "0xD29260")]
		private void OnCommandReceived(object sender, CommandReceivedEvent e)
		{
		}

		[Token(Token = "0x6000CDC")]
		[Address(RVA = "0xD29298", Offset = "0xD29298", VA = "0xD29298", Slot = "4")]
		protected virtual void OnLogsCleared(object sender, EventArgs e)
		{
		}

		[Token(Token = "0x6000CDD")]
		[Address(RVA = "0xD292C4", Offset = "0xD292C4", VA = "0xD292C4", Slot = "5")]
		protected virtual void OnLogAdded(object sender, LoggerEvent e)
		{
		}

		[Token(Token = "0x6000CDE")]
		[Address(RVA = "0xD29508", Offset = "0xD29508", VA = "0xD29508", Slot = "6")]
		protected virtual void OnLogEntryAdded(BaseLogEntry entry)
		{
		}

		[Token(Token = "0x6000CDF")]
		[Address(RVA = "0xD2950C", Offset = "0xD2950C", VA = "0xD2950C", Slot = "7")]
		protected virtual bool CanAddLog(Log log)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CE0")]
		[Address(RVA = "0xD29514", Offset = "0xD29514", VA = "0xD29514")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000CE1")]
		[Address(RVA = "0xD295B4", Offset = "0xD295B4", VA = "0xD295B4")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000CE2")]
		[Address(RVA = "0xD29444", Offset = "0xD29444", VA = "0xD29444")]
		public ThemedLogDesign GetLogDesign(string log)
		{
			return null;
		}

		[Token(Token = "0x6000CE3")]
		[Address(RVA = "0xD295F0", Offset = "0xD295F0", VA = "0xD295F0")]
		public BaseLogsContainer()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001D5")]
	public class BaseLogDesign
	{
		[Token(Token = "0x4000995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string LogType;

		[Token(Token = "0x4000996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color TitleColor;

		[Token(Token = "0x6000CE4")]
		[Address(RVA = "0xD284F8", Offset = "0xD284F8", VA = "0xD284F8")]
		public BaseLogDesign()
		{
		}
	}
	[Token(Token = "0x20001D6")]
	public class LogWindow : MonoBehaviour
	{
		[Token(Token = "0x4000997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Image _icon;

		[Token(Token = "0x4000998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text _title;

		[Token(Token = "0x4000999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Text _message;

		[Token(Token = "0x400099A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Text _stackTrace;

		[Token(Token = "0x400099B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Scrollbar _scrollbar;

		[Token(Token = "0x6000CE5")]
		[Address(RVA = "0xD29E08", Offset = "0xD29E08", VA = "0xD29E08")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CE6")]
		[Address(RVA = "0xD29EFC", Offset = "0xD29EFC", VA = "0xD29EFC")]
		public void Display(ThemedLogEntry logEntry)
		{
		}

		[Token(Token = "0x6000CE7")]
		[Address(RVA = "0xD2A094", Offset = "0xD2A094", VA = "0xD2A094")]
		public void Close()
		{
		}

		[Token(Token = "0x6000CE8")]
		[Address(RVA = "0xD2A0CC", Offset = "0xD2A0CC", VA = "0xD2A0CC")]
		public LogWindow()
		{
		}
	}
	[Token(Token = "0x20001D7")]
	public class UIDrag : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IDragHandler
	{
		[Token(Token = "0x400099C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector2 cursorOffset;

		[Token(Token = "0x400099D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RectTransform canvasTransform;

		[Token(Token = "0x400099E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RectTransform thisTransform;

		[Token(Token = "0x6000CE9")]
		[Address(RVA = "0xD2B2E4", Offset = "0xD2B2E4", VA = "0xD2B2E4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CEA")]
		[Address(RVA = "0xD2B3AC", Offset = "0xD2B3AC", VA = "0xD2B3AC", Slot = "5")]
		public void OnDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000CEB")]
		[Address(RVA = "0xD2B54C", Offset = "0xD2B54C", VA = "0xD2B54C", Slot = "4")]
		public void OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000CEC")]
		[Address(RVA = "0xD2B630", Offset = "0xD2B630", VA = "0xD2B630")]
		public UIDrag()
		{
		}
	}
}
namespace RTC.UI.Themed
{
	[Token(Token = "0x20001D8")]
	public class ThemedLogEntry : BaseLogEntry
	{
		[Token(Token = "0x400099F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Button _expandButton;

		[Token(Token = "0x40009A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Image _icon;

		[Token(Token = "0x40009A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Image _counterBackground;

		[Token(Token = "0x40009A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Text _counterLabel;

		[Token(Token = "0x40009A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Image _background;

		[Token(Token = "0x40009A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private int _maxStackSize;

		[Token(Token = "0x40009A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private ThemedLogsContainer _logContainer;

		[Token(Token = "0x40009A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int _count;

		[Token(Token = "0x40009A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C17F8", Offset = "0x9C17F8")]
		private string <StackTrace>k__BackingField;

		[Token(Token = "0x40009A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C1808", Offset = "0x9C1808")]
		private string <Message>k__BackingField;

		[Token(Token = "0x17000106")]
		public Color BackgroundColor
		{
			[Token(Token = "0x6000CED")]
			[Address(RVA = "0xD2A0D4", Offset = "0xD2A0D4", VA = "0xD2A0D4")]
			set
			{
			}
		}

		[Token(Token = "0x17000107")]
		public Sprite Icon
		{
			[Token(Token = "0x6000CEE")]
			[Address(RVA = "0xD2A054", Offset = "0xD2A054", VA = "0xD2A054")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000108")]
		public string StackTrace
		{
			[Token(Token = "0x6000CEF")]
			[Address(RVA = "0xD2A08C", Offset = "0xD2A08C", VA = "0xD2A08C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D0BCC", Offset = "0x9D0BCC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CF0")]
			[Address(RVA = "0xD2A13C", Offset = "0xD2A13C", VA = "0xD2A13C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D0BDC", Offset = "0x9D0BDC")]
			set
			{
			}
		}

		[Token(Token = "0x17000109")]
		public string Message
		{
			[Token(Token = "0x6000CF1")]
			[Address(RVA = "0xD2A084", Offset = "0xD2A084", VA = "0xD2A084")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D0BEC", Offset = "0x9D0BEC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CF2")]
			[Address(RVA = "0xD2A144", Offset = "0xD2A144", VA = "0xD2A144")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D0BFC", Offset = "0x9D0BFC")]
			set
			{
			}
		}

		[Token(Token = "0x1700010A")]
		public int Count
		{
			[Token(Token = "0x6000CF3")]
			[Address(RVA = "0xD2A14C", Offset = "0xD2A14C", VA = "0xD2A14C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000CF4")]
			[Address(RVA = "0xD2A154", Offset = "0xD2A154", VA = "0xD2A154")]
			set
			{
			}
		}

		[Token(Token = "0x1700010B")]
		public int MaxStackSize
		{
			[Token(Token = "0x6000CF5")]
			[Address(RVA = "0xD2A2C0", Offset = "0xD2A2C0", VA = "0xD2A2C0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000CF6")]
		[Address(RVA = "0xD2A2C8", Offset = "0xD2A2C8", VA = "0xD2A2C8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CF7")]
		[Address(RVA = "0xD2A320", Offset = "0xD2A320", VA = "0xD2A320", Slot = "4")]
		public override void Initialize(Log log, BaseLogDesign design)
		{
		}

		[Token(Token = "0x6000CF8")]
		[Address(RVA = "0xD2A420", Offset = "0xD2A420", VA = "0xD2A420")]
		public void Expand()
		{
		}

		[Token(Token = "0x6000CF9")]
		[Address(RVA = "0xD2A46C", Offset = "0xD2A46C", VA = "0xD2A46C")]
		public ThemedLogEntry()
		{
		}
	}
	[Token(Token = "0x20001D9")]
	public class ThemedLogsContainer : BaseLogsContainer
	{
		[Token(Token = "0x20005B1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB898", Offset = "0x9BB898")]
		private sealed class <>c__DisplayClass13_0
		{
			[Token(Token = "0x4001909")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string type;

			[Token(Token = "0x6002525")]
			[Address(RVA = "0xD2ACB4", Offset = "0xD2ACB4", VA = "0xD2ACB4")]
			public <>c__DisplayClass13_0()
			{
			}

			[Token(Token = "0x6002526")]
			[Address(RVA = "0xD2B1A8", Offset = "0xD2B1A8", VA = "0xD2B1A8")]
			internal bool <FilterByType>b__0(Log l)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x20005B2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB8A8", Offset = "0x9BB8A8")]
		private sealed class <>c
		{
			[Token(Token = "0x400190A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400190B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<ThemedLogEntry, bool> <>9__13_1;

			[Token(Token = "0x400190C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action<ThemedLogEntry> <>9__13_2;

			[Token(Token = "0x400190D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<Log, bool> <>9__14_0;

			[Token(Token = "0x400190E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Action<ThemedLogEntry> <>9__14_1;

			[Token(Token = "0x400190F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<Log, bool> <>9__16_0;

			[Token(Token = "0x6002528")]
			[Address(RVA = "0xD2B090", Offset = "0xD2B090", VA = "0xD2B090")]
			public <>c()
			{
			}

			[Token(Token = "0x6002529")]
			[Address(RVA = "0xD2B098", Offset = "0xD2B098", VA = "0xD2B098")]
			internal bool <FilterByType>b__13_1(ThemedLogEntry l)
			{
				return default(bool);
			}

			[Token(Token = "0x600252A")]
			[Address(RVA = "0xD2B0E0", Offset = "0xD2B0E0", VA = "0xD2B0E0")]
			internal void <FilterByType>b__13_2(ThemedLogEntry l)
			{
			}

			[Token(Token = "0x600252B")]
			[Address(RVA = "0xD2B12C", Offset = "0xD2B12C", VA = "0xD2B12C")]
			internal bool <ClearFilter>b__14_0(Log l)
			{
				return default(bool);
			}

			[Token(Token = "0x600252C")]
			[Address(RVA = "0xD2B134", Offset = "0xD2B134", VA = "0xD2B134")]
			internal void <ClearFilter>b__14_1(ThemedLogEntry l)
			{
			}

			[Token(Token = "0x600252D")]
			[Address(RVA = "0xD2B1A0", Offset = "0xD2B1A0", VA = "0xD2B1A0")]
			internal bool <.ctor>b__16_0(Log l)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005B3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB8B8", Offset = "0x9BB8B8")]
		private sealed class <MoveScrollbarNextFrame>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001910")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001911")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001912")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ThemedLogsContainer <>4__this;

			[Token(Token = "0x1700045F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002531")]
				[Address(RVA = "0xD2B26C", Offset = "0xD2B26C", VA = "0xD2B26C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000460")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002533")]
				[Address(RVA = "0xD2B2DC", Offset = "0xD2B2DC", VA = "0xD2B2DC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600252E")]
			[Address(RVA = "0xD2AECC", Offset = "0xD2AECC", VA = "0xD2AECC")]
			[DebuggerHidden]
			public <MoveScrollbarNextFrame>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x600252F")]
			[Address(RVA = "0xD2B1E0", Offset = "0xD2B1E0", VA = "0xD2B1E0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002530")]
			[Address(RVA = "0xD2B1E4", Offset = "0xD2B1E4", VA = "0xD2B1E4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002532")]
			[Address(RVA = "0xD2B274", Offset = "0xD2B274", VA = "0xD2B274", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40009A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color _logDefaultColor;

		[Token(Token = "0x40009AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Color _logAlternateColor;

		[Token(Token = "0x40009AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Scrollbar _scrollbar;

		[Token(Token = "0x40009AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private LogWindow _logWindow;

		[Token(Token = "0x40009AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Dictionary<Log, ThemedLogEntry> _logCounter;

		[Token(Token = "0x40009AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<ThemedLogEntry> _activeLogs;

		[Token(Token = "0x40009AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Func<Log, bool> _activeFilter;

		[Token(Token = "0x1700010C")]
		public LogWindow LogWindow
		{
			[Token(Token = "0x6000CFA")]
			[Address(RVA = "0xD2A464", Offset = "0xD2A464", VA = "0xD2A464")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CFB")]
			[Address(RVA = "0xD2A488", Offset = "0xD2A488", VA = "0xD2A488")]
			private set
			{
			}
		}

		[Token(Token = "0x6000CFC")]
		[Address(RVA = "0xD2A490", Offset = "0xD2A490", VA = "0xD2A490", Slot = "7")]
		protected override bool CanAddLog(Log log)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CFD")]
		[Address(RVA = "0xD2A584", Offset = "0xD2A584", VA = "0xD2A584", Slot = "6")]
		protected override void OnLogEntryAdded(BaseLogEntry entry)
		{
		}

		[Token(Token = "0x6000CFE")]
		[Address(RVA = "0xD2A860", Offset = "0xD2A860", VA = "0xD2A860", Slot = "4")]
		protected override void OnLogsCleared(object sender, EventArgs e)
		{
		}

		[Token(Token = "0x6000CFF")]
		[Address(RVA = "0xD2A8D8", Offset = "0xD2A8D8", VA = "0xD2A8D8")]
		public void FilterByType(string type)
		{
		}

		[Token(Token = "0x6000D00")]
		[Address(RVA = "0xD2ACBC", Offset = "0xD2ACBC", VA = "0xD2ACBC")]
		public void ClearFilter()
		{
		}

		[Token(Token = "0x6000D01")]
		[Address(RVA = "0xD2A7EC", Offset = "0xD2A7EC", VA = "0xD2A7EC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9D0C0C", Offset = "0x9D0C0C")]
		private IEnumerator MoveScrollbarNextFrame()
		{
			return null;
		}

		[Token(Token = "0x6000D02")]
		[Address(RVA = "0xD2AEF8", Offset = "0xD2AEF8", VA = "0xD2AEF8")]
		public ThemedLogsContainer()
		{
		}
	}
}
namespace RTC.Interface
{
	[Token(Token = "0x20001DA")]
	public interface ITypeConverter
	{
		[Token(Token = "0x1700010D")]
		Type Type
		{
			[Token(Token = "0x6000D03")]
			get;
		}

		[Token(Token = "0x1700010E")]
		string Regex
		{
			[Token(Token = "0x6000D04")]
			get;
		}

		[Token(Token = "0x6000D05")]
		object ConvertFrom(string regexMatch);
	}
	[Token(Token = "0x20001DB")]
	public interface ITypeConverterProvider
	{
		[Token(Token = "0x6000D06")]
		ITypeConverter Get(Type type);

		[Token(Token = "0x6000D07")]
		void Add(ITypeConverter converter);

		[Token(Token = "0x6000D08")]
		void Replace(ITypeConverter converter);
	}
	[Token(Token = "0x20001DC")]
	public interface ITypesProvider
	{
		[Token(Token = "0x6000D09")]
		Type[] GetTypes();
	}
}
namespace RTC.Core
{
	[Token(Token = "0x20001DD")]
	internal sealed class Analyzer : AbstractAnalyzer
	{
		[Serializable]
		[Token(Token = "0x20005B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB8C8", Offset = "0x9BB8C8")]
		private sealed class <>c
		{
			[Token(Token = "0x4001913")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001914")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<char, bool> <>9__1_0;

			[Token(Token = "0x6002535")]
			[Address(RVA = "0xD225F4", Offset = "0xD225F4", VA = "0xD225F4")]
			public <>c()
			{
			}

			[Token(Token = "0x6002536")]
			[Address(RVA = "0xD225FC", Offset = "0xD225FC", VA = "0xD225FC")]
			internal bool <Analyze>b__1_0(char c)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005B5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB8D8", Offset = "0x9BB8D8")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4001915")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Stack<char> brackets;

			[Token(Token = "0x4001916")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Analyzer <>4__this;

			[Token(Token = "0x6002537")]
			[Address(RVA = "0xD224C8", Offset = "0xD224C8", VA = "0xD224C8")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6002538")]
			[Address(RVA = "0xD2260C", Offset = "0xD2260C", VA = "0xD2260C")]
			internal string <ValidateBrackets>b__0(char c)
			{
				return null;
			}
		}

		[Token(Token = "0x20005B6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB8E8", Offset = "0x9BB8E8")]
		private sealed class <>c__DisplayClass2_1
		{
			[Token(Token = "0x4001917")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public char c;

			[Token(Token = "0x6002539")]
			[Address(RVA = "0xD22798", Offset = "0xD22798", VA = "0xD22798")]
			public <>c__DisplayClass2_1()
			{
			}

			[Token(Token = "0x600253A")]
			[Address(RVA = "0xD227A0", Offset = "0xD227A0", VA = "0xD227A0")]
			internal bool <ValidateBrackets>b__1(char v)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40009B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<string> errors;

		[Token(Token = "0x6000D0A")]
		[Address(RVA = "0xD21CA8", Offset = "0xD21CA8", VA = "0xD21CA8", Slot = "4")]
		public override AnalyzerResult Analyze(string rawCommand)
		{
			return null;
		}

		[Token(Token = "0x6000D0B")]
		[Address(RVA = "0xD21FF8", Offset = "0xD21FF8", VA = "0xD21FF8")]
		private void ValidateBrackets(string parameters)
		{
		}

		[Token(Token = "0x6000D0C")]
		[Address(RVA = "0xD224D0", Offset = "0xD224D0", VA = "0xD224D0")]
		private char GetOpposite(char c)
		{
			return default(char);
		}

		[Token(Token = "0x6000D0D")]
		[Address(RVA = "0xD22520", Offset = "0xD22520", VA = "0xD22520")]
		public Analyzer()
		{
		}
	}
	[Token(Token = "0x20001DE")]
	internal sealed class BuiltInCommands
	{
		[Token(Token = "0x6000D0E")]
		[Address(RVA = "0xD227B0", Offset = "0xD227B0", VA = "0xD227B0")]
		[AttributeAttribute(Name = "CommandAttribute", RVA = "0x9D0C70", Offset = "0x9D0C70")]
		private static void help(PlainText command)
		{
		}

		[Token(Token = "0x6000D0F")]
		[Address(RVA = "0xD22BA4", Offset = "0xD22BA4", VA = "0xD22BA4")]
		[AttributeAttribute(Name = "CommandAttribute", RVA = "0x9D0CEC", Offset = "0x9D0CEC")]
		private static void commands()
		{
		}

		[Token(Token = "0x6000D10")]
		[Address(RVA = "0xD23120", Offset = "0xD23120", VA = "0xD23120")]
		public BuiltInCommands()
		{
		}
	}
	[Token(Token = "0x20001DF")]
	internal sealed class BuiltInTypesProvider : ITypesProvider
	{
		[Token(Token = "0x6000D11")]
		[Address(RVA = "0xD23128", Offset = "0xD23128", VA = "0xD23128", Slot = "4")]
		public Type[] GetTypes()
		{
			return null;
		}

		[Token(Token = "0x6000D12")]
		[Address(RVA = "0xD231A8", Offset = "0xD231A8", VA = "0xD231A8")]
		public BuiltInTypesProvider()
		{
		}
	}
	[Token(Token = "0x20001E0")]
	internal static class CommandsProvider
	{
		[Serializable]
		[Token(Token = "0x20005B7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB8F8", Offset = "0x9BB8F8")]
		private sealed class <>c
		{
			[Token(Token = "0x4001918")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001919")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<MethodInfo, bool> <>9__0_0;

			[Token(Token = "0x600253C")]
			[Address(RVA = "0xD23884", Offset = "0xD23884", VA = "0xD23884")]
			public <>c()
			{
			}

			[Token(Token = "0x600253D")]
			[Address(RVA = "0xD2388C", Offset = "0xD2388C", VA = "0xD2388C")]
			internal bool <GetCommands>b__0_0(MethodInfo m)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000D13")]
		[Address(RVA = "0xD231B0", Offset = "0xD231B0", VA = "0xD231B0")]
		public static Dictionary<string, CommandInfo> GetCommands(Type[] types)
		{
			return null;
		}
	}
	[Token(Token = "0x20001E1")]
	internal sealed class Logger : AbstractLogger
	{
		[Token(Token = "0x6000D14")]
		[Address(RVA = "0xD2452C", Offset = "0xD2452C", VA = "0xD2452C", Slot = "4")]
		public override void Add(Log log)
		{
		}

		[Token(Token = "0x6000D15")]
		[Address(RVA = "0xD2459C", Offset = "0xD2459C", VA = "0xD2459C", Slot = "6")]
		public override void Clear()
		{
		}

		[Token(Token = "0x6000D16")]
		[Address(RVA = "0xD24600", Offset = "0xD24600", VA = "0xD24600", Slot = "5")]
		public override void Remove(Log log)
		{
		}

		[Token(Token = "0x6000D17")]
		[Address(RVA = "0xD24670", Offset = "0xD24670", VA = "0xD24670")]
		public Logger()
		{
		}
	}
	[Token(Token = "0x20001E2")]
	internal sealed class Parser : AbstractParser
	{
		[Token(Token = "0x6000D18")]
		[Address(RVA = "0xD24678", Offset = "0xD24678", VA = "0xD24678", Slot = "4")]
		public override ParserResult Parse(AnalyzerResult result, ITypeConverterProvider convertersProvider, ParameterInfo[] cmdParams)
		{
			return null;
		}

		[Token(Token = "0x6000D19")]
		[Address(RVA = "0xD24ED0", Offset = "0xD24ED0", VA = "0xD24ED0")]
		public Parser()
		{
		}
	}
	[Token(Token = "0x20001E3")]
	public sealed class RTConsole
	{
		[Serializable]
		[Token(Token = "0x20005B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB908", Offset = "0x9BB908")]
		private sealed class <>c
		{
			[Token(Token = "0x400191A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400191B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<KeyValuePair<string, CommandInfo>, CommandInfo> <>9__23_0;

			[Token(Token = "0x400191C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<ParameterInfo, bool> <>9__52_0;

			[Token(Token = "0x600253F")]
			[Address(RVA = "0xD26738", Offset = "0xD26738", VA = "0xD26738")]
			public <>c()
			{
			}

			[Token(Token = "0x6002540")]
			[Address(RVA = "0xD26740", Offset = "0xD26740", VA = "0xD26740")]
			internal CommandInfo <get_Commands>b__23_0(KeyValuePair<string, CommandInfo> kvp)
			{
				return null;
			}

			[Token(Token = "0x6002541")]
			[Address(RVA = "0xD2679C", Offset = "0xD2679C", VA = "0xD2679C")]
			internal bool <Execute>b__52_0(ParameterInfo p)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40009B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static RTConsole instance;

		[Token(Token = "0x40009B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C1888", Offset = "0x9C1888")]
		private bool <DisableBuiltInCommands>k__BackingField;

		[Token(Token = "0x40009B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C1898", Offset = "0x9C1898")]
		private bool <DisableInternalLogs>k__BackingField;

		[Token(Token = "0x40009B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C18A8", Offset = "0x9C18A8")]
		private bool <HandleExceptions>k__BackingField;

		[Token(Token = "0x40009B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C18B8", Offset = "0x9C18B8")]
		private AbstractAnalyzer <SyntaxAnalyzer>k__BackingField;

		[Token(Token = "0x40009B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C18C8", Offset = "0x9C18C8")]
		private AbstractParser <Parser>k__BackingField;

		[Token(Token = "0x40009BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C18D8", Offset = "0x9C18D8")]
		private AbstractLogger <Logger>k__BackingField;

		[Token(Token = "0x40009BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Dictionary<string, CommandInfo> commandsDictionary;

		[Token(Token = "0x40009BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ITypeConverterProvider typeConverter;

		[Token(Token = "0x1700010F")]
		public static RTConsole Instance
		{
			[Token(Token = "0x6000D24")]
			[Address(RVA = "0xD1F678", Offset = "0xD1F678", VA = "0xD1F678")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000110")]
		public ITypesProvider Types
		{
			[Token(Token = "0x6000D26")]
			[Address(RVA = "0xD256D4", Offset = "0xD256D4", VA = "0xD256D4")]
			set
			{
			}
		}

		[Token(Token = "0x17000111")]
		public ITypeConverterProvider TypeConverters
		{
			[Token(Token = "0x6000D27")]
			[Address(RVA = "0xD24380", Offset = "0xD24380", VA = "0xD24380")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D28")]
			[Address(RVA = "0xD25AB8", Offset = "0xD25AB8", VA = "0xD25AB8")]
			set
			{
			}
		}

		[Token(Token = "0x17000112")]
		public IEnumerable<CommandInfo> Commands
		{
			[Token(Token = "0x6000D29")]
			[Address(RVA = "0xD1F718", Offset = "0xD1F718", VA = "0xD1F718")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000113")]
		public bool DisableBuiltInCommands
		{
			[Token(Token = "0x6000D2A")]
			[Address(RVA = "0xD25EDC", Offset = "0xD25EDC", VA = "0xD25EDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D0DC8", Offset = "0x9D0DC8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D2B")]
			[Address(RVA = "0xD25EE4", Offset = "0xD25EE4", VA = "0xD25EE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D0DD8", Offset = "0x9D0DD8")]
			set
			{
			}
		}

		[Token(Token = "0x17000114")]
		public bool DisableInternalLogs
		{
			[Token(Token = "0x6000D2C")]
			[Address(RVA = "0xD24084", Offset = "0xD24084", VA = "0xD24084")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D0DE8", Offset = "0x9D0DE8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D2D")]
			[Address(RVA = "0xD25EF0", Offset = "0xD25EF0", VA = "0xD25EF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D0DF8", Offset = "0x9D0DF8")]
			set
			{
			}
		}

		[Token(Token = "0x17000115")]
		public bool HandleExceptions
		{
			[Token(Token = "0x6000D2E")]
			[Address(RVA = "0xD25EFC", Offset = "0xD25EFC", VA = "0xD25EFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D0E08", Offset = "0x9D0E08")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D2F")]
			[Address(RVA = "0xD25F04", Offset = "0xD25F04", VA = "0xD25F04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D0E18", Offset = "0x9D0E18")]
			set
			{
			}
		}

		[Token(Token = "0x17000116")]
		public AbstractAnalyzer SyntaxAnalyzer
		{
			[Token(Token = "0x6000D30")]
			[Address(RVA = "0xD25F10", Offset = "0xD25F10", VA = "0xD25F10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D0E28", Offset = "0x9D0E28")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D31")]
			[Address(RVA = "0xD256BC", Offset = "0xD256BC", VA = "0xD256BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D0E38", Offset = "0x9D0E38")]
			set
			{
			}
		}

		[Token(Token = "0x17000117")]
		public AbstractParser Parser
		{
			[Token(Token = "0x6000D32")]
			[Address(RVA = "0xD25F18", Offset = "0xD25F18", VA = "0xD25F18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D0E48", Offset = "0x9D0E48")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D33")]
			[Address(RVA = "0xD256C4", Offset = "0xD256C4", VA = "0xD256C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D0E58", Offset = "0x9D0E58")]
			set
			{
			}
		}

		[Token(Token = "0x17000118")]
		public AbstractLogger Logger
		{
			[Token(Token = "0x6000D34")]
			[Address(RVA = "0xD23AA0", Offset = "0xD23AA0", VA = "0xD23AA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D0E68", Offset = "0x9D0E68")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D35")]
			[Address(RVA = "0xD256B4", Offset = "0xD256B4", VA = "0xD256B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D0E78", Offset = "0x9D0E78")]
			set
			{
			}
		}

		[Token(Token = "0x1400001D")]
		public event EventHandler<CommandEvent> CommandExecuted
		{
			[Token(Token = "0x6000D1A")]
			[Address(RVA = "0xD24ED8", Offset = "0xD24ED8", VA = "0xD24ED8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D0D68", Offset = "0x9D0D68")]
			add
			{
			}
			[Token(Token = "0x6000D1B")]
			[Address(RVA = "0xD24FC4", Offset = "0xD24FC4", VA = "0xD24FC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D0D78", Offset = "0x9D0D78")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001E")]
		public event EventHandler<CommandReceivedEvent> CommandReceived
		{
			[Token(Token = "0x6000D1C")]
			[Address(RVA = "0xD250B0", Offset = "0xD250B0", VA = "0xD250B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D0D88", Offset = "0x9D0D88")]
			add
			{
			}
			[Token(Token = "0x6000D1D")]
			[Address(RVA = "0xD2519C", Offset = "0xD2519C", VA = "0xD2519C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D0D98", Offset = "0x9D0D98")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001F")]
		public event EventHandler<ExceptionEvent> Exception
		{
			[Token(Token = "0x6000D1E")]
			[Address(RVA = "0xD25288", Offset = "0xD25288", VA = "0xD25288")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D0DA8", Offset = "0x9D0DA8")]
			add
			{
			}
			[Token(Token = "0x6000D1F")]
			[Address(RVA = "0xD25374", Offset = "0xD25374", VA = "0xD25374")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D0DB8", Offset = "0x9D0DB8")]
			remove
			{
			}
		}

		[Token(Token = "0x6000D20")]
		[Address(RVA = "0xD25460", Offset = "0xD25460", VA = "0xD25460")]
		private void OnCommandExecuted(CommandEvent e)
		{
		}

		[Token(Token = "0x6000D21")]
		[Address(RVA = "0xD254D8", Offset = "0xD254D8", VA = "0xD254D8")]
		private void OnCommandRecieved(CommandReceivedEvent e)
		{
		}

		[Token(Token = "0x6000D22")]
		[Address(RVA = "0xD25550", Offset = "0xD25550", VA = "0xD25550")]
		private void OnException(ExceptionEvent e)
		{
		}

		[Token(Token = "0x6000D23")]
		[Address(RVA = "0xD255C8", Offset = "0xD255C8", VA = "0xD255C8")]
		private RTConsole()
		{
		}

		[Token(Token = "0x6000D25")]
		[Address(RVA = "0xD255D0", Offset = "0xD255D0", VA = "0xD255D0")]
		private void Initialize()
		{
		}

		[Token(Token = "0x6000D36")]
		[Address(RVA = "0xD22A70", Offset = "0xD22A70", VA = "0xD22A70")]
		public CommandInfo GetCommand(string command)
		{
			return null;
		}

		[Token(Token = "0x6000D37")]
		[Address(RVA = "0xD25B9C", Offset = "0xD25B9C", VA = "0xD25B9C")]
		private void AddCommandsInternal(Type[] types)
		{
		}

		[Token(Token = "0x6000D38")]
		[Address(RVA = "0xD25F20", Offset = "0xD25F20", VA = "0xD25F20")]
		public void Execute(string command)
		{
		}
	}
	[Token(Token = "0x20001E4")]
	internal sealed class TypeConverterProvider : ITypeConverterProvider
	{
		[Token(Token = "0x40009BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<Type, ITypeConverter> _convertersDictionary;

		[Token(Token = "0x6000D39")]
		[Address(RVA = "0xD2579C", Offset = "0xD2579C", VA = "0xD2579C")]
		public TypeConverterProvider()
		{
		}

		[Token(Token = "0x6000D3A")]
		[Address(RVA = "0xD268B8", Offset = "0xD268B8", VA = "0xD268B8", Slot = "5")]
		public void Add(ITypeConverter converter)
		{
		}

		[Token(Token = "0x6000D3B")]
		[Address(RVA = "0xD26AC4", Offset = "0xD26AC4", VA = "0xD26AC4", Slot = "4")]
		public ITypeConverter Get(Type type)
		{
			return null;
		}

		[Token(Token = "0x6000D3C")]
		[Address(RVA = "0xD267CC", Offset = "0xD267CC", VA = "0xD267CC")]
		private void ReplaceInternal(ITypeConverter converter)
		{
		}

		[Token(Token = "0x6000D3D")]
		[Address(RVA = "0xD26B44", Offset = "0xD26B44", VA = "0xD26B44", Slot = "6")]
		public void Replace(ITypeConverter converter)
		{
		}

		[Token(Token = "0x6000D3E")]
		[Address(RVA = "0xD26DE0", Offset = "0xD26DE0", VA = "0xD26DE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D0E88", Offset = "0x9D0E88")]
		private void <.ctor>b__1_0(KeyValuePair<Type, ITypeConverter> t)
		{
		}
	}
	[Token(Token = "0x20001E5")]
	internal sealed class TypesProvider : ITypesProvider
	{
		[Token(Token = "0x6000D3F")]
		[Address(RVA = "0xD26E7C", Offset = "0xD26E7C", VA = "0xD26E7C", Slot = "4")]
		public Type[] GetTypes()
		{
			return null;
		}

		[Token(Token = "0x6000D40")]
		[Address(RVA = "0xD256CC", Offset = "0xD256CC", VA = "0xD256CC")]
		public TypesProvider()
		{
		}
	}
}
namespace RTC.Core.Extension
{
	[Token(Token = "0x20001E6")]
	public static class ConsoleExtensions
	{
		[Token(Token = "0x6000D41")]
		[Address(RVA = "0xD22AF0", Offset = "0xD22AF0", VA = "0xD22AF0")]
		public static void LogFormat(this RTConsole console, string type, string title, string format, params object[] args)
		{
		}

		[Token(Token = "0x6000D42")]
		[Address(RVA = "0xD23944", Offset = "0xD23944", VA = "0xD23944")]
		public static void LogFormat(this RTConsole console, string type, string format, params object[] args)
		{
		}

		[Token(Token = "0x6000D43")]
		[Address(RVA = "0xD23A08", Offset = "0xD23A08", VA = "0xD23A08")]
		public static void LogFormat(this RTConsole console, string format, params object[] args)
		{
		}

		[Token(Token = "0x6000D44")]
		[Address(RVA = "0xD1FBA8", Offset = "0xD1FBA8", VA = "0xD1FBA8")]
		public static void Log(this RTConsole console, Log log)
		{
		}

		[Token(Token = "0x6000D45")]
		[Address(RVA = "0xD23AA8", Offset = "0xD23AA8", VA = "0xD23AA8")]
		public static void Log(this RTConsole console, string title)
		{
		}

		[Token(Token = "0x6000D46")]
		[Address(RVA = "0xD23980", Offset = "0xD23980", VA = "0xD23980")]
		public static void Log(this RTConsole console, string title, string message)
		{
		}

		[Token(Token = "0x6000D47")]
		[Address(RVA = "0xD23B3C", Offset = "0xD23B3C", VA = "0xD23B3C")]
		public static void Log(this RTConsole console, object obj)
		{
		}

		[Token(Token = "0x6000D48")]
		[Address(RVA = "0xD229E4", Offset = "0xD229E4", VA = "0xD229E4")]
		public static void Log(this RTConsole console, string type, string title, string message)
		{
		}

		[Token(Token = "0x6000D49")]
		[Address(RVA = "0xD23BF8", Offset = "0xD23BF8", VA = "0xD23BF8")]
		public static void LogWarning(this RTConsole console, string title)
		{
		}

		[Token(Token = "0x6000D4A")]
		[Address(RVA = "0xD23C8C", Offset = "0xD23C8C", VA = "0xD23C8C")]
		public static void LogWarning(this RTConsole console, string title, string message)
		{
		}

		[Token(Token = "0x6000D4B")]
		[Address(RVA = "0xD23D14", Offset = "0xD23D14", VA = "0xD23D14")]
		public static void LogError(this RTConsole console, string title)
		{
		}

		[Token(Token = "0x6000D4C")]
		[Address(RVA = "0xD23DA8", Offset = "0xD23DA8", VA = "0xD23DA8")]
		public static void LogError(this RTConsole console, string title, string message)
		{
		}

		[Token(Token = "0x6000D4D")]
		[Address(RVA = "0xD23E30", Offset = "0xD23E30", VA = "0xD23E30")]
		public static void LogException(this RTConsole console, string title)
		{
		}

		[Token(Token = "0x6000D4E")]
		[Address(RVA = "0xD23F18", Offset = "0xD23F18", VA = "0xD23F18")]
		public static void LogException(this RTConsole console, string title, string message)
		{
		}

		[Token(Token = "0x6000D4F")]
		[Address(RVA = "0xD23FF0", Offset = "0xD23FF0", VA = "0xD23FF0")]
		internal static void LogInternal(this RTConsole console, string logType, string message)
		{
		}

		[Token(Token = "0x6000D50")]
		[Address(RVA = "0xD237C0", Offset = "0xD237C0", VA = "0xD237C0")]
		internal static void LogInternal(this RTConsole console, string logType, string title, string message)
		{
		}

		[Token(Token = "0x6000D51")]
		[Address(RVA = "0xD2408C", Offset = "0xD2408C", VA = "0xD2408C")]
		internal static void LogFormatInternal(this RTConsole console, string type, string title, string format, params object[] args)
		{
		}

		[Token(Token = "0x6000D52")]
		[Address(RVA = "0xD2410C", Offset = "0xD2410C", VA = "0xD2410C")]
		internal static void LogFormatInternal(this RTConsole console, string type, string format, params object[] args)
		{
		}

		[Token(Token = "0x6000D53")]
		[Address(RVA = "0xD24178", Offset = "0xD24178", VA = "0xD24178")]
		internal static void LogFormatInternal(this RTConsole console, string format, params object[] args)
		{
		}

		[Token(Token = "0x6000D54")]
		[Address(RVA = "0xD24234", Offset = "0xD24234", VA = "0xD24234")]
		public static void ClearLogs(this RTConsole console)
		{
		}

		[Token(Token = "0x6000D55")]
		[Address(RVA = "0xD24274", Offset = "0xD24274", VA = "0xD24274")]
		private static bool StartsWithIgnoreCase(string str, string prefix)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D56")]
		[Address(RVA = "0xD242AC", Offset = "0xD242AC", VA = "0xD242AC")]
		public static void AddType(this RTConsole console, ITypeConverter typeConverter)
		{
		}

		[Token(Token = "0x6000D57")]
		[Address(RVA = "0xD24388", Offset = "0xD24388", VA = "0xD24388")]
		public static void ReplaceType(this RTConsole console, ITypeConverter typeConverter)
		{
		}

		[Token(Token = "0x6000D58")]
		[Address(RVA = "0xD2445C", Offset = "0xD2445C", VA = "0xD2445C")]
		public static ITypeConverter GetConverter(this RTConsole console, Type forType)
		{
			return null;
		}
	}
	[Token(Token = "0x20001E7")]
	public static class GenericExtension
	{
		[Token(Token = "0x20005B9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB918", Offset = "0x9BB918")]
		private sealed class <DistinctBy>d__7<TSource, TKey> : IEnumerable<TSource>, IEnumerable, IEnumerator<TSource>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400191D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x400191E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TSource <>2__current;

			[Token(Token = "0x400191F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001920")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private IEnumerable<TSource> source;

			[Token(Token = "0x4001921")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IEnumerable<TSource> <>3__source;

			[Token(Token = "0x4001922")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Func<TSource, TKey> keySelector;

			[Token(Token = "0x4001923")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<TSource, TKey> <>3__keySelector;

			[Token(Token = "0x4001924")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private HashSet<TKey> <seenKeys>5__2;

			[Token(Token = "0x4001925")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private IEnumerator<TSource> <>7__wrap2;

			[Token(Token = "0x17000461")]
			private TSource System.Collections.Generic.IEnumerator<TSource>.Current
			{
				[Token(Token = "0x6002546")]
				[DebuggerHidden]
				get
				{
					return (TSource)null;
				}
			}

			[Token(Token = "0x17000462")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002548")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002542")]
			[DebuggerHidden]
			public <DistinctBy>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6002543")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002544")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002545")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002547")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6002549")]
			[DebuggerHidden]
			private IEnumerator<TSource> System.Collections.Generic.IEnumerable<TSource>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x600254A")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x20005BA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB928", Offset = "0x9BB928")]
		private sealed class <Filter>d__8<T> : IEnumerable<T>, IEnumerable, IEnumerator<T>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001926")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4001927")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private T <>2__current;

			[Token(Token = "0x4001928")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001929")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private IEnumerable<T> collection;

			[Token(Token = "0x400192A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IEnumerable<T> <>3__collection;

			[Token(Token = "0x400192B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Func<T, bool> selector;

			[Token(Token = "0x400192C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<T, bool> <>3__selector;

			[Token(Token = "0x400192D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private IEnumerator<T> <>7__wrap1;

			[Token(Token = "0x17000463")]
			private T System.Collections.Generic.IEnumerator<T>.Current
			{
				[Token(Token = "0x600254F")]
				[DebuggerHidden]
				get
				{
					return (T)null;
				}
			}

			[Token(Token = "0x17000464")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002551")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600254B")]
			[DebuggerHidden]
			public <Filter>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x600254C")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600254D")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600254E")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002550")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6002552")]
			[DebuggerHidden]
			private IEnumerator<T> System.Collections.Generic.IEnumerable<T>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6002553")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x6000D59")]
		public static List<T> ToOneItemList<T>(this T item)
		{
			return null;
		}

		[Token(Token = "0x6000D5A")]
		public static T[] ToOneItemArray<T>(this T item)
		{
			return null;
		}

		[Token(Token = "0x6000D5B")]
		public static bool In<T>(this T item, IEnumerable<T> items) where T : IEquatable<T>
		{
			return default(bool);
		}

		[Token(Token = "0x6000D5C")]
		public static bool IsNullOrEmpty<T>(this IEnumerable<T> item)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D5D")]
		[Address(RVA = "0xD1F60C", Offset = "0xD1F60C", VA = "0xD1F60C")]
		public static bool IsNullOrWhiteSpace(this string me)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D5E")]
		public static T Or<T>(this T value, T other)
		{
			return (T)null;
		}

		[Token(Token = "0x6000D5F")]
		[Address(RVA = "0xD22B3C", Offset = "0xD22B3C", VA = "0xD22B3C")]
		public static string Or(this string value, string other)
		{
			return null;
		}

		[Token(Token = "0x6000D60")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9D1078", Offset = "0x9D1078")]
		public static IEnumerable<TSource> DistinctBy<TSource, TKey>(this IEnumerable<TSource> source, Func<TSource, TKey> keySelector)
		{
			return null;
		}

		[Token(Token = "0x6000D61")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9D10EC", Offset = "0x9D10EC")]
		public static IEnumerable<T> Filter<T>(this IEnumerable<T> collection, Func<T, bool> selector)
		{
			return null;
		}
	}
}
namespace RTC.Converter
{
	[Token(Token = "0x20001E8")]
	public sealed class ArrayConverter : ITypeConverter
	{
		[Token(Token = "0x40009BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ITypeConverter _parser;

		[Token(Token = "0x17000119")]
		public string Regex
		{
			[Token(Token = "0x6000D63")]
			[Address(RVA = "0xD1FE70", Offset = "0xD1FE70", VA = "0xD1FE70", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011A")]
		public Type Type
		{
			[Token(Token = "0x6000D64")]
			[Address(RVA = "0xD1FF44", Offset = "0xD1FF44", VA = "0xD1FF44", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D62")]
		[Address(RVA = "0xD1FE44", Offset = "0xD1FE44", VA = "0xD1FE44")]
		public ArrayConverter(ITypeConverter parser)
		{
		}

		[Token(Token = "0x6000D65")]
		[Address(RVA = "0xD20018", Offset = "0xD20018", VA = "0xD20018", Slot = "6")]
		public object ConvertFrom(string regexMatch)
		{
			return null;
		}
	}
	[Token(Token = "0x20001E9")]
	public sealed class BoolConverter : ITypeConverter
	{
		[Token(Token = "0x1700011B")]
		public string Regex
		{
			[Token(Token = "0x6000D66")]
			[Address(RVA = "0xD202D4", Offset = "0xD202D4", VA = "0xD202D4", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011C")]
		public Type Type
		{
			[Token(Token = "0x6000D67")]
			[Address(RVA = "0xD2031C", Offset = "0xD2031C", VA = "0xD2031C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D68")]
		[Address(RVA = "0xD2038C", Offset = "0xD2038C", VA = "0xD2038C", Slot = "6")]
		public object ConvertFrom(string regexMatch)
		{
			return null;
		}

		[Token(Token = "0x6000D69")]
		[Address(RVA = "0xD20484", Offset = "0xD20484", VA = "0xD20484")]
		public BoolConverter()
		{
		}
	}
	[Token(Token = "0x20001EA")]
	public sealed class ByteConverter : ITypeConverter
	{
		[Token(Token = "0x1700011D")]
		public string Regex
		{
			[Token(Token = "0x6000D6A")]
			[Address(RVA = "0xD2048C", Offset = "0xD2048C", VA = "0xD2048C", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011E")]
		public Type Type
		{
			[Token(Token = "0x6000D6B")]
			[Address(RVA = "0xD204D4", Offset = "0xD204D4", VA = "0xD204D4", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D6C")]
		[Address(RVA = "0xD20544", Offset = "0xD20544", VA = "0xD20544", Slot = "6")]
		public object ConvertFrom(string regexMatch)
		{
			return null;
		}

		[Token(Token = "0x6000D6D")]
		[Address(RVA = "0xD205D4", Offset = "0xD205D4", VA = "0xD205D4")]
		public ByteConverter()
		{
		}
	}
	[Token(Token = "0x20001EB")]
	public sealed class CharConverter : ITypeConverter
	{
		[Token(Token = "0x1700011F")]
		public string Regex
		{
			[Token(Token = "0x6000D6E")]
			[Address(RVA = "0xD205DC", Offset = "0xD205DC", VA = "0xD205DC", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000120")]
		public Type Type
		{
			[Token(Token = "0x6000D6F")]
			[Address(RVA = "0xD20624", Offset = "0xD20624", VA = "0xD20624", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D70")]
		[Address(RVA = "0xD20694", Offset = "0xD20694", VA = "0xD20694", Slot = "6")]
		public object ConvertFrom(string regexMatch)
		{
			return null;
		}

		[Token(Token = "0x6000D71")]
		[Address(RVA = "0xD20788", Offset = "0xD20788", VA = "0xD20788")]
		public CharConverter()
		{
		}
	}
	[Token(Token = "0x20001EC")]
	public sealed class DecimalConverter : ITypeConverter
	{
		[Token(Token = "0x17000121")]
		public string Regex
		{
			[Token(Token = "0x6000D72")]
			[Address(RVA = "0xD20790", Offset = "0xD20790", VA = "0xD20790", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000122")]
		public Type Type
		{
			[Token(Token = "0x6000D73")]
			[Address(RVA = "0xD207D8", Offset = "0xD207D8", VA = "0xD207D8", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D74")]
		[Address(RVA = "0xD20848", Offset = "0xD20848", VA = "0xD20848", Slot = "6")]
		public object ConvertFrom(string regexMatch)
		{
			return null;
		}

		[Token(Token = "0x6000D75")]
		[Address(RVA = "0xD2090C", Offset = "0xD2090C", VA = "0xD2090C")]
		public DecimalConverter()
		{
		}
	}
	[Token(Token = "0x20001ED")]
	public sealed class DoubleConverter : ITypeConverter
	{
		[Token(Token = "0x17000123")]
		public string Regex
		{
			[Token(Token = "0x6000D76")]
			[Address(RVA = "0xD20914", Offset = "0xD20914", VA = "0xD20914", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000124")]
		public Type Type
		{
			[Token(Token = "0x6000D77")]
			[Address(RVA = "0xD2095C", Offset = "0xD2095C", VA = "0xD2095C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D78")]
		[Address(RVA = "0xD209CC", Offset = "0xD209CC", VA = "0xD209CC", Slot = "6")]
		public object ConvertFrom(string regexMatch)
		{
			return null;
		}

		[Token(Token = "0x6000D79")]
		[Address(RVA = "0xD20A8C", Offset = "0xD20A8C", VA = "0xD20A8C")]
		public DoubleConverter()
		{
		}
	}
	[Token(Token = "0x20001EE")]
	public sealed class FloatConverter : ITypeConverter
	{
		[Token(Token = "0x17000125")]
		public string Regex
		{
			[Token(Token = "0x6000D7A")]
			[Address(RVA = "0xD20A94", Offset = "0xD20A94", VA = "0xD20A94", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000126")]
		public Type Type
		{
			[Token(Token = "0x6000D7B")]
			[Address(RVA = "0xD20ADC", Offset = "0xD20ADC", VA = "0xD20ADC", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D7C")]
		[Address(RVA = "0xD20B4C", Offset = "0xD20B4C", VA = "0xD20B4C", Slot = "6")]
		public object ConvertFrom(string regexMatch)
		{
			return null;
		}

		[Token(Token = "0x6000D7D")]
		[Address(RVA = "0xD20C0C", Offset = "0xD20C0C", VA = "0xD20C0C")]
		public FloatConverter()
		{
		}
	}
	[Token(Token = "0x20001EF")]
	public sealed class IntConverter : ITypeConverter
	{
		[Token(Token = "0x17000127")]
		public string Regex
		{
			[Token(Token = "0x6000D7E")]
			[Address(RVA = "0xD20C14", Offset = "0xD20C14", VA = "0xD20C14", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000128")]
		public Type Type
		{
			[Token(Token = "0x6000D7F")]
			[Address(RVA = "0xD20C5C", Offset = "0xD20C5C", VA = "0xD20C5C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D80")]
		[Address(RVA = "0xD20CCC", Offset = "0xD20CCC", VA = "0xD20CCC", Slot = "6")]
		public object ConvertFrom(string regexMatch)
		{
			return null;
		}

		[Token(Token = "0x6000D81")]
		[Address(RVA = "0xD20D5C", Offset = "0xD20D5C", VA = "0xD20D5C")]
		public IntConverter()
		{
		}
	}
	[Token(Token = "0x20001F0")]
	public sealed class ListConverter : ITypeConverter
	{
		[Token(Token = "0x40009BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ITypeConverter _parser;

		[Token(Token = "0x17000129")]
		public string Regex
		{
			[Token(Token = "0x6000D83")]
			[Address(RVA = "0xD20D90", Offset = "0xD20D90", VA = "0xD20D90", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012A")]
		public Type Type
		{
			[Token(Token = "0x6000D84")]
			[Address(RVA = "0xD20E64", Offset = "0xD20E64", VA = "0xD20E64", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D82")]
		[Address(RVA = "0xD20D64", Offset = "0xD20D64", VA = "0xD20D64")]
		public ListConverter(ITypeConverter parser)
		{
		}

		[Token(Token = "0x6000D85")]
		[Address(RVA = "0xD20FF8", Offset = "0xD20FF8", VA = "0xD20FF8", Slot = "6")]
		public object ConvertFrom(string regexMatch)
		{
			return null;
		}
	}
	[Token(Token = "0x20001F1")]
	public sealed class LongConverter : ITypeConverter
	{
		[Token(Token = "0x1700012B")]
		public string Regex
		{
			[Token(Token = "0x6000D86")]
			[Address(RVA = "0xD212DC", Offset = "0xD212DC", VA = "0xD212DC", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012C")]
		public Type Type
		{
			[Token(Token = "0x6000D87")]
			[Address(RVA = "0xD21324", Offset = "0xD21324", VA = "0xD21324", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D88")]
		[Address(RVA = "0xD21394", Offset = "0xD21394", VA = "0xD21394", Slot = "6")]
		public object ConvertFrom(string regexMatch)
		{
			return null;
		}

		[Token(Token = "0x6000D89")]
		[Address(RVA = "0xD21424", Offset = "0xD21424", VA = "0xD21424")]
		public LongConverter()
		{
		}
	}
	[Token(Token = "0x20001F2")]
	public class PlainTextConverter : ITypeConverter
	{
		[Token(Token = "0x1700012D")]
		public string Regex
		{
			[Token(Token = "0x6000D8A")]
			[Address(RVA = "0xD2142C", Offset = "0xD2142C", VA = "0xD2142C", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012E")]
		public Type Type
		{
			[Token(Token = "0x6000D8B")]
			[Address(RVA = "0xD21474", Offset = "0xD21474", VA = "0xD21474", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D8C")]
		[Address(RVA = "0xD214E4", Offset = "0xD214E4", VA = "0xD214E4", Slot = "6")]
		public object ConvertFrom(string regexMatch)
		{
			return null;
		}

		[Token(Token = "0x6000D8D")]
		[Address(RVA = "0xD214EC", Offset = "0xD214EC", VA = "0xD214EC")]
		public PlainTextConverter()
		{
		}
	}
	[Token(Token = "0x20001F3")]
	public sealed class SByteConverter : ITypeConverter
	{
		[Token(Token = "0x1700012F")]
		public string Regex
		{
			[Token(Token = "0x6000D8E")]
			[Address(RVA = "0xD214F4", Offset = "0xD214F4", VA = "0xD214F4", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000130")]
		public Type Type
		{
			[Token(Token = "0x6000D8F")]
			[Address(RVA = "0xD2153C", Offset = "0xD2153C", VA = "0xD2153C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D90")]
		[Address(RVA = "0xD215AC", Offset = "0xD215AC", VA = "0xD215AC", Slot = "6")]
		public object ConvertFrom(string regexMatch)
		{
			return null;
		}

		[Token(Token = "0x6000D91")]
		[Address(RVA = "0xD2163C", Offset = "0xD2163C", VA = "0xD2163C")]
		public SByteConverter()
		{
		}
	}
	[Token(Token = "0x20001F4")]
	public sealed class ShortConverter : ITypeConverter
	{
		[Token(Token = "0x17000131")]
		public string Regex
		{
			[Token(Token = "0x6000D92")]
			[Address(RVA = "0xD21644", Offset = "0xD21644", VA = "0xD21644", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000132")]
		public Type Type
		{
			[Token(Token = "0x6000D93")]
			[Address(RVA = "0xD2168C", Offset = "0xD2168C", VA = "0xD2168C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D94")]
		[Address(RVA = "0xD216FC", Offset = "0xD216FC", VA = "0xD216FC", Slot = "6")]
		public object ConvertFrom(string regexMatch)
		{
			return null;
		}

		[Token(Token = "0x6000D95")]
		[Address(RVA = "0xD2178C", Offset = "0xD2178C", VA = "0xD2178C")]
		public ShortConverter()
		{
		}
	}
	[Token(Token = "0x20001F5")]
	public sealed class StringConverter : ITypeConverter
	{
		[Token(Token = "0x17000133")]
		public string Regex
		{
			[Token(Token = "0x6000D96")]
			[Address(RVA = "0xD21794", Offset = "0xD21794", VA = "0xD21794", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000134")]
		public Type Type
		{
			[Token(Token = "0x6000D97")]
			[Address(RVA = "0xD217DC", Offset = "0xD217DC", VA = "0xD217DC", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D98")]
		[Address(RVA = "0xD2184C", Offset = "0xD2184C", VA = "0xD2184C", Slot = "6")]
		public object ConvertFrom(string regexMatch)
		{
			return null;
		}

		[Token(Token = "0x6000D99")]
		[Address(RVA = "0xD218B0", Offset = "0xD218B0", VA = "0xD218B0")]
		public StringConverter()
		{
		}
	}
	[Token(Token = "0x20001F6")]
	public sealed class UIntConverter : ITypeConverter
	{
		[Token(Token = "0x17000135")]
		public string Regex
		{
			[Token(Token = "0x6000D9A")]
			[Address(RVA = "0xD218B8", Offset = "0xD218B8", VA = "0xD218B8", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000136")]
		public Type Type
		{
			[Token(Token = "0x6000D9B")]
			[Address(RVA = "0xD21900", Offset = "0xD21900", VA = "0xD21900", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D9C")]
		[Address(RVA = "0xD21970", Offset = "0xD21970", VA = "0xD21970", Slot = "6")]
		public object ConvertFrom(string regexMatch)
		{
			return null;
		}

		[Token(Token = "0x6000D9D")]
		[Address(RVA = "0xD21A00", Offset = "0xD21A00", VA = "0xD21A00")]
		public UIntConverter()
		{
		}
	}
	[Token(Token = "0x20001F7")]
	public sealed class ULongConverter : ITypeConverter
	{
		[Token(Token = "0x17000137")]
		public string Regex
		{
			[Token(Token = "0x6000D9E")]
			[Address(RVA = "0xD21A08", Offset = "0xD21A08", VA = "0xD21A08", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000138")]
		public Type Type
		{
			[Token(Token = "0x6000D9F")]
			[Address(RVA = "0xD21A50", Offset = "0xD21A50", VA = "0xD21A50", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DA0")]
		[Address(RVA = "0xD21AC0", Offset = "0xD21AC0", VA = "0xD21AC0", Slot = "6")]
		public object ConvertFrom(string regexMatch)
		{
			return null;
		}

		[Token(Token = "0x6000DA1")]
		[Address(RVA = "0xD21B50", Offset = "0xD21B50", VA = "0xD21B50")]
		public ULongConverter()
		{
		}
	}
	[Token(Token = "0x20001F8")]
	public sealed class UShortConverter : ITypeConverter
	{
		[Token(Token = "0x17000139")]
		public string Regex
		{
			[Token(Token = "0x6000DA2")]
			[Address(RVA = "0xD21B58", Offset = "0xD21B58", VA = "0xD21B58", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013A")]
		public Type Type
		{
			[Token(Token = "0x6000DA3")]
			[Address(RVA = "0xD21BA0", Offset = "0xD21BA0", VA = "0xD21BA0", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DA4")]
		[Address(RVA = "0xD21C10", Offset = "0xD21C10", VA = "0xD21C10", Slot = "6")]
		public object ConvertFrom(string regexMatch)
		{
			return null;
		}

		[Token(Token = "0x6000DA5")]
		[Address(RVA = "0xD21CA0", Offset = "0xD21CA0", VA = "0xD21CA0")]
		public UShortConverter()
		{
		}
	}
}
namespace RTC.Base
{
	[Token(Token = "0x20001F9")]
	public abstract class AbstractAnalyzer
	{
		[Token(Token = "0x6000DA6")]
		public abstract AnalyzerResult Analyze(string rawCommand);

		[Token(Token = "0x6000DA7")]
		[Address(RVA = "0xD1E08C", Offset = "0xD1E08C", VA = "0xD1E08C")]
		protected AbstractAnalyzer()
		{
		}
	}
	[Token(Token = "0x20001FA")]
	public abstract class AbstractLogger
	{
		[Token(Token = "0x14000020")]
		public event EventHandler<LoggerEvent> LogAdded
		{
			[Token(Token = "0x6000DAB")]
			[Address(RVA = "0xD1E094", Offset = "0xD1E094", VA = "0xD1E094")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D1160", Offset = "0x9D1160")]
			add
			{
			}
			[Token(Token = "0x6000DAC")]
			[Address(RVA = "0xD1E180", Offset = "0xD1E180", VA = "0xD1E180")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D1170", Offset = "0x9D1170")]
			remove
			{
			}
		}

		[Token(Token = "0x14000021")]
		public event EventHandler<LoggerEvent> LogRemoved
		{
			[Token(Token = "0x6000DAD")]
			[Address(RVA = "0xD1E26C", Offset = "0xD1E26C", VA = "0xD1E26C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D1180", Offset = "0x9D1180")]
			add
			{
			}
			[Token(Token = "0x6000DAE")]
			[Address(RVA = "0xD1E358", Offset = "0xD1E358", VA = "0xD1E358")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D1190", Offset = "0x9D1190")]
			remove
			{
			}
		}

		[Token(Token = "0x14000022")]
		public event EventHandler<EventArgs> LogsCleared
		{
			[Token(Token = "0x6000DAF")]
			[Address(RVA = "0xD1E444", Offset = "0xD1E444", VA = "0xD1E444")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D11A0", Offset = "0x9D11A0")]
			add
			{
			}
			[Token(Token = "0x6000DB0")]
			[Address(RVA = "0xD1E530", Offset = "0xD1E530", VA = "0xD1E530")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D11B0", Offset = "0x9D11B0")]
			remove
			{
			}
		}

		[Token(Token = "0x6000DA8")]
		public abstract void Add(Log log);

		[Token(Token = "0x6000DA9")]
		public abstract void Remove(Log log);

		[Token(Token = "0x6000DAA")]
		public abstract void Clear();

		[Token(Token = "0x6000DB1")]
		[Address(RVA = "0xD1E61C", Offset = "0xD1E61C", VA = "0xD1E61C")]
		protected void OnLogAdded(LoggerEvent e)
		{
		}

		[Token(Token = "0x6000DB2")]
		[Address(RVA = "0xD1E694", Offset = "0xD1E694", VA = "0xD1E694")]
		protected void OnLogsCleared(EventArgs e)
		{
		}

		[Token(Token = "0x6000DB3")]
		[Address(RVA = "0xD1E70C", Offset = "0xD1E70C", VA = "0xD1E70C")]
		protected void OnLogRemoved(LoggerEvent e)
		{
		}

		[Token(Token = "0x6000DB4")]
		[Address(RVA = "0xD1E784", Offset = "0xD1E784", VA = "0xD1E784")]
		protected AbstractLogger()
		{
		}
	}
	[Token(Token = "0x20001FB")]
	public abstract class AbstractParser
	{
		[Token(Token = "0x6000DB5")]
		public abstract ParserResult Parse(AnalyzerResult result, ITypeConverterProvider convertersProvider, ParameterInfo[] cmdParams);

		[Token(Token = "0x6000DB6")]
		[Address(RVA = "0xD1E78C", Offset = "0xD1E78C", VA = "0xD1E78C")]
		protected AbstractParser()
		{
		}
	}
	[Token(Token = "0x20001FC")]
	public class AnalyzerResult
	{
		[Token(Token = "0x40009C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C1918", Offset = "0x9C1918")]
		private string <CommandName>k__BackingField;

		[Token(Token = "0x40009C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C1928", Offset = "0x9C1928")]
		private string <Parameters>k__BackingField;

		[Token(Token = "0x40009C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C1938", Offset = "0x9C1938")]
		private string[] <Errors>k__BackingField;

		[Token(Token = "0x1700013B")]
		public string CommandName
		{
			[Token(Token = "0x6000DB8")]
			[Address(RVA = "0xD1E7EC", Offset = "0xD1E7EC", VA = "0xD1E7EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D11C0", Offset = "0x9D11C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DB9")]
			[Address(RVA = "0xD1E7D4", Offset = "0xD1E7D4", VA = "0xD1E7D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D11D0", Offset = "0x9D11D0")]
			private set
			{
			}
		}

		[Token(Token = "0x1700013C")]
		public string Parameters
		{
			[Token(Token = "0x6000DBA")]
			[Address(RVA = "0xD1E7F4", Offset = "0xD1E7F4", VA = "0xD1E7F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D11E0", Offset = "0x9D11E0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DBB")]
			[Address(RVA = "0xD1E7DC", Offset = "0xD1E7DC", VA = "0xD1E7DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D11F0", Offset = "0x9D11F0")]
			private set
			{
			}
		}

		[Token(Token = "0x1700013D")]
		public string[] Errors
		{
			[Token(Token = "0x6000DBC")]
			[Address(RVA = "0xD1E7FC", Offset = "0xD1E7FC", VA = "0xD1E7FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D1200", Offset = "0x9D1200")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DBD")]
			[Address(RVA = "0xD1E7E4", Offset = "0xD1E7E4", VA = "0xD1E7E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D1210", Offset = "0x9D1210")]
			private set
			{
			}
		}

		[Token(Token = "0x1700013E")]
		public bool IsValid
		{
			[Token(Token = "0x6000DBE")]
			[Address(RVA = "0xD1E804", Offset = "0xD1E804", VA = "0xD1E804")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000DB7")]
		[Address(RVA = "0xD1E794", Offset = "0xD1E794", VA = "0xD1E794")]
		public AnalyzerResult(string commandName, string parameters, [Optional] string[] errors)
		{
		}
	}
	[Token(Token = "0x20001FD")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x9B9828", Offset = "0x9B9828")]
	public sealed class CommandAttribute : Attribute
	{
		[Token(Token = "0x40009C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C1948", Offset = "0x9C1948")]
		private string <Alias>k__BackingField;

		[Token(Token = "0x40009C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C1958", Offset = "0x9C1958")]
		private string <Usage>k__BackingField;

		[Token(Token = "0x40009C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C1968", Offset = "0x9C1968")]
		private string <Description>k__BackingField;

		[Token(Token = "0x1700013F")]
		public string Alias
		{
			[Token(Token = "0x6000DBF")]
			[Address(RVA = "0xD1E824", Offset = "0xD1E824", VA = "0xD1E824")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D1220", Offset = "0x9D1220")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DC0")]
			[Address(RVA = "0xD1E82C", Offset = "0xD1E82C", VA = "0xD1E82C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D1230", Offset = "0x9D1230")]
			set
			{
			}
		}

		[Token(Token = "0x17000140")]
		public string Usage
		{
			[Token(Token = "0x6000DC1")]
			[Address(RVA = "0xD1E834", Offset = "0xD1E834", VA = "0xD1E834")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D1240", Offset = "0x9D1240")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DC2")]
			[Address(RVA = "0xD1E83C", Offset = "0xD1E83C", VA = "0xD1E83C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D1250", Offset = "0x9D1250")]
			set
			{
			}
		}

		[Token(Token = "0x17000141")]
		public string Description
		{
			[Token(Token = "0x6000DC3")]
			[Address(RVA = "0xD1E844", Offset = "0xD1E844", VA = "0xD1E844")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D1260", Offset = "0x9D1260")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DC4")]
			[Address(RVA = "0xD1E84C", Offset = "0xD1E84C", VA = "0xD1E84C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D1270", Offset = "0x9D1270")]
			set
			{
			}
		}

		[Token(Token = "0x6000DC5")]
		[Address(RVA = "0xD1E854", Offset = "0xD1E854", VA = "0xD1E854")]
		public CommandAttribute()
		{
		}
	}
	[Token(Token = "0x20001FE")]
	public sealed class CommandInfo
	{
		[Token(Token = "0x40009C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C1978", Offset = "0x9C1978")]
		private string <Alias>k__BackingField;

		[Token(Token = "0x40009CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C1988", Offset = "0x9C1988")]
		private string <Usage>k__BackingField;

		[Token(Token = "0x40009CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C1998", Offset = "0x9C1998")]
		private string <Description>k__BackingField;

		[Token(Token = "0x40009CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C19A8", Offset = "0x9C19A8")]
		private MethodInfo <Method>k__BackingField;

		[Token(Token = "0x17000142")]
		public string Alias
		{
			[Token(Token = "0x6000DC8")]
			[Address(RVA = "0xD1E994", Offset = "0xD1E994", VA = "0xD1E994")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D1280", Offset = "0x9D1280")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DC9")]
			[Address(RVA = "0xD1E974", Offset = "0xD1E974", VA = "0xD1E974")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D1290", Offset = "0x9D1290")]
			private set
			{
			}
		}

		[Token(Token = "0x17000143")]
		public string Usage
		{
			[Token(Token = "0x6000DCA")]
			[Address(RVA = "0xD1E99C", Offset = "0xD1E99C", VA = "0xD1E99C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D12A0", Offset = "0x9D12A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DCB")]
			[Address(RVA = "0xD1E97C", Offset = "0xD1E97C", VA = "0xD1E97C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D12B0", Offset = "0x9D12B0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000144")]
		public string Description
		{
			[Token(Token = "0x6000DCC")]
			[Address(RVA = "0xD1E9A4", Offset = "0xD1E9A4", VA = "0xD1E9A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D12C0", Offset = "0x9D12C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DCD")]
			[Address(RVA = "0xD1E984", Offset = "0xD1E984", VA = "0xD1E984")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D12D0", Offset = "0x9D12D0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000145")]
		internal MethodInfo Method
		{
			[Token(Token = "0x6000DCE")]
			[Address(RVA = "0xD1E9AC", Offset = "0xD1E9AC", VA = "0xD1E9AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D12E0", Offset = "0x9D12E0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DCF")]
			[Address(RVA = "0xD1E98C", Offset = "0xD1E98C", VA = "0xD1E98C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D12F0", Offset = "0x9D12F0")]
			private set
			{
			}
		}

		[Token(Token = "0x6000DC6")]
		[Address(RVA = "0xD1E8E8", Offset = "0xD1E8E8", VA = "0xD1E8E8")]
		private CommandInfo()
		{
		}

		[Token(Token = "0x6000DC7")]
		[Address(RVA = "0xD1E8F0", Offset = "0xD1E8F0", VA = "0xD1E8F0")]
		internal CommandInfo(CommandAttribute attr, MethodInfo method)
		{
		}
	}
	[Token(Token = "0x20001FF")]
	public sealed class LoggerEvent : EventArgs
	{
		[Token(Token = "0x40009CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C19B8", Offset = "0x9C19B8")]
		private Log <Log>k__BackingField;

		[Token(Token = "0x17000146")]
		public Log Log
		{
			[Token(Token = "0x6000DD0")]
			[Address(RVA = "0xD1EDA4", Offset = "0xD1EDA4", VA = "0xD1EDA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D1300", Offset = "0x9D1300")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DD1")]
			[Address(RVA = "0xD1EDAC", Offset = "0xD1EDAC", VA = "0xD1EDAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D1310", Offset = "0x9D1310")]
			private set
			{
			}
		}

		[Token(Token = "0x6000DD2")]
		[Address(RVA = "0xD1EDB4", Offset = "0xD1EDB4", VA = "0xD1EDB4")]
		public LoggerEvent(Log log)
		{
		}
	}
	[Token(Token = "0x2000200")]
	public sealed class CommandEvent : EventArgs
	{
		[Token(Token = "0x40009CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C19C8", Offset = "0x9C19C8")]
		private CommandInfo <Command>k__BackingField;

		[Token(Token = "0x17000147")]
		public CommandInfo Command
		{
			[Token(Token = "0x6000DD3")]
			[Address(RVA = "0xD1E85C", Offset = "0xD1E85C", VA = "0xD1E85C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D1320", Offset = "0x9D1320")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DD4")]
			[Address(RVA = "0xD1E864", Offset = "0xD1E864", VA = "0xD1E864")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D1330", Offset = "0x9D1330")]
			private set
			{
			}
		}

		[Token(Token = "0x6000DD5")]
		[Address(RVA = "0xD1E86C", Offset = "0xD1E86C", VA = "0xD1E86C")]
		public CommandEvent(CommandInfo command)
		{
		}
	}
	[Token(Token = "0x2000201")]
	public sealed class CommandReceivedEvent : EventArgs
	{
		[Token(Token = "0x40009CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C19D8", Offset = "0x9C19D8")]
		private string <Command>k__BackingField;

		[Token(Token = "0x17000148")]
		public string Command
		{
			[Token(Token = "0x6000DD6")]
			[Address(RVA = "0xD1E9B4", Offset = "0xD1E9B4", VA = "0xD1E9B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D1340", Offset = "0x9D1340")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DD7")]
			[Address(RVA = "0xD1E9BC", Offset = "0xD1E9BC", VA = "0xD1E9BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D1350", Offset = "0x9D1350")]
			private set
			{
			}
		}

		[Token(Token = "0x6000DD8")]
		[Address(RVA = "0xD1E9C4", Offset = "0xD1E9C4", VA = "0xD1E9C4")]
		public CommandReceivedEvent(string command)
		{
		}
	}
	[Token(Token = "0x2000202")]
	public sealed class ExceptionEvent : EventArgs
	{
		[Token(Token = "0x40009D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C19E8", Offset = "0x9C19E8")]
		private Exception <Exception>k__BackingField;

		[Token(Token = "0x17000149")]
		public Exception Exception
		{
			[Token(Token = "0x6000DD9")]
			[Address(RVA = "0xD1EA40", Offset = "0xD1EA40", VA = "0xD1EA40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D1360", Offset = "0x9D1360")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DDA")]
			[Address(RVA = "0xD1EA48", Offset = "0xD1EA48", VA = "0xD1EA48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D1370", Offset = "0x9D1370")]
			private set
			{
			}
		}

		[Token(Token = "0x6000DDB")]
		[Address(RVA = "0xD1EA50", Offset = "0xD1EA50", VA = "0xD1EA50")]
		public ExceptionEvent(Exception ex)
		{
		}
	}
	[Token(Token = "0x2000203")]
	public sealed class Log : IEquatable<Log>
	{
		[Token(Token = "0x40009D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C19F8", Offset = "0x9C19F8")]
		private string <Title>k__BackingField;

		[Token(Token = "0x40009D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C1A08", Offset = "0x9C1A08")]
		private string <Message>k__BackingField;

		[Token(Token = "0x40009D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C1A18", Offset = "0x9C1A18")]
		private string <StackTrace>k__BackingField;

		[Token(Token = "0x40009D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C1A28", Offset = "0x9C1A28")]
		private string <Type>k__BackingField;

		[Token(Token = "0x1700014A")]
		public string Title
		{
			[Token(Token = "0x6000DDD")]
			[Address(RVA = "0xD1EB88", Offset = "0xD1EB88", VA = "0xD1EB88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D1380", Offset = "0x9D1380")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DDE")]
			[Address(RVA = "0xD1EB70", Offset = "0xD1EB70", VA = "0xD1EB70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D1390", Offset = "0x9D1390")]
			private set
			{
			}
		}

		[Token(Token = "0x1700014B")]
		public string Message
		{
			[Token(Token = "0x6000DDF")]
			[Address(RVA = "0xD1EB90", Offset = "0xD1EB90", VA = "0xD1EB90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D13A0", Offset = "0x9D13A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DE0")]
			[Address(RVA = "0xD1EB68", Offset = "0xD1EB68", VA = "0xD1EB68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D13B0", Offset = "0x9D13B0")]
			private set
			{
			}
		}

		[Token(Token = "0x1700014C")]
		public string StackTrace
		{
			[Token(Token = "0x6000DE1")]
			[Address(RVA = "0xD1EB98", Offset = "0xD1EB98", VA = "0xD1EB98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D13C0", Offset = "0x9D13C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DE2")]
			[Address(RVA = "0xD1EB80", Offset = "0xD1EB80", VA = "0xD1EB80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D13D0", Offset = "0x9D13D0")]
			private set
			{
			}
		}

		[Token(Token = "0x1700014D")]
		public string Type
		{
			[Token(Token = "0x6000DE3")]
			[Address(RVA = "0xD1EBA0", Offset = "0xD1EBA0", VA = "0xD1EBA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D13E0", Offset = "0x9D13E0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DE4")]
			[Address(RVA = "0xD1EB78", Offset = "0xD1EB78", VA = "0xD1EB78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D13F0", Offset = "0x9D13F0")]
			private set
			{
			}
		}

		[Token(Token = "0x1700014E")]
		public bool HasStackTrace
		{
			[Token(Token = "0x6000DE5")]
			[Address(RVA = "0xD1EBA8", Offset = "0xD1EBA8", VA = "0xD1EBA8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000DDC")]
		[Address(RVA = "0xD1EACC", Offset = "0xD1EACC", VA = "0xD1EACC")]
		public Log(string logType, string title, string message, bool includeStackTrace = false)
		{
		}

		[Token(Token = "0x6000DE6")]
		[Address(RVA = "0xD1EC04", Offset = "0xD1EC04", VA = "0xD1EC04", Slot = "4")]
		public bool Equals(Log other)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DE7")]
		[Address(RVA = "0xD1EC74", Offset = "0xD1EC74", VA = "0xD1EC74", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000204")]
	public static class LogTypes
	{
		[Token(Token = "0x40009D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string Log;

		[Token(Token = "0x40009D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static string Warning;

		[Token(Token = "0x40009D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static string Error;

		[Token(Token = "0x40009D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static string Exception;
	}
	[Token(Token = "0x2000205")]
	public class ParserResult
	{
		[Token(Token = "0x40009D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C1A38", Offset = "0x9C1A38")]
		private string[] <Errors>k__BackingField;

		[Token(Token = "0x40009DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C1A48", Offset = "0x9C1A48")]
		private object[] <Result>k__BackingField;

		[Token(Token = "0x1700014F")]
		public string[] Errors
		{
			[Token(Token = "0x6000DEA")]
			[Address(RVA = "0xD1EE78", Offset = "0xD1EE78", VA = "0xD1EE78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D1400", Offset = "0x9D1400")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DEB")]
			[Address(RVA = "0xD1EE70", Offset = "0xD1EE70", VA = "0xD1EE70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D1410", Offset = "0x9D1410")]
			private set
			{
			}
		}

		[Token(Token = "0x17000150")]
		public object[] Result
		{
			[Token(Token = "0x6000DEC")]
			[Address(RVA = "0xD1EE80", Offset = "0xD1EE80", VA = "0xD1EE80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D1420", Offset = "0x9D1420")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DED")]
			[Address(RVA = "0xD1EE68", Offset = "0xD1EE68", VA = "0xD1EE68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D1430", Offset = "0x9D1430")]
			private set
			{
			}
		}

		[Token(Token = "0x17000151")]
		public bool IsValid
		{
			[Token(Token = "0x6000DEE")]
			[Address(RVA = "0xD1EE88", Offset = "0xD1EE88", VA = "0xD1EE88")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000DE9")]
		[Address(RVA = "0xD1EE30", Offset = "0xD1EE30", VA = "0xD1EE30")]
		public ParserResult(object[] result, string[] errors)
		{
		}
	}
	[Token(Token = "0x2000206")]
	public sealed class PlainText
	{
		[Token(Token = "0x40009DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C1A58", Offset = "0x9C1A58")]
		private string <Value>k__BackingField;

		[Token(Token = "0x17000152")]
		public string Value
		{
			[Token(Token = "0x6000DF0")]
			[Address(RVA = "0xD1EEB0", Offset = "0xD1EEB0", VA = "0xD1EEB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D1440", Offset = "0x9D1440")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DF1")]
			[Address(RVA = "0xD1EEB8", Offset = "0xD1EEB8", VA = "0xD1EEB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D1450", Offset = "0x9D1450")]
			set
			{
			}
		}

		[Token(Token = "0x6000DEF")]
		[Address(RVA = "0xD1EEA8", Offset = "0xD1EEA8", VA = "0xD1EEA8")]
		private PlainText()
		{
		}

		[Token(Token = "0x6000DF2")]
		[Address(RVA = "0xD1EEC0", Offset = "0xD1EEC0", VA = "0xD1EEC0")]
		public static implicit operator PlainText(string value)
		{
			return null;
		}

		[Token(Token = "0x6000DF3")]
		[Address(RVA = "0xD1EF30", Offset = "0xD1EF30", VA = "0xD1EF30")]
		public static implicit operator string(PlainText value)
		{
			return null;
		}
	}
}
namespace Polybrush
{
	[Token(Token = "0x2000207")]
	[Flags]
	public enum z_BrushMirror
	{
		[Token(Token = "0x40009DD")]
		None = 0,
		[Token(Token = "0x40009DE")]
		X = 1,
		[Token(Token = "0x40009DF")]
		Y = 2,
		[Token(Token = "0x40009E0")]
		Z = 4
	}
	[Token(Token = "0x2000208")]
	public static class z_BrushMirrorUtility
	{
		[Token(Token = "0x6000DF4")]
		[Address(RVA = "0x109DCB4", Offset = "0x109DCB4", VA = "0x109DCB4")]
		public static Vector3 ToVector3(this z_BrushMirror mirror)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x2000209")]
	public enum z_ComponentIndex
	{
		[Token(Token = "0x40009E2")]
		R = 0,
		[Token(Token = "0x40009E3")]
		X = 0,
		[Token(Token = "0x40009E4")]
		G = 1,
		[Token(Token = "0x40009E5")]
		Y = 1,
		[Token(Token = "0x40009E6")]
		B = 2,
		[Token(Token = "0x40009E7")]
		Z = 2,
		[Token(Token = "0x40009E8")]
		A = 3,
		[Token(Token = "0x40009E9")]
		W = 3
	}
	[Token(Token = "0x200020A")]
	public enum z_ComponentIndexType
	{
		[Token(Token = "0x40009EB")]
		Vector,
		[Token(Token = "0x40009EC")]
		Color,
		[Token(Token = "0x40009ED")]
		Index
	}
	[Token(Token = "0x200020B")]
	public static class z_ComponentIndexUtility
	{
		[Token(Token = "0x40009EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly GUIContent[] ComponentIndexPopupDescriptions;

		[Token(Token = "0x40009EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly int[] ComponentIndexPopupValues;

		[Token(Token = "0x6000DF5")]
		[Address(RVA = "0x109E7E4", Offset = "0x109E7E4", VA = "0x109E7E4")]
		public static float GetValueAtIndex(this Vector3 value, z_ComponentIndex index)
		{
			return default(float);
		}

		[Token(Token = "0x6000DF6")]
		[Address(RVA = "0x109E810", Offset = "0x109E810", VA = "0x109E810")]
		public static float GetValueAtIndex(this Vector4 value, z_ComponentIndex index)
		{
			return default(float);
		}

		[Token(Token = "0x6000DF7")]
		[Address(RVA = "0x109E850", Offset = "0x109E850", VA = "0x109E850")]
		public static float GetValueAtIndex(this Color value, z_ComponentIndex index)
		{
			return default(float);
		}

		[Token(Token = "0x6000DF8")]
		[Address(RVA = "0x109E890", Offset = "0x109E890", VA = "0x109E890")]
		public static uint ToFlag(this z_ComponentIndex e)
		{
			return default(uint);
		}

		[Token(Token = "0x6000DF9")]
		[Address(RVA = "0x109CB58", Offset = "0x109CB58", VA = "0x109CB58")]
		public static string GetString(this z_ComponentIndex component, z_ComponentIndexType type = z_ComponentIndexType.Vector)
		{
			return null;
		}
	}
	[Token(Token = "0x200020C")]
	public enum Culling
	{
		[Token(Token = "0x40009F1")]
		Back = 1,
		[Token(Token = "0x40009F2")]
		Front = 2,
		[Token(Token = "0x40009F3")]
		FrontBack = 4
	}
	[Token(Token = "0x200020D")]
	public enum z_Direction
	{
		[Token(Token = "0x40009F5")]
		BrushNormal,
		[Token(Token = "0x40009F6")]
		VertexNormal,
		[Token(Token = "0x40009F7")]
		Up,
		[Token(Token = "0x40009F8")]
		Right,
		[Token(Token = "0x40009F9")]
		Forward
	}
	[Token(Token = "0x200020E")]
	public static class z_DirectionUtil
	{
		[Token(Token = "0x6000DFB")]
		[Address(RVA = "0x109EB10", Offset = "0x109EB10", VA = "0x109EB10")]
		public static Vector3 ToVector3(this z_Direction dir)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x200020F")]
	[Flags]
	public enum z_MeshChannel
	{
		[Token(Token = "0x40009FB")]
		Null = 0,
		[Token(Token = "0x40009FC")]
		Position = 0,
		[Token(Token = "0x40009FD")]
		Normal = 1,
		[Token(Token = "0x40009FE")]
		Color = 2,
		[Token(Token = "0x40009FF")]
		Tangent = 4,
		[Token(Token = "0x4000A00")]
		UV0 = 8,
		[Token(Token = "0x4000A01")]
		UV2 = 0x10,
		[Token(Token = "0x4000A02")]
		UV3 = 0x20,
		[Token(Token = "0x4000A03")]
		UV4 = 0x40,
		[Token(Token = "0x4000A04")]
		All = 0xFF
	}
	[Token(Token = "0x2000210")]
	public static class z_MeshChannelUtility
	{
		[Token(Token = "0x6000DFC")]
		[Address(RVA = "0x10A29BC", Offset = "0x10A29BC", VA = "0x10A29BC")]
		public static z_MeshChannel StringToEnum(string str)
		{
			return default(z_MeshChannel);
		}

		[Token(Token = "0x6000DFD")]
		[Address(RVA = "0x10A2D50", Offset = "0x10A2D50", VA = "0x10A2D50")]
		public static int UVChannelToIndex(z_MeshChannel channel)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000211")]
	public enum z_MirrorCoordinateSpace
	{
		[Token(Token = "0x4000A06")]
		World,
		[Token(Token = "0x4000A07")]
		Camera
	}
	[Token(Token = "0x2000212")]
	public enum z_ModelSource
	{
		[Token(Token = "0x4000A09")]
		Imported,
		[Token(Token = "0x4000A0A")]
		Asset,
		[Token(Token = "0x4000A0B")]
		Scene,
		[Token(Token = "0x4000A0C")]
		AdditionalVertexStreams
	}
	[Token(Token = "0x2000213")]
	public enum z_PaintMode
	{
		[Token(Token = "0x4000A0E")]
		Brush,
		[Token(Token = "0x4000A0F")]
		Fill,
		[Token(Token = "0x4000A10")]
		Flood
	}
	[Token(Token = "0x2000214")]
	public enum z_PlacementDirection
	{
		[Token(Token = "0x4000A12")]
		SurfaceNormal,
		[Token(Token = "0x4000A13")]
		Up,
		[Token(Token = "0x4000A14")]
		Down,
		[Token(Token = "0x4000A15")]
		Left,
		[Token(Token = "0x4000A16")]
		Right,
		[Token(Token = "0x4000A17")]
		Forward,
		[Token(Token = "0x4000A18")]
		Backward
	}
	[Token(Token = "0x2000215")]
	[Flags]
	public enum z_SelectionRenderState
	{
		[Token(Token = "0x4000A1A")]
		None = 0,
		[Token(Token = "0x4000A1B")]
		Wireframe = 1,
		[Token(Token = "0x4000A1C")]
		Outline = 2
	}
	[Token(Token = "0x2000216")]
	[ExecuteInEditMode]
	public class z_AdditionalVertexStreams : MonoBehaviour
	{
		[Token(Token = "0x4000A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Mesh m_AdditionalVertexStreamMesh;

		[Token(Token = "0x4000A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x17000153")]
		private MeshRenderer meshRenderer
		{
			[Token(Token = "0x6000DFE")]
			[Address(RVA = "0x109C4C8", Offset = "0x109C4C8", VA = "0x109C4C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DFF")]
		[Address(RVA = "0x109C578", Offset = "0x109C578", VA = "0x109C578")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E00")]
		[Address(RVA = "0x109C580", Offset = "0x109C580", VA = "0x109C580")]
		public void SetAdditionalVertexStreamsMesh(Mesh mesh)
		{
		}

		[Token(Token = "0x6000E01")]
		[Address(RVA = "0x109C5BC", Offset = "0x109C5BC", VA = "0x109C5BC")]
		public z_AdditionalVertexStreams()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000217")]
	public class z_AttributeLayoutContainer : ScriptableObject, IEquatable<z_AttributeLayoutContainer>
	{
		[Token(Token = "0x4000A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Shader shader;

		[Token(Token = "0x4000A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public z_AttributeLayout[] attributes;

		[Token(Token = "0x6000E02")]
		[Address(RVA = "0x109DAA8", Offset = "0x109DAA8", VA = "0x109DAA8")]
		public static z_AttributeLayoutContainer Create(Shader shader, z_AttributeLayout[] attributes)
		{
			return null;
		}

		[Token(Token = "0x6000E03")]
		[Address(RVA = "0x109DB30", Offset = "0x109DB30", VA = "0x109DB30", Slot = "4")]
		public bool Equals(z_AttributeLayoutContainer other)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E04")]
		[Address(RVA = "0x109DCAC", Offset = "0x109DCAC", VA = "0x109DCAC")]
		public z_AttributeLayoutContainer()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000218")]
	public class z_AttributeLayout : IEquatable<z_AttributeLayout>
	{
		[Token(Token = "0x4000A21")]
		public const int NoMask = -1;

		[Token(Token = "0x4000A22")]
		public const int DefaultMask = 0;

		[Token(Token = "0x4000A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int[] DefaultMaskValues;

		[Token(Token = "0x4000A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly GUIContent[] DefaultMaskDescriptions;

		[Token(Token = "0x4000A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Vector2 NormalizedRange;

		[Token(Token = "0x4000A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public z_MeshChannel channel;

		[Token(Token = "0x4000A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public z_ComponentIndex index;

		[Token(Token = "0x4000A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector2 range;

		[Token(Token = "0x4000A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string propertyTarget;

		[Token(Token = "0x4000A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int mask;

		[NonSerialized]
		[Token(Token = "0x4000A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Texture2D previewTexture;

		[Token(Token = "0x17000154")]
		public float min
		{
			[Token(Token = "0x6000E05")]
			[Address(RVA = "0x109C5C4", Offset = "0x109C5C4", VA = "0x109C5C4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E06")]
			[Address(RVA = "0x109C5CC", Offset = "0x109C5CC", VA = "0x109C5CC")]
			set
			{
			}
		}

		[Token(Token = "0x17000155")]
		public float max
		{
			[Token(Token = "0x6000E07")]
			[Address(RVA = "0x109C5D4", Offset = "0x109C5D4", VA = "0x109C5D4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E08")]
			[Address(RVA = "0x109C5DC", Offset = "0x109C5DC", VA = "0x109C5DC")]
			set
			{
			}
		}

		[Token(Token = "0x6000E09")]
		[Address(RVA = "0x109C5E4", Offset = "0x109C5E4", VA = "0x109C5E4")]
		public z_AttributeLayout(z_MeshChannel channel, z_ComponentIndex index)
		{
		}

		[Token(Token = "0x6000E0A")]
		[Address(RVA = "0x109C66C", Offset = "0x109C66C", VA = "0x109C66C")]
		public z_AttributeLayout(z_MeshChannel channel, z_ComponentIndex index, Vector2 range, int mask)
		{
		}

		[Token(Token = "0x6000E0B")]
		[Address(RVA = "0x109C6EC", Offset = "0x109C6EC", VA = "0x109C6EC")]
		public z_AttributeLayout(z_MeshChannel channel, z_ComponentIndex index, Vector2 range, int mask, string targetProperty, [Optional] Texture2D texture)
		{
		}

		[Token(Token = "0x6000E0C")]
		[Address(RVA = "0x109C724", Offset = "0x109C724", VA = "0x109C724", Slot = "4")]
		public bool Equals(z_AttributeLayout other)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E0D")]
		[Address(RVA = "0x109C830", Offset = "0x109C830", VA = "0x109C830", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000219")]
	public struct z_ColorMask
	{
		[Token(Token = "0x4000A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool r;

		[Token(Token = "0x4000A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public bool g;

		[Token(Token = "0x4000A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public bool b;

		[Token(Token = "0x4000A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
		public bool a;

		[Token(Token = "0x6000E0F")]
		[Address(RVA = "0xA92864", Offset = "0xA92864", VA = "0xA92864")]
		public z_ColorMask(bool r, bool g, bool b, bool a)
		{
		}
	}
	[Token(Token = "0x200021A")]
	public struct z_CommonEdge : IEquatable<z_CommonEdge>
	{
		[Token(Token = "0x4000A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public z_Edge edge;

		[Token(Token = "0x4000A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public z_Edge common;

		[Token(Token = "0x17000156")]
		public int x
		{
			[Token(Token = "0x6000E10")]
			[Address(RVA = "0xA92888", Offset = "0xA92888", VA = "0xA92888")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000157")]
		public int y
		{
			[Token(Token = "0x6000E11")]
			[Address(RVA = "0xA92890", Offset = "0xA92890", VA = "0xA92890")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000158")]
		public int cx
		{
			[Token(Token = "0x6000E12")]
			[Address(RVA = "0xA92898", Offset = "0xA92898", VA = "0xA92898")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000159")]
		public int cy
		{
			[Token(Token = "0x6000E13")]
			[Address(RVA = "0xA928A0", Offset = "0xA928A0", VA = "0xA928A0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000E14")]
		[Address(RVA = "0xA928A8", Offset = "0xA928A8", VA = "0xA928A8")]
		public z_CommonEdge(int _x, int _y, int _cx, int _cy)
		{
		}

		[Token(Token = "0x6000E15")]
		[Address(RVA = "0xA928C0", Offset = "0xA928C0", VA = "0xA928C0", Slot = "4")]
		public bool Equals(z_CommonEdge b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E16")]
		[Address(RVA = "0xA92908", Offset = "0xA92908", VA = "0xA92908", Slot = "0")]
		public override bool Equals(object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E17")]
		[Address(RVA = "0x109DEE4", Offset = "0x109DEE4", VA = "0x109DEE4")]
		public static bool operator ==(z_CommonEdge a, z_CommonEdge b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E18")]
		[Address(RVA = "0x109DF28", Offset = "0x109DF28", VA = "0x109DF28")]
		public static bool operator !=(z_CommonEdge a, z_CommonEdge b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E19")]
		[Address(RVA = "0xA92910", Offset = "0xA92910", VA = "0xA92910", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000E1A")]
		[Address(RVA = "0xA92918", Offset = "0xA92918", VA = "0xA92918", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000E1B")]
		[Address(RVA = "0x109E21C", Offset = "0x109E21C", VA = "0x109E21C")]
		public static List<int> ToList(IEnumerable<z_CommonEdge> edges)
		{
			return null;
		}

		[Token(Token = "0x6000E1C")]
		[Address(RVA = "0x109E500", Offset = "0x109E500", VA = "0x109E500")]
		public static HashSet<int> ToHashSet(IEnumerable<z_CommonEdge> edges)
		{
			return null;
		}
	}
	[Token(Token = "0x200021B")]
	public struct z_Edge : IEquatable<z_Edge>
	{
		[Token(Token = "0x4000A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int x;

		[Token(Token = "0x4000A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int y;

		[Token(Token = "0x6000E1D")]
		[Address(RVA = "0xA92920", Offset = "0xA92920", VA = "0xA92920")]
		public z_Edge(int _x, int _y)
		{
		}

		[Token(Token = "0x6000E1E")]
		[Address(RVA = "0xA92928", Offset = "0xA92928", VA = "0xA92928", Slot = "4")]
		public bool Equals(z_Edge p)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E1F")]
		[Address(RVA = "0xA92970", Offset = "0xA92970", VA = "0xA92970", Slot = "0")]
		public override bool Equals(object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E20")]
		[Address(RVA = "0x109ECBC", Offset = "0x109ECBC", VA = "0x109ECBC")]
		public static bool operator ==(z_Edge a, z_Edge b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E21")]
		[Address(RVA = "0x109ECF4", Offset = "0x109ECF4", VA = "0x109ECF4")]
		public static bool operator !=(z_Edge a, z_Edge b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E22")]
		[Address(RVA = "0xA92978", Offset = "0xA92978", VA = "0xA92978", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000E23")]
		[Address(RVA = "0xA92980", Offset = "0xA92980", VA = "0xA92980", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000E24")]
		[Address(RVA = "0x109EDC8", Offset = "0x109EDC8", VA = "0x109EDC8")]
		public static List<int> ToList(IEnumerable<z_Edge> edges)
		{
			return null;
		}

		[Token(Token = "0x6000E25")]
		[Address(RVA = "0x109F0AC", Offset = "0x109F0AC", VA = "0x109F0AC")]
		public static HashSet<int> ToHashSet(IEnumerable<z_Edge> edges)
		{
			return null;
		}
	}
	[Token(Token = "0x200021C")]
	public static class z_GradientSerializer
	{
		[Token(Token = "0x6000E26")]
		[Address(RVA = "0x109F390", Offset = "0x109F390", VA = "0x109F390")]
		public static string Serialize(this Gradient gradient)
		{
			return null;
		}

		[Token(Token = "0x6000E27")]
		[Address(RVA = "0x109F6CC", Offset = "0x109F6CC", VA = "0x109F6CC")]
		public static bool Deserialize(string str, out Gradient gradient)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E28")]
		[Address(RVA = "0x109FC10", Offset = "0x109FC10", VA = "0x109FC10")]
		private static bool TryParseColor(string str, out Color value)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200021D")]
	public interface z_IHasDefault
	{
		[Token(Token = "0x6000E29")]
		void SetDefaultValues();
	}
	[Token(Token = "0x200021E")]
	public interface z_IValid
	{
		[Token(Token = "0x1700015A")]
		bool IsValid
		{
			[Token(Token = "0x6000E2A")]
			get;
		}
	}
	[Token(Token = "0x200021F")]
	public class z_Mesh
	{
		[Serializable]
		[Token(Token = "0x20005BB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB938", Offset = "0x9BB938")]
		private sealed class <>c
		{
			[Token(Token = "0x400192E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400192F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<int[], IEnumerable<int>> <>9__22_0;

			[Token(Token = "0x6002555")]
			[Address(RVA = "0x10A29AC", Offset = "0x10A29AC", VA = "0x10A29AC")]
			public <>c()
			{
			}

			[Token(Token = "0x6002556")]
			[Address(RVA = "0x10A29B4", Offset = "0x10A29B4", VA = "0x10A29B4")]
			internal IEnumerable<int> <GetTriangles>b__22_0(int[] x)
			{
				return null;
			}
		}

		[Token(Token = "0x4000A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4000A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3[] vertices;

		[Token(Token = "0x4000A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3[] normals;

		[Token(Token = "0x4000A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color32[] colors;

		[Token(Token = "0x4000A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector4[] tangents;

		[Token(Token = "0x4000A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<Vector4> uv0;

		[Token(Token = "0x4000A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<Vector4> uv1;

		[Token(Token = "0x4000A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<Vector4> uv2;

		[Token(Token = "0x4000A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<Vector4> uv3;

		[Token(Token = "0x4000A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int _subMeshCount;

		[Token(Token = "0x4000A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int[] triangles;

		[Token(Token = "0x4000A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int[][] indices;

		[Token(Token = "0x4000A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private MeshTopology[] meshTopology;

		[Token(Token = "0x1700015B")]
		public int subMeshCount
		{
			[Token(Token = "0x6000E2C")]
			[Address(RVA = "0x10A1C0C", Offset = "0x10A1C0C", VA = "0x10A1C0C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000E2D")]
			[Address(RVA = "0x10A1C14", Offset = "0x10A1C14", VA = "0x10A1C14")]
			set
			{
			}
		}

		[Token(Token = "0x1700015C")]
		public int vertexCount
		{
			[Token(Token = "0x6000E2E")]
			[Address(RVA = "0x10A1CE0", Offset = "0x10A1CE0", VA = "0x10A1CE0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000E2B")]
		[Address(RVA = "0x10A1BB8", Offset = "0x10A1BB8", VA = "0x10A1BB8")]
		public MeshTopology GetTopology(int index)
		{
			return default(MeshTopology);
		}

		[Token(Token = "0x6000E2F")]
		[Address(RVA = "0x10A1CF8", Offset = "0x10A1CF8", VA = "0x10A1CF8")]
		public List<Vector4> GetUVs(int index)
		{
			return null;
		}

		[Token(Token = "0x6000E30")]
		[Address(RVA = "0x10A1D44", Offset = "0x10A1D44", VA = "0x10A1D44")]
		public void SetUVs(int index, List<Vector4> uvs)
		{
		}

		[Token(Token = "0x6000E31")]
		[Address(RVA = "0x10A1D88", Offset = "0x10A1D88", VA = "0x10A1D88")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000E32")]
		[Address(RVA = "0x10A1DC0", Offset = "0x10A1DC0", VA = "0x10A1DC0")]
		public int[] GetTriangles()
		{
			return null;
		}

		[Token(Token = "0x6000E33")]
		[Address(RVA = "0x10A1ED8", Offset = "0x10A1ED8", VA = "0x10A1ED8")]
		public int[] GetIndices(int index)
		{
			return null;
		}

		[Token(Token = "0x6000E34")]
		[Address(RVA = "0x10A1F2C", Offset = "0x10A1F2C", VA = "0x10A1F2C")]
		public void SetTriangles(int[] triangles, int index)
		{
		}

		[Token(Token = "0x6000E35")]
		[Address(RVA = "0x10A1FBC", Offset = "0x10A1FBC", VA = "0x10A1FBC")]
		public void RecalculateNormals()
		{
		}

		[Token(Token = "0x6000E36")]
		[Address(RVA = "0x10A2614", Offset = "0x10A2614", VA = "0x10A2614")]
		public void ApplyAttributesToUnityMesh(Mesh m, z_MeshChannel attrib = z_MeshChannel.All)
		{
		}

		[Token(Token = "0x6000E37")]
		[Address(RVA = "0x10A28D8", Offset = "0x10A28D8", VA = "0x10A28D8")]
		public z_Mesh()
		{
		}
	}
	[Token(Token = "0x2000220")]
	public struct z_RndVec3 : IEquatable<z_RndVec3>
	{
		[Token(Token = "0x4000A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x4000A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x4000A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float z;

		[Token(Token = "0x4000A44")]
		private const float resolution = 0.0001f;

		[Token(Token = "0x6000E38")]
		[Address(RVA = "0xA92988", Offset = "0xA92988", VA = "0xA92988")]
		public z_RndVec3(Vector3 vector)
		{
		}

		[Token(Token = "0x6000E39")]
		[Address(RVA = "0xA92994", Offset = "0xA92994", VA = "0xA92994", Slot = "4")]
		public bool Equals(z_RndVec3 p)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E3A")]
		[Address(RVA = "0xA9299C", Offset = "0xA9299C", VA = "0xA9299C")]
		public bool Equals(Vector3 p)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E3B")]
		[Address(RVA = "0xA929A4", Offset = "0xA929A4", VA = "0xA929A4", Slot = "0")]
		public override bool Equals(object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E3C")]
		[Address(RVA = "0xA929AC", Offset = "0xA929AC", VA = "0xA929AC", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000E3D")]
		[Address(RVA = "0xA929F0", Offset = "0xA929F0", VA = "0xA929F0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000E3E")]
		[Address(RVA = "0xA929F8", Offset = "0xA929F8", VA = "0xA929F8")]
		private int round(float v)
		{
			return default(int);
		}

		[Token(Token = "0x6000E3F")]
		[Address(RVA = "0x10A8A40", Offset = "0x10A8A40", VA = "0x10A8A40")]
		public static implicit operator Vector3(z_RndVec3 p)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E40")]
		[Address(RVA = "0x10A85EC", Offset = "0x10A85EC", VA = "0x10A85EC")]
		public static implicit operator z_RndVec3(Vector3 p)
		{
			return default(z_RndVec3);
		}
	}
	[Token(Token = "0x2000221")]
	public class z_SplatSet
	{
		[Serializable]
		[Token(Token = "0x20005BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB948", Offset = "0x9BB948")]
		private sealed class <>c
		{
			[Token(Token = "0x4001930")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001931")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Converter<Color32, Vector4> <>9__11_0;

			[Token(Token = "0x4001932")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Converter<Vector4, Color32> <>9__17_0;

			[Token(Token = "0x6002558")]
			[Address(RVA = "0x10AB424", Offset = "0x10AB424", VA = "0x10AB424")]
			public <>c()
			{
			}

			[Token(Token = "0x6002559")]
			[Address(RVA = "0x10AB42C", Offset = "0x10AB42C", VA = "0x10AB42C")]
			internal Vector4 <.ctor>b__11_0(Color32 x)
			{
				return default(Vector4);
			}

			[Token(Token = "0x600255A")]
			[Address(RVA = "0x10AB434", Offset = "0x10AB434", VA = "0x10AB434")]
			internal Color32 <Apply>b__17_0(Vector4 x)
			{
				return default(Color32);
			}
		}

		[Token(Token = "0x4000A45")]
		private const float WEIGHT_EPSILON = 0.0001f;

		[Token(Token = "0x4000A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int weightCount;

		[Token(Token = "0x4000A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<z_MeshChannel, int> channelMap;

		[Token(Token = "0x4000A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector4[][] weights;

		[Token(Token = "0x4000A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public z_AttributeLayout[] attributeLayout;

		[Token(Token = "0x1700015D")]
		public int attributeCount
		{
			[Token(Token = "0x6000E41")]
			[Address(RVA = "0x10A8A74", Offset = "0x10A8A74", VA = "0x10A8A74")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000E42")]
		[Address(RVA = "0x10A8AA0", Offset = "0x10A8AA0", VA = "0x10A8AA0")]
		public z_SplatSet(int vertexCount, z_AttributeLayout[] attributes, bool preAlloc = true)
		{
		}

		[Token(Token = "0x6000E43")]
		[Address(RVA = "0x10A8FA4", Offset = "0x10A8FA4", VA = "0x10A8FA4")]
		public z_SplatSet(z_SplatSet other)
		{
		}

		[Token(Token = "0x6000E44")]
		[Address(RVA = "0x10A9340", Offset = "0x10A9340", VA = "0x10A9340")]
		private static Vector4 Color32ToVec4(Color32 color)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6000E45")]
		[Address(RVA = "0x10A93A8", Offset = "0x10A93A8", VA = "0x10A93A8")]
		private static Color32 Vec4ToColor32(Vector4 vec)
		{
			return default(Color32);
		}

		[Token(Token = "0x6000E46")]
		[Address(RVA = "0x10A93FC", Offset = "0x10A93FC", VA = "0x10A93FC")]
		public z_SplatSet(z_Mesh mesh, z_AttributeLayout[] attributes)
		{
		}

		[Token(Token = "0x6000E47")]
		[Address(RVA = "0x10A9A08", Offset = "0x10A9A08", VA = "0x10A9A08")]
		public z_SplatWeight GetMinWeights()
		{
			return null;
		}

		[Token(Token = "0x6000E48")]
		[Address(RVA = "0x10A9E88", Offset = "0x10A9E88", VA = "0x10A9E88")]
		public z_SplatWeight GetMaxWeights()
		{
			return null;
		}

		[Token(Token = "0x6000E49")]
		[Address(RVA = "0x10A9FDC", Offset = "0x10A9FDC", VA = "0x10A9FDC")]
		public void LerpWeights(z_SplatSet lhs, z_SplatSet rhs, int mask, float[] alpha)
		{
		}

		[Token(Token = "0x6000E4A")]
		[Address(RVA = "0x10AA910", Offset = "0x10AA910", VA = "0x10AA910")]
		public void LerpWeights(z_SplatSet lhs, z_SplatWeight rhs, float alpha)
		{
		}

		[Token(Token = "0x6000E4B")]
		[Address(RVA = "0x10AAC94", Offset = "0x10AAC94", VA = "0x10AAC94")]
		public void CopyTo(z_SplatSet other)
		{
		}

		[Token(Token = "0x6000E4C")]
		[Address(RVA = "0x10AAE08", Offset = "0x10AAE08", VA = "0x10AAE08")]
		public void Apply(z_Mesh mesh)
		{
		}

		[Token(Token = "0x6000E4D")]
		[Address(RVA = "0x10AB1FC", Offset = "0x10AB1FC", VA = "0x10AB1FC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000222")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x9B98F4", Offset = "0x9B98F4")]
	public class z_SplatWeight
	{
		[Serializable]
		[Token(Token = "0x20005BD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB958", Offset = "0x9BB958")]
		private sealed class <>c
		{
			[Token(Token = "0x4001933")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001934")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<z_AttributeLayout, z_MeshChannel> <>9__13_0;

			[Token(Token = "0x600255C")]
			[Address(RVA = "0x10AE6A0", Offset = "0x10AE6A0", VA = "0x10AE6A0")]
			public <>c()
			{
			}

			[Token(Token = "0x600255D")]
			[Address(RVA = "0x10AE6A8", Offset = "0x10AE6A8", VA = "0x10AE6A8")]
			internal z_MeshChannel <GetChannelMap>b__13_0(z_AttributeLayout x)
			{
				return default(z_MeshChannel);
			}
		}

		[Token(Token = "0x4000A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<z_MeshChannel, int> map;

		[Token(Token = "0x4000A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float[] values;

		[Token(Token = "0x1700015E")]
		public Vector4 Item
		{
			[Token(Token = "0x6000E4E")]
			[Address(RVA = "0x10A9D60", Offset = "0x10A9D60", VA = "0x10A9D60")]
			get
			{
				return default(Vector4);
			}
			[Token(Token = "0x6000E4F")]
			[Address(RVA = "0x10A9DDC", Offset = "0x10A9DDC", VA = "0x10A9DDC")]
			set
			{
			}
		}

		[Token(Token = "0x1700015F")]
		public float Item
		{
			[Token(Token = "0x6000E50")]
			[Address(RVA = "0x10AB6D8", Offset = "0x10AB6D8", VA = "0x10AB6D8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E51")]
			[Address(RVA = "0x10AB7A0", Offset = "0x10AB7A0", VA = "0x10AB7A0")]
			set
			{
			}
		}

		[Token(Token = "0x17000160")]
		public float Item
		{
			[Token(Token = "0x6000E52")]
			[Address(RVA = "0x10AB874", Offset = "0x10AB874", VA = "0x10AB874")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E53")]
			[Address(RVA = "0x10AB8C8", Offset = "0x10AB8C8", VA = "0x10AB8C8")]
			set
			{
			}
		}

		[Token(Token = "0x6000E54")]
		[Address(RVA = "0x10A9B5C", Offset = "0x10A9B5C", VA = "0x10A9B5C")]
		public z_SplatWeight(Dictionary<z_MeshChannel, int> map)
		{
		}

		[Token(Token = "0x6000E55")]
		[Address(RVA = "0x10AB928", Offset = "0x10AB928", VA = "0x10AB928")]
		public z_SplatWeight(z_SplatWeight rhs)
		{
		}

		[Token(Token = "0x6000E56")]
		[Address(RVA = "0x10A8C10", Offset = "0x10A8C10", VA = "0x10A8C10")]
		public static Dictionary<z_MeshChannel, int> GetChannelMap(z_AttributeLayout[] attributes)
		{
			return null;
		}

		[Token(Token = "0x6000E57")]
		[Address(RVA = "0x10ABB50", Offset = "0x10ABB50", VA = "0x10ABB50")]
		public List<int> GetAffectedIndicesWithMask(z_AttributeLayout[] attributes, int mask)
		{
			return null;
		}

		[Token(Token = "0x6000E58")]
		[Address(RVA = "0x10ABC98", Offset = "0x10ABC98", VA = "0x10ABC98")]
		public bool MatchesAttributes(z_AttributeLayout[] attributes)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E59")]
		[Address(RVA = "0x10AB44C", Offset = "0x10AB44C", VA = "0x10AB44C")]
		private Vector4 GetVec4(int index)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6000E5A")]
		[Address(RVA = "0x10AB5A0", Offset = "0x10AB5A0", VA = "0x10AB5A0")]
		private void SetVec4(int index, Vector4 value)
		{
		}

		[Token(Token = "0x6000E5B")]
		[Address(RVA = "0x10AB6DC", Offset = "0x10AB6DC", VA = "0x10AB6DC")]
		public float GetAttributeValue(z_AttributeLayout attrib)
		{
			return default(float);
		}

		[Token(Token = "0x6000E5C")]
		[Address(RVA = "0x10AB7A4", Offset = "0x10AB7A4", VA = "0x10AB7A4")]
		public void SetAttributeValue(z_AttributeLayout attrib, float value)
		{
		}

		[Token(Token = "0x6000E5D")]
		[Address(RVA = "0x10ABD78", Offset = "0x10ABD78", VA = "0x10ABD78")]
		public void CopyTo(z_SplatWeight other)
		{
		}

		[Token(Token = "0x6000E5E")]
		[Address(RVA = "0x10ABE48", Offset = "0x10ABE48", VA = "0x10ABE48")]
		public void Lerp(z_SplatWeight lhs, z_SplatWeight rhs, float alpha)
		{
		}

		[Token(Token = "0x6000E5F")]
		[Address(RVA = "0x10AD290", Offset = "0x10AD290", VA = "0x10AD290")]
		public void Lerp(z_SplatWeight lhs, z_SplatWeight rhs, float alpha, List<int> mask)
		{
		}

		[Token(Token = "0x6000E60")]
		[Address(RVA = "0x10AE39C", Offset = "0x10AE39C", VA = "0x10AE39C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000223")]
	public static class z_Math
	{
		[Token(Token = "0x4000A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3 tv1;

		[Token(Token = "0x4000A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static Vector3 tv2;

		[Token(Token = "0x4000A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Vector3 tv3;

		[Token(Token = "0x4000A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private static Vector3 tv4;

		[Token(Token = "0x6000E61")]
		[Address(RVA = "0x109FE2C", Offset = "0x109FE2C", VA = "0x109FE2C")]
		public static bool RayIntersectsTriangle2(Vector3 origin, Vector3 dir, Vector3 vert0, Vector3 vert1, Vector3 vert2, ref float distance, ref Vector3 normal)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E62")]
		[Address(RVA = "0x10A022C", Offset = "0x10A022C", VA = "0x10A022C")]
		public static bool RayIntersectsTriangle(Vector3 origin, Vector3 direction, Vector3 InTriangleA, Vector3 InTriangleB, Vector3 InTriangleC, out float OutDistance, out Vector3 OutPoint)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E63")]
		[Address(RVA = "0x10A06E8", Offset = "0x10A06E8", VA = "0x10A06E8")]
		public static Vector3 Normal(Vector3 p0, Vector3 p1, Vector3 p2)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E64")]
		[Address(RVA = "0x10A08A4", Offset = "0x10A08A4", VA = "0x10A08A4")]
		public static Vector3 Normal(Vector3[] p)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E65")]
		[Address(RVA = "0x10A0C9C", Offset = "0x10A0C9C", VA = "0x10A0C9C")]
		public static void NormalTangentBitangent(Vector3[] vertices, Vector2[] uv, int[] tri, out Vector3 normal, out Vector3 tangent, out Vector3 bitangent)
		{
		}

		[Token(Token = "0x6000E66")]
		[Address(RVA = "0x10A1284", Offset = "0x10A1284", VA = "0x10A1284")]
		public static int Clamp(int value, int min, int max)
		{
			return default(int);
		}

		[Token(Token = "0x6000E67")]
		[Address(RVA = "0x10A12A0", Offset = "0x10A12A0", VA = "0x10A12A0")]
		public static Vector3 Average(Vector3[] array, IEnumerable<int> indices)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E68")]
		[Address(RVA = "0x10A163C", Offset = "0x10A163C", VA = "0x10A163C")]
		public static Vector3 WeightedAverage(Vector3[] array, IList<int> indices, float[] weightLookup)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E69")]
		[Address(RVA = "0x10A1AEC", Offset = "0x10A1AEC", VA = "0x10A1AEC")]
		public static bool VectorIsUniform(Vector3 vec)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000224")]
	public static class z_MeshUtility
	{
		[Token(Token = "0x20005BE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB968", Offset = "0x9BB968")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x4001935")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3[] v;

			[Token(Token = "0x600255E")]
			[Address(RVA = "0x10A4CE8", Offset = "0x10A4CE8", VA = "0x10A4CE8")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x600255F")]
			[Address(RVA = "0x10A85F0", Offset = "0x10A85F0", VA = "0x10A85F0")]
			internal z_RndVec3 <GetCommonVertices>b__1(int x)
			{
				return default(z_RndVec3);
			}
		}

		[Serializable]
		[Token(Token = "0x20005BF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB978", Offset = "0x9BB978")]
		private sealed class <>c
		{
			[Token(Token = "0x4001936")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001937")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<int, int> <>9__7_0;

			[Token(Token = "0x4001938")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<IGrouping<z_RndVec3, int>, List<int>> <>9__7_2;

			[Token(Token = "0x4001939")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<IGrouping<z_RndVec3, int>, bool> <>9__17_1;

			[Token(Token = "0x400193A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<IGrouping<z_RndVec3, int>, List<int>> <>9__17_2;

			[Token(Token = "0x6002561")]
			[Address(RVA = "0x10A83E4", Offset = "0x10A83E4", VA = "0x10A83E4")]
			public <>c()
			{
			}

			[Token(Token = "0x6002562")]
			[Address(RVA = "0x10A83EC", Offset = "0x10A83EC", VA = "0x10A83EC")]
			internal int <GetCommonVertices>b__7_0(int x)
			{
				return default(int);
			}

			[Token(Token = "0x6002563")]
			[Address(RVA = "0x10A83F4", Offset = "0x10A83F4", VA = "0x10A83F4")]
			internal List<int> <GetCommonVertices>b__7_2(IGrouping<z_RndVec3, int> y)
			{
				return null;
			}

			[Token(Token = "0x6002564")]
			[Address(RVA = "0x10A8444", Offset = "0x10A8444", VA = "0x10A8444")]
			internal bool <GetSmoothSeamLookup>b__17_1(IGrouping<z_RndVec3, int> n)
			{
				return default(bool);
			}

			[Token(Token = "0x6002565")]
			[Address(RVA = "0x10A84A0", Offset = "0x10A84A0", VA = "0x10A84A0")]
			internal List<int> <GetSmoothSeamLookup>b__17_2(IGrouping<z_RndVec3, int> t)
			{
				return null;
			}
		}

		[Token(Token = "0x20005C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB988", Offset = "0x9BB988")]
		private sealed class <>c__DisplayClass17_0
		{
			[Token(Token = "0x400193B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3[] normals;

			[Token(Token = "0x400193C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Func<int, z_RndVec3> <>9__3;

			[Token(Token = "0x6002566")]
			[Address(RVA = "0x10A66C8", Offset = "0x10A66C8", VA = "0x10A66C8")]
			public <>c__DisplayClass17_0()
			{
			}

			[Token(Token = "0x6002567")]
			[Address(RVA = "0x10A84F0", Offset = "0x10A84F0", VA = "0x10A84F0")]
			internal IEnumerable<IGrouping<z_RndVec3, int>> <GetSmoothSeamLookup>b__0(List<int> x)
			{
				return null;
			}

			[Token(Token = "0x6002568")]
			[Address(RVA = "0x10A8590", Offset = "0x10A8590", VA = "0x10A8590")]
			internal z_RndVec3 <GetSmoothSeamLookup>b__3(int i)
			{
				return default(z_RndVec3);
			}
		}

		[Token(Token = "0x4000A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Color clear;

		[Token(Token = "0x4000A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Dictionary<z_Mesh, List<List<int>>> commonVerticesCache;

		[Token(Token = "0x4000A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Dictionary<z_Mesh, Dictionary<z_Edge, List<int>>> adjacentTrianglesCache;

		[Token(Token = "0x4000A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static Dictionary<z_Mesh, List<List<int>>> commonNormalsCache;

		[Token(Token = "0x6000E6A")]
		[Address(RVA = "0x10A2D90", Offset = "0x10A2D90", VA = "0x10A2D90")]
		public static Mesh DeepCopy(Mesh src)
		{
			return null;
		}

		[Token(Token = "0x6000E6B")]
		[Address(RVA = "0x10A2E1C", Offset = "0x10A2E1C", VA = "0x10A2E1C")]
		public static void Copy(Mesh dest, Mesh src)
		{
		}

		[Token(Token = "0x6000E6C")]
		[Address(RVA = "0x10A3458", Offset = "0x10A3458", VA = "0x10A3458")]
		public static Mesh CreateOverlayMesh(z_Mesh src)
		{
			return null;
		}

		[Token(Token = "0x6000E6D")]
		[Address(RVA = "0x10A398C", Offset = "0x10A398C", VA = "0x10A398C")]
		public static Mesh CreateVertexBillboardMesh(z_Mesh src, List<List<int>> common)
		{
			return null;
		}

		[Token(Token = "0x6000E6E")]
		[Address(RVA = "0x10A4480", Offset = "0x10A4480", VA = "0x10A4480")]
		public static Dictionary<int, Vector3> GetSmoothNormalLookup(z_Mesh mesh)
		{
			return null;
		}

		[Token(Token = "0x6000E6F")]
		[Address(RVA = "0x10A4934", Offset = "0x10A4934", VA = "0x10A4934")]
		public static List<List<int>> GetCommonVertices(z_Mesh mesh)
		{
			return null;
		}

		[Token(Token = "0x6000E70")]
		[Address(RVA = "0x10A4CF0", Offset = "0x10A4CF0", VA = "0x10A4CF0")]
		public static List<z_CommonEdge> GetEdges(z_Mesh m)
		{
			return null;
		}

		[Token(Token = "0x6000E71")]
		[Address(RVA = "0x10A4D70", Offset = "0x10A4D70", VA = "0x10A4D70")]
		public static List<z_CommonEdge> GetEdges(z_Mesh m, Dictionary<int, int> lookup)
		{
			return null;
		}

		[Token(Token = "0x6000E72")]
		[Address(RVA = "0x10A517C", Offset = "0x10A517C", VA = "0x10A517C")]
		public static HashSet<z_CommonEdge> GetEdgesDistinct(z_Mesh mesh, out List<z_CommonEdge> duplicates)
		{
			return null;
		}

		[Token(Token = "0x6000E73")]
		[Address(RVA = "0x10A520C", Offset = "0x10A520C", VA = "0x10A520C")]
		private static HashSet<z_CommonEdge> GetEdgesDistinct(z_Mesh m, Dictionary<int, int> lookup, out List<z_CommonEdge> duplicates)
		{
			return null;
		}

		[Token(Token = "0x6000E74")]
		[Address(RVA = "0x10A572C", Offset = "0x10A572C", VA = "0x10A572C")]
		public static HashSet<int> GetNonManifoldIndices(z_Mesh mesh)
		{
			return null;
		}

		[Token(Token = "0x6000E75")]
		[Address(RVA = "0x10A57D4", Offset = "0x10A57D4", VA = "0x10A57D4")]
		public static Dictionary<int, List<int>> GetAdjacentVertices(z_Mesh mesh)
		{
			return null;
		}

		[Token(Token = "0x6000E76")]
		[Address(RVA = "0x10A5D7C", Offset = "0x10A5D7C", VA = "0x10A5D7C")]
		public static Dictionary<z_Edge, List<int>> GetAdjacentTriangles(z_Mesh m)
		{
			return null;
		}

		[Token(Token = "0x6000E77")]
		[Address(RVA = "0x10A6368", Offset = "0x10A6368", VA = "0x10A6368")]
		public static List<List<int>> GetSmoothSeamLookup(z_Mesh m)
		{
			return null;
		}

		[Token(Token = "0x6000E78")]
		[Address(RVA = "0x10A66D0", Offset = "0x10A66D0", VA = "0x10A66D0")]
		public static void RecalculateNormals(z_Mesh m)
		{
		}

		[Token(Token = "0x6000E79")]
		[Address(RVA = "0x10A69CC", Offset = "0x10A69CC", VA = "0x10A69CC")]
		public static string Print(Mesh m, int maxAttributesToList = 8)
		{
			return null;
		}
	}
	[Token(Token = "0x2000225")]
	public static class z_Util
	{
		[Serializable]
		[Token(Token = "0x20005C1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB998", Offset = "0x9BB998")]
		private sealed class <>c__4<T>
		{
			[Token(Token = "0x400193D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c__4<T> <>9;

			[Token(Token = "0x400193E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<T, string> <>9__4_0;

			[Token(Token = "0x600256A")]
			public <>c__4()
			{
			}

			[Token(Token = "0x600256B")]
			internal string <ToString>b__4_0(T x)
			{
				return null;
			}
		}

		[Token(Token = "0x6000E7B")]
		public static T[] Fill<T>(T value, int count)
		{
			return null;
		}

		[Token(Token = "0x6000E7C")]
		public static T[] Fill<T>(Func<int, T> constructor, int count)
		{
			return null;
		}

		[Token(Token = "0x6000E7D")]
		public static T[] Duplicate<T>(T[] array)
		{
			return null;
		}

		[Token(Token = "0x6000E7E")]
		public static Dictionary<K, V> InitDictionary<K, V>(Func<int, K> keyFunc, Func<int, V> valueFunc, int count)
		{
			return null;
		}

		[Token(Token = "0x6000E7F")]
		public static string ToString<T>(this IEnumerable<T> enumerable, string delim)
		{
			return null;
		}

		[Token(Token = "0x6000E80")]
		public static string ToString<K, V>(this Dictionary<K, V> dictionary, string delim)
		{
			return null;
		}

		[Token(Token = "0x6000E81")]
		public static void Resize<T>(ref T[] array, int newSize)
		{
		}

		[Token(Token = "0x6000E82")]
		public static Dictionary<K, T> SetValuesAsKey<T, K>(this Dictionary<T, IEnumerable<K>> dic)
		{
			return null;
		}

		[Token(Token = "0x6000E83")]
		public static Dictionary<T, int> GetCommonLookup<T>(this List<List<T>> lists)
		{
			return null;
		}

		[Token(Token = "0x6000E84")]
		[Address(RVA = "0x10AE6D4", Offset = "0x10AE6D4", VA = "0x10AE6D4")]
		public static Color32 Lerp(Color32 lhs, Color32 rhs, z_ColorMask mask, float alpha)
		{
			return default(Color32);
		}

		[Token(Token = "0x6000E85")]
		[Address(RVA = "0x10AE7DC", Offset = "0x10AE7DC", VA = "0x10AE7DC")]
		public static Color32 Lerp(Color32 lhs, Color32 rhs, float alpha)
		{
			return default(Color32);
		}

		[Token(Token = "0x6000E86")]
		[Address(RVA = "0x10AE890", Offset = "0x10AE890", VA = "0x10AE890")]
		public static AnimationCurve ClampAnimationKeys(AnimationCurve curve, float firstKeyTime, float firstKeyValue, float secondKeyTime, float secondKeyValue)
		{
			return null;
		}

		[Token(Token = "0x6000E87")]
		[Address(RVA = "0x10AEA4C", Offset = "0x10AEA4C", VA = "0x10AEA4C")]
		public static Enum Next(this Enum value)
		{
			return null;
		}

		[Token(Token = "0x6000E88")]
		public static bool IsValid<T>(this T target) where T : z_IValid
		{
			return default(bool);
		}

		[Token(Token = "0x6000E89")]
		[Address(RVA = "0x10A3264", Offset = "0x10A3264", VA = "0x10A3264")]
		internal static string IncrementPrefix(string prefix, string name)
		{
			return null;
		}

		[Token(Token = "0x6000E8A")]
		[Address(RVA = "0x10AEBD4", Offset = "0x10AEBD4", VA = "0x10AEBD4")]
		public static Mesh GetMesh(this GameObject gameObject)
		{
			return null;
		}

		[Token(Token = "0x6000E8B")]
		[Address(RVA = "0x10AEDB0", Offset = "0x10AEDB0", VA = "0x10AEDB0")]
		public static List<Material> GetMaterials(this GameObject gameObject)
		{
			return null;
		}

		[Token(Token = "0x6000E8C")]
		public static Dictionary<T, List<K>> ToDictionary<T, K>(this IEnumerable<IGrouping<T, K>> groups)
		{
			return null;
		}
	}
	[Token(Token = "0x2000226")]
	public static class z_Vector
	{
		[Token(Token = "0x6000E8D")]
		[Address(RVA = "0x10A06B4", Offset = "0x10A06B4", VA = "0x10A06B4")]
		public static void Cross(Vector3 a, Vector3 b, ref float x, ref float y, ref float z)
		{
		}

		[Token(Token = "0x6000E8E")]
		[Address(RVA = "0x10A01FC", Offset = "0x10A01FC", VA = "0x10A01FC")]
		public static void Cross(Vector3 a, Vector3 b, ref Vector3 res)
		{
		}

		[Token(Token = "0x6000E8F")]
		[Address(RVA = "0x10A0870", Offset = "0x10A0870", VA = "0x10A0870")]
		public static void Cross(float ax, float ay, float az, float bx, float by, float bz, ref float x, ref float y, ref float z)
		{
		}

		[Token(Token = "0x6000E90")]
		[Address(RVA = "0x10A01E4", Offset = "0x10A01E4", VA = "0x10A01E4")]
		public static void Subtract(Vector3 a, Vector3 b, ref Vector3 res)
		{
		}
	}
}
namespace Oculus.Spatializer.Propagation
{
	[Token(Token = "0x2000227")]
	public enum FaceType : uint
	{
		[Token(Token = "0x4000A55")]
		TRIANGLES,
		[Token(Token = "0x4000A56")]
		QUADS
	}
	[Token(Token = "0x2000228")]
	public enum MaterialProperty : uint
	{
		[Token(Token = "0x4000A58")]
		ABSORPTION,
		[Token(Token = "0x4000A59")]
		TRANSMISSION,
		[Token(Token = "0x4000A5A")]
		SCATTERING
	}
	[Token(Token = "0x2000229")]
	public struct MeshGroup
	{
		[Token(Token = "0x4000A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public UIntPtr indexOffset;

		[Token(Token = "0x4000A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public UIntPtr faceCount;

		[Token(Token = "0x4000A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FaceType faceType;

		[Token(Token = "0x4000A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public IntPtr material;
	}
}
namespace Oculus.Platform
{
	[Token(Token = "0x200022A")]
	public class AbuseReportOptions
	{
		[Token(Token = "0x4000A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x6000E91")]
		[Address(RVA = "0xCDBE68", Offset = "0xCDBE68", VA = "0xCDBE68")]
		public AbuseReportOptions()
		{
		}

		[Token(Token = "0x6000E92")]
		[Address(RVA = "0xCDBF6C", Offset = "0xCDBF6C", VA = "0xCDBF6C")]
		public void SetPreventPeopleChooser(bool value)
		{
		}

		[Token(Token = "0x6000E93")]
		[Address(RVA = "0xCDC094", Offset = "0xCDC094", VA = "0xCDC094")]
		public void SetReportType(AbuseReportType value)
		{
		}

		[Token(Token = "0x6000E94")]
		[Address(RVA = "0xCDC1BC", Offset = "0xCDC1BC", VA = "0xCDC1BC")]
		public static explicit operator IntPtr(AbuseReportOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000E95")]
		[Address(RVA = "0xCDC20C", Offset = "0xCDC20C", VA = "0xCDC20C", Slot = "1")]
		~AbuseReportOptions()
		{
		}
	}
	[Token(Token = "0x200022B")]
	public enum AbuseReportType
	{
		[Token(Token = "0x4000A61")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C1A68", Offset = "0x9C1A68")]
		Unknown,
		[Token(Token = "0x4000A62")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C1AA0", Offset = "0x9C1AA0")]
		Object,
		[Token(Token = "0x4000A63")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C1AD8", Offset = "0x9C1AD8")]
		User
	}
	[Token(Token = "0x200022C")]
	public enum AchievementType
	{
		[Token(Token = "0x4000A65")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C1B10", Offset = "0x9C1B10")]
		Unknown,
		[Token(Token = "0x4000A66")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C1B48", Offset = "0x9C1B48")]
		Simple,
		[Token(Token = "0x4000A67")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C1B80", Offset = "0x9C1B80")]
		Bitfield,
		[Token(Token = "0x4000A68")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C1BB8", Offset = "0x9C1BB8")]
		Count
	}
	[Token(Token = "0x200022D")]
	public class AndroidPlatform
	{
		[Token(Token = "0x6000E96")]
		[Address(RVA = "0xCDD2EC", Offset = "0xCDD2EC", VA = "0xCDD2EC")]
		public bool Initialize(string appId)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E97")]
		[Address(RVA = "0xCDD460", Offset = "0xCDD460", VA = "0xCDD460")]
		public Request<PlatformInitialize> AsyncInitialize(string appId)
		{
			return null;
		}

		[Token(Token = "0x6000E98")]
		[Address(RVA = "0xCDD608", Offset = "0xCDD608", VA = "0xCDD608")]
		public AndroidPlatform()
		{
		}
	}
	[Token(Token = "0x200022E")]
	public class ApplicationOptions
	{
		[Token(Token = "0x4000A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x6000E99")]
		[Address(RVA = "0xCDDA88", Offset = "0xCDDA88", VA = "0xCDDA88")]
		public ApplicationOptions()
		{
		}

		[Token(Token = "0x6000E9A")]
		[Address(RVA = "0xCDDB8C", Offset = "0xCDDB8C", VA = "0xCDDB8C")]
		public void SetDeeplinkMessage(string value)
		{
		}

		[Token(Token = "0x6000E9B")]
		[Address(RVA = "0xCDD86C", Offset = "0xCDD86C", VA = "0xCDD86C")]
		public static explicit operator IntPtr(ApplicationOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000E9C")]
		[Address(RVA = "0xCDDCB0", Offset = "0xCDDCB0", VA = "0xCDDCB0", Slot = "1")]
		~ApplicationOptions()
		{
		}
	}
	[Token(Token = "0x200022F")]
	public static class Callback
	{
		[Token(Token = "0x20005C2")]
		private class RequestCallback
		{
			[Token(Token = "0x400193F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Message.Callback messageCallback;

			[Token(Token = "0x600256C")]
			[Address(RVA = "0xE8DA7C", Offset = "0xE8DA7C", VA = "0xE8DA7C")]
			public RequestCallback()
			{
			}

			[Token(Token = "0x600256D")]
			[Address(RVA = "0xE8D338", Offset = "0xE8D338", VA = "0xE8D338")]
			public RequestCallback(Message.Callback callback)
			{
			}

			[Token(Token = "0x600256E")]
			[Address(RVA = "0xE8DA84", Offset = "0xE8DA84", VA = "0xE8DA84", Slot = "4")]
			public virtual void HandleMessage(Message msg)
			{
			}
		}

		[Token(Token = "0x20005C3")]
		private sealed class RequestCallback<T> : RequestCallback
		{
			[Token(Token = "0x4001940")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Message<T>.Callback callback;

			[Token(Token = "0x600256F")]
			public RequestCallback(Message<T>.Callback callback)
			{
			}

			[Token(Token = "0x6002570")]
			public override void HandleMessage(Message msg)
			{
			}
		}

		[Token(Token = "0x4000A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<ulong, RequestCallback> requestIDsToCallbacks;

		[Token(Token = "0x4000A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<Message.MessageType, RequestCallback> notificationCallbacks;

		[Token(Token = "0x4000A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static bool hasRegisteredRoomInviteNotificationHandler;

		[Token(Token = "0x4000A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static List<Message> pendingRoomInviteNotifications;

		[Token(Token = "0x6000E9D")]
		internal static void SetNotificationCallback<T>(Message.MessageType type, Message<T>.Callback callback)
		{
		}

		[Token(Token = "0x6000E9E")]
		[Address(RVA = "0xE8D234", Offset = "0xE8D234", VA = "0xE8D234")]
		internal static void SetNotificationCallback(Message.MessageType type, Message.Callback callback)
		{
		}

		[Token(Token = "0x6000E9F")]
		internal static void OnComplete<T>(Request<T> request, Message<T>.Callback callback)
		{
		}

		[Token(Token = "0x6000EA0")]
		[Address(RVA = "0xE8D364", Offset = "0xE8D364", VA = "0xE8D364")]
		internal static void OnComplete(Request request, Message.Callback callback)
		{
		}

		[Token(Token = "0x6000EA1")]
		[Address(RVA = "0xE8D438", Offset = "0xE8D438", VA = "0xE8D438")]
		internal static void RunCallbacks()
		{
		}

		[Token(Token = "0x6000EA2")]
		[Address(RVA = "0xE8D754", Offset = "0xE8D754", VA = "0xE8D754")]
		internal static void RunLimitedCallbacks(uint limit)
		{
		}

		[Token(Token = "0x6000EA3")]
		[Address(RVA = "0xE8D7EC", Offset = "0xE8D7EC", VA = "0xE8D7EC")]
		private static void FlushRoomInviteNotificationQueue()
		{
		}

		[Token(Token = "0x6000EA4")]
		[Address(RVA = "0xE8D564", Offset = "0xE8D564", VA = "0xE8D564")]
		private static void HandleMessage(Message msg)
		{
		}
	}
	[Token(Token = "0x2000230")]
	public class CallbackRunner : MonoBehaviour
	{
		[Token(Token = "0x4000A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool IsPersistantBetweenSceneLoads;

		[PreserveSig]
		[Token(Token = "0x6000EA6")]
		[Address(RVA = "0xE8E1C8", Offset = "0xE8E1C8", VA = "0xE8E1C8")]
		private static extern void ovr_UnityResetTestPlatform();

		[Token(Token = "0x6000EA7")]
		[Address(RVA = "0xE8E254", Offset = "0xE8E254", VA = "0xE8E254")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000EA8")]
		[Address(RVA = "0xE8E350", Offset = "0xE8E350", VA = "0xE8E350")]
		private void Update()
		{
		}

		[Token(Token = "0x6000EA9")]
		[Address(RVA = "0xE8E3DC", Offset = "0xE8E3DC", VA = "0xE8E3DC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000EAA")]
		[Address(RVA = "0xE8E3E0", Offset = "0xE8E3E0", VA = "0xE8E3E0")]
		public CallbackRunner()
		{
		}
	}
	[Token(Token = "0x2000231")]
	public class CAPI
	{
		[Token(Token = "0x20005C4")]
		public struct ovrKeyValuePair
		{
			[Token(Token = "0x4001941")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string key_;

			[Token(Token = "0x4001942")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private KeyValuePairType valueType_;

			[Token(Token = "0x4001943")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string stringValue_;

			[Token(Token = "0x4001944")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int intValue_;

			[Token(Token = "0x4001945")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public double doubleValue_;

			[Token(Token = "0x6002571")]
			[Address(RVA = "0xA8568C", Offset = "0xA8568C", VA = "0xA8568C")]
			public ovrKeyValuePair(string key, string value)
			{
			}

			[Token(Token = "0x6002572")]
			[Address(RVA = "0xA856A4", Offset = "0xA856A4", VA = "0xA856A4")]
			public ovrKeyValuePair(string key, int value)
			{
			}

			[Token(Token = "0x6002573")]
			[Address(RVA = "0xA856C0", Offset = "0xA856C0", VA = "0xA856C0")]
			public ovrKeyValuePair(string key, double value)
			{
			}
		}

		[Token(Token = "0x20005C5")]
		public struct ovrMatchmakingCriterion
		{
			[Token(Token = "0x4001946")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string key_;

			[Token(Token = "0x4001947")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public MatchmakingCriterionImportance importance_;

			[Token(Token = "0x4001948")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public IntPtr parameterArray;

			[Token(Token = "0x4001949")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public uint parameterArrayCount;

			[Token(Token = "0x6002574")]
			[Address(RVA = "0xA8578C", Offset = "0xA8578C", VA = "0xA8578C")]
			public ovrMatchmakingCriterion(string key, MatchmakingCriterionImportance importance)
			{
			}
		}

		[Token(Token = "0x20005C6")]
		public struct ovrMatchmakingCustomQueryData
		{
			[Token(Token = "0x400194A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IntPtr dataArray;

			[Token(Token = "0x400194B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public uint dataArrayCount;

			[Token(Token = "0x400194C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public IntPtr criterionArray;

			[Token(Token = "0x400194D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public uint criterionArrayCount;
		}

		[Token(Token = "0x20005C7")]
		public struct OculusInitParams
		{
			[Token(Token = "0x400194E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int sType;

			[Token(Token = "0x400194F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string email;

			[Token(Token = "0x4001950")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string password;

			[Token(Token = "0x4001951")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ulong appId;

			[Token(Token = "0x4001952")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string uriPrefixOverride;
		}

		[Token(Token = "0x20005C8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x9BB9A8", Offset = "0x9BB9A8")]
		public delegate void FilterCallback([In][Out] short[] pcmData, UIntPtr pcmDataLength, int frequency, int numChannels);

		[Token(Token = "0x4000A6F")]
		public const string DLL_NAME = "ovrplatformloader";

		[Token(Token = "0x4000A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static UTF8Encoding nativeStringEncoding;

		[Token(Token = "0x4000A71")]
		public const int VoipFilterBufferSize = 480;

		[Token(Token = "0x6000EAB")]
		[Address(RVA = "0xCDF10C", Offset = "0xCDF10C", VA = "0xCDF10C")]
		public static IntPtr ArrayOfStructsToIntPtr(Array ar)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000EAC")]
		[Address(RVA = "0xCDF2D0", Offset = "0xCDF2D0", VA = "0xCDF2D0")]
		public static ovrKeyValuePair[] DictionaryToOVRKeyValuePairs(Dictionary<string, object> dict)
		{
			return null;
		}

		[Token(Token = "0x6000EAD")]
		[Address(RVA = "0xCDFA40", Offset = "0xCDFA40", VA = "0xCDFA40")]
		public static byte[] IntPtrToByteArray(IntPtr data, ulong size)
		{
			return null;
		}

		[Token(Token = "0x6000EAE")]
		[Address(RVA = "0xCDFB04", Offset = "0xCDFB04", VA = "0xCDFB04")]
		public static Dictionary<string, string> DataStoreFromNative(IntPtr pointer)
		{
			return null;
		}

		[Token(Token = "0x6000EAF")]
		[Address(RVA = "0xCDFE34", Offset = "0xCDFE34", VA = "0xCDFE34")]
		public static string StringFromNative(IntPtr pointer)
		{
			return null;
		}

		[Token(Token = "0x6000EB0")]
		[Address(RVA = "0xCDFF54", Offset = "0xCDFF54", VA = "0xCDFF54")]
		public static int GetNativeStringLengthNotIncludingNullTerminator(IntPtr pointer)
		{
			return default(int);
		}

		[Token(Token = "0x6000EB1")]
		[Address(RVA = "0xCDFFE0", Offset = "0xCDFFE0", VA = "0xCDFFE0")]
		public static DateTime DateTimeFromNative(ulong seconds_since_the_one_true_epoch)
		{
			return default(DateTime);
		}

		[Token(Token = "0x6000EB2")]
		[Address(RVA = "0xCE0050", Offset = "0xCE0050", VA = "0xCE0050")]
		public static byte[] BlobFromNative(uint size, IntPtr pointer)
		{
			return null;
		}

		[Token(Token = "0x6000EB3")]
		[Address(RVA = "0xCE0148", Offset = "0xCE0148", VA = "0xCE0148")]
		public static byte[] FiledataFromNative(uint size, IntPtr pointer)
		{
			return null;
		}

		[Token(Token = "0x6000EB4")]
		[Address(RVA = "0xCE01EC", Offset = "0xCE01EC", VA = "0xCE01EC")]
		public static IntPtr StringToNative(string s)
		{
			return default(IntPtr);
		}

		[PreserveSig]
		[Token(Token = "0x6000EB5")]
		[Address(RVA = "0xCDD3A4", Offset = "0xCDD3A4", VA = "0xCDD3A4")]
		public static extern bool ovr_UnityInitWrapper(string appId);

		[PreserveSig]
		[Token(Token = "0x6000EB6")]
		[Address(RVA = "0xCE038C", Offset = "0xCE038C", VA = "0xCE038C")]
		public static extern void ovr_UnityInitGlobals(IntPtr loggingCB);

		[PreserveSig]
		[Token(Token = "0x6000EB7")]
		[Address(RVA = "0xCDD550", Offset = "0xCDD550", VA = "0xCDD550")]
		public static extern ulong ovr_UnityInitWrapperAsynchronous(string appId);

		[PreserveSig]
		[Token(Token = "0x6000EB8")]
		[Address(RVA = "0xCE042C", Offset = "0xCE042C", VA = "0xCE042C")]
		public static extern bool ovr_UnityInitWrapperStandalone(string accessToken, IntPtr loggingCB);

		[PreserveSig]
		[Token(Token = "0x6000EB9")]
		[Address(RVA = "0xCE04F8", Offset = "0xCE04F8", VA = "0xCE04F8")]
		public static extern ulong ovr_Platform_InitializeStandaloneOculus(ref OculusInitParams init);

		[PreserveSig]
		[Token(Token = "0x6000EBA")]
		[Address(RVA = "0xCE05F4", Offset = "0xCE05F4", VA = "0xCE05F4")]
		public static extern ulong ovr_PlatformInitializeWithAccessToken(ulong appId, string accessToken);

		[PreserveSig]
		[Token(Token = "0x6000EBB")]
		[Address(RVA = "0xCE06C0", Offset = "0xCE06C0", VA = "0xCE06C0")]
		public static extern bool ovr_UnityInitWrapperWindows(string appId, IntPtr loggingCB);

		[PreserveSig]
		[Token(Token = "0x6000EBC")]
		[Address(RVA = "0xCE078C", Offset = "0xCE078C", VA = "0xCE078C")]
		public static extern ulong ovr_UnityInitWrapperWindowsAsynchronous(string appId, IntPtr loggingCB);

		[PreserveSig]
		[Token(Token = "0x6000EBD")]
		[Address(RVA = "0xCE0854", Offset = "0xCE0854", VA = "0xCE0854")]
		public static extern bool ovr_SetDeveloperAccessToken(string accessToken);

		[Token(Token = "0x6000EBE")]
		[Address(RVA = "0xCE0910", Offset = "0xCE0910", VA = "0xCE0910")]
		public static string ovr_GetLoggedInUserLocale()
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000EBF")]
		[Address(RVA = "0xCE0970", Offset = "0xCE0970", VA = "0xCE0970")]
		private static extern IntPtr ovr_GetLoggedInUserLocale_Native();

		[PreserveSig]
		[Token(Token = "0x6000EC0")]
		[Address(RVA = "0xCE0A00", Offset = "0xCE0A00", VA = "0xCE0A00")]
		public static extern IntPtr ovr_PopMessage();

		[PreserveSig]
		[Token(Token = "0x6000EC1")]
		[Address(RVA = "0xCE0A90", Offset = "0xCE0A90", VA = "0xCE0A90")]
		public static extern void ovr_FreeMessage(IntPtr message);

		[PreserveSig]
		[Token(Token = "0x6000EC2")]
		[Address(RVA = "0xCE0B30", Offset = "0xCE0B30", VA = "0xCE0B30")]
		public static extern uint ovr_NetworkingPeer_GetSendPolicy(IntPtr networkingPeer);

		[PreserveSig]
		[Token(Token = "0x6000EC3")]
		[Address(RVA = "0xCE0BD0", Offset = "0xCE0BD0", VA = "0xCE0BD0")]
		public static extern IntPtr ovr_Voip_CreateEncoder();

		[PreserveSig]
		[Token(Token = "0x6000EC4")]
		[Address(RVA = "0xCE0C60", Offset = "0xCE0C60", VA = "0xCE0C60")]
		public static extern void ovr_Voip_DestroyEncoder(IntPtr encoder);

		[PreserveSig]
		[Token(Token = "0x6000EC5")]
		[Address(RVA = "0xCE0D00", Offset = "0xCE0D00", VA = "0xCE0D00")]
		public static extern IntPtr ovr_Voip_CreateDecoder();

		[PreserveSig]
		[Token(Token = "0x6000EC6")]
		[Address(RVA = "0xCE0D90", Offset = "0xCE0D90", VA = "0xCE0D90")]
		public static extern void ovr_Voip_DestroyDecoder(IntPtr decoder);

		[PreserveSig]
		[Token(Token = "0x6000EC7")]
		[Address(RVA = "0xCE0E30", Offset = "0xCE0E30", VA = "0xCE0E30")]
		public static extern void ovr_VoipDecoder_Decode(IntPtr obj, byte[] compressedData, ulong compressedSize);

		[PreserveSig]
		[Token(Token = "0x6000EC8")]
		[Address(RVA = "0xCE0EF0", Offset = "0xCE0EF0", VA = "0xCE0EF0")]
		public static extern IntPtr ovr_Microphone_Create();

		[PreserveSig]
		[Token(Token = "0x6000EC9")]
		[Address(RVA = "0xCE0F80", Offset = "0xCE0F80", VA = "0xCE0F80")]
		public static extern void ovr_Microphone_Destroy(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000ECA")]
		[Address(RVA = "0xCE1020", Offset = "0xCE1020", VA = "0xCE1020")]
		public static extern void ovr_Voip_SetSystemVoipPassthrough(bool passthrough);

		[PreserveSig]
		[Token(Token = "0x6000ECB")]
		[Address(RVA = "0xCE10C0", Offset = "0xCE10C0", VA = "0xCE10C0")]
		public static extern void ovr_Voip_SetSystemVoipMicrophoneMuted(VoipMuteState muted);

		[PreserveSig]
		[Token(Token = "0x6000ECC")]
		[Address(RVA = "0xCE1160", Offset = "0xCE1160", VA = "0xCE1160")]
		public static extern void ovr_UnityResetTestPlatform();

		[PreserveSig]
		[Token(Token = "0x6000ECD")]
		[Address(RVA = "0xCDD0C8", Offset = "0xCDD0C8", VA = "0xCDD0C8")]
		public static extern ulong ovr_HTTP_GetWithMessageType(string url, int messageType);

		[PreserveSig]
		[Token(Token = "0x6000ECE")]
		[Address(RVA = "0xCE11F0", Offset = "0xCE11F0", VA = "0xCE11F0")]
		public static extern void ovr_CrashApplication();

		[PreserveSig]
		[Token(Token = "0x6000ECF")]
		[Address(RVA = "0xCE1280", Offset = "0xCE1280", VA = "0xCE1280")]
		public static extern void ovr_Voip_SetMicrophoneFilterCallback(FilterCallback cb);

		[PreserveSig]
		[Token(Token = "0x6000ED0")]
		[Address(RVA = "0xCE1324", Offset = "0xCE1324", VA = "0xCE1324")]
		public static extern void ovr_Voip_SetMicrophoneFilterCallbackWithFixedSizeBuffer(FilterCallback cb, UIntPtr bufferSizeElements);

		[Token(Token = "0x6000ED1")]
		[Address(RVA = "0xCE13D8", Offset = "0xCE13D8", VA = "0xCE13D8")]
		public static void LogNewEvent(string eventName, Dictionary<string, string> values)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000ED2")]
		[Address(RVA = "0xCE1758", Offset = "0xCE1758", VA = "0xCE1758")]
		public static extern void ovr_Log_NewEvent(IntPtr eventName, IntPtr[] values, UIntPtr length);

		[PreserveSig]
		[Token(Token = "0x6000ED3")]
		[Address(RVA = "0xCDD9F8", Offset = "0xCDD9F8", VA = "0xCDD9F8")]
		public static extern IntPtr ovr_ApplicationLifecycle_GetLaunchDetails();

		[Token(Token = "0x6000ED4")]
		[Address(RVA = "0xCE1818", Offset = "0xCE1818", VA = "0xCE1818")]
		public static ulong ovr_HTTP_StartTransfer(string url, ovrKeyValuePair[] headers)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000ED5")]
		[Address(RVA = "0xCE1910", Offset = "0xCE1910", VA = "0xCE1910")]
		private static extern ulong ovr_HTTP_StartTransfer_Native(IntPtr url, ovrKeyValuePair[] headers, UIntPtr numItems);

		[PreserveSig]
		[Token(Token = "0x6000ED6")]
		[Address(RVA = "0xCE1A8C", Offset = "0xCE1A8C", VA = "0xCE1A8C")]
		public static extern bool ovr_HTTP_Write(ulong transferId, byte[] bytes, UIntPtr length);

		[PreserveSig]
		[Token(Token = "0x6000ED7")]
		[Address(RVA = "0xCE1B54", Offset = "0xCE1B54", VA = "0xCE1B54")]
		public static extern void ovr_HTTP_WriteEOM(ulong transferId);

		[Token(Token = "0x6000ED8")]
		[Address(RVA = "0xCE1BF0", Offset = "0xCE1BF0", VA = "0xCE1BF0")]
		public static string ovr_Message_GetStringForJavascript(IntPtr message)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000ED9")]
		[Address(RVA = "0xCE1C58", Offset = "0xCE1C58", VA = "0xCE1C58")]
		private static extern IntPtr ovr_Message_GetStringForJavascript_Native(IntPtr message);

		[PreserveSig]
		[Token(Token = "0x6000EDA")]
		[Address(RVA = "0xCE1CF8", Offset = "0xCE1CF8", VA = "0xCE1CF8")]
		public static extern void ovr_Net_Accept(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x6000EDB")]
		[Address(RVA = "0xCE1D98", Offset = "0xCE1D98", VA = "0xCE1D98")]
		public static extern bool ovr_Net_AcceptForCurrentRoom();

		[PreserveSig]
		[Token(Token = "0x6000EDC")]
		[Address(RVA = "0xCE1E30", Offset = "0xCE1E30", VA = "0xCE1E30")]
		public static extern void ovr_Net_Close(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x6000EDD")]
		[Address(RVA = "0xCE1ED0", Offset = "0xCE1ED0", VA = "0xCE1ED0")]
		public static extern void ovr_Net_CloseForCurrentRoom();

		[PreserveSig]
		[Token(Token = "0x6000EDE")]
		[Address(RVA = "0xCE1F60", Offset = "0xCE1F60", VA = "0xCE1F60")]
		public static extern void ovr_Net_Connect(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x6000EDF")]
		[Address(RVA = "0xCE2000", Offset = "0xCE2000", VA = "0xCE2000")]
		public static extern bool ovr_Net_IsConnected(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x6000EE0")]
		[Address(RVA = "0xCE20A8", Offset = "0xCE20A8", VA = "0xCE20A8")]
		public static extern ulong ovr_Net_Ping(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x6000EE1")]
		[Address(RVA = "0xCE2148", Offset = "0xCE2148", VA = "0xCE2148")]
		public static extern IntPtr ovr_Net_ReadPacket();

		[PreserveSig]
		[Token(Token = "0x6000EE2")]
		[Address(RVA = "0xCE21D8", Offset = "0xCE21D8", VA = "0xCE21D8")]
		public static extern bool ovr_Net_SendPacket(ulong userID, UIntPtr length, byte[] bytes, SendPolicy policy);

		[PreserveSig]
		[Token(Token = "0x6000EE3")]
		[Address(RVA = "0xCE22B0", Offset = "0xCE22B0", VA = "0xCE22B0")]
		public static extern bool ovr_Net_SendPacketToCurrentRoom(UIntPtr length, byte[] bytes, SendPolicy policy);

		[PreserveSig]
		[Token(Token = "0x6000EE4")]
		[Address(RVA = "0xCE2378", Offset = "0xCE2378", VA = "0xCE2378")]
		public static extern int ovr_Party_PluginGetSharedMemHandle();

		[PreserveSig]
		[Token(Token = "0x6000EE5")]
		[Address(RVA = "0xCE2408", Offset = "0xCE2408", VA = "0xCE2408")]
		public static extern VoipMuteState ovr_Party_PluginGetVoipMicrophoneMuted();

		[PreserveSig]
		[Token(Token = "0x6000EE6")]
		[Address(RVA = "0xCE2498", Offset = "0xCE2498", VA = "0xCE2498")]
		public static extern bool ovr_Party_PluginGetVoipPassthrough();

		[PreserveSig]
		[Token(Token = "0x6000EE7")]
		[Address(RVA = "0xCE2530", Offset = "0xCE2530", VA = "0xCE2530")]
		public static extern SystemVoipStatus ovr_Party_PluginGetVoipStatus();

		[PreserveSig]
		[Token(Token = "0x6000EE8")]
		[Address(RVA = "0xCE25C0", Offset = "0xCE25C0", VA = "0xCE25C0")]
		public static extern void ovr_Voip_Accept(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000EE9")]
		[Address(RVA = "0xCE2660", Offset = "0xCE2660", VA = "0xCE2660")]
		public static extern VoipDtxState ovr_Voip_GetIsConnectionUsingDtx(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x6000EEA")]
		[Address(RVA = "0xCE2700", Offset = "0xCE2700", VA = "0xCE2700")]
		public static extern VoipBitrate ovr_Voip_GetLocalBitrate(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x6000EEB")]
		[Address(RVA = "0xCE27A0", Offset = "0xCE27A0", VA = "0xCE27A0")]
		public static extern UIntPtr ovr_Voip_GetOutputBufferMaxSize();

		[PreserveSig]
		[Token(Token = "0x6000EEC")]
		[Address(RVA = "0xCE2830", Offset = "0xCE2830", VA = "0xCE2830")]
		public static extern UIntPtr ovr_Voip_GetPCM(ulong senderID, short[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x6000EED")]
		[Address(RVA = "0xCE28F0", Offset = "0xCE28F0", VA = "0xCE28F0")]
		public static extern UIntPtr ovr_Voip_GetPCMFloat(ulong senderID, float[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x6000EEE")]
		[Address(RVA = "0xCE29B0", Offset = "0xCE29B0", VA = "0xCE29B0")]
		public static extern UIntPtr ovr_Voip_GetPCMSize(ulong senderID);

		[PreserveSig]
		[Token(Token = "0x6000EEF")]
		[Address(RVA = "0xCE2A50", Offset = "0xCE2A50", VA = "0xCE2A50")]
		public static extern UIntPtr ovr_Voip_GetPCMWithTimestamp(ulong senderID, short[] outputBuffer, UIntPtr outputBufferNumElements, uint[] timestamp);

		[PreserveSig]
		[Token(Token = "0x6000EF0")]
		[Address(RVA = "0xCE2B28", Offset = "0xCE2B28", VA = "0xCE2B28")]
		public static extern UIntPtr ovr_Voip_GetPCMWithTimestampFloat(ulong senderID, float[] outputBuffer, UIntPtr outputBufferNumElements, uint[] timestamp);

		[PreserveSig]
		[Token(Token = "0x6000EF1")]
		[Address(RVA = "0xCE2C00", Offset = "0xCE2C00", VA = "0xCE2C00")]
		public static extern VoipBitrate ovr_Voip_GetRemoteBitrate(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x6000EF2")]
		[Address(RVA = "0xCE2CA0", Offset = "0xCE2CA0", VA = "0xCE2CA0")]
		public static extern uint ovr_Voip_GetSyncTimestamp(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000EF3")]
		[Address(RVA = "0xCE2D40", Offset = "0xCE2D40", VA = "0xCE2D40")]
		public static extern long ovr_Voip_GetSyncTimestampDifference(uint lhs, uint rhs);

		[PreserveSig]
		[Token(Token = "0x6000EF4")]
		[Address(RVA = "0xCE2DF0", Offset = "0xCE2DF0", VA = "0xCE2DF0")]
		public static extern VoipMuteState ovr_Voip_GetSystemVoipMicrophoneMuted();

		[PreserveSig]
		[Token(Token = "0x6000EF5")]
		[Address(RVA = "0xCE2E80", Offset = "0xCE2E80", VA = "0xCE2E80")]
		public static extern SystemVoipStatus ovr_Voip_GetSystemVoipStatus();

		[PreserveSig]
		[Token(Token = "0x6000EF6")]
		[Address(RVA = "0xCE2F10", Offset = "0xCE2F10", VA = "0xCE2F10")]
		public static extern void ovr_Voip_SetMicrophoneMuted(VoipMuteState state);

		[PreserveSig]
		[Token(Token = "0x6000EF7")]
		[Address(RVA = "0xCE2FB0", Offset = "0xCE2FB0", VA = "0xCE2FB0")]
		public static extern void ovr_Voip_SetNewConnectionOptions(IntPtr voipOptions);

		[PreserveSig]
		[Token(Token = "0x6000EF8")]
		[Address(RVA = "0xCE3050", Offset = "0xCE3050", VA = "0xCE3050")]
		public static extern void ovr_Voip_SetOutputSampleRate(VoipSampleRate rate);

		[PreserveSig]
		[Token(Token = "0x6000EF9")]
		[Address(RVA = "0xCE30F0", Offset = "0xCE30F0", VA = "0xCE30F0")]
		public static extern void ovr_Voip_Start(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000EFA")]
		[Address(RVA = "0xCE3190", Offset = "0xCE3190", VA = "0xCE3190")]
		public static extern void ovr_Voip_Stop(ulong userID);

		[Token(Token = "0x6000EFB")]
		[Address(RVA = "0xCDC448", Offset = "0xCDC448", VA = "0xCDC448")]
		public static ulong ovr_Achievements_AddCount(string name, ulong count)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000EFC")]
		[Address(RVA = "0xCE3230", Offset = "0xCE3230", VA = "0xCE3230")]
		private static extern ulong ovr_Achievements_AddCount_Native(IntPtr name, ulong count);

		[Token(Token = "0x6000EFD")]
		[Address(RVA = "0xCDC5DC", Offset = "0xCDC5DC", VA = "0xCDC5DC")]
		public static ulong ovr_Achievements_AddFields(string name, string fields)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000EFE")]
		[Address(RVA = "0xCE32E0", Offset = "0xCE32E0", VA = "0xCE32E0")]
		private static extern ulong ovr_Achievements_AddFields_Native(IntPtr name, IntPtr fields);

		[PreserveSig]
		[Token(Token = "0x6000EFF")]
		[Address(RVA = "0xCDC774", Offset = "0xCDC774", VA = "0xCDC774")]
		public static extern ulong ovr_Achievements_GetAllDefinitions();

		[PreserveSig]
		[Token(Token = "0x6000F00")]
		[Address(RVA = "0xCDC8C8", Offset = "0xCDC8C8", VA = "0xCDC8C8")]
		public static extern ulong ovr_Achievements_GetAllProgress();

		[PreserveSig]
		[Token(Token = "0x6000F01")]
		[Address(RVA = "0xCDCA38", Offset = "0xCDCA38", VA = "0xCDCA38")]
		public static extern ulong ovr_Achievements_GetDefinitionsByName(string[] names, int count);

		[PreserveSig]
		[Token(Token = "0x6000F02")]
		[Address(RVA = "0xCDCC88", Offset = "0xCDCC88", VA = "0xCDCC88")]
		public static extern ulong ovr_Achievements_GetProgressByName(string[] names, int count);

		[Token(Token = "0x6000F03")]
		[Address(RVA = "0xCDCEC4", Offset = "0xCDCEC4", VA = "0xCDCEC4")]
		public static ulong ovr_Achievements_Unlock(string name)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000F04")]
		[Address(RVA = "0xCE3390", Offset = "0xCE3390", VA = "0xCE3390")]
		private static extern ulong ovr_Achievements_Unlock_Native(IntPtr name);

		[PreserveSig]
		[Token(Token = "0x6000F05")]
		[Address(RVA = "0xCE3430", Offset = "0xCE3430", VA = "0xCE3430")]
		public static extern ulong ovr_Application_ExecuteCoordinatedLaunch(ulong appID, ulong roomID);

		[PreserveSig]
		[Token(Token = "0x6000F06")]
		[Address(RVA = "0xCE34E0", Offset = "0xCE34E0", VA = "0xCE34E0")]
		public static extern ulong ovr_Application_GetInstalledApplications();

		[PreserveSig]
		[Token(Token = "0x6000F07")]
		[Address(RVA = "0xCDD6D4", Offset = "0xCDD6D4", VA = "0xCDD6D4")]
		public static extern ulong ovr_Application_GetVersion();

		[PreserveSig]
		[Token(Token = "0x6000F08")]
		[Address(RVA = "0xCDD8BC", Offset = "0xCDD8BC", VA = "0xCDD8BC")]
		public static extern ulong ovr_Application_LaunchOtherApp(ulong appID, IntPtr deeplink_options);

		[PreserveSig]
		[Token(Token = "0x6000F09")]
		[Address(RVA = "0xCE3570", Offset = "0xCE3570", VA = "0xCE3570")]
		public static extern ulong ovr_ApplicationLifecycle_GetRegisteredPIDs();

		[PreserveSig]
		[Token(Token = "0x6000F0A")]
		[Address(RVA = "0xCE3600", Offset = "0xCE3600", VA = "0xCE3600")]
		public static extern ulong ovr_ApplicationLifecycle_GetSessionKey();

		[Token(Token = "0x6000F0B")]
		[Address(RVA = "0xCE3690", Offset = "0xCE3690", VA = "0xCE3690")]
		public static ulong ovr_ApplicationLifecycle_RegisterSessionKey(string sessionKey)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000F0C")]
		[Address(RVA = "0xCE3738", Offset = "0xCE3738", VA = "0xCE3738")]
		private static extern ulong ovr_ApplicationLifecycle_RegisterSessionKey_Native(IntPtr sessionKey);

		[PreserveSig]
		[Token(Token = "0x6000F0D")]
		[Address(RVA = "0xCDDEDC", Offset = "0xCDDEDC", VA = "0xCDDEDC")]
		public static extern ulong ovr_AssetFile_Delete(ulong assetFileID);

		[PreserveSig]
		[Token(Token = "0x6000F0E")]
		[Address(RVA = "0xCDE048", Offset = "0xCDE048", VA = "0xCDE048")]
		public static extern ulong ovr_AssetFile_DeleteById(ulong assetFileID);

		[Token(Token = "0x6000F0F")]
		[Address(RVA = "0xCDE1B4", Offset = "0xCDE1B4", VA = "0xCDE1B4")]
		public static ulong ovr_AssetFile_DeleteByName(string assetFileName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000F10")]
		[Address(RVA = "0xCE37D8", Offset = "0xCE37D8", VA = "0xCE37D8")]
		private static extern ulong ovr_AssetFile_DeleteByName_Native(IntPtr assetFileName);

		[PreserveSig]
		[Token(Token = "0x6000F11")]
		[Address(RVA = "0xCDE328", Offset = "0xCDE328", VA = "0xCDE328")]
		public static extern ulong ovr_AssetFile_Download(ulong assetFileID);

		[PreserveSig]
		[Token(Token = "0x6000F12")]
		[Address(RVA = "0xCDE494", Offset = "0xCDE494", VA = "0xCDE494")]
		public static extern ulong ovr_AssetFile_DownloadById(ulong assetFileID);

		[Token(Token = "0x6000F13")]
		[Address(RVA = "0xCDE600", Offset = "0xCDE600", VA = "0xCDE600")]
		public static ulong ovr_AssetFile_DownloadByName(string assetFileName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000F14")]
		[Address(RVA = "0xCE3878", Offset = "0xCE3878", VA = "0xCE3878")]
		private static extern ulong ovr_AssetFile_DownloadByName_Native(IntPtr assetFileName);

		[PreserveSig]
		[Token(Token = "0x6000F15")]
		[Address(RVA = "0xCDE774", Offset = "0xCDE774", VA = "0xCDE774")]
		public static extern ulong ovr_AssetFile_DownloadCancel(ulong assetFileID);

		[PreserveSig]
		[Token(Token = "0x6000F16")]
		[Address(RVA = "0xCDE8E0", Offset = "0xCDE8E0", VA = "0xCDE8E0")]
		public static extern ulong ovr_AssetFile_DownloadCancelById(ulong assetFileID);

		[Token(Token = "0x6000F17")]
		[Address(RVA = "0xCDEA4C", Offset = "0xCDEA4C", VA = "0xCDEA4C")]
		public static ulong ovr_AssetFile_DownloadCancelByName(string assetFileName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000F18")]
		[Address(RVA = "0xCE3918", Offset = "0xCE3918", VA = "0xCE3918")]
		private static extern ulong ovr_AssetFile_DownloadCancelByName_Native(IntPtr assetFileName);

		[PreserveSig]
		[Token(Token = "0x6000F19")]
		[Address(RVA = "0xCDEBB8", Offset = "0xCDEBB8", VA = "0xCDEBB8")]
		public static extern ulong ovr_AssetFile_GetList();

		[PreserveSig]
		[Token(Token = "0x6000F1A")]
		[Address(RVA = "0xCDED14", Offset = "0xCDED14", VA = "0xCDED14")]
		public static extern ulong ovr_AssetFile_Status(ulong assetFileID);

		[PreserveSig]
		[Token(Token = "0x6000F1B")]
		[Address(RVA = "0xCDEE80", Offset = "0xCDEE80", VA = "0xCDEE80")]
		public static extern ulong ovr_AssetFile_StatusById(ulong assetFileID);

		[Token(Token = "0x6000F1C")]
		[Address(RVA = "0xCDEFEC", Offset = "0xCDEFEC", VA = "0xCDEFEC")]
		public static ulong ovr_AssetFile_StatusByName(string assetFileName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000F1D")]
		[Address(RVA = "0xCE39B8", Offset = "0xCE39B8", VA = "0xCE39B8")]
		private static extern ulong ovr_AssetFile_StatusByName_Native(IntPtr assetFileName);

		[Token(Token = "0x6000F1E")]
		[Address(RVA = "0xCE3A58", Offset = "0xCE3A58", VA = "0xCE3A58")]
		public static ulong ovr_Avatar_UpdateMetaData(string avatarMetaData, string imageFilePath)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000F1F")]
		[Address(RVA = "0xCE3B2C", Offset = "0xCE3B2C", VA = "0xCE3B2C")]
		private static extern ulong ovr_Avatar_UpdateMetaData_Native(IntPtr avatarMetaData, IntPtr imageFilePath);

		[PreserveSig]
		[Token(Token = "0x6000F20")]
		[Address(RVA = "0xCE3BDC", Offset = "0xCE3BDC", VA = "0xCE3BDC")]
		public static extern ulong ovr_Cal_FinalizeApplication(ulong groupingObject, ulong[] userIDs, int numUserIDs, ulong finalized_application_ID);

		[PreserveSig]
		[Token(Token = "0x6000F21")]
		[Address(RVA = "0xCE3CAC", Offset = "0xCE3CAC", VA = "0xCE3CAC")]
		public static extern ulong ovr_Cal_GetSuggestedApplications(ulong groupingObject, ulong[] userIDs, int numUserIDs);

		[PreserveSig]
		[Token(Token = "0x6000F22")]
		[Address(RVA = "0xCE3D6C", Offset = "0xCE3D6C", VA = "0xCE3D6C")]
		public static extern ulong ovr_Cal_ProposeApplication(ulong groupingObject, ulong[] userIDs, int numUserIDs, ulong proposed_application_ID);

		[Token(Token = "0x6000F23")]
		[Address(RVA = "0xCE3E3C", Offset = "0xCE3E3C", VA = "0xCE3E3C")]
		public static ulong ovr_CloudStorage_Delete(string bucket, string key)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000F24")]
		[Address(RVA = "0xCE3F10", Offset = "0xCE3F10", VA = "0xCE3F10")]
		private static extern ulong ovr_CloudStorage_Delete_Native(IntPtr bucket, IntPtr key);

		[Token(Token = "0x6000F25")]
		[Address(RVA = "0xCE3FC0", Offset = "0xCE3FC0", VA = "0xCE3FC0")]
		public static ulong ovr_CloudStorage_Load(string bucket, string key)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000F26")]
		[Address(RVA = "0xCE4094", Offset = "0xCE4094", VA = "0xCE4094")]
		private static extern ulong ovr_CloudStorage_Load_Native(IntPtr bucket, IntPtr key);

		[Token(Token = "0x6000F27")]
		[Address(RVA = "0xCE4144", Offset = "0xCE4144", VA = "0xCE4144")]
		public static ulong ovr_CloudStorage_LoadBucketMetadata(string bucket)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000F28")]
		[Address(RVA = "0xCE41EC", Offset = "0xCE41EC", VA = "0xCE41EC")]
		private static extern ulong ovr_CloudStorage_LoadBucketMetadata_Native(IntPtr bucket);

		[Token(Token = "0x6000F29")]
		[Address(RVA = "0xCE428C", Offset = "0xCE428C", VA = "0xCE428C")]
		public static ulong ovr_CloudStorage_LoadConflictMetadata(string bucket, string key)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000F2A")]
		[Address(RVA = "0xCE4360", Offset = "0xCE4360", VA = "0xCE4360")]
		private static extern ulong ovr_CloudStorage_LoadConflictMetadata_Native(IntPtr bucket, IntPtr key);

		[Token(Token = "0x6000F2B")]
		[Address(RVA = "0xCE4410", Offset = "0xCE4410", VA = "0xCE4410")]
		public static ulong ovr_CloudStorage_LoadHandle(string handle)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000F2C")]
		[Address(RVA = "0xCE44B8", Offset = "0xCE44B8", VA = "0xCE44B8")]
		private static extern ulong ovr_CloudStorage_LoadHandle_Native(IntPtr handle);

		[Token(Token = "0x6000F2D")]
		[Address(RVA = "0xCE4558", Offset = "0xCE4558", VA = "0xCE4558")]
		public static ulong ovr_CloudStorage_LoadMetadata(string bucket, string key)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000F2E")]
		[Address(RVA = "0xCE462C", Offset = "0xCE462C", VA = "0xCE462C")]
		private static extern ulong ovr_CloudStorage_LoadMetadata_Native(IntPtr bucket, IntPtr key);

		[Token(Token = "0x6000F2F")]
		[Address(RVA = "0xCE46DC", Offset = "0xCE46DC", VA = "0xCE46DC")]
		public static ulong ovr_CloudStorage_ResolveKeepLocal(string bucket, string key, string remoteHandle)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000F30")]
		[Address(RVA = "0xCE47D0", Offset = "0xCE47D0", VA = "0xCE47D0")]
		private static extern ulong ovr_CloudStorage_ResolveKeepLocal_Native(IntPtr bucket, IntPtr key, IntPtr remoteHandle);

		[Token(Token = "0x6000F31")]
		[Address(RVA = "0xCE4888", Offset = "0xCE4888", VA = "0xCE4888")]
		public static ulong ovr_CloudStorage_ResolveKeepRemote(string bucket, string key, string remoteHandle)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000F32")]
		[Address(RVA = "0xCE497C", Offset = "0xCE497C", VA = "0xCE497C")]
		private static extern ulong ovr_CloudStorage_ResolveKeepRemote_Native(IntPtr bucket, IntPtr key, IntPtr remoteHandle);

		[Token(Token = "0x6000F33")]
		[Address(RVA = "0xCE4A34", Offset = "0xCE4A34", VA = "0xCE4A34")]
		public static ulong ovr_CloudStorage_Save(string bucket, string key, byte[] data, uint dataSize, long counter, string extraData)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000F34")]
		[Address(RVA = "0xCE4B50", Offset = "0xCE4B50", VA = "0xCE4B50")]
		private static extern ulong ovr_CloudStorage_Save_Native(IntPtr bucket, IntPtr key, byte[] data, uint dataSize, long counter, IntPtr extraData);

		[PreserveSig]
		[Token(Token = "0x6000F35")]
		[Address(RVA = "0xCE4C38", Offset = "0xCE4C38", VA = "0xCE4C38")]
		public static extern ulong ovr_CloudStorage2_GetUserDirectoryPath();

		[PreserveSig]
		[Token(Token = "0x6000F36")]
		[Address(RVA = "0xCE4CC8", Offset = "0xCE4CC8", VA = "0xCE4CC8")]
		public static extern ulong ovr_Entitlement_GetIsViewerEntitled();

		[Token(Token = "0x6000F37")]
		[Address(RVA = "0xCE4D58", Offset = "0xCE4D58", VA = "0xCE4D58")]
		public static ulong ovr_GraphAPI_Get(string url)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000F38")]
		[Address(RVA = "0xCE4E00", Offset = "0xCE4E00", VA = "0xCE4E00")]
		private static extern ulong ovr_GraphAPI_Get_Native(IntPtr url);

		[Token(Token = "0x6000F39")]
		[Address(RVA = "0xCE4EA0", Offset = "0xCE4EA0", VA = "0xCE4EA0")]
		public static ulong ovr_GraphAPI_Post(string url)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000F3A")]
		[Address(RVA = "0xCE4F48", Offset = "0xCE4F48", VA = "0xCE4F48")]
		private static extern ulong ovr_GraphAPI_Post_Native(IntPtr url);

		[Token(Token = "0x6000F3B")]
		[Address(RVA = "0xCE4FE4", Offset = "0xCE4FE4", VA = "0xCE4FE4")]
		public static ulong ovr_HTTP_Get(string url)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000F3C")]
		[Address(RVA = "0xCE508C", Offset = "0xCE508C", VA = "0xCE508C")]
		private static extern ulong ovr_HTTP_Get_Native(IntPtr url);

		[Token(Token = "0x6000F3D")]
		[Address(RVA = "0xCE512C", Offset = "0xCE512C", VA = "0xCE512C")]
		public static ulong ovr_HTTP_GetToFile(string url, string diskFile)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000F3E")]
		[Address(RVA = "0xCE5200", Offset = "0xCE5200", VA = "0xCE5200")]
		private static extern ulong ovr_HTTP_GetToFile_Native(IntPtr url, IntPtr diskFile);

		[Token(Token = "0x6000F3F")]
		[Address(RVA = "0xCE52B0", Offset = "0xCE52B0", VA = "0xCE52B0")]
		public static ulong ovr_HTTP_MultiPartPost(string url, string filepath_param_name, string filepath, string access_token, ovrKeyValuePair[] post_params)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000F40")]
		[Address(RVA = "0xCE5410", Offset = "0xCE5410", VA = "0xCE5410")]
		private static extern ulong ovr_HTTP_MultiPartPost_Native(IntPtr url, IntPtr filepath_param_name, IntPtr filepath, IntPtr access_token, ovrKeyValuePair[] post_params, UIntPtr numItems);

		[Token(Token = "0x6000F41")]
		[Address(RVA = "0xCE55BC", Offset = "0xCE55BC", VA = "0xCE55BC")]
		public static ulong ovr_HTTP_Post(string url)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000F42")]
		[Address(RVA = "0xCE5664", Offset = "0xCE5664", VA = "0xCE5664")]
		private static extern ulong ovr_HTTP_Post_Native(IntPtr url);

		[Token(Token = "0x6000F43")]
		[Address(RVA = "0xCE5704", Offset = "0xCE5704", VA = "0xCE5704")]
		public static ulong ovr_IAP_ConsumePurchase(string sku)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000F44")]
		[Address(RVA = "0xCE57AC", Offset = "0xCE57AC", VA = "0xCE57AC")]
		private static extern ulong ovr_IAP_ConsumePurchase_Native(IntPtr sku);

		[PreserveSig]
		[Token(Token = "0x6000F45")]
		[Address(RVA = "0xCE584C", Offset = "0xCE584C", VA = "0xCE584C")]
		public static extern ulong ovr_IAP_GetProductsBySKU(string[] skus, int count);

		[PreserveSig]
		[Token(Token = "0x6000F46")]
		[Address(RVA = "0xCE59BC", Offset = "0xCE59BC", VA = "0xCE59BC")]
		public static extern ulong ovr_IAP_GetViewerPurchases();

		[Token(Token = "0x6000F47")]
		[Address(RVA = "0xCE5A4C", Offset = "0xCE5A4C", VA = "0xCE5A4C")]
		public static ulong ovr_IAP_LaunchCheckoutFlow(string sku)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000F48")]
		[Address(RVA = "0xCE5AF4", Offset = "0xCE5AF4", VA = "0xCE5AF4")]
		private static extern ulong ovr_IAP_LaunchCheckoutFlow_Native(IntPtr sku);

		[PreserveSig]
		[Token(Token = "0x6000F49")]
		[Address(RVA = "0xCE5B94", Offset = "0xCE5B94", VA = "0xCE5B94")]
		public static extern ulong ovr_LanguagePack_GetCurrent();

		[Token(Token = "0x6000F4A")]
		[Address(RVA = "0xCE5C24", Offset = "0xCE5C24", VA = "0xCE5C24")]
		public static ulong ovr_LanguagePack_SetCurrent(string tag)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000F4B")]
		[Address(RVA = "0xCE5CCC", Offset = "0xCE5CCC", VA = "0xCE5CCC")]
		private static extern ulong ovr_LanguagePack_SetCurrent_Native(IntPtr tag);

		[Token(Token = "0x6000F4C")]
		[Address(RVA = "0xCE5D6C", Offset = "0xCE5D6C", VA = "0xCE5D6C")]
		public static ulong ovr_Leaderboard_GetEntries(string leaderboardName, int limit, LeaderboardFilterType filter, LeaderboardStartAt startAt)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000F4D")]
		[Address(RVA = "0xCE5E3C", Offset = "0xCE5E3C", VA = "0xCE5E3C")]
		private static extern ulong ovr_Leaderboard_GetEntries_Native(IntPtr leaderboardName, int limit, LeaderboardFilterType filter, LeaderboardStartAt startAt);

		[Token(Token = "0x6000F4E")]
		[Address(RVA = "0xCE5F04", Offset = "0xCE5F04", VA = "0xCE5F04")]
		public static ulong ovr_Leaderboard_GetEntriesAfterRank(string leaderboardName, int limit, ulong afterRank)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000F4F")]
		[Address(RVA = "0xCE5FC4", Offset = "0xCE5FC4", VA = "0xCE5FC4")]
		private static extern ulong ovr_Leaderboard_GetEntriesAfterRank_Native(IntPtr leaderboardName, int limit, ulong afterRank);

		[PreserveSig]
		[Token(Token = "0x6000F50")]
		[Address(RVA = "0xCE607C", Offset = "0xCE607C", VA = "0xCE607C")]
		public static extern ulong ovr_Leaderboard_GetNextEntries(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6000F51")]
		[Address(RVA = "0xCE611C", Offset = "0xCE611C", VA = "0xCE611C")]
		public static extern ulong ovr_Leaderboard_GetPreviousEntries(IntPtr handle);

		[Token(Token = "0x6000F52")]
		[Address(RVA = "0xCE61BC", Offset = "0xCE61BC", VA = "0xCE61BC")]
		public static ulong ovr_Leaderboard_WriteEntry(string leaderboardName, long score, byte[] extraData, uint extraDataLength, bool forceUpdate)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000F53")]
		[Address(RVA = "0xCE6294", Offset = "0xCE6294", VA = "0xCE6294")]
		private static extern ulong ovr_Leaderboard_WriteEntry_Native(IntPtr leaderboardName, long score, byte[] extraData, uint extraDataLength, bool forceUpdate);

		[PreserveSig]
		[Token(Token = "0x6000F54")]
		[Address(RVA = "0xCE636C", Offset = "0xCE636C", VA = "0xCE636C")]
		public static extern ulong ovr_Livestreaming_GetStatus();

		[Token(Token = "0x6000F55")]
		[Address(RVA = "0xCE63FC", Offset = "0xCE63FC", VA = "0xCE63FC")]
		public static ulong ovr_Livestreaming_IsAllowedForApplication(string packageName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000F56")]
		[Address(RVA = "0xCE64A4", Offset = "0xCE64A4", VA = "0xCE64A4")]
		private static extern ulong ovr_Livestreaming_IsAllowedForApplication_Native(IntPtr packageName);

		[PreserveSig]
		[Token(Token = "0x6000F57")]
		[Address(RVA = "0xCE6544", Offset = "0xCE6544", VA = "0xCE6544")]
		public static extern ulong ovr_Livestreaming_PauseStream();

		[PreserveSig]
		[Token(Token = "0x6000F58")]
		[Address(RVA = "0xCE65D4", Offset = "0xCE65D4", VA = "0xCE65D4")]
		public static extern ulong ovr_Livestreaming_ResumeStream();

		[PreserveSig]
		[Token(Token = "0x6000F59")]
		[Address(RVA = "0xCE6664", Offset = "0xCE6664", VA = "0xCE6664")]
		public static extern ulong ovr_Livestreaming_StartPartyStream();

		[PreserveSig]
		[Token(Token = "0x6000F5A")]
		[Address(RVA = "0xCE66F4", Offset = "0xCE66F4", VA = "0xCE66F4")]
		public static extern ulong ovr_Livestreaming_StartStream(LivestreamingAudience audience, LivestreamingMicrophoneStatus micStatus);

		[PreserveSig]
		[Token(Token = "0x6000F5B")]
		[Address(RVA = "0xCE67A4", Offset = "0xCE67A4", VA = "0xCE67A4")]
		public static extern ulong ovr_Livestreaming_StopPartyStream();

		[PreserveSig]
		[Token(Token = "0x6000F5C")]
		[Address(RVA = "0xCE6834", Offset = "0xCE6834", VA = "0xCE6834")]
		public static extern ulong ovr_Livestreaming_StopStream();

		[PreserveSig]
		[Token(Token = "0x6000F5D")]
		[Address(RVA = "0xCE68C4", Offset = "0xCE68C4", VA = "0xCE68C4")]
		public static extern ulong ovr_Livestreaming_UpdateCommentsOverlayVisibility(bool isVisible);

		[PreserveSig]
		[Token(Token = "0x6000F5E")]
		[Address(RVA = "0xCE6964", Offset = "0xCE6964", VA = "0xCE6964")]
		public static extern ulong ovr_Livestreaming_UpdateMicStatus(LivestreamingMicrophoneStatus micStatus);

		[Token(Token = "0x6000F5F")]
		[Address(RVA = "0xCE6A04", Offset = "0xCE6A04", VA = "0xCE6A04")]
		public static ulong ovr_Matchmaking_Browse(string pool, IntPtr customQueryData)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000F60")]
		[Address(RVA = "0xCE6ABC", Offset = "0xCE6ABC", VA = "0xCE6ABC")]
		private static extern ulong ovr_Matchmaking_Browse_Native(IntPtr pool, IntPtr customQueryData);

		[Token(Token = "0x6000F61")]
		[Address(RVA = "0xCE6B6C", Offset = "0xCE6B6C", VA = "0xCE6B6C")]
		public static ulong ovr_Matchmaking_Browse2(string pool, IntPtr matchmakingOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000F62")]
		[Address(RVA = "0xCE6C24", Offset = "0xCE6C24", VA = "0xCE6C24")]
		private static extern ulong ovr_Matchmaking_Browse2_Native(IntPtr pool, IntPtr matchmakingOptions);

		[Token(Token = "0x6000F63")]
		[Address(RVA = "0xCE6CD4", Offset = "0xCE6CD4", VA = "0xCE6CD4")]
		public static ulong ovr_Matchmaking_Cancel(string pool, string requestHash)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000F64")]
		[Address(RVA = "0xCE6DA8", Offset = "0xCE6DA8", VA = "0xCE6DA8")]
		private static extern ulong ovr_Matchmaking_Cancel_Native(IntPtr pool, IntPtr requestHash);

		[PreserveSig]
		[Token(Token = "0x6000F65")]
		[Address(RVA = "0xCE6E58", Offset = "0xCE6E58", VA = "0xCE6E58")]
		public static extern ulong ovr_Matchmaking_Cancel2();

		[Token(Token = "0x6000F66")]
		[Address(RVA = "0xCE6EE8", Offset = "0xCE6EE8", VA = "0xCE6EE8")]
		public static ulong ovr_Matchmaking_CreateAndEnqueueRoom(string pool, uint maxUsers, bool subscribeToUpdates, IntPtr customQueryData)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000F67")]
		[Address(RVA = "0xCE6FB8", Offset = "0xCE6FB8", VA = "0xCE6FB8")]
		private static extern ulong ovr_Matchmaking_CreateAndEnqueueRoom_Native(IntPtr pool, uint maxUsers, bool subscribeToUpdates, IntPtr customQueryData);

		[Token(Token = "0x6000F68")]
		[Address(RVA = "0xCE7080", Offset = "0xCE7080", VA = "0xCE7080")]
		public static ulong ovr_Matchmaking_CreateAndEnqueueRoom2(string pool, IntPtr matchmakingOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000F69")]
		[Address(RVA = "0xCE7138", Offset = "0xCE7138", VA = "0xCE7138")]
		private static extern ulong ovr_Matchmaking_CreateAndEnqueueRoom2_Native(IntPtr pool, IntPtr matchmakingOptions);

		[Token(Token = "0x6000F6A")]
		[Address(RVA = "0xCE71E8", Offset = "0xCE71E8", VA = "0xCE71E8")]
		public static ulong ovr_Matchmaking_CreateRoom(string pool, uint maxUsers, bool subscribeToUpdates)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000F6B")]
		[Address(RVA = "0xCE72A8", Offset = "0xCE72A8", VA = "0xCE72A8")]
		private static extern ulong ovr_Matchmaking_CreateRoom_Native(IntPtr pool, uint maxUsers, bool subscribeToUpdates);

		[Token(Token = "0x6000F6C")]
		[Address(RVA = "0xCE7360", Offset = "0xCE7360", VA = "0xCE7360")]
		public static ulong ovr_Matchmaking_CreateRoom2(string pool, IntPtr matchmakingOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000F6D")]
		[Address(RVA = "0xCE7418", Offset = "0xCE7418", VA = "0xCE7418")]
		private static extern ulong ovr_Matchmaking_CreateRoom2_Native(IntPtr pool, IntPtr matchmakingOptions);

		[Token(Token = "0x6000F6E")]
		[Address(RVA = "0xCE74C8", Offset = "0xCE74C8", VA = "0xCE74C8")]
		public static ulong ovr_Matchmaking_Enqueue(string pool, IntPtr customQueryData)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000F6F")]
		[Address(RVA = "0xCE7580", Offset = "0xCE7580", VA = "0xCE7580")]
		private static extern ulong ovr_Matchmaking_Enqueue_Native(IntPtr pool, IntPtr customQueryData);

		[Token(Token = "0x6000F70")]
		[Address(RVA = "0xCE7630", Offset = "0xCE7630", VA = "0xCE7630")]
		public static ulong ovr_Matchmaking_Enqueue2(string pool, IntPtr matchmakingOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000F71")]
		[Address(RVA = "0xCE76E8", Offset = "0xCE76E8", VA = "0xCE76E8")]
		private static extern ulong ovr_Matchmaking_Enqueue2_Native(IntPtr pool, IntPtr matchmakingOptions);

		[PreserveSig]
		[Token(Token = "0x6000F72")]
		[Address(RVA = "0xCE7798", Offset = "0xCE7798", VA = "0xCE7798")]
		public static extern ulong ovr_Matchmaking_EnqueueRoom(ulong roomID, IntPtr customQueryData);

		[PreserveSig]
		[Token(Token = "0x6000F73")]
		[Address(RVA = "0xCE7848", Offset = "0xCE7848", VA = "0xCE7848")]
		public static extern ulong ovr_Matchmaking_EnqueueRoom2(ulong roomID, IntPtr matchmakingOptions);

		[PreserveSig]
		[Token(Token = "0x6000F74")]
		[Address(RVA = "0xCE78F8", Offset = "0xCE78F8", VA = "0xCE78F8")]
		public static extern ulong ovr_Matchmaking_GetAdminSnapshot();

		[Token(Token = "0x6000F75")]
		[Address(RVA = "0xCE7988", Offset = "0xCE7988", VA = "0xCE7988")]
		public static ulong ovr_Matchmaking_GetStats(string pool, uint maxLevel, MatchmakingStatApproach approach)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000F76")]
		[Address(RVA = "0xCE7A48", Offset = "0xCE7A48", VA = "0xCE7A48")]
		private static extern ulong ovr_Matchmaking_GetStats_Native(IntPtr pool, uint maxLevel, MatchmakingStatApproach approach);

		[PreserveSig]
		[Token(Token = "0x6000F77")]
		[Address(RVA = "0xCE7B00", Offset = "0xCE7B00", VA = "0xCE7B00")]
		public static extern ulong ovr_Matchmaking_JoinRoom(ulong roomID, bool subscribeToUpdates);

		[Token(Token = "0x6000F78")]
		[Address(RVA = "0xCE7BB0", Offset = "0xCE7BB0", VA = "0xCE7BB0")]
		public static ulong ovr_Matchmaking_ReportResultInsecure(ulong roomID, ovrKeyValuePair[] data)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000F79")]
		[Address(RVA = "0xCE7C68", Offset = "0xCE7C68", VA = "0xCE7C68")]
		private static extern ulong ovr_Matchmaking_ReportResultInsecure_Native(ulong roomID, ovrKeyValuePair[] data, UIntPtr numItems);

		[PreserveSig]
		[Token(Token = "0x6000F7A")]
		[Address(RVA = "0xCE7DE4", Offset = "0xCE7DE4", VA = "0xCE7DE4")]
		public static extern ulong ovr_Matchmaking_StartMatch(ulong roomID);

		[Token(Token = "0x6000F7B")]
		[Address(RVA = "0xCE7E84", Offset = "0xCE7E84", VA = "0xCE7E84")]
		public static ulong ovr_Media_ShareToFacebook(string postTextSuggestion, string filePath, MediaContentType contentType)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000F7C")]
		[Address(RVA = "0xCE7F60", Offset = "0xCE7F60", VA = "0xCE7F60")]
		private static extern ulong ovr_Media_ShareToFacebook_Native(IntPtr postTextSuggestion, IntPtr filePath, MediaContentType contentType);

		[PreserveSig]
		[Token(Token = "0x6000F7D")]
		[Address(RVA = "0xCE8018", Offset = "0xCE8018", VA = "0xCE8018")]
		public static extern ulong ovr_Notification_GetRoomInvites();

		[PreserveSig]
		[Token(Token = "0x6000F7E")]
		[Address(RVA = "0xCE80A8", Offset = "0xCE80A8", VA = "0xCE80A8")]
		public static extern ulong ovr_Notification_MarkAsRead(ulong notificationID);

		[PreserveSig]
		[Token(Token = "0x6000F7F")]
		[Address(RVA = "0xCE8148", Offset = "0xCE8148", VA = "0xCE8148")]
		public static extern ulong ovr_Party_Create();

		[PreserveSig]
		[Token(Token = "0x6000F80")]
		[Address(RVA = "0xCE81D8", Offset = "0xCE81D8", VA = "0xCE81D8")]
		public static extern ulong ovr_Party_GatherInApplication(ulong partyID, ulong appID);

		[PreserveSig]
		[Token(Token = "0x6000F81")]
		[Address(RVA = "0xCE8288", Offset = "0xCE8288", VA = "0xCE8288")]
		public static extern ulong ovr_Party_Get(ulong partyID);

		[PreserveSig]
		[Token(Token = "0x6000F82")]
		[Address(RVA = "0xCE8328", Offset = "0xCE8328", VA = "0xCE8328")]
		public static extern ulong ovr_Party_GetCurrent();

		[PreserveSig]
		[Token(Token = "0x6000F83")]
		[Address(RVA = "0xCE83B8", Offset = "0xCE83B8", VA = "0xCE83B8")]
		public static extern ulong ovr_Party_GetCurrentForUser(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000F84")]
		[Address(RVA = "0xCE8458", Offset = "0xCE8458", VA = "0xCE8458")]
		public static extern ulong ovr_Party_Invite(ulong partyID, ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000F85")]
		[Address(RVA = "0xCE8504", Offset = "0xCE8504", VA = "0xCE8504")]
		public static extern ulong ovr_Party_Join(ulong partyID);

		[PreserveSig]
		[Token(Token = "0x6000F86")]
		[Address(RVA = "0xCE85A4", Offset = "0xCE85A4", VA = "0xCE85A4")]
		public static extern ulong ovr_Party_Leave(ulong partyID);

		[PreserveSig]
		[Token(Token = "0x6000F87")]
		[Address(RVA = "0xCE8644", Offset = "0xCE8644", VA = "0xCE8644")]
		public static extern ulong ovr_Room_CreateAndJoinPrivate(RoomJoinPolicy joinPolicy, uint maxUsers, bool subscribeToUpdates);

		[PreserveSig]
		[Token(Token = "0x6000F88")]
		[Address(RVA = "0xCE86FC", Offset = "0xCE86FC", VA = "0xCE86FC")]
		public static extern ulong ovr_Room_CreateAndJoinPrivate2(RoomJoinPolicy joinPolicy, uint maxUsers, IntPtr roomOptions);

		[PreserveSig]
		[Token(Token = "0x6000F89")]
		[Address(RVA = "0xCE87B4", Offset = "0xCE87B4", VA = "0xCE87B4")]
		public static extern ulong ovr_Room_Get(ulong roomID);

		[PreserveSig]
		[Token(Token = "0x6000F8A")]
		[Address(RVA = "0xCE8854", Offset = "0xCE8854", VA = "0xCE8854")]
		public static extern ulong ovr_Room_GetCurrent();

		[PreserveSig]
		[Token(Token = "0x6000F8B")]
		[Address(RVA = "0xCE88E4", Offset = "0xCE88E4", VA = "0xCE88E4")]
		public static extern ulong ovr_Room_GetCurrentForUser(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000F8C")]
		[Address(RVA = "0xCE8984", Offset = "0xCE8984", VA = "0xCE8984")]
		public static extern ulong ovr_Room_GetInvitableUsers();

		[PreserveSig]
		[Token(Token = "0x6000F8D")]
		[Address(RVA = "0xCE8A14", Offset = "0xCE8A14", VA = "0xCE8A14")]
		public static extern ulong ovr_Room_GetInvitableUsers2(IntPtr roomOptions);

		[PreserveSig]
		[Token(Token = "0x6000F8E")]
		[Address(RVA = "0xCE8AB4", Offset = "0xCE8AB4", VA = "0xCE8AB4")]
		public static extern ulong ovr_Room_GetModeratedRooms();

		[PreserveSig]
		[Token(Token = "0x6000F8F")]
		[Address(RVA = "0xCE8B44", Offset = "0xCE8B44", VA = "0xCE8B44")]
		public static extern ulong ovr_Room_GetSocialRooms(ulong appID);

		[Token(Token = "0x6000F90")]
		[Address(RVA = "0xCE8BE4", Offset = "0xCE8BE4", VA = "0xCE8BE4")]
		public static ulong ovr_Room_InviteUser(ulong roomID, string inviteToken)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000F91")]
		[Address(RVA = "0xCE8CA0", Offset = "0xCE8CA0", VA = "0xCE8CA0")]
		private static extern ulong ovr_Room_InviteUser_Native(ulong roomID, IntPtr inviteToken);

		[PreserveSig]
		[Token(Token = "0x6000F92")]
		[Address(RVA = "0xCE8D50", Offset = "0xCE8D50", VA = "0xCE8D50")]
		public static extern ulong ovr_Room_Join(ulong roomID, bool subscribeToUpdates);

		[PreserveSig]
		[Token(Token = "0x6000F93")]
		[Address(RVA = "0xCE8E00", Offset = "0xCE8E00", VA = "0xCE8E00")]
		public static extern ulong ovr_Room_Join2(ulong roomID, IntPtr roomOptions);

		[PreserveSig]
		[Token(Token = "0x6000F94")]
		[Address(RVA = "0xCE8EB0", Offset = "0xCE8EB0", VA = "0xCE8EB0")]
		public static extern ulong ovr_Room_KickUser(ulong roomID, ulong userID, int kickDurationSeconds);

		[PreserveSig]
		[Token(Token = "0x6000F95")]
		[Address(RVA = "0xCE8F64", Offset = "0xCE8F64", VA = "0xCE8F64")]
		public static extern ulong ovr_Room_LaunchInvitableUserFlow(ulong roomID);

		[PreserveSig]
		[Token(Token = "0x6000F96")]
		[Address(RVA = "0xCE9004", Offset = "0xCE9004", VA = "0xCE9004")]
		public static extern ulong ovr_Room_Leave(ulong roomID);

		[Token(Token = "0x6000F97")]
		[Address(RVA = "0xCE90A4", Offset = "0xCE90A4", VA = "0xCE90A4")]
		public static ulong ovr_Room_SetDescription(ulong roomID, string description)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000F98")]
		[Address(RVA = "0xCE9160", Offset = "0xCE9160", VA = "0xCE9160")]
		private static extern ulong ovr_Room_SetDescription_Native(ulong roomID, IntPtr description);

		[Token(Token = "0x6000F99")]
		[Address(RVA = "0xCE9210", Offset = "0xCE9210", VA = "0xCE9210")]
		public static ulong ovr_Room_UpdateDataStore(ulong roomID, ovrKeyValuePair[] data)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000F9A")]
		[Address(RVA = "0xCE92C8", Offset = "0xCE92C8", VA = "0xCE92C8")]
		private static extern ulong ovr_Room_UpdateDataStore_Native(ulong roomID, ovrKeyValuePair[] data, UIntPtr numItems);

		[PreserveSig]
		[Token(Token = "0x6000F9B")]
		[Address(RVA = "0xCE9440", Offset = "0xCE9440", VA = "0xCE9440")]
		public static extern ulong ovr_Room_UpdateMembershipLockStatus(ulong roomID, RoomMembershipLockStatus membershipLockStatus);

		[PreserveSig]
		[Token(Token = "0x6000F9C")]
		[Address(RVA = "0xCE94F0", Offset = "0xCE94F0", VA = "0xCE94F0")]
		public static extern ulong ovr_Room_UpdateOwner(ulong roomID, ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000F9D")]
		[Address(RVA = "0xCE95A0", Offset = "0xCE95A0", VA = "0xCE95A0")]
		public static extern ulong ovr_Room_UpdatePrivateRoomJoinPolicy(ulong roomID, RoomJoinPolicy newJoinPolicy);

		[PreserveSig]
		[Token(Token = "0x6000F9E")]
		[Address(RVA = "0xCE9650", Offset = "0xCE9650", VA = "0xCE9650")]
		public static extern ulong ovr_SystemPermissions_GetStatus(PermissionType permType);

		[PreserveSig]
		[Token(Token = "0x6000F9F")]
		[Address(RVA = "0xCE96F0", Offset = "0xCE96F0", VA = "0xCE96F0")]
		public static extern ulong ovr_SystemPermissions_LaunchDeeplink(PermissionType permType);

		[Token(Token = "0x6000FA0")]
		[Address(RVA = "0xCE9790", Offset = "0xCE9790", VA = "0xCE9790")]
		public static ulong ovr_User_CancelRecordingForReportFlow(string recordingUUID)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000FA1")]
		[Address(RVA = "0xCE9838", Offset = "0xCE9838", VA = "0xCE9838")]
		private static extern ulong ovr_User_CancelRecordingForReportFlow_Native(IntPtr recordingUUID);

		[PreserveSig]
		[Token(Token = "0x6000FA2")]
		[Address(RVA = "0xCE98D8", Offset = "0xCE98D8", VA = "0xCE98D8")]
		public static extern ulong ovr_User_Get(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000FA3")]
		[Address(RVA = "0xCE9978", Offset = "0xCE9978", VA = "0xCE9978")]
		public static extern ulong ovr_User_GetAccessToken();

		[PreserveSig]
		[Token(Token = "0x6000FA4")]
		[Address(RVA = "0xCE9A08", Offset = "0xCE9A08", VA = "0xCE9A08")]
		public static extern ulong ovr_User_GetLinkedAccounts(IntPtr userOptions);

		[PreserveSig]
		[Token(Token = "0x6000FA5")]
		[Address(RVA = "0xCE9AA8", Offset = "0xCE9AA8", VA = "0xCE9AA8")]
		public static extern ulong ovr_User_GetLoggedInUser();

		[PreserveSig]
		[Token(Token = "0x6000FA6")]
		[Address(RVA = "0xCE9B38", Offset = "0xCE9B38", VA = "0xCE9B38")]
		public static extern ulong ovr_User_GetLoggedInUserFriends();

		[PreserveSig]
		[Token(Token = "0x6000FA7")]
		[Address(RVA = "0xCE9BC8", Offset = "0xCE9BC8", VA = "0xCE9BC8")]
		public static extern ulong ovr_User_GetLoggedInUserFriendsAndRooms();

		[PreserveSig]
		[Token(Token = "0x6000FA8")]
		[Address(RVA = "0xCE9C58", Offset = "0xCE9C58", VA = "0xCE9C58")]
		public static extern ulong ovr_User_GetLoggedInUserRecentlyMetUsersAndRooms(IntPtr userOptions);

		[PreserveSig]
		[Token(Token = "0x6000FA9")]
		[Address(RVA = "0xCE9CF8", Offset = "0xCE9CF8", VA = "0xCE9CF8")]
		public static extern ulong ovr_User_GetOrgScopedID(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000FAA")]
		[Address(RVA = "0xCE9D98", Offset = "0xCE9D98", VA = "0xCE9D98")]
		public static extern ulong ovr_User_GetSdkAccounts();

		[PreserveSig]
		[Token(Token = "0x6000FAB")]
		[Address(RVA = "0xCE9E28", Offset = "0xCE9E28", VA = "0xCE9E28")]
		public static extern ulong ovr_User_GetUserProof();

		[PreserveSig]
		[Token(Token = "0x6000FAC")]
		[Address(RVA = "0xCE9EB8", Offset = "0xCE9EB8", VA = "0xCE9EB8")]
		public static extern ulong ovr_User_LaunchBlockFlow(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000FAD")]
		[Address(RVA = "0xCE9F58", Offset = "0xCE9F58", VA = "0xCE9F58")]
		public static extern ulong ovr_User_LaunchFriendRequestFlow(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000FAE")]
		[Address(RVA = "0xCE9FF8", Offset = "0xCE9FF8", VA = "0xCE9FF8")]
		public static extern ulong ovr_User_LaunchProfile(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000FAF")]
		[Address(RVA = "0xCEA098", Offset = "0xCEA098", VA = "0xCEA098")]
		public static extern ulong ovr_User_LaunchReportFlow(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000FB0")]
		[Address(RVA = "0xCEA138", Offset = "0xCEA138", VA = "0xCEA138")]
		public static extern ulong ovr_User_LaunchReportFlow2(ulong optionalUserID, IntPtr abuseReportOptions);

		[PreserveSig]
		[Token(Token = "0x6000FB1")]
		[Address(RVA = "0xCEA1E8", Offset = "0xCEA1E8", VA = "0xCEA1E8")]
		public static extern ulong ovr_User_LaunchUnblockFlow(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000FB2")]
		[Address(RVA = "0xCEA288", Offset = "0xCEA288", VA = "0xCEA288")]
		public static extern ulong ovr_User_NewEntitledTestUser();

		[PreserveSig]
		[Token(Token = "0x6000FB3")]
		[Address(RVA = "0xCEA318", Offset = "0xCEA318", VA = "0xCEA318")]
		public static extern ulong ovr_User_NewTestUser();

		[PreserveSig]
		[Token(Token = "0x6000FB4")]
		[Address(RVA = "0xCEA3A8", Offset = "0xCEA3A8", VA = "0xCEA3A8")]
		public static extern ulong ovr_User_NewTestUserFriends();

		[PreserveSig]
		[Token(Token = "0x6000FB5")]
		[Address(RVA = "0xCEA438", Offset = "0xCEA438", VA = "0xCEA438")]
		public static extern ulong ovr_User_StartRecordingForReportFlow();

		[Token(Token = "0x6000FB6")]
		[Address(RVA = "0xCEA4C8", Offset = "0xCEA4C8", VA = "0xCEA4C8")]
		public static ulong ovr_User_StopRecordingAndLaunchReportFlow(ulong optionalUserID, string optionalRecordingUUID)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000FB7")]
		[Address(RVA = "0xCEA584", Offset = "0xCEA584", VA = "0xCEA584")]
		private static extern ulong ovr_User_StopRecordingAndLaunchReportFlow_Native(ulong optionalUserID, IntPtr optionalRecordingUUID);

		[Token(Token = "0x6000FB8")]
		[Address(RVA = "0xCEA634", Offset = "0xCEA634", VA = "0xCEA634")]
		public static ulong ovr_User_StopRecordingAndLaunchReportFlow2(ulong optionalUserID, string optionalRecordingUUID, IntPtr abuseReportOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000FB9")]
		[Address(RVA = "0xCEA6F8", Offset = "0xCEA6F8", VA = "0xCEA6F8")]
		private static extern ulong ovr_User_StopRecordingAndLaunchReportFlow2_Native(ulong optionalUserID, IntPtr optionalRecordingUUID, IntPtr abuseReportOptions);

		[Token(Token = "0x6000FBA")]
		[Address(RVA = "0xCEA7B0", Offset = "0xCEA7B0", VA = "0xCEA7B0")]
		public static ulong ovr_User_TestUserCreateDeviceManifest(string deviceID, ulong[] appIDs, int numAppIDs)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000FBB")]
		[Address(RVA = "0xCEA870", Offset = "0xCEA870", VA = "0xCEA870")]
		private static extern ulong ovr_User_TestUserCreateDeviceManifest_Native(IntPtr deviceID, ulong[] appIDs, int numAppIDs);

		[PreserveSig]
		[Token(Token = "0x6000FBC")]
		[Address(RVA = "0xCEA930", Offset = "0xCEA930", VA = "0xCEA930")]
		public static extern ulong ovr_Voip_SetSystemVoipSuppressed(bool suppressed);

		[Token(Token = "0x6000FBD")]
		[Address(RVA = "0xCEA9D0", Offset = "0xCEA9D0", VA = "0xCEA9D0")]
		public static string ovr_AbuseReportRecording_GetRecordingUuid(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000FBE")]
		[Address(RVA = "0xCEAA38", Offset = "0xCEAA38", VA = "0xCEAA38")]
		private static extern IntPtr ovr_AbuseReportRecording_GetRecordingUuid_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000FBF")]
		[Address(RVA = "0xCEAAD8", Offset = "0xCEAAD8", VA = "0xCEAAD8")]
		public static extern uint ovr_AchievementDefinition_GetBitfieldLength(IntPtr obj);

		[Token(Token = "0x6000FC0")]
		[Address(RVA = "0xCEAB78", Offset = "0xCEAB78", VA = "0xCEAB78")]
		public static string ovr_AchievementDefinition_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000FC1")]
		[Address(RVA = "0xCEABE0", Offset = "0xCEABE0", VA = "0xCEABE0")]
		private static extern IntPtr ovr_AchievementDefinition_GetName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000FC2")]
		[Address(RVA = "0xCEAC80", Offset = "0xCEAC80", VA = "0xCEAC80")]
		public static extern ulong ovr_AchievementDefinition_GetTarget(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000FC3")]
		[Address(RVA = "0xCEAD20", Offset = "0xCEAD20", VA = "0xCEAD20")]
		public static extern AchievementType ovr_AchievementDefinition_GetType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000FC4")]
		[Address(RVA = "0xCEADC0", Offset = "0xCEADC0", VA = "0xCEADC0")]
		public static extern IntPtr ovr_AchievementDefinitionArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6000FC5")]
		[Address(RVA = "0xCEAE70", Offset = "0xCEAE70", VA = "0xCEAE70")]
		public static string ovr_AchievementDefinitionArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000FC6")]
		[Address(RVA = "0xCEAED8", Offset = "0xCEAED8", VA = "0xCEAED8")]
		private static extern IntPtr ovr_AchievementDefinitionArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000FC7")]
		[Address(RVA = "0xCEAF78", Offset = "0xCEAF78", VA = "0xCEAF78")]
		public static extern UIntPtr ovr_AchievementDefinitionArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000FC8")]
		[Address(RVA = "0xCEB018", Offset = "0xCEB018", VA = "0xCEB018")]
		public static extern bool ovr_AchievementDefinitionArray_HasNextPage(IntPtr obj);

		[Token(Token = "0x6000FC9")]
		[Address(RVA = "0xCEB0C0", Offset = "0xCEB0C0", VA = "0xCEB0C0")]
		public static string ovr_AchievementProgress_GetBitfield(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000FCA")]
		[Address(RVA = "0xCEB128", Offset = "0xCEB128", VA = "0xCEB128")]
		private static extern IntPtr ovr_AchievementProgress_GetBitfield_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000FCB")]
		[Address(RVA = "0xCEB1C8", Offset = "0xCEB1C8", VA = "0xCEB1C8")]
		public static extern ulong ovr_AchievementProgress_GetCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000FCC")]
		[Address(RVA = "0xCEB268", Offset = "0xCEB268", VA = "0xCEB268")]
		public static extern bool ovr_AchievementProgress_GetIsUnlocked(IntPtr obj);

		[Token(Token = "0x6000FCD")]
		[Address(RVA = "0xCEB310", Offset = "0xCEB310", VA = "0xCEB310")]
		public static string ovr_AchievementProgress_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000FCE")]
		[Address(RVA = "0xCEB378", Offset = "0xCEB378", VA = "0xCEB378")]
		private static extern IntPtr ovr_AchievementProgress_GetName_Native(IntPtr obj);

		[Token(Token = "0x6000FCF")]
		[Address(RVA = "0xCEB418", Offset = "0xCEB418", VA = "0xCEB418")]
		public static DateTime ovr_AchievementProgress_GetUnlockTime(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x6000FD0")]
		[Address(RVA = "0xCEB480", Offset = "0xCEB480", VA = "0xCEB480")]
		private static extern ulong ovr_AchievementProgress_GetUnlockTime_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000FD1")]
		[Address(RVA = "0xCEB520", Offset = "0xCEB520", VA = "0xCEB520")]
		public static extern IntPtr ovr_AchievementProgressArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6000FD2")]
		[Address(RVA = "0xCEB5D0", Offset = "0xCEB5D0", VA = "0xCEB5D0")]
		public static string ovr_AchievementProgressArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000FD3")]
		[Address(RVA = "0xCEB638", Offset = "0xCEB638", VA = "0xCEB638")]
		private static extern IntPtr ovr_AchievementProgressArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000FD4")]
		[Address(RVA = "0xCEB6D8", Offset = "0xCEB6D8", VA = "0xCEB6D8")]
		public static extern UIntPtr ovr_AchievementProgressArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000FD5")]
		[Address(RVA = "0xCEB778", Offset = "0xCEB778", VA = "0xCEB778")]
		public static extern bool ovr_AchievementProgressArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000FD6")]
		[Address(RVA = "0xCEB820", Offset = "0xCEB820", VA = "0xCEB820")]
		public static extern bool ovr_AchievementUpdate_GetJustUnlocked(IntPtr obj);

		[Token(Token = "0x6000FD7")]
		[Address(RVA = "0xCEB8C8", Offset = "0xCEB8C8", VA = "0xCEB8C8")]
		public static string ovr_AchievementUpdate_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000FD8")]
		[Address(RVA = "0xCEB930", Offset = "0xCEB930", VA = "0xCEB930")]
		private static extern IntPtr ovr_AchievementUpdate_GetName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000FD9")]
		[Address(RVA = "0xCEB9D0", Offset = "0xCEB9D0", VA = "0xCEB9D0")]
		public static extern ulong ovr_Application_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000FDA")]
		[Address(RVA = "0xCEBA70", Offset = "0xCEBA70", VA = "0xCEBA70")]
		public static extern int ovr_ApplicationVersion_GetCurrentCode(IntPtr obj);

		[Token(Token = "0x6000FDB")]
		[Address(RVA = "0xCEBB10", Offset = "0xCEBB10", VA = "0xCEBB10")]
		public static string ovr_ApplicationVersion_GetCurrentName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000FDC")]
		[Address(RVA = "0xCEBB78", Offset = "0xCEBB78", VA = "0xCEBB78")]
		private static extern IntPtr ovr_ApplicationVersion_GetCurrentName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000FDD")]
		[Address(RVA = "0xCEBC18", Offset = "0xCEBC18", VA = "0xCEBC18")]
		public static extern int ovr_ApplicationVersion_GetLatestCode(IntPtr obj);

		[Token(Token = "0x6000FDE")]
		[Address(RVA = "0xCEBCB8", Offset = "0xCEBCB8", VA = "0xCEBCB8")]
		public static string ovr_ApplicationVersion_GetLatestName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000FDF")]
		[Address(RVA = "0xCEBD20", Offset = "0xCEBD20", VA = "0xCEBD20")]
		private static extern IntPtr ovr_ApplicationVersion_GetLatestName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000FE0")]
		[Address(RVA = "0xCEBDC0", Offset = "0xCEBDC0", VA = "0xCEBDC0")]
		public static extern ulong ovr_AssetDetails_GetAssetId(IntPtr obj);

		[Token(Token = "0x6000FE1")]
		[Address(RVA = "0xCEBE60", Offset = "0xCEBE60", VA = "0xCEBE60")]
		public static string ovr_AssetDetails_GetAssetType(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000FE2")]
		[Address(RVA = "0xCEBEC8", Offset = "0xCEBEC8", VA = "0xCEBEC8")]
		private static extern IntPtr ovr_AssetDetails_GetAssetType_Native(IntPtr obj);

		[Token(Token = "0x6000FE3")]
		[Address(RVA = "0xCEBF68", Offset = "0xCEBF68", VA = "0xCEBF68")]
		public static string ovr_AssetDetails_GetDownloadStatus(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000FE4")]
		[Address(RVA = "0xCEBFD0", Offset = "0xCEBFD0", VA = "0xCEBFD0")]
		private static extern IntPtr ovr_AssetDetails_GetDownloadStatus_Native(IntPtr obj);

		[Token(Token = "0x6000FE5")]
		[Address(RVA = "0xCEC070", Offset = "0xCEC070", VA = "0xCEC070")]
		public static string ovr_AssetDetails_GetFilepath(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000FE6")]
		[Address(RVA = "0xCEC0D8", Offset = "0xCEC0D8", VA = "0xCEC0D8")]
		private static extern IntPtr ovr_AssetDetails_GetFilepath_Native(IntPtr obj);

		[Token(Token = "0x6000FE7")]
		[Address(RVA = "0xCEC178", Offset = "0xCEC178", VA = "0xCEC178")]
		public static string ovr_AssetDetails_GetIapStatus(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000FE8")]
		[Address(RVA = "0xCEC1E0", Offset = "0xCEC1E0", VA = "0xCEC1E0")]
		private static extern IntPtr ovr_AssetDetails_GetIapStatus_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000FE9")]
		[Address(RVA = "0xCEC280", Offset = "0xCEC280", VA = "0xCEC280")]
		public static extern IntPtr ovr_AssetDetails_GetLanguage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000FEA")]
		[Address(RVA = "0xCEC320", Offset = "0xCEC320", VA = "0xCEC320")]
		public static extern IntPtr ovr_AssetDetailsArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6000FEB")]
		[Address(RVA = "0xCEC3D0", Offset = "0xCEC3D0", VA = "0xCEC3D0")]
		public static extern UIntPtr ovr_AssetDetailsArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000FEC")]
		[Address(RVA = "0xCEC470", Offset = "0xCEC470", VA = "0xCEC470")]
		public static extern ulong ovr_AssetFileDeleteResult_GetAssetFileId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000FED")]
		[Address(RVA = "0xCEC510", Offset = "0xCEC510", VA = "0xCEC510")]
		public static extern ulong ovr_AssetFileDeleteResult_GetAssetId(IntPtr obj);

		[Token(Token = "0x6000FEE")]
		[Address(RVA = "0xCEC5B0", Offset = "0xCEC5B0", VA = "0xCEC5B0")]
		public static string ovr_AssetFileDeleteResult_GetFilepath(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000FEF")]
		[Address(RVA = "0xCEC618", Offset = "0xCEC618", VA = "0xCEC618")]
		private static extern IntPtr ovr_AssetFileDeleteResult_GetFilepath_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000FF0")]
		[Address(RVA = "0xCEC6B8", Offset = "0xCEC6B8", VA = "0xCEC6B8")]
		public static extern bool ovr_AssetFileDeleteResult_GetSuccess(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000FF1")]
		[Address(RVA = "0xCEC760", Offset = "0xCEC760", VA = "0xCEC760")]
		public static extern ulong ovr_AssetFileDownloadCancelResult_GetAssetFileId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000FF2")]
		[Address(RVA = "0xCEC800", Offset = "0xCEC800", VA = "0xCEC800")]
		public static extern ulong ovr_AssetFileDownloadCancelResult_GetAssetId(IntPtr obj);

		[Token(Token = "0x6000FF3")]
		[Address(RVA = "0xCEC8A0", Offset = "0xCEC8A0", VA = "0xCEC8A0")]
		public static string ovr_AssetFileDownloadCancelResult_GetFilepath(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000FF4")]
		[Address(RVA = "0xCEC908", Offset = "0xCEC908", VA = "0xCEC908")]
		private static extern IntPtr ovr_AssetFileDownloadCancelResult_GetFilepath_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000FF5")]
		[Address(RVA = "0xCEC9A8", Offset = "0xCEC9A8", VA = "0xCEC9A8")]
		public static extern bool ovr_AssetFileDownloadCancelResult_GetSuccess(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000FF6")]
		[Address(RVA = "0xCECA50", Offset = "0xCECA50", VA = "0xCECA50")]
		public static extern ulong ovr_AssetFileDownloadResult_GetAssetId(IntPtr obj);

		[Token(Token = "0x6000FF7")]
		[Address(RVA = "0xCECAF0", Offset = "0xCECAF0", VA = "0xCECAF0")]
		public static string ovr_AssetFileDownloadResult_GetFilepath(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000FF8")]
		[Address(RVA = "0xCECB58", Offset = "0xCECB58", VA = "0xCECB58")]
		private static extern IntPtr ovr_AssetFileDownloadResult_GetFilepath_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000FF9")]
		[Address(RVA = "0xCECBF8", Offset = "0xCECBF8", VA = "0xCECBF8")]
		public static extern ulong ovr_AssetFileDownloadUpdate_GetAssetFileId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000FFA")]
		[Address(RVA = "0xCECC98", Offset = "0xCECC98", VA = "0xCECC98")]
		public static extern ulong ovr_AssetFileDownloadUpdate_GetAssetId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000FFB")]
		[Address(RVA = "0xCECD38", Offset = "0xCECD38", VA = "0xCECD38")]
		public static extern uint ovr_AssetFileDownloadUpdate_GetBytesTotal(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000FFC")]
		[Address(RVA = "0xCECDD8", Offset = "0xCECDD8", VA = "0xCECDD8")]
		public static extern int ovr_AssetFileDownloadUpdate_GetBytesTransferred(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000FFD")]
		[Address(RVA = "0xCECE78", Offset = "0xCECE78", VA = "0xCECE78")]
		public static extern bool ovr_AssetFileDownloadUpdate_GetCompleted(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000FFE")]
		[Address(RVA = "0xCECF20", Offset = "0xCECF20", VA = "0xCECF20")]
		public static extern int ovr_CalApplicationFinalized_GetCountdownMS(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000FFF")]
		[Address(RVA = "0xCECFC0", Offset = "0xCECFC0", VA = "0xCECFC0")]
		public static extern ulong ovr_CalApplicationFinalized_GetID(IntPtr obj);

		[Token(Token = "0x6001000")]
		[Address(RVA = "0xCED060", Offset = "0xCED060", VA = "0xCED060")]
		public static string ovr_CalApplicationFinalized_GetLaunchDetails(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001001")]
		[Address(RVA = "0xCED0C8", Offset = "0xCED0C8", VA = "0xCED0C8")]
		private static extern IntPtr ovr_CalApplicationFinalized_GetLaunchDetails_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001002")]
		[Address(RVA = "0xCED168", Offset = "0xCED168", VA = "0xCED168")]
		public static extern ulong ovr_CalApplicationProposed_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001003")]
		[Address(RVA = "0xCED208", Offset = "0xCED208", VA = "0xCED208")]
		public static extern ulong ovr_CalApplicationSuggestion_GetID(IntPtr obj);

		[Token(Token = "0x6001004")]
		[Address(RVA = "0xCED2A8", Offset = "0xCED2A8", VA = "0xCED2A8")]
		public static string ovr_CalApplicationSuggestion_GetSocialContext(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001005")]
		[Address(RVA = "0xCED310", Offset = "0xCED310", VA = "0xCED310")]
		private static extern IntPtr ovr_CalApplicationSuggestion_GetSocialContext_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001006")]
		[Address(RVA = "0xCED3B0", Offset = "0xCED3B0", VA = "0xCED3B0")]
		public static extern IntPtr ovr_CalApplicationSuggestionArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6001007")]
		[Address(RVA = "0xCED460", Offset = "0xCED460", VA = "0xCED460")]
		public static extern UIntPtr ovr_CalApplicationSuggestionArray_GetSize(IntPtr obj);

		[Token(Token = "0x6001008")]
		[Address(RVA = "0xCED500", Offset = "0xCED500", VA = "0xCED500")]
		public static string ovr_CloudStorage2UserDirectoryPathResponse_GetPath(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001009")]
		[Address(RVA = "0xCED568", Offset = "0xCED568", VA = "0xCED568")]
		private static extern IntPtr ovr_CloudStorage2UserDirectoryPathResponse_GetPath_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600100A")]
		[Address(RVA = "0xCED608", Offset = "0xCED608", VA = "0xCED608")]
		public static extern IntPtr ovr_CloudStorageConflictMetadata_GetLocal(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600100B")]
		[Address(RVA = "0xCED6A8", Offset = "0xCED6A8", VA = "0xCED6A8")]
		public static extern IntPtr ovr_CloudStorageConflictMetadata_GetRemote(IntPtr obj);

		[Token(Token = "0x600100C")]
		[Address(RVA = "0xCED748", Offset = "0xCED748", VA = "0xCED748")]
		public static string ovr_CloudStorageData_GetBucket(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600100D")]
		[Address(RVA = "0xCED7B0", Offset = "0xCED7B0", VA = "0xCED7B0")]
		private static extern IntPtr ovr_CloudStorageData_GetBucket_Native(IntPtr obj);

		[Token(Token = "0x600100E")]
		[Address(RVA = "0xCED850", Offset = "0xCED850", VA = "0xCED850")]
		public static byte[] ovr_CloudStorageData_GetData(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600100F")]
		[Address(RVA = "0xCED96C", Offset = "0xCED96C", VA = "0xCED96C")]
		private static extern IntPtr ovr_CloudStorageData_GetData_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001010")]
		[Address(RVA = "0xCED8CC", Offset = "0xCED8CC", VA = "0xCED8CC")]
		public static extern uint ovr_CloudStorageData_GetDataSize(IntPtr obj);

		[Token(Token = "0x6001011")]
		[Address(RVA = "0xCEDA0C", Offset = "0xCEDA0C", VA = "0xCEDA0C")]
		public static string ovr_CloudStorageData_GetKey(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001012")]
		[Address(RVA = "0xCEDA74", Offset = "0xCEDA74", VA = "0xCEDA74")]
		private static extern IntPtr ovr_CloudStorageData_GetKey_Native(IntPtr obj);

		[Token(Token = "0x6001013")]
		[Address(RVA = "0xCEDB14", Offset = "0xCEDB14", VA = "0xCEDB14")]
		public static string ovr_CloudStorageMetadata_GetBucket(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001014")]
		[Address(RVA = "0xCEDB7C", Offset = "0xCEDB7C", VA = "0xCEDB7C")]
		private static extern IntPtr ovr_CloudStorageMetadata_GetBucket_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001015")]
		[Address(RVA = "0xCEDC1C", Offset = "0xCEDC1C", VA = "0xCEDC1C")]
		public static extern long ovr_CloudStorageMetadata_GetCounter(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001016")]
		[Address(RVA = "0xCEDCBC", Offset = "0xCEDCBC", VA = "0xCEDCBC")]
		public static extern uint ovr_CloudStorageMetadata_GetDataSize(IntPtr obj);

		[Token(Token = "0x6001017")]
		[Address(RVA = "0xCEDD5C", Offset = "0xCEDD5C", VA = "0xCEDD5C")]
		public static string ovr_CloudStorageMetadata_GetExtraData(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001018")]
		[Address(RVA = "0xCEDDC4", Offset = "0xCEDDC4", VA = "0xCEDDC4")]
		private static extern IntPtr ovr_CloudStorageMetadata_GetExtraData_Native(IntPtr obj);

		[Token(Token = "0x6001019")]
		[Address(RVA = "0xCEDE64", Offset = "0xCEDE64", VA = "0xCEDE64")]
		public static string ovr_CloudStorageMetadata_GetKey(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600101A")]
		[Address(RVA = "0xCEDECC", Offset = "0xCEDECC", VA = "0xCEDECC")]
		private static extern IntPtr ovr_CloudStorageMetadata_GetKey_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600101B")]
		[Address(RVA = "0xCEDF6C", Offset = "0xCEDF6C", VA = "0xCEDF6C")]
		public static extern ulong ovr_CloudStorageMetadata_GetSaveTime(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600101C")]
		[Address(RVA = "0xCEE00C", Offset = "0xCEE00C", VA = "0xCEE00C")]
		public static extern CloudStorageDataStatus ovr_CloudStorageMetadata_GetStatus(IntPtr obj);

		[Token(Token = "0x600101D")]
		[Address(RVA = "0xCEE0AC", Offset = "0xCEE0AC", VA = "0xCEE0AC")]
		public static string ovr_CloudStorageMetadata_GetVersionHandle(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600101E")]
		[Address(RVA = "0xCEE114", Offset = "0xCEE114", VA = "0xCEE114")]
		private static extern IntPtr ovr_CloudStorageMetadata_GetVersionHandle_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600101F")]
		[Address(RVA = "0xCEE1B4", Offset = "0xCEE1B4", VA = "0xCEE1B4")]
		public static extern IntPtr ovr_CloudStorageMetadataArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6001020")]
		[Address(RVA = "0xCEE264", Offset = "0xCEE264", VA = "0xCEE264")]
		public static string ovr_CloudStorageMetadataArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001021")]
		[Address(RVA = "0xCEE2CC", Offset = "0xCEE2CC", VA = "0xCEE2CC")]
		private static extern IntPtr ovr_CloudStorageMetadataArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001022")]
		[Address(RVA = "0xCEE36C", Offset = "0xCEE36C", VA = "0xCEE36C")]
		public static extern UIntPtr ovr_CloudStorageMetadataArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001023")]
		[Address(RVA = "0xCEE40C", Offset = "0xCEE40C", VA = "0xCEE40C")]
		public static extern bool ovr_CloudStorageMetadataArray_HasNextPage(IntPtr obj);

		[Token(Token = "0x6001024")]
		[Address(RVA = "0xCEE4B4", Offset = "0xCEE4B4", VA = "0xCEE4B4")]
		public static string ovr_CloudStorageUpdateResponse_GetBucket(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001025")]
		[Address(RVA = "0xCEE51C", Offset = "0xCEE51C", VA = "0xCEE51C")]
		private static extern IntPtr ovr_CloudStorageUpdateResponse_GetBucket_Native(IntPtr obj);

		[Token(Token = "0x6001026")]
		[Address(RVA = "0xCEE5BC", Offset = "0xCEE5BC", VA = "0xCEE5BC")]
		public static string ovr_CloudStorageUpdateResponse_GetKey(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001027")]
		[Address(RVA = "0xCEE624", Offset = "0xCEE624", VA = "0xCEE624")]
		private static extern IntPtr ovr_CloudStorageUpdateResponse_GetKey_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001028")]
		[Address(RVA = "0xCEE6C4", Offset = "0xCEE6C4", VA = "0xCEE6C4")]
		public static extern CloudStorageUpdateStatus ovr_CloudStorageUpdateResponse_GetStatus(IntPtr obj);

		[Token(Token = "0x6001029")]
		[Address(RVA = "0xCEE764", Offset = "0xCEE764", VA = "0xCEE764")]
		public static string ovr_CloudStorageUpdateResponse_GetVersionHandle(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600102A")]
		[Address(RVA = "0xCEE7CC", Offset = "0xCEE7CC", VA = "0xCEE7CC")]
		private static extern IntPtr ovr_CloudStorageUpdateResponse_GetVersionHandle_Native(IntPtr obj);

		[Token(Token = "0x600102B")]
		[Address(RVA = "0xCEE86C", Offset = "0xCEE86C", VA = "0xCEE86C")]
		public static uint ovr_DataStore_Contains(IntPtr obj, string key)
		{
			return default(uint);
		}

		[PreserveSig]
		[Token(Token = "0x600102C")]
		[Address(RVA = "0xCEE928", Offset = "0xCEE928", VA = "0xCEE928")]
		private static extern uint ovr_DataStore_Contains_Native(IntPtr obj, IntPtr key);

		[Token(Token = "0x600102D")]
		[Address(RVA = "0xCDFCFC", Offset = "0xCDFCFC", VA = "0xCDFCFC")]
		public static string ovr_DataStore_GetKey(IntPtr obj, int index)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600102E")]
		[Address(RVA = "0xCEE9D8", Offset = "0xCEE9D8", VA = "0xCEE9D8")]
		private static extern IntPtr ovr_DataStore_GetKey_Native(IntPtr obj, int index);

		[PreserveSig]
		[Token(Token = "0x600102F")]
		[Address(RVA = "0xCDFC5C", Offset = "0xCDFC5C", VA = "0xCDFC5C")]
		public static extern UIntPtr ovr_DataStore_GetNumKeys(IntPtr obj);

		[Token(Token = "0x6001030")]
		[Address(RVA = "0xCDFD74", Offset = "0xCDFD74", VA = "0xCDFD74")]
		public static string ovr_DataStore_GetValue(IntPtr obj, string key)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001031")]
		[Address(RVA = "0xCEEA88", Offset = "0xCEEA88", VA = "0xCEEA88")]
		private static extern IntPtr ovr_DataStore_GetValue_Native(IntPtr obj, IntPtr key);

		[PreserveSig]
		[Token(Token = "0x6001032")]
		[Address(RVA = "0xCEEB38", Offset = "0xCEEB38", VA = "0xCEEB38")]
		public static extern int ovr_Error_GetCode(IntPtr obj);

		[Token(Token = "0x6001033")]
		[Address(RVA = "0xCEEBD4", Offset = "0xCEEBD4", VA = "0xCEEBD4")]
		public static string ovr_Error_GetDisplayableMessage(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001034")]
		[Address(RVA = "0xCEEC3C", Offset = "0xCEEC3C", VA = "0xCEEC3C")]
		private static extern IntPtr ovr_Error_GetDisplayableMessage_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001035")]
		[Address(RVA = "0xCEECDC", Offset = "0xCEECDC", VA = "0xCEECDC")]
		public static extern int ovr_Error_GetHttpCode(IntPtr obj);

		[Token(Token = "0x6001036")]
		[Address(RVA = "0xCEED7C", Offset = "0xCEED7C", VA = "0xCEED7C")]
		public static string ovr_Error_GetMessage(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001037")]
		[Address(RVA = "0xCEEDE4", Offset = "0xCEEDE4", VA = "0xCEEDE4")]
		private static extern IntPtr ovr_Error_GetMessage_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001038")]
		[Address(RVA = "0xCEEE84", Offset = "0xCEEE84", VA = "0xCEEE84")]
		public static extern IntPtr ovr_HttpTransferUpdate_GetBytes(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001039")]
		[Address(RVA = "0xCEEF24", Offset = "0xCEEF24", VA = "0xCEEF24")]
		public static extern ulong ovr_HttpTransferUpdate_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600103A")]
		[Address(RVA = "0xCEEFC4", Offset = "0xCEEFC4", VA = "0xCEEFC4")]
		public static extern UIntPtr ovr_HttpTransferUpdate_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600103B")]
		[Address(RVA = "0xCEF064", Offset = "0xCEF064", VA = "0xCEF064")]
		public static extern bool ovr_HttpTransferUpdate_IsCompleted(IntPtr obj);

		[Token(Token = "0x600103C")]
		[Address(RVA = "0xCEF10C", Offset = "0xCEF10C", VA = "0xCEF10C")]
		public static string ovr_InstalledApplication_GetApplicationId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600103D")]
		[Address(RVA = "0xCEF174", Offset = "0xCEF174", VA = "0xCEF174")]
		private static extern IntPtr ovr_InstalledApplication_GetApplicationId_Native(IntPtr obj);

		[Token(Token = "0x600103E")]
		[Address(RVA = "0xCEF214", Offset = "0xCEF214", VA = "0xCEF214")]
		public static string ovr_InstalledApplication_GetPackageName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600103F")]
		[Address(RVA = "0xCEF27C", Offset = "0xCEF27C", VA = "0xCEF27C")]
		private static extern IntPtr ovr_InstalledApplication_GetPackageName_Native(IntPtr obj);

		[Token(Token = "0x6001040")]
		[Address(RVA = "0xCEF31C", Offset = "0xCEF31C", VA = "0xCEF31C")]
		public static string ovr_InstalledApplication_GetStatus(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001041")]
		[Address(RVA = "0xCEF384", Offset = "0xCEF384", VA = "0xCEF384")]
		private static extern IntPtr ovr_InstalledApplication_GetStatus_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001042")]
		[Address(RVA = "0xCEF424", Offset = "0xCEF424", VA = "0xCEF424")]
		public static extern int ovr_InstalledApplication_GetVersionCode(IntPtr obj);

		[Token(Token = "0x6001043")]
		[Address(RVA = "0xCEF4C4", Offset = "0xCEF4C4", VA = "0xCEF4C4")]
		public static string ovr_InstalledApplication_GetVersionName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001044")]
		[Address(RVA = "0xCEF52C", Offset = "0xCEF52C", VA = "0xCEF52C")]
		private static extern IntPtr ovr_InstalledApplication_GetVersionName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001045")]
		[Address(RVA = "0xCEF5CC", Offset = "0xCEF5CC", VA = "0xCEF5CC")]
		public static extern IntPtr ovr_InstalledApplicationArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6001046")]
		[Address(RVA = "0xCEF67C", Offset = "0xCEF67C", VA = "0xCEF67C")]
		public static extern UIntPtr ovr_InstalledApplicationArray_GetSize(IntPtr obj);

		[Token(Token = "0x6001047")]
		[Address(RVA = "0xCEF71C", Offset = "0xCEF71C", VA = "0xCEF71C")]
		public static string ovr_LanguagePackInfo_GetEnglishName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001048")]
		[Address(RVA = "0xCEF784", Offset = "0xCEF784", VA = "0xCEF784")]
		private static extern IntPtr ovr_LanguagePackInfo_GetEnglishName_Native(IntPtr obj);

		[Token(Token = "0x6001049")]
		[Address(RVA = "0xCEF824", Offset = "0xCEF824", VA = "0xCEF824")]
		public static string ovr_LanguagePackInfo_GetNativeName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600104A")]
		[Address(RVA = "0xCEF88C", Offset = "0xCEF88C", VA = "0xCEF88C")]
		private static extern IntPtr ovr_LanguagePackInfo_GetNativeName_Native(IntPtr obj);

		[Token(Token = "0x600104B")]
		[Address(RVA = "0xCEF92C", Offset = "0xCEF92C", VA = "0xCEF92C")]
		public static string ovr_LanguagePackInfo_GetTag(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600104C")]
		[Address(RVA = "0xCEF994", Offset = "0xCEF994", VA = "0xCEF994")]
		private static extern IntPtr ovr_LanguagePackInfo_GetTag_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600104D")]
		[Address(RVA = "0xCEFA34", Offset = "0xCEFA34", VA = "0xCEFA34")]
		public static extern bool ovr_LaunchBlockFlowResult_GetDidBlock(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600104E")]
		[Address(RVA = "0xCEFADC", Offset = "0xCEFADC", VA = "0xCEFADC")]
		public static extern bool ovr_LaunchBlockFlowResult_GetDidCancel(IntPtr obj);

		[Token(Token = "0x600104F")]
		[Address(RVA = "0xCEFB84", Offset = "0xCEFB84", VA = "0xCEFB84")]
		public static string ovr_LaunchDetails_GetDeeplinkMessage(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001050")]
		[Address(RVA = "0xCEFBEC", Offset = "0xCEFBEC", VA = "0xCEFBEC")]
		private static extern IntPtr ovr_LaunchDetails_GetDeeplinkMessage_Native(IntPtr obj);

		[Token(Token = "0x6001051")]
		[Address(RVA = "0xCEFC8C", Offset = "0xCEFC8C", VA = "0xCEFC8C")]
		public static string ovr_LaunchDetails_GetLaunchSource(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001052")]
		[Address(RVA = "0xCEFCF4", Offset = "0xCEFCF4", VA = "0xCEFCF4")]
		private static extern IntPtr ovr_LaunchDetails_GetLaunchSource_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001053")]
		[Address(RVA = "0xCEFD94", Offset = "0xCEFD94", VA = "0xCEFD94")]
		public static extern LaunchType ovr_LaunchDetails_GetLaunchType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001054")]
		[Address(RVA = "0xCEFE34", Offset = "0xCEFE34", VA = "0xCEFE34")]
		public static extern ulong ovr_LaunchDetails_GetRoomID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001055")]
		[Address(RVA = "0xCEFED4", Offset = "0xCEFED4", VA = "0xCEFED4")]
		public static extern IntPtr ovr_LaunchDetails_GetUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001056")]
		[Address(RVA = "0xCEFF74", Offset = "0xCEFF74", VA = "0xCEFF74")]
		public static extern bool ovr_LaunchFriendRequestFlowResult_GetDidCancel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001057")]
		[Address(RVA = "0xCF001C", Offset = "0xCF001C", VA = "0xCF001C")]
		public static extern bool ovr_LaunchFriendRequestFlowResult_GetDidSendRequest(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001058")]
		[Address(RVA = "0xCF00C4", Offset = "0xCF00C4", VA = "0xCF00C4")]
		public static extern bool ovr_LaunchReportFlowResult_GetDidCancel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001059")]
		[Address(RVA = "0xCF016C", Offset = "0xCF016C", VA = "0xCF016C")]
		public static extern ulong ovr_LaunchReportFlowResult_GetUserReportId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600105A")]
		[Address(RVA = "0xCF020C", Offset = "0xCF020C", VA = "0xCF020C")]
		public static extern bool ovr_LaunchUnblockFlowResult_GetDidCancel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600105B")]
		[Address(RVA = "0xCF02B4", Offset = "0xCF02B4", VA = "0xCF02B4")]
		public static extern bool ovr_LaunchUnblockFlowResult_GetDidUnblock(IntPtr obj);

		[Token(Token = "0x600105C")]
		[Address(RVA = "0xCF035C", Offset = "0xCF035C", VA = "0xCF035C")]
		public static byte[] ovr_LeaderboardEntry_GetExtraData(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600105D")]
		[Address(RVA = "0xCF0478", Offset = "0xCF0478", VA = "0xCF0478")]
		private static extern IntPtr ovr_LeaderboardEntry_GetExtraData_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600105E")]
		[Address(RVA = "0xCF03D8", Offset = "0xCF03D8", VA = "0xCF03D8")]
		public static extern uint ovr_LeaderboardEntry_GetExtraDataLength(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600105F")]
		[Address(RVA = "0xCF0518", Offset = "0xCF0518", VA = "0xCF0518")]
		public static extern int ovr_LeaderboardEntry_GetRank(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001060")]
		[Address(RVA = "0xCF05B8", Offset = "0xCF05B8", VA = "0xCF05B8")]
		public static extern long ovr_LeaderboardEntry_GetScore(IntPtr obj);

		[Token(Token = "0x6001061")]
		[Address(RVA = "0xCF0658", Offset = "0xCF0658", VA = "0xCF0658")]
		public static DateTime ovr_LeaderboardEntry_GetTimestamp(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x6001062")]
		[Address(RVA = "0xCF06C0", Offset = "0xCF06C0", VA = "0xCF06C0")]
		private static extern ulong ovr_LeaderboardEntry_GetTimestamp_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001063")]
		[Address(RVA = "0xCF0760", Offset = "0xCF0760", VA = "0xCF0760")]
		public static extern IntPtr ovr_LeaderboardEntry_GetUser(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001064")]
		[Address(RVA = "0xCF0800", Offset = "0xCF0800", VA = "0xCF0800")]
		public static extern IntPtr ovr_LeaderboardEntryArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6001065")]
		[Address(RVA = "0xCF08B0", Offset = "0xCF08B0", VA = "0xCF08B0")]
		public static string ovr_LeaderboardEntryArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001066")]
		[Address(RVA = "0xCF0918", Offset = "0xCF0918", VA = "0xCF0918")]
		private static extern IntPtr ovr_LeaderboardEntryArray_GetNextUrl_Native(IntPtr obj);

		[Token(Token = "0x6001067")]
		[Address(RVA = "0xCF09B8", Offset = "0xCF09B8", VA = "0xCF09B8")]
		public static string ovr_LeaderboardEntryArray_GetPreviousUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001068")]
		[Address(RVA = "0xCF0A20", Offset = "0xCF0A20", VA = "0xCF0A20")]
		private static extern IntPtr ovr_LeaderboardEntryArray_GetPreviousUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001069")]
		[Address(RVA = "0xCF0AC0", Offset = "0xCF0AC0", VA = "0xCF0AC0")]
		public static extern UIntPtr ovr_LeaderboardEntryArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600106A")]
		[Address(RVA = "0xCF0B60", Offset = "0xCF0B60", VA = "0xCF0B60")]
		public static extern ulong ovr_LeaderboardEntryArray_GetTotalCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600106B")]
		[Address(RVA = "0xCF0C00", Offset = "0xCF0C00", VA = "0xCF0C00")]
		public static extern bool ovr_LeaderboardEntryArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600106C")]
		[Address(RVA = "0xCF0CA8", Offset = "0xCF0CA8", VA = "0xCF0CA8")]
		public static extern bool ovr_LeaderboardEntryArray_HasPreviousPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600106D")]
		[Address(RVA = "0xCF0D50", Offset = "0xCF0D50", VA = "0xCF0D50")]
		public static extern bool ovr_LeaderboardUpdateStatus_GetDidUpdate(IntPtr obj);

		[Token(Token = "0x600106E")]
		[Address(RVA = "0xCF0DF8", Offset = "0xCF0DF8", VA = "0xCF0DF8")]
		public static string ovr_LinkedAccount_GetAccessToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600106F")]
		[Address(RVA = "0xCF0E60", Offset = "0xCF0E60", VA = "0xCF0E60")]
		private static extern IntPtr ovr_LinkedAccount_GetAccessToken_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001070")]
		[Address(RVA = "0xCF0F00", Offset = "0xCF0F00", VA = "0xCF0F00")]
		public static extern ServiceProvider ovr_LinkedAccount_GetServiceProvider(IntPtr obj);

		[Token(Token = "0x6001071")]
		[Address(RVA = "0xCF0FA0", Offset = "0xCF0FA0", VA = "0xCF0FA0")]
		public static string ovr_LinkedAccount_GetUserId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001072")]
		[Address(RVA = "0xCF1008", Offset = "0xCF1008", VA = "0xCF1008")]
		private static extern IntPtr ovr_LinkedAccount_GetUserId_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001073")]
		[Address(RVA = "0xCF10A8", Offset = "0xCF10A8", VA = "0xCF10A8")]
		public static extern IntPtr ovr_LinkedAccountArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6001074")]
		[Address(RVA = "0xCF1158", Offset = "0xCF1158", VA = "0xCF1158")]
		public static extern UIntPtr ovr_LinkedAccountArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001075")]
		[Address(RVA = "0xCF11F8", Offset = "0xCF11F8", VA = "0xCF11F8")]
		public static extern bool ovr_LivestreamingApplicationStatus_GetStreamingEnabled(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001076")]
		[Address(RVA = "0xCF12A0", Offset = "0xCF12A0", VA = "0xCF12A0")]
		public static extern LivestreamingStartStatus ovr_LivestreamingStartResult_GetStreamingResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001077")]
		[Address(RVA = "0xCF1340", Offset = "0xCF1340", VA = "0xCF1340")]
		public static extern bool ovr_LivestreamingStatus_GetCommentsVisible(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001078")]
		[Address(RVA = "0xCF13E8", Offset = "0xCF13E8", VA = "0xCF13E8")]
		public static extern bool ovr_LivestreamingStatus_GetIsPaused(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001079")]
		[Address(RVA = "0xCF1490", Offset = "0xCF1490", VA = "0xCF1490")]
		public static extern bool ovr_LivestreamingStatus_GetLivestreamingEnabled(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600107A")]
		[Address(RVA = "0xCF1538", Offset = "0xCF1538", VA = "0xCF1538")]
		public static extern int ovr_LivestreamingStatus_GetLivestreamingType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600107B")]
		[Address(RVA = "0xCF15D8", Offset = "0xCF15D8", VA = "0xCF15D8")]
		public static extern bool ovr_LivestreamingStatus_GetMicEnabled(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600107C")]
		[Address(RVA = "0xCF1680", Offset = "0xCF1680", VA = "0xCF1680")]
		public static extern int ovr_LivestreamingVideoStats_GetCommentCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600107D")]
		[Address(RVA = "0xCF1720", Offset = "0xCF1720", VA = "0xCF1720")]
		public static extern int ovr_LivestreamingVideoStats_GetReactionCount(IntPtr obj);

		[Token(Token = "0x600107E")]
		[Address(RVA = "0xCF17C0", Offset = "0xCF17C0", VA = "0xCF17C0")]
		public static string ovr_LivestreamingVideoStats_GetTotalViews(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600107F")]
		[Address(RVA = "0xCF1828", Offset = "0xCF1828", VA = "0xCF1828")]
		private static extern IntPtr ovr_LivestreamingVideoStats_GetTotalViews_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001080")]
		[Address(RVA = "0xCF18C8", Offset = "0xCF18C8", VA = "0xCF18C8")]
		public static extern IntPtr ovr_MatchmakingAdminSnapshot_GetCandidates(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001081")]
		[Address(RVA = "0xCF1968", Offset = "0xCF1968", VA = "0xCF1968")]
		public static extern double ovr_MatchmakingAdminSnapshot_GetMyCurrentThreshold(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001082")]
		[Address(RVA = "0xCF1A08", Offset = "0xCF1A08", VA = "0xCF1A08")]
		public static extern bool ovr_MatchmakingAdminSnapshotCandidate_GetCanMatch(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001083")]
		[Address(RVA = "0xCF1AB0", Offset = "0xCF1AB0", VA = "0xCF1AB0")]
		public static extern double ovr_MatchmakingAdminSnapshotCandidate_GetMyTotalScore(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001084")]
		[Address(RVA = "0xCF1B50", Offset = "0xCF1B50", VA = "0xCF1B50")]
		public static extern double ovr_MatchmakingAdminSnapshotCandidate_GetTheirCurrentThreshold(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001085")]
		[Address(RVA = "0xCF1BF0", Offset = "0xCF1BF0", VA = "0xCF1BF0")]
		public static extern double ovr_MatchmakingAdminSnapshotCandidate_GetTheirTotalScore(IntPtr obj);

		[Token(Token = "0x6001086")]
		[Address(RVA = "0xCF1C90", Offset = "0xCF1C90", VA = "0xCF1C90")]
		public static string ovr_MatchmakingAdminSnapshotCandidate_GetTraceId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001087")]
		[Address(RVA = "0xCF1CF8", Offset = "0xCF1CF8", VA = "0xCF1CF8")]
		private static extern IntPtr ovr_MatchmakingAdminSnapshotCandidate_GetTraceId_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001088")]
		[Address(RVA = "0xCF1D98", Offset = "0xCF1D98", VA = "0xCF1D98")]
		public static extern IntPtr ovr_MatchmakingAdminSnapshotCandidateArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6001089")]
		[Address(RVA = "0xCF1E48", Offset = "0xCF1E48", VA = "0xCF1E48")]
		public static extern UIntPtr ovr_MatchmakingAdminSnapshotCandidateArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600108A")]
		[Address(RVA = "0xCF1EE8", Offset = "0xCF1EE8", VA = "0xCF1EE8")]
		public static extern IntPtr ovr_MatchmakingBrowseResult_GetEnqueueResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600108B")]
		[Address(RVA = "0xCF1F88", Offset = "0xCF1F88", VA = "0xCF1F88")]
		public static extern IntPtr ovr_MatchmakingBrowseResult_GetRooms(IntPtr obj);

		[Token(Token = "0x600108C")]
		[Address(RVA = "0xCF2028", Offset = "0xCF2028", VA = "0xCF2028")]
		public static string ovr_MatchmakingCandidate_GetEntryHash(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600108D")]
		[Address(RVA = "0xCF2090", Offset = "0xCF2090", VA = "0xCF2090")]
		private static extern IntPtr ovr_MatchmakingCandidate_GetEntryHash_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600108E")]
		[Address(RVA = "0xCF2130", Offset = "0xCF2130", VA = "0xCF2130")]
		public static extern ulong ovr_MatchmakingCandidate_GetUserId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600108F")]
		[Address(RVA = "0xCF21D0", Offset = "0xCF21D0", VA = "0xCF21D0")]
		public static extern IntPtr ovr_MatchmakingCandidateArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6001090")]
		[Address(RVA = "0xCF2280", Offset = "0xCF2280", VA = "0xCF2280")]
		public static string ovr_MatchmakingCandidateArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001091")]
		[Address(RVA = "0xCF22E8", Offset = "0xCF22E8", VA = "0xCF22E8")]
		private static extern IntPtr ovr_MatchmakingCandidateArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001092")]
		[Address(RVA = "0xCF2388", Offset = "0xCF2388", VA = "0xCF2388")]
		public static extern UIntPtr ovr_MatchmakingCandidateArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001093")]
		[Address(RVA = "0xCF2428", Offset = "0xCF2428", VA = "0xCF2428")]
		public static extern bool ovr_MatchmakingCandidateArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001094")]
		[Address(RVA = "0xCF24D0", Offset = "0xCF24D0", VA = "0xCF24D0")]
		public static extern IntPtr ovr_MatchmakingEnqueueResult_GetAdminSnapshot(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001095")]
		[Address(RVA = "0xCF2570", Offset = "0xCF2570", VA = "0xCF2570")]
		public static extern uint ovr_MatchmakingEnqueueResult_GetAverageWait(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001096")]
		[Address(RVA = "0xCF2610", Offset = "0xCF2610", VA = "0xCF2610")]
		public static extern uint ovr_MatchmakingEnqueueResult_GetMatchesInLastHourCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001097")]
		[Address(RVA = "0xCF26B0", Offset = "0xCF26B0", VA = "0xCF26B0")]
		public static extern uint ovr_MatchmakingEnqueueResult_GetMaxExpectedWait(IntPtr obj);

		[Token(Token = "0x6001098")]
		[Address(RVA = "0xCF2750", Offset = "0xCF2750", VA = "0xCF2750")]
		public static string ovr_MatchmakingEnqueueResult_GetPool(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001099")]
		[Address(RVA = "0xCF27B8", Offset = "0xCF27B8", VA = "0xCF27B8")]
		private static extern IntPtr ovr_MatchmakingEnqueueResult_GetPool_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600109A")]
		[Address(RVA = "0xCF2858", Offset = "0xCF2858", VA = "0xCF2858")]
		public static extern uint ovr_MatchmakingEnqueueResult_GetRecentMatchPercentage(IntPtr obj);

		[Token(Token = "0x600109B")]
		[Address(RVA = "0xCF28F8", Offset = "0xCF28F8", VA = "0xCF28F8")]
		public static string ovr_MatchmakingEnqueueResult_GetRequestHash(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600109C")]
		[Address(RVA = "0xCF2960", Offset = "0xCF2960", VA = "0xCF2960")]
		private static extern IntPtr ovr_MatchmakingEnqueueResult_GetRequestHash_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600109D")]
		[Address(RVA = "0xCF2A00", Offset = "0xCF2A00", VA = "0xCF2A00")]
		public static extern IntPtr ovr_MatchmakingEnqueueResultAndRoom_GetMatchmakingEnqueueResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600109E")]
		[Address(RVA = "0xCF2AA0", Offset = "0xCF2AA0", VA = "0xCF2AA0")]
		public static extern IntPtr ovr_MatchmakingEnqueueResultAndRoom_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600109F")]
		[Address(RVA = "0xCF2B40", Offset = "0xCF2B40", VA = "0xCF2B40")]
		public static extern ulong ovr_MatchmakingEnqueuedUser_GetAdditionalUserID(IntPtr obj, uint index);

		[PreserveSig]
		[Token(Token = "0x60010A0")]
		[Address(RVA = "0xCF2BF0", Offset = "0xCF2BF0", VA = "0xCF2BF0")]
		public static extern uint ovr_MatchmakingEnqueuedUser_GetAdditionalUserIDsSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010A1")]
		[Address(RVA = "0xCF2C90", Offset = "0xCF2C90", VA = "0xCF2C90")]
		public static extern IntPtr ovr_MatchmakingEnqueuedUser_GetCustomData(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010A2")]
		[Address(RVA = "0xCF2D30", Offset = "0xCF2D30", VA = "0xCF2D30")]
		public static extern IntPtr ovr_MatchmakingEnqueuedUser_GetUser(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010A3")]
		[Address(RVA = "0xCF2DD0", Offset = "0xCF2DD0", VA = "0xCF2DD0")]
		public static extern IntPtr ovr_MatchmakingEnqueuedUserArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x60010A4")]
		[Address(RVA = "0xCF2E80", Offset = "0xCF2E80", VA = "0xCF2E80")]
		public static extern UIntPtr ovr_MatchmakingEnqueuedUserArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010A5")]
		[Address(RVA = "0xCF2F20", Offset = "0xCF2F20", VA = "0xCF2F20")]
		public static extern ulong ovr_MatchmakingNotification_GetAddedByUserId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010A6")]
		[Address(RVA = "0xCF2FC0", Offset = "0xCF2FC0", VA = "0xCF2FC0")]
		public static extern IntPtr ovr_MatchmakingNotification_GetRoom(IntPtr obj);

		[Token(Token = "0x60010A7")]
		[Address(RVA = "0xCF3060", Offset = "0xCF3060", VA = "0xCF3060")]
		public static string ovr_MatchmakingNotification_GetTraceId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60010A8")]
		[Address(RVA = "0xCF30C8", Offset = "0xCF30C8", VA = "0xCF30C8")]
		private static extern IntPtr ovr_MatchmakingNotification_GetTraceId_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010A9")]
		[Address(RVA = "0xCF3168", Offset = "0xCF3168", VA = "0xCF3168")]
		public static extern uint ovr_MatchmakingRoom_GetPingTime(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010AA")]
		[Address(RVA = "0xCF3208", Offset = "0xCF3208", VA = "0xCF3208")]
		public static extern IntPtr ovr_MatchmakingRoom_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010AB")]
		[Address(RVA = "0xCF32A8", Offset = "0xCF32A8", VA = "0xCF32A8")]
		public static extern bool ovr_MatchmakingRoom_HasPingTime(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010AC")]
		[Address(RVA = "0xCF3350", Offset = "0xCF3350", VA = "0xCF3350")]
		public static extern IntPtr ovr_MatchmakingRoomArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x60010AD")]
		[Address(RVA = "0xCF3400", Offset = "0xCF3400", VA = "0xCF3400")]
		public static extern UIntPtr ovr_MatchmakingRoomArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010AE")]
		[Address(RVA = "0xCF34A0", Offset = "0xCF34A0", VA = "0xCF34A0")]
		public static extern uint ovr_MatchmakingStats_GetDrawCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010AF")]
		[Address(RVA = "0xCF3540", Offset = "0xCF3540", VA = "0xCF3540")]
		public static extern uint ovr_MatchmakingStats_GetLossCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010B0")]
		[Address(RVA = "0xCF35E0", Offset = "0xCF35E0", VA = "0xCF35E0")]
		public static extern uint ovr_MatchmakingStats_GetSkillLevel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010B1")]
		[Address(RVA = "0xCF3680", Offset = "0xCF3680", VA = "0xCF3680")]
		public static extern uint ovr_MatchmakingStats_GetWinCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010B2")]
		[Address(RVA = "0xCF3720", Offset = "0xCF3720", VA = "0xCF3720")]
		public static extern IntPtr ovr_Message_GetAbuseReportRecording(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010B3")]
		[Address(RVA = "0xCF37C0", Offset = "0xCF37C0", VA = "0xCF37C0")]
		public static extern IntPtr ovr_Message_GetAchievementDefinitionArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010B4")]
		[Address(RVA = "0xCF3860", Offset = "0xCF3860", VA = "0xCF3860")]
		public static extern IntPtr ovr_Message_GetAchievementProgressArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010B5")]
		[Address(RVA = "0xCF3900", Offset = "0xCF3900", VA = "0xCF3900")]
		public static extern IntPtr ovr_Message_GetAchievementUpdate(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010B6")]
		[Address(RVA = "0xCF39A0", Offset = "0xCF39A0", VA = "0xCF39A0")]
		public static extern IntPtr ovr_Message_GetApplicationVersion(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010B7")]
		[Address(RVA = "0xCF3A40", Offset = "0xCF3A40", VA = "0xCF3A40")]
		public static extern IntPtr ovr_Message_GetAssetDetails(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010B8")]
		[Address(RVA = "0xCF3AE0", Offset = "0xCF3AE0", VA = "0xCF3AE0")]
		public static extern IntPtr ovr_Message_GetAssetDetailsArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010B9")]
		[Address(RVA = "0xCF3B80", Offset = "0xCF3B80", VA = "0xCF3B80")]
		public static extern IntPtr ovr_Message_GetAssetFileDeleteResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010BA")]
		[Address(RVA = "0xCF3C20", Offset = "0xCF3C20", VA = "0xCF3C20")]
		public static extern IntPtr ovr_Message_GetAssetFileDownloadCancelResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010BB")]
		[Address(RVA = "0xCF3CC0", Offset = "0xCF3CC0", VA = "0xCF3CC0")]
		public static extern IntPtr ovr_Message_GetAssetFileDownloadResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010BC")]
		[Address(RVA = "0xCF3D60", Offset = "0xCF3D60", VA = "0xCF3D60")]
		public static extern IntPtr ovr_Message_GetAssetFileDownloadUpdate(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010BD")]
		[Address(RVA = "0xCF3E00", Offset = "0xCF3E00", VA = "0xCF3E00")]
		public static extern IntPtr ovr_Message_GetCalApplicationFinalized(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010BE")]
		[Address(RVA = "0xCF3EA0", Offset = "0xCF3EA0", VA = "0xCF3EA0")]
		public static extern IntPtr ovr_Message_GetCalApplicationProposed(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010BF")]
		[Address(RVA = "0xCF3F40", Offset = "0xCF3F40", VA = "0xCF3F40")]
		public static extern IntPtr ovr_Message_GetCalApplicationSuggestionArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010C0")]
		[Address(RVA = "0xCF3FE0", Offset = "0xCF3FE0", VA = "0xCF3FE0")]
		public static extern IntPtr ovr_Message_GetCloudStorageConflictMetadata(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010C1")]
		[Address(RVA = "0xCF4080", Offset = "0xCF4080", VA = "0xCF4080")]
		public static extern IntPtr ovr_Message_GetCloudStorageData(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010C2")]
		[Address(RVA = "0xCF4120", Offset = "0xCF4120", VA = "0xCF4120")]
		public static extern IntPtr ovr_Message_GetCloudStorageMetadata(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010C3")]
		[Address(RVA = "0xCF41C0", Offset = "0xCF41C0", VA = "0xCF41C0")]
		public static extern IntPtr ovr_Message_GetCloudStorageMetadataArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010C4")]
		[Address(RVA = "0xCF4260", Offset = "0xCF4260", VA = "0xCF4260")]
		public static extern IntPtr ovr_Message_GetCloudStorageUpdateResponse(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010C5")]
		[Address(RVA = "0xCF4300", Offset = "0xCF4300", VA = "0xCF4300")]
		public static extern IntPtr ovr_Message_GetError(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010C6")]
		[Address(RVA = "0xCF43A0", Offset = "0xCF43A0", VA = "0xCF43A0")]
		public static extern IntPtr ovr_Message_GetHttpTransferUpdate(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010C7")]
		[Address(RVA = "0xCF4440", Offset = "0xCF4440", VA = "0xCF4440")]
		public static extern IntPtr ovr_Message_GetInstalledApplicationArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010C8")]
		[Address(RVA = "0xCF44E0", Offset = "0xCF44E0", VA = "0xCF44E0")]
		public static extern IntPtr ovr_Message_GetLaunchBlockFlowResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010C9")]
		[Address(RVA = "0xCF4580", Offset = "0xCF4580", VA = "0xCF4580")]
		public static extern IntPtr ovr_Message_GetLaunchFriendRequestFlowResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010CA")]
		[Address(RVA = "0xCF4620", Offset = "0xCF4620", VA = "0xCF4620")]
		public static extern IntPtr ovr_Message_GetLaunchReportFlowResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010CB")]
		[Address(RVA = "0xCF46C0", Offset = "0xCF46C0", VA = "0xCF46C0")]
		public static extern IntPtr ovr_Message_GetLaunchUnblockFlowResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010CC")]
		[Address(RVA = "0xCF4760", Offset = "0xCF4760", VA = "0xCF4760")]
		public static extern IntPtr ovr_Message_GetLeaderboardEntryArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010CD")]
		[Address(RVA = "0xCF4800", Offset = "0xCF4800", VA = "0xCF4800")]
		public static extern IntPtr ovr_Message_GetLeaderboardUpdateStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010CE")]
		[Address(RVA = "0xCF48A0", Offset = "0xCF48A0", VA = "0xCF48A0")]
		public static extern IntPtr ovr_Message_GetLinkedAccountArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010CF")]
		[Address(RVA = "0xCF4940", Offset = "0xCF4940", VA = "0xCF4940")]
		public static extern IntPtr ovr_Message_GetLivestreamingApplicationStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010D0")]
		[Address(RVA = "0xCF49E0", Offset = "0xCF49E0", VA = "0xCF49E0")]
		public static extern IntPtr ovr_Message_GetLivestreamingStartResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010D1")]
		[Address(RVA = "0xCF4A80", Offset = "0xCF4A80", VA = "0xCF4A80")]
		public static extern IntPtr ovr_Message_GetLivestreamingStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010D2")]
		[Address(RVA = "0xCF4B20", Offset = "0xCF4B20", VA = "0xCF4B20")]
		public static extern IntPtr ovr_Message_GetLivestreamingVideoStats(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010D3")]
		[Address(RVA = "0xCF4BC0", Offset = "0xCF4BC0", VA = "0xCF4BC0")]
		public static extern IntPtr ovr_Message_GetMatchmakingAdminSnapshot(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010D4")]
		[Address(RVA = "0xCF4C60", Offset = "0xCF4C60", VA = "0xCF4C60")]
		public static extern IntPtr ovr_Message_GetMatchmakingBrowseResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010D5")]
		[Address(RVA = "0xCF4D00", Offset = "0xCF4D00", VA = "0xCF4D00")]
		public static extern IntPtr ovr_Message_GetMatchmakingEnqueueResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010D6")]
		[Address(RVA = "0xCF4DA0", Offset = "0xCF4DA0", VA = "0xCF4DA0")]
		public static extern IntPtr ovr_Message_GetMatchmakingEnqueueResultAndRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010D7")]
		[Address(RVA = "0xCF4E40", Offset = "0xCF4E40", VA = "0xCF4E40")]
		public static extern IntPtr ovr_Message_GetMatchmakingRoomArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010D8")]
		[Address(RVA = "0xCF4EE0", Offset = "0xCF4EE0", VA = "0xCF4EE0")]
		public static extern IntPtr ovr_Message_GetMatchmakingStats(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010D9")]
		[Address(RVA = "0xCF4F80", Offset = "0xCF4F80", VA = "0xCF4F80")]
		public static extern IntPtr ovr_Message_GetNativeMessage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010DA")]
		[Address(RVA = "0xCF5020", Offset = "0xCF5020", VA = "0xCF5020")]
		public static extern IntPtr ovr_Message_GetNetworkingPeer(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010DB")]
		[Address(RVA = "0xCF50C0", Offset = "0xCF50C0", VA = "0xCF50C0")]
		public static extern IntPtr ovr_Message_GetOrgScopedID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010DC")]
		[Address(RVA = "0xCF5160", Offset = "0xCF5160", VA = "0xCF5160")]
		public static extern IntPtr ovr_Message_GetParty(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010DD")]
		[Address(RVA = "0xCF5200", Offset = "0xCF5200", VA = "0xCF5200")]
		public static extern IntPtr ovr_Message_GetPartyID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010DE")]
		[Address(RVA = "0xCF52A0", Offset = "0xCF52A0", VA = "0xCF52A0")]
		public static extern IntPtr ovr_Message_GetPartyUpdateNotification(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010DF")]
		[Address(RVA = "0xCF5340", Offset = "0xCF5340", VA = "0xCF5340")]
		public static extern IntPtr ovr_Message_GetPidArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010E0")]
		[Address(RVA = "0xCF53E0", Offset = "0xCF53E0", VA = "0xCF53E0")]
		public static extern IntPtr ovr_Message_GetPingResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010E1")]
		[Address(RVA = "0xCF5480", Offset = "0xCF5480", VA = "0xCF5480")]
		public static extern IntPtr ovr_Message_GetPlatformInitialize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010E2")]
		[Address(RVA = "0xCF5520", Offset = "0xCF5520", VA = "0xCF5520")]
		public static extern IntPtr ovr_Message_GetProductArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010E3")]
		[Address(RVA = "0xCF55C0", Offset = "0xCF55C0", VA = "0xCF55C0")]
		public static extern IntPtr ovr_Message_GetPurchase(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010E4")]
		[Address(RVA = "0xCF5660", Offset = "0xCF5660", VA = "0xCF5660")]
		public static extern IntPtr ovr_Message_GetPurchaseArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010E5")]
		[Address(RVA = "0xCF5700", Offset = "0xCF5700", VA = "0xCF5700")]
		public static extern ulong ovr_Message_GetRequestID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010E6")]
		[Address(RVA = "0xCF57A0", Offset = "0xCF57A0", VA = "0xCF57A0")]
		public static extern IntPtr ovr_Message_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010E7")]
		[Address(RVA = "0xCF5840", Offset = "0xCF5840", VA = "0xCF5840")]
		public static extern IntPtr ovr_Message_GetRoomArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010E8")]
		[Address(RVA = "0xCF58E0", Offset = "0xCF58E0", VA = "0xCF58E0")]
		public static extern IntPtr ovr_Message_GetRoomInviteNotification(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010E9")]
		[Address(RVA = "0xCF5980", Offset = "0xCF5980", VA = "0xCF5980")]
		public static extern IntPtr ovr_Message_GetRoomInviteNotificationArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010EA")]
		[Address(RVA = "0xCF5A20", Offset = "0xCF5A20", VA = "0xCF5A20")]
		public static extern IntPtr ovr_Message_GetSdkAccountArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010EB")]
		[Address(RVA = "0xCF5AC0", Offset = "0xCF5AC0", VA = "0xCF5AC0")]
		public static extern IntPtr ovr_Message_GetShareMediaResult(IntPtr obj);

		[Token(Token = "0x60010EC")]
		[Address(RVA = "0xCF5B60", Offset = "0xCF5B60", VA = "0xCF5B60")]
		public static string ovr_Message_GetString(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60010ED")]
		[Address(RVA = "0xCF5BC8", Offset = "0xCF5BC8", VA = "0xCF5BC8")]
		private static extern IntPtr ovr_Message_GetString_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010EE")]
		[Address(RVA = "0xCF5C68", Offset = "0xCF5C68", VA = "0xCF5C68")]
		public static extern IntPtr ovr_Message_GetSystemPermission(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010EF")]
		[Address(RVA = "0xCF5D08", Offset = "0xCF5D08", VA = "0xCF5D08")]
		public static extern IntPtr ovr_Message_GetSystemVoipState(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010F0")]
		[Address(RVA = "0xCF5DA8", Offset = "0xCF5DA8", VA = "0xCF5DA8")]
		public static extern Message.MessageType ovr_Message_GetType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010F1")]
		[Address(RVA = "0xCF5E48", Offset = "0xCF5E48", VA = "0xCF5E48")]
		public static extern IntPtr ovr_Message_GetUser(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010F2")]
		[Address(RVA = "0xCF5EE8", Offset = "0xCF5EE8", VA = "0xCF5EE8")]
		public static extern IntPtr ovr_Message_GetUserAndRoomArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010F3")]
		[Address(RVA = "0xCF5F88", Offset = "0xCF5F88", VA = "0xCF5F88")]
		public static extern IntPtr ovr_Message_GetUserArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010F4")]
		[Address(RVA = "0xCF6028", Offset = "0xCF6028", VA = "0xCF6028")]
		public static extern IntPtr ovr_Message_GetUserProof(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010F5")]
		[Address(RVA = "0xCF60C8", Offset = "0xCF60C8", VA = "0xCF60C8")]
		public static extern IntPtr ovr_Message_GetUserReportID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010F6")]
		[Address(RVA = "0xCF6168", Offset = "0xCF6168", VA = "0xCF6168")]
		public static extern bool ovr_Message_IsError(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010F7")]
		[Address(RVA = "0xCF6210", Offset = "0xCF6210", VA = "0xCF6210")]
		public static extern UIntPtr ovr_Microphone_GetNumSamplesAvailable(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010F8")]
		[Address(RVA = "0xCF62B0", Offset = "0xCF62B0", VA = "0xCF62B0")]
		public static extern UIntPtr ovr_Microphone_GetOutputBufferMaxSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010F9")]
		[Address(RVA = "0xCF6350", Offset = "0xCF6350", VA = "0xCF6350")]
		public static extern UIntPtr ovr_Microphone_GetPCM(IntPtr obj, short[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x60010FA")]
		[Address(RVA = "0xCF6410", Offset = "0xCF6410", VA = "0xCF6410")]
		public static extern UIntPtr ovr_Microphone_GetPCMFloat(IntPtr obj, float[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x60010FB")]
		[Address(RVA = "0xCF64D0", Offset = "0xCF64D0", VA = "0xCF64D0")]
		public static extern UIntPtr ovr_Microphone_ReadData(IntPtr obj, float[] outputBuffer, UIntPtr outputBufferSize);

		[PreserveSig]
		[Token(Token = "0x60010FC")]
		[Address(RVA = "0xCF6590", Offset = "0xCF6590", VA = "0xCF6590")]
		public static extern void ovr_Microphone_SetAcceptableRecordingDelayHint(IntPtr obj, UIntPtr delayMs);

		[PreserveSig]
		[Token(Token = "0x60010FD")]
		[Address(RVA = "0xCF6640", Offset = "0xCF6640", VA = "0xCF6640")]
		public static extern void ovr_Microphone_Start(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010FE")]
		[Address(RVA = "0xCF66E0", Offset = "0xCF66E0", VA = "0xCF66E0")]
		public static extern void ovr_Microphone_Stop(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60010FF")]
		[Address(RVA = "0xCF6780", Offset = "0xCF6780", VA = "0xCF6780")]
		public static extern ulong ovr_NetworkingPeer_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001100")]
		[Address(RVA = "0xCF6820", Offset = "0xCF6820", VA = "0xCF6820")]
		public static extern PeerConnectionState ovr_NetworkingPeer_GetState(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001101")]
		[Address(RVA = "0xCF68C0", Offset = "0xCF68C0", VA = "0xCF68C0")]
		public static extern ulong ovr_OrgScopedID_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001102")]
		[Address(RVA = "0xCF6960", Offset = "0xCF6960", VA = "0xCF6960")]
		public static extern void ovr_Packet_Free(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001103")]
		[Address(RVA = "0xCF6A00", Offset = "0xCF6A00", VA = "0xCF6A00")]
		public static extern IntPtr ovr_Packet_GetBytes(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001104")]
		[Address(RVA = "0xCF6AA0", Offset = "0xCF6AA0", VA = "0xCF6AA0")]
		public static extern SendPolicy ovr_Packet_GetSendPolicy(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001105")]
		[Address(RVA = "0xCF6B40", Offset = "0xCF6B40", VA = "0xCF6B40")]
		public static extern ulong ovr_Packet_GetSenderID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001106")]
		[Address(RVA = "0xCF6BE0", Offset = "0xCF6BE0", VA = "0xCF6BE0")]
		public static extern UIntPtr ovr_Packet_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001107")]
		[Address(RVA = "0xCF6C80", Offset = "0xCF6C80", VA = "0xCF6C80")]
		public static extern ulong ovr_Party_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001108")]
		[Address(RVA = "0xCF6D20", Offset = "0xCF6D20", VA = "0xCF6D20")]
		public static extern IntPtr ovr_Party_GetInvitedUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001109")]
		[Address(RVA = "0xCF6DC0", Offset = "0xCF6DC0", VA = "0xCF6DC0")]
		public static extern IntPtr ovr_Party_GetLeader(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600110A")]
		[Address(RVA = "0xCF6E60", Offset = "0xCF6E60", VA = "0xCF6E60")]
		public static extern IntPtr ovr_Party_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600110B")]
		[Address(RVA = "0xCF6EFC", Offset = "0xCF6EFC", VA = "0xCF6EFC")]
		public static extern IntPtr ovr_Party_GetUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600110C")]
		[Address(RVA = "0xCF6F9C", Offset = "0xCF6F9C", VA = "0xCF6F9C")]
		public static extern ulong ovr_PartyID_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600110D")]
		[Address(RVA = "0xCF7038", Offset = "0xCF7038", VA = "0xCF7038")]
		public static extern PartyUpdateAction ovr_PartyUpdateNotification_GetAction(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600110E")]
		[Address(RVA = "0xCF70D8", Offset = "0xCF70D8", VA = "0xCF70D8")]
		public static extern ulong ovr_PartyUpdateNotification_GetPartyId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600110F")]
		[Address(RVA = "0xCF7178", Offset = "0xCF7178", VA = "0xCF7178")]
		public static extern ulong ovr_PartyUpdateNotification_GetSenderId(IntPtr obj);

		[Token(Token = "0x6001110")]
		[Address(RVA = "0xCF7218", Offset = "0xCF7218", VA = "0xCF7218")]
		public static string ovr_PartyUpdateNotification_GetUpdateTimestamp(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001111")]
		[Address(RVA = "0xCF7280", Offset = "0xCF7280", VA = "0xCF7280")]
		private static extern IntPtr ovr_PartyUpdateNotification_GetUpdateTimestamp_Native(IntPtr obj);

		[Token(Token = "0x6001112")]
		[Address(RVA = "0xCF7320", Offset = "0xCF7320", VA = "0xCF7320")]
		public static string ovr_PartyUpdateNotification_GetUserAlias(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001113")]
		[Address(RVA = "0xCF7388", Offset = "0xCF7388", VA = "0xCF7388")]
		private static extern IntPtr ovr_PartyUpdateNotification_GetUserAlias_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001114")]
		[Address(RVA = "0xCF7428", Offset = "0xCF7428", VA = "0xCF7428")]
		public static extern ulong ovr_PartyUpdateNotification_GetUserId(IntPtr obj);

		[Token(Token = "0x6001115")]
		[Address(RVA = "0xCF74C8", Offset = "0xCF74C8", VA = "0xCF74C8")]
		public static string ovr_PartyUpdateNotification_GetUserName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001116")]
		[Address(RVA = "0xCF7530", Offset = "0xCF7530", VA = "0xCF7530")]
		private static extern IntPtr ovr_PartyUpdateNotification_GetUserName_Native(IntPtr obj);

		[Token(Token = "0x6001117")]
		[Address(RVA = "0xCF75D0", Offset = "0xCF75D0", VA = "0xCF75D0")]
		public static string ovr_Pid_GetId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001118")]
		[Address(RVA = "0xCF7638", Offset = "0xCF7638", VA = "0xCF7638")]
		private static extern IntPtr ovr_Pid_GetId_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001119")]
		[Address(RVA = "0xCF76D8", Offset = "0xCF76D8", VA = "0xCF76D8")]
		public static extern IntPtr ovr_PidArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x600111A")]
		[Address(RVA = "0xCF7788", Offset = "0xCF7788", VA = "0xCF7788")]
		public static extern UIntPtr ovr_PidArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600111B")]
		[Address(RVA = "0xCF7828", Offset = "0xCF7828", VA = "0xCF7828")]
		public static extern ulong ovr_PingResult_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600111C")]
		[Address(RVA = "0xCF78C8", Offset = "0xCF78C8", VA = "0xCF78C8")]
		public static extern ulong ovr_PingResult_GetPingTimeUsec(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600111D")]
		[Address(RVA = "0xCF7968", Offset = "0xCF7968", VA = "0xCF7968")]
		public static extern bool ovr_PingResult_IsTimeout(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600111E")]
		[Address(RVA = "0xCF7A10", Offset = "0xCF7A10", VA = "0xCF7A10")]
		public static extern PlatformInitializeResult ovr_PlatformInitialize_GetResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600111F")]
		[Address(RVA = "0xCF7AB0", Offset = "0xCF7AB0", VA = "0xCF7AB0")]
		public static extern uint ovr_Price_GetAmountInHundredths(IntPtr obj);

		[Token(Token = "0x6001120")]
		[Address(RVA = "0xCF7B50", Offset = "0xCF7B50", VA = "0xCF7B50")]
		public static string ovr_Price_GetCurrency(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001121")]
		[Address(RVA = "0xCF7BB8", Offset = "0xCF7BB8", VA = "0xCF7BB8")]
		private static extern IntPtr ovr_Price_GetCurrency_Native(IntPtr obj);

		[Token(Token = "0x6001122")]
		[Address(RVA = "0xCF7C58", Offset = "0xCF7C58", VA = "0xCF7C58")]
		public static string ovr_Price_GetFormatted(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001123")]
		[Address(RVA = "0xCF7CC0", Offset = "0xCF7CC0", VA = "0xCF7CC0")]
		private static extern IntPtr ovr_Price_GetFormatted_Native(IntPtr obj);

		[Token(Token = "0x6001124")]
		[Address(RVA = "0xCF7D60", Offset = "0xCF7D60", VA = "0xCF7D60")]
		public static string ovr_Product_GetDescription(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001125")]
		[Address(RVA = "0xCF7DC8", Offset = "0xCF7DC8", VA = "0xCF7DC8")]
		private static extern IntPtr ovr_Product_GetDescription_Native(IntPtr obj);

		[Token(Token = "0x6001126")]
		[Address(RVA = "0xCF7E68", Offset = "0xCF7E68", VA = "0xCF7E68")]
		public static string ovr_Product_GetFormattedPrice(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001127")]
		[Address(RVA = "0xCF7ED0", Offset = "0xCF7ED0", VA = "0xCF7ED0")]
		private static extern IntPtr ovr_Product_GetFormattedPrice_Native(IntPtr obj);

		[Token(Token = "0x6001128")]
		[Address(RVA = "0xCF7F70", Offset = "0xCF7F70", VA = "0xCF7F70")]
		public static string ovr_Product_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001129")]
		[Address(RVA = "0xCF7FD8", Offset = "0xCF7FD8", VA = "0xCF7FD8")]
		private static extern IntPtr ovr_Product_GetName_Native(IntPtr obj);

		[Token(Token = "0x600112A")]
		[Address(RVA = "0xCF8078", Offset = "0xCF8078", VA = "0xCF8078")]
		public static string ovr_Product_GetSKU(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600112B")]
		[Address(RVA = "0xCF80E0", Offset = "0xCF80E0", VA = "0xCF80E0")]
		private static extern IntPtr ovr_Product_GetSKU_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600112C")]
		[Address(RVA = "0xCF8180", Offset = "0xCF8180", VA = "0xCF8180")]
		public static extern IntPtr ovr_ProductArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x600112D")]
		[Address(RVA = "0xCF8230", Offset = "0xCF8230", VA = "0xCF8230")]
		public static string ovr_ProductArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600112E")]
		[Address(RVA = "0xCF8298", Offset = "0xCF8298", VA = "0xCF8298")]
		private static extern IntPtr ovr_ProductArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600112F")]
		[Address(RVA = "0xCF8338", Offset = "0xCF8338", VA = "0xCF8338")]
		public static extern UIntPtr ovr_ProductArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001130")]
		[Address(RVA = "0xCF83D8", Offset = "0xCF83D8", VA = "0xCF83D8")]
		public static extern bool ovr_ProductArray_HasNextPage(IntPtr obj);

		[Token(Token = "0x6001131")]
		[Address(RVA = "0xCF8480", Offset = "0xCF8480", VA = "0xCF8480")]
		public static DateTime ovr_Purchase_GetExpirationTime(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x6001132")]
		[Address(RVA = "0xCF84E8", Offset = "0xCF84E8", VA = "0xCF84E8")]
		private static extern ulong ovr_Purchase_GetExpirationTime_Native(IntPtr obj);

		[Token(Token = "0x6001133")]
		[Address(RVA = "0xCF8588", Offset = "0xCF8588", VA = "0xCF8588")]
		public static DateTime ovr_Purchase_GetGrantTime(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x6001134")]
		[Address(RVA = "0xCF85F0", Offset = "0xCF85F0", VA = "0xCF85F0")]
		private static extern ulong ovr_Purchase_GetGrantTime_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001135")]
		[Address(RVA = "0xCF8690", Offset = "0xCF8690", VA = "0xCF8690")]
		public static extern ulong ovr_Purchase_GetPurchaseID(IntPtr obj);

		[Token(Token = "0x6001136")]
		[Address(RVA = "0xCF8730", Offset = "0xCF8730", VA = "0xCF8730")]
		public static string ovr_Purchase_GetSKU(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001137")]
		[Address(RVA = "0xCF8798", Offset = "0xCF8798", VA = "0xCF8798")]
		private static extern IntPtr ovr_Purchase_GetSKU_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001138")]
		[Address(RVA = "0xCF8838", Offset = "0xCF8838", VA = "0xCF8838")]
		public static extern IntPtr ovr_PurchaseArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6001139")]
		[Address(RVA = "0xCF88E8", Offset = "0xCF88E8", VA = "0xCF88E8")]
		public static string ovr_PurchaseArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600113A")]
		[Address(RVA = "0xCF8950", Offset = "0xCF8950", VA = "0xCF8950")]
		private static extern IntPtr ovr_PurchaseArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600113B")]
		[Address(RVA = "0xCF89F0", Offset = "0xCF89F0", VA = "0xCF89F0")]
		public static extern UIntPtr ovr_PurchaseArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600113C")]
		[Address(RVA = "0xCF8A90", Offset = "0xCF8A90", VA = "0xCF8A90")]
		public static extern bool ovr_PurchaseArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600113D")]
		[Address(RVA = "0xCF8B38", Offset = "0xCF8B38", VA = "0xCF8B38")]
		public static extern ulong ovr_Room_GetApplicationID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600113E")]
		[Address(RVA = "0xCF8BD8", Offset = "0xCF8BD8", VA = "0xCF8BD8")]
		public static extern IntPtr ovr_Room_GetDataStore(IntPtr obj);

		[Token(Token = "0x600113F")]
		[Address(RVA = "0xCF8C78", Offset = "0xCF8C78", VA = "0xCF8C78")]
		public static string ovr_Room_GetDescription(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001140")]
		[Address(RVA = "0xCF8CE0", Offset = "0xCF8CE0", VA = "0xCF8CE0")]
		private static extern IntPtr ovr_Room_GetDescription_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001141")]
		[Address(RVA = "0xCF8D80", Offset = "0xCF8D80", VA = "0xCF8D80")]
		public static extern ulong ovr_Room_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001142")]
		[Address(RVA = "0xCF8E20", Offset = "0xCF8E20", VA = "0xCF8E20")]
		public static extern IntPtr ovr_Room_GetInvitedUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001143")]
		[Address(RVA = "0xCF8EC0", Offset = "0xCF8EC0", VA = "0xCF8EC0")]
		public static extern bool ovr_Room_GetIsMembershipLocked(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001144")]
		[Address(RVA = "0xCF8F68", Offset = "0xCF8F68", VA = "0xCF8F68")]
		public static extern RoomJoinPolicy ovr_Room_GetJoinPolicy(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001145")]
		[Address(RVA = "0xCF9008", Offset = "0xCF9008", VA = "0xCF9008")]
		public static extern RoomJoinability ovr_Room_GetJoinability(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001146")]
		[Address(RVA = "0xCF90A8", Offset = "0xCF90A8", VA = "0xCF90A8")]
		public static extern IntPtr ovr_Room_GetMatchedUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001147")]
		[Address(RVA = "0xCF9148", Offset = "0xCF9148", VA = "0xCF9148")]
		public static extern uint ovr_Room_GetMaxUsers(IntPtr obj);

		[Token(Token = "0x6001148")]
		[Address(RVA = "0xCF91E8", Offset = "0xCF91E8", VA = "0xCF91E8")]
		public static string ovr_Room_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001149")]
		[Address(RVA = "0xCF9250", Offset = "0xCF9250", VA = "0xCF9250")]
		private static extern IntPtr ovr_Room_GetName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600114A")]
		[Address(RVA = "0xCF92F0", Offset = "0xCF92F0", VA = "0xCF92F0")]
		public static extern IntPtr ovr_Room_GetOwner(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600114B")]
		[Address(RVA = "0xCF938C", Offset = "0xCF938C", VA = "0xCF938C")]
		public static extern RoomType ovr_Room_GetType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600114C")]
		[Address(RVA = "0xCF942C", Offset = "0xCF942C", VA = "0xCF942C")]
		public static extern IntPtr ovr_Room_GetUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600114D")]
		[Address(RVA = "0xCF94C8", Offset = "0xCF94C8", VA = "0xCF94C8")]
		public static extern uint ovr_Room_GetVersion(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600114E")]
		[Address(RVA = "0xCF9568", Offset = "0xCF9568", VA = "0xCF9568")]
		public static extern IntPtr ovr_RoomArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x600114F")]
		[Address(RVA = "0xCF9618", Offset = "0xCF9618", VA = "0xCF9618")]
		public static string ovr_RoomArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001150")]
		[Address(RVA = "0xCF9680", Offset = "0xCF9680", VA = "0xCF9680")]
		private static extern IntPtr ovr_RoomArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001151")]
		[Address(RVA = "0xCF9720", Offset = "0xCF9720", VA = "0xCF9720")]
		public static extern UIntPtr ovr_RoomArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001152")]
		[Address(RVA = "0xCF97C0", Offset = "0xCF97C0", VA = "0xCF97C0")]
		public static extern bool ovr_RoomArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001153")]
		[Address(RVA = "0xCF9868", Offset = "0xCF9868", VA = "0xCF9868")]
		public static extern ulong ovr_RoomInviteNotification_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001154")]
		[Address(RVA = "0xCF9908", Offset = "0xCF9908", VA = "0xCF9908")]
		public static extern ulong ovr_RoomInviteNotification_GetRoomID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001155")]
		[Address(RVA = "0xCF99A8", Offset = "0xCF99A8", VA = "0xCF99A8")]
		public static extern ulong ovr_RoomInviteNotification_GetSenderID(IntPtr obj);

		[Token(Token = "0x6001156")]
		[Address(RVA = "0xCF9A48", Offset = "0xCF9A48", VA = "0xCF9A48")]
		public static DateTime ovr_RoomInviteNotification_GetSentTime(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x6001157")]
		[Address(RVA = "0xCF9AB0", Offset = "0xCF9AB0", VA = "0xCF9AB0")]
		private static extern ulong ovr_RoomInviteNotification_GetSentTime_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001158")]
		[Address(RVA = "0xCF9B50", Offset = "0xCF9B50", VA = "0xCF9B50")]
		public static extern IntPtr ovr_RoomInviteNotificationArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6001159")]
		[Address(RVA = "0xCF9C00", Offset = "0xCF9C00", VA = "0xCF9C00")]
		public static string ovr_RoomInviteNotificationArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600115A")]
		[Address(RVA = "0xCF9C68", Offset = "0xCF9C68", VA = "0xCF9C68")]
		private static extern IntPtr ovr_RoomInviteNotificationArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600115B")]
		[Address(RVA = "0xCF9D08", Offset = "0xCF9D08", VA = "0xCF9D08")]
		public static extern UIntPtr ovr_RoomInviteNotificationArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600115C")]
		[Address(RVA = "0xCF9DA8", Offset = "0xCF9DA8", VA = "0xCF9DA8")]
		public static extern bool ovr_RoomInviteNotificationArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600115D")]
		[Address(RVA = "0xCF9E50", Offset = "0xCF9E50", VA = "0xCF9E50")]
		public static extern SdkAccountType ovr_SdkAccount_GetAccountType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600115E")]
		[Address(RVA = "0xCF9EF0", Offset = "0xCF9EF0", VA = "0xCF9EF0")]
		public static extern ulong ovr_SdkAccount_GetUserId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600115F")]
		[Address(RVA = "0xCF9F90", Offset = "0xCF9F90", VA = "0xCF9F90")]
		public static extern IntPtr ovr_SdkAccountArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6001160")]
		[Address(RVA = "0xCFA040", Offset = "0xCFA040", VA = "0xCFA040")]
		public static extern UIntPtr ovr_SdkAccountArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001161")]
		[Address(RVA = "0xCFA0E0", Offset = "0xCFA0E0", VA = "0xCFA0E0")]
		public static extern ShareMediaStatus ovr_ShareMediaResult_GetStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001162")]
		[Address(RVA = "0xCFA180", Offset = "0xCFA180", VA = "0xCFA180")]
		public static extern bool ovr_SystemPermission_GetHasPermission(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001163")]
		[Address(RVA = "0xCFA228", Offset = "0xCFA228", VA = "0xCFA228")]
		public static extern PermissionGrantStatus ovr_SystemPermission_GetPermissionGrantStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001164")]
		[Address(RVA = "0xCFA2C8", Offset = "0xCFA2C8", VA = "0xCFA2C8")]
		public static extern VoipMuteState ovr_SystemVoipState_GetMicrophoneMuted(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001165")]
		[Address(RVA = "0xCFA368", Offset = "0xCFA368", VA = "0xCFA368")]
		public static extern SystemVoipStatus ovr_SystemVoipState_GetStatus(IntPtr obj);

		[Token(Token = "0x6001166")]
		[Address(RVA = "0xCFA408", Offset = "0xCFA408", VA = "0xCFA408")]
		public static string ovr_TestUser_GetAccessToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001167")]
		[Address(RVA = "0xCFA470", Offset = "0xCFA470", VA = "0xCFA470")]
		private static extern IntPtr ovr_TestUser_GetAccessToken_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001168")]
		[Address(RVA = "0xCFA510", Offset = "0xCFA510", VA = "0xCFA510")]
		public static extern IntPtr ovr_TestUser_GetAppAccessArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001169")]
		[Address(RVA = "0xCFA5B0", Offset = "0xCFA5B0", VA = "0xCFA5B0")]
		public static extern IntPtr ovr_TestUser_GetFbAppAccessArray(IntPtr obj);

		[Token(Token = "0x600116A")]
		[Address(RVA = "0xCFA650", Offset = "0xCFA650", VA = "0xCFA650")]
		public static string ovr_TestUser_GetFriendAccessToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600116B")]
		[Address(RVA = "0xCFA6B8", Offset = "0xCFA6B8", VA = "0xCFA6B8")]
		private static extern IntPtr ovr_TestUser_GetFriendAccessToken_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600116C")]
		[Address(RVA = "0xCFA758", Offset = "0xCFA758", VA = "0xCFA758")]
		public static extern IntPtr ovr_TestUser_GetFriendAppAccessArray(IntPtr obj);

		[Token(Token = "0x600116D")]
		[Address(RVA = "0xCFA7F8", Offset = "0xCFA7F8", VA = "0xCFA7F8")]
		public static string ovr_TestUser_GetUserAlias(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600116E")]
		[Address(RVA = "0xCFA860", Offset = "0xCFA860", VA = "0xCFA860")]
		private static extern IntPtr ovr_TestUser_GetUserAlias_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600116F")]
		[Address(RVA = "0xCFA900", Offset = "0xCFA900", VA = "0xCFA900")]
		public static extern ulong ovr_TestUser_GetUserFbid(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001170")]
		[Address(RVA = "0xCFA9A0", Offset = "0xCFA9A0", VA = "0xCFA9A0")]
		public static extern ulong ovr_TestUser_GetUserId(IntPtr obj);

		[Token(Token = "0x6001171")]
		[Address(RVA = "0xCFAA40", Offset = "0xCFAA40", VA = "0xCFAA40")]
		public static string ovr_TestUserAppAccess_GetAccessToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001172")]
		[Address(RVA = "0xCFAAA8", Offset = "0xCFAAA8", VA = "0xCFAAA8")]
		private static extern IntPtr ovr_TestUserAppAccess_GetAccessToken_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001173")]
		[Address(RVA = "0xCFAB48", Offset = "0xCFAB48", VA = "0xCFAB48")]
		public static extern ulong ovr_TestUserAppAccess_GetAppId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001174")]
		[Address(RVA = "0xCFABE8", Offset = "0xCFABE8", VA = "0xCFABE8")]
		public static extern ulong ovr_TestUserAppAccess_GetUserId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001175")]
		[Address(RVA = "0xCFAC88", Offset = "0xCFAC88", VA = "0xCFAC88")]
		public static extern IntPtr ovr_TestUserAppAccessArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6001176")]
		[Address(RVA = "0xCFAD38", Offset = "0xCFAD38", VA = "0xCFAD38")]
		public static extern UIntPtr ovr_TestUserAppAccessArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001177")]
		[Address(RVA = "0xCFADD8", Offset = "0xCFADD8", VA = "0xCFADD8")]
		public static extern ulong ovr_User_GetID(IntPtr obj);

		[Token(Token = "0x6001178")]
		[Address(RVA = "0xCFAE78", Offset = "0xCFAE78", VA = "0xCFAE78")]
		public static string ovr_User_GetImageUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001179")]
		[Address(RVA = "0xCFAEE0", Offset = "0xCFAEE0", VA = "0xCFAEE0")]
		private static extern IntPtr ovr_User_GetImageUrl_Native(IntPtr obj);

		[Token(Token = "0x600117A")]
		[Address(RVA = "0xCFAF80", Offset = "0xCFAF80", VA = "0xCFAF80")]
		public static string ovr_User_GetInviteToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600117B")]
		[Address(RVA = "0xCFAFE8", Offset = "0xCFAFE8", VA = "0xCFAFE8")]
		private static extern IntPtr ovr_User_GetInviteToken_Native(IntPtr obj);

		[Token(Token = "0x600117C")]
		[Address(RVA = "0xCFB088", Offset = "0xCFB088", VA = "0xCFB088")]
		public static string ovr_User_GetOculusID(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600117D")]
		[Address(RVA = "0xCFB0F0", Offset = "0xCFB0F0", VA = "0xCFB0F0")]
		private static extern IntPtr ovr_User_GetOculusID_Native(IntPtr obj);

		[Token(Token = "0x600117E")]
		[Address(RVA = "0xCFB190", Offset = "0xCFB190", VA = "0xCFB190")]
		public static string ovr_User_GetPresence(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600117F")]
		[Address(RVA = "0xCFB1F8", Offset = "0xCFB1F8", VA = "0xCFB1F8")]
		private static extern IntPtr ovr_User_GetPresence_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001180")]
		[Address(RVA = "0xCFB298", Offset = "0xCFB298", VA = "0xCFB298")]
		public static extern UserPresenceStatus ovr_User_GetPresenceStatus(IntPtr obj);

		[Token(Token = "0x6001181")]
		[Address(RVA = "0xCFB338", Offset = "0xCFB338", VA = "0xCFB338")]
		public static string ovr_User_GetSmallImageUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001182")]
		[Address(RVA = "0xCFB3A0", Offset = "0xCFB3A0", VA = "0xCFB3A0")]
		private static extern IntPtr ovr_User_GetSmallImageUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001183")]
		[Address(RVA = "0xCFB440", Offset = "0xCFB440", VA = "0xCFB440")]
		public static extern IntPtr ovr_UserAndRoom_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001184")]
		[Address(RVA = "0xCFB4E0", Offset = "0xCFB4E0", VA = "0xCFB4E0")]
		public static extern IntPtr ovr_UserAndRoom_GetUser(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001185")]
		[Address(RVA = "0xCFB580", Offset = "0xCFB580", VA = "0xCFB580")]
		public static extern IntPtr ovr_UserAndRoomArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6001186")]
		[Address(RVA = "0xCFB630", Offset = "0xCFB630", VA = "0xCFB630")]
		public static string ovr_UserAndRoomArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001187")]
		[Address(RVA = "0xCFB698", Offset = "0xCFB698", VA = "0xCFB698")]
		private static extern IntPtr ovr_UserAndRoomArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001188")]
		[Address(RVA = "0xCFB738", Offset = "0xCFB738", VA = "0xCFB738")]
		public static extern UIntPtr ovr_UserAndRoomArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001189")]
		[Address(RVA = "0xCFB7D8", Offset = "0xCFB7D8", VA = "0xCFB7D8")]
		public static extern bool ovr_UserAndRoomArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600118A")]
		[Address(RVA = "0xCFB880", Offset = "0xCFB880", VA = "0xCFB880")]
		public static extern IntPtr ovr_UserArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x600118B")]
		[Address(RVA = "0xCFB930", Offset = "0xCFB930", VA = "0xCFB930")]
		public static string ovr_UserArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600118C")]
		[Address(RVA = "0xCFB998", Offset = "0xCFB998", VA = "0xCFB998")]
		private static extern IntPtr ovr_UserArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600118D")]
		[Address(RVA = "0xCFBA38", Offset = "0xCFBA38", VA = "0xCFBA38")]
		public static extern UIntPtr ovr_UserArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x600118E")]
		[Address(RVA = "0xCFBAD8", Offset = "0xCFBAD8", VA = "0xCFBAD8")]
		public static extern bool ovr_UserArray_HasNextPage(IntPtr obj);

		[Token(Token = "0x600118F")]
		[Address(RVA = "0xCFBB80", Offset = "0xCFBB80", VA = "0xCFBB80")]
		public static string ovr_UserProof_GetNonce(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001190")]
		[Address(RVA = "0xCFBBE8", Offset = "0xCFBBE8", VA = "0xCFBBE8")]
		private static extern IntPtr ovr_UserProof_GetNonce_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001191")]
		[Address(RVA = "0xCFBC88", Offset = "0xCFBC88", VA = "0xCFBC88")]
		public static extern bool ovr_UserReportID_GetDidCancel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001192")]
		[Address(RVA = "0xCFBD30", Offset = "0xCFBD30", VA = "0xCFBD30")]
		public static extern ulong ovr_UserReportID_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001193")]
		[Address(RVA = "0xCFBDD0", Offset = "0xCFBDD0", VA = "0xCFBDD0")]
		public static extern void ovr_VoipDecoder_Decode(IntPtr obj, byte[] compressedData, UIntPtr compressedSize);

		[PreserveSig]
		[Token(Token = "0x6001194")]
		[Address(RVA = "0xCFBE90", Offset = "0xCFBE90", VA = "0xCFBE90")]
		public static extern UIntPtr ovr_VoipDecoder_GetDecodedPCM(IntPtr obj, float[] outputBuffer, UIntPtr outputBufferSize);

		[PreserveSig]
		[Token(Token = "0x6001195")]
		[Address(RVA = "0xCFBF50", Offset = "0xCFBF50", VA = "0xCFBF50")]
		public static extern void ovr_VoipEncoder_AddPCM(IntPtr obj, float[] inputData, uint inputSize);

		[PreserveSig]
		[Token(Token = "0x6001196")]
		[Address(RVA = "0xCFC010", Offset = "0xCFC010", VA = "0xCFC010")]
		public static extern UIntPtr ovr_VoipEncoder_GetCompressedData(IntPtr obj, byte[] outputBuffer, UIntPtr intputSize);

		[PreserveSig]
		[Token(Token = "0x6001197")]
		[Address(RVA = "0xCFC0D0", Offset = "0xCFC0D0", VA = "0xCFC0D0")]
		public static extern UIntPtr ovr_VoipEncoder_GetCompressedDataSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001198")]
		[Address(RVA = "0xCDBEDC", Offset = "0xCDBEDC", VA = "0xCDBEDC")]
		public static extern IntPtr ovr_AbuseReportOptions_Create();

		[PreserveSig]
		[Token(Token = "0x6001199")]
		[Address(RVA = "0xCDC2CC", Offset = "0xCDC2CC", VA = "0xCDC2CC")]
		public static extern void ovr_AbuseReportOptions_Destroy(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x600119A")]
		[Address(RVA = "0xCDBFE4", Offset = "0xCDBFE4", VA = "0xCDBFE4")]
		public static extern void ovr_AbuseReportOptions_SetPreventPeopleChooser(IntPtr handle, bool value);

		[PreserveSig]
		[Token(Token = "0x600119B")]
		[Address(RVA = "0xCDC10C", Offset = "0xCDC10C", VA = "0xCDC10C")]
		public static extern void ovr_AbuseReportOptions_SetReportType(IntPtr handle, AbuseReportType value);

		[PreserveSig]
		[Token(Token = "0x600119C")]
		[Address(RVA = "0xCDDAFC", Offset = "0xCDDAFC", VA = "0xCDDAFC")]
		public static extern IntPtr ovr_ApplicationOptions_Create();

		[PreserveSig]
		[Token(Token = "0x600119D")]
		[Address(RVA = "0xCDDD70", Offset = "0xCDDD70", VA = "0xCDDD70")]
		public static extern void ovr_ApplicationOptions_Destroy(IntPtr handle);

		[Token(Token = "0x600119E")]
		[Address(RVA = "0xCDDC04", Offset = "0xCDDC04", VA = "0xCDDC04")]
		public static void ovr_ApplicationOptions_SetDeeplinkMessage(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600119F")]
		[Address(RVA = "0xCFC170", Offset = "0xCFC170", VA = "0xCFC170")]
		private static extern void ovr_ApplicationOptions_SetDeeplinkMessage_Native(IntPtr handle, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x60011A0")]
		[Address(RVA = "0xCFC220", Offset = "0xCFC220", VA = "0xCFC220")]
		public static extern IntPtr ovr_MatchmakingOptions_Create();

		[PreserveSig]
		[Token(Token = "0x60011A1")]
		[Address(RVA = "0xCFC2B0", Offset = "0xCFC2B0", VA = "0xCFC2B0")]
		public static extern void ovr_MatchmakingOptions_Destroy(IntPtr handle);

		[Token(Token = "0x60011A2")]
		[Address(RVA = "0xCFC350", Offset = "0xCFC350", VA = "0xCFC350")]
		public static void ovr_MatchmakingOptions_SetCreateRoomDataStoreString(IntPtr handle, string key, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60011A3")]
		[Address(RVA = "0xCFC41C", Offset = "0xCFC41C", VA = "0xCFC41C")]
		private static extern void ovr_MatchmakingOptions_SetCreateRoomDataStoreString_Native(IntPtr handle, IntPtr key, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x60011A4")]
		[Address(RVA = "0xCFC4D4", Offset = "0xCFC4D4", VA = "0xCFC4D4")]
		public static extern void ovr_MatchmakingOptions_ClearCreateRoomDataStore(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x60011A5")]
		[Address(RVA = "0xCFC574", Offset = "0xCFC574", VA = "0xCFC574")]
		public static extern void ovr_MatchmakingOptions_SetCreateRoomJoinPolicy(IntPtr handle, RoomJoinPolicy value);

		[PreserveSig]
		[Token(Token = "0x60011A6")]
		[Address(RVA = "0xCFC624", Offset = "0xCFC624", VA = "0xCFC624")]
		public static extern void ovr_MatchmakingOptions_SetCreateRoomMaxUsers(IntPtr handle, uint value);

		[PreserveSig]
		[Token(Token = "0x60011A7")]
		[Address(RVA = "0xCFC6D4", Offset = "0xCFC6D4", VA = "0xCFC6D4")]
		public static extern void ovr_MatchmakingOptions_AddEnqueueAdditionalUser(IntPtr handle, ulong value);

		[PreserveSig]
		[Token(Token = "0x60011A8")]
		[Address(RVA = "0xCFC784", Offset = "0xCFC784", VA = "0xCFC784")]
		public static extern void ovr_MatchmakingOptions_ClearEnqueueAdditionalUsers(IntPtr handle);

		[Token(Token = "0x60011A9")]
		[Address(RVA = "0xCFC824", Offset = "0xCFC824", VA = "0xCFC824")]
		public static void ovr_MatchmakingOptions_SetEnqueueDataSettingsInt(IntPtr handle, string key, int value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60011AA")]
		[Address(RVA = "0xCFC8D8", Offset = "0xCFC8D8", VA = "0xCFC8D8")]
		private static extern void ovr_MatchmakingOptions_SetEnqueueDataSettingsInt_Native(IntPtr handle, IntPtr key, int value);

		[Token(Token = "0x60011AB")]
		[Address(RVA = "0xCFC990", Offset = "0xCFC990", VA = "0xCFC990")]
		public static void ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble(IntPtr handle, string key, double value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60011AC")]
		[Address(RVA = "0xCFCA4C", Offset = "0xCFCA4C", VA = "0xCFCA4C")]
		private static extern void ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble_Native(IntPtr handle, IntPtr key, double value);

		[Token(Token = "0x60011AD")]
		[Address(RVA = "0xCFCB0C", Offset = "0xCFCB0C", VA = "0xCFCB0C")]
		public static void ovr_MatchmakingOptions_SetEnqueueDataSettingsString(IntPtr handle, string key, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60011AE")]
		[Address(RVA = "0xCFCBD8", Offset = "0xCFCBD8", VA = "0xCFCBD8")]
		private static extern void ovr_MatchmakingOptions_SetEnqueueDataSettingsString_Native(IntPtr handle, IntPtr key, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x60011AF")]
		[Address(RVA = "0xCFCC90", Offset = "0xCFCC90", VA = "0xCFCC90")]
		public static extern void ovr_MatchmakingOptions_ClearEnqueueDataSettings(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x60011B0")]
		[Address(RVA = "0xCFCD30", Offset = "0xCFCD30", VA = "0xCFCD30")]
		public static extern void ovr_MatchmakingOptions_SetEnqueueIsDebug(IntPtr handle, bool value);

		[Token(Token = "0x60011B1")]
		[Address(RVA = "0xCFCDE0", Offset = "0xCFCDE0", VA = "0xCFCDE0")]
		public static void ovr_MatchmakingOptions_SetEnqueueQueryKey(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60011B2")]
		[Address(RVA = "0xCFCE8C", Offset = "0xCFCE8C", VA = "0xCFCE8C")]
		private static extern void ovr_MatchmakingOptions_SetEnqueueQueryKey_Native(IntPtr handle, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x60011B3")]
		[Address(RVA = "0xCFCF3C", Offset = "0xCFCF3C", VA = "0xCFCF3C")]
		public static extern IntPtr ovr_RoomOptions_Create();

		[PreserveSig]
		[Token(Token = "0x60011B4")]
		[Address(RVA = "0xCFCFCC", Offset = "0xCFCFCC", VA = "0xCFCFCC")]
		public static extern void ovr_RoomOptions_Destroy(IntPtr handle);

		[Token(Token = "0x60011B5")]
		[Address(RVA = "0xCFD06C", Offset = "0xCFD06C", VA = "0xCFD06C")]
		public static void ovr_RoomOptions_SetDataStoreString(IntPtr handle, string key, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60011B6")]
		[Address(RVA = "0xCFD138", Offset = "0xCFD138", VA = "0xCFD138")]
		private static extern void ovr_RoomOptions_SetDataStoreString_Native(IntPtr handle, IntPtr key, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x60011B7")]
		[Address(RVA = "0xCFD1F0", Offset = "0xCFD1F0", VA = "0xCFD1F0")]
		public static extern void ovr_RoomOptions_ClearDataStore(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x60011B8")]
		[Address(RVA = "0xCFD290", Offset = "0xCFD290", VA = "0xCFD290")]
		public static extern void ovr_RoomOptions_SetExcludeRecentlyMet(IntPtr handle, bool value);

		[PreserveSig]
		[Token(Token = "0x60011B9")]
		[Address(RVA = "0xCFD340", Offset = "0xCFD340", VA = "0xCFD340")]
		public static extern void ovr_RoomOptions_SetMaxUserResults(IntPtr handle, uint value);

		[PreserveSig]
		[Token(Token = "0x60011BA")]
		[Address(RVA = "0xCFD3F0", Offset = "0xCFD3F0", VA = "0xCFD3F0")]
		public static extern void ovr_RoomOptions_SetOrdering(IntPtr handle, UserOrdering value);

		[PreserveSig]
		[Token(Token = "0x60011BB")]
		[Address(RVA = "0xCFD4A0", Offset = "0xCFD4A0", VA = "0xCFD4A0")]
		public static extern void ovr_RoomOptions_SetRecentlyMetTimeWindow(IntPtr handle, TimeWindow value);

		[PreserveSig]
		[Token(Token = "0x60011BC")]
		[Address(RVA = "0xCFD550", Offset = "0xCFD550", VA = "0xCFD550")]
		public static extern void ovr_RoomOptions_SetRoomId(IntPtr handle, ulong value);

		[PreserveSig]
		[Token(Token = "0x60011BD")]
		[Address(RVA = "0xCFD600", Offset = "0xCFD600", VA = "0xCFD600")]
		public static extern void ovr_RoomOptions_SetTurnOffUpdates(IntPtr handle, bool value);

		[PreserveSig]
		[Token(Token = "0x60011BE")]
		[Address(RVA = "0xCFD6B0", Offset = "0xCFD6B0", VA = "0xCFD6B0")]
		public static extern IntPtr ovr_UserOptions_Create();

		[PreserveSig]
		[Token(Token = "0x60011BF")]
		[Address(RVA = "0xCFD740", Offset = "0xCFD740", VA = "0xCFD740")]
		public static extern void ovr_UserOptions_Destroy(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x60011C0")]
		[Address(RVA = "0xCFD7E0", Offset = "0xCFD7E0", VA = "0xCFD7E0")]
		public static extern void ovr_UserOptions_SetMaxUsers(IntPtr handle, uint value);

		[PreserveSig]
		[Token(Token = "0x60011C1")]
		[Address(RVA = "0xCFD890", Offset = "0xCFD890", VA = "0xCFD890")]
		public static extern void ovr_UserOptions_AddServiceProvider(IntPtr handle, ServiceProvider value);

		[PreserveSig]
		[Token(Token = "0x60011C2")]
		[Address(RVA = "0xCFD940", Offset = "0xCFD940", VA = "0xCFD940")]
		public static extern void ovr_UserOptions_ClearServiceProviders(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x60011C3")]
		[Address(RVA = "0xCFD9E0", Offset = "0xCFD9E0", VA = "0xCFD9E0")]
		public static extern void ovr_UserOptions_SetTimeWindow(IntPtr handle, TimeWindow value);

		[PreserveSig]
		[Token(Token = "0x60011C4")]
		[Address(RVA = "0xCFDA90", Offset = "0xCFDA90", VA = "0xCFDA90")]
		public static extern IntPtr ovr_VoipOptions_Create();

		[PreserveSig]
		[Token(Token = "0x60011C5")]
		[Address(RVA = "0xCFDB20", Offset = "0xCFDB20", VA = "0xCFDB20")]
		public static extern void ovr_VoipOptions_Destroy(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x60011C6")]
		[Address(RVA = "0xCFDBC0", Offset = "0xCFDBC0", VA = "0xCFDBC0")]
		public static extern void ovr_VoipOptions_SetBitrateForNewConnections(IntPtr handle, VoipBitrate value);

		[PreserveSig]
		[Token(Token = "0x60011C7")]
		[Address(RVA = "0xCFDC70", Offset = "0xCFDC70", VA = "0xCFDC70")]
		public static extern void ovr_VoipOptions_SetCreateNewConnectionUseDtx(IntPtr handle, VoipDtxState value);

		[Token(Token = "0x60011C8")]
		[Address(RVA = "0xCFDD20", Offset = "0xCFDD20", VA = "0xCFDD20")]
		public CAPI()
		{
		}
	}
	[Token(Token = "0x2000232")]
	public enum CloudStorageDataStatus
	{
		[Token(Token = "0x4000A73")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C1BF0", Offset = "0x9C1BF0")]
		Unknown,
		[Token(Token = "0x4000A74")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C1C28", Offset = "0x9C1C28")]
		InSync,
		[Token(Token = "0x4000A75")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C1C60", Offset = "0x9C1C60")]
		NeedsDownload,
		[Token(Token = "0x4000A76")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C1C98", Offset = "0x9C1C98")]
		RemoteDownloading,
		[Token(Token = "0x4000A77")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C1CD0", Offset = "0x9C1CD0")]
		NeedsUpload,
		[Token(Token = "0x4000A78")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C1D08", Offset = "0x9C1D08")]
		LocalUploading,
		[Token(Token = "0x4000A79")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C1D40", Offset = "0x9C1D40")]
		InConflict
	}
	[Token(Token = "0x2000233")]
	public enum CloudStorageUpdateStatus
	{
		[Token(Token = "0x4000A7B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C1D78", Offset = "0x9C1D78")]
		Unknown,
		[Token(Token = "0x4000A7C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C1DB0", Offset = "0x9C1DB0")]
		Ok,
		[Token(Token = "0x4000A7D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C1DE8", Offset = "0x9C1DE8")]
		BetterVersionStored,
		[Token(Token = "0x4000A7E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C1E20", Offset = "0x9C1E20")]
		ManualMergeRequired
	}
	[Token(Token = "0x2000234")]
	public interface IMicrophone
	{
		[Token(Token = "0x60011CA")]
		void Start();

		[Token(Token = "0x60011CB")]
		void Stop();

		[Token(Token = "0x60011CC")]
		float[] Update();
	}
	[Token(Token = "0x2000235")]
	public interface IVoipPCMSource
	{
		[Token(Token = "0x60011CD")]
		int GetPCM(float[] dest, int length);

		[Token(Token = "0x60011CE")]
		void SetSenderID(ulong senderID);

		[Token(Token = "0x60011CF")]
		void Update();

		[Token(Token = "0x60011D0")]
		int PeekSizeElements();
	}
	[Token(Token = "0x2000236")]
	public enum KeyValuePairType
	{
		[Token(Token = "0x4000A80")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C1E58", Offset = "0x9C1E58")]
		String,
		[Token(Token = "0x4000A81")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C1E90", Offset = "0x9C1E90")]
		Int,
		[Token(Token = "0x4000A82")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C1EC8", Offset = "0x9C1EC8")]
		Double,
		[Token(Token = "0x4000A83")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C1F00", Offset = "0x9C1F00")]
		Unknown
	}
	[Token(Token = "0x2000237")]
	public enum LaunchType
	{
		[Token(Token = "0x4000A85")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C1F38", Offset = "0x9C1F38")]
		Unknown,
		[Token(Token = "0x4000A86")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C1F70", Offset = "0x9C1F70")]
		Normal,
		[Token(Token = "0x4000A87")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C1FA8", Offset = "0x9C1FA8")]
		Invite,
		[Token(Token = "0x4000A88")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C1FE0", Offset = "0x9C1FE0")]
		Coordinated,
		[Token(Token = "0x4000A89")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C2018", Offset = "0x9C2018")]
		Deeplink
	}
	[Token(Token = "0x2000238")]
	public enum LeaderboardFilterType
	{
		[Token(Token = "0x4000A8B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C2050", Offset = "0x9C2050")]
		None,
		[Token(Token = "0x4000A8C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C2088", Offset = "0x9C2088")]
		Friends,
		[Token(Token = "0x4000A8D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C20C0", Offset = "0x9C20C0")]
		Unknown
	}
	[Token(Token = "0x2000239")]
	public enum LeaderboardStartAt
	{
		[Token(Token = "0x4000A8F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C20F8", Offset = "0x9C20F8")]
		Top,
		[Token(Token = "0x4000A90")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C2130", Offset = "0x9C2130")]
		CenteredOnViewer,
		[Token(Token = "0x4000A91")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C2168", Offset = "0x9C2168")]
		CenteredOnViewerOrTop,
		[Token(Token = "0x4000A92")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C21A0", Offset = "0x9C21A0")]
		Unknown
	}
	[Token(Token = "0x200023A")]
	public enum LivestreamingAudience
	{
		[Token(Token = "0x4000A94")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C21D8", Offset = "0x9C21D8")]
		Unknown,
		[Token(Token = "0x4000A95")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C2210", Offset = "0x9C2210")]
		Public,
		[Token(Token = "0x4000A96")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C2248", Offset = "0x9C2248")]
		Friends,
		[Token(Token = "0x4000A97")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C2280", Offset = "0x9C2280")]
		OnlyMe
	}
	[Token(Token = "0x200023B")]
	public enum LivestreamingMicrophoneStatus
	{
		[Token(Token = "0x4000A99")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C22B8", Offset = "0x9C22B8")]
		Unknown,
		[Token(Token = "0x4000A9A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C22F0", Offset = "0x9C22F0")]
		MicrophoneOn,
		[Token(Token = "0x4000A9B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C2328", Offset = "0x9C2328")]
		MicrophoneOff
	}
	[Token(Token = "0x200023C")]
	public enum LivestreamingStartStatus
	{
		[Token(Token = "0x4000A9D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C2360", Offset = "0x9C2360")]
		Success = 1,
		[Token(Token = "0x4000A9E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C2398", Offset = "0x9C2398")]
		Unknown = 0,
		[Token(Token = "0x4000A9F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C23D0", Offset = "0x9C23D0")]
		NoPackageSet = -1,
		[Token(Token = "0x4000AA0")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C2408", Offset = "0x9C2408")]
		NoFbConnect = -2,
		[Token(Token = "0x4000AA1")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C2440", Offset = "0x9C2440")]
		NoSessionId = -3,
		[Token(Token = "0x4000AA2")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C2478", Offset = "0x9C2478")]
		MissingParameters = -4
	}
	[Token(Token = "0x200023D")]
	public enum MatchmakingCriterionImportance
	{
		[Token(Token = "0x4000AA4")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C24B0", Offset = "0x9C24B0")]
		Required,
		[Token(Token = "0x4000AA5")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C24E8", Offset = "0x9C24E8")]
		High,
		[Token(Token = "0x4000AA6")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C2520", Offset = "0x9C2520")]
		Medium,
		[Token(Token = "0x4000AA7")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C2558", Offset = "0x9C2558")]
		Low,
		[Token(Token = "0x4000AA8")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C2590", Offset = "0x9C2590")]
		Unknown
	}
	[Token(Token = "0x200023E")]
	public class MatchmakingOptions
	{
		[Token(Token = "0x4000AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x60011D1")]
		[Address(RVA = "0xE91DDC", Offset = "0xE91DDC", VA = "0xE91DDC")]
		public MatchmakingOptions()
		{
		}

		[Token(Token = "0x60011D2")]
		[Address(RVA = "0xE91E54", Offset = "0xE91E54", VA = "0xE91E54")]
		public void SetCreateRoomDataStore(string key, string value)
		{
		}

		[Token(Token = "0x60011D3")]
		[Address(RVA = "0xE91ED8", Offset = "0xE91ED8", VA = "0xE91ED8")]
		public void ClearCreateRoomDataStore()
		{
		}

		[Token(Token = "0x60011D4")]
		[Address(RVA = "0xE91F44", Offset = "0xE91F44", VA = "0xE91F44")]
		public void SetCreateRoomJoinPolicy(RoomJoinPolicy value)
		{
		}

		[Token(Token = "0x60011D5")]
		[Address(RVA = "0xE91FC0", Offset = "0xE91FC0", VA = "0xE91FC0")]
		public void SetCreateRoomMaxUsers(uint value)
		{
		}

		[Token(Token = "0x60011D6")]
		[Address(RVA = "0xE9203C", Offset = "0xE9203C", VA = "0xE9203C")]
		public void AddEnqueueAdditionalUser(ulong userID)
		{
		}

		[Token(Token = "0x60011D7")]
		[Address(RVA = "0xE920B8", Offset = "0xE920B8", VA = "0xE920B8")]
		public void ClearEnqueueAdditionalUsers()
		{
		}

		[Token(Token = "0x60011D8")]
		[Address(RVA = "0xE92124", Offset = "0xE92124", VA = "0xE92124")]
		public void SetEnqueueDataSettings(string key, int value)
		{
		}

		[Token(Token = "0x60011D9")]
		[Address(RVA = "0xE921A8", Offset = "0xE921A8", VA = "0xE921A8")]
		public void SetEnqueueDataSettings(string key, double value)
		{
		}

		[Token(Token = "0x60011DA")]
		[Address(RVA = "0xE92234", Offset = "0xE92234", VA = "0xE92234")]
		public void SetEnqueueDataSettings(string key, string value)
		{
		}

		[Token(Token = "0x60011DB")]
		[Address(RVA = "0xE922B8", Offset = "0xE922B8", VA = "0xE922B8")]
		public void ClearEnqueueDataSettings()
		{
		}

		[Token(Token = "0x60011DC")]
		[Address(RVA = "0xE92324", Offset = "0xE92324", VA = "0xE92324")]
		public void SetEnqueueIsDebug(bool value)
		{
		}

		[Token(Token = "0x60011DD")]
		[Address(RVA = "0xE923A0", Offset = "0xE923A0", VA = "0xE923A0")]
		public void SetEnqueueQueryKey(string value)
		{
		}

		[Token(Token = "0x60011DE")]
		[Address(RVA = "0xE910F4", Offset = "0xE910F4", VA = "0xE910F4")]
		public static explicit operator IntPtr(MatchmakingOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60011DF")]
		[Address(RVA = "0xE9241C", Offset = "0xE9241C", VA = "0xE9241C", Slot = "1")]
		~MatchmakingOptions()
		{
		}
	}
	[Token(Token = "0x200023F")]
	public enum MatchmakingStatApproach
	{
		[Token(Token = "0x4000AAB")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C25C8", Offset = "0x9C25C8")]
		Unknown,
		[Token(Token = "0x4000AAC")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C2600", Offset = "0x9C2600")]
		Trailing,
		[Token(Token = "0x4000AAD")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C2638", Offset = "0x9C2638")]
		Swingy
	}
	[Token(Token = "0x2000240")]
	public enum MediaContentType
	{
		[Token(Token = "0x4000AAF")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C2670", Offset = "0x9C2670")]
		Unknown,
		[Token(Token = "0x4000AB0")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C26A8", Offset = "0x9C26A8")]
		Photo
	}
	[Token(Token = "0x2000241")]
	public abstract class Message<T> : Message
	{
		[Token(Token = "0x20005C9")]
		public new delegate void Callback(Message<T> message);

		[Token(Token = "0x4000AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T data;

		[Token(Token = "0x17000161")]
		public T Data
		{
			[Token(Token = "0x60011E1")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x60011E0")]
		public Message(IntPtr c_message)
		{
		}

		[Token(Token = "0x60011E2")]
		protected abstract T GetDataFromMessage(IntPtr c_message);
	}
	[Token(Token = "0x2000242")]
	public class Message
	{
		[Token(Token = "0x20005CA")]
		public delegate void Callback(Message message);

		[Token(Token = "0x20005CB")]
		public enum MessageType : uint
		{
			[Token(Token = "0x4001954")]
			Unknown = 0u,
			[Token(Token = "0x4001955")]
			Achievements_AddCount = 65495601u,
			[Token(Token = "0x4001956")]
			Achievements_AddFields = 346693929u,
			[Token(Token = "0x4001957")]
			Achievements_GetAllDefinitions = 64177549u,
			[Token(Token = "0x4001958")]
			Achievements_GetAllProgress = 1335877149u,
			[Token(Token = "0x4001959")]
			Achievements_GetDefinitionsByName = 1653670332u,
			[Token(Token = "0x400195A")]
			Achievements_GetNextAchievementDefinitionArrayPage = 712888917u,
			[Token(Token = "0x400195B")]
			Achievements_GetNextAchievementProgressArrayPage = 792913703u,
			[Token(Token = "0x400195C")]
			Achievements_GetProgressByName = 354837425u,
			[Token(Token = "0x400195D")]
			Achievements_Unlock = 1497156573u,
			[Token(Token = "0x400195E")]
			ApplicationLifecycle_GetRegisteredPIDs = 82169698u,
			[Token(Token = "0x400195F")]
			ApplicationLifecycle_GetSessionKey = 984570141u,
			[Token(Token = "0x4001960")]
			ApplicationLifecycle_RegisterSessionKey = 1303818232u,
			[Token(Token = "0x4001961")]
			Application_GetVersion = 1751583246u,
			[Token(Token = "0x4001962")]
			Application_LaunchOtherApp = 1424151032u,
			[Token(Token = "0x4001963")]
			AssetFile_Delete = 1834842246u,
			[Token(Token = "0x4001964")]
			AssetFile_DeleteById = 1525206354u,
			[Token(Token = "0x4001965")]
			AssetFile_DeleteByName = 1108001231u,
			[Token(Token = "0x4001966")]
			AssetFile_Download = 289710021u,
			[Token(Token = "0x4001967")]
			AssetFile_DownloadById = 755009938u,
			[Token(Token = "0x4001968")]
			AssetFile_DownloadByName = 1664536314u,
			[Token(Token = "0x4001969")]
			AssetFile_DownloadCancel = 134927303u,
			[Token(Token = "0x400196A")]
			AssetFile_DownloadCancelById = 1365611796u,
			[Token(Token = "0x400196B")]
			AssetFile_DownloadCancelByName = 1147858170u,
			[Token(Token = "0x400196C")]
			AssetFile_GetList = 1258057588u,
			[Token(Token = "0x400196D")]
			AssetFile_Status = 47394656u,
			[Token(Token = "0x400196E")]
			AssetFile_StatusById = 1570069816u,
			[Token(Token = "0x400196F")]
			AssetFile_StatusByName = 1104140880u,
			[Token(Token = "0x4001970")]
			CloudStorage_Delete = 685393261u,
			[Token(Token = "0x4001971")]
			CloudStorage_GetNextCloudStorageMetadataArrayPage = 1544004335u,
			[Token(Token = "0x4001972")]
			CloudStorage_Load = 1082420033u,
			[Token(Token = "0x4001973")]
			CloudStorage_LoadBucketMetadata = 1931977997u,
			[Token(Token = "0x4001974")]
			CloudStorage_LoadConflictMetadata = 1146770162u,
			[Token(Token = "0x4001975")]
			CloudStorage_LoadHandle = 845863478u,
			[Token(Token = "0x4001976")]
			CloudStorage_LoadMetadata = 65446546u,
			[Token(Token = "0x4001977")]
			CloudStorage_ResolveKeepLocal = 811109637u,
			[Token(Token = "0x4001978")]
			CloudStorage_ResolveKeepRemote = 1965400838u,
			[Token(Token = "0x4001979")]
			CloudStorage_Save = 1270570030u,
			[Token(Token = "0x400197A")]
			Entitlement_GetIsViewerEntitled = 409688241u,
			[Token(Token = "0x400197B")]
			IAP_ConsumePurchase = 532378329u,
			[Token(Token = "0x400197C")]
			IAP_GetNextProductArrayPage = 467225263u,
			[Token(Token = "0x400197D")]
			IAP_GetNextPurchaseArrayPage = 1196886677u,
			[Token(Token = "0x400197E")]
			IAP_GetProductsBySKU = 2124073717u,
			[Token(Token = "0x400197F")]
			IAP_GetViewerPurchases = 974095385u,
			[Token(Token = "0x4001980")]
			IAP_LaunchCheckoutFlow = 1067126029u,
			[Token(Token = "0x4001981")]
			LanguagePack_GetCurrent = 529592533u,
			[Token(Token = "0x4001982")]
			LanguagePack_SetCurrent = 1531952096u,
			[Token(Token = "0x4001983")]
			Leaderboard_GetEntries = 1572030284u,
			[Token(Token = "0x4001984")]
			Leaderboard_GetEntriesAfterRank = 406293487u,
			[Token(Token = "0x4001985")]
			Leaderboard_GetNextEntries = 1310751961u,
			[Token(Token = "0x4001986")]
			Leaderboard_GetPreviousEntries = 1224858304u,
			[Token(Token = "0x4001987")]
			Leaderboard_WriteEntry = 293587198u,
			[Token(Token = "0x4001988")]
			Livestreaming_GetStatus = 1218079125u,
			[Token(Token = "0x4001989")]
			Livestreaming_PauseStream = 916223619u,
			[Token(Token = "0x400198A")]
			Livestreaming_ResumeStream = 575827343u,
			[Token(Token = "0x400198B")]
			Matchmaking_Browse = 509948616u,
			[Token(Token = "0x400198C")]
			Matchmaking_Browse2 = 1715641947u,
			[Token(Token = "0x400198D")]
			Matchmaking_Cancel = 543705519u,
			[Token(Token = "0x400198E")]
			Matchmaking_Cancel2 = 285117908u,
			[Token(Token = "0x400198F")]
			Matchmaking_CreateAndEnqueueRoom = 1615617480u,
			[Token(Token = "0x4001990")]
			Matchmaking_CreateAndEnqueueRoom2 = 693889755u,
			[Token(Token = "0x4001991")]
			Matchmaking_CreateRoom = 54203178u,
			[Token(Token = "0x4001992")]
			Matchmaking_CreateRoom2 = 1231922052u,
			[Token(Token = "0x4001993")]
			Matchmaking_Enqueue = 1086418033u,
			[Token(Token = "0x4001994")]
			Matchmaking_Enqueue2 = 303174325u,
			[Token(Token = "0x4001995")]
			Matchmaking_EnqueueRoom = 1888108644u,
			[Token(Token = "0x4001996")]
			Matchmaking_EnqueueRoom2 = 1428741028u,
			[Token(Token = "0x4001997")]
			Matchmaking_GetAdminSnapshot = 1008820116u,
			[Token(Token = "0x4001998")]
			Matchmaking_GetStats = 1123849272u,
			[Token(Token = "0x4001999")]
			Matchmaking_JoinRoom = 1295177725u,
			[Token(Token = "0x400199A")]
			Matchmaking_ReportResultInsecure = 439800205u,
			[Token(Token = "0x400199B")]
			Matchmaking_StartMatch = 1154746693u,
			[Token(Token = "0x400199C")]
			Media_ShareToFacebook = 14912239u,
			[Token(Token = "0x400199D")]
			Notification_GetNextRoomInviteNotificationArrayPage = 102890359u,
			[Token(Token = "0x400199E")]
			Notification_GetRoomInvites = 1871801234u,
			[Token(Token = "0x400199F")]
			Notification_MarkAsRead = 1903319523u,
			[Token(Token = "0x40019A0")]
			Party_GetCurrent = 1200830304u,
			[Token(Token = "0x40019A1")]
			Room_CreateAndJoinPrivate = 1977017207u,
			[Token(Token = "0x40019A2")]
			Room_CreateAndJoinPrivate2 = 1513775683u,
			[Token(Token = "0x40019A3")]
			Room_Get = 1704628152u,
			[Token(Token = "0x40019A4")]
			Room_GetCurrent = 161916164u,
			[Token(Token = "0x40019A5")]
			Room_GetCurrentForUser = 234887141u,
			[Token(Token = "0x40019A6")]
			Room_GetInvitableUsers = 506615698u,
			[Token(Token = "0x40019A7")]
			Room_GetInvitableUsers2 = 1330899120u,
			[Token(Token = "0x40019A8")]
			Room_GetModeratedRooms = 159645047u,
			[Token(Token = "0x40019A9")]
			Room_GetNextRoomArrayPage = 1317239238u,
			[Token(Token = "0x40019AA")]
			Room_InviteUser = 1093266451u,
			[Token(Token = "0x40019AB")]
			Room_Join = 382373641u,
			[Token(Token = "0x40019AC")]
			Room_Join2 = 1303059522u,
			[Token(Token = "0x40019AD")]
			Room_KickUser = 1233344310u,
			[Token(Token = "0x40019AE")]
			Room_LaunchInvitableUserFlow = 843047539u,
			[Token(Token = "0x40019AF")]
			Room_Leave = 1916281973u,
			[Token(Token = "0x40019B0")]
			Room_SetDescription = 809796911u,
			[Token(Token = "0x40019B1")]
			Room_UpdateDataStore = 40779816u,
			[Token(Token = "0x40019B2")]
			Room_UpdateMembershipLockStatus = 923514796u,
			[Token(Token = "0x40019B3")]
			Room_UpdateOwner = 850803997u,
			[Token(Token = "0x40019B4")]
			Room_UpdatePrivateRoomJoinPolicy = 289473179u,
			[Token(Token = "0x40019B5")]
			User_Get = 1808768583u,
			[Token(Token = "0x40019B6")]
			User_GetAccessToken = 111696574u,
			[Token(Token = "0x40019B7")]
			User_GetLoggedInUser = 1131361373u,
			[Token(Token = "0x40019B8")]
			User_GetLoggedInUserFriends = 1484532365u,
			[Token(Token = "0x40019B9")]
			User_GetLoggedInUserFriendsAndRooms = 1585908615u,
			[Token(Token = "0x40019BA")]
			User_GetLoggedInUserRecentlyMetUsersAndRooms = 694139440u,
			[Token(Token = "0x40019BB")]
			User_GetNextUserAndRoomArrayPage = 2143146719u,
			[Token(Token = "0x40019BC")]
			User_GetNextUserArrayPage = 645723971u,
			[Token(Token = "0x40019BD")]
			User_GetOrgScopedID = 418426907u,
			[Token(Token = "0x40019BE")]
			User_GetSdkAccounts = 1733454467u,
			[Token(Token = "0x40019BF")]
			User_GetUserProof = 578880643u,
			[Token(Token = "0x40019C0")]
			User_LaunchFriendRequestFlow = 151303576u,
			[Token(Token = "0x40019C1")]
			User_LaunchProfile = 171537047u,
			[Token(Token = "0x40019C2")]
			Voip_SetSystemVoipSuppressed = 1161808298u,
			[Token(Token = "0x40019C3")]
			Notification_ApplicationLifecycle_LaunchIntentChanged = 78859427u,
			[Token(Token = "0x40019C4")]
			Notification_AssetFile_DownloadUpdate = 803015885u,
			[Token(Token = "0x40019C5")]
			Notification_Cal_FinalizeApplication = 1963741337u,
			[Token(Token = "0x40019C6")]
			Notification_Cal_ProposeApplication = 779375093u,
			[Token(Token = "0x40019C7")]
			Notification_HTTP_Transfer = 2111073839u,
			[Token(Token = "0x40019C8")]
			Notification_Livestreaming_StatusChange = 575101294u,
			[Token(Token = "0x40019C9")]
			Notification_Matchmaking_MatchFound = 197393623u,
			[Token(Token = "0x40019CA")]
			Notification_Networking_ConnectionStateChange = 1577243802u,
			[Token(Token = "0x40019CB")]
			Notification_Networking_PeerConnectRequest = 1295114959u,
			[Token(Token = "0x40019CC")]
			Notification_Networking_PingResult = 1360343058u,
			[Token(Token = "0x40019CD")]
			Notification_Party_PartyUpdate = 487688882u,
			[Token(Token = "0x40019CE")]
			Notification_Room_InviteAccepted = 1829794225u,
			[Token(Token = "0x40019CF")]
			Notification_Room_InviteReceived = 1783209300u,
			[Token(Token = "0x40019D0")]
			Notification_Room_RoomUpdate = 1626094639u,
			[Token(Token = "0x40019D1")]
			Notification_Voip_ConnectRequest = 908343318u,
			[Token(Token = "0x40019D2")]
			Notification_Voip_StateChange = 888120928u,
			[Token(Token = "0x40019D3")]
			Notification_Voip_SystemVoipState = 1490179237u,
			[Token(Token = "0x40019D4")]
			Platform_InitializeWithAccessToken = 896085803u,
			[Token(Token = "0x40019D5")]
			Platform_InitializeStandaloneOculus = 1375260172u,
			[Token(Token = "0x40019D6")]
			Platform_InitializeAndroidAsynchronous = 450037684u,
			[Token(Token = "0x40019D7")]
			Platform_InitializeWindowsAsynchronous = 1839708815u
		}

		[Token(Token = "0x20005CC")]
		internal delegate Message ExtraMessageTypesHandler(IntPtr messageHandle, MessageType message_type);

		[Token(Token = "0x4000AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private MessageType type;

		[Token(Token = "0x4000AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ulong requestID;

		[Token(Token = "0x4000AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Oculus.Platform.Models.Error error;

		[Token(Token = "0x4000AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C26E0", Offset = "0x9C26E0")]
		private static ExtraMessageTypesHandler <HandleExtraMessageTypes>k__BackingField;

		[Token(Token = "0x17000162")]
		public MessageType Type
		{
			[Token(Token = "0x60011E5")]
			[Address(RVA = "0xE8D998", Offset = "0xE8D998", VA = "0xE8D998")]
			get
			{
				return default(MessageType);
			}
		}

		[Token(Token = "0x17000163")]
		public bool IsError
		{
			[Token(Token = "0x60011E6")]
			[Address(RVA = "0xE92848", Offset = "0xE92848", VA = "0xE92848")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000164")]
		public ulong RequestID
		{
			[Token(Token = "0x60011E7")]
			[Address(RVA = "0xE8D990", Offset = "0xE8D990", VA = "0xE8D990")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x17000165")]
		internal static ExtraMessageTypesHandler HandleExtraMessageTypes
		{
			[Token(Token = "0x600122A")]
			[Address(RVA = "0xE95930", Offset = "0xE95930", VA = "0xE95930")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D1580", Offset = "0x9D1580")]
			private get
			{
				return null;
			}
			[Token(Token = "0x6001229")]
			[Address(RVA = "0xE958DC", Offset = "0xE958DC", VA = "0xE958DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D1570", Offset = "0x9D1570")]
			set
			{
			}
		}

		[Token(Token = "0x60011E3")]
		[Address(RVA = "0xE925C8", Offset = "0xE925C8", VA = "0xE925C8")]
		public Message(IntPtr c_message)
		{
		}

		[Token(Token = "0x60011E4")]
		[Address(RVA = "0xE92840", Offset = "0xE92840", VA = "0xE92840", Slot = "1")]
		~Message()
		{
		}

		[Token(Token = "0x60011E8")]
		[Address(RVA = "0xE92858", Offset = "0xE92858", VA = "0xE92858", Slot = "4")]
		public virtual Oculus.Platform.Models.Error GetError()
		{
			return null;
		}

		[Token(Token = "0x60011E9")]
		[Address(RVA = "0xE92860", Offset = "0xE92860", VA = "0xE92860", Slot = "5")]
		public virtual PingResult GetPingResult()
		{
			return null;
		}

		[Token(Token = "0x60011EA")]
		[Address(RVA = "0xE92868", Offset = "0xE92868", VA = "0xE92868", Slot = "6")]
		public virtual NetworkingPeer GetNetworkingPeer()
		{
			return null;
		}

		[Token(Token = "0x60011EB")]
		[Address(RVA = "0xE92870", Offset = "0xE92870", VA = "0xE92870", Slot = "7")]
		public virtual HttpTransferUpdate GetHttpTransferUpdate()
		{
			return null;
		}

		[Token(Token = "0x60011EC")]
		[Address(RVA = "0xE92878", Offset = "0xE92878", VA = "0xE92878", Slot = "8")]
		public virtual PlatformInitialize GetPlatformInitialize()
		{
			return null;
		}

		[Token(Token = "0x60011ED")]
		[Address(RVA = "0xE92880", Offset = "0xE92880", VA = "0xE92880", Slot = "9")]
		public virtual AbuseReportRecording GetAbuseReportRecording()
		{
			return null;
		}

		[Token(Token = "0x60011EE")]
		[Address(RVA = "0xE92888", Offset = "0xE92888", VA = "0xE92888", Slot = "10")]
		public virtual AchievementDefinitionList GetAchievementDefinitions()
		{
			return null;
		}

		[Token(Token = "0x60011EF")]
		[Address(RVA = "0xE92890", Offset = "0xE92890", VA = "0xE92890", Slot = "11")]
		public virtual AchievementProgressList GetAchievementProgressList()
		{
			return null;
		}

		[Token(Token = "0x60011F0")]
		[Address(RVA = "0xE92898", Offset = "0xE92898", VA = "0xE92898", Slot = "12")]
		public virtual AchievementUpdate GetAchievementUpdate()
		{
			return null;
		}

		[Token(Token = "0x60011F1")]
		[Address(RVA = "0xE928A0", Offset = "0xE928A0", VA = "0xE928A0", Slot = "13")]
		public virtual ApplicationVersion GetApplicationVersion()
		{
			return null;
		}

		[Token(Token = "0x60011F2")]
		[Address(RVA = "0xE928A8", Offset = "0xE928A8", VA = "0xE928A8", Slot = "14")]
		public virtual AssetDetails GetAssetDetails()
		{
			return null;
		}

		[Token(Token = "0x60011F3")]
		[Address(RVA = "0xE928B0", Offset = "0xE928B0", VA = "0xE928B0", Slot = "15")]
		public virtual AssetDetailsList GetAssetDetailsList()
		{
			return null;
		}

		[Token(Token = "0x60011F4")]
		[Address(RVA = "0xE928B8", Offset = "0xE928B8", VA = "0xE928B8", Slot = "16")]
		public virtual AssetFileDeleteResult GetAssetFileDeleteResult()
		{
			return null;
		}

		[Token(Token = "0x60011F5")]
		[Address(RVA = "0xE928C0", Offset = "0xE928C0", VA = "0xE928C0", Slot = "17")]
		public virtual AssetFileDownloadCancelResult GetAssetFileDownloadCancelResult()
		{
			return null;
		}

		[Token(Token = "0x60011F6")]
		[Address(RVA = "0xE928C8", Offset = "0xE928C8", VA = "0xE928C8", Slot = "18")]
		public virtual AssetFileDownloadResult GetAssetFileDownloadResult()
		{
			return null;
		}

		[Token(Token = "0x60011F7")]
		[Address(RVA = "0xE928D0", Offset = "0xE928D0", VA = "0xE928D0", Slot = "19")]
		public virtual AssetFileDownloadUpdate GetAssetFileDownloadUpdate()
		{
			return null;
		}

		[Token(Token = "0x60011F8")]
		[Address(RVA = "0xE928D8", Offset = "0xE928D8", VA = "0xE928D8", Slot = "20")]
		public virtual CalApplicationFinalized GetCalApplicationFinalized()
		{
			return null;
		}

		[Token(Token = "0x60011F9")]
		[Address(RVA = "0xE928E0", Offset = "0xE928E0", VA = "0xE928E0", Slot = "21")]
		public virtual CalApplicationProposed GetCalApplicationProposed()
		{
			return null;
		}

		[Token(Token = "0x60011FA")]
		[Address(RVA = "0xE928E8", Offset = "0xE928E8", VA = "0xE928E8", Slot = "22")]
		public virtual CalApplicationSuggestionList GetCalApplicationSuggestionList()
		{
			return null;
		}

		[Token(Token = "0x60011FB")]
		[Address(RVA = "0xE928F0", Offset = "0xE928F0", VA = "0xE928F0", Slot = "23")]
		public virtual CloudStorageConflictMetadata GetCloudStorageConflictMetadata()
		{
			return null;
		}

		[Token(Token = "0x60011FC")]
		[Address(RVA = "0xE928F8", Offset = "0xE928F8", VA = "0xE928F8", Slot = "24")]
		public virtual CloudStorageData GetCloudStorageData()
		{
			return null;
		}

		[Token(Token = "0x60011FD")]
		[Address(RVA = "0xE92900", Offset = "0xE92900", VA = "0xE92900", Slot = "25")]
		public virtual CloudStorageMetadata GetCloudStorageMetadata()
		{
			return null;
		}

		[Token(Token = "0x60011FE")]
		[Address(RVA = "0xE92908", Offset = "0xE92908", VA = "0xE92908", Slot = "26")]
		public virtual CloudStorageMetadataList GetCloudStorageMetadataList()
		{
			return null;
		}

		[Token(Token = "0x60011FF")]
		[Address(RVA = "0xE92910", Offset = "0xE92910", VA = "0xE92910", Slot = "27")]
		public virtual CloudStorageUpdateResponse GetCloudStorageUpdateResponse()
		{
			return null;
		}

		[Token(Token = "0x6001200")]
		[Address(RVA = "0xE92918", Offset = "0xE92918", VA = "0xE92918", Slot = "28")]
		public virtual InstalledApplicationList GetInstalledApplicationList()
		{
			return null;
		}

		[Token(Token = "0x6001201")]
		[Address(RVA = "0xE92920", Offset = "0xE92920", VA = "0xE92920", Slot = "29")]
		public virtual LaunchBlockFlowResult GetLaunchBlockFlowResult()
		{
			return null;
		}

		[Token(Token = "0x6001202")]
		[Address(RVA = "0xE92928", Offset = "0xE92928", VA = "0xE92928", Slot = "30")]
		public virtual LaunchFriendRequestFlowResult GetLaunchFriendRequestFlowResult()
		{
			return null;
		}

		[Token(Token = "0x6001203")]
		[Address(RVA = "0xE92930", Offset = "0xE92930", VA = "0xE92930", Slot = "31")]
		public virtual LaunchReportFlowResult GetLaunchReportFlowResult()
		{
			return null;
		}

		[Token(Token = "0x6001204")]
		[Address(RVA = "0xE92938", Offset = "0xE92938", VA = "0xE92938", Slot = "32")]
		public virtual LaunchUnblockFlowResult GetLaunchUnblockFlowResult()
		{
			return null;
		}

		[Token(Token = "0x6001205")]
		[Address(RVA = "0xE92940", Offset = "0xE92940", VA = "0xE92940", Slot = "33")]
		public virtual bool GetLeaderboardDidUpdate()
		{
			return default(bool);
		}

		[Token(Token = "0x6001206")]
		[Address(RVA = "0xE92948", Offset = "0xE92948", VA = "0xE92948", Slot = "34")]
		public virtual LeaderboardEntryList GetLeaderboardEntryList()
		{
			return null;
		}

		[Token(Token = "0x6001207")]
		[Address(RVA = "0xE92950", Offset = "0xE92950", VA = "0xE92950", Slot = "35")]
		public virtual LinkedAccountList GetLinkedAccountList()
		{
			return null;
		}

		[Token(Token = "0x6001208")]
		[Address(RVA = "0xE92958", Offset = "0xE92958", VA = "0xE92958", Slot = "36")]
		public virtual LivestreamingApplicationStatus GetLivestreamingApplicationStatus()
		{
			return null;
		}

		[Token(Token = "0x6001209")]
		[Address(RVA = "0xE92960", Offset = "0xE92960", VA = "0xE92960", Slot = "37")]
		public virtual LivestreamingStartResult GetLivestreamingStartResult()
		{
			return null;
		}

		[Token(Token = "0x600120A")]
		[Address(RVA = "0xE92968", Offset = "0xE92968", VA = "0xE92968", Slot = "38")]
		public virtual LivestreamingStatus GetLivestreamingStatus()
		{
			return null;
		}

		[Token(Token = "0x600120B")]
		[Address(RVA = "0xE92970", Offset = "0xE92970", VA = "0xE92970", Slot = "39")]
		public virtual LivestreamingVideoStats GetLivestreamingVideoStats()
		{
			return null;
		}

		[Token(Token = "0x600120C")]
		[Address(RVA = "0xE92978", Offset = "0xE92978", VA = "0xE92978", Slot = "40")]
		public virtual MatchmakingAdminSnapshot GetMatchmakingAdminSnapshot()
		{
			return null;
		}

		[Token(Token = "0x600120D")]
		[Address(RVA = "0xE92980", Offset = "0xE92980", VA = "0xE92980", Slot = "41")]
		public virtual MatchmakingBrowseResult GetMatchmakingBrowseResult()
		{
			return null;
		}

		[Token(Token = "0x600120E")]
		[Address(RVA = "0xE92988", Offset = "0xE92988", VA = "0xE92988", Slot = "42")]
		public virtual MatchmakingEnqueueResult GetMatchmakingEnqueueResult()
		{
			return null;
		}

		[Token(Token = "0x600120F")]
		[Address(RVA = "0xE92990", Offset = "0xE92990", VA = "0xE92990", Slot = "43")]
		public virtual MatchmakingEnqueueResultAndRoom GetMatchmakingEnqueueResultAndRoom()
		{
			return null;
		}

		[Token(Token = "0x6001210")]
		[Address(RVA = "0xE92998", Offset = "0xE92998", VA = "0xE92998", Slot = "44")]
		public virtual MatchmakingStats GetMatchmakingStats()
		{
			return null;
		}

		[Token(Token = "0x6001211")]
		[Address(RVA = "0xE929A0", Offset = "0xE929A0", VA = "0xE929A0", Slot = "45")]
		public virtual OrgScopedID GetOrgScopedID()
		{
			return null;
		}

		[Token(Token = "0x6001212")]
		[Address(RVA = "0xE929A8", Offset = "0xE929A8", VA = "0xE929A8", Slot = "46")]
		public virtual Party GetParty()
		{
			return null;
		}

		[Token(Token = "0x6001213")]
		[Address(RVA = "0xE929B0", Offset = "0xE929B0", VA = "0xE929B0", Slot = "47")]
		public virtual PartyID GetPartyID()
		{
			return null;
		}

		[Token(Token = "0x6001214")]
		[Address(RVA = "0xE929B8", Offset = "0xE929B8", VA = "0xE929B8", Slot = "48")]
		public virtual PartyUpdateNotification GetPartyUpdateNotification()
		{
			return null;
		}

		[Token(Token = "0x6001215")]
		[Address(RVA = "0xE929C0", Offset = "0xE929C0", VA = "0xE929C0", Slot = "49")]
		public virtual PidList GetPidList()
		{
			return null;
		}

		[Token(Token = "0x6001216")]
		[Address(RVA = "0xE929C8", Offset = "0xE929C8", VA = "0xE929C8", Slot = "50")]
		public virtual ProductList GetProductList()
		{
			return null;
		}

		[Token(Token = "0x6001217")]
		[Address(RVA = "0xE929D0", Offset = "0xE929D0", VA = "0xE929D0", Slot = "51")]
		public virtual Purchase GetPurchase()
		{
			return null;
		}

		[Token(Token = "0x6001218")]
		[Address(RVA = "0xE929D8", Offset = "0xE929D8", VA = "0xE929D8", Slot = "52")]
		public virtual PurchaseList GetPurchaseList()
		{
			return null;
		}

		[Token(Token = "0x6001219")]
		[Address(RVA = "0xE929E0", Offset = "0xE929E0", VA = "0xE929E0", Slot = "53")]
		public virtual Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x600121A")]
		[Address(RVA = "0xE929E8", Offset = "0xE929E8", VA = "0xE929E8", Slot = "54")]
		public virtual RoomInviteNotification GetRoomInviteNotification()
		{
			return null;
		}

		[Token(Token = "0x600121B")]
		[Address(RVA = "0xE929F0", Offset = "0xE929F0", VA = "0xE929F0", Slot = "55")]
		public virtual RoomInviteNotificationList GetRoomInviteNotificationList()
		{
			return null;
		}

		[Token(Token = "0x600121C")]
		[Address(RVA = "0xE929F8", Offset = "0xE929F8", VA = "0xE929F8", Slot = "56")]
		public virtual RoomList GetRoomList()
		{
			return null;
		}

		[Token(Token = "0x600121D")]
		[Address(RVA = "0xE92A00", Offset = "0xE92A00", VA = "0xE92A00", Slot = "57")]
		public virtual SdkAccountList GetSdkAccountList()
		{
			return null;
		}

		[Token(Token = "0x600121E")]
		[Address(RVA = "0xE92A08", Offset = "0xE92A08", VA = "0xE92A08", Slot = "58")]
		public virtual ShareMediaResult GetShareMediaResult()
		{
			return null;
		}

		[Token(Token = "0x600121F")]
		[Address(RVA = "0xE92A10", Offset = "0xE92A10", VA = "0xE92A10", Slot = "59")]
		public virtual string GetString()
		{
			return null;
		}

		[Token(Token = "0x6001220")]
		[Address(RVA = "0xE92A18", Offset = "0xE92A18", VA = "0xE92A18", Slot = "60")]
		public virtual SystemPermission GetSystemPermission()
		{
			return null;
		}

		[Token(Token = "0x6001221")]
		[Address(RVA = "0xE92A20", Offset = "0xE92A20", VA = "0xE92A20", Slot = "61")]
		public virtual SystemVoipState GetSystemVoipState()
		{
			return null;
		}

		[Token(Token = "0x6001222")]
		[Address(RVA = "0xE92A28", Offset = "0xE92A28", VA = "0xE92A28", Slot = "62")]
		public virtual User GetUser()
		{
			return null;
		}

		[Token(Token = "0x6001223")]
		[Address(RVA = "0xE92A30", Offset = "0xE92A30", VA = "0xE92A30", Slot = "63")]
		public virtual UserAndRoomList GetUserAndRoomList()
		{
			return null;
		}

		[Token(Token = "0x6001224")]
		[Address(RVA = "0xE92A38", Offset = "0xE92A38", VA = "0xE92A38", Slot = "64")]
		public virtual UserList GetUserList()
		{
			return null;
		}

		[Token(Token = "0x6001225")]
		[Address(RVA = "0xE92A40", Offset = "0xE92A40", VA = "0xE92A40", Slot = "65")]
		public virtual UserProof GetUserProof()
		{
			return null;
		}

		[Token(Token = "0x6001226")]
		[Address(RVA = "0xE92A48", Offset = "0xE92A48", VA = "0xE92A48", Slot = "66")]
		public virtual UserReportID GetUserReportID()
		{
			return null;
		}

		[Token(Token = "0x6001227")]
		[Address(RVA = "0xE92A50", Offset = "0xE92A50", VA = "0xE92A50")]
		internal static Message ParseMessageHandle(IntPtr messageHandle)
		{
			return null;
		}

		[Token(Token = "0x6001228")]
		[Address(RVA = "0xE8D4B4", Offset = "0xE8D4B4", VA = "0xE8D4B4")]
		public static Message PopMessage()
		{
			return null;
		}
	}
	[Token(Token = "0x2000243")]
	public class MessageWithAbuseReportRecording : Message<AbuseReportRecording>
	{
		[Token(Token = "0x600122B")]
		[Address(RVA = "0xE95F10", Offset = "0xE95F10", VA = "0xE95F10")]
		public MessageWithAbuseReportRecording(IntPtr c_message)
		{
		}

		[Token(Token = "0x600122C")]
		[Address(RVA = "0xE95F70", Offset = "0xE95F70", VA = "0xE95F70", Slot = "9")]
		public override AbuseReportRecording GetAbuseReportRecording()
		{
			return null;
		}

		[Token(Token = "0x600122D")]
		[Address(RVA = "0xE95FC0", Offset = "0xE95FC0", VA = "0xE95FC0", Slot = "67")]
		protected override AbuseReportRecording GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000244")]
	public class MessageWithAchievementDefinitions : Message<AchievementDefinitionList>
	{
		[Token(Token = "0x600122E")]
		[Address(RVA = "0xE93EAC", Offset = "0xE93EAC", VA = "0xE93EAC")]
		public MessageWithAchievementDefinitions(IntPtr c_message)
		{
		}

		[Token(Token = "0x600122F")]
		[Address(RVA = "0xE960E4", Offset = "0xE960E4", VA = "0xE960E4", Slot = "10")]
		public override AchievementDefinitionList GetAchievementDefinitions()
		{
			return null;
		}

		[Token(Token = "0x6001230")]
		[Address(RVA = "0xE96134", Offset = "0xE96134", VA = "0xE96134", Slot = "67")]
		protected override AchievementDefinitionList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000245")]
	public class MessageWithAchievementProgressList : Message<AchievementProgressList>
	{
		[Token(Token = "0x6001231")]
		[Address(RVA = "0xE93F0C", Offset = "0xE93F0C", VA = "0xE93F0C")]
		public MessageWithAchievementProgressList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001232")]
		[Address(RVA = "0xE963D8", Offset = "0xE963D8", VA = "0xE963D8", Slot = "11")]
		public override AchievementProgressList GetAchievementProgressList()
		{
			return null;
		}

		[Token(Token = "0x6001233")]
		[Address(RVA = "0xE96428", Offset = "0xE96428", VA = "0xE96428", Slot = "67")]
		protected override AchievementProgressList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000246")]
	public class MessageWithAchievementUpdate : Message<AchievementUpdate>
	{
		[Token(Token = "0x6001234")]
		[Address(RVA = "0xE93F6C", Offset = "0xE93F6C", VA = "0xE93F6C")]
		public MessageWithAchievementUpdate(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001235")]
		[Address(RVA = "0xE966CC", Offset = "0xE966CC", VA = "0xE966CC", Slot = "12")]
		public override AchievementUpdate GetAchievementUpdate()
		{
			return null;
		}

		[Token(Token = "0x6001236")]
		[Address(RVA = "0xE9671C", Offset = "0xE9671C", VA = "0xE9671C", Slot = "67")]
		protected override AchievementUpdate GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000247")]
	public class MessageWithApplicationVersion : Message<ApplicationVersion>
	{
		[Token(Token = "0x6001237")]
		[Address(RVA = "0xE93FCC", Offset = "0xE93FCC", VA = "0xE93FCC")]
		public MessageWithApplicationVersion(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001238")]
		[Address(RVA = "0xE96854", Offset = "0xE96854", VA = "0xE96854", Slot = "13")]
		public override ApplicationVersion GetApplicationVersion()
		{
			return null;
		}

		[Token(Token = "0x6001239")]
		[Address(RVA = "0xE968A4", Offset = "0xE968A4", VA = "0xE968A4", Slot = "67")]
		protected override ApplicationVersion GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000248")]
	public class MessageWithAssetDetails : Message<AssetDetails>
	{
		[Token(Token = "0x600123A")]
		[Address(RVA = "0xE9402C", Offset = "0xE9402C", VA = "0xE9402C")]
		public MessageWithAssetDetails(IntPtr c_message)
		{
		}

		[Token(Token = "0x600123B")]
		[Address(RVA = "0xE969F8", Offset = "0xE969F8", VA = "0xE969F8", Slot = "14")]
		public override AssetDetails GetAssetDetails()
		{
			return null;
		}

		[Token(Token = "0x600123C")]
		[Address(RVA = "0xE96A48", Offset = "0xE96A48", VA = "0xE96A48", Slot = "67")]
		protected override AssetDetails GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000249")]
	public class MessageWithAssetDetailsList : Message<AssetDetailsList>
	{
		[Token(Token = "0x600123D")]
		[Address(RVA = "0xE9408C", Offset = "0xE9408C", VA = "0xE9408C")]
		public MessageWithAssetDetailsList(IntPtr c_message)
		{
		}

		[Token(Token = "0x600123E")]
		[Address(RVA = "0xE96C00", Offset = "0xE96C00", VA = "0xE96C00", Slot = "15")]
		public override AssetDetailsList GetAssetDetailsList()
		{
			return null;
		}

		[Token(Token = "0x600123F")]
		[Address(RVA = "0xE96C50", Offset = "0xE96C50", VA = "0xE96C50", Slot = "67")]
		protected override AssetDetailsList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200024A")]
	public class MessageWithAssetFileDeleteResult : Message<AssetFileDeleteResult>
	{
		[Token(Token = "0x6001240")]
		[Address(RVA = "0xE940EC", Offset = "0xE940EC", VA = "0xE940EC")]
		public MessageWithAssetFileDeleteResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001241")]
		[Address(RVA = "0xE96EC4", Offset = "0xE96EC4", VA = "0xE96EC4", Slot = "16")]
		public override AssetFileDeleteResult GetAssetFileDeleteResult()
		{
			return null;
		}

		[Token(Token = "0x6001242")]
		[Address(RVA = "0xE96F14", Offset = "0xE96F14", VA = "0xE96F14", Slot = "67")]
		protected override AssetFileDeleteResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200024B")]
	public class MessageWithAssetFileDownloadCancelResult : Message<AssetFileDownloadCancelResult>
	{
		[Token(Token = "0x6001243")]
		[Address(RVA = "0xE9414C", Offset = "0xE9414C", VA = "0xE9414C")]
		public MessageWithAssetFileDownloadCancelResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001244")]
		[Address(RVA = "0xE9706C", Offset = "0xE9706C", VA = "0xE9706C", Slot = "17")]
		public override AssetFileDownloadCancelResult GetAssetFileDownloadCancelResult()
		{
			return null;
		}

		[Token(Token = "0x6001245")]
		[Address(RVA = "0xE970BC", Offset = "0xE970BC", VA = "0xE970BC", Slot = "67")]
		protected override AssetFileDownloadCancelResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200024C")]
	public class MessageWithAssetFileDownloadResult : Message<AssetFileDownloadResult>
	{
		[Token(Token = "0x6001246")]
		[Address(RVA = "0xE941AC", Offset = "0xE941AC", VA = "0xE941AC")]
		public MessageWithAssetFileDownloadResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001247")]
		[Address(RVA = "0xE97214", Offset = "0xE97214", VA = "0xE97214", Slot = "18")]
		public override AssetFileDownloadResult GetAssetFileDownloadResult()
		{
			return null;
		}

		[Token(Token = "0x6001248")]
		[Address(RVA = "0xE97264", Offset = "0xE97264", VA = "0xE97264", Slot = "67")]
		protected override AssetFileDownloadResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200024D")]
	public class MessageWithAssetFileDownloadUpdate : Message<AssetFileDownloadUpdate>
	{
		[Token(Token = "0x6001249")]
		[Address(RVA = "0xE9420C", Offset = "0xE9420C", VA = "0xE9420C")]
		public MessageWithAssetFileDownloadUpdate(IntPtr c_message)
		{
		}

		[Token(Token = "0x600124A")]
		[Address(RVA = "0xE97398", Offset = "0xE97398", VA = "0xE97398", Slot = "19")]
		public override AssetFileDownloadUpdate GetAssetFileDownloadUpdate()
		{
			return null;
		}

		[Token(Token = "0x600124B")]
		[Address(RVA = "0xE973E8", Offset = "0xE973E8", VA = "0xE973E8", Slot = "67")]
		protected override AssetFileDownloadUpdate GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200024E")]
	public class MessageWithCalApplicationFinalized : Message<CalApplicationFinalized>
	{
		[Token(Token = "0x600124C")]
		[Address(RVA = "0xE9426C", Offset = "0xE9426C", VA = "0xE9426C")]
		public MessageWithCalApplicationFinalized(IntPtr c_message)
		{
		}

		[Token(Token = "0x600124D")]
		[Address(RVA = "0xE97550", Offset = "0xE97550", VA = "0xE97550", Slot = "20")]
		public override CalApplicationFinalized GetCalApplicationFinalized()
		{
			return null;
		}

		[Token(Token = "0x600124E")]
		[Address(RVA = "0xE975A0", Offset = "0xE975A0", VA = "0xE975A0", Slot = "67")]
		protected override CalApplicationFinalized GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200024F")]
	public class MessageWithCalApplicationProposed : Message<CalApplicationProposed>
	{
		[Token(Token = "0x600124F")]
		[Address(RVA = "0xE942CC", Offset = "0xE942CC", VA = "0xE942CC")]
		public MessageWithCalApplicationProposed(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001250")]
		[Address(RVA = "0xE976E4", Offset = "0xE976E4", VA = "0xE976E4", Slot = "21")]
		public override CalApplicationProposed GetCalApplicationProposed()
		{
			return null;
		}

		[Token(Token = "0x6001251")]
		[Address(RVA = "0xE97734", Offset = "0xE97734", VA = "0xE97734", Slot = "67")]
		protected override CalApplicationProposed GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000250")]
	public class MessageWithCalApplicationSuggestionList : Message<CalApplicationSuggestionList>
	{
		[Token(Token = "0x6001252")]
		[Address(RVA = "0xE97858", Offset = "0xE97858", VA = "0xE97858")]
		public MessageWithCalApplicationSuggestionList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001253")]
		[Address(RVA = "0xE978B8", Offset = "0xE978B8", VA = "0xE978B8", Slot = "22")]
		public override CalApplicationSuggestionList GetCalApplicationSuggestionList()
		{
			return null;
		}

		[Token(Token = "0x6001254")]
		[Address(RVA = "0xE97908", Offset = "0xE97908", VA = "0xE97908", Slot = "67")]
		protected override CalApplicationSuggestionList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000251")]
	public class MessageWithCloudStorageConflictMetadata : Message<CloudStorageConflictMetadata>
	{
		[Token(Token = "0x6001255")]
		[Address(RVA = "0xE9432C", Offset = "0xE9432C", VA = "0xE9432C")]
		public MessageWithCloudStorageConflictMetadata(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001256")]
		[Address(RVA = "0xE97B7C", Offset = "0xE97B7C", VA = "0xE97B7C", Slot = "23")]
		public override CloudStorageConflictMetadata GetCloudStorageConflictMetadata()
		{
			return null;
		}

		[Token(Token = "0x6001257")]
		[Address(RVA = "0xE97BCC", Offset = "0xE97BCC", VA = "0xE97BCC", Slot = "67")]
		protected override CloudStorageConflictMetadata GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000252")]
	public class MessageWithCloudStorageData : Message<CloudStorageData>
	{
		[Token(Token = "0x6001258")]
		[Address(RVA = "0xE9438C", Offset = "0xE9438C", VA = "0xE9438C")]
		public MessageWithCloudStorageData(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001259")]
		[Address(RVA = "0xE97D48", Offset = "0xE97D48", VA = "0xE97D48", Slot = "24")]
		public override CloudStorageData GetCloudStorageData()
		{
			return null;
		}

		[Token(Token = "0x600125A")]
		[Address(RVA = "0xE97D98", Offset = "0xE97D98", VA = "0xE97D98", Slot = "67")]
		protected override CloudStorageData GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000253")]
	public class MessageWithCloudStorageMetadataUnderLocal : Message<CloudStorageMetadata>
	{
		[Token(Token = "0x600125B")]
		[Address(RVA = "0xE943EC", Offset = "0xE943EC", VA = "0xE943EC")]
		public MessageWithCloudStorageMetadataUnderLocal(IntPtr c_message)
		{
		}

		[Token(Token = "0x600125C")]
		[Address(RVA = "0xE981E0", Offset = "0xE981E0", VA = "0xE981E0", Slot = "25")]
		public override CloudStorageMetadata GetCloudStorageMetadata()
		{
			return null;
		}

		[Token(Token = "0x600125D")]
		[Address(RVA = "0xE98230", Offset = "0xE98230", VA = "0xE98230", Slot = "67")]
		protected override CloudStorageMetadata GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000254")]
	public class MessageWithCloudStorageMetadataList : Message<CloudStorageMetadataList>
	{
		[Token(Token = "0x600125E")]
		[Address(RVA = "0xE9444C", Offset = "0xE9444C", VA = "0xE9444C")]
		public MessageWithCloudStorageMetadataList(IntPtr c_message)
		{
		}

		[Token(Token = "0x600125F")]
		[Address(RVA = "0xE97EEC", Offset = "0xE97EEC", VA = "0xE97EEC", Slot = "26")]
		public override CloudStorageMetadataList GetCloudStorageMetadataList()
		{
			return null;
		}

		[Token(Token = "0x6001260")]
		[Address(RVA = "0xE97F3C", Offset = "0xE97F3C", VA = "0xE97F3C", Slot = "67")]
		protected override CloudStorageMetadataList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000255")]
	public class MessageWithCloudStorageUpdateResponse : Message<CloudStorageUpdateResponse>
	{
		[Token(Token = "0x6001261")]
		[Address(RVA = "0xE944AC", Offset = "0xE944AC", VA = "0xE944AC")]
		public MessageWithCloudStorageUpdateResponse(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001262")]
		[Address(RVA = "0xE983C4", Offset = "0xE983C4", VA = "0xE983C4", Slot = "27")]
		public override CloudStorageUpdateResponse GetCloudStorageUpdateResponse()
		{
			return null;
		}

		[Token(Token = "0x6001263")]
		[Address(RVA = "0xE98414", Offset = "0xE98414", VA = "0xE98414", Slot = "67")]
		protected override CloudStorageUpdateResponse GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000256")]
	public class MessageWithInstalledApplicationList : Message<InstalledApplicationList>
	{
		[Token(Token = "0x6001264")]
		[Address(RVA = "0xE9879C", Offset = "0xE9879C", VA = "0xE9879C")]
		public MessageWithInstalledApplicationList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001265")]
		[Address(RVA = "0xE987FC", Offset = "0xE987FC", VA = "0xE987FC", Slot = "28")]
		public override InstalledApplicationList GetInstalledApplicationList()
		{
			return null;
		}

		[Token(Token = "0x6001266")]
		[Address(RVA = "0xE9884C", Offset = "0xE9884C", VA = "0xE9884C", Slot = "67")]
		protected override InstalledApplicationList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000257")]
	public class MessageWithLaunchBlockFlowResult : Message<LaunchBlockFlowResult>
	{
		[Token(Token = "0x6001267")]
		[Address(RVA = "0xE98AC0", Offset = "0xE98AC0", VA = "0xE98AC0")]
		public MessageWithLaunchBlockFlowResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001268")]
		[Address(RVA = "0xE98B20", Offset = "0xE98B20", VA = "0xE98B20", Slot = "29")]
		public override LaunchBlockFlowResult GetLaunchBlockFlowResult()
		{
			return null;
		}

		[Token(Token = "0x6001269")]
		[Address(RVA = "0xE98B70", Offset = "0xE98B70", VA = "0xE98B70", Slot = "67")]
		protected override LaunchBlockFlowResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000258")]
	public class MessageWithLaunchFriendRequestFlowResult : Message<LaunchFriendRequestFlowResult>
	{
		[Token(Token = "0x600126A")]
		[Address(RVA = "0xE9450C", Offset = "0xE9450C", VA = "0xE9450C")]
		public MessageWithLaunchFriendRequestFlowResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x600126B")]
		[Address(RVA = "0xE98CAC", Offset = "0xE98CAC", VA = "0xE98CAC", Slot = "30")]
		public override LaunchFriendRequestFlowResult GetLaunchFriendRequestFlowResult()
		{
			return null;
		}

		[Token(Token = "0x600126C")]
		[Address(RVA = "0xE98CFC", Offset = "0xE98CFC", VA = "0xE98CFC", Slot = "67")]
		protected override LaunchFriendRequestFlowResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000259")]
	public class MessageWithLaunchReportFlowResult : Message<LaunchReportFlowResult>
	{
		[Token(Token = "0x600126D")]
		[Address(RVA = "0xE98E38", Offset = "0xE98E38", VA = "0xE98E38")]
		public MessageWithLaunchReportFlowResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x600126E")]
		[Address(RVA = "0xE98E98", Offset = "0xE98E98", VA = "0xE98E98", Slot = "31")]
		public override LaunchReportFlowResult GetLaunchReportFlowResult()
		{
			return null;
		}

		[Token(Token = "0x600126F")]
		[Address(RVA = "0xE98EE8", Offset = "0xE98EE8", VA = "0xE98EE8", Slot = "67")]
		protected override LaunchReportFlowResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200025A")]
	public class MessageWithLaunchUnblockFlowResult : Message<LaunchUnblockFlowResult>
	{
		[Token(Token = "0x6001270")]
		[Address(RVA = "0xE99020", Offset = "0xE99020", VA = "0xE99020")]
		public MessageWithLaunchUnblockFlowResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001271")]
		[Address(RVA = "0xE99080", Offset = "0xE99080", VA = "0xE99080", Slot = "32")]
		public override LaunchUnblockFlowResult GetLaunchUnblockFlowResult()
		{
			return null;
		}

		[Token(Token = "0x6001272")]
		[Address(RVA = "0xE990D0", Offset = "0xE990D0", VA = "0xE990D0", Slot = "67")]
		protected override LaunchUnblockFlowResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200025B")]
	public class MessageWithLeaderboardEntryList : Message<LeaderboardEntryList>
	{
		[Token(Token = "0x6001273")]
		[Address(RVA = "0xE9456C", Offset = "0xE9456C", VA = "0xE9456C")]
		public MessageWithLeaderboardEntryList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001274")]
		[Address(RVA = "0xE992D4", Offset = "0xE992D4", VA = "0xE992D4", Slot = "34")]
		public override LeaderboardEntryList GetLeaderboardEntryList()
		{
			return null;
		}

		[Token(Token = "0x6001275")]
		[Address(RVA = "0xE99324", Offset = "0xE99324", VA = "0xE99324", Slot = "67")]
		protected override LeaderboardEntryList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200025C")]
	public class MessageWithLinkedAccountList : Message<LinkedAccountList>
	{
		[Token(Token = "0x6001276")]
		[Address(RVA = "0xE995E8", Offset = "0xE995E8", VA = "0xE995E8")]
		public MessageWithLinkedAccountList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001277")]
		[Address(RVA = "0xE99648", Offset = "0xE99648", VA = "0xE99648", Slot = "35")]
		public override LinkedAccountList GetLinkedAccountList()
		{
			return null;
		}

		[Token(Token = "0x6001278")]
		[Address(RVA = "0xE99698", Offset = "0xE99698", VA = "0xE99698", Slot = "67")]
		protected override LinkedAccountList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200025D")]
	public class MessageWithLivestreamingApplicationStatus : Message<LivestreamingApplicationStatus>
	{
		[Token(Token = "0x6001279")]
		[Address(RVA = "0xE9990C", Offset = "0xE9990C", VA = "0xE9990C")]
		public MessageWithLivestreamingApplicationStatus(IntPtr c_message)
		{
		}

		[Token(Token = "0x600127A")]
		[Address(RVA = "0xE9996C", Offset = "0xE9996C", VA = "0xE9996C", Slot = "36")]
		public override LivestreamingApplicationStatus GetLivestreamingApplicationStatus()
		{
			return null;
		}

		[Token(Token = "0x600127B")]
		[Address(RVA = "0xE999BC", Offset = "0xE999BC", VA = "0xE999BC", Slot = "67")]
		protected override LivestreamingApplicationStatus GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200025E")]
	public class MessageWithLivestreamingStartResult : Message<LivestreamingStartResult>
	{
		[Token(Token = "0x600127C")]
		[Address(RVA = "0xE99AE4", Offset = "0xE99AE4", VA = "0xE99AE4")]
		public MessageWithLivestreamingStartResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x600127D")]
		[Address(RVA = "0xE99B44", Offset = "0xE99B44", VA = "0xE99B44", Slot = "37")]
		public override LivestreamingStartResult GetLivestreamingStartResult()
		{
			return null;
		}

		[Token(Token = "0x600127E")]
		[Address(RVA = "0xE99B94", Offset = "0xE99B94", VA = "0xE99B94", Slot = "67")]
		protected override LivestreamingStartResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200025F")]
	public class MessageWithLivestreamingStatus : Message<LivestreamingStatus>
	{
		[Token(Token = "0x600127F")]
		[Address(RVA = "0xE9462C", Offset = "0xE9462C", VA = "0xE9462C")]
		public MessageWithLivestreamingStatus(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001280")]
		[Address(RVA = "0xE99CB8", Offset = "0xE99CB8", VA = "0xE99CB8", Slot = "38")]
		public override LivestreamingStatus GetLivestreamingStatus()
		{
			return null;
		}

		[Token(Token = "0x6001281")]
		[Address(RVA = "0xE99D08", Offset = "0xE99D08", VA = "0xE99D08", Slot = "67")]
		protected override LivestreamingStatus GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000260")]
	public class MessageWithLivestreamingVideoStats : Message<LivestreamingVideoStats>
	{
		[Token(Token = "0x6001282")]
		[Address(RVA = "0xE99E7C", Offset = "0xE99E7C", VA = "0xE99E7C")]
		public MessageWithLivestreamingVideoStats(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001283")]
		[Address(RVA = "0xE99EDC", Offset = "0xE99EDC", VA = "0xE99EDC", Slot = "39")]
		public override LivestreamingVideoStats GetLivestreamingVideoStats()
		{
			return null;
		}

		[Token(Token = "0x6001284")]
		[Address(RVA = "0xE99F2C", Offset = "0xE99F2C", VA = "0xE99F2C", Slot = "67")]
		protected override LivestreamingVideoStats GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000261")]
	public class MessageWithMatchmakingAdminSnapshot : Message<MatchmakingAdminSnapshot>
	{
		[Token(Token = "0x6001285")]
		[Address(RVA = "0xE9468C", Offset = "0xE9468C", VA = "0xE9468C")]
		public MessageWithMatchmakingAdminSnapshot(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001286")]
		[Address(RVA = "0xE9A070", Offset = "0xE9A070", VA = "0xE9A070", Slot = "40")]
		public override MatchmakingAdminSnapshot GetMatchmakingAdminSnapshot()
		{
			return null;
		}

		[Token(Token = "0x6001287")]
		[Address(RVA = "0xE9A0C0", Offset = "0xE9A0C0", VA = "0xE9A0C0", Slot = "67")]
		protected override MatchmakingAdminSnapshot GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000262")]
	public class MessageWithMatchmakingEnqueueResult : Message<MatchmakingEnqueueResult>
	{
		[Token(Token = "0x6001288")]
		[Address(RVA = "0xE9474C", Offset = "0xE9474C", VA = "0xE9474C")]
		public MessageWithMatchmakingEnqueueResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001289")]
		[Address(RVA = "0xE9A45C", Offset = "0xE9A45C", VA = "0xE9A45C", Slot = "42")]
		public override MatchmakingEnqueueResult GetMatchmakingEnqueueResult()
		{
			return null;
		}

		[Token(Token = "0x600128A")]
		[Address(RVA = "0xE9A4AC", Offset = "0xE9A4AC", VA = "0xE9A4AC", Slot = "67")]
		protected override MatchmakingEnqueueResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000263")]
	public class MessageWithMatchmakingEnqueueResultAndRoom : Message<MatchmakingEnqueueResultAndRoom>
	{
		[Token(Token = "0x600128B")]
		[Address(RVA = "0xE947AC", Offset = "0xE947AC", VA = "0xE947AC")]
		public MessageWithMatchmakingEnqueueResultAndRoom(IntPtr c_message)
		{
		}

		[Token(Token = "0x600128C")]
		[Address(RVA = "0xE9A694", Offset = "0xE9A694", VA = "0xE9A694", Slot = "43")]
		public override MatchmakingEnqueueResultAndRoom GetMatchmakingEnqueueResultAndRoom()
		{
			return null;
		}

		[Token(Token = "0x600128D")]
		[Address(RVA = "0xE9A6E4", Offset = "0xE9A6E4", VA = "0xE9A6E4", Slot = "67")]
		protected override MatchmakingEnqueueResultAndRoom GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000264")]
	public class MessageWithMatchmakingStatsUnderMatchmakingStats : Message<MatchmakingStats>
	{
		[Token(Token = "0x600128E")]
		[Address(RVA = "0xE9480C", Offset = "0xE9480C", VA = "0xE9480C")]
		public MessageWithMatchmakingStatsUnderMatchmakingStats(IntPtr c_message)
		{
		}

		[Token(Token = "0x600128F")]
		[Address(RVA = "0xE9AC30", Offset = "0xE9AC30", VA = "0xE9AC30", Slot = "44")]
		public override MatchmakingStats GetMatchmakingStats()
		{
			return null;
		}

		[Token(Token = "0x6001290")]
		[Address(RVA = "0xE9AC80", Offset = "0xE9AC80", VA = "0xE9AC80", Slot = "67")]
		protected override MatchmakingStats GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000265")]
	public class MessageWithOrgScopedID : Message<OrgScopedID>
	{
		[Token(Token = "0x6001291")]
		[Address(RVA = "0xE9486C", Offset = "0xE9486C", VA = "0xE9486C")]
		public MessageWithOrgScopedID(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001292")]
		[Address(RVA = "0xE9AF20", Offset = "0xE9AF20", VA = "0xE9AF20", Slot = "45")]
		public override OrgScopedID GetOrgScopedID()
		{
			return null;
		}

		[Token(Token = "0x6001293")]
		[Address(RVA = "0xE9AF70", Offset = "0xE9AF70", VA = "0xE9AF70", Slot = "67")]
		protected override OrgScopedID GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000266")]
	public class MessageWithParty : Message<Party>
	{
		[Token(Token = "0x6001294")]
		[Address(RVA = "0xE9B094", Offset = "0xE9B094", VA = "0xE9B094")]
		public MessageWithParty(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001295")]
		[Address(RVA = "0xE9B0F4", Offset = "0xE9B0F4", VA = "0xE9B0F4", Slot = "46")]
		public override Party GetParty()
		{
			return null;
		}

		[Token(Token = "0x6001296")]
		[Address(RVA = "0xE9B144", Offset = "0xE9B144", VA = "0xE9B144", Slot = "67")]
		protected override Party GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000267")]
	public class MessageWithPartyUnderCurrentParty : Message<Party>
	{
		[Token(Token = "0x6001297")]
		[Address(RVA = "0xE948CC", Offset = "0xE948CC", VA = "0xE948CC")]
		public MessageWithPartyUnderCurrentParty(IntPtr c_message)
		{
		}

		[Token(Token = "0x6001298")]
		[Address(RVA = "0xE9B5D4", Offset = "0xE9B5D4", VA = "0xE9B5D4", Slot = "46")]
		public override Party GetParty()
		{
			return null;
		}

		[Token(Token = "0x6001299")]
		[Address(RVA = "0xE9B624", Offset = "0xE9B624", VA = "0xE9B624", Slot = "67")]
		protected override Party GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000268")]
	public class MessageWithPartyID : Message<PartyID>
	{
		[Token(Token = "0x600129A")]
		[Address(RVA = "0xE9B400", Offset = "0xE9B400", VA = "0xE9B400")]
		public MessageWithPartyID(IntPtr c_message)
		{
		}

		[Token(Token = "0x600129B")]
		[Address(RVA = "0xE9B460", Offset = "0xE9B460", VA = "0xE9B460", Slot = "47")]
		public override PartyID GetPartyID()
		{
			return null;
		}

		[Token(Token = "0x600129C")]
		[Address(RVA = "0xE9B4B0", Offset = "0xE9B4B0", VA = "0xE9B4B0", Slot = "67")]
		protected override PartyID GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000269")]
	public class MessageWithPartyUpdateNotification : Message<PartyUpdateNotification>
	{
		[Token(Token = "0x600129D")]
		[Address(RVA = "0xE9492C", Offset = "0xE9492C", VA = "0xE9492C")]
		public MessageWithPartyUpdateNotification(IntPtr c_message)
		{
		}

		[Token(Token = "0x600129E")]
		[Address(RVA = "0xE9B6C0", Offset = "0xE9B6C0", VA = "0xE9B6C0", Slot = "48")]
		public override PartyUpdateNotification GetPartyUpdateNotification()
		{
			return null;
		}

		[Token(Token = "0x600129F")]
		[Address(RVA = "0xE9B710", Offset = "0xE9B710", VA = "0xE9B710", Slot = "67")]
		protected override PartyUpdateNotification GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200026A")]
	public class MessageWithPidList : Message<PidList>
	{
		[Token(Token = "0x60012A0")]
		[Address(RVA = "0xE9498C", Offset = "0xE9498C", VA = "0xE9498C")]
		public MessageWithPidList(IntPtr c_message)
		{
		}

		[Token(Token = "0x60012A1")]
		[Address(RVA = "0xE9B894", Offset = "0xE9B894", VA = "0xE9B894", Slot = "49")]
		public override PidList GetPidList()
		{
			return null;
		}

		[Token(Token = "0x60012A2")]
		[Address(RVA = "0xE9B8E4", Offset = "0xE9B8E4", VA = "0xE9B8E4", Slot = "67")]
		protected override PidList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200026B")]
	public class MessageWithProductList : Message<ProductList>
	{
		[Token(Token = "0x60012A3")]
		[Address(RVA = "0xE949EC", Offset = "0xE949EC", VA = "0xE949EC")]
		public MessageWithProductList(IntPtr c_message)
		{
		}

		[Token(Token = "0x60012A4")]
		[Address(RVA = "0xE9BE78", Offset = "0xE9BE78", VA = "0xE9BE78", Slot = "50")]
		public override ProductList GetProductList()
		{
			return null;
		}

		[Token(Token = "0x60012A5")]
		[Address(RVA = "0xE9BEC8", Offset = "0xE9BEC8", VA = "0xE9BEC8", Slot = "67")]
		protected override ProductList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200026C")]
	public class MessageWithPurchase : Message<Purchase>
	{
		[Token(Token = "0x60012A6")]
		[Address(RVA = "0xE94A4C", Offset = "0xE94A4C", VA = "0xE94A4C")]
		public MessageWithPurchase(IntPtr c_message)
		{
		}

		[Token(Token = "0x60012A7")]
		[Address(RVA = "0xE9C16C", Offset = "0xE9C16C", VA = "0xE9C16C", Slot = "51")]
		public override Purchase GetPurchase()
		{
			return null;
		}

		[Token(Token = "0x60012A8")]
		[Address(RVA = "0xE9C1BC", Offset = "0xE9C1BC", VA = "0xE9C1BC", Slot = "67")]
		protected override Purchase GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200026D")]
	public class MessageWithPurchaseList : Message<PurchaseList>
	{
		[Token(Token = "0x60012A9")]
		[Address(RVA = "0xE94AAC", Offset = "0xE94AAC", VA = "0xE94AAC")]
		public MessageWithPurchaseList(IntPtr c_message)
		{
		}

		[Token(Token = "0x60012AA")]
		[Address(RVA = "0xE9C310", Offset = "0xE9C310", VA = "0xE9C310", Slot = "52")]
		public override PurchaseList GetPurchaseList()
		{
			return null;
		}

		[Token(Token = "0x60012AB")]
		[Address(RVA = "0xE9C360", Offset = "0xE9C360", VA = "0xE9C360", Slot = "67")]
		protected override PurchaseList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200026E")]
	public class MessageWithRoom : Message<Room>
	{
		[Token(Token = "0x60012AC")]
		[Address(RVA = "0xE94B0C", Offset = "0xE94B0C", VA = "0xE94B0C")]
		public MessageWithRoom(IntPtr c_message)
		{
		}

		[Token(Token = "0x60012AD")]
		[Address(RVA = "0xE9C604", Offset = "0xE9C604", VA = "0xE9C604", Slot = "53")]
		public override Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x60012AE")]
		[Address(RVA = "0xE9C654", Offset = "0xE9C654", VA = "0xE9C654", Slot = "67")]
		protected override Room GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200026F")]
	public class MessageWithRoomUnderCurrentRoom : Message<Room>
	{
		[Token(Token = "0x60012AF")]
		[Address(RVA = "0xE94B6C", Offset = "0xE94B6C", VA = "0xE94B6C")]
		public MessageWithRoomUnderCurrentRoom(IntPtr c_message)
		{
		}

		[Token(Token = "0x60012B0")]
		[Address(RVA = "0xE9CE7C", Offset = "0xE9CE7C", VA = "0xE9CE7C", Slot = "53")]
		public override Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x60012B1")]
		[Address(RVA = "0xE9CECC", Offset = "0xE9CECC", VA = "0xE9CECC", Slot = "67")]
		protected override Room GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000270")]
	public class MessageWithRoomUnderViewerRoom : Message<Room>
	{
		[Token(Token = "0x60012B2")]
		[Address(RVA = "0xE94BCC", Offset = "0xE94BCC", VA = "0xE94BCC")]
		public MessageWithRoomUnderViewerRoom(IntPtr c_message)
		{
		}

		[Token(Token = "0x60012B3")]
		[Address(RVA = "0xE9CF68", Offset = "0xE9CF68", VA = "0xE9CF68", Slot = "53")]
		public override Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x60012B4")]
		[Address(RVA = "0xE9CFB8", Offset = "0xE9CFB8", VA = "0xE9CFB8", Slot = "67")]
		protected override Room GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000271")]
	public class MessageWithRoomList : Message<RoomList>
	{
		[Token(Token = "0x60012B5")]
		[Address(RVA = "0xE94C2C", Offset = "0xE94C2C", VA = "0xE94C2C")]
		public MessageWithRoomList(IntPtr c_message)
		{
		}

		[Token(Token = "0x60012B6")]
		[Address(RVA = "0xE9CB88", Offset = "0xE9CB88", VA = "0xE9CB88", Slot = "56")]
		public override RoomList GetRoomList()
		{
			return null;
		}

		[Token(Token = "0x60012B7")]
		[Address(RVA = "0xE9CBD8", Offset = "0xE9CBD8", VA = "0xE9CBD8", Slot = "67")]
		protected override RoomList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000272")]
	public class MessageWithRoomInviteNotification : Message<RoomInviteNotification>
	{
		[Token(Token = "0x60012B8")]
		[Address(RVA = "0xE94C8C", Offset = "0xE94C8C", VA = "0xE94C8C")]
		public MessageWithRoomInviteNotification(IntPtr c_message)
		{
		}

		[Token(Token = "0x60012B9")]
		[Address(RVA = "0xE9C6F0", Offset = "0xE9C6F0", VA = "0xE9C6F0", Slot = "54")]
		public override RoomInviteNotification GetRoomInviteNotification()
		{
			return null;
		}

		[Token(Token = "0x60012BA")]
		[Address(RVA = "0xE9C740", Offset = "0xE9C740", VA = "0xE9C740", Slot = "67")]
		protected override RoomInviteNotification GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000273")]
	public class MessageWithRoomInviteNotificationList : Message<RoomInviteNotificationList>
	{
		[Token(Token = "0x60012BB")]
		[Address(RVA = "0xE94CEC", Offset = "0xE94CEC", VA = "0xE94CEC")]
		public MessageWithRoomInviteNotificationList(IntPtr c_message)
		{
		}

		[Token(Token = "0x60012BC")]
		[Address(RVA = "0xE9C894", Offset = "0xE9C894", VA = "0xE9C894", Slot = "55")]
		public override RoomInviteNotificationList GetRoomInviteNotificationList()
		{
			return null;
		}

		[Token(Token = "0x60012BD")]
		[Address(RVA = "0xE9C8E4", Offset = "0xE9C8E4", VA = "0xE9C8E4", Slot = "67")]
		protected override RoomInviteNotificationList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000274")]
	public class MessageWithSdkAccountList : Message<SdkAccountList>
	{
		[Token(Token = "0x60012BE")]
		[Address(RVA = "0xE94D4C", Offset = "0xE94D4C", VA = "0xE94D4C")]
		public MessageWithSdkAccountList(IntPtr c_message)
		{
		}

		[Token(Token = "0x60012BF")]
		[Address(RVA = "0xE9D054", Offset = "0xE9D054", VA = "0xE9D054", Slot = "57")]
		public override SdkAccountList GetSdkAccountList()
		{
			return null;
		}

		[Token(Token = "0x60012C0")]
		[Address(RVA = "0xE9D0A4", Offset = "0xE9D0A4", VA = "0xE9D0A4", Slot = "67")]
		protected override SdkAccountList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000275")]
	public class MessageWithShareMediaResult : Message<ShareMediaResult>
	{
		[Token(Token = "0x60012C1")]
		[Address(RVA = "0xE94DAC", Offset = "0xE94DAC", VA = "0xE94DAC")]
		public MessageWithShareMediaResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x60012C2")]
		[Address(RVA = "0xE9D318", Offset = "0xE9D318", VA = "0xE9D318", Slot = "58")]
		public override ShareMediaResult GetShareMediaResult()
		{
			return null;
		}

		[Token(Token = "0x60012C3")]
		[Address(RVA = "0xE9D368", Offset = "0xE9D368", VA = "0xE9D368", Slot = "67")]
		protected override ShareMediaResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000276")]
	public class MessageWithString : Message<string>
	{
		[Token(Token = "0x60012C4")]
		[Address(RVA = "0xE94E0C", Offset = "0xE94E0C", VA = "0xE94E0C")]
		public MessageWithString(IntPtr c_message)
		{
		}

		[Token(Token = "0x60012C5")]
		[Address(RVA = "0xE9D48C", Offset = "0xE9D48C", VA = "0xE9D48C", Slot = "59")]
		public override string GetString()
		{
			return null;
		}

		[Token(Token = "0x60012C6")]
		[Address(RVA = "0xE9D4DC", Offset = "0xE9D4DC", VA = "0xE9D4DC", Slot = "67")]
		protected override string GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000277")]
	public class MessageWithSystemPermission : Message<SystemPermission>
	{
		[Token(Token = "0x60012C7")]
		[Address(RVA = "0xE9D544", Offset = "0xE9D544", VA = "0xE9D544")]
		public MessageWithSystemPermission(IntPtr c_message)
		{
		}

		[Token(Token = "0x60012C8")]
		[Address(RVA = "0xE9D5A4", Offset = "0xE9D5A4", VA = "0xE9D5A4", Slot = "60")]
		public override SystemPermission GetSystemPermission()
		{
			return null;
		}

		[Token(Token = "0x60012C9")]
		[Address(RVA = "0xE9D5F4", Offset = "0xE9D5F4", VA = "0xE9D5F4", Slot = "67")]
		protected override SystemPermission GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000278")]
	public class MessageWithSystemVoipState : Message<SystemVoipState>
	{
		[Token(Token = "0x60012CA")]
		[Address(RVA = "0xE94E6C", Offset = "0xE94E6C", VA = "0xE94E6C")]
		public MessageWithSystemVoipState(IntPtr c_message)
		{
		}

		[Token(Token = "0x60012CB")]
		[Address(RVA = "0xE9D72C", Offset = "0xE9D72C", VA = "0xE9D72C", Slot = "61")]
		public override SystemVoipState GetSystemVoipState()
		{
			return null;
		}

		[Token(Token = "0x60012CC")]
		[Address(RVA = "0xE9D77C", Offset = "0xE9D77C", VA = "0xE9D77C", Slot = "67")]
		protected override SystemVoipState GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000279")]
	public class MessageWithUser : Message<User>
	{
		[Token(Token = "0x60012CD")]
		[Address(RVA = "0xE94ECC", Offset = "0xE94ECC", VA = "0xE94ECC")]
		public MessageWithUser(IntPtr c_message)
		{
		}

		[Token(Token = "0x60012CE")]
		[Address(RVA = "0xE9D8B0", Offset = "0xE9D8B0", VA = "0xE9D8B0", Slot = "62")]
		public override User GetUser()
		{
			return null;
		}

		[Token(Token = "0x60012CF")]
		[Address(RVA = "0xE9D900", Offset = "0xE9D900", VA = "0xE9D900", Slot = "67")]
		protected override User GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200027A")]
	public class MessageWithUserAndRoomList : Message<UserAndRoomList>
	{
		[Token(Token = "0x60012D0")]
		[Address(RVA = "0xE94F2C", Offset = "0xE94F2C", VA = "0xE94F2C")]
		public MessageWithUserAndRoomList(IntPtr c_message)
		{
		}

		[Token(Token = "0x60012D1")]
		[Address(RVA = "0xE9DA84", Offset = "0xE9DA84", VA = "0xE9DA84", Slot = "63")]
		public override UserAndRoomList GetUserAndRoomList()
		{
			return null;
		}

		[Token(Token = "0x60012D2")]
		[Address(RVA = "0xE9DAD4", Offset = "0xE9DAD4", VA = "0xE9DAD4", Slot = "67")]
		protected override UserAndRoomList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200027B")]
	public class MessageWithUserList : Message<UserList>
	{
		[Token(Token = "0x60012D3")]
		[Address(RVA = "0xE94F8C", Offset = "0xE94F8C", VA = "0xE94F8C")]
		public MessageWithUserList(IntPtr c_message)
		{
		}

		[Token(Token = "0x60012D4")]
		[Address(RVA = "0xE9DD78", Offset = "0xE9DD78", VA = "0xE9DD78", Slot = "64")]
		public override UserList GetUserList()
		{
			return null;
		}

		[Token(Token = "0x60012D5")]
		[Address(RVA = "0xE9DDC8", Offset = "0xE9DDC8", VA = "0xE9DDC8", Slot = "67")]
		protected override UserList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200027C")]
	public class MessageWithUserProof : Message<UserProof>
	{
		[Token(Token = "0x60012D6")]
		[Address(RVA = "0xE94FEC", Offset = "0xE94FEC", VA = "0xE94FEC")]
		public MessageWithUserProof(IntPtr c_message)
		{
		}

		[Token(Token = "0x60012D7")]
		[Address(RVA = "0xE9E06C", Offset = "0xE9E06C", VA = "0xE9E06C", Slot = "65")]
		public override UserProof GetUserProof()
		{
			return null;
		}

		[Token(Token = "0x60012D8")]
		[Address(RVA = "0xE9E0BC", Offset = "0xE9E0BC", VA = "0xE9E0BC", Slot = "67")]
		protected override UserProof GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200027D")]
	public class MessageWithUserReportID : Message<UserReportID>
	{
		[Token(Token = "0x60012D9")]
		[Address(RVA = "0xE9E1E0", Offset = "0xE9E1E0", VA = "0xE9E1E0")]
		public MessageWithUserReportID(IntPtr c_message)
		{
		}

		[Token(Token = "0x60012DA")]
		[Address(RVA = "0xE9E240", Offset = "0xE9E240", VA = "0xE9E240", Slot = "66")]
		public override UserReportID GetUserReportID()
		{
			return null;
		}

		[Token(Token = "0x60012DB")]
		[Address(RVA = "0xE9E290", Offset = "0xE9E290", VA = "0xE9E290", Slot = "67")]
		protected override UserReportID GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200027E")]
	public class MessageWithNetworkingPeer : Message<NetworkingPeer>
	{
		[Token(Token = "0x60012DC")]
		[Address(RVA = "0xE9504C", Offset = "0xE9504C", VA = "0xE9504C")]
		public MessageWithNetworkingPeer(IntPtr c_message)
		{
		}

		[Token(Token = "0x60012DD")]
		[Address(RVA = "0xE9ADD4", Offset = "0xE9ADD4", VA = "0xE9ADD4", Slot = "6")]
		public override NetworkingPeer GetNetworkingPeer()
		{
			return null;
		}

		[Token(Token = "0x60012DE")]
		[Address(RVA = "0xE9AE24", Offset = "0xE9AE24", VA = "0xE9AE24", Slot = "67")]
		protected override NetworkingPeer GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x200027F")]
	public class MessageWithPingResult : Message<PingResult>
	{
		[Token(Token = "0x60012DF")]
		[Address(RVA = "0xE950AC", Offset = "0xE950AC", VA = "0xE950AC")]
		public MessageWithPingResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x60012E0")]
		[Address(RVA = "0xE9BB58", Offset = "0xE9BB58", VA = "0xE9BB58", Slot = "5")]
		public override PingResult GetPingResult()
		{
			return null;
		}

		[Token(Token = "0x60012E1")]
		[Address(RVA = "0xE9BBA8", Offset = "0xE9BBA8", VA = "0xE9BBA8", Slot = "67")]
		protected override PingResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000280")]
	public class MessageWithLeaderboardDidUpdate : Message<bool>
	{
		[Token(Token = "0x60012E2")]
		[Address(RVA = "0xE945CC", Offset = "0xE945CC", VA = "0xE945CC")]
		public MessageWithLeaderboardDidUpdate(IntPtr c_message)
		{
		}

		[Token(Token = "0x60012E3")]
		[Address(RVA = "0xE9920C", Offset = "0xE9920C", VA = "0xE9920C", Slot = "33")]
		public override bool GetLeaderboardDidUpdate()
		{
			return default(bool);
		}

		[Token(Token = "0x60012E4")]
		[Address(RVA = "0xE9925C", Offset = "0xE9925C", VA = "0xE9925C", Slot = "67")]
		protected override bool GetDataFromMessage(IntPtr c_message)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000281")]
	public class MessageWithMatchmakingNotification : Message<Room>
	{
		[Token(Token = "0x60012E5")]
		[Address(RVA = "0xE9510C", Offset = "0xE9510C", VA = "0xE9510C")]
		public MessageWithMatchmakingNotification(IntPtr c_message)
		{
		}

		[Token(Token = "0x60012E6")]
		[Address(RVA = "0xE9A860", Offset = "0xE9A860", VA = "0xE9A860", Slot = "53")]
		public override Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x60012E7")]
		[Address(RVA = "0xE9A8B0", Offset = "0xE9A8B0", VA = "0xE9A8B0", Slot = "67")]
		protected override Room GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000282")]
	public class MessageWithMatchmakingBrowseResult : Message<MatchmakingBrowseResult>
	{
		[Token(Token = "0x60012E8")]
		[Address(RVA = "0xE946EC", Offset = "0xE946EC", VA = "0xE946EC")]
		public MessageWithMatchmakingBrowseResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x60012E9")]
		[Address(RVA = "0xE9A218", Offset = "0xE9A218", VA = "0xE9A218", Slot = "42")]
		public override MatchmakingEnqueueResult GetMatchmakingEnqueueResult()
		{
			return null;
		}

		[Token(Token = "0x60012EA")]
		[Address(RVA = "0xE9A27C", Offset = "0xE9A27C", VA = "0xE9A27C", Slot = "56")]
		public override RoomList GetRoomList()
		{
			return null;
		}

		[Token(Token = "0x60012EB")]
		[Address(RVA = "0xE9A2E0", Offset = "0xE9A2E0", VA = "0xE9A2E0", Slot = "67")]
		protected override MatchmakingBrowseResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000283")]
	public class MessageWithHttpTransferUpdate : Message<HttpTransferUpdate>
	{
		[Token(Token = "0x60012EC")]
		[Address(RVA = "0xE9516C", Offset = "0xE9516C", VA = "0xE9516C")]
		public MessageWithHttpTransferUpdate(IntPtr c_message)
		{
		}

		[Token(Token = "0x60012ED")]
		[Address(RVA = "0xE98568", Offset = "0xE98568", VA = "0xE98568", Slot = "7")]
		public override HttpTransferUpdate GetHttpTransferUpdate()
		{
			return null;
		}

		[Token(Token = "0x60012EE")]
		[Address(RVA = "0xE985B8", Offset = "0xE985B8", VA = "0xE985B8", Slot = "67")]
		protected override HttpTransferUpdate GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000284")]
	public class MessageWithPlatformInitialize : Message<PlatformInitialize>
	{
		[Token(Token = "0x60012EF")]
		[Address(RVA = "0xE951CC", Offset = "0xE951CC", VA = "0xE951CC")]
		public MessageWithPlatformInitialize(IntPtr c_message)
		{
		}

		[Token(Token = "0x60012F0")]
		[Address(RVA = "0xE9BD04", Offset = "0xE9BD04", VA = "0xE9BD04", Slot = "8")]
		public override PlatformInitialize GetPlatformInitialize()
		{
			return null;
		}

		[Token(Token = "0x60012F1")]
		[Address(RVA = "0xE9BD54", Offset = "0xE9BD54", VA = "0xE9BD54", Slot = "67")]
		protected override PlatformInitialize GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x2000285")]
	public sealed class Packet : IDisposable
	{
		[Token(Token = "0x4000AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly ulong size;

		[Token(Token = "0x4000AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly IntPtr packetHandle;

		[Token(Token = "0x17000166")]
		public ulong SenderID
		{
			[Token(Token = "0x60012F4")]
			[Address(RVA = "0xEA00F8", Offset = "0xEA00F8", VA = "0xEA00F8")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x17000167")]
		public ulong Size
		{
			[Token(Token = "0x60012F5")]
			[Address(RVA = "0xEA0164", Offset = "0xEA0164", VA = "0xEA0164")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x17000168")]
		public SendPolicy Policy
		{
			[Token(Token = "0x60012F6")]
			[Address(RVA = "0xEA016C", Offset = "0xEA016C", VA = "0xEA016C")]
			get
			{
				return default(SendPolicy);
			}
		}

		[Token(Token = "0x60012F2")]
		[Address(RVA = "0xE9F420", Offset = "0xE9F420", VA = "0xE9F420")]
		public Packet(IntPtr packetHandle)
		{
		}

		[Token(Token = "0x60012F3")]
		[Address(RVA = "0xE9FF98", Offset = "0xE9FF98", VA = "0xE9FF98")]
		public ulong ReadBytes(byte[] destination)
		{
			return default(ulong);
		}

		[Token(Token = "0x60012F7")]
		[Address(RVA = "0xEA01D8", Offset = "0xEA01D8", VA = "0xEA01D8", Slot = "1")]
		~Packet()
		{
		}

		[Token(Token = "0x60012F8")]
		[Address(RVA = "0xEA024C", Offset = "0xEA024C", VA = "0xEA024C", Slot = "4")]
		public void Dispose()
		{
		}
	}
	[Token(Token = "0x2000286")]
	public enum PartyUpdateAction
	{
		[Token(Token = "0x4000AB9")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C26F0", Offset = "0x9C26F0")]
		Unknown,
		[Token(Token = "0x4000ABA")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C2728", Offset = "0x9C2728")]
		Join,
		[Token(Token = "0x4000ABB")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C2760", Offset = "0x9C2760")]
		Leave,
		[Token(Token = "0x4000ABC")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C2798", Offset = "0x9C2798")]
		Invite,
		[Token(Token = "0x4000ABD")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C27D0", Offset = "0x9C27D0")]
		Uninvite
	}
	[Token(Token = "0x2000287")]
	public enum PeerConnectionState
	{
		[Token(Token = "0x4000ABF")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C2808", Offset = "0x9C2808")]
		Unknown,
		[Token(Token = "0x4000AC0")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C2840", Offset = "0x9C2840")]
		Connected,
		[Token(Token = "0x4000AC1")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C2878", Offset = "0x9C2878")]
		Timeout,
		[Token(Token = "0x4000AC2")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C28B0", Offset = "0x9C28B0")]
		Closed
	}
	[Token(Token = "0x2000288")]
	public enum PermissionGrantStatus
	{
		[Token(Token = "0x4000AC4")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C28E8", Offset = "0x9C28E8")]
		Unknown,
		[Token(Token = "0x4000AC5")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C2920", Offset = "0x9C2920")]
		Granted,
		[Token(Token = "0x4000AC6")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C2958", Offset = "0x9C2958")]
		Denied,
		[Token(Token = "0x4000AC7")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C2990", Offset = "0x9C2990")]
		Blocked
	}
	[Token(Token = "0x2000289")]
	public enum PermissionType
	{
		[Token(Token = "0x4000AC9")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C29C8", Offset = "0x9C29C8")]
		Unknown,
		[Token(Token = "0x4000ACA")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C2A00", Offset = "0x9C2A00")]
		Microphone,
		[Token(Token = "0x4000ACB")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C2A38", Offset = "0x9C2A38")]
		WriteExternalStorage
	}
	[Token(Token = "0x200028A")]
	public sealed class Core
	{
		[Token(Token = "0x4000ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool IsPlatformInitialized;

		[Token(Token = "0x4000ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public static bool LogMessages;

		[Token(Token = "0x60012F9")]
		[Address(RVA = "0xE8E4D0", Offset = "0xE8E4D0", VA = "0xE8E4D0")]
		public static bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x60012FA")]
		[Address(RVA = "0xE8EDB4", Offset = "0xE8EDB4", VA = "0xE8EDB4")]
		internal static void ForceInitialized()
		{
		}

		[Token(Token = "0x60012FB")]
		[Address(RVA = "0xE8EE20", Offset = "0xE8EE20", VA = "0xE8EE20")]
		private static string getAppID([Optional] string appId)
		{
			return null;
		}

		[Token(Token = "0x60012FC")]
		[Address(RVA = "0xE8F010", Offset = "0xE8F010", VA = "0xE8F010")]
		public static Request<PlatformInitialize> AsyncInitialize([Optional] string appId)
		{
			return null;
		}

		[Token(Token = "0x60012FD")]
		[Address(RVA = "0xE8F2F4", Offset = "0xE8F2F4", VA = "0xE8F2F4")]
		public static void Initialize([Optional] string appId)
		{
		}

		[Token(Token = "0x60012FE")]
		[Address(RVA = "0xE8EFE8", Offset = "0xE8EFE8", VA = "0xE8EFE8")]
		private static string GetAppIDFromConfig()
		{
			return null;
		}

		[Token(Token = "0x60012FF")]
		[Address(RVA = "0xE8F648", Offset = "0xE8F648", VA = "0xE8F648")]
		public Core()
		{
		}
	}
	[Token(Token = "0x200028B")]
	public static class ApplicationLifecycle
	{
		[Token(Token = "0x6001301")]
		[Address(RVA = "0xCDD96C", Offset = "0xCDD96C", VA = "0xCDD96C")]
		public static LaunchDetails GetLaunchDetails()
		{
			return null;
		}
	}
	[Token(Token = "0x200028C")]
	public static class Rooms
	{
		[Token(Token = "0x6001302")]
		[Address(RVA = "0xEA0DA0", Offset = "0xEA0DA0", VA = "0xEA0DA0")]
		public static Request<Room> UpdateDataStore(ulong roomID, Dictionary<string, string> data)
		{
			return null;
		}

		[Token(Token = "0x6001303")]
		[Address(RVA = "0xEA102C", Offset = "0xEA102C", VA = "0xEA102C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9D1590", Offset = "0x9D1590")]
		public static void SetRoomInviteNotificationCallback(Message<string>.Callback callback)
		{
		}

		[Token(Token = "0x6001304")]
		[Address(RVA = "0xEA10A8", Offset = "0xEA10A8", VA = "0xEA10A8")]
		public static Request<Room> CreateAndJoinPrivate(RoomJoinPolicy joinPolicy, uint maxUsers, bool subscribeToUpdates = false)
		{
			return null;
		}

		[Token(Token = "0x6001305")]
		[Address(RVA = "0xEA1190", Offset = "0xEA1190", VA = "0xEA1190")]
		public static Request<Room> CreateAndJoinPrivate2(RoomJoinPolicy joinPolicy, uint maxUsers, RoomOptions roomOptions)
		{
			return null;
		}

		[Token(Token = "0x6001306")]
		[Address(RVA = "0xEA12A4", Offset = "0xEA12A4", VA = "0xEA12A4")]
		public static Request<Room> Get(ulong roomID)
		{
			return null;
		}

		[Token(Token = "0x6001307")]
		[Address(RVA = "0xEA1374", Offset = "0xEA1374", VA = "0xEA1374")]
		public static Request<Room> GetCurrent()
		{
			return null;
		}

		[Token(Token = "0x6001308")]
		[Address(RVA = "0xEA143C", Offset = "0xEA143C", VA = "0xEA143C")]
		public static Request<Room> GetCurrentForUser(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x6001309")]
		[Address(RVA = "0xEA150C", Offset = "0xEA150C", VA = "0xEA150C")]
		public static Request<UserList> GetInvitableUsers()
		{
			return null;
		}

		[Token(Token = "0x600130A")]
		[Address(RVA = "0xEA15D4", Offset = "0xEA15D4", VA = "0xEA15D4")]
		public static Request<UserList> GetInvitableUsers2([Optional] RoomOptions roomOptions)
		{
			return null;
		}

		[Token(Token = "0x600130B")]
		[Address(RVA = "0xEA16D0", Offset = "0xEA16D0", VA = "0xEA16D0")]
		public static Request<RoomList> GetModeratedRooms()
		{
			return null;
		}

		[Token(Token = "0x600130C")]
		[Address(RVA = "0xEA1798", Offset = "0xEA1798", VA = "0xEA1798")]
		public static Request<Room> InviteUser(ulong roomID, string inviteToken)
		{
			return null;
		}

		[Token(Token = "0x600130D")]
		[Address(RVA = "0xEA1878", Offset = "0xEA1878", VA = "0xEA1878")]
		public static Request<Room> Join(ulong roomID, bool subscribeToUpdates = false)
		{
			return null;
		}

		[Token(Token = "0x600130E")]
		[Address(RVA = "0xEA1958", Offset = "0xEA1958", VA = "0xEA1958")]
		public static Request<Room> Join2(ulong roomID, RoomOptions roomOptions)
		{
			return null;
		}

		[Token(Token = "0x600130F")]
		[Address(RVA = "0xEA1A64", Offset = "0xEA1A64", VA = "0xEA1A64")]
		public static Request<Room> KickUser(ulong roomID, ulong userID, int kickDurationSeconds)
		{
			return null;
		}

		[Token(Token = "0x6001310")]
		[Address(RVA = "0xEA1B4C", Offset = "0xEA1B4C", VA = "0xEA1B4C")]
		public static Request LaunchInvitableUserFlow(ulong roomID)
		{
			return null;
		}

		[Token(Token = "0x6001311")]
		[Address(RVA = "0xEA1C14", Offset = "0xEA1C14", VA = "0xEA1C14")]
		public static Request<Room> Leave(ulong roomID)
		{
			return null;
		}

		[Token(Token = "0x6001312")]
		[Address(RVA = "0xEA1CE4", Offset = "0xEA1CE4", VA = "0xEA1CE4")]
		public static Request<Room> SetDescription(ulong roomID, string description)
		{
			return null;
		}

		[Token(Token = "0x6001313")]
		[Address(RVA = "0xEA1DC4", Offset = "0xEA1DC4", VA = "0xEA1DC4")]
		public static Request<Room> UpdateMembershipLockStatus(ulong roomID, RoomMembershipLockStatus membershipLockStatus)
		{
			return null;
		}

		[Token(Token = "0x6001314")]
		[Address(RVA = "0xEA1EA4", Offset = "0xEA1EA4", VA = "0xEA1EA4")]
		public static Request UpdateOwner(ulong roomID, ulong userID)
		{
			return null;
		}

		[Token(Token = "0x6001315")]
		[Address(RVA = "0xEA1F7C", Offset = "0xEA1F7C", VA = "0xEA1F7C")]
		public static Request<Room> UpdatePrivateRoomJoinPolicy(ulong roomID, RoomJoinPolicy newJoinPolicy)
		{
			return null;
		}

		[Token(Token = "0x6001316")]
		[Address(RVA = "0xEA1030", Offset = "0xEA1030", VA = "0xEA1030")]
		public static void SetRoomInviteAcceptedNotificationCallback(Message<string>.Callback callback)
		{
		}

		[Token(Token = "0x6001317")]
		[Address(RVA = "0xEA205C", Offset = "0xEA205C", VA = "0xEA205C")]
		public static void SetRoomInviteReceivedNotificationCallback(Message<RoomInviteNotification>.Callback callback)
		{
		}

		[Token(Token = "0x6001318")]
		[Address(RVA = "0xEA20D4", Offset = "0xEA20D4", VA = "0xEA20D4")]
		public static void SetUpdateNotificationCallback(Message<Room>.Callback callback)
		{
		}

		[Token(Token = "0x6001319")]
		[Address(RVA = "0xEA214C", Offset = "0xEA214C", VA = "0xEA214C")]
		public static Request<RoomList> GetNextRoomListPage(RoomList list)
		{
			return null;
		}
	}
	[Token(Token = "0x200028D")]
	public static class Matchmaking
	{
		[Token(Token = "0x20005CD")]
		public class CustomQuery
		{
			[Token(Token = "0x20006DF")]
			public struct Criterion
			{
				[Token(Token = "0x4001E15")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public string key;

				[Token(Token = "0x4001E16")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public MatchmakingCriterionImportance importance;

				[Token(Token = "0x4001E17")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public Dictionary<string, object> parameters;

				[Token(Token = "0x6002949")]
				[Address(RVA = "0xA85838", Offset = "0xA85838", VA = "0xA85838")]
				public Criterion(string key_, MatchmakingCriterionImportance importance_)
				{
				}
			}

			[Token(Token = "0x40019D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Dictionary<string, object> data;

			[Token(Token = "0x40019D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Criterion[] criteria;

			[Token(Token = "0x6002585")]
			[Address(RVA = "0xE90B40", Offset = "0xE90B40", VA = "0xE90B40")]
			public IntPtr ToUnmanaged()
			{
				return default(IntPtr);
			}

			[Token(Token = "0x6002586")]
			[Address(RVA = "0xE91DC4", Offset = "0xE91DC4", VA = "0xE91DC4")]
			public CustomQuery()
			{
			}
		}

		[Token(Token = "0x600131A")]
		[Address(RVA = "0xE906D8", Offset = "0xE906D8", VA = "0xE906D8")]
		public static Request ReportResultsInsecure(ulong roomID, Dictionary<string, int> data)
		{
			return null;
		}

		[Token(Token = "0x600131B")]
		[Address(RVA = "0xE90968", Offset = "0xE90968", VA = "0xE90968")]
		public static Request<MatchmakingStats> GetStats(string pool, uint maxLevel, MatchmakingStatApproach approach = MatchmakingStatApproach.Trailing)
		{
			return null;
		}

		[Token(Token = "0x600131C")]
		[Address(RVA = "0xE90A50", Offset = "0xE90A50", VA = "0xE90A50")]
		public static Request<MatchmakingBrowseResult> Browse(string pool, [Optional] CustomQuery customQueryData)
		{
			return null;
		}

		[Token(Token = "0x600131D")]
		[Address(RVA = "0xE90FE8", Offset = "0xE90FE8", VA = "0xE90FE8")]
		public static Request<MatchmakingBrowseResult> Browse2(string pool, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x600131E")]
		[Address(RVA = "0xE91144", Offset = "0xE91144", VA = "0xE91144")]
		public static Request Cancel(string pool, string requestHash)
		{
			return null;
		}

		[Token(Token = "0x600131F")]
		[Address(RVA = "0xE9121C", Offset = "0xE9121C", VA = "0xE9121C")]
		public static Request Cancel()
		{
			return null;
		}

		[Token(Token = "0x6001320")]
		[Address(RVA = "0xE912DC", Offset = "0xE912DC", VA = "0xE912DC")]
		public static Request<MatchmakingEnqueueResultAndRoom> CreateAndEnqueueRoom(string pool, uint maxUsers, bool subscribeToUpdates = false, [Optional] CustomQuery customQueryData)
		{
			return null;
		}

		[Token(Token = "0x6001321")]
		[Address(RVA = "0xE913E4", Offset = "0xE913E4", VA = "0xE913E4")]
		public static Request<MatchmakingEnqueueResultAndRoom> CreateAndEnqueueRoom2(string pool, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x6001322")]
		[Address(RVA = "0xE914F0", Offset = "0xE914F0", VA = "0xE914F0")]
		public static Request<Room> CreateRoom(string pool, uint maxUsers, bool subscribeToUpdates = false)
		{
			return null;
		}

		[Token(Token = "0x6001323")]
		[Address(RVA = "0xE915D8", Offset = "0xE915D8", VA = "0xE915D8")]
		public static Request<Room> CreateRoom2(string pool, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x6001324")]
		[Address(RVA = "0xE916E4", Offset = "0xE916E4", VA = "0xE916E4")]
		public static Request<MatchmakingEnqueueResult> Enqueue(string pool, [Optional] CustomQuery customQueryData)
		{
			return null;
		}

		[Token(Token = "0x6001325")]
		[Address(RVA = "0xE917D4", Offset = "0xE917D4", VA = "0xE917D4")]
		public static Request<MatchmakingEnqueueResult> Enqueue2(string pool, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x6001326")]
		[Address(RVA = "0xE918E0", Offset = "0xE918E0", VA = "0xE918E0")]
		public static Request<MatchmakingEnqueueResult> EnqueueRoom(ulong roomID, [Optional] CustomQuery customQueryData)
		{
			return null;
		}

		[Token(Token = "0x6001327")]
		[Address(RVA = "0xE919D0", Offset = "0xE919D0", VA = "0xE919D0")]
		public static Request<MatchmakingEnqueueResult> EnqueueRoom2(ulong roomID, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x6001328")]
		[Address(RVA = "0xE91ADC", Offset = "0xE91ADC", VA = "0xE91ADC")]
		public static Request<MatchmakingAdminSnapshot> GetAdminSnapshot()
		{
			return null;
		}

		[Token(Token = "0x6001329")]
		[Address(RVA = "0xE91BA4", Offset = "0xE91BA4", VA = "0xE91BA4")]
		public static Request<Room> JoinRoom(ulong roomID, bool subscribeToUpdates = false)
		{
			return null;
		}

		[Token(Token = "0x600132A")]
		[Address(RVA = "0xE91C84", Offset = "0xE91C84", VA = "0xE91C84")]
		public static Request StartMatch(ulong roomID)
		{
			return null;
		}

		[Token(Token = "0x600132B")]
		[Address(RVA = "0xE91D4C", Offset = "0xE91D4C", VA = "0xE91D4C")]
		public static void SetMatchFoundNotificationCallback(Message<Room>.Callback callback)
		{
		}
	}
	[Token(Token = "0x200028E")]
	public static class Net
	{
		[Token(Token = "0x600132C")]
		[Address(RVA = "0xE9F354", Offset = "0xE9F354", VA = "0xE9F354")]
		public static Packet ReadPacket()
		{
			return null;
		}

		[Token(Token = "0x600132D")]
		[Address(RVA = "0xE9F4E0", Offset = "0xE9F4E0", VA = "0xE9F4E0")]
		public static bool SendPacket(ulong userID, byte[] bytes, SendPolicy policy)
		{
			return default(bool);
		}

		[Token(Token = "0x600132E")]
		[Address(RVA = "0xE9F5E0", Offset = "0xE9F5E0", VA = "0xE9F5E0")]
		public static void Connect(ulong userID)
		{
		}

		[Token(Token = "0x600132F")]
		[Address(RVA = "0xE9F67C", Offset = "0xE9F67C", VA = "0xE9F67C")]
		public static void Accept(ulong userID)
		{
		}

		[Token(Token = "0x6001330")]
		[Address(RVA = "0xE9F718", Offset = "0xE9F718", VA = "0xE9F718")]
		public static void Close(ulong userID)
		{
		}

		[Token(Token = "0x6001331")]
		[Address(RVA = "0xE9F7B4", Offset = "0xE9F7B4", VA = "0xE9F7B4")]
		public static bool IsConnected(ulong userID)
		{
			return default(bool);
		}

		[Token(Token = "0x6001332")]
		[Address(RVA = "0xE9F854", Offset = "0xE9F854", VA = "0xE9F854")]
		public static bool SendPacketToCurrentRoom(byte[] bytes, SendPolicy policy)
		{
			return default(bool);
		}

		[Token(Token = "0x6001333")]
		[Address(RVA = "0xE9F94C", Offset = "0xE9F94C", VA = "0xE9F94C")]
		public static bool AcceptForCurrentRoom()
		{
			return default(bool);
		}

		[Token(Token = "0x6001334")]
		[Address(RVA = "0xE9F9E4", Offset = "0xE9F9E4", VA = "0xE9F9E4")]
		public static void CloseForCurrentRoom()
		{
		}

		[Token(Token = "0x6001335")]
		[Address(RVA = "0xE9FA78", Offset = "0xE9FA78", VA = "0xE9FA78")]
		public static Request<PingResult> Ping(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x6001336")]
		[Address(RVA = "0xE9FB48", Offset = "0xE9FB48", VA = "0xE9FB48")]
		public static void SetConnectionStateChangedCallback(Message<NetworkingPeer>.Callback callback)
		{
		}

		[Token(Token = "0x6001337")]
		[Address(RVA = "0xE9FBC0", Offset = "0xE9FBC0", VA = "0xE9FBC0")]
		public static void SetPeerConnectRequestCallback(Message<NetworkingPeer>.Callback callback)
		{
		}

		[Token(Token = "0x6001338")]
		[Address(RVA = "0xE9FC38", Offset = "0xE9FC38", VA = "0xE9FC38")]
		public static void SetPingResultNotificationCallback(Message<PingResult>.Callback callback)
		{
		}
	}
	[Token(Token = "0x200028F")]
	public static class Leaderboards
	{
		[Token(Token = "0x6001339")]
		[Address(RVA = "0xE8FF1C", Offset = "0xE8FF1C", VA = "0xE8FF1C")]
		public static Request<LeaderboardEntryList> GetNextEntries(LeaderboardEntryList list)
		{
			return null;
		}

		[Token(Token = "0x600133A")]
		[Address(RVA = "0xE9001C", Offset = "0xE9001C", VA = "0xE9001C")]
		public static Request<LeaderboardEntryList> GetPreviousEntries(LeaderboardEntryList list)
		{
			return null;
		}

		[Token(Token = "0x600133B")]
		[Address(RVA = "0xE9011C", Offset = "0xE9011C", VA = "0xE9011C")]
		public static Request<LeaderboardEntryList> GetEntries(string leaderboardName, int limit, LeaderboardFilterType filter, LeaderboardStartAt startAt)
		{
			return null;
		}

		[Token(Token = "0x600133C")]
		[Address(RVA = "0xE90214", Offset = "0xE90214", VA = "0xE90214")]
		public static Request<LeaderboardEntryList> GetEntriesAfterRank(string leaderboardName, int limit, ulong afterRank)
		{
			return null;
		}

		[Token(Token = "0x600133D")]
		[Address(RVA = "0xE902FC", Offset = "0xE902FC", VA = "0xE902FC")]
		public static Request<bool> WriteEntry(string leaderboardName, long score, [Optional] byte[] extraData, bool forceUpdate = false)
		{
			return null;
		}
	}
	[Token(Token = "0x2000290")]
	public static class Voip
	{
		[Token(Token = "0x600133E")]
		[Address(RVA = "0x117857C", Offset = "0x117857C", VA = "0x117857C")]
		public static void Start(ulong userID)
		{
		}

		[Token(Token = "0x600133F")]
		[Address(RVA = "0x11788E8", Offset = "0x11788E8", VA = "0x11788E8")]
		public static void Accept(ulong userID)
		{
		}

		[Token(Token = "0x6001340")]
		[Address(RVA = "0x117861C", Offset = "0x117861C", VA = "0x117861C")]
		public static void Stop(ulong userID)
		{
		}

		[Token(Token = "0x6001341")]
		[Address(RVA = "0x117A27C", Offset = "0x117A27C", VA = "0x117A27C")]
		public static void SetMicrophoneFilterCallback(CAPI.FilterCallback callback)
		{
		}

		[Token(Token = "0x6001342")]
		[Address(RVA = "0x117A354", Offset = "0x117A354", VA = "0x117A354")]
		public static void SetMicrophoneMuted(VoipMuteState state)
		{
		}

		[Token(Token = "0x6001343")]
		[Address(RVA = "0x117A3F4", Offset = "0x117A3F4", VA = "0x117A3F4")]
		public static VoipMuteState GetSystemVoipMicrophoneMuted()
		{
			return default(VoipMuteState);
		}

		[Token(Token = "0x6001344")]
		[Address(RVA = "0x117A490", Offset = "0x117A490", VA = "0x117A490")]
		public static SystemVoipStatus GetSystemVoipStatus()
		{
			return default(SystemVoipStatus);
		}

		[Token(Token = "0x6001345")]
		[Address(RVA = "0x117A52C", Offset = "0x117A52C", VA = "0x117A52C")]
		public static VoipDtxState GetIsConnectionUsingDtx(ulong peerID)
		{
			return default(VoipDtxState);
		}

		[Token(Token = "0x6001346")]
		[Address(RVA = "0x117A5D0", Offset = "0x117A5D0", VA = "0x117A5D0")]
		public static VoipBitrate GetLocalBitrate(ulong peerID)
		{
			return default(VoipBitrate);
		}

		[Token(Token = "0x6001347")]
		[Address(RVA = "0x117A674", Offset = "0x117A674", VA = "0x117A674")]
		public static VoipBitrate GetRemoteBitrate(ulong peerID)
		{
			return default(VoipBitrate);
		}

		[Token(Token = "0x6001348")]
		[Address(RVA = "0x117A718", Offset = "0x117A718", VA = "0x117A718")]
		public static void SetNewConnectionOptions(VoipOptions voipOptions)
		{
		}

		[Token(Token = "0x6001349")]
		[Address(RVA = "0x117A834", Offset = "0x117A834", VA = "0x117A834")]
		public static Request<SystemVoipState> SetSystemVoipSuppressed(bool suppressed)
		{
			return null;
		}

		[Token(Token = "0x600134A")]
		[Address(RVA = "0x11783C4", Offset = "0x11783C4", VA = "0x11783C4")]
		public static void SetVoipConnectRequestCallback(Message<NetworkingPeer>.Callback callback)
		{
		}

		[Token(Token = "0x600134B")]
		[Address(RVA = "0x117843C", Offset = "0x117843C", VA = "0x117843C")]
		public static void SetVoipStateChangeCallback(Message<NetworkingPeer>.Callback callback)
		{
		}

		[Token(Token = "0x600134C")]
		[Address(RVA = "0x117A904", Offset = "0x117A904", VA = "0x117A904")]
		public static void SetSystemVoipStateNotificationCallback(Message<SystemVoipState>.Callback callback)
		{
		}
	}
	[Token(Token = "0x2000291")]
	public static class Achievements
	{
		[Token(Token = "0x600134D")]
		[Address(RVA = "0xCDC36C", Offset = "0xCDC36C", VA = "0xCDC36C")]
		public static Request<AchievementUpdate> AddCount(string name, ulong count)
		{
			return null;
		}

		[Token(Token = "0x600134E")]
		[Address(RVA = "0xCDC500", Offset = "0xCDC500", VA = "0xCDC500")]
		public static Request<AchievementUpdate> AddFields(string name, string fields)
		{
			return null;
		}

		[Token(Token = "0x600134F")]
		[Address(RVA = "0xCDC6B0", Offset = "0xCDC6B0", VA = "0xCDC6B0")]
		public static Request<AchievementDefinitionList> GetAllDefinitions()
		{
			return null;
		}

		[Token(Token = "0x6001350")]
		[Address(RVA = "0xCDC804", Offset = "0xCDC804", VA = "0xCDC804")]
		public static Request<AchievementProgressList> GetAllProgress()
		{
			return null;
		}

		[Token(Token = "0x6001351")]
		[Address(RVA = "0xCDC958", Offset = "0xCDC958", VA = "0xCDC958")]
		public static Request<AchievementDefinitionList> GetDefinitionsByName(string[] names)
		{
			return null;
		}

		[Token(Token = "0x6001352")]
		[Address(RVA = "0xCDCBA8", Offset = "0xCDCBA8", VA = "0xCDCBA8")]
		public static Request<AchievementProgressList> GetProgressByName(string[] names)
		{
			return null;
		}

		[Token(Token = "0x6001353")]
		[Address(RVA = "0xCDCDF8", Offset = "0xCDCDF8", VA = "0xCDCDF8")]
		public static Request<AchievementUpdate> Unlock(string name)
		{
			return null;
		}

		[Token(Token = "0x6001354")]
		[Address(RVA = "0xCDCF6C", Offset = "0xCDCF6C", VA = "0xCDCF6C")]
		public static Request<AchievementDefinitionList> GetNextAchievementDefinitionListPage(AchievementDefinitionList list)
		{
			return null;
		}

		[Token(Token = "0x6001355")]
		[Address(RVA = "0xCDD190", Offset = "0xCDD190", VA = "0xCDD190")]
		public static Request<AchievementProgressList> GetNextAchievementProgressListPage(AchievementProgressList list)
		{
			return null;
		}
	}
	[Token(Token = "0x2000292")]
	public static class Application
	{
		[Token(Token = "0x6001356")]
		[Address(RVA = "0xCDD610", Offset = "0xCDD610", VA = "0xCDD610")]
		public static Request<ApplicationVersion> GetVersion()
		{
			return null;
		}

		[Token(Token = "0x6001357")]
		[Address(RVA = "0xCDD764", Offset = "0xCDD764", VA = "0xCDD764")]
		public static Request<string> LaunchOtherApp(ulong appID, [Optional] ApplicationOptions deeplink_options)
		{
			return null;
		}
	}
	[Token(Token = "0x2000293")]
	public static class AssetFile
	{
		[Token(Token = "0x6001358")]
		[Address(RVA = "0xCDDE10", Offset = "0xCDDE10", VA = "0xCDDE10")]
		public static Request<AssetFileDeleteResult> Delete(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6001359")]
		[Address(RVA = "0xCDDF7C", Offset = "0xCDDF7C", VA = "0xCDDF7C")]
		public static Request<AssetFileDeleteResult> DeleteById(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x600135A")]
		[Address(RVA = "0xCDE0E8", Offset = "0xCDE0E8", VA = "0xCDE0E8")]
		public static Request<AssetFileDeleteResult> DeleteByName(string assetFileName)
		{
			return null;
		}

		[Token(Token = "0x600135B")]
		[Address(RVA = "0xCDE25C", Offset = "0xCDE25C", VA = "0xCDE25C")]
		public static Request<AssetFileDownloadResult> Download(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x600135C")]
		[Address(RVA = "0xCDE3C8", Offset = "0xCDE3C8", VA = "0xCDE3C8")]
		public static Request<AssetFileDownloadResult> DownloadById(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x600135D")]
		[Address(RVA = "0xCDE534", Offset = "0xCDE534", VA = "0xCDE534")]
		public static Request<AssetFileDownloadResult> DownloadByName(string assetFileName)
		{
			return null;
		}

		[Token(Token = "0x600135E")]
		[Address(RVA = "0xCDE6A8", Offset = "0xCDE6A8", VA = "0xCDE6A8")]
		public static Request<AssetFileDownloadCancelResult> DownloadCancel(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x600135F")]
		[Address(RVA = "0xCDE814", Offset = "0xCDE814", VA = "0xCDE814")]
		public static Request<AssetFileDownloadCancelResult> DownloadCancelById(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6001360")]
		[Address(RVA = "0xCDE980", Offset = "0xCDE980", VA = "0xCDE980")]
		public static Request<AssetFileDownloadCancelResult> DownloadCancelByName(string assetFileName)
		{
			return null;
		}

		[Token(Token = "0x6001361")]
		[Address(RVA = "0xCDEAF4", Offset = "0xCDEAF4", VA = "0xCDEAF4")]
		public static Request<AssetDetailsList> GetList()
		{
			return null;
		}

		[Token(Token = "0x6001362")]
		[Address(RVA = "0xCDEC48", Offset = "0xCDEC48", VA = "0xCDEC48")]
		public static Request<AssetDetails> Status(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6001363")]
		[Address(RVA = "0xCDEDB4", Offset = "0xCDEDB4", VA = "0xCDEDB4")]
		public static Request<AssetDetails> StatusById(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6001364")]
		[Address(RVA = "0xCDEF20", Offset = "0xCDEF20", VA = "0xCDEF20")]
		public static Request<AssetDetails> StatusByName(string assetFileName)
		{
			return null;
		}

		[Token(Token = "0x6001365")]
		[Address(RVA = "0xCDF094", Offset = "0xCDF094", VA = "0xCDF094")]
		public static void SetDownloadUpdateNotificationCallback(Message<AssetFileDownloadUpdate>.Callback callback)
		{
		}
	}
	[Token(Token = "0x2000294")]
	public static class Avatar
	{
	}
	[Token(Token = "0x2000295")]
	public static class Cal
	{
	}
	[Token(Token = "0x2000296")]
	public static class CloudStorage
	{
		[Token(Token = "0x6001366")]
		[Address(RVA = "0xE8E3F0", Offset = "0xE8E3F0", VA = "0xE8E3F0")]
		public static Request<CloudStorageUpdateResponse> Delete(string bucket, string key)
		{
			return null;
		}

		[Token(Token = "0x6001367")]
		[Address(RVA = "0xE8E538", Offset = "0xE8E538", VA = "0xE8E538")]
		public static Request<CloudStorageData> Load(string bucket, string key)
		{
			return null;
		}

		[Token(Token = "0x6001368")]
		[Address(RVA = "0xE8E618", Offset = "0xE8E618", VA = "0xE8E618")]
		public static Request<CloudStorageMetadataList> LoadBucketMetadata(string bucket)
		{
			return null;
		}

		[Token(Token = "0x6001369")]
		[Address(RVA = "0xE8E6E8", Offset = "0xE8E6E8", VA = "0xE8E6E8")]
		public static Request<CloudStorageConflictMetadata> LoadConflictMetadata(string bucket, string key)
		{
			return null;
		}

		[Token(Token = "0x600136A")]
		[Address(RVA = "0xE8E7C8", Offset = "0xE8E7C8", VA = "0xE8E7C8")]
		public static Request<CloudStorageData> LoadHandle(string handle)
		{
			return null;
		}

		[Token(Token = "0x600136B")]
		[Address(RVA = "0xE8E898", Offset = "0xE8E898", VA = "0xE8E898")]
		public static Request<CloudStorageMetadata> LoadMetadata(string bucket, string key)
		{
			return null;
		}

		[Token(Token = "0x600136C")]
		[Address(RVA = "0xE8E978", Offset = "0xE8E978", VA = "0xE8E978")]
		public static Request<CloudStorageUpdateResponse> ResolveKeepLocal(string bucket, string key, string remoteHandle)
		{
			return null;
		}

		[Token(Token = "0x600136D")]
		[Address(RVA = "0xE8EA60", Offset = "0xE8EA60", VA = "0xE8EA60")]
		public static Request<CloudStorageUpdateResponse> ResolveKeepRemote(string bucket, string key, string remoteHandle)
		{
			return null;
		}

		[Token(Token = "0x600136E")]
		[Address(RVA = "0xE8EB48", Offset = "0xE8EB48", VA = "0xE8EB48")]
		public static Request<CloudStorageUpdateResponse> Save(string bucket, string key, byte[] data, long counter, string extraData)
		{
			return null;
		}

		[Token(Token = "0x600136F")]
		[Address(RVA = "0xE8EC5C", Offset = "0xE8EC5C", VA = "0xE8EC5C")]
		public static Request<CloudStorageMetadataList> GetNextCloudStorageMetadataListPage(CloudStorageMetadataList list)
		{
			return null;
		}
	}
	[Token(Token = "0x2000297")]
	public static class CloudStorage2
	{
	}
	[Token(Token = "0x2000298")]
	public static class Entitlements
	{
		[Token(Token = "0x6001370")]
		[Address(RVA = "0xE8F654", Offset = "0xE8F654", VA = "0xE8F654")]
		public static Request IsUserEntitledToApplication()
		{
			return null;
		}
	}
	[Token(Token = "0x2000299")]
	public static class GraphAPI
	{
	}
	[Token(Token = "0x200029A")]
	public static class HTTP
	{
	}
	[Token(Token = "0x200029B")]
	public static class IAP
	{
		[Token(Token = "0x6001371")]
		[Address(RVA = "0xE8F740", Offset = "0xE8F740", VA = "0xE8F740")]
		public static Request ConsumePurchase(string sku)
		{
			return null;
		}

		[Token(Token = "0x6001372")]
		[Address(RVA = "0xE8F808", Offset = "0xE8F808", VA = "0xE8F808")]
		public static Request<ProductList> GetProductsBySKU(string[] skus)
		{
			return null;
		}

		[Token(Token = "0x6001373")]
		[Address(RVA = "0xE8F8EC", Offset = "0xE8F8EC", VA = "0xE8F8EC")]
		public static Request<PurchaseList> GetViewerPurchases()
		{
			return null;
		}

		[Token(Token = "0x6001374")]
		[Address(RVA = "0xE8F9B4", Offset = "0xE8F9B4", VA = "0xE8F9B4")]
		public static Request<Purchase> LaunchCheckoutFlow(string sku)
		{
			return null;
		}

		[Token(Token = "0x6001375")]
		[Address(RVA = "0xE8FAD4", Offset = "0xE8FAD4", VA = "0xE8FAD4")]
		public static Request<ProductList> GetNextProductListPage(ProductList list)
		{
			return null;
		}

		[Token(Token = "0x6001376")]
		[Address(RVA = "0xE8FC2C", Offset = "0xE8FC2C", VA = "0xE8FC2C")]
		public static Request<PurchaseList> GetNextPurchaseListPage(PurchaseList list)
		{
			return null;
		}
	}
	[Token(Token = "0x200029C")]
	public static class LanguagePack
	{
		[Token(Token = "0x6001377")]
		[Address(RVA = "0xE8FD84", Offset = "0xE8FD84", VA = "0xE8FD84")]
		public static Request<AssetDetails> GetCurrent()
		{
			return null;
		}

		[Token(Token = "0x6001378")]
		[Address(RVA = "0xE8FE4C", Offset = "0xE8FE4C", VA = "0xE8FE4C")]
		public static Request<AssetFileDownloadResult> SetCurrent(string tag)
		{
			return null;
		}
	}
	[Token(Token = "0x200029D")]
	public static class Livestreaming
	{
		[Token(Token = "0x6001379")]
		[Address(RVA = "0xE90408", Offset = "0xE90408", VA = "0xE90408")]
		public static Request<LivestreamingStatus> GetStatus()
		{
			return null;
		}

		[Token(Token = "0x600137A")]
		[Address(RVA = "0xE904D0", Offset = "0xE904D0", VA = "0xE904D0")]
		public static Request<LivestreamingStatus> PauseStream()
		{
			return null;
		}

		[Token(Token = "0x600137B")]
		[Address(RVA = "0xE90598", Offset = "0xE90598", VA = "0xE90598")]
		public static Request<LivestreamingStatus> ResumeStream()
		{
			return null;
		}

		[Token(Token = "0x600137C")]
		[Address(RVA = "0xE90660", Offset = "0xE90660", VA = "0xE90660")]
		public static void SetStatusUpdateNotificationCallback(Message<LivestreamingStatus>.Callback callback)
		{
		}
	}
	[Token(Token = "0x200029E")]
	public static class Media
	{
		[Token(Token = "0x600137D")]
		[Address(RVA = "0xE924E0", Offset = "0xE924E0", VA = "0xE924E0")]
		public static Request<ShareMediaResult> ShareToFacebook(string postTextSuggestion, string filePath, MediaContentType contentType)
		{
			return null;
		}
	}
	[Token(Token = "0x200029F")]
	public static class Notifications
	{
		[Token(Token = "0x600137E")]
		[Address(RVA = "0xE9FCB0", Offset = "0xE9FCB0", VA = "0xE9FCB0")]
		public static Request<RoomInviteNotificationList> GetRoomInviteNotifications()
		{
			return null;
		}

		[Token(Token = "0x600137F")]
		[Address(RVA = "0xE9FD78", Offset = "0xE9FD78", VA = "0xE9FD78")]
		public static Request MarkAsRead(ulong notificationID)
		{
			return null;
		}

		[Token(Token = "0x6001380")]
		[Address(RVA = "0xE9FE40", Offset = "0xE9FE40", VA = "0xE9FE40")]
		public static Request<RoomInviteNotificationList> GetNextRoomInviteNotificationListPage(RoomInviteNotificationList list)
		{
			return null;
		}
	}
	[Token(Token = "0x20002A0")]
	public static class Parties
	{
		[Token(Token = "0x6001381")]
		[Address(RVA = "0xEA02E4", Offset = "0xEA02E4", VA = "0xEA02E4")]
		public static Request<Party> GetCurrent()
		{
			return null;
		}

		[Token(Token = "0x6001382")]
		[Address(RVA = "0xEA03AC", Offset = "0xEA03AC", VA = "0xEA03AC")]
		public static void SetPartyUpdateNotificationCallback(Message<PartyUpdateNotification>.Callback callback)
		{
		}
	}
	[Token(Token = "0x20002A1")]
	public static class Users
	{
		[Token(Token = "0x6001383")]
		[Address(RVA = "0x11797A0", Offset = "0x11797A0", VA = "0x11797A0")]
		public static Request<User> Get(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x6001384")]
		[Address(RVA = "0x1179870", Offset = "0x1179870", VA = "0x1179870")]
		public static Request<string> GetAccessToken()
		{
			return null;
		}

		[Token(Token = "0x6001385")]
		[Address(RVA = "0x11676CC", Offset = "0x11676CC", VA = "0x11676CC")]
		public static Request<User> GetLoggedInUser()
		{
			return null;
		}

		[Token(Token = "0x6001386")]
		[Address(RVA = "0x1179938", Offset = "0x1179938", VA = "0x1179938")]
		public static Request<UserList> GetLoggedInUserFriends()
		{
			return null;
		}

		[Token(Token = "0x6001387")]
		[Address(RVA = "0x1179A00", Offset = "0x1179A00", VA = "0x1179A00")]
		public static Request<UserAndRoomList> GetLoggedInUserFriendsAndRooms()
		{
			return null;
		}

		[Token(Token = "0x6001388")]
		[Address(RVA = "0x1179AC8", Offset = "0x1179AC8", VA = "0x1179AC8")]
		public static Request<UserAndRoomList> GetLoggedInUserRecentlyMetUsersAndRooms([Optional] UserOptions userOptions)
		{
			return null;
		}

		[Token(Token = "0x6001389")]
		[Address(RVA = "0x1179BC4", Offset = "0x1179BC4", VA = "0x1179BC4")]
		public static Request<OrgScopedID> GetOrgScopedID(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x600138A")]
		[Address(RVA = "0x1179C94", Offset = "0x1179C94", VA = "0x1179C94")]
		public static Request<SdkAccountList> GetSdkAccounts()
		{
			return null;
		}

		[Token(Token = "0x600138B")]
		[Address(RVA = "0x1179D5C", Offset = "0x1179D5C", VA = "0x1179D5C")]
		public static Request<UserProof> GetUserProof()
		{
			return null;
		}

		[Token(Token = "0x600138C")]
		[Address(RVA = "0x1179E24", Offset = "0x1179E24", VA = "0x1179E24")]
		public static Request<LaunchFriendRequestFlowResult> LaunchFriendRequestFlow(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x600138D")]
		[Address(RVA = "0x1179EF4", Offset = "0x1179EF4", VA = "0x1179EF4")]
		public static Request LaunchProfile(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x600138E")]
		[Address(RVA = "0x1179FBC", Offset = "0x1179FBC", VA = "0x1179FBC")]
		public static Request<UserAndRoomList> GetNextUserAndRoomListPage(UserAndRoomList list)
		{
			return null;
		}

		[Token(Token = "0x600138F")]
		[Address(RVA = "0x117A11C", Offset = "0x117A11C", VA = "0x117A11C")]
		public static Request<UserList> GetNextUserListPage(UserList list)
		{
			return null;
		}
	}
	[Token(Token = "0x20002A2")]
	public enum PlatformInitializeResult
	{
		[Token(Token = "0x4000ACF")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C2A70", Offset = "0x9C2A70")]
		Success = 0,
		[Token(Token = "0x4000AD0")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C2AA8", Offset = "0x9C2AA8")]
		Uninitialized = -1,
		[Token(Token = "0x4000AD1")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C2AE0", Offset = "0x9C2AE0")]
		PreLoaded = -2,
		[Token(Token = "0x4000AD2")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C2B18", Offset = "0x9C2B18")]
		FileInvalid = -3,
		[Token(Token = "0x4000AD3")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C2B50", Offset = "0x9C2B50")]
		SignatureInvalid = -4,
		[Token(Token = "0x4000AD4")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C2B88", Offset = "0x9C2B88")]
		UnableToVerify = -5,
		[Token(Token = "0x4000AD5")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C2BC0", Offset = "0x9C2BC0")]
		VersionMismatch = -6,
		[Token(Token = "0x4000AD6")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C2BF8", Offset = "0x9C2BF8")]
		Unknown = -7,
		[Token(Token = "0x4000AD7")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C2C30", Offset = "0x9C2C30")]
		InvalidCredentials = -8,
		[Token(Token = "0x4000AD8")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C2C68", Offset = "0x9C2C68")]
		NotEntitled = -9
	}
	[Token(Token = "0x20002A3")]
	public static class PlatformInternal
	{
		[Token(Token = "0x20005CE")]
		public enum MessageTypeInternal : uint
		{
			[Token(Token = "0x40019DB")]
			Application_ExecuteCoordinatedLaunch = 645772532u,
			[Token(Token = "0x40019DC")]
			Application_GetInstalledApplications = 1376744524u,
			[Token(Token = "0x40019DD")]
			Avatar_UpdateMetaData = 2077219214u,
			[Token(Token = "0x40019DE")]
			Cal_FinalizeApplication = 497667029u,
			[Token(Token = "0x40019DF")]
			Cal_GetSuggestedApplications = 1450209301u,
			[Token(Token = "0x40019E0")]
			Cal_ProposeApplication = 1317270237u,
			[Token(Token = "0x40019E1")]
			CloudStorage2_GetUserDirectoryPath = 1990471406u,
			[Token(Token = "0x40019E2")]
			GraphAPI_Get = 822018158u,
			[Token(Token = "0x40019E3")]
			GraphAPI_Post = 1990567876u,
			[Token(Token = "0x40019E4")]
			HTTP_Get = 1874211363u,
			[Token(Token = "0x40019E5")]
			HTTP_GetToFile = 1317133401u,
			[Token(Token = "0x40019E6")]
			HTTP_MultiPartPost = 1480774160u,
			[Token(Token = "0x40019E7")]
			HTTP_Post = 1798743375u,
			[Token(Token = "0x40019E8")]
			Livestreaming_IsAllowedForApplication = 191729014u,
			[Token(Token = "0x40019E9")]
			Livestreaming_StartPartyStream = 2066701532u,
			[Token(Token = "0x40019EA")]
			Livestreaming_StartStream = 1343932350u,
			[Token(Token = "0x40019EB")]
			Livestreaming_StopPartyStream = 661065560u,
			[Token(Token = "0x40019EC")]
			Livestreaming_StopStream = 1155796426u,
			[Token(Token = "0x40019ED")]
			Livestreaming_UpdateCommentsOverlayVisibility = 528318516u,
			[Token(Token = "0x40019EE")]
			Livestreaming_UpdateMicStatus = 475495815u,
			[Token(Token = "0x40019EF")]
			Party_Create = 450042703u,
			[Token(Token = "0x40019F0")]
			Party_GatherInApplication = 1921499523u,
			[Token(Token = "0x40019F1")]
			Party_Get = 1586058173u,
			[Token(Token = "0x40019F2")]
			Party_GetCurrentForUser = 1489764138u,
			[Token(Token = "0x40019F3")]
			Party_Invite = 901104867u,
			[Token(Token = "0x40019F4")]
			Party_Join = 1744993395u,
			[Token(Token = "0x40019F5")]
			Party_Leave = 848430801u,
			[Token(Token = "0x40019F6")]
			Room_CreateOrUpdateAndJoinNamed = 2089683601u,
			[Token(Token = "0x40019F7")]
			Room_GetNamedRooms = 125660812u,
			[Token(Token = "0x40019F8")]
			Room_GetSocialRooms = 1636310390u,
			[Token(Token = "0x40019F9")]
			SystemPermissions_GetStatus = 493497353u,
			[Token(Token = "0x40019FA")]
			SystemPermissions_LaunchDeeplink = 442139697u,
			[Token(Token = "0x40019FB")]
			User_CancelRecordingForReportFlow = 65065289u,
			[Token(Token = "0x40019FC")]
			User_GetLinkedAccounts = 1469314134u,
			[Token(Token = "0x40019FD")]
			User_LaunchBlockFlow = 1876305192u,
			[Token(Token = "0x40019FE")]
			User_LaunchReportFlow = 1449304081u,
			[Token(Token = "0x40019FF")]
			User_LaunchReportFlow2 = 2139314275u,
			[Token(Token = "0x4001A00")]
			User_LaunchUnblockFlow = 346172055u,
			[Token(Token = "0x4001A01")]
			User_NewEntitledTestUser = 292822787u,
			[Token(Token = "0x4001A02")]
			User_NewTestUser = 921194380u,
			[Token(Token = "0x4001A03")]
			User_NewTestUserFriends = 517416647u,
			[Token(Token = "0x4001A04")]
			User_StartRecordingForReportFlow = 1819161571u,
			[Token(Token = "0x4001A05")]
			User_StopRecordingAndLaunchReportFlow = 1618513035u,
			[Token(Token = "0x4001A06")]
			User_StopRecordingAndLaunchReportFlow2 = 432190251u,
			[Token(Token = "0x4001A07")]
			User_TestUserCreateDeviceManifest = 1701884605u
		}

		[Token(Token = "0x20005CF")]
		public static class HTTP
		{
			[Token(Token = "0x6002587")]
			[Address(RVA = "0xEA0484", Offset = "0xEA0484", VA = "0xEA0484")]
			public static void SetHttpTransferUpdateCallback(Message<HttpTransferUpdate>.Callback callback)
			{
			}
		}

		[Token(Token = "0x6001390")]
		[Address(RVA = "0xEA0424", Offset = "0xEA0424", VA = "0xEA0424")]
		public static void CrashApplication()
		{
		}

		[Token(Token = "0x6001391")]
		[Address(RVA = "0xE9522C", Offset = "0xE9522C", VA = "0xE9522C")]
		internal static Message ParseMessageHandle(IntPtr messageHandle, Message.MessageType messageType)
		{
			return null;
		}
	}
	[Token(Token = "0x20002A4")]
	public sealed class PlatformSettings : ScriptableObject
	{
		[Token(Token = "0x4000AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string ovrAppID;

		[Token(Token = "0x4000ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string ovrMobileAppID;

		[Token(Token = "0x4000ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool ovrUseStandalonePlatform;

		[Token(Token = "0x4000ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[SerializeField]
		private bool ovrEnableARM64Support;

		[Token(Token = "0x4000ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static PlatformSettings instance;

		[Token(Token = "0x17000169")]
		public static string AppID
		{
			[Token(Token = "0x6001392")]
			[Address(RVA = "0xE8F61C", Offset = "0xE8F61C", VA = "0xE8F61C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001393")]
			[Address(RVA = "0xEA0610", Offset = "0xEA0610", VA = "0xEA0610")]
			set
			{
			}
		}

		[Token(Token = "0x1700016A")]
		public static string MobileAppID
		{
			[Token(Token = "0x6001394")]
			[Address(RVA = "0xE8F5F0", Offset = "0xE8F5F0", VA = "0xE8F5F0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001395")]
			[Address(RVA = "0xEA0640", Offset = "0xEA0640", VA = "0xEA0640")]
			set
			{
			}
		}

		[Token(Token = "0x1700016B")]
		public static bool UseStandalonePlatform
		{
			[Token(Token = "0x6001396")]
			[Address(RVA = "0xE8F2C8", Offset = "0xE8F2C8", VA = "0xE8F2C8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001397")]
			[Address(RVA = "0xEA0670", Offset = "0xEA0670", VA = "0xEA0670")]
			set
			{
			}
		}

		[Token(Token = "0x1700016C")]
		public static bool EnableARM64Support
		{
			[Token(Token = "0x6001398")]
			[Address(RVA = "0xEA06A4", Offset = "0xEA06A4", VA = "0xEA06A4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001399")]
			[Address(RVA = "0xEA06D0", Offset = "0xEA06D0", VA = "0xEA06D0")]
			set
			{
			}
		}

		[Token(Token = "0x1700016D")]
		public static PlatformSettings Instance
		{
			[Token(Token = "0x600139A")]
			[Address(RVA = "0xEA04FC", Offset = "0xEA04FC", VA = "0xEA04FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600139B")]
			[Address(RVA = "0xEA0704", Offset = "0xEA0704", VA = "0xEA0704")]
			set
			{
			}
		}

		[Token(Token = "0x600139C")]
		[Address(RVA = "0xEA0758", Offset = "0xEA0758", VA = "0xEA0758")]
		public PlatformSettings()
		{
		}
	}
	[Token(Token = "0x20002A5")]
	public sealed class Request<T> : Request
	{
		[Token(Token = "0x600139D")]
		public Request(ulong requestID)
		{
		}

		[Token(Token = "0x600139E")]
		public Request<T> OnComplete(Message<T>.Callback callback)
		{
			return null;
		}
	}
	[Token(Token = "0x20002A6")]
	public class Request
	{
		[Token(Token = "0x4000ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C2CE0", Offset = "0x9C2CE0")]
		private ulong <RequestID>k__BackingField;

		[Token(Token = "0x1700016E")]
		public ulong RequestID
		{
			[Token(Token = "0x60013A0")]
			[Address(RVA = "0xE8D430", Offset = "0xE8D430", VA = "0xE8D430")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D15C8", Offset = "0x9D15C8")]
			get
			{
				return default(ulong);
			}
			[Token(Token = "0x60013A1")]
			[Address(RVA = "0xEA07B8", Offset = "0xEA07B8", VA = "0xEA07B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D15D8", Offset = "0x9D15D8")]
			set
			{
			}
		}

		[Token(Token = "0x600139F")]
		[Address(RVA = "0xE8F714", Offset = "0xE8F714", VA = "0xE8F714")]
		public Request(ulong requestID)
		{
		}

		[Token(Token = "0x60013A2")]
		[Address(RVA = "0xEA07C0", Offset = "0xEA07C0", VA = "0xEA07C0")]
		public Request OnComplete(Message.Callback callback)
		{
			return null;
		}

		[Token(Token = "0x60013A3")]
		[Address(RVA = "0xE8E358", Offset = "0xE8E358", VA = "0xE8E358")]
		public static void RunCallbacks(uint limit = 0u)
		{
		}
	}
	[Token(Token = "0x20002A7")]
	public enum RoomJoinability
	{
		[Token(Token = "0x4000AE0")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C2CF0", Offset = "0x9C2CF0")]
		Unknown,
		[Token(Token = "0x4000AE1")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C2D28", Offset = "0x9C2D28")]
		AreIn,
		[Token(Token = "0x4000AE2")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C2D60", Offset = "0x9C2D60")]
		AreKicked,
		[Token(Token = "0x4000AE3")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C2D98", Offset = "0x9C2D98")]
		CanJoin,
		[Token(Token = "0x4000AE4")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C2DD0", Offset = "0x9C2DD0")]
		IsFull,
		[Token(Token = "0x4000AE5")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C2E08", Offset = "0x9C2E08")]
		NoViewer,
		[Token(Token = "0x4000AE6")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C2E40", Offset = "0x9C2E40")]
		PolicyPrevents
	}
	[Token(Token = "0x20002A8")]
	public enum RoomJoinPolicy
	{
		[Token(Token = "0x4000AE8")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C2E78", Offset = "0x9C2E78")]
		None,
		[Token(Token = "0x4000AE9")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C2EB0", Offset = "0x9C2EB0")]
		Everyone,
		[Token(Token = "0x4000AEA")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C2EE8", Offset = "0x9C2EE8")]
		FriendsOfMembers,
		[Token(Token = "0x4000AEB")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C2F20", Offset = "0x9C2F20")]
		FriendsOfOwner,
		[Token(Token = "0x4000AEC")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C2F58", Offset = "0x9C2F58")]
		InvitedUsers,
		[Token(Token = "0x4000AED")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C2F90", Offset = "0x9C2F90")]
		Unknown
	}
	[Token(Token = "0x20002A9")]
	public enum RoomMembershipLockStatus
	{
		[Token(Token = "0x4000AEF")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C2FC8", Offset = "0x9C2FC8")]
		Unknown,
		[Token(Token = "0x4000AF0")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C3000", Offset = "0x9C3000")]
		Lock,
		[Token(Token = "0x4000AF1")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C3038", Offset = "0x9C3038")]
		Unlock
	}
	[Token(Token = "0x20002AA")]
	public class RoomOptions
	{
		[Token(Token = "0x4000AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x60013A4")]
		[Address(RVA = "0xEA083C", Offset = "0xEA083C", VA = "0xEA083C")]
		public RoomOptions()
		{
		}

		[Token(Token = "0x60013A5")]
		[Address(RVA = "0xEA08B4", Offset = "0xEA08B4", VA = "0xEA08B4")]
		public void SetDataStore(string key, string value)
		{
		}

		[Token(Token = "0x60013A6")]
		[Address(RVA = "0xEA0938", Offset = "0xEA0938", VA = "0xEA0938")]
		public void ClearDataStore()
		{
		}

		[Token(Token = "0x60013A7")]
		[Address(RVA = "0xEA09A4", Offset = "0xEA09A4", VA = "0xEA09A4")]
		public void SetExcludeRecentlyMet(bool value)
		{
		}

		[Token(Token = "0x60013A8")]
		[Address(RVA = "0xEA0A20", Offset = "0xEA0A20", VA = "0xEA0A20")]
		public void SetMaxUserResults(uint value)
		{
		}

		[Token(Token = "0x60013A9")]
		[Address(RVA = "0xEA0A9C", Offset = "0xEA0A9C", VA = "0xEA0A9C")]
		public void SetOrdering(UserOrdering value)
		{
		}

		[Token(Token = "0x60013AA")]
		[Address(RVA = "0xEA0B18", Offset = "0xEA0B18", VA = "0xEA0B18")]
		public void SetRecentlyMetTimeWindow(TimeWindow value)
		{
		}

		[Token(Token = "0x60013AB")]
		[Address(RVA = "0xEA0B94", Offset = "0xEA0B94", VA = "0xEA0B94")]
		public void SetRoomId(ulong value)
		{
		}

		[Token(Token = "0x60013AC")]
		[Address(RVA = "0xEA0C10", Offset = "0xEA0C10", VA = "0xEA0C10")]
		public void SetTurnOffUpdates(bool value)
		{
		}

		[Token(Token = "0x60013AD")]
		[Address(RVA = "0xEA0C8C", Offset = "0xEA0C8C", VA = "0xEA0C8C")]
		public static explicit operator IntPtr(RoomOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60013AE")]
		[Address(RVA = "0xEA0CDC", Offset = "0xEA0CDC", VA = "0xEA0CDC", Slot = "1")]
		~RoomOptions()
		{
		}
	}
	[Token(Token = "0x20002AB")]
	public enum RoomType
	{
		[Token(Token = "0x4000AF4")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C3070", Offset = "0x9C3070")]
		Unknown,
		[Token(Token = "0x4000AF5")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C30A8", Offset = "0x9C30A8")]
		Matchmaking,
		[Token(Token = "0x4000AF6")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C30E0", Offset = "0x9C30E0")]
		Moderated,
		[Token(Token = "0x4000AF7")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C3118", Offset = "0x9C3118")]
		Private,
		[Token(Token = "0x4000AF8")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C3150", Offset = "0x9C3150")]
		Solo
	}
	[Token(Token = "0x20002AC")]
	public enum SdkAccountType
	{
		[Token(Token = "0x4000AFA")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C3188", Offset = "0x9C3188")]
		Unknown,
		[Token(Token = "0x4000AFB")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C31C0", Offset = "0x9C31C0")]
		Oculus,
		[Token(Token = "0x4000AFC")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C31F8", Offset = "0x9C31F8")]
		FacebookGameroom
	}
	[Token(Token = "0x20002AD")]
	public enum SendPolicy
	{
		[Token(Token = "0x4000AFE")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C3230", Offset = "0x9C3230")]
		Unreliable,
		[Token(Token = "0x4000AFF")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C3268", Offset = "0x9C3268")]
		Reliable,
		[Token(Token = "0x4000B00")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C32A0", Offset = "0x9C32A0")]
		Unknown
	}
	[Token(Token = "0x20002AE")]
	public enum ServiceProvider
	{
		[Token(Token = "0x4000B02")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C32D8", Offset = "0x9C32D8")]
		Unknown,
		[Token(Token = "0x4000B03")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C3310", Offset = "0x9C3310")]
		Dropbox,
		[Token(Token = "0x4000B04")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C3348", Offset = "0x9C3348")]
		Facebook,
		[Token(Token = "0x4000B05")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C3380", Offset = "0x9C3380")]
		Google,
		[Token(Token = "0x4000B06")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C33B8", Offset = "0x9C33B8")]
		Instagram,
		[Token(Token = "0x4000B07")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C33F0", Offset = "0x9C33F0")]
		RemoteMedia
	}
	[Token(Token = "0x20002AF")]
	public enum ShareMediaStatus
	{
		[Token(Token = "0x4000B09")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C3428", Offset = "0x9C3428")]
		Unknown,
		[Token(Token = "0x4000B0A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C3460", Offset = "0x9C3460")]
		Shared,
		[Token(Token = "0x4000B0B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C3498", Offset = "0x9C3498")]
		Canceled
	}
	[Token(Token = "0x20002B0")]
	public sealed class StandalonePlatform
	{
		[Token(Token = "0x20005D0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x9BB9BC", Offset = "0x9BB9BC")]
		public delegate void UnityLogDelegate(IntPtr tag, IntPtr msg);

		[Token(Token = "0x60013AF")]
		[Address(RVA = "0x1178C48", Offset = "0x1178C48", VA = "0x1178C48")]
		public Request<PlatformInitialize> InitializeInEditor()
		{
			return null;
		}

		[Token(Token = "0x60013B0")]
		[Address(RVA = "0x1178E54", Offset = "0x1178E54", VA = "0x1178E54")]
		public StandalonePlatform()
		{
		}
	}
	[Token(Token = "0x20002B1")]
	public sealed class StandalonePlatformSettings
	{
		[Token(Token = "0x1700016F")]
		public static string OculusPlatformTestUserEmail
		{
			[Token(Token = "0x60013B1")]
			[Address(RVA = "0x1179380", Offset = "0x1179380", VA = "0x1179380")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013B2")]
			[Address(RVA = "0x11793D0", Offset = "0x11793D0", VA = "0x11793D0")]
			set
			{
			}
		}

		[Token(Token = "0x17000170")]
		public static string OculusPlatformTestUserPassword
		{
			[Token(Token = "0x60013B3")]
			[Address(RVA = "0x11793D4", Offset = "0x11793D4", VA = "0x11793D4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013B4")]
			[Address(RVA = "0x1179424", Offset = "0x1179424", VA = "0x1179424")]
			set
			{
			}
		}

		[Token(Token = "0x17000171")]
		public static string OculusPlatformTestUserAccessToken
		{
			[Token(Token = "0x60013B5")]
			[Address(RVA = "0x1178E04", Offset = "0x1178E04", VA = "0x1178E04")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013B6")]
			[Address(RVA = "0x1179428", Offset = "0x1179428", VA = "0x1179428")]
			set
			{
			}
		}

		[Token(Token = "0x60013B7")]
		[Address(RVA = "0x117942C", Offset = "0x117942C", VA = "0x117942C")]
		public StandalonePlatformSettings()
		{
		}
	}
	[Token(Token = "0x20002B2")]
	public enum SystemVoipStatus
	{
		[Token(Token = "0x4000B0D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C34D0", Offset = "0x9C34D0")]
		Unknown,
		[Token(Token = "0x4000B0E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C3508", Offset = "0x9C3508")]
		Unavailable,
		[Token(Token = "0x4000B0F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C3540", Offset = "0x9C3540")]
		Suppressed,
		[Token(Token = "0x4000B10")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C3578", Offset = "0x9C3578")]
		Active
	}
	[Token(Token = "0x20002B3")]
	public enum TimeWindow
	{
		[Token(Token = "0x4000B12")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C35B0", Offset = "0x9C35B0")]
		Unknown,
		[Token(Token = "0x4000B13")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C35E8", Offset = "0x9C35E8")]
		OneHour,
		[Token(Token = "0x4000B14")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C3620", Offset = "0x9C3620")]
		OneDay,
		[Token(Token = "0x4000B15")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C3658", Offset = "0x9C3658")]
		OneWeek,
		[Token(Token = "0x4000B16")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C3690", Offset = "0x9C3690")]
		ThirtyDays,
		[Token(Token = "0x4000B17")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C36C8", Offset = "0x9C36C8")]
		NinetyDays
	}
	[Token(Token = "0x20002B4")]
	public class UserOptions
	{
		[Token(Token = "0x4000B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x60013B8")]
		[Address(RVA = "0x1179434", Offset = "0x1179434", VA = "0x1179434")]
		public UserOptions()
		{
		}

		[Token(Token = "0x60013B9")]
		[Address(RVA = "0x11794AC", Offset = "0x11794AC", VA = "0x11794AC")]
		public void SetMaxUsers(uint value)
		{
		}

		[Token(Token = "0x60013BA")]
		[Address(RVA = "0x1179528", Offset = "0x1179528", VA = "0x1179528")]
		public void AddServiceProvider(ServiceProvider value)
		{
		}

		[Token(Token = "0x60013BB")]
		[Address(RVA = "0x11795A4", Offset = "0x11795A4", VA = "0x11795A4")]
		public void ClearServiceProviders()
		{
		}

		[Token(Token = "0x60013BC")]
		[Address(RVA = "0x1179610", Offset = "0x1179610", VA = "0x1179610")]
		public void SetTimeWindow(TimeWindow value)
		{
		}

		[Token(Token = "0x60013BD")]
		[Address(RVA = "0x117968C", Offset = "0x117968C", VA = "0x117968C")]
		public static explicit operator IntPtr(UserOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60013BE")]
		[Address(RVA = "0x11796DC", Offset = "0x11796DC", VA = "0x11796DC", Slot = "1")]
		~UserOptions()
		{
		}
	}
	[Token(Token = "0x20002B5")]
	public enum UserOrdering
	{
		[Token(Token = "0x4000B1A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C3700", Offset = "0x9C3700")]
		Unknown,
		[Token(Token = "0x4000B1B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C3738", Offset = "0x9C3738")]
		None,
		[Token(Token = "0x4000B1C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C3770", Offset = "0x9C3770")]
		PresenceAlphabetical
	}
	[Token(Token = "0x20002B6")]
	public enum UserPresenceStatus
	{
		[Token(Token = "0x4000B1E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C37A8", Offset = "0x9C37A8")]
		Unknown,
		[Token(Token = "0x4000B1F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C37E0", Offset = "0x9C37E0")]
		Online,
		[Token(Token = "0x4000B20")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C3818", Offset = "0x9C3818")]
		Offline
	}
	[Token(Token = "0x20002B7")]
	public class VoipAudioSourceHiLevel : MonoBehaviour
	{
		[Token(Token = "0x20005D1")]
		public class FilterReadDelegate : MonoBehaviour
		{
			[Token(Token = "0x4001A08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public VoipAudioSourceHiLevel parent;

			[Token(Token = "0x4001A09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private float[] scratchBuffer;

			[Token(Token = "0x600258C")]
			[Address(RVA = "0x117B0F8", Offset = "0x117B0F8", VA = "0x117B0F8")]
			private void Awake()
			{
			}

			[Token(Token = "0x600258D")]
			[Address(RVA = "0x117B1B0", Offset = "0x117B1B0", VA = "0x117B1B0")]
			private void OnAudioFilterRead(float[] data, int channels)
			{
			}

			[Token(Token = "0x600258E")]
			[Address(RVA = "0x117B780", Offset = "0x117B780", VA = "0x117B780")]
			public FilterReadDelegate()
			{
			}
		}

		[Token(Token = "0x4000B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int initialPlaybackDelayMS;

		[Token(Token = "0x4000B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioSource audioSource;

		[Token(Token = "0x4000B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float peakAmplitude;

		[Token(Token = "0x4000B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected IVoipPCMSource pcmSource;

		[Token(Token = "0x4000B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int audioSystemPlaybackFrequency;

		[Token(Token = "0x4000B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static bool verboseLogging;

		[Token(Token = "0x17000172")]
		public ulong senderID
		{
			[Token(Token = "0x60013BF")]
			[Address(RVA = "0x11784B4", Offset = "0x11784B4", VA = "0x11784B4")]
			set
			{
			}
		}

		[Token(Token = "0x60013C0")]
		[Address(RVA = "0x117A97C", Offset = "0x117A97C", VA = "0x117A97C")]
		protected void Stop()
		{
		}

		[Token(Token = "0x60013C1")]
		[Address(RVA = "0x117A980", Offset = "0x117A980", VA = "0x117A980")]
		private VoipSampleRate SampleRateToEnum(int rate)
		{
			return default(VoipSampleRate);
		}

		[Token(Token = "0x60013C2")]
		[Address(RVA = "0x117A9BC", Offset = "0x117A9BC", VA = "0x117A9BC")]
		protected void Awake()
		{
		}

		[Token(Token = "0x60013C3")]
		[Address(RVA = "0x117ACB8", Offset = "0x117ACB8", VA = "0x117ACB8")]
		private void Start()
		{
		}

		[Token(Token = "0x60013C4")]
		[Address(RVA = "0x117ACE8", Offset = "0x117ACE8", VA = "0x117ACE8", Slot = "4")]
		protected virtual void CreatePCMSource()
		{
		}

		[Token(Token = "0x60013C5")]
		[Address(RVA = "0x117AD50", Offset = "0x117AD50", VA = "0x117AD50")]
		protected static int MSToElements(int ms)
		{
			return default(int);
		}

		[Token(Token = "0x60013C6")]
		[Address(RVA = "0x117ADD8", Offset = "0x117ADD8", VA = "0x117ADD8")]
		private void Update()
		{
		}

		[Token(Token = "0x60013C7")]
		[Address(RVA = "0x117B0EC", Offset = "0x117B0EC", VA = "0x117B0EC")]
		public VoipAudioSourceHiLevel()
		{
		}
	}
	[Token(Token = "0x20002B8")]
	public enum VoipBitrate
	{
		[Token(Token = "0x4000B28")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C3850", Offset = "0x9C3850")]
		Unknown,
		[Token(Token = "0x4000B29")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C3888", Offset = "0x9C3888")]
		B16000,
		[Token(Token = "0x4000B2A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C38C0", Offset = "0x9C38C0")]
		B24000,
		[Token(Token = "0x4000B2B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C38F8", Offset = "0x9C38F8")]
		B32000,
		[Token(Token = "0x4000B2C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C3930", Offset = "0x9C3930")]
		B64000,
		[Token(Token = "0x4000B2D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C3968", Offset = "0x9C3968")]
		B96000,
		[Token(Token = "0x4000B2E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C39A0", Offset = "0x9C39A0")]
		B128000
	}
	[Token(Token = "0x20002B9")]
	public enum VoipDtxState
	{
		[Token(Token = "0x4000B30")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C39D8", Offset = "0x9C39D8")]
		Unknown,
		[Token(Token = "0x4000B31")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C3A10", Offset = "0x9C3A10")]
		Enabled,
		[Token(Token = "0x4000B32")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C3A48", Offset = "0x9C3A48")]
		Disabled
	}
	[Token(Token = "0x20002BA")]
	public enum VoipMuteState
	{
		[Token(Token = "0x4000B34")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C3A80", Offset = "0x9C3A80")]
		Unknown,
		[Token(Token = "0x4000B35")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C3AB8", Offset = "0x9C3AB8")]
		Muted,
		[Token(Token = "0x4000B36")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C3AF0", Offset = "0x9C3AF0")]
		Unmuted
	}
	[Token(Token = "0x20002BB")]
	public class VoipOptions
	{
		[Token(Token = "0x4000B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x60013C9")]
		[Address(RVA = "0x117B788", Offset = "0x117B788", VA = "0x117B788")]
		public VoipOptions()
		{
		}

		[Token(Token = "0x60013CA")]
		[Address(RVA = "0x117B800", Offset = "0x117B800", VA = "0x117B800")]
		public void SetBitrateForNewConnections(VoipBitrate value)
		{
		}

		[Token(Token = "0x60013CB")]
		[Address(RVA = "0x117B87C", Offset = "0x117B87C", VA = "0x117B87C")]
		public void SetCreateNewConnectionUseDtx(VoipDtxState value)
		{
		}

		[Token(Token = "0x60013CC")]
		[Address(RVA = "0x117A7E4", Offset = "0x117A7E4", VA = "0x117A7E4")]
		public static explicit operator IntPtr(VoipOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60013CD")]
		[Address(RVA = "0x117B8F8", Offset = "0x117B8F8", VA = "0x117B8F8", Slot = "1")]
		~VoipOptions()
		{
		}
	}
	[Token(Token = "0x20002BC")]
	public class VoipPCMSourceNative : IVoipPCMSource
	{
		[Token(Token = "0x4000B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ulong senderID;

		[Token(Token = "0x60013CE")]
		[Address(RVA = "0x117B9BC", Offset = "0x117B9BC", VA = "0x117B9BC", Slot = "4")]
		public int GetPCM(float[] dest, int length)
		{
			return default(int);
		}

		[Token(Token = "0x60013CF")]
		[Address(RVA = "0x117BA7C", Offset = "0x117BA7C", VA = "0x117BA7C", Slot = "5")]
		public void SetSenderID(ulong senderID)
		{
		}

		[Token(Token = "0x60013D0")]
		[Address(RVA = "0x117BA84", Offset = "0x117BA84", VA = "0x117BA84", Slot = "7")]
		public int PeekSizeElements()
		{
			return default(int);
		}

		[Token(Token = "0x60013D1")]
		[Address(RVA = "0x117BB24", Offset = "0x117BB24", VA = "0x117BB24", Slot = "6")]
		public void Update()
		{
		}

		[Token(Token = "0x60013D2")]
		[Address(RVA = "0x117AD48", Offset = "0x117AD48", VA = "0x117AD48")]
		public VoipPCMSourceNative()
		{
		}
	}
	[Token(Token = "0x20002BD")]
	public enum VoipSampleRate
	{
		[Token(Token = "0x4000B3A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C3B28", Offset = "0x9C3B28")]
		Unknown,
		[Token(Token = "0x4000B3B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C3B60", Offset = "0x9C3B60")]
		HZ24000,
		[Token(Token = "0x4000B3C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C3B98", Offset = "0x9C3B98")]
		HZ44100,
		[Token(Token = "0x4000B3D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x9C3BD0", Offset = "0x9C3BD0")]
		HZ48000
	}
	[Token(Token = "0x20002BE")]
	public class WindowsPlatform
	{
		[Token(Token = "0x20005D2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x9BB9D0", Offset = "0x9BB9D0")]
		public delegate void UnityLogDelegate(IntPtr tag, IntPtr msg);

		[Token(Token = "0x60013D3")]
		[Address(RVA = "0x117BB28", Offset = "0x117BB28", VA = "0x117BB28")]
		private void CPPLogCallback(IntPtr tag, IntPtr message)
		{
		}

		[Token(Token = "0x60013D4")]
		[Address(RVA = "0x117BC00", Offset = "0x117BC00", VA = "0x117BC00")]
		private IntPtr getCallbackPointer()
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60013D5")]
		[Address(RVA = "0x117BC40", Offset = "0x117BC40", VA = "0x117BC40")]
		public bool Initialize(string appId)
		{
			return default(bool);
		}

		[Token(Token = "0x60013D6")]
		[Address(RVA = "0x117BD2C", Offset = "0x117BD2C", VA = "0x117BD2C")]
		public Request<PlatformInitialize> AsyncInitialize(string appId)
		{
			return null;
		}

		[Token(Token = "0x60013D7")]
		[Address(RVA = "0x117BE48", Offset = "0x117BE48", VA = "0x117BE48")]
		public WindowsPlatform()
		{
		}
	}
}
namespace Oculus.Platform.Models
{
	[Token(Token = "0x20002BF")]
	public class AbuseReportRecording
	{
		[Token(Token = "0x4000B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string RecordingUuid;

		[Token(Token = "0x60013D8")]
		[Address(RVA = "0xE9605C", Offset = "0xE9605C", VA = "0xE9605C")]
		public AbuseReportRecording(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20002C0")]
	public class AchievementDefinition
	{
		[Token(Token = "0x4000B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly AchievementType Type;

		[Token(Token = "0x4000B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Name;

		[Token(Token = "0x4000B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly uint BitfieldLength;

		[Token(Token = "0x4000B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ulong Target;

		[Token(Token = "0x60013D9")]
		[Address(RVA = "0xE9E3C8", Offset = "0xE9E3C8", VA = "0xE9E3C8")]
		public AchievementDefinition(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20002C1")]
	public class AchievementDefinitionList : DeserializableList<AchievementDefinition>
	{
		[Token(Token = "0x60013DA")]
		[Address(RVA = "0xE961D0", Offset = "0xE961D0", VA = "0xE961D0")]
		public AchievementDefinitionList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20002C2")]
	public class AchievementProgress
	{
		[Token(Token = "0x4000B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Bitfield;

		[Token(Token = "0x4000B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong Count;

		[Token(Token = "0x4000B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly bool IsUnlocked;

		[Token(Token = "0x4000B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string Name;

		[Token(Token = "0x4000B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly DateTime UnlockTime;

		[Token(Token = "0x60013DB")]
		[Address(RVA = "0xE9E480", Offset = "0xE9E480", VA = "0xE9E480")]
		public AchievementProgress(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20002C3")]
	public class AchievementProgressList : DeserializableList<AchievementProgress>
	{
		[Token(Token = "0x60013DC")]
		[Address(RVA = "0xE964C4", Offset = "0xE964C4", VA = "0xE964C4")]
		public AchievementProgressList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20002C4")]
	public class AchievementUpdate
	{
		[Token(Token = "0x4000B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool JustUnlocked;

		[Token(Token = "0x4000B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Name;

		[Token(Token = "0x60013DD")]
		[Address(RVA = "0xE967B8", Offset = "0xE967B8", VA = "0xE967B8")]
		public AchievementUpdate(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20002C5")]
	public class ApplicationVersion
	{
		[Token(Token = "0x4000B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int CurrentCode;

		[Token(Token = "0x4000B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string CurrentName;

		[Token(Token = "0x4000B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly int LatestCode;

		[Token(Token = "0x4000B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string LatestName;

		[Token(Token = "0x60013DE")]
		[Address(RVA = "0xE96940", Offset = "0xE96940", VA = "0xE96940")]
		public ApplicationVersion(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20002C6")]
	public class AssetDetails
	{
		[Token(Token = "0x4000B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong AssetId;

		[Token(Token = "0x4000B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string AssetType;

		[Token(Token = "0x4000B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string DownloadStatus;

		[Token(Token = "0x4000B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string Filepath;

		[Token(Token = "0x4000B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string IapStatus;

		[Token(Token = "0x4000B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly LanguagePackInfo LanguageOptional;

		[Token(Token = "0x4000B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9C3C08", Offset = "0x9C3C08")]
		public readonly LanguagePackInfo Language;

		[Token(Token = "0x60013DF")]
		[Address(RVA = "0xE96AE4", Offset = "0xE96AE4", VA = "0xE96AE4")]
		public AssetDetails(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20002C7")]
	public class AssetDetailsList : DeserializableList<AssetDetails>
	{
		[Token(Token = "0x60013E0")]
		[Address(RVA = "0xE96CEC", Offset = "0xE96CEC", VA = "0xE96CEC")]
		public AssetDetailsList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20002C8")]
	public class AssetFileDeleteResult
	{
		[Token(Token = "0x4000B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong AssetFileId;

		[Token(Token = "0x4000B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong AssetId;

		[Token(Token = "0x4000B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Filepath;

		[Token(Token = "0x4000B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly bool Success;

		[Token(Token = "0x60013E1")]
		[Address(RVA = "0xE96FB0", Offset = "0xE96FB0", VA = "0xE96FB0")]
		public AssetFileDeleteResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20002C9")]
	public class AssetFileDownloadCancelResult
	{
		[Token(Token = "0x4000B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong AssetFileId;

		[Token(Token = "0x4000B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong AssetId;

		[Token(Token = "0x4000B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Filepath;

		[Token(Token = "0x4000B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly bool Success;

		[Token(Token = "0x60013E2")]
		[Address(RVA = "0xE97158", Offset = "0xE97158", VA = "0xE97158")]
		public AssetFileDownloadCancelResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20002CA")]
	public class AssetFileDownloadResult
	{
		[Token(Token = "0x4000B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong AssetId;

		[Token(Token = "0x4000B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Filepath;

		[Token(Token = "0x60013E3")]
		[Address(RVA = "0xE97300", Offset = "0xE97300", VA = "0xE97300")]
		public AssetFileDownloadResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20002CB")]
	public class AssetFileDownloadUpdate
	{
		[Token(Token = "0x4000B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong AssetFileId;

		[Token(Token = "0x4000B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong AssetId;

		[Token(Token = "0x4000B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly uint BytesTotal;

		[Token(Token = "0x4000B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly int BytesTransferred;

		[Token(Token = "0x4000B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly bool Completed;

		[Token(Token = "0x60013E4")]
		[Address(RVA = "0xE97484", Offset = "0xE97484", VA = "0xE97484")]
		public AssetFileDownloadUpdate(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20002CC")]
	public class CalApplicationFinalized
	{
		[Token(Token = "0x4000B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int CountdownMS;

		[Token(Token = "0x4000B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong ID;

		[Token(Token = "0x4000B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string LaunchDetails;

		[Token(Token = "0x60013E5")]
		[Address(RVA = "0xE9763C", Offset = "0xE9763C", VA = "0xE9763C")]
		public CalApplicationFinalized(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20002CD")]
	public class CalApplicationProposed
	{
		[Token(Token = "0x4000B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x60013E6")]
		[Address(RVA = "0xE977D0", Offset = "0xE977D0", VA = "0xE977D0")]
		public CalApplicationProposed(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20002CE")]
	public class CalApplicationSuggestion
	{
		[Token(Token = "0x4000B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x4000B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string SocialContext;

		[Token(Token = "0x60013E7")]
		[Address(RVA = "0xE9E5F4", Offset = "0xE9E5F4", VA = "0xE9E5F4")]
		public CalApplicationSuggestion(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20002CF")]
	public class CalApplicationSuggestionList : DeserializableList<CalApplicationSuggestion>
	{
		[Token(Token = "0x60013E8")]
		[Address(RVA = "0xE979A4", Offset = "0xE979A4", VA = "0xE979A4")]
		public CalApplicationSuggestionList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20002D0")]
	public class CloudStorageConflictMetadata
	{
		[Token(Token = "0x4000B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly CloudStorageMetadata Local;

		[Token(Token = "0x4000B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly CloudStorageMetadata Remote;

		[Token(Token = "0x60013E9")]
		[Address(RVA = "0xE97C68", Offset = "0xE97C68", VA = "0xE97C68")]
		public CloudStorageConflictMetadata(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20002D1")]
	public class CloudStorageData
	{
		[Token(Token = "0x4000B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Bucket;

		[Token(Token = "0x4000B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly byte[] Data;

		[Token(Token = "0x4000B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly uint DataSize;

		[Token(Token = "0x4000B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string Key;

		[Token(Token = "0x60013EA")]
		[Address(RVA = "0xE97E34", Offset = "0xE97E34", VA = "0xE97E34")]
		public CloudStorageData(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20002D2")]
	public class CloudStorageMetadata
	{
		[Token(Token = "0x4000B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Bucket;

		[Token(Token = "0x4000B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly long Counter;

		[Token(Token = "0x4000B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly uint DataSize;

		[Token(Token = "0x4000B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string ExtraData;

		[Token(Token = "0x4000B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string Key;

		[Token(Token = "0x4000B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly ulong SaveTime;

		[Token(Token = "0x4000B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly CloudStorageDataStatus Status;

		[Token(Token = "0x4000B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly string VersionHandle;

		[Token(Token = "0x60013EB")]
		[Address(RVA = "0xE982CC", Offset = "0xE982CC", VA = "0xE982CC")]
		public CloudStorageMetadata(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20002D3")]
	public class CloudStorageMetadataList : DeserializableList<CloudStorageMetadata>
	{
		[Token(Token = "0x60013EC")]
		[Address(RVA = "0xE97FD8", Offset = "0xE97FD8", VA = "0xE97FD8")]
		public CloudStorageMetadataList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20002D4")]
	public class CloudStorageUpdateResponse
	{
		[Token(Token = "0x4000B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Bucket;

		[Token(Token = "0x4000B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Key;

		[Token(Token = "0x4000B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly CloudStorageUpdateStatus Status;

		[Token(Token = "0x4000B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string VersionHandle;

		[Token(Token = "0x60013ED")]
		[Address(RVA = "0xE984B0", Offset = "0xE984B0", VA = "0xE984B0")]
		public CloudStorageUpdateResponse(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20002D5")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x9B993C", Offset = "0x9B993C")]
	public class DeserializableList<T> : IList<T>, ICollection<T>, IEnumerable<T>, IEnumerable
	{
		[Token(Token = "0x4000B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected List<T> _Data;

		[Token(Token = "0x4000B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected string _NextUrl;

		[Token(Token = "0x4000B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected string _PreviousUrl;

		[Token(Token = "0x17000173")]
		public int Count
		{
			[Token(Token = "0x60013EE")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000174")]
		private bool System.Collections.Generic.ICollection<T>.IsReadOnly
		{
			[Token(Token = "0x60013EF")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000175")]
		public T Item
		{
			[Token(Token = "0x60013F1")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x60013F2")]
			set
			{
			}
		}

		[Token(Token = "0x17000176")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9D9E88", Offset = "0x9D9E88")]
		public List<T> Data
		{
			[Token(Token = "0x60013FD")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000177")]
		public bool HasNextPage
		{
			[Token(Token = "0x60013FE")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000178")]
		public bool HasPreviousPage
		{
			[Token(Token = "0x60013FF")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000179")]
		public string NextUrl
		{
			[Token(Token = "0x6001400")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017A")]
		public string PreviousUrl
		{
			[Token(Token = "0x6001401")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013F0")]
		public int IndexOf(T obj)
		{
			return default(int);
		}

		[Token(Token = "0x60013F3")]
		public void Add(T item)
		{
		}

		[Token(Token = "0x60013F4")]
		public void Clear()
		{
		}

		[Token(Token = "0x60013F5")]
		public bool Contains(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x60013F6")]
		public void CopyTo(T[] array, int arrayIndex)
		{
		}

		[Token(Token = "0x60013F7")]
		public IEnumerator<T> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60013F8")]
		public void Insert(int index, T item)
		{
		}

		[Token(Token = "0x60013F9")]
		public bool Remove(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x60013FA")]
		public void RemoveAt(int index)
		{
		}

		[Token(Token = "0x60013FB")]
		private IEnumerator GetEnumerator1()
		{
			return null;
		}

		[Token(Token = "0x60013FC")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001402")]
		public DeserializableList()
		{
		}
	}
	[Token(Token = "0x20002D6")]
	public class Error
	{
		[Token(Token = "0x4000B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int Code;

		[Token(Token = "0x4000B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly int HttpCode;

		[Token(Token = "0x4000B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Message;

		[Token(Token = "0x6001403")]
		[Address(RVA = "0xE92800", Offset = "0xE92800", VA = "0xE92800")]
		public Error(int code, string message, int httpCode)
		{
		}
	}
	[Token(Token = "0x20002D7")]
	public class HttpTransferUpdate
	{
		[Token(Token = "0x4000B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x4000B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly byte[] Payload;

		[Token(Token = "0x4000B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly bool IsCompleted;

		[Token(Token = "0x6001404")]
		[Address(RVA = "0xE98654", Offset = "0xE98654", VA = "0xE98654")]
		public HttpTransferUpdate(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20002D8")]
	public class InstalledApplication
	{
		[Token(Token = "0x4000B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string ApplicationId;

		[Token(Token = "0x4000B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string PackageName;

		[Token(Token = "0x4000B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Status;

		[Token(Token = "0x4000B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly int VersionCode;

		[Token(Token = "0x4000B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string VersionName;

		[Token(Token = "0x6001405")]
		[Address(RVA = "0xE9E68C", Offset = "0xE9E68C", VA = "0xE9E68C")]
		public InstalledApplication(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20002D9")]
	public class InstalledApplicationList : DeserializableList<InstalledApplication>
	{
		[Token(Token = "0x6001406")]
		[Address(RVA = "0xE988E8", Offset = "0xE988E8", VA = "0xE988E8")]
		public InstalledApplicationList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20002DA")]
	public class LanguagePackInfo
	{
		[Token(Token = "0x4000B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string EnglishName;

		[Token(Token = "0x4000B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string NativeName;

		[Token(Token = "0x4000B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Tag;

		[Token(Token = "0x6001407")]
		[Address(RVA = "0xE9E54C", Offset = "0xE9E54C", VA = "0xE9E54C")]
		public LanguagePackInfo(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20002DB")]
	public class LaunchBlockFlowResult
	{
		[Token(Token = "0x4000B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool DidBlock;

		[Token(Token = "0x4000B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public readonly bool DidCancel;

		[Token(Token = "0x6001408")]
		[Address(RVA = "0xE98C0C", Offset = "0xE98C0C", VA = "0xE98C0C")]
		public LaunchBlockFlowResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20002DC")]
	public class LaunchDetails
	{
		[Token(Token = "0x4000B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string DeeplinkMessage;

		[Token(Token = "0x4000B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string LaunchSource;

		[Token(Token = "0x4000B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly LaunchType LaunchType;

		[Token(Token = "0x4000B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ulong RoomID;

		[Token(Token = "0x4000B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly UserList UsersOptional;

		[Token(Token = "0x4000B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9C3C40", Offset = "0x9C3C40")]
		public readonly UserList Users;

		[Token(Token = "0x6001409")]
		[Address(RVA = "0xE9E754", Offset = "0xE9E754", VA = "0xE9E754")]
		public LaunchDetails(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20002DD")]
	public class LaunchFriendRequestFlowResult
	{
		[Token(Token = "0x4000B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool DidCancel;

		[Token(Token = "0x4000B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public readonly bool DidSendRequest;

		[Token(Token = "0x600140A")]
		[Address(RVA = "0xE98D98", Offset = "0xE98D98", VA = "0xE98D98")]
		public LaunchFriendRequestFlowResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20002DE")]
	public class LaunchReportFlowResult
	{
		[Token(Token = "0x4000B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool DidCancel;

		[Token(Token = "0x4000B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong UserReportId;

		[Token(Token = "0x600140B")]
		[Address(RVA = "0xE98F84", Offset = "0xE98F84", VA = "0xE98F84")]
		public LaunchReportFlowResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20002DF")]
	public class LaunchUnblockFlowResult
	{
		[Token(Token = "0x4000B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool DidCancel;

		[Token(Token = "0x4000B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public readonly bool DidUnblock;

		[Token(Token = "0x600140C")]
		[Address(RVA = "0xE9916C", Offset = "0xE9916C", VA = "0xE9916C")]
		public LaunchUnblockFlowResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20002E0")]
	public class LeaderboardEntry
	{
		[Token(Token = "0x4000B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly byte[] ExtraData;

		[Token(Token = "0x4000B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly int Rank;

		[Token(Token = "0x4000B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly long Score;

		[Token(Token = "0x4000B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly DateTime Timestamp;

		[Token(Token = "0x4000B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly User User;

		[Token(Token = "0x600140D")]
		[Address(RVA = "0xE9E860", Offset = "0xE9E860", VA = "0xE9E860")]
		public LeaderboardEntry(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20002E1")]
	public class LeaderboardEntryList : DeserializableList<LeaderboardEntry>
	{
		[Token(Token = "0x4000BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ulong TotalCount;

		[Token(Token = "0x600140E")]
		[Address(RVA = "0xE993C0", Offset = "0xE993C0", VA = "0xE993C0")]
		public LeaderboardEntryList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20002E2")]
	public class LinkedAccount
	{
		[Token(Token = "0x4000BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string AccessToken;

		[Token(Token = "0x4000BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ServiceProvider ServiceProvider;

		[Token(Token = "0x4000BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string UserId;

		[Token(Token = "0x600140F")]
		[Address(RVA = "0xE9E94C", Offset = "0xE9E94C", VA = "0xE9E94C")]
		public LinkedAccount(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20002E3")]
	public class LinkedAccountList : DeserializableList<LinkedAccount>
	{
		[Token(Token = "0x6001410")]
		[Address(RVA = "0xE99734", Offset = "0xE99734", VA = "0xE99734")]
		public LinkedAccountList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20002E4")]
	public class LivestreamingApplicationStatus
	{
		[Token(Token = "0x4000BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool StreamingEnabled;

		[Token(Token = "0x6001411")]
		[Address(RVA = "0xE99A58", Offset = "0xE99A58", VA = "0xE99A58")]
		public LivestreamingApplicationStatus(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20002E5")]
	public class LivestreamingStartResult
	{
		[Token(Token = "0x4000BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly LivestreamingStartStatus StreamingResult;

		[Token(Token = "0x6001412")]
		[Address(RVA = "0xE99C30", Offset = "0xE99C30", VA = "0xE99C30")]
		public LivestreamingStartResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20002E6")]
	public class LivestreamingStatus
	{
		[Token(Token = "0x4000BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool CommentsVisible;

		[Token(Token = "0x4000BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public readonly bool IsPaused;

		[Token(Token = "0x4000BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public readonly bool LivestreamingEnabled;

		[Token(Token = "0x4000BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly int LivestreamingType;

		[Token(Token = "0x4000BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly bool MicEnabled;

		[Token(Token = "0x6001413")]
		[Address(RVA = "0xE99DA4", Offset = "0xE99DA4", VA = "0xE99DA4")]
		public LivestreamingStatus(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20002E7")]
	public class LivestreamingVideoStats
	{
		[Token(Token = "0x4000BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int CommentCount;

		[Token(Token = "0x4000BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly int ReactionCount;

		[Token(Token = "0x4000BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string TotalViews;

		[Token(Token = "0x6001414")]
		[Address(RVA = "0xE99FC8", Offset = "0xE99FC8", VA = "0xE99FC8")]
		public LivestreamingVideoStats(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20002E8")]
	public class MatchmakingAdminSnapshot
	{
		[Token(Token = "0x4000BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly MatchmakingAdminSnapshotCandidateList Candidates;

		[Token(Token = "0x4000BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly double MyCurrentThreshold;

		[Token(Token = "0x6001415")]
		[Address(RVA = "0xE9A15C", Offset = "0xE9A15C", VA = "0xE9A15C")]
		public MatchmakingAdminSnapshot(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20002E9")]
	public class MatchmakingAdminSnapshotCandidate
	{
		[Token(Token = "0x4000BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool CanMatch;

		[Token(Token = "0x4000BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly double MyTotalScore;

		[Token(Token = "0x4000BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly double TheirCurrentThreshold;

		[Token(Token = "0x4000BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly double TheirTotalScore;

		[Token(Token = "0x4000BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string TraceId;

		[Token(Token = "0x6001416")]
		[Address(RVA = "0xE9EBCC", Offset = "0xE9EBCC", VA = "0xE9EBCC")]
		public MatchmakingAdminSnapshotCandidate(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20002EA")]
	public class MatchmakingAdminSnapshotCandidateList : DeserializableList<MatchmakingAdminSnapshotCandidate>
	{
		[Token(Token = "0x6001417")]
		[Address(RVA = "0xE9E9F4", Offset = "0xE9E9F4", VA = "0xE9E9F4")]
		public MatchmakingAdminSnapshotCandidateList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20002EB")]
	public class MatchmakingBrowseResult
	{
		[Token(Token = "0x4000BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly MatchmakingEnqueueResult EnqueueResult;

		[Token(Token = "0x4000BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly RoomList Rooms;

		[Token(Token = "0x6001418")]
		[Address(RVA = "0xE9A37C", Offset = "0xE9A37C", VA = "0xE9A37C")]
		public MatchmakingBrowseResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20002EC")]
	public class MatchmakingEnqueuedUser
	{
		[Token(Token = "0x4000BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Dictionary<string, string> CustomData;

		[Token(Token = "0x4000BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly User UserOptional;

		[Token(Token = "0x4000BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9C3C78", Offset = "0x9C3C78")]
		public readonly User User;

		[Token(Token = "0x6001419")]
		[Address(RVA = "0xE9EC98", Offset = "0xE9EC98", VA = "0xE9EC98")]
		public MatchmakingEnqueuedUser(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20002ED")]
	public class MatchmakingEnqueuedUserList : DeserializableList<MatchmakingEnqueuedUser>
	{
		[Token(Token = "0x600141A")]
		[Address(RVA = "0xE9ED7C", Offset = "0xE9ED7C", VA = "0xE9ED7C")]
		public MatchmakingEnqueuedUserList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20002EE")]
	public class MatchmakingEnqueueResult
	{
		[Token(Token = "0x4000BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly MatchmakingAdminSnapshot AdminSnapshotOptional;

		[Token(Token = "0x4000BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9C3CB0", Offset = "0x9C3CB0")]
		public readonly MatchmakingAdminSnapshot AdminSnapshot;

		[Token(Token = "0x4000BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly uint AverageWait;

		[Token(Token = "0x4000BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly uint MatchesInLastHourCount;

		[Token(Token = "0x4000BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly uint MaxExpectedWait;

		[Token(Token = "0x4000BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string Pool;

		[Token(Token = "0x4000BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly uint RecentMatchPercentage;

		[Token(Token = "0x4000BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly string RequestHash;

		[Token(Token = "0x600141B")]
		[Address(RVA = "0xE9A548", Offset = "0xE9A548", VA = "0xE9A548")]
		public MatchmakingEnqueueResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20002EF")]
	public class MatchmakingEnqueueResultAndRoom
	{
		[Token(Token = "0x4000BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly MatchmakingEnqueueResult MatchmakingEnqueueResult;

		[Token(Token = "0x4000BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly Room Room;

		[Token(Token = "0x600141C")]
		[Address(RVA = "0xE9A780", Offset = "0xE9A780", VA = "0xE9A780")]
		public MatchmakingEnqueueResultAndRoom(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20002F0")]
	public class MatchmakingStats
	{
		[Token(Token = "0x4000BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly uint DrawCount;

		[Token(Token = "0x4000BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly uint LossCount;

		[Token(Token = "0x4000BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly uint SkillLevel;

		[Token(Token = "0x4000BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public readonly uint WinCount;

		[Token(Token = "0x600141D")]
		[Address(RVA = "0xE9AD1C", Offset = "0xE9AD1C", VA = "0xE9AD1C")]
		public MatchmakingStats(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20002F1")]
	public class NetworkingPeer
	{
		[Token(Token = "0x4000BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C3CE8", Offset = "0x9C3CE8")]
		private ulong <ID>k__BackingField;

		[Token(Token = "0x4000BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C3CF8", Offset = "0x9C3CF8")]
		private PeerConnectionState <State>k__BackingField;

		[Token(Token = "0x1700017B")]
		public ulong ID
		{
			[Token(Token = "0x600141F")]
			[Address(RVA = "0xE9EF64", Offset = "0xE9EF64", VA = "0xE9EF64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D15E8", Offset = "0x9D15E8")]
			get
			{
				return default(ulong);
			}
			[Token(Token = "0x6001420")]
			[Address(RVA = "0xE9EF54", Offset = "0xE9EF54", VA = "0xE9EF54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D15F8", Offset = "0x9D15F8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700017C")]
		public PeerConnectionState State
		{
			[Token(Token = "0x6001421")]
			[Address(RVA = "0xE9EF6C", Offset = "0xE9EF6C", VA = "0xE9EF6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D1608", Offset = "0x9D1608")]
			get
			{
				return default(PeerConnectionState);
			}
			[Token(Token = "0x6001422")]
			[Address(RVA = "0xE9EF5C", Offset = "0xE9EF5C", VA = "0xE9EF5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D1618", Offset = "0x9D1618")]
			private set
			{
			}
		}

		[Token(Token = "0x600141E")]
		[Address(RVA = "0xE9AEE4", Offset = "0xE9AEE4", VA = "0xE9AEE4")]
		public NetworkingPeer(ulong id, PeerConnectionState state)
		{
		}
	}
	[Token(Token = "0x20002F2")]
	public class OrgScopedID
	{
		[Token(Token = "0x4000BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x6001423")]
		[Address(RVA = "0xE9B00C", Offset = "0xE9B00C", VA = "0xE9B00C")]
		public OrgScopedID(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20002F3")]
	public class Party
	{
		[Token(Token = "0x4000BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x4000BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly UserList InvitedUsersOptional;

		[Token(Token = "0x4000BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9C3D08", Offset = "0x9C3D08")]
		public readonly UserList InvitedUsers;

		[Token(Token = "0x4000BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly User LeaderOptional;

		[Token(Token = "0x4000BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9C3D40", Offset = "0x9C3D40")]
		public readonly User Leader;

		[Token(Token = "0x4000BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly Room RoomOptional;

		[Token(Token = "0x4000BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9C3D78", Offset = "0x9C3D78")]
		public readonly Room Room;

		[Token(Token = "0x4000BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly UserList UsersOptional;

		[Token(Token = "0x4000BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9C3DB0", Offset = "0x9C3DB0")]
		public readonly UserList Users;

		[Token(Token = "0x6001424")]
		[Address(RVA = "0xE9B1E0", Offset = "0xE9B1E0", VA = "0xE9B1E0")]
		public Party(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20002F4")]
	public class PartyID
	{
		[Token(Token = "0x4000BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x6001425")]
		[Address(RVA = "0xE9B54C", Offset = "0xE9B54C", VA = "0xE9B54C")]
		public PartyID(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20002F5")]
	public class PartyUpdateNotification
	{
		[Token(Token = "0x4000BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly PartyUpdateAction Action;

		[Token(Token = "0x4000BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong PartyId;

		[Token(Token = "0x4000BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly ulong SenderId;

		[Token(Token = "0x4000BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string UpdateTimestamp;

		[Token(Token = "0x4000BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string UserAlias;

		[Token(Token = "0x4000BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly ulong UserId;

		[Token(Token = "0x4000BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly string UserName;

		[Token(Token = "0x6001426")]
		[Address(RVA = "0xE9B7AC", Offset = "0xE9B7AC", VA = "0xE9B7AC")]
		public PartyUpdateNotification(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20002F6")]
	public class Pid
	{
		[Token(Token = "0x4000BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Id;

		[Token(Token = "0x6001427")]
		[Address(RVA = "0xE9EF74", Offset = "0xE9EF74", VA = "0xE9EF74")]
		public Pid(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20002F7")]
	public class PidList : DeserializableList<Pid>
	{
		[Token(Token = "0x6001428")]
		[Address(RVA = "0xE9B980", Offset = "0xE9B980", VA = "0xE9B980")]
		public PidList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20002F8")]
	public class PingResult
	{
		[Token(Token = "0x4000BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C3DE8", Offset = "0x9C3DE8")]
		private ulong <ID>k__BackingField;

		[Token(Token = "0x4000BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ulong? pingTimeUsec;

		[Token(Token = "0x1700017D")]
		public ulong ID
		{
			[Token(Token = "0x600142A")]
			[Address(RVA = "0xE9F004", Offset = "0xE9F004", VA = "0xE9F004")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D1628", Offset = "0x9D1628")]
			get
			{
				return default(ulong);
			}
			[Token(Token = "0x600142B")]
			[Address(RVA = "0xE9EFFC", Offset = "0xE9EFFC", VA = "0xE9EFFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D1638", Offset = "0x9D1638")]
			private set
			{
			}
		}

		[Token(Token = "0x1700017E")]
		public ulong PingTimeUsec
		{
			[Token(Token = "0x600142C")]
			[Address(RVA = "0xE9F00C", Offset = "0xE9F00C", VA = "0xE9F00C")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x1700017F")]
		public bool IsTimeout
		{
			[Token(Token = "0x600142D")]
			[Address(RVA = "0xE9F088", Offset = "0xE9F088", VA = "0xE9F088")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001429")]
		[Address(RVA = "0xE9BCC4", Offset = "0xE9BCC4", VA = "0xE9BCC4")]
		public PingResult(ulong id, ulong? pingTimeUsec)
		{
		}
	}
	[Token(Token = "0x20002F9")]
	public class PlatformInitialize
	{
		[Token(Token = "0x4000BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly PlatformInitializeResult Result;

		[Token(Token = "0x600142E")]
		[Address(RVA = "0xE9BDF0", Offset = "0xE9BDF0", VA = "0xE9BDF0")]
		public PlatformInitialize(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20002FA")]
	public class Product
	{
		[Token(Token = "0x4000BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Description;

		[Token(Token = "0x4000BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string FormattedPrice;

		[Token(Token = "0x4000BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Name;

		[Token(Token = "0x4000BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string Sku;

		[Token(Token = "0x600142F")]
		[Address(RVA = "0xE9F0E4", Offset = "0xE9F0E4", VA = "0xE9F0E4")]
		public Product(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20002FB")]
	public class ProductList : DeserializableList<Product>
	{
		[Token(Token = "0x6001430")]
		[Address(RVA = "0xE9BF64", Offset = "0xE9BF64", VA = "0xE9BF64")]
		public ProductList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20002FC")]
	public class Purchase
	{
		[Token(Token = "0x4000BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly DateTime ExpirationTime;

		[Token(Token = "0x4000BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly DateTime GrantTime;

		[Token(Token = "0x4000BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly ulong ID;

		[Token(Token = "0x4000BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string Sku;

		[Token(Token = "0x6001431")]
		[Address(RVA = "0xE9C258", Offset = "0xE9C258", VA = "0xE9C258")]
		public Purchase(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20002FD")]
	public class PurchaseList : DeserializableList<Purchase>
	{
		[Token(Token = "0x6001432")]
		[Address(RVA = "0xE9C3FC", Offset = "0xE9C3FC", VA = "0xE9C3FC")]
		public PurchaseList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x20002FE")]
	public class Room
	{
		[Token(Token = "0x4000BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ApplicationID;

		[Token(Token = "0x4000BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly Dictionary<string, string> DataStore;

		[Token(Token = "0x4000BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Description;

		[Token(Token = "0x4000BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ulong ID;

		[Token(Token = "0x4000BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly UserList InvitedUsersOptional;

		[Token(Token = "0x4000BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9C3DF8", Offset = "0x9C3DF8")]
		public readonly UserList InvitedUsers;

		[Token(Token = "0x4000BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly bool IsMembershipLocked;

		[Token(Token = "0x4000BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public readonly RoomJoinPolicy JoinPolicy;

		[Token(Token = "0x4000BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly RoomJoinability Joinability;

		[Token(Token = "0x4000BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public readonly MatchmakingEnqueuedUserList MatchedUsersOptional;

		[Token(Token = "0x4000BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9C3E30", Offset = "0x9C3E30")]
		public readonly MatchmakingEnqueuedUserList MatchedUsers;

		[Token(Token = "0x4000BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public readonly uint MaxUsers;

		[Token(Token = "0x4000BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public readonly string Name;

		[Token(Token = "0x4000BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public readonly User OwnerOptional;

		[Token(Token = "0x4000BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9C3E68", Offset = "0x9C3E68")]
		public readonly User Owner;

		[Token(Token = "0x4000BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public readonly RoomType Type;

		[Token(Token = "0x4000BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public readonly UserList UsersOptional;

		[Token(Token = "0x4000BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9C3EA0", Offset = "0x9C3EA0")]
		public readonly UserList Users;

		[Token(Token = "0x4000BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public readonly uint Version;

		[Token(Token = "0x6001433")]
		[Address(RVA = "0xE9A94C", Offset = "0xE9A94C", VA = "0xE9A94C")]
		public Room(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20002FF")]
	public class RoomList : DeserializableList<Room>
	{
		[Token(Token = "0x6001434")]
		[Address(RVA = "0xE9CC74", Offset = "0xE9CC74", VA = "0xE9CC74")]
		public RoomList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000300")]
	public class RoomInviteNotification
	{
		[Token(Token = "0x4000BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x4000BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong RoomID;

		[Token(Token = "0x4000BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly ulong SenderID;

		[Token(Token = "0x4000BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly DateTime SentTime;

		[Token(Token = "0x6001435")]
		[Address(RVA = "0xE9C7DC", Offset = "0xE9C7DC", VA = "0xE9C7DC")]
		public RoomInviteNotification(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000301")]
	public class RoomInviteNotificationList : DeserializableList<RoomInviteNotification>
	{
		[Token(Token = "0x6001436")]
		[Address(RVA = "0xE9C980", Offset = "0xE9C980", VA = "0xE9C980")]
		public RoomInviteNotificationList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000302")]
	public class SdkAccount
	{
		[Token(Token = "0x4000BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly SdkAccountType AccountType;

		[Token(Token = "0x4000C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong UserId;

		[Token(Token = "0x6001437")]
		[Address(RVA = "0xE9F19C", Offset = "0xE9F19C", VA = "0xE9F19C")]
		public SdkAccount(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000303")]
	public class SdkAccountList : DeserializableList<SdkAccount>
	{
		[Token(Token = "0x6001438")]
		[Address(RVA = "0xE9D140", Offset = "0xE9D140", VA = "0xE9D140")]
		public SdkAccountList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000304")]
	public class ShareMediaResult
	{
		[Token(Token = "0x4000C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ShareMediaStatus Status;

		[Token(Token = "0x6001439")]
		[Address(RVA = "0xE9D404", Offset = "0xE9D404", VA = "0xE9D404")]
		public ShareMediaResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000305")]
	public class SystemPermission
	{
		[Token(Token = "0x4000C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool HasPermission;

		[Token(Token = "0x4000C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly PermissionGrantStatus PermissionGrantStatus;

		[Token(Token = "0x600143A")]
		[Address(RVA = "0xE9D690", Offset = "0xE9D690", VA = "0xE9D690")]
		public SystemPermission(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000306")]
	public class SystemVoipState
	{
		[Token(Token = "0x4000C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly VoipMuteState MicrophoneMuted;

		[Token(Token = "0x4000C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly SystemVoipStatus Status;

		[Token(Token = "0x600143B")]
		[Address(RVA = "0xE9D818", Offset = "0xE9D818", VA = "0xE9D818")]
		public SystemVoipState(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000307")]
	public class User
	{
		[Token(Token = "0x4000C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x4000C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string ImageURL;

		[Token(Token = "0x4000C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string InviteToken;

		[Token(Token = "0x4000C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string OculusID;

		[Token(Token = "0x4000C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string Presence;

		[Token(Token = "0x4000C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly UserPresenceStatus PresenceStatus;

		[Token(Token = "0x4000C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly string SmallImageUrl;

		[Token(Token = "0x600143C")]
		[Address(RVA = "0xE9D99C", Offset = "0xE9D99C", VA = "0xE9D99C")]
		public User(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000308")]
	public class UserList : DeserializableList<User>
	{
		[Token(Token = "0x600143D")]
		[Address(RVA = "0xE9DE64", Offset = "0xE9DE64", VA = "0xE9DE64")]
		public UserList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000309")]
	public class UserAndRoom
	{
		[Token(Token = "0x4000C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Room RoomOptional;

		[Token(Token = "0x4000C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9C3ED8", Offset = "0x9C3ED8")]
		public readonly Room Room;

		[Token(Token = "0x4000C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly User User;

		[Token(Token = "0x600143E")]
		[Address(RVA = "0xE9F234", Offset = "0xE9F234", VA = "0xE9F234")]
		public UserAndRoom(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200030A")]
	public class UserAndRoomList : DeserializableList<UserAndRoom>
	{
		[Token(Token = "0x600143F")]
		[Address(RVA = "0xE9DB70", Offset = "0xE9DB70", VA = "0xE9DB70")]
		public UserAndRoomList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x200030B")]
	public class UserProof
	{
		[Token(Token = "0x4000C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Value;

		[Token(Token = "0x6001440")]
		[Address(RVA = "0xE9E158", Offset = "0xE9E158", VA = "0xE9E158")]
		public UserProof(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200030C")]
	public class UserReportID
	{
		[Token(Token = "0x4000C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool DidCancel;

		[Token(Token = "0x4000C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong ID;

		[Token(Token = "0x6001441")]
		[Address(RVA = "0xE9E32C", Offset = "0xE9E32C", VA = "0xE9E32C")]
		public UserReportID(IntPtr o)
		{
		}
	}
}
namespace Oculus.Platform.Samples.VrVoiceChat
{
	[Token(Token = "0x200030D")]
	public class P2PManager
	{
		[Token(Token = "0x4000C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly float UPDATE_DELAY;

		[Token(Token = "0x4000C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ulong m_remoteID;

		[Token(Token = "0x4000C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private PeerConnectionState m_state;

		[Token(Token = "0x4000C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_timeForNextUpdate;

		[Token(Token = "0x4000C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly byte PACKET_SIZE;

		[Token(Token = "0x4000C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		private static readonly byte PACKET_FORMAT;

		[Token(Token = "0x4000C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly byte[] sendTransformBuffer;

		[Token(Token = "0x4000C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly byte[] receiveTransformBuffer;

		[Token(Token = "0x4000C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 receivedPosition;

		[Token(Token = "0x4000C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 receivedPositionPrior;

		[Token(Token = "0x4000C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Quaternion receivedRotation;

		[Token(Token = "0x4000C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Quaternion receivedRotationPrior;

		[Token(Token = "0x4000C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float receivedTime;

		[Token(Token = "0x17000180")]
		public bool Connected
		{
			[Token(Token = "0x6001445")]
			[Address(RVA = "0x1173BB0", Offset = "0x1173BB0", VA = "0x1173BB0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000181")]
		public bool ShouldSendHeadUpdate
		{
			[Token(Token = "0x6001448")]
			[Address(RVA = "0x117438C", Offset = "0x117438C", VA = "0x117438C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001442")]
		[Address(RVA = "0x11738A4", Offset = "0x11738A4", VA = "0x11738A4")]
		public P2PManager(Transform initialHeadTransform)
		{
		}

		[Token(Token = "0x6001443")]
		[Address(RVA = "0x1173A0C", Offset = "0x1173A0C", VA = "0x1173A0C")]
		public void ConnectTo(ulong userID)
		{
		}

		[Token(Token = "0x6001444")]
		[Address(RVA = "0x1173B7C", Offset = "0x1173B7C", VA = "0x1173B7C")]
		public void Disconnect()
		{
		}

		[Token(Token = "0x6001446")]
		[Address(RVA = "0x1173BC0", Offset = "0x1173BC0", VA = "0x1173BC0")]
		private void PeerConnectRequestCallback(Message<NetworkingPeer> msg)
		{
		}

		[Token(Token = "0x6001447")]
		[Address(RVA = "0x1173DF0", Offset = "0x1173DF0", VA = "0x1173DF0")]
		private void ConnectionStateChangedCallback(Message<NetworkingPeer> msg)
		{
		}

		[Token(Token = "0x6001449")]
		[Address(RVA = "0x11743D0", Offset = "0x11743D0", VA = "0x11743D0")]
		public void SendHeadTransform(Transform headTransform)
		{
		}

		[Token(Token = "0x600144A")]
		[Address(RVA = "0x1174618", Offset = "0x1174618", VA = "0x1174618")]
		private void PackFloat(float f, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x600144B")]
		[Address(RVA = "0x11746C0", Offset = "0x11746C0", VA = "0x11746C0")]
		public void GetRemoteHeadTransform(Transform headTransform)
		{
		}
	}
	[Token(Token = "0x200030E")]
	public class PlatformManager : MonoBehaviour
	{
		[Token(Token = "0x20005D3")]
		public enum State
		{
			[Token(Token = "0x4001A0B")]
			INITIALIZING,
			[Token(Token = "0x4001A0C")]
			WAITING_TO_CALL_OR_ANSWER,
			[Token(Token = "0x4001A0D")]
			WAITING_FOR_ANSWER,
			[Token(Token = "0x4001A0E")]
			CONNECTED_IN_A_ROOM,
			[Token(Token = "0x4001A0F")]
			HANGUP
		}

		[Token(Token = "0x20005D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB9E4", Offset = "0x9BB9E4")]
		private sealed class <>c__DisplayClass31_0
		{
			[Token(Token = "0x4001A10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RoomManager.Invite invite;

			[Token(Token = "0x6002593")]
			[Address(RVA = "0x1176984", Offset = "0x1176984", VA = "0x1176984")]
			public <>c__DisplayClass31_0()
			{
			}

			[Token(Token = "0x6002594")]
			[Address(RVA = "0x1176998", Offset = "0x1176998", VA = "0x1176998")]
			internal void <SetActiveInvites>b__0()
			{
			}
		}

		[Token(Token = "0x4000C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject m_invitesList;

		[Token(Token = "0x4000C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject m_invitePrefab;

		[Token(Token = "0x4000C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Camera m_camera;

		[Token(Token = "0x4000C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_remoteHead;

		[Token(Token = "0x4000C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private State m_currentState;

		[Token(Token = "0x4000C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static PlatformManager s_instance;

		[Token(Token = "0x4000C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RoomManager m_roomManager;

		[Token(Token = "0x4000C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private P2PManager m_p2pManager;

		[Token(Token = "0x4000C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private VoipManager m_voipManager;

		[Token(Token = "0x4000C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ulong m_myID;

		[Token(Token = "0x4000C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private string m_myOculusID;

		[Token(Token = "0x17000182")]
		public static State CurrentState
		{
			[Token(Token = "0x6001454")]
			[Address(RVA = "0x1175B98", Offset = "0x1175B98", VA = "0x1175B98")]
			get
			{
				return default(State);
			}
		}

		[Token(Token = "0x17000183")]
		public static ulong MyID
		{
			[Token(Token = "0x6001455")]
			[Address(RVA = "0x1173AA0", Offset = "0x1173AA0", VA = "0x1173AA0")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x17000184")]
		public static string MyOculusID
		{
			[Token(Token = "0x6001456")]
			[Address(RVA = "0x1175C10", Offset = "0x1175C10", VA = "0x1175C10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600144D")]
		[Address(RVA = "0x1174BE0", Offset = "0x1174BE0", VA = "0x1174BE0")]
		private void Update()
		{
		}

		[Token(Token = "0x600144E")]
		[Address(RVA = "0x1174E70", Offset = "0x1174E70", VA = "0x1174E70")]
		private void Awake()
		{
		}

		[Token(Token = "0x600144F")]
		[Address(RVA = "0x1175638", Offset = "0x1175638", VA = "0x1175638")]
		private void Start()
		{
		}

		[Token(Token = "0x6001450")]
		[Address(RVA = "0x11756D4", Offset = "0x11756D4", VA = "0x11756D4")]
		private void IsEntitledCallback(Message msg)
		{
		}

		[Token(Token = "0x6001451")]
		[Address(RVA = "0x1175888", Offset = "0x1175888", VA = "0x1175888")]
		private void GetLoggedInUserCallback(Message<User> msg)
		{
		}

		[Token(Token = "0x6001452")]
		[Address(RVA = "0x1175A00", Offset = "0x1175A00", VA = "0x1175A00")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001453")]
		[Address(RVA = "0x11757D0", Offset = "0x11757D0", VA = "0x11757D0")]
		public static void TerminateWithError(Message msg)
		{
		}

		[Token(Token = "0x6001457")]
		[Address(RVA = "0x1175D34", Offset = "0x1175D34", VA = "0x1175D34")]
		public void CallFriendOnClick()
		{
		}

		[Token(Token = "0x6001458")]
		[Address(RVA = "0x1175E78", Offset = "0x1175E78", VA = "0x1175E78")]
		public void HangupOnClick()
		{
		}

		[Token(Token = "0x6001459")]
		[Address(RVA = "0x1175EA4", Offset = "0x1175EA4", VA = "0x1175EA4")]
		public void QuitOnClick()
		{
		}

		[Token(Token = "0x600145A")]
		[Address(RVA = "0x1175EAC", Offset = "0x1175EAC", VA = "0x1175EAC")]
		public static void AnswerCallOnClick(ulong roomID)
		{
		}

		[Token(Token = "0x600145B")]
		[Address(RVA = "0x1175074", Offset = "0x1175074", VA = "0x1175074")]
		public static void TransitionToState(State newState)
		{
		}

		[Token(Token = "0x600145C")]
		[Address(RVA = "0x11740B4", Offset = "0x11740B4", VA = "0x11740B4")]
		public static void SetBackgroundColorForState()
		{
		}

		[Token(Token = "0x600145D")]
		[Address(RVA = "0x117615C", Offset = "0x117615C", VA = "0x117615C")]
		public static void SetActiveInvites(List<RoomManager.Invite> invites)
		{
		}

		[Token(Token = "0x600145E")]
		[Address(RVA = "0x117698C", Offset = "0x117698C", VA = "0x117698C")]
		public PlatformManager()
		{
		}
	}
	[Token(Token = "0x200030F")]
	public class RoomManager
	{
		[Token(Token = "0x20005D5")]
		public struct Invite
		{
			[Token(Token = "0x4001A11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public readonly ulong RoomID;

			[Token(Token = "0x4001A12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public readonly string OwnerID;

			[Token(Token = "0x6002595")]
			[Address(RVA = "0xA93D34", Offset = "0xA93D34", VA = "0xA93D34")]
			public Invite(ulong roomID, string owner)
			{
			}
		}

		[Token(Token = "0x4000C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ulong m_roomID;

		[Token(Token = "0x4000C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private User m_remoteUser;

		[Token(Token = "0x4000C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly float INVITE_POLL_FREQ_SECONDS;

		[Token(Token = "0x4000C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float m_nextPollTime;

		[Token(Token = "0x4000C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<ulong> m_pendingRoomRequests;

		[Token(Token = "0x4000C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<Invite> m_invites;

		[Token(Token = "0x17000185")]
		public ulong RemoteUserID
		{
			[Token(Token = "0x6001461")]
			[Address(RVA = "0x1176064", Offset = "0x1176064", VA = "0x1176064")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x17000186")]
		public string RemoteOculusID
		{
			[Token(Token = "0x6001462")]
			[Address(RVA = "0x1176A00", Offset = "0x1176A00", VA = "0x1176A00")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000187")]
		public bool ShouldPollInviteList
		{
			[Token(Token = "0x6001468")]
			[Address(RVA = "0x1174CEC", Offset = "0x1174CEC", VA = "0x1174CEC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001460")]
		[Address(RVA = "0x11754B0", Offset = "0x11754B0", VA = "0x11754B0")]
		public RoomManager()
		{
		}

		[Token(Token = "0x6001463")]
		[Address(RVA = "0x1176A64", Offset = "0x1176A64", VA = "0x1176A64")]
		private void LaunchedFromAcceptingInviteCallback(Message<string> msg)
		{
		}

		[Token(Token = "0x6001464")]
		[Address(RVA = "0x11759D8", Offset = "0x11759D8", VA = "0x11759D8")]
		public bool CheckForLaunchInvite()
		{
			return default(bool);
		}

		[Token(Token = "0x6001465")]
		[Address(RVA = "0x1175DC0", Offset = "0x1175DC0", VA = "0x1175DC0")]
		public void CreateRoomAndLaunchInviteMenu()
		{
		}

		[Token(Token = "0x6001466")]
		[Address(RVA = "0x1176BC8", Offset = "0x1176BC8", VA = "0x1176BC8")]
		private void CreateAndJoinPrivateRoomCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6001467")]
		[Address(RVA = "0x1176D18", Offset = "0x1176D18", VA = "0x1176D18")]
		private void OnLaunchInviteWorkflowComplete(Message msg)
		{
		}

		[Token(Token = "0x6001469")]
		[Address(RVA = "0x1174D2C", Offset = "0x1174D2C", VA = "0x1174D2C")]
		public void UpdateActiveInvitesList()
		{
		}

		[Token(Token = "0x600146A")]
		[Address(RVA = "0x1176DA4", Offset = "0x1176DA4", VA = "0x1176DA4")]
		private void GetRoomInviteNotificationsCallback(Message msg_untyped)
		{
		}

		[Token(Token = "0x600146B")]
		[Address(RVA = "0x1177204", Offset = "0x1177204", VA = "0x1177204")]
		private void GetRoomInfoCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x600146C")]
		[Address(RVA = "0x1175FAC", Offset = "0x1175FAC", VA = "0x1175FAC")]
		public void JoinExistingRoom(ulong roomID)
		{
		}

		[Token(Token = "0x600146D")]
		[Address(RVA = "0x117749C", Offset = "0x117749C", VA = "0x117749C")]
		private void JoinRoomCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x600146E")]
		[Address(RVA = "0x1177AE4", Offset = "0x1177AE4", VA = "0x1177AE4")]
		private void RoomUpdateCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x600146F")]
		[Address(RVA = "0x1175A70", Offset = "0x1175A70", VA = "0x1175A70")]
		public void LeaveCurrentRoom()
		{
		}
	}
	[Token(Token = "0x2000310")]
	public class VoipManager
	{
		[Token(Token = "0x4000C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ulong m_remoteID;

		[Token(Token = "0x4000C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private PeerConnectionState m_state;

		[Token(Token = "0x4000C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly GameObject m_remoteHead;

		[Token(Token = "0x17000188")]
		public bool Connected
		{
			[Token(Token = "0x6001474")]
			[Address(RVA = "0x117614C", Offset = "0x117614C", VA = "0x117614C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001471")]
		[Address(RVA = "0x1175578", Offset = "0x1175578", VA = "0x1175578")]
		public VoipManager(GameObject remoteHead)
		{
		}

		[Token(Token = "0x6001472")]
		[Address(RVA = "0x117607C", Offset = "0x117607C", VA = "0x117607C")]
		public void ConnectTo(ulong userID)
		{
		}

		[Token(Token = "0x6001473")]
		[Address(RVA = "0x1175AE8", Offset = "0x1175AE8", VA = "0x1175AE8")]
		public void Disconnect()
		{
		}

		[Token(Token = "0x6001475")]
		[Address(RVA = "0x11786BC", Offset = "0x11786BC", VA = "0x11786BC")]
		private void VoipConnectRequestCallback(Message<NetworkingPeer> msg)
		{
		}

		[Token(Token = "0x6001476")]
		[Address(RVA = "0x1178988", Offset = "0x1178988", VA = "0x1178988")]
		private void VoipStateChangedCallback(Message<NetworkingPeer> msg)
		{
		}
	}
	[Token(Token = "0x2000311")]
	public class VREyeRaycaster : MonoBehaviour
	{
		[Token(Token = "0x4000C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private EventSystem m_eventSystem;

		[Token(Token = "0x4000C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Button m_currentButton;

		[Token(Token = "0x6001477")]
		[Address(RVA = "0x1178188", Offset = "0x1178188", VA = "0x1178188")]
		private void Update()
		{
		}

		[Token(Token = "0x6001478")]
		[Address(RVA = "0x11783BC", Offset = "0x11783BC", VA = "0x11783BC")]
		public VREyeRaycaster()
		{
		}
	}
}
namespace Oculus.Platform.Samples.VrHoops
{
	[Token(Token = "0x2000312")]
	public class AchievementsManager
	{
		[Token(Token = "0x4000C36")]
		private const string LIKES_TO_WIN = "LIKES_TO_WIN";

		[Token(Token = "0x4000C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool m_likesToWinUnlocked;

		[Token(Token = "0x17000189")]
		public bool LikesToWin
		{
			[Token(Token = "0x6001479")]
			[Address(RVA = "0x1167C98", Offset = "0x1167C98", VA = "0x1167C98")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600147A")]
		[Address(RVA = "0x1167CA0", Offset = "0x1167CA0", VA = "0x1167CA0")]
		public void CheckForAchievmentUpdates()
		{
		}

		[Token(Token = "0x600147B")]
		[Address(RVA = "0x1167DC0", Offset = "0x1167DC0", VA = "0x1167DC0")]
		public void RecordWinForLocalUser()
		{
		}

		[Token(Token = "0x600147C")]
		[Address(RVA = "0x1167E1C", Offset = "0x1167E1C", VA = "0x1167E1C")]
		public AchievementsManager()
		{
		}

		[Token(Token = "0x600147D")]
		[Address(RVA = "0x1167E24", Offset = "0x1167E24", VA = "0x1167E24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D1648", Offset = "0x9D1648")]
		private void <CheckForAchievmentUpdates>b__4_0(Message<AchievementProgressList> msg)
		{
		}
	}
	[Token(Token = "0x2000313")]
	public class AIPlayer : Player
	{
		[Token(Token = "0x600147E")]
		[Address(RVA = "0x11678BC", Offset = "0x11678BC", VA = "0x11678BC")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600147F")]
		[Address(RVA = "0x1167C24", Offset = "0x1167C24", VA = "0x1167C24")]
		public AIPlayer()
		{
		}
	}
	[Token(Token = "0x2000314")]
	public class BallEjector : MonoBehaviour
	{
		[Token(Token = "0x6001480")]
		[Address(RVA = "0x11680B0", Offset = "0x11680B0", VA = "0x11680B0")]
		public BallEjector()
		{
		}
	}
	[Token(Token = "0x2000315")]
	public class Camera2DController : MonoBehaviour
	{
		[Token(Token = "0x6001481")]
		[Address(RVA = "0x11680B8", Offset = "0x11680B8", VA = "0x11680B8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001482")]
		[Address(RVA = "0x11683A4", Offset = "0x11683A4", VA = "0x11683A4")]
		public Camera2DController()
		{
		}
	}
	[Token(Token = "0x2000316")]
	public class DetectBasket : MonoBehaviour
	{
		[Token(Token = "0x20005D6")]
		private enum BasketPhase
		{
			[Token(Token = "0x4001A14")]
			NONE,
			[Token(Token = "0x4001A15")]
			TOP,
			[Token(Token = "0x4001A16")]
			BOTH,
			[Token(Token = "0x4001A17")]
			BOTTOM
		}

		[Token(Token = "0x4000C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private BasketPhase m_phase;

		[Token(Token = "0x4000C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Player m_owningPlayer;

		[Token(Token = "0x1700018A")]
		public Player Player
		{
			[Token(Token = "0x6001483")]
			[Address(RVA = "0x11683AC", Offset = "0x11683AC", VA = "0x11683AC")]
			set
			{
			}
		}

		[Token(Token = "0x6001484")]
		[Address(RVA = "0x11683B4", Offset = "0x11683B4", VA = "0x11683B4")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001485")]
		[Address(RVA = "0x11684BC", Offset = "0x11684BC", VA = "0x11684BC")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001486")]
		[Address(RVA = "0x11686B8", Offset = "0x11686B8", VA = "0x11686B8")]
		public DetectBasket()
		{
		}
	}
	[Token(Token = "0x2000317")]
	public class FlyText : MonoBehaviour
	{
		[Token(Token = "0x4000C3A")]
		private const float LIFESPAN = 3f;

		[Token(Token = "0x4000C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Vector3 m_movePerFrame;

		[Token(Token = "0x4000C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float m_eol;

		[Token(Token = "0x6001487")]
		[Address(RVA = "0x11686C0", Offset = "0x11686C0", VA = "0x11686C0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001488")]
		[Address(RVA = "0x1168790", Offset = "0x1168790", VA = "0x1168790")]
		private void Update()
		{
		}

		[Token(Token = "0x6001489")]
		[Address(RVA = "0x11688F4", Offset = "0x11688F4", VA = "0x11688F4")]
		public FlyText()
		{
		}
	}
	[Token(Token = "0x2000318")]
	public class GoalMover : MonoBehaviour
	{
		[Token(Token = "0x4000C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float MAX_OFFSET;

		[Token(Token = "0x4000C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_speed;

		[Token(Token = "0x4000C3F")]
		private const float MOVE_TOLERANCE = 0.1f;

		[Token(Token = "0x4000C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 m_expectedPosition;

		[Token(Token = "0x4000C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 m_moveDirection;

		[Token(Token = "0x4000C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 m_nextMoveDirection;

		[Token(Token = "0x1700018B")]
		public Vector3 ExpectedPosition
		{
			[Token(Token = "0x600148A")]
			[Address(RVA = "0x1168990", Offset = "0x1168990", VA = "0x1168990")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600148B")]
			[Address(RVA = "0x116899C", Offset = "0x116899C", VA = "0x116899C")]
			set
			{
			}
		}

		[Token(Token = "0x1700018C")]
		public Vector3 MoveDirection
		{
			[Token(Token = "0x600148C")]
			[Address(RVA = "0x11689A8", Offset = "0x11689A8", VA = "0x11689A8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600148D")]
			[Address(RVA = "0x11689B4", Offset = "0x11689B4", VA = "0x11689B4")]
			set
			{
			}
		}

		[Token(Token = "0x1700018D")]
		public Vector3 NextMoveDirection
		{
			[Token(Token = "0x600148E")]
			[Address(RVA = "0x11689C0", Offset = "0x11689C0", VA = "0x11689C0")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600148F")]
			[Address(RVA = "0x11689CC", Offset = "0x11689CC", VA = "0x11689CC")]
			set
			{
			}
		}

		[Token(Token = "0x6001490")]
		[Address(RVA = "0x11689D8", Offset = "0x11689D8", VA = "0x11689D8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001491")]
		[Address(RVA = "0x1168B70", Offset = "0x1168B70", VA = "0x1168B70")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001492")]
		[Address(RVA = "0x1168F3C", Offset = "0x1168F3C", VA = "0x1168F3C")]
		public GoalMover()
		{
		}
	}
	[Token(Token = "0x2000319")]
	public class LeaderboardManager
	{
		[Token(Token = "0x20005D7")]
		public delegate void OnMostWinsLeaderboardUpdated(SortedDictionary<int, LeaderboardEntry> entries);

		[Token(Token = "0x20005D8")]
		public delegate void OnHighScoreLeaderboardUpdated(SortedDictionary<int, LeaderboardEntry> entries);

		[Token(Token = "0x4000C43")]
		private const string MOST_MATCHES_WON = "MOST_MATCHES_WON";

		[Token(Token = "0x4000C44")]
		private const string HIGHEST_MATCH_SCORE = "HIGHEST_MATCH_SCORE";

		[Token(Token = "0x4000C45")]
		private const int TOP_N_COUNT = 5;

		[Token(Token = "0x4000C46")]
		private const float LEADERBOARD_POLL_FREQ = 30f;

		[Token(Token = "0x4000C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float m_nextCheckTime;

		[Token(Token = "0x4000C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SortedDictionary<int, LeaderboardEntry> m_mostWins;

		[Token(Token = "0x4000C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool m_foundLocalUserMostWinsEntry;

		[Token(Token = "0x4000C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private long m_numWins;

		[Token(Token = "0x4000C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OnMostWinsLeaderboardUpdated m_mostWinsCallback;

		[Token(Token = "0x4000C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SortedDictionary<int, LeaderboardEntry> m_highScores;

		[Token(Token = "0x4000C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_foundLocalUserHighScore;

		[Token(Token = "0x4000C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OnHighScoreLeaderboardUpdated m_highScoreCallback;

		[Token(Token = "0x1700018E")]
		public OnMostWinsLeaderboardUpdated MostWinsLeaderboardUpdatedCallback
		{
			[Token(Token = "0x6001494")]
			[Address(RVA = "0x11691DC", Offset = "0x11691DC", VA = "0x11691DC")]
			set
			{
			}
		}

		[Token(Token = "0x1700018F")]
		public OnHighScoreLeaderboardUpdated HighScoreLeaderboardUpdatedCallback
		{
			[Token(Token = "0x6001497")]
			[Address(RVA = "0x1169DE0", Offset = "0x1169DE0", VA = "0x1169DE0")]
			set
			{
			}
		}

		[Token(Token = "0x6001493")]
		[Address(RVA = "0x1168F54", Offset = "0x1168F54", VA = "0x1168F54")]
		public void CheckForUpdates()
		{
		}

		[Token(Token = "0x6001495")]
		[Address(RVA = "0x1168FBC", Offset = "0x1168FBC", VA = "0x1168FBC")]
		private void QueryMostWinsLeaderboard()
		{
		}

		[Token(Token = "0x6001496")]
		[Address(RVA = "0x11691E4", Offset = "0x11691E4", VA = "0x11691E4")]
		private void MostWinsGetEntriesCallback(Message<LeaderboardEntryList> msg)
		{
		}

		[Token(Token = "0x6001498")]
		[Address(RVA = "0x11690CC", Offset = "0x11690CC", VA = "0x11690CC")]
		private void QueryHighScoreLeaderboard()
		{
		}

		[Token(Token = "0x6001499")]
		[Address(RVA = "0x1169DE8", Offset = "0x1169DE8", VA = "0x1169DE8")]
		private void HighestScoreGetEntriesCallback(Message<LeaderboardEntryList> msg)
		{
		}

		[Token(Token = "0x600149A")]
		[Address(RVA = "0x116A93C", Offset = "0x116A93C", VA = "0x116A93C")]
		public void SubmitMatchScores(bool wonMatch, uint score)
		{
		}

		[Token(Token = "0x600149B")]
		[Address(RVA = "0x116A9F0", Offset = "0x116A9F0", VA = "0x116A9F0")]
		public LeaderboardManager()
		{
		}
	}
	[Token(Token = "0x200031A")]
	public class LocalPlayer : Player
	{
		[Token(Token = "0x17000190")]
		public override uint Score
		{
			[Token(Token = "0x600149C")]
			[Address(RVA = "0x116AA78", Offset = "0x116AA78", VA = "0x116AA78", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x600149D")]
		[Address(RVA = "0x116ADE0", Offset = "0x116ADE0", VA = "0x116ADE0")]
		private void Update()
		{
		}

		[Token(Token = "0x600149E")]
		[Address(RVA = "0x116AF94", Offset = "0x116AF94", VA = "0x116AF94")]
		public LocalPlayer()
		{
		}
	}
	[Token(Token = "0x200031B")]
	public class MatchController : MonoBehaviour
	{
		[Token(Token = "0x20005D9")]
		private enum State
		{
			[Token(Token = "0x4001A19")]
			UNKNOWN,
			[Token(Token = "0x4001A1A")]
			NONE,
			[Token(Token = "0x4001A1B")]
			WAITING_TO_START_PRACTICE,
			[Token(Token = "0x4001A1C")]
			PRACTICING,
			[Token(Token = "0x4001A1D")]
			VIEWING_RESULTS_PRACTICE,
			[Token(Token = "0x4001A1E")]
			WAITING_FOR_MATCH,
			[Token(Token = "0x4001A1F")]
			WAITING_TO_SETUP_MATCH,
			[Token(Token = "0x4001A20")]
			PLAYING_MATCH,
			[Token(Token = "0x4001A21")]
			VIEWING_MATCH_RESULTS
		}

		[Token(Token = "0x4000C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text m_timerText;

		[Token(Token = "0x4000C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Camera m_camera;

		[Token(Token = "0x4000C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform m_idleCameraTransform;

		[Token(Token = "0x4000C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Text m_matchmakeButtonText;

		[Token(Token = "0x4000C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private PlayerArea[] m_playerAreas;

		[Token(Token = "0x4000C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private uint PRACTICE_WARMUP_TIME;

		[Token(Token = "0x4000C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private uint MATCH_WARMUP_TIME;

		[Token(Token = "0x4000C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private uint MATCH_TIME;

		[Token(Token = "0x4000C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private uint MATCH_COOLDOWN_TIME;

		[Token(Token = "0x4000C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject m_mostWinsLeaderboard;

		[Token(Token = "0x4000C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject m_highestScoresLeaderboard;

		[Token(Token = "0x4000C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject m_leaderboardEntryPrefab;

		[Token(Token = "0x4000C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject m_flytext;

		[Token(Token = "0x4000C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private State m_currentState;

		[Token(Token = "0x4000C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float m_nextStateTransitionTime;

		[Token(Token = "0x4000C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int m_localSlot;

		[Token(Token = "0x17000191")]
		public float MatchStartTime
		{
			[Token(Token = "0x60014A1")]
			[Address(RVA = "0x116B860", Offset = "0x116B860", VA = "0x116B860")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60014A2")]
			[Address(RVA = "0x116B880", Offset = "0x116B880", VA = "0x116B880")]
			private set
			{
			}
		}

		[Token(Token = "0x600149F")]
		[Address(RVA = "0x116AF98", Offset = "0x116AF98", VA = "0x116AF98")]
		private void Start()
		{
		}

		[Token(Token = "0x60014A0")]
		[Address(RVA = "0x116B588", Offset = "0x116B588", VA = "0x116B588")]
		private void Update()
		{
		}

		[Token(Token = "0x60014A3")]
		[Address(RVA = "0x116B258", Offset = "0x116B258", VA = "0x116B258")]
		private void TransitionToState(State newState)
		{
		}

		[Token(Token = "0x60014A4")]
		[Address(RVA = "0x116B5AC", Offset = "0x116B5AC", VA = "0x116B5AC")]
		private void UpdateCheckForNextTimedTransition()
		{
		}

		[Token(Token = "0x60014A5")]
		[Address(RVA = "0x116B658", Offset = "0x116B658", VA = "0x116B658")]
		private void UpdateMatchTimer()
		{
		}

		[Token(Token = "0x60014A6")]
		[Address(RVA = "0x116B888", Offset = "0x116B888", VA = "0x116B888")]
		private void SetupForIdle()
		{
		}

		[Token(Token = "0x60014A7")]
		[Address(RVA = "0x116BBAC", Offset = "0x116BBAC", VA = "0x116BBAC")]
		private void SetupForPractice()
		{
		}

		[Token(Token = "0x60014A8")]
		[Address(RVA = "0x116C3A0", Offset = "0x116C3A0", VA = "0x116C3A0")]
		private Player MatchPlayerAddedCallback(int slot, User user)
		{
			return null;
		}

		[Token(Token = "0x60014A9")]
		[Address(RVA = "0x116B964", Offset = "0x116B964", VA = "0x116B964")]
		private void MoveCameraToIdlePosition()
		{
		}

		[Token(Token = "0x60014AA")]
		[Address(RVA = "0x116BCF0", Offset = "0x116BCF0", VA = "0x116BCF0")]
		private void MoveCameraToMatchPosition()
		{
		}

		[Token(Token = "0x60014AB")]
		[Address(RVA = "0x116C728", Offset = "0x116C728", VA = "0x116C728")]
		public void StartPracticeMatch()
		{
		}

		[Token(Token = "0x60014AC")]
		[Address(RVA = "0x116C740", Offset = "0x116C740", VA = "0x116C740")]
		public void PlayOnlineOrCancel()
		{
		}

		[Token(Token = "0x60014AD")]
		[Address(RVA = "0x116C900", Offset = "0x116C900", VA = "0x116C900")]
		private void OnMatchFoundCallback(bool success)
		{
		}

		[Token(Token = "0x60014AE")]
		[Address(RVA = "0x116C914", Offset = "0x116C914", VA = "0x116C914")]
		private float StartTimeOfferCallback(float remoteTime)
		{
			return default(float);
		}

		[Token(Token = "0x60014AF")]
		[Address(RVA = "0x116CA18", Offset = "0x116CA18", VA = "0x116CA18")]
		private void MostWinsLeaderboardCallback(SortedDictionary<int, LeaderboardEntry> entries)
		{
		}

		[Token(Token = "0x60014B0")]
		[Address(RVA = "0x116D044", Offset = "0x116D044", VA = "0x116D044")]
		private void HighestScoreLeaderboardCallback(SortedDictionary<int, LeaderboardEntry> entries)
		{
		}

		[Token(Token = "0x60014B1")]
		[Address(RVA = "0x116BEC0", Offset = "0x116BEC0", VA = "0x116BEC0")]
		private void CalculateMatchResults()
		{
		}

		[Token(Token = "0x60014B2")]
		[Address(RVA = "0x116C4F8", Offset = "0x116C4F8", VA = "0x116C4F8")]
		private void DisplayAchievementFlytext()
		{
		}

		[Token(Token = "0x60014B3")]
		[Address(RVA = "0x116D738", Offset = "0x116D738", VA = "0x116D738")]
		public MatchController()
		{
		}
	}
	[Token(Token = "0x200031C")]
	public class MatchmakingManager
	{
		[Token(Token = "0x20005DA")]
		public delegate void OnEnqueueResult(bool successful);

		[Token(Token = "0x20005DB")]
		public delegate Player OnMatchPlayerAdded(int slot, User user);

		[Token(Token = "0x4000C5F")]
		private const string NORMAL_POOL = "NORMAL_QUICKMATCH";

		[Token(Token = "0x4000C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ulong m_matchRoom;

		[Token(Token = "0x4000C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Dictionary<ulong, User> m_remotePlayers;

		[Token(Token = "0x4000C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private OnEnqueueResult m_enqueueCallback;

		[Token(Token = "0x4000C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OnMatchPlayerAdded m_playerCallback;

		[Token(Token = "0x17000192")]
		public OnEnqueueResult EnqueueResultCallback
		{
			[Token(Token = "0x60014B5")]
			[Address(RVA = "0x116D88C", Offset = "0x116D88C", VA = "0x116D88C")]
			private get
			{
				return null;
			}
			[Token(Token = "0x60014B6")]
			[Address(RVA = "0x116B1C0", Offset = "0x116B1C0", VA = "0x116B1C0")]
			set
			{
			}
		}

		[Token(Token = "0x17000193")]
		public OnMatchPlayerAdded MatchPlayerAddedCallback
		{
			[Token(Token = "0x60014B7")]
			[Address(RVA = "0x116D894", Offset = "0x116D894", VA = "0x116D894")]
			private get
			{
				return null;
			}
			[Token(Token = "0x60014B8")]
			[Address(RVA = "0x116B1D8", Offset = "0x116B1D8", VA = "0x116B1D8")]
			set
			{
			}
		}

		[Token(Token = "0x60014B4")]
		[Address(RVA = "0x116D7A4", Offset = "0x116D7A4", VA = "0x116D7A4")]
		public MatchmakingManager()
		{
		}

		[Token(Token = "0x60014B9")]
		[Address(RVA = "0x116C81C", Offset = "0x116C81C", VA = "0x116C81C")]
		public void QueueForMatch()
		{
		}

		[Token(Token = "0x60014BA")]
		[Address(RVA = "0x116D89C", Offset = "0x116D89C", VA = "0x116D89C")]
		private void MatchmakingEnqueueCallback(Message msg)
		{
		}

		[Token(Token = "0x60014BB")]
		[Address(RVA = "0x116DDC4", Offset = "0x116DDC4", VA = "0x116DDC4")]
		private void MatchFoundCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x60014BC")]
		[Address(RVA = "0x116DED4", Offset = "0x116DED4", VA = "0x116DED4")]
		private void MatchmakingJoinRoomCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x60014BD")]
		[Address(RVA = "0x116EA54", Offset = "0x116EA54", VA = "0x116EA54")]
		private void MatchmakingRoomUpdateCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x60014BE")]
		[Address(RVA = "0x116C238", Offset = "0x116C238", VA = "0x116C238")]
		public void EndMatch()
		{
		}

		[Token(Token = "0x60014BF")]
		[Address(RVA = "0x116C8D8", Offset = "0x116C8D8", VA = "0x116C8D8")]
		public void LeaveQueue()
		{
		}
	}
	[Token(Token = "0x200031D")]
	public class P2PManager
	{
		[Token(Token = "0x20005DC")]
		private class RemotePlayerData
		{
			[Token(Token = "0x4001A22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PeerConnectionState state;

			[Token(Token = "0x4001A23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public RemotePlayer player;

			[Token(Token = "0x4001A24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float remoteTimeOffset;

			[Token(Token = "0x4001A25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float lastReceivedBallsTime;

			[Token(Token = "0x4001A26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public readonly Dictionary<int, P2PNetworkBall> activeBalls;

			[Token(Token = "0x60025A6")]
			[Address(RVA = "0x11707E8", Offset = "0x11707E8", VA = "0x11707E8")]
			public RemotePlayerData()
			{
			}
		}

		[Token(Token = "0x20005DD")]
		public delegate float StartTimeOffer(float remoteTime);

		[Token(Token = "0x4000C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Dictionary<ulong, RemotePlayerData> m_remotePlayers;

		[Token(Token = "0x4000C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float m_timeForNextBallUpdate;

		[Token(Token = "0x4000C66")]
		private const byte TIME_SYNC_MESSAGE = 1;

		[Token(Token = "0x4000C67")]
		private const uint TIME_SYNC_MESSAGE_SIZE = 5u;

		[Token(Token = "0x4000C68")]
		private const int TIME_SYNC_MESSAGE_COUNT = 7;

		[Token(Token = "0x4000C69")]
		private const byte START_TIME_MESSAGE = 2;

		[Token(Token = "0x4000C6A")]
		private const uint START_TIME_MESSAGE_SIZE = 5u;

		[Token(Token = "0x4000C6B")]
		private const byte BACKBOARD_UPDATE_MESSAGE = 3;

		[Token(Token = "0x4000C6C")]
		private const uint BACKBOARD_UPDATE_MESSAGE_SIZE = 41u;

		[Token(Token = "0x4000C6D")]
		private const byte LOCAL_BALLS_UPDATE_MESSAGE = 4;

		[Token(Token = "0x4000C6E")]
		private const uint LOCAL_BALLS_UPDATE_MESSATE_SIZE_MAX = 353u;

		[Token(Token = "0x4000C6F")]
		private const float LOCAL_BALLS_UPDATE_DELAY = 0.1f;

		[Token(Token = "0x4000C70")]
		private const byte SCORE_UPDATE_MESSAGE = 5;

		[Token(Token = "0x4000C71")]
		private const uint SCORE_UPDATE_MESSAGE_SIZE = 5u;

		[Token(Token = "0x4000C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Dictionary<int, P2PNetworkBall> m_localBalls;

		[Token(Token = "0x4000C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly byte[] readBuffer;

		[Token(Token = "0x4000C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly Dictionary<ulong, List<float>> m_remoteSyncTimeCache;

		[Token(Token = "0x4000C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly Dictionary<ulong, float> m_remoteSentTimeCache;

		[Token(Token = "0x4000C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private StartTimeOffer m_startTimeOfferCallback;

		[Token(Token = "0x17000194")]
		public StartTimeOffer StartTimeOfferCallback
		{
			[Token(Token = "0x60014C9")]
			[Address(RVA = "0x11714F8", Offset = "0x11714F8", VA = "0x11714F8")]
			private get
			{
				return null;
			}
			[Token(Token = "0x60014CA")]
			[Address(RVA = "0x116B1F0", Offset = "0x116B1F0", VA = "0x116B1F0")]
			set
			{
			}
		}

		[Token(Token = "0x60014C0")]
		[Address(RVA = "0x116F200", Offset = "0x116F200", VA = "0x116F200")]
		public P2PManager()
		{
		}

		[Token(Token = "0x60014C1")]
		[Address(RVA = "0x116F378", Offset = "0x116F378", VA = "0x116F378")]
		public void UpdateNetwork()
		{
		}

		[Token(Token = "0x60014C2")]
		[Address(RVA = "0x116E810", Offset = "0x116E810", VA = "0x116E810")]
		public void AddRemotePlayer(RemotePlayer player)
		{
		}

		[Token(Token = "0x60014C3")]
		[Address(RVA = "0x116EF68", Offset = "0x116EF68", VA = "0x116EF68")]
		public void DisconnectAll()
		{
		}

		[Token(Token = "0x60014C4")]
		[Address(RVA = "0x1170858", Offset = "0x1170858", VA = "0x1170858")]
		private void PeerConnectRequestCallback(Message<NetworkingPeer> msg)
		{
		}

		[Token(Token = "0x60014C5")]
		[Address(RVA = "0x1170AE8", Offset = "0x1170AE8", VA = "0x1170AE8")]
		private void ConnectionStateChangedCallback(Message<NetworkingPeer> msg)
		{
		}

		[Token(Token = "0x60014C6")]
		[Address(RVA = "0x1170F78", Offset = "0x1170F78", VA = "0x1170F78")]
		private void SendTimeSyncMessage(ulong remoteID)
		{
		}

		[Token(Token = "0x60014C7")]
		[Address(RVA = "0x116F5B4", Offset = "0x116F5B4", VA = "0x116F5B4")]
		private void ReadTimeSyncMessage(ulong remoteID, byte[] msg)
		{
		}

		[Token(Token = "0x60014C8")]
		[Address(RVA = "0x1171434", Offset = "0x1171434", VA = "0x1171434")]
		private float ShiftRemoteTime(ulong remoteID, float remoteTime)
		{
			return default(float);
		}

		[Token(Token = "0x60014CB")]
		[Address(RVA = "0x1171220", Offset = "0x1171220", VA = "0x1171220")]
		private void OfferMatchStartTime()
		{
		}

		[Token(Token = "0x60014CC")]
		[Address(RVA = "0x116FCEC", Offset = "0x116FCEC", VA = "0x116FCEC")]
		private void ReceiveMatchStartTimeOffer(ulong remoteID, byte[] msg)
		{
		}

		[Token(Token = "0x60014CD")]
		[Address(RVA = "0x1171984", Offset = "0x1171984", VA = "0x1171984")]
		public void SendBackboardUpdate(float time, Vector3 pos, Vector3 moveDir, Vector3 nextMoveDir)
		{
		}

		[Token(Token = "0x60014CE")]
		[Address(RVA = "0x116FD58", Offset = "0x116FD58", VA = "0x116FD58")]
		private void ReceiveBackboardUpdate(ulong remoteID, byte[] msg)
		{
		}

		[Token(Token = "0x60014CF")]
		[Address(RVA = "0x116AED0", Offset = "0x116AED0", VA = "0x116AED0")]
		public void AddNetworkBall(GameObject ball)
		{
		}

		[Token(Token = "0x60014D0")]
		[Address(RVA = "0x1171E7C", Offset = "0x1171E7C", VA = "0x1171E7C")]
		public void RemoveNetworkBall(GameObject ball)
		{
		}

		[Token(Token = "0x60014D1")]
		[Address(RVA = "0x11703A4", Offset = "0x11703A4", VA = "0x11703A4")]
		private void SendLocalBallTransforms()
		{
		}

		[Token(Token = "0x60014D2")]
		[Address(RVA = "0x116FEB8", Offset = "0x116FEB8", VA = "0x116FEB8")]
		private void ReceiveBallTransforms(ulong remoteID, byte[] msg, ulong msgLength)
		{
		}

		[Token(Token = "0x60014D3")]
		[Address(RVA = "0x116AC00", Offset = "0x116AC00", VA = "0x116AC00")]
		public void SendScoreUpdate(uint score)
		{
		}

		[Token(Token = "0x60014D4")]
		[Address(RVA = "0x11702E4", Offset = "0x11702E4", VA = "0x11702E4")]
		private void ReceiveScoredUpdate(ulong remoteID, byte[] msg)
		{
		}

		[Token(Token = "0x60014D5")]
		[Address(RVA = "0x1171BE4", Offset = "0x1171BE4", VA = "0x1171BE4")]
		private void PackVector3(Vector3 vec, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x60014D6")]
		[Address(RVA = "0x1171C34", Offset = "0x1171C34", VA = "0x1171C34")]
		private Vector3 UnpackVector3(byte[] buf, ref int offset)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014D7")]
		[Address(RVA = "0x1172720", Offset = "0x1172720", VA = "0x1172720")]
		private void PackQuaternion(Quaternion quat, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x60014D8")]
		[Address(RVA = "0x11710EC", Offset = "0x11710EC", VA = "0x11710EC")]
		private void PackFloat(float value, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x60014D9")]
		[Address(RVA = "0x1171194", Offset = "0x1171194", VA = "0x1171194")]
		private float UnpackFloat(byte[] buf, ref int offset)
		{
			return default(float);
		}

		[Token(Token = "0x60014DA")]
		[Address(RVA = "0x1171950", Offset = "0x1171950", VA = "0x1171950")]
		private float UnpackTime(ulong remoteID, byte[] buf, ref int offset)
		{
			return default(float);
		}

		[Token(Token = "0x60014DB")]
		[Address(RVA = "0x1171FA8", Offset = "0x1171FA8", VA = "0x1171FA8")]
		private void PackInt32(int value, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x60014DC")]
		[Address(RVA = "0x11720D8", Offset = "0x11720D8", VA = "0x11720D8")]
		private int UnpackInt32(byte[] buf, ref int offset)
		{
			return default(int);
		}

		[Token(Token = "0x60014DD")]
		[Address(RVA = "0x11725F0", Offset = "0x11725F0", VA = "0x11725F0")]
		private void PackUint32(uint value, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x60014DE")]
		[Address(RVA = "0x1172690", Offset = "0x1172690", VA = "0x1172690")]
		private uint UnpackUint32(byte[] buf, ref int offset)
		{
			return default(uint);
		}

		[Token(Token = "0x60014DF")]
		[Address(RVA = "0x1171F44", Offset = "0x1171F44", VA = "0x1171F44")]
		private void PackBool(bool value, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x60014E0")]
		[Address(RVA = "0x1172078", Offset = "0x1172078", VA = "0x1172078")]
		private bool UnpackBool(byte[] buf, ref int offset)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200031E")]
	public class P2PNetworkBall : MonoBehaviour
	{
		[Token(Token = "0x4000C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float lastCollisionTime;

		[Token(Token = "0x4000C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Rigidbody rigidBody;

		[Token(Token = "0x17000195")]
		public Vector3 velocity
		{
			[Token(Token = "0x60014E2")]
			[Address(RVA = "0x1172048", Offset = "0x1172048", VA = "0x1172048")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x60014E1")]
		[Address(RVA = "0x1172854", Offset = "0x1172854", VA = "0x1172854")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014E3")]
		[Address(RVA = "0x1171F08", Offset = "0x1171F08", VA = "0x1171F08")]
		public bool IsHeld()
		{
			return default(bool);
		}

		[Token(Token = "0x60014E4")]
		[Address(RVA = "0x1172424", Offset = "0x1172424", VA = "0x1172424")]
		public void ProcessRemoteUpdate(float remoteTime, bool isHeld, Vector3 pos, Vector3 vel)
		{
		}

		[Token(Token = "0x60014E5")]
		[Address(RVA = "0x11728C4", Offset = "0x11728C4", VA = "0x11728C4")]
		private Vector3 estimatePosition(Vector3 startPosition, Vector3 startVelocty, float time)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014E6")]
		[Address(RVA = "0x1172A00", Offset = "0x1172A00", VA = "0x1172A00")]
		private Vector3 estimateVelocity(Vector3 startVelocity, float time)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014E7")]
		[Address(RVA = "0x1172B50", Offset = "0x1172B50", VA = "0x1172B50")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x60014E8")]
		[Address(RVA = "0x1172B78", Offset = "0x1172B78", VA = "0x1172B78")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60014E9")]
		[Address(RVA = "0x1172BC0", Offset = "0x1172BC0", VA = "0x1172BC0")]
		public P2PNetworkBall()
		{
		}
	}
	[Token(Token = "0x200031F")]
	public class P2PNetworkGoal : MonoBehaviour
	{
		[Token(Token = "0x4000C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GoalMover m_goal;

		[Token(Token = "0x4000C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 m_lastSentMoveDirection;

		[Token(Token = "0x4000C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool m_sendUpdates;

		[Token(Token = "0x17000196")]
		public bool SendUpdates
		{
			[Token(Token = "0x60014EA")]
			[Address(RVA = "0x1172BC8", Offset = "0x1172BC8", VA = "0x1172BC8")]
			set
			{
			}
		}

		[Token(Token = "0x60014EB")]
		[Address(RVA = "0x1172BD4", Offset = "0x1172BD4", VA = "0x1172BD4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014EC")]
		[Address(RVA = "0x1172C44", Offset = "0x1172C44", VA = "0x1172C44")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60014ED")]
		[Address(RVA = "0x1172D24", Offset = "0x1172D24", VA = "0x1172D24")]
		public void SendBackboardUpdate()
		{
		}

		[Token(Token = "0x60014EE")]
		[Address(RVA = "0x1171C94", Offset = "0x1171C94", VA = "0x1171C94")]
		public void RemoteBackboardUpdate(float remoteTime, Vector3 pos, Vector3 moveDir, Vector3 nextMoveDir)
		{
		}

		[Token(Token = "0x60014EF")]
		[Address(RVA = "0x1172E3C", Offset = "0x1172E3C", VA = "0x1172E3C")]
		public P2PNetworkGoal()
		{
		}
	}
	[Token(Token = "0x2000320")]
	public class PlatformManager : MonoBehaviour
	{
		[Token(Token = "0x20005DE")]
		public enum State
		{
			[Token(Token = "0x4001A28")]
			INITIALIZING,
			[Token(Token = "0x4001A29")]
			WAITING_TO_PRACTICE_OR_MATCHMAKE,
			[Token(Token = "0x4001A2A")]
			MATCH_TRANSITION,
			[Token(Token = "0x4001A2B")]
			PLAYING_A_LOCAL_MATCH,
			[Token(Token = "0x4001A2C")]
			PLAYING_A_NETWORKED_MATCH
		}

		[Token(Token = "0x4000C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static PlatformManager s_instance;

		[Token(Token = "0x4000C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private MatchmakingManager m_matchmaking;

		[Token(Token = "0x4000C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private P2PManager m_p2p;

		[Token(Token = "0x4000C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private LeaderboardManager m_leaderboards;

		[Token(Token = "0x4000C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AchievementsManager m_achievements;

		[Token(Token = "0x4000C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private State m_currentState;

		[Token(Token = "0x4000C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ulong m_myID;

		[Token(Token = "0x4000C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string m_myOculusID;

		[Token(Token = "0x17000197")]
		public static MatchmakingManager Matchmaking
		{
			[Token(Token = "0x60014F8")]
			[Address(RVA = "0x116B150", Offset = "0x116B150", VA = "0x116B150")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000198")]
		public static P2PManager P2P
		{
			[Token(Token = "0x60014F9")]
			[Address(RVA = "0x116AB98", Offset = "0x116AB98", VA = "0x116AB98")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000199")]
		public static LeaderboardManager Leaderboards
		{
			[Token(Token = "0x60014FA")]
			[Address(RVA = "0x116B1F8", Offset = "0x116B1F8", VA = "0x116B1F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019A")]
		public static AchievementsManager Achievements
		{
			[Token(Token = "0x60014FB")]
			[Address(RVA = "0x116D6D0", Offset = "0x116D6D0", VA = "0x116D6D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019B")]
		public static State CurrentState
		{
			[Token(Token = "0x60014FC")]
			[Address(RVA = "0x1168658", Offset = "0x1168658", VA = "0x1168658")]
			get
			{
				return default(State);
			}
		}

		[Token(Token = "0x1700019C")]
		public static ulong MyID
		{
			[Token(Token = "0x60014FD")]
			[Address(RVA = "0x1169604", Offset = "0x1169604", VA = "0x1169604")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x1700019D")]
		public static string MyOculusID
		{
			[Token(Token = "0x60014FE")]
			[Address(RVA = "0x116C2C8", Offset = "0x116C2C8", VA = "0x116C2C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014F0")]
		[Address(RVA = "0x1172E44", Offset = "0x1172E44", VA = "0x1172E44")]
		private void Update()
		{
		}

		[Token(Token = "0x60014F1")]
		[Address(RVA = "0x1172E8C", Offset = "0x1172E8C", VA = "0x1172E8C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014F2")]
		[Address(RVA = "0x1173048", Offset = "0x1173048", VA = "0x1173048")]
		private void Start()
		{
		}

		[Token(Token = "0x60014F3")]
		[Address(RVA = "0x11730E4", Offset = "0x11730E4", VA = "0x11730E4")]
		private void IsEntitledCallback(Message msg)
		{
		}

		[Token(Token = "0x60014F4")]
		[Address(RVA = "0x11731C0", Offset = "0x11731C0", VA = "0x11731C0")]
		private void GetLoggedInUserCallback(Message<User> msg)
		{
		}

		[Token(Token = "0x60014F5")]
		[Address(RVA = "0x116EEB0", Offset = "0x116EEB0", VA = "0x116EEB0")]
		public static void TerminateWithError(Message msg)
		{
		}

		[Token(Token = "0x60014F6")]
		[Address(RVA = "0x11732B8", Offset = "0x11732B8", VA = "0x11732B8")]
		public void QuitButtonPressed()
		{
		}

		[Token(Token = "0x60014F7")]
		[Address(RVA = "0x11732C0", Offset = "0x11732C0", VA = "0x11732C0")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x60014FF")]
		[Address(RVA = "0x116BAE0", Offset = "0x116BAE0", VA = "0x116BAE0")]
		public static void TransitionToState(State newState)
		{
		}

		[Token(Token = "0x6001500")]
		[Address(RVA = "0x11732F4", Offset = "0x11732F4", VA = "0x11732F4")]
		public PlatformManager()
		{
		}
	}
	[Token(Token = "0x2000321")]
	public abstract class Player : MonoBehaviour
	{
		[Token(Token = "0x4000C84")]
		public const uint MAX_BALLS = 6u;

		[Token(Token = "0x4000C85")]
		private const float INITIAL_FORCE = 870f;

		[Token(Token = "0x4000C86")]
		private const float RESPAWN_SECONDS = 2f;

		[Token(Token = "0x4000C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private uint m_score;

		[Token(Token = "0x4000C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Text m_scoreUI;

		[Token(Token = "0x4000C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject m_ballPrefab;

		[Token(Token = "0x4000C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private BallEjector m_ballEjector;

		[Token(Token = "0x4000C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Queue<GameObject> m_balls;

		[Token(Token = "0x4000C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject m_heldBall;

		[Token(Token = "0x4000C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float m_nextSpawnTime;

		[Token(Token = "0x1700019E")]
		public virtual uint Score
		{
			[Token(Token = "0x6001501")]
			[Address(RVA = "0x116ABF8", Offset = "0x116ABF8", VA = "0x116ABF8", Slot = "4")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x6001502")]
			[Address(RVA = "0x116AACC", Offset = "0x116AACC", VA = "0x116AACC", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x1700019F")]
		public GameObject BallPrefab
		{
			[Token(Token = "0x6001503")]
			[Address(RVA = "0x11732FC", Offset = "0x11732FC", VA = "0x11732FC")]
			set
			{
			}
		}

		[Token(Token = "0x170001A0")]
		protected bool HasBall
		{
			[Token(Token = "0x6001504")]
			[Address(RVA = "0x1167920", Offset = "0x1167920", VA = "0x1167920")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001505")]
		[Address(RVA = "0x1173304", Offset = "0x1173304", VA = "0x1173304")]
		private void Start()
		{
		}

		[Token(Token = "0x6001506")]
		[Address(RVA = "0x1172164", Offset = "0x1172164", VA = "0x1172164")]
		public GameObject CreateBall()
		{
			return null;
		}

		[Token(Token = "0x6001507")]
		[Address(RVA = "0x1167BA8", Offset = "0x1167BA8", VA = "0x1167BA8")]
		protected GameObject CheckSpawnBall()
		{
			return null;
		}

		[Token(Token = "0x6001508")]
		[Address(RVA = "0x1167990", Offset = "0x1167990", VA = "0x1167990")]
		protected GameObject ShootBall()
		{
			return null;
		}

		[Token(Token = "0x6001509")]
		[Address(RVA = "0x11733E4", Offset = "0x11733E4", VA = "0x11733E4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600150A")]
		[Address(RVA = "0x1167C28", Offset = "0x1167C28", VA = "0x1167C28")]
		protected Player()
		{
		}
	}
	[Token(Token = "0x2000322")]
	public class PlayerArea : MonoBehaviour
	{
		[Token(Token = "0x4000C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject m_ballPrefab;

		[Token(Token = "0x4000C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject m_playerHead;

		[Token(Token = "0x4000C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Text m_nameText;

		[Token(Token = "0x4000C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private P2PNetworkGoal m_p2pGoal;

		[Token(Token = "0x170001A1")]
		public Player Player
		{
			[Token(Token = "0x600150B")]
			[Address(RVA = "0x116D670", Offset = "0x116D670", VA = "0x116D670")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A2")]
		public Text NameText
		{
			[Token(Token = "0x600150C")]
			[Address(RVA = "0x116D730", Offset = "0x116D730", VA = "0x116D730")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600150D")]
		[Address(RVA = "0x1173520", Offset = "0x1173520", VA = "0x1173520")]
		private void Awake()
		{
		}

		[Token(Token = "0x600150E")]
		public T SetupForPlayer<T>(string name) where T : Player
		{
			return null;
		}

		[Token(Token = "0x600150F")]
		[Address(RVA = "0x1173650", Offset = "0x1173650", VA = "0x1173650")]
		public PlayerArea()
		{
		}
	}
	[Token(Token = "0x2000323")]
	public class RemotePlayer : Player
	{
		[Token(Token = "0x4000C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private User m_user;

		[Token(Token = "0x4000C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private P2PNetworkGoal m_goal;

		[Token(Token = "0x170001A3")]
		public User User
		{
			[Token(Token = "0x6001510")]
			[Address(RVA = "0x116C4F0", Offset = "0x116C4F0", VA = "0x116C4F0")]
			set
			{
			}
		}

		[Token(Token = "0x170001A4")]
		public ulong ID
		{
			[Token(Token = "0x6001511")]
			[Address(RVA = "0x11707BC", Offset = "0x11707BC", VA = "0x11707BC")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x170001A5")]
		public P2PNetworkGoal Goal
		{
			[Token(Token = "0x6001512")]
			[Address(RVA = "0x1171C8C", Offset = "0x1171C8C", VA = "0x1171C8C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001513")]
			[Address(RVA = "0x1173658", Offset = "0x1173658", VA = "0x1173658")]
			set
			{
			}
		}

		[Token(Token = "0x170001A6")]
		public override uint Score
		{
			[Token(Token = "0x6001514")]
			[Address(RVA = "0x1173660", Offset = "0x1173660", VA = "0x1173660", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x6001515")]
		[Address(RVA = "0x117271C", Offset = "0x117271C", VA = "0x117271C")]
		public void ReceiveRemoteScore(uint score)
		{
		}

		[Token(Token = "0x6001516")]
		[Address(RVA = "0x1173664", Offset = "0x1173664", VA = "0x1173664")]
		public RemotePlayer()
		{
		}
	}
	[Token(Token = "0x2000324")]
	public class VREyeRaycaster : MonoBehaviour
	{
		[Token(Token = "0x4000C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private EventSystem m_eventSystem;

		[Token(Token = "0x4000C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Button m_currentButton;

		[Token(Token = "0x6001517")]
		[Address(RVA = "0x1173668", Offset = "0x1173668", VA = "0x1173668")]
		private void Update()
		{
		}

		[Token(Token = "0x6001518")]
		[Address(RVA = "0x117389C", Offset = "0x117389C", VA = "0x117389C")]
		public VREyeRaycaster()
		{
		}
	}
}
namespace Oculus.Platform.Samples.VrBoardGame
{
	[Token(Token = "0x2000325")]
	public class BoardPosition : MonoBehaviour
	{
		[Token(Token = "0x4000C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9C4070", Offset = "0x9C4070")]
		public int x;

		[Token(Token = "0x4000C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9C40B0", Offset = "0x9C40B0")]
		public int y;

		[Token(Token = "0x6001519")]
		[Address(RVA = "0x1161288", Offset = "0x1161288", VA = "0x1161288")]
		public BoardPosition()
		{
		}
	}
	[Token(Token = "0x2000326")]
	public class EyeCamera : MonoBehaviour
	{
		[Token(Token = "0x4000C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private EventSystem m_eventSystem;

		[Token(Token = "0x4000C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameController m_gameController;

		[Token(Token = "0x4000C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SphereCollider m_gazeTracker;

		[Token(Token = "0x4000C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Button m_currentButton;

		[Token(Token = "0x4000C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GamePiece m_currentPiece;

		[Token(Token = "0x4000C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private BoardPosition m_boardPosition;

		[Token(Token = "0x600151A")]
		[Address(RVA = "0x1161290", Offset = "0x1161290", VA = "0x1161290")]
		private void Update()
		{
		}

		[Token(Token = "0x600151B")]
		[Address(RVA = "0x1161D18", Offset = "0x1161D18", VA = "0x1161D18")]
		public EyeCamera()
		{
		}
	}
	[Token(Token = "0x2000327")]
	public class GameBoard : MonoBehaviour
	{
		[Token(Token = "0x20005DF")]
		private struct PositionInfo
		{
			[Token(Token = "0x4001A2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameObject piece;

			[Token(Token = "0x4001A2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int pieceOwner;

			[Token(Token = "0x4001A2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int powerPieceOwner;
		}

		[Token(Token = "0x4000C9E")]
		public const int LENGTH_X = 3;

		[Token(Token = "0x4000C9F")]
		public const int LENGTH_Y = 3;

		[Token(Token = "0x4000CA0")]
		public const int MAX_PLAYERS = 2;

		[Token(Token = "0x4000CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Color[] m_playerColors;

		[Token(Token = "0x4000CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Color m_proposedMoveColor;

		[Token(Token = "0x4000CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int[] m_scores;

		[Token(Token = "0x4000CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private BoardPosition[] m_positions;

		[Token(Token = "0x4000CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly PositionInfo[,] m_pieces;

		[Token(Token = "0x600151C")]
		[Address(RVA = "0x1161D20", Offset = "0x1161D20", VA = "0x1161D20")]
		public void Reset()
		{
		}

		[Token(Token = "0x600151D")]
		[Address(RVA = "0x1161FC8", Offset = "0x1161FC8", VA = "0x1161FC8")]
		public bool IsFull()
		{
			return default(bool);
		}

		[Token(Token = "0x600151E")]
		[Address(RVA = "0x11620D8", Offset = "0x11620D8", VA = "0x11620D8")]
		public bool CanPlayerMoveToPostion(int x, int y)
		{
			return default(bool);
		}

		[Token(Token = "0x600151F")]
		[Address(RVA = "0x11621BC", Offset = "0x11621BC", VA = "0x11621BC")]
		public bool CanPlayerPowerUpPosition(int x, int y)
		{
			return default(bool);
		}

		[Token(Token = "0x6001520")]
		[Address(RVA = "0x11622A0", Offset = "0x11622A0", VA = "0x11622A0")]
		public void AddPiece(int player, GameObject prefab, int x, int y)
		{
		}

		[Token(Token = "0x6001521")]
		[Address(RVA = "0x1162B88", Offset = "0x1162B88", VA = "0x1162B88")]
		public GamePiece AddProposedPiece(GameObject prefab, BoardPosition pos)
		{
			return null;
		}

		[Token(Token = "0x6001522")]
		[Address(RVA = "0x1162CAC", Offset = "0x1162CAC", VA = "0x1162CAC")]
		public void AddPowerPiece(int player, GameObject prefab, int x, int y)
		{
		}

		[Token(Token = "0x6001523")]
		[Address(RVA = "0x1162F30", Offset = "0x1162F30", VA = "0x1162F30")]
		public GamePiece AddProposedPowerPiece(GameObject prefab, BoardPosition pos)
		{
			return null;
		}

		[Token(Token = "0x6001524")]
		[Address(RVA = "0x1162594", Offset = "0x1162594", VA = "0x1162594")]
		private GamePiece Create(GameObject prefab, GameObject parent, BoardPosition pos, Vector3 off)
		{
			return null;
		}

		[Token(Token = "0x6001525")]
		[Address(RVA = "0x1163100", Offset = "0x1163100", VA = "0x1163100")]
		public int GetPlayerScore(int player)
		{
			return default(int);
		}

		[Token(Token = "0x6001526")]
		[Address(RVA = "0x116276C", Offset = "0x116276C", VA = "0x116276C")]
		private void UpdateScores()
		{
		}

		[Token(Token = "0x6001527")]
		[Address(RVA = "0x1163154", Offset = "0x1163154", VA = "0x1163154")]
		public GameBoard()
		{
		}
	}
	[Token(Token = "0x2000328")]
	public class GameController : MonoBehaviour
	{
		[Token(Token = "0x20005E0")]
		private enum GameState
		{
			[Token(Token = "0x4001A31")]
			None,
			[Token(Token = "0x4001A32")]
			PracticingMyTurn,
			[Token(Token = "0x4001A33")]
			PracticingAiTurn,
			[Token(Token = "0x4001A34")]
			OnlineMatchMyTurn,
			[Token(Token = "0x4001A35")]
			OnlineMatchRemoteTurn
		}

		[Token(Token = "0x4000CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MatchmakingManager m_matchmaking;

		[Token(Token = "0x4000CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameBoard m_board;

		[Token(Token = "0x4000CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GamePiece m_pieceA;

		[Token(Token = "0x4000CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GamePiece m_pieceB;

		[Token(Token = "0x4000CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GamePiece m_powerPiece;

		[Token(Token = "0x4000CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color m_unusableColor;

		[Token(Token = "0x4000CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Color m_unselectedColor;

		[Token(Token = "0x4000CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Color m_selectedColor;

		[Token(Token = "0x4000CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Color m_highlightedColor;

		[Token(Token = "0x4000CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Text m_ballCountText;

		[Token(Token = "0x4000CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Text m_player0Text;

		[Token(Token = "0x4000CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Text m_player1Text;

		[Token(Token = "0x4000CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private GameState m_state;

		[Token(Token = "0x4000CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private GamePiece m_interestedPiece;

		[Token(Token = "0x4000CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private GamePiece m_selectedPiece;

		[Token(Token = "0x4000CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private GamePiece m_proposedPiece;

		[Token(Token = "0x4000CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private uint m_powerBallcount;

		[Token(Token = "0x4000CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private string m_opponentName;

		[Token(Token = "0x6001528")]
		[Address(RVA = "0x116322C", Offset = "0x116322C", VA = "0x116322C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001529")]
		[Address(RVA = "0x11633B0", Offset = "0x11633B0", VA = "0x11633B0")]
		private void Update()
		{
		}

		[Token(Token = "0x600152A")]
		[Address(RVA = "0x1163254", Offset = "0x1163254", VA = "0x1163254")]
		private void TransitionToState(GameState state)
		{
		}

		[Token(Token = "0x600152B")]
		[Address(RVA = "0x11639A0", Offset = "0x11639A0", VA = "0x11639A0")]
		private void TransitionToNextState()
		{
		}

		[Token(Token = "0x600152C")]
		[Address(RVA = "0x11633B4", Offset = "0x11633B4", VA = "0x11633B4")]
		private void PerFrameStateUpdate()
		{
		}

		[Token(Token = "0x600152D")]
		[Address(RVA = "0x11642C8", Offset = "0x11642C8", VA = "0x11642C8")]
		public void PracticeButtonPressed()
		{
		}

		[Token(Token = "0x600152E")]
		[Address(RVA = "0x1163CB4", Offset = "0x1163CB4", VA = "0x1163CB4")]
		private void MakeAIMove(int player)
		{
		}

		[Token(Token = "0x600152F")]
		[Address(RVA = "0x1164420", Offset = "0x1164420", VA = "0x1164420")]
		public void StartOnlineMatch(string opponentName, bool localUserGoesFirst)
		{
		}

		[Token(Token = "0x6001530")]
		[Address(RVA = "0x1164488", Offset = "0x1164488", VA = "0x1164488")]
		public void MakeRemoteMove(GamePiece.Piece piece, int x, int y)
		{
		}

		[Token(Token = "0x6001531")]
		[Address(RVA = "0x1164558", Offset = "0x1164558", VA = "0x1164558")]
		public void MarkRemoteTurnComplete()
		{
		}

		[Token(Token = "0x6001532")]
		[Address(RVA = "0x116456C", Offset = "0x116456C", VA = "0x116456C")]
		public void RemoteMatchEnded()
		{
		}

		[Token(Token = "0x6001533")]
		[Address(RVA = "0x1161930", Offset = "0x1161930", VA = "0x1161930")]
		public void StartedLookingAtPiece(GamePiece piece)
		{
		}

		[Token(Token = "0x6001534")]
		[Address(RVA = "0x1161928", Offset = "0x1161928", VA = "0x1161928")]
		public void StoppedLookingAtPiece()
		{
		}

		[Token(Token = "0x6001535")]
		[Address(RVA = "0x1161938", Offset = "0x1161938", VA = "0x1161938")]
		public void StartedLookingAtPosition(BoardPosition position)
		{
		}

		[Token(Token = "0x6001536")]
		[Address(RVA = "0x1161C44", Offset = "0x1161C44", VA = "0x1161C44")]
		public void ClearProposedMove()
		{
		}

		[Token(Token = "0x6001537")]
		[Address(RVA = "0x1163F08", Offset = "0x1163F08", VA = "0x1163F08")]
		public void TrySelectPiece()
		{
		}

		[Token(Token = "0x6001538")]
		[Address(RVA = "0x1164014", Offset = "0x1164014", VA = "0x1164014")]
		public void TryPlacePiece()
		{
		}

		[Token(Token = "0x6001539")]
		[Address(RVA = "0x1164858", Offset = "0x1164858", VA = "0x1164858")]
		public void QuitButtonPressed()
		{
		}

		[Token(Token = "0x600153A")]
		[Address(RVA = "0x1164860", Offset = "0x1164860", VA = "0x1164860")]
		public void AddPowerballs(uint count)
		{
		}

		[Token(Token = "0x600153B")]
		[Address(RVA = "0x116325C", Offset = "0x116325C", VA = "0x116325C")]
		private void UpdateScores()
		{
		}

		[Token(Token = "0x600153C")]
		[Address(RVA = "0x116346C", Offset = "0x116346C", VA = "0x116346C")]
		private void UpdateGamePieceColors()
		{
		}

		[Token(Token = "0x600153D")]
		[Address(RVA = "0x11649E0", Offset = "0x11649E0", VA = "0x11649E0")]
		public GameController()
		{
		}
	}
	[Token(Token = "0x2000329")]
	public class GamePiece : MonoBehaviour
	{
		[Token(Token = "0x20005E1")]
		public enum Piece
		{
			[Token(Token = "0x4001A37")]
			A,
			[Token(Token = "0x4001A38")]
			B,
			[Token(Token = "0x4001A39")]
			PowerBall
		}

		[Token(Token = "0x4000CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Piece m_type;

		[Token(Token = "0x4000CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject m_prefabA;

		[Token(Token = "0x4000CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_prefabB;

		[Token(Token = "0x4000CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_prefabPower;

		[Token(Token = "0x4000CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private BoardPosition m_position;

		[Token(Token = "0x170001A7")]
		public Piece Type
		{
			[Token(Token = "0x600153E")]
			[Address(RVA = "0x11645F0", Offset = "0x11645F0", VA = "0x11645F0")]
			get
			{
				return default(Piece);
			}
		}

		[Token(Token = "0x170001A8")]
		public BoardPosition Position
		{
			[Token(Token = "0x600153F")]
			[Address(RVA = "0x11645E8", Offset = "0x11645E8", VA = "0x11645E8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001540")]
			[Address(RVA = "0x11630F8", Offset = "0x11630F8", VA = "0x11630F8")]
			set
			{
			}
		}

		[Token(Token = "0x170001A9")]
		public GameObject Prefab
		{
			[Token(Token = "0x6001541")]
			[Address(RVA = "0x11643F4", Offset = "0x11643F4", VA = "0x11643F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001542")]
		[Address(RVA = "0x1164530", Offset = "0x1164530", VA = "0x1164530")]
		public GameObject PrefabFor(Piece p)
		{
			return null;
		}

		[Token(Token = "0x6001543")]
		[Address(RVA = "0x1164A44", Offset = "0x1164A44", VA = "0x1164A44")]
		public GamePiece()
		{
		}
	}
	[Token(Token = "0x200032A")]
	public class IAPManager : MonoBehaviour
	{
		[Token(Token = "0x4000CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameController m_gameController;

		[Token(Token = "0x4000CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text m_priceText;

		[Token(Token = "0x4000CBF")]
		private const string CONSUMABLE_1 = "PowerballPack1";

		[Token(Token = "0x6001544")]
		[Address(RVA = "0x1164A4C", Offset = "0x1164A4C", VA = "0x1164A4C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001545")]
		[Address(RVA = "0x1164A70", Offset = "0x1164A70", VA = "0x1164A70")]
		public void FetchProductPrices()
		{
		}

		[Token(Token = "0x6001546")]
		[Address(RVA = "0x1164C3C", Offset = "0x1164C3C", VA = "0x1164C3C")]
		private void GetProductsBySKUCallback(Message<ProductList> msg)
		{
		}

		[Token(Token = "0x6001547")]
		[Address(RVA = "0x1164B90", Offset = "0x1164B90", VA = "0x1164B90")]
		public void FetchPurchasedProducts()
		{
		}

		[Token(Token = "0x6001548")]
		[Address(RVA = "0x1165148", Offset = "0x1165148", VA = "0x1165148")]
		private void GetViewerPurchasesCallback(Message<PurchaseList> msg)
		{
		}

		[Token(Token = "0x6001549")]
		[Address(RVA = "0x1165584", Offset = "0x1165584", VA = "0x1165584")]
		public void BuyPowerBallsPressed()
		{
		}

		[Token(Token = "0x600154A")]
		[Address(RVA = "0x116563C", Offset = "0x116563C", VA = "0x116563C")]
		private void LaunchCheckoutFlowCallback(Message<Purchase> msg)
		{
		}

		[Token(Token = "0x600154B")]
		[Address(RVA = "0x1165748", Offset = "0x1165748", VA = "0x1165748")]
		public IAPManager()
		{
		}
	}
	[Token(Token = "0x200032B")]
	public class MatchmakingManager : MonoBehaviour
	{
		[Token(Token = "0x20005E2")]
		private enum MatchRoomState
		{
			[Token(Token = "0x4001A3B")]
			None,
			[Token(Token = "0x4001A3C")]
			Queued,
			[Token(Token = "0x4001A3D")]
			Configuring,
			[Token(Token = "0x4001A3E")]
			MyTurn,
			[Token(Token = "0x4001A3F")]
			RemoteTurn
		}

		[Token(Token = "0x4000CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameController m_gameController;

		[Token(Token = "0x4000CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text m_matchButtonText;

		[Token(Token = "0x4000CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Text m_infoText;

		[Token(Token = "0x4000CC3")]
		private const string POOL = "VR_BOARD_GAME_POOL";

		[Token(Token = "0x4000CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ulong m_matchRoom;

		[Token(Token = "0x4000CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private User m_remotePlayer;

		[Token(Token = "0x4000CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float m_lastUpdateTime;

		[Token(Token = "0x4000CC7")]
		private const float POLL_FREQUENCY = 30f;

		[Token(Token = "0x4000CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private MatchRoomState m_state;

		[Token(Token = "0x600154C")]
		[Address(RVA = "0x1165750", Offset = "0x1165750", VA = "0x1165750")]
		private void Start()
		{
		}

		[Token(Token = "0x600154D")]
		[Address(RVA = "0x11659C0", Offset = "0x11659C0", VA = "0x11659C0")]
		private void Update()
		{
		}

		[Token(Token = "0x600154E")]
		[Address(RVA = "0x1165AEC", Offset = "0x1165AEC", VA = "0x1165AEC")]
		public void MatchButtonPressed()
		{
		}

		[Token(Token = "0x600154F")]
		[Address(RVA = "0x1163AA8", Offset = "0x1163AA8", VA = "0x1163AA8")]
		public void EndMatch(int localScore, int remoteScore)
		{
		}

		[Token(Token = "0x6001550")]
		[Address(RVA = "0x1165BAC", Offset = "0x1165BAC", VA = "0x1165BAC")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001551")]
		[Address(RVA = "0x1165810", Offset = "0x1165810", VA = "0x1165810")]
		private void TransitionToState(MatchRoomState state)
		{
		}

		[Token(Token = "0x6001552")]
		[Address(RVA = "0x1165BE8", Offset = "0x1165BE8", VA = "0x1165BE8")]
		private void MatchmakingEnqueueCallback(Message untyped_msg)
		{
		}

		[Token(Token = "0x6001553")]
		[Address(RVA = "0x1165FEC", Offset = "0x1165FEC", VA = "0x1165FEC")]
		private void MatchFoundCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6001554")]
		[Address(RVA = "0x11661A4", Offset = "0x11661A4", VA = "0x11661A4")]
		private void MatchmakingJoinRoomCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6001555")]
		[Address(RVA = "0x1166B08", Offset = "0x1166B08", VA = "0x1166B08")]
		private void MatchmakingRoomUpdateCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6001556")]
		[Address(RVA = "0x11665A4", Offset = "0x11665A4", VA = "0x11665A4")]
		private void ProcessRoomData(Room room)
		{
		}

		[Token(Token = "0x6001557")]
		[Address(RVA = "0x116705C", Offset = "0x116705C", VA = "0x116705C")]
		private void ProcessRemoteMove(string moveString)
		{
		}

		[Token(Token = "0x6001558")]
		[Address(RVA = "0x11645F8", Offset = "0x11645F8", VA = "0x11645F8")]
		public void SendLocalMove(GamePiece.Piece piece, int boardX, int boardY)
		{
		}

		[Token(Token = "0x6001559")]
		[Address(RVA = "0x11672F0", Offset = "0x11672F0", VA = "0x11672F0")]
		private void UpdateDataStoreCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x600155A")]
		[Address(RVA = "0x1167004", Offset = "0x1167004", VA = "0x1167004")]
		private bool DoesLocalUserGoFirst()
		{
			return default(bool);
		}

		[Token(Token = "0x600155B")]
		[Address(RVA = "0x1167334", Offset = "0x1167334", VA = "0x1167334")]
		private void GenericErrorCheckCallback(Message msg)
		{
		}

		[Token(Token = "0x600155C")]
		[Address(RVA = "0x116740C", Offset = "0x116740C", VA = "0x116740C")]
		public MatchmakingManager()
		{
		}
	}
	[Token(Token = "0x200032C")]
	public class PlatformManager : MonoBehaviour
	{
		[Token(Token = "0x4000CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static PlatformManager s_instance;

		[Token(Token = "0x4000CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ulong m_myID;

		[Token(Token = "0x4000CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string m_myOculusID;

		[Token(Token = "0x170001AA")]
		public static ulong MyID
		{
			[Token(Token = "0x6001562")]
			[Address(RVA = "0x1165B04", Offset = "0x1165B04", VA = "0x1165B04")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x170001AB")]
		public static string MyOculusID
		{
			[Token(Token = "0x6001563")]
			[Address(RVA = "0x1164908", Offset = "0x1164908", VA = "0x1164908")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600155D")]
		[Address(RVA = "0x1167414", Offset = "0x1167414", VA = "0x1167414")]
		private void Awake()
		{
		}

		[Token(Token = "0x600155E")]
		[Address(RVA = "0x1167554", Offset = "0x1167554", VA = "0x1167554")]
		private void Start()
		{
		}

		[Token(Token = "0x600155F")]
		[Address(RVA = "0x11675F0", Offset = "0x11675F0", VA = "0x11675F0")]
		private void IsEntitledCallback(Message msg)
		{
		}

		[Token(Token = "0x6001560")]
		[Address(RVA = "0x1167794", Offset = "0x1167794", VA = "0x1167794")]
		private void GetLoggedInUserCallback(Message<User> msg)
		{
		}

		[Token(Token = "0x6001561")]
		[Address(RVA = "0x1165090", Offset = "0x1165090", VA = "0x1165090")]
		public static void TerminateWithError(Message msg)
		{
		}

		[Token(Token = "0x6001564")]
		[Address(RVA = "0x11678B4", Offset = "0x11678B4", VA = "0x11678B4")]
		public PlatformManager()
		{
		}
	}
}
namespace Oculus.Platform.Samples.SimplePlatformSample
{
	[Token(Token = "0x200032D")]
	public class DataEntry : MonoBehaviour
	{
		[Token(Token = "0x4000CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text dataOutput;

		[Token(Token = "0x6001565")]
		[Address(RVA = "0xEA587C", Offset = "0xEA587C", VA = "0xEA587C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001566")]
		[Address(RVA = "0xEA597C", Offset = "0xEA597C", VA = "0xEA597C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001567")]
		[Address(RVA = "0xEA5A58", Offset = "0xEA5A58", VA = "0xEA5A58")]
		private void SubmitCommand(string command)
		{
		}

		[Token(Token = "0x6001568")]
		[Address(RVA = "0xEA7874", Offset = "0xEA7874", VA = "0xEA7874")]
		private void getLeaderboardEntries(string leaderboardName)
		{
		}

		[Token(Token = "0x6001569")]
		[Address(RVA = "0xEA775C", Offset = "0xEA775C", VA = "0xEA775C")]
		private void writeLeaderboardEntry(string leaderboardName, string value)
		{
		}

		[Token(Token = "0x600156A")]
		[Address(RVA = "0xEA76A0", Offset = "0xEA76A0", VA = "0xEA76A0")]
		private void addFieldsAchievement(string achievementName, string fields)
		{
		}

		[Token(Token = "0x600156B")]
		[Address(RVA = "0xEA75B8", Offset = "0xEA75B8", VA = "0xEA75B8")]
		private void addCountAchievement(string achievementName, string count)
		{
		}

		[Token(Token = "0x600156C")]
		[Address(RVA = "0xEA7504", Offset = "0xEA7504", VA = "0xEA7504")]
		private void unlockAchievement(string achievementName)
		{
		}

		[Token(Token = "0x600156D")]
		[Address(RVA = "0xEA73E4", Offset = "0xEA73E4", VA = "0xEA73E4")]
		private void getAchievementProgress(string achievementName)
		{
		}

		[Token(Token = "0x600156E")]
		[Address(RVA = "0xEA72C4", Offset = "0xEA72C4", VA = "0xEA72C4")]
		private void getAchievementDefinition(string achievementName)
		{
		}

		[Token(Token = "0x600156F")]
		[Address(RVA = "0xEA58E8", Offset = "0xEA58E8", VA = "0xEA58E8")]
		private void checkEntitlement()
		{
		}

		[Token(Token = "0x6001570")]
		[Address(RVA = "0xEA7204", Offset = "0xEA7204", VA = "0xEA7204")]
		private void getUserNonce()
		{
		}

		[Token(Token = "0x6001571")]
		[Address(RVA = "0xEA636C", Offset = "0xEA636C", VA = "0xEA636C")]
		private void createAndJoinPrivateRoom(string joinPolicy, string maxUsers)
		{
		}

		[Token(Token = "0x6001572")]
		[Address(RVA = "0xEA6478", Offset = "0xEA6478", VA = "0xEA6478")]
		private void getCurrentRoom()
		{
		}

		[Token(Token = "0x6001573")]
		[Address(RVA = "0xEA6534", Offset = "0xEA6534", VA = "0xEA6534")]
		private void getRoom(string roomID)
		{
		}

		[Token(Token = "0x6001574")]
		[Address(RVA = "0xEA6630", Offset = "0xEA6630", VA = "0xEA6630")]
		private void joinRoom(string roomID)
		{
		}

		[Token(Token = "0x6001575")]
		[Address(RVA = "0xEA6730", Offset = "0xEA6730", VA = "0xEA6730")]
		private void leaveRoom(string roomID)
		{
		}

		[Token(Token = "0x6001576")]
		[Address(RVA = "0xEA682C", Offset = "0xEA682C", VA = "0xEA682C")]
		private void kickUser(string roomID, string userID)
		{
		}

		[Token(Token = "0x6001577")]
		[Address(RVA = "0xEA6958", Offset = "0xEA6958", VA = "0xEA6958")]
		private void getLoggedInUser()
		{
		}

		[Token(Token = "0x6001578")]
		[Address(RVA = "0xEA6A18", Offset = "0xEA6A18", VA = "0xEA6A18")]
		private void getUser(string userID)
		{
		}

		[Token(Token = "0x6001579")]
		[Address(RVA = "0xEA6B18", Offset = "0xEA6B18", VA = "0xEA6B18")]
		private void getLoggedInFriends()
		{
		}

		[Token(Token = "0x600157A")]
		[Address(RVA = "0xEA6BD8", Offset = "0xEA6BD8", VA = "0xEA6BD8")]
		private void getInvitableUsers()
		{
		}

		[Token(Token = "0x600157B")]
		[Address(RVA = "0xEA6C94", Offset = "0xEA6C94", VA = "0xEA6C94")]
		private void inviteUser(string roomID, string inviteToken)
		{
		}

		[Token(Token = "0x600157C")]
		[Address(RVA = "0xEA6DA8", Offset = "0xEA6DA8", VA = "0xEA6DA8")]
		private void setRoomDescription(string roomID, string description)
		{
		}

		[Token(Token = "0x600157D")]
		[Address(RVA = "0xEA6EBC", Offset = "0xEA6EBC", VA = "0xEA6EBC")]
		private void updateRoomDataStore(string roomID, string key, string value)
		{
		}

		[Token(Token = "0x600157E")]
		[Address(RVA = "0xEA7930", Offset = "0xEA7930", VA = "0xEA7930")]
		private void printOutputLine(string newLine)
		{
		}

		[Token(Token = "0x600157F")]
		[Address(RVA = "0xEA79F8", Offset = "0xEA79F8", VA = "0xEA79F8")]
		private void outputRoomDetails(Room room)
		{
		}

		[Token(Token = "0x6001580")]
		[Address(RVA = "0xEA8118", Offset = "0xEA8118", VA = "0xEA8118")]
		private void outputUserArray(UserList users)
		{
		}

		[Token(Token = "0x6001581")]
		[Address(RVA = "0xEA865C", Offset = "0xEA865C", VA = "0xEA865C")]
		private void userProofCallback(Message<UserProof> msg)
		{
		}

		[Token(Token = "0x6001582")]
		[Address(RVA = "0xEA8750", Offset = "0xEA8750", VA = "0xEA8750")]
		private void getEntitlementCallback(Message msg)
		{
		}

		[Token(Token = "0x6001583")]
		[Address(RVA = "0xEA87CC", Offset = "0xEA87CC", VA = "0xEA87CC")]
		private void leaderboardGetCallback(Message<LeaderboardEntryList> msg)
		{
		}

		[Token(Token = "0x6001584")]
		[Address(RVA = "0xEA8DDC", Offset = "0xEA8DDC", VA = "0xEA8DDC")]
		private void leaderboardWriteCallback(Message msg)
		{
		}

		[Token(Token = "0x6001585")]
		[Address(RVA = "0xEA8FE0", Offset = "0xEA8FE0", VA = "0xEA8FE0")]
		private void achievementFieldsCallback(Message msg)
		{
		}

		[Token(Token = "0x6001586")]
		[Address(RVA = "0xEA90A0", Offset = "0xEA90A0", VA = "0xEA90A0")]
		private void achievementCountCallback(Message msg)
		{
		}

		[Token(Token = "0x6001587")]
		[Address(RVA = "0xEA9160", Offset = "0xEA9160", VA = "0xEA9160")]
		private void achievementUnlockCallback(Message msg)
		{
		}

		[Token(Token = "0x6001588")]
		[Address(RVA = "0xEA9220", Offset = "0xEA9220", VA = "0xEA9220")]
		private void achievementProgressCallback(Message<AchievementProgressList> msg)
		{
		}

		[Token(Token = "0x6001589")]
		[Address(RVA = "0xEA95D8", Offset = "0xEA95D8", VA = "0xEA95D8")]
		private void achievementDefinitionCallback(Message<AchievementDefinitionList> msg)
		{
		}

		[Token(Token = "0x600158A")]
		[Address(RVA = "0xEA9A08", Offset = "0xEA9A08", VA = "0xEA9A08")]
		private void createAndJoinPrivateRoomCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x600158B")]
		[Address(RVA = "0xEA9AF8", Offset = "0xEA9AF8", VA = "0xEA9AF8")]
		private void getCurrentRoomCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x600158C")]
		[Address(RVA = "0xEA9BE8", Offset = "0xEA9BE8", VA = "0xEA9BE8")]
		private void joinRoomCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x600158D")]
		[Address(RVA = "0xEA9CD8", Offset = "0xEA9CD8", VA = "0xEA9CD8")]
		private void leaveRoomCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x600158E")]
		[Address(RVA = "0xEA9DC8", Offset = "0xEA9DC8", VA = "0xEA9DC8")]
		private void getUserCallback(Message<User> msg)
		{
		}

		[Token(Token = "0x600158F")]
		[Address(RVA = "0xEAA190", Offset = "0xEAA190", VA = "0xEAA190")]
		private void getFriendsCallback(Message<UserList> msg)
		{
		}

		[Token(Token = "0x6001590")]
		[Address(RVA = "0xEAA280", Offset = "0xEAA280", VA = "0xEAA280")]
		private void getInvitableUsersCallback(Message<UserList> msg)
		{
		}

		[Token(Token = "0x6001591")]
		[Address(RVA = "0xEAA370", Offset = "0xEAA370", VA = "0xEAA370")]
		private void inviteUserCallback(Message msg)
		{
		}

		[Token(Token = "0x6001592")]
		[Address(RVA = "0xEAA430", Offset = "0xEAA430", VA = "0xEAA430")]
		public DataEntry()
		{
		}
	}
}
namespace Oculus.Platform.Samples.NetChat
{
	[Token(Token = "0x200032E")]
	internal enum states
	{
		[Token(Token = "0x4000CCE")]
		NOT_INIT,
		[Token(Token = "0x4000CCF")]
		IDLE,
		[Token(Token = "0x4000CD0")]
		REQUEST_FIND,
		[Token(Token = "0x4000CD1")]
		FINDING_ROOM,
		[Token(Token = "0x4000CD2")]
		REQUEST_CREATE,
		[Token(Token = "0x4000CD3")]
		REQUEST_JOIN,
		[Token(Token = "0x4000CD4")]
		REQUEST_LEAVE,
		[Token(Token = "0x4000CD5")]
		IN_EMPTY_ROOM,
		[Token(Token = "0x4000CD6")]
		IN_FULL_ROOM
	}
	[Token(Token = "0x200032F")]
	public static class Constants
	{
		[Token(Token = "0x4000CD7")]
		public const int BUFFER_SIZE = 512;

		[Token(Token = "0x4000CD8")]
		public const string BOUT_POOL = "bout_pool";

		[Token(Token = "0x4000CD9")]
		public const string FILTER_POOL = "filter_pool";
	}
	[Token(Token = "0x2000330")]
	public class chatPacket
	{
		[Token(Token = "0x4000CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C42A0", Offset = "0x9C42A0")]
		private int <packetID>k__BackingField;

		[Token(Token = "0x4000CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C42B0", Offset = "0x9C42B0")]
		private string <textString>k__BackingField;

		[Token(Token = "0x170001AC")]
		public int packetID
		{
			[Token(Token = "0x6001593")]
			[Address(RVA = "0xEA55E8", Offset = "0xEA55E8", VA = "0xEA55E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D1658", Offset = "0x9D1658")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001594")]
			[Address(RVA = "0xEA4FD4", Offset = "0xEA4FD4", VA = "0xEA4FD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D1668", Offset = "0x9D1668")]
			set
			{
			}
		}

		[Token(Token = "0x170001AD")]
		public string textString
		{
			[Token(Token = "0x6001595")]
			[Address(RVA = "0xEA55E0", Offset = "0xEA55E0", VA = "0xEA55E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D1678", Offset = "0x9D1678")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001596")]
			[Address(RVA = "0xEA4FDC", Offset = "0xEA4FDC", VA = "0xEA4FDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D1688", Offset = "0x9D1688")]
			set
			{
			}
		}

		[Token(Token = "0x6001597")]
		[Address(RVA = "0xEA4FE4", Offset = "0xEA4FE4", VA = "0xEA4FE4")]
		public byte[] Serialize()
		{
			return null;
		}

		[Token(Token = "0x6001598")]
		[Address(RVA = "0xEA5308", Offset = "0xEA5308", VA = "0xEA5308")]
		public static chatPacket Deserialize(byte[] data)
		{
			return null;
		}

		[Token(Token = "0x6001599")]
		[Address(RVA = "0xEA4FCC", Offset = "0xEA4FCC", VA = "0xEA4FCC")]
		public chatPacket()
		{
		}
	}
	[Token(Token = "0x2000331")]
	public class DataEntry : MonoBehaviour
	{
		[Token(Token = "0x4000CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text dataOutput;

		[Token(Token = "0x4000CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private states currentState;

		[Token(Token = "0x4000CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private User localUser;

		[Token(Token = "0x4000CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private User remoteUser;

		[Token(Token = "0x4000CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Room currentRoom;

		[Token(Token = "0x4000CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int lastPacketID;

		[Token(Token = "0x4000CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool ratedMatchStarted;

		[Token(Token = "0x600159A")]
		[Address(RVA = "0xEA2ACC", Offset = "0xEA2ACC", VA = "0xEA2ACC")]
		private void Start()
		{
		}

		[Token(Token = "0x600159B")]
		[Address(RVA = "0xEA2C4C", Offset = "0xEA2C4C", VA = "0xEA2C4C")]
		private void Update()
		{
		}

		[Token(Token = "0x600159C")]
		[Address(RVA = "0xEA2D30", Offset = "0xEA2D30", VA = "0xEA2D30")]
		private void SubmitCommand(string command)
		{
		}

		[Token(Token = "0x600159D")]
		[Address(RVA = "0xEA4214", Offset = "0xEA4214", VA = "0xEA4214")]
		private void printOutputLine(string newLine)
		{
		}

		[Token(Token = "0x600159E")]
		[Address(RVA = "0xEA2BB8", Offset = "0xEA2BB8", VA = "0xEA2BB8")]
		private void checkEntitlement()
		{
		}

		[Token(Token = "0x600159F")]
		[Address(RVA = "0xEA42DC", Offset = "0xEA42DC", VA = "0xEA42DC")]
		private void getEntitlementCallback(Message msg)
		{
		}

		[Token(Token = "0x60015A0")]
		[Address(RVA = "0xEA43D4", Offset = "0xEA43D4", VA = "0xEA43D4")]
		private void init(Message<User> msg)
		{
		}

		[Token(Token = "0x60015A1")]
		[Address(RVA = "0xEA3250", Offset = "0xEA3250", VA = "0xEA3250")]
		private void requestCreateRoom()
		{
		}

		[Token(Token = "0x60015A2")]
		[Address(RVA = "0xEA4518", Offset = "0xEA4518", VA = "0xEA4518")]
		private void createRoomResponse(Message<MatchmakingEnqueueResultAndRoom> msg)
		{
		}

		[Token(Token = "0x60015A3")]
		[Address(RVA = "0xEA33D0", Offset = "0xEA33D0", VA = "0xEA33D0")]
		private void requestCreateFilterRoom()
		{
		}

		[Token(Token = "0x60015A4")]
		[Address(RVA = "0xEA37C8", Offset = "0xEA37C8", VA = "0xEA37C8")]
		private void requestFindRoom()
		{
		}

		[Token(Token = "0x60015A5")]
		[Address(RVA = "0xEA3940", Offset = "0xEA3940", VA = "0xEA3940")]
		private void requestFindFilteredRoom()
		{
		}

		[Token(Token = "0x60015A6")]
		[Address(RVA = "0xEA4678", Offset = "0xEA4678", VA = "0xEA4678")]
		private void foundMatch(Message<Room> msg)
		{
		}

		[Token(Token = "0x60015A7")]
		[Address(RVA = "0xEA47DC", Offset = "0xEA47DC", VA = "0xEA47DC")]
		private void joinRoomResponse(Message<Room> msg)
		{
		}

		[Token(Token = "0x60015A8")]
		[Address(RVA = "0xEA3650", Offset = "0xEA3650", VA = "0xEA3650")]
		private void requestFindMatch()
		{
		}

		[Token(Token = "0x60015A9")]
		[Address(RVA = "0xEA4B40", Offset = "0xEA4B40", VA = "0xEA4B40")]
		private void searchingStarted(Message msg)
		{
		}

		[Token(Token = "0x60015AA")]
		[Address(RVA = "0xEA4C1C", Offset = "0xEA4C1C", VA = "0xEA4C1C")]
		private void updateRoom(Message<Room> msg)
		{
		}

		[Token(Token = "0x60015AB")]
		[Address(RVA = "0xEA3CC8", Offset = "0xEA3CC8", VA = "0xEA3CC8")]
		private void sendChat(string chatMessage)
		{
		}

		[Token(Token = "0x60015AC")]
		[Address(RVA = "0xEA30B0", Offset = "0xEA30B0", VA = "0xEA30B0")]
		private void processNetPackets()
		{
		}

		[Token(Token = "0x60015AD")]
		[Address(RVA = "0xEA3DE0", Offset = "0xEA3DE0", VA = "0xEA3DE0")]
		private void requestLeaveRoom()
		{
		}

		[Token(Token = "0x60015AE")]
		[Address(RVA = "0xEA55F0", Offset = "0xEA55F0", VA = "0xEA55F0")]
		private void leaveRoomResponse(Message<Room> msg)
		{
		}

		[Token(Token = "0x60015AF")]
		[Address(RVA = "0xEA3F14", Offset = "0xEA3F14", VA = "0xEA3F14")]
		private void requestStartRatedMatch()
		{
		}

		[Token(Token = "0x60015B0")]
		[Address(RVA = "0xEA56D0", Offset = "0xEA56D0", VA = "0xEA56D0")]
		private void startRatedMatchResponse(Message msg)
		{
		}

		[Token(Token = "0x60015B1")]
		[Address(RVA = "0xEA4024", Offset = "0xEA4024", VA = "0xEA4024")]
		private void requestReportResults()
		{
		}

		[Token(Token = "0x60015B2")]
		[Address(RVA = "0xEA57AC", Offset = "0xEA57AC", VA = "0xEA57AC")]
		private void reportResultsResponse(Message msg)
		{
		}

		[Token(Token = "0x60015B3")]
		[Address(RVA = "0xEA5874", Offset = "0xEA5874", VA = "0xEA5874")]
		public DataEntry()
		{
		}
	}
}
namespace Oculus.Platform.Samples.EntitlementCheck
{
	[Token(Token = "0x2000332")]
	public class EntitlementCheck : MonoBehaviour
	{
		[Token(Token = "0x4000CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool exitAppOnFailure;

		[Token(Token = "0x14000023")]
		public static event Action UserFailedEntitlementCheck
		{
			[Token(Token = "0x60015B4")]
			[Address(RVA = "0xEA22A4", Offset = "0xEA22A4", VA = "0xEA22A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D1698", Offset = "0x9D1698")]
			add
			{
			}
			[Token(Token = "0x60015B5")]
			[Address(RVA = "0xEA23A0", Offset = "0xEA23A0", VA = "0xEA23A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D16A8", Offset = "0x9D16A8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000024")]
		public static event Action UserPassedEntitlementCheck
		{
			[Token(Token = "0x60015B6")]
			[Address(RVA = "0xEA249C", Offset = "0xEA249C", VA = "0xEA249C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D16B8", Offset = "0x9D16B8")]
			add
			{
			}
			[Token(Token = "0x60015B7")]
			[Address(RVA = "0xEA259C", Offset = "0xEA259C", VA = "0xEA259C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D16C8", Offset = "0x9D16C8")]
			remove
			{
			}
		}

		[Token(Token = "0x60015B8")]
		[Address(RVA = "0xEA269C", Offset = "0xEA269C", VA = "0xEA269C")]
		private void Start()
		{
		}

		[Token(Token = "0x60015B9")]
		[Address(RVA = "0xEA2A80", Offset = "0xEA2A80", VA = "0xEA2A80")]
		private void EntitlementCheckCallback(Message msg)
		{
		}

		[Token(Token = "0x60015BA")]
		[Address(RVA = "0xEA2804", Offset = "0xEA2804", VA = "0xEA2804")]
		private void HandleEntitlementCheckResult(bool result)
		{
		}

		[Token(Token = "0x60015BB")]
		[Address(RVA = "0xEA2ABC", Offset = "0xEA2ABC", VA = "0xEA2ABC")]
		public EntitlementCheck()
		{
		}
	}
}
namespace FastShadowProjector
{
	[Token(Token = "0x2000333")]
	public static class FSPDebugUtils
	{
		[Token(Token = "0x60015BC")]
		[Address(RVA = "0xC637F8", Offset = "0xC637F8", VA = "0xC637F8")]
		public static void DrawCameraFrustumPlanes(Camera camera)
		{
		}
	}
	[Token(Token = "0x2000334")]
	public static class FSPUtils
	{
		[Token(Token = "0x4000CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Action<Plane[], Matrix4x4> _calculateFrustumPlanes_Imp;

		[Token(Token = "0x60015BD")]
		[Address(RVA = "0xC6436C", Offset = "0xC6436C", VA = "0xC6436C")]
		public static void CalculateFrustumPlanes(Plane[] planes, Camera camera)
		{
		}

		[Token(Token = "0x60015BE")]
		[Address(RVA = "0xC63F20", Offset = "0xC63F20", VA = "0xC63F20")]
		public static Vector3 Get3PlaneConcurrencePoint(Plane planeA, Plane planeB, Plane planeC)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60015BF")]
		[Address(RVA = "0xC647E4", Offset = "0xC647E4", VA = "0xC647E4")]
		public static float Determinant3x3(Vector3 col1, Vector3 col2, Vector3 col3)
		{
			return default(float);
		}

		[Token(Token = "0x60015C0")]
		[Address(RVA = "0xC64480", Offset = "0xC64480", VA = "0xC64480")]
		private static void CalculateFrustumPlanesNonAlloc(Plane[] planes, Matrix4x4 worldToProjectMatrix)
		{
		}
	}
}
namespace Dreamteck
{
	[Token(Token = "0x2000335")]
	public static class DMath
	{
		[Token(Token = "0x60015C1")]
		[Address(RVA = "0xE7CBA8", Offset = "0xE7CBA8", VA = "0xE7CBA8")]
		public static double Sin(double a)
		{
			return default(double);
		}

		[Token(Token = "0x60015C2")]
		[Address(RVA = "0xE7CC14", Offset = "0xE7CC14", VA = "0xE7CC14")]
		public static double Cos(double a)
		{
			return default(double);
		}

		[Token(Token = "0x60015C3")]
		[Address(RVA = "0xE7CC80", Offset = "0xE7CC80", VA = "0xE7CC80")]
		public static double Tan(double a)
		{
			return default(double);
		}

		[Token(Token = "0x60015C4")]
		[Address(RVA = "0xE7CCEC", Offset = "0xE7CCEC", VA = "0xE7CCEC")]
		public static double Pow(double x, double y)
		{
			return default(double);
		}

		[Token(Token = "0x60015C5")]
		[Address(RVA = "0xE7CD60", Offset = "0xE7CD60", VA = "0xE7CD60")]
		public static double Log(double a, double newBase)
		{
			return default(double);
		}

		[Token(Token = "0x60015C6")]
		[Address(RVA = "0xE7CDD8", Offset = "0xE7CDD8", VA = "0xE7CDD8")]
		public static double Log10(double a)
		{
			return default(double);
		}

		[Token(Token = "0x60015C7")]
		[Address(RVA = "0xE7CE44", Offset = "0xE7CE44", VA = "0xE7CE44")]
		public static double Clamp01(double a)
		{
			return default(double);
		}

		[Token(Token = "0x60015C8")]
		[Address(RVA = "0xE7CE64", Offset = "0xE7CE64", VA = "0xE7CE64")]
		public static double Clamp(double a, double min, double max)
		{
			return default(double);
		}

		[Token(Token = "0x60015C9")]
		[Address(RVA = "0xE7CE80", Offset = "0xE7CE80", VA = "0xE7CE80")]
		public static double Lerp(double a, double b, double t)
		{
			return default(double);
		}

		[Token(Token = "0x60015CA")]
		[Address(RVA = "0xE7CEA4", Offset = "0xE7CEA4", VA = "0xE7CEA4")]
		public static double InverseLerp(double a, double b, double t)
		{
			return default(double);
		}

		[Token(Token = "0x60015CB")]
		[Address(RVA = "0xE7CED8", Offset = "0xE7CED8", VA = "0xE7CED8")]
		public static Vector3 LerpVector3(Vector3 a, Vector3 b, double t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60015CC")]
		[Address(RVA = "0xE7D004", Offset = "0xE7D004", VA = "0xE7D004")]
		public static double Round(double a)
		{
			return default(double);
		}

		[Token(Token = "0x60015CD")]
		[Address(RVA = "0xE7D0DC", Offset = "0xE7D0DC", VA = "0xE7D0DC")]
		public static int RoundInt(double a)
		{
			return default(int);
		}

		[Token(Token = "0x60015CE")]
		[Address(RVA = "0xE7D1B8", Offset = "0xE7D1B8", VA = "0xE7D1B8")]
		public static double Ceil(double a)
		{
			return default(double);
		}

		[Token(Token = "0x60015CF")]
		[Address(RVA = "0xE7D224", Offset = "0xE7D224", VA = "0xE7D224")]
		public static int CeilInt(double a)
		{
			return default(int);
		}

		[Token(Token = "0x60015D0")]
		[Address(RVA = "0xE7D290", Offset = "0xE7D290", VA = "0xE7D290")]
		public static double Floor(double a)
		{
			return default(double);
		}

		[Token(Token = "0x60015D1")]
		[Address(RVA = "0xE7D2FC", Offset = "0xE7D2FC", VA = "0xE7D2FC")]
		public static int FloorInt(double a)
		{
			return default(int);
		}

		[Token(Token = "0x60015D2")]
		[Address(RVA = "0xE7D368", Offset = "0xE7D368", VA = "0xE7D368")]
		public static double Move(double current, double target, double amount)
		{
			return default(double);
		}

		[Token(Token = "0x60015D3")]
		[Address(RVA = "0xE7D398", Offset = "0xE7D398", VA = "0xE7D398")]
		public static double Abs(double a)
		{
			return default(double);
		}
	}
	[Token(Token = "0x2000336")]
	public static class LinearAlgebraUtility
	{
		[Token(Token = "0x60015D4")]
		[Address(RVA = "0xE7D3A8", Offset = "0xE7D3A8", VA = "0xE7D3A8")]
		public static Vector3 ProjectOnLine(Vector3 fromPoint, Vector3 toPoint, Vector3 project)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60015D5")]
		[Address(RVA = "0xE7D5D8", Offset = "0xE7D5D8", VA = "0xE7D5D8")]
		public static float InverseLerp(Vector3 a, Vector3 b, Vector3 value)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000337")]
	public class MeshUtility
	{
		[Token(Token = "0x4000CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3[] tan1;

		[Token(Token = "0x4000CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Vector3[] tan2;

		[Token(Token = "0x4000CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Vector4[] meshTangents;

		[Token(Token = "0x60015D6")]
		[Address(RVA = "0xE7D708", Offset = "0xE7D708", VA = "0xE7D708")]
		public static int[] GeneratePlaneTriangles(int x, int z, bool flip, int startTriangleIndex = 0, int startVertex = 0)
		{
			return null;
		}

		[Token(Token = "0x60015D7")]
		[Address(RVA = "0xE7D7C8", Offset = "0xE7D7C8", VA = "0xE7D7C8")]
		public static int[] GeneratePlaneTriangles(ref int[] triangles, int x, int z, bool flip, int startTriangleIndex = 0, int startVertex = 0)
		{
			return null;
		}

		[Token(Token = "0x60015D8")]
		[Address(RVA = "0xE7DBC8", Offset = "0xE7DBC8", VA = "0xE7DBC8")]
		public static void CalculateTangents(TS_Mesh mesh)
		{
		}

		[Token(Token = "0x60015D9")]
		[Address(RVA = "0xE7E8FC", Offset = "0xE7E8FC", VA = "0xE7E8FC")]
		public static void MakeDoublesided(TS_Mesh input)
		{
		}

		[Token(Token = "0x60015DA")]
		[Address(RVA = "0xE7F7BC", Offset = "0xE7F7BC", VA = "0xE7F7BC")]
		public static void InverseTransformMesh(TS_Mesh input, TS_Transform transform)
		{
		}

		[Token(Token = "0x60015DB")]
		[Address(RVA = "0xE7F98C", Offset = "0xE7F98C", VA = "0xE7F98C")]
		public static void TransformMesh(TS_Mesh input, TS_Transform transform)
		{
		}

		[Token(Token = "0x60015DC")]
		[Address(RVA = "0xE7FB5C", Offset = "0xE7FB5C", VA = "0xE7FB5C")]
		public static void InverseTransformMesh(TS_Mesh input, Transform transform)
		{
		}

		[Token(Token = "0x60015DD")]
		[Address(RVA = "0xE7FD2C", Offset = "0xE7FD2C", VA = "0xE7FD2C")]
		public static void TransformMesh(TS_Mesh input, Transform transform)
		{
		}

		[Token(Token = "0x60015DE")]
		[Address(RVA = "0xE7FEFC", Offset = "0xE7FEFC", VA = "0xE7FEFC")]
		public static void InverseTransformMesh(Mesh input, Transform transform)
		{
		}

		[Token(Token = "0x60015DF")]
		[Address(RVA = "0xE80134", Offset = "0xE80134", VA = "0xE80134")]
		public static void TransformMesh(Mesh input, Transform transform)
		{
		}

		[Token(Token = "0x60015E0")]
		[Address(RVA = "0xE803CC", Offset = "0xE803CC", VA = "0xE803CC")]
		public static void TransformVertices(Vector3[] vertices, Transform transform)
		{
		}

		[Token(Token = "0x60015E1")]
		[Address(RVA = "0xE804C8", Offset = "0xE804C8", VA = "0xE804C8")]
		public static void InverseTransformVertices(Vector3[] vertices, Transform transform)
		{
		}

		[Token(Token = "0x60015E2")]
		[Address(RVA = "0xE805C4", Offset = "0xE805C4", VA = "0xE805C4")]
		public static void TransformNormals(Vector3[] normals, Transform transform)
		{
		}

		[Token(Token = "0x60015E3")]
		[Address(RVA = "0xE806C0", Offset = "0xE806C0", VA = "0xE806C0")]
		public static void InverseTransformNormals(Vector3[] normals, Transform transform)
		{
		}

		[Token(Token = "0x60015E4")]
		[Address(RVA = "0xE807BC", Offset = "0xE807BC", VA = "0xE807BC")]
		public static string ToOBJString(Mesh mesh, Material[] materials)
		{
			return null;
		}

		[Token(Token = "0x60015E5")]
		[Address(RVA = "0xE81370", Offset = "0xE81370", VA = "0xE81370")]
		public static Mesh Copy(Mesh input)
		{
			return null;
		}

		[Token(Token = "0x60015E6")]
		[Address(RVA = "0xE816AC", Offset = "0xE816AC", VA = "0xE816AC")]
		public static void Triangulate(Vector2[] points, ref int[] output)
		{
		}

		[Token(Token = "0x60015E7")]
		[Address(RVA = "0xE81F84", Offset = "0xE81F84", VA = "0xE81F84")]
		public static void FlipTriangles(ref int[] triangles)
		{
		}

		[Token(Token = "0x60015E8")]
		[Address(RVA = "0xE820B8", Offset = "0xE820B8", VA = "0xE820B8")]
		public static void FlipFaces(TS_Mesh input)
		{
		}

		[Token(Token = "0x60015E9")]
		[Address(RVA = "0xE822A0", Offset = "0xE822A0", VA = "0xE822A0")]
		public static void BreakMesh(Mesh input, bool keepNormals = true)
		{
		}

		[Token(Token = "0x60015EA")]
		[Address(RVA = "0xE81BCC", Offset = "0xE81BCC", VA = "0xE81BCC")]
		private static float Area(Vector2[] points, int maxCount)
		{
			return default(float);
		}

		[Token(Token = "0x60015EB")]
		[Address(RVA = "0xE81CB0", Offset = "0xE81CB0", VA = "0xE81CB0")]
		private static bool Snip(Vector2[] points, int u, int v, int w, int n, int[] V)
		{
			return default(bool);
		}

		[Token(Token = "0x60015EC")]
		[Address(RVA = "0xE83408", Offset = "0xE83408", VA = "0xE83408")]
		private static bool InsideTriangle(Vector2 A, Vector2 B, Vector2 C, Vector2 P)
		{
			return default(bool);
		}

		[Token(Token = "0x60015ED")]
		[Address(RVA = "0xE83484", Offset = "0xE83484", VA = "0xE83484")]
		public MeshUtility()
		{
		}
	}
	[Token(Token = "0x2000338")]
	public static class ResourceUtility
	{
		[Token(Token = "0x60015EF")]
		[Address(RVA = "0xE83528", Offset = "0xE83528", VA = "0xE83528")]
		public static string FindFolder(string dir, string folderPattern)
		{
			return null;
		}

		[Token(Token = "0x60015F0")]
		[Address(RVA = "0xE83954", Offset = "0xE83954", VA = "0xE83954")]
		public static Texture2D LoadTexture(string dreamteckPath, string textureFileName)
		{
			return null;
		}

		[Token(Token = "0x60015F1")]
		[Address(RVA = "0xE83ABC", Offset = "0xE83ABC", VA = "0xE83ABC")]
		public static Texture2D LoadTexture(string path)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000339")]
	public class TS_Bounds
	{
		[Token(Token = "0x4000CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 center;

		[Token(Token = "0x4000CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 extents;

		[Token(Token = "0x4000CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 max;

		[Token(Token = "0x4000CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 min;

		[Token(Token = "0x4000CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 size;

		[Token(Token = "0x60015F2")]
		[Address(RVA = "0xFCA60C", Offset = "0xFCA60C", VA = "0xFCA60C")]
		public TS_Bounds(Bounds bounds)
		{
		}

		[Token(Token = "0x60015F3")]
		[Address(RVA = "0xFCA738", Offset = "0xFCA738", VA = "0xFCA738")]
		public TS_Bounds(Vector3 c, Vector3 s)
		{
		}

		[Token(Token = "0x60015F4")]
		[Address(RVA = "0xFCA8A0", Offset = "0xFCA8A0", VA = "0xFCA8A0")]
		public TS_Bounds(Vector3 min, Vector3 max, Vector3 center)
		{
		}

		[Token(Token = "0x60015F5")]
		[Address(RVA = "0xFCAA0C", Offset = "0xFCAA0C", VA = "0xFCAA0C")]
		public void CreateFromMinMax(Vector3 min, Vector3 max)
		{
		}
	}
	[Token(Token = "0x200033A")]
	public class TS_Mesh
	{
		[Token(Token = "0x4000CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3[] vertices;

		[Token(Token = "0x4000CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3[] normals;

		[Token(Token = "0x4000CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector4[] tangents;

		[Token(Token = "0x4000CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color[] colors;

		[Token(Token = "0x4000CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector2[] uv;

		[Token(Token = "0x4000CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int[] triangles;

		[Token(Token = "0x4000CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<int[]> subMeshes;

		[Token(Token = "0x4000CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public TS_Bounds bounds;

		[Token(Token = "0x4000CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool hasUpdate;

		[Token(Token = "0x170001AE")]
		public int vertexCount
		{
			[Token(Token = "0x60015F6")]
			[Address(RVA = "0xFC17C4", Offset = "0xFC17C4", VA = "0xFC17C4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60015F7")]
			[Address(RVA = "0xFCAB20", Offset = "0xFCAB20", VA = "0xFCAB20")]
			set
			{
			}
		}

		[Token(Token = "0x60015F8")]
		[Address(RVA = "0xFCAB24", Offset = "0xFCAB24", VA = "0xFCAB24")]
		public TS_Mesh()
		{
		}

		[Token(Token = "0x60015F9")]
		[Address(RVA = "0xFCACB0", Offset = "0xFCACB0", VA = "0xFCACB0")]
		public TS_Mesh(Mesh mesh)
		{
		}

		[Token(Token = "0x60015FA")]
		[Address(RVA = "0xFCB064", Offset = "0xFCB064", VA = "0xFCB064")]
		public void Clear()
		{
		}

		[Token(Token = "0x60015FB")]
		[Address(RVA = "0xFCAE54", Offset = "0xFCAE54", VA = "0xFCAE54")]
		public void CreateFromMesh(Mesh mesh)
		{
		}

		[Token(Token = "0x60015FC")]
		[Address(RVA = "0xFCB1E8", Offset = "0xFCB1E8", VA = "0xFCB1E8")]
		public void Combine(List<TS_Mesh> newMeshes)
		{
		}

		[Token(Token = "0x60015FD")]
		[Address(RVA = "0xFCBF20", Offset = "0xFCBF20", VA = "0xFCBF20")]
		public void Combine(TS_Mesh newMesh)
		{
		}

		[Token(Token = "0x60015FE")]
		[Address(RVA = "0xFCC714", Offset = "0xFCC714", VA = "0xFCC714")]
		public static TS_Mesh Copy(TS_Mesh input)
		{
			return null;
		}

		[Token(Token = "0x60015FF")]
		[Address(RVA = "0xFCCC3C", Offset = "0xFCCC3C", VA = "0xFCCC3C")]
		public void Absorb(TS_Mesh input)
		{
		}

		[Token(Token = "0x6001600")]
		[Address(RVA = "0xFCD330", Offset = "0xFCD330", VA = "0xFCD330")]
		public void WriteMesh(ref Mesh input)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200033B")]
	public class TS_Transform
	{
		[Token(Token = "0x4000CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool setPosition;

		[Token(Token = "0x4000CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		private bool setRotation;

		[Token(Token = "0x4000CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		private bool setScale;

		[Token(Token = "0x4000CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		private bool setLocalPosition;

		[Token(Token = "0x4000CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private bool setLocalRotation;

		[Token(Token = "0x4000CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[HideInInspector]
		private Transform _transform;

		[Token(Token = "0x4000CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[HideInInspector]
		private float posX;

		[Token(Token = "0x4000CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		[HideInInspector]
		private float posY;

		[Token(Token = "0x4000D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[HideInInspector]
		private float posZ;

		[Token(Token = "0x4000D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		[HideInInspector]
		private float scaleX;

		[Token(Token = "0x4000D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[HideInInspector]
		private float scaleY;

		[Token(Token = "0x4000D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		[HideInInspector]
		private float scaleZ;

		[Token(Token = "0x4000D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[HideInInspector]
		private float lossyScaleX;

		[Token(Token = "0x4000D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		[HideInInspector]
		private float lossyScaleY;

		[Token(Token = "0x4000D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[HideInInspector]
		private float lossyScaleZ;

		[Token(Token = "0x4000D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		[HideInInspector]
		private float rotX;

		[Token(Token = "0x4000D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[HideInInspector]
		private float rotY;

		[Token(Token = "0x4000D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		[HideInInspector]
		private float rotZ;

		[Token(Token = "0x4000D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[HideInInspector]
		private float rotW;

		[Token(Token = "0x4000D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		[HideInInspector]
		private float lposX;

		[Token(Token = "0x4000D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[HideInInspector]
		private float lposY;

		[Token(Token = "0x4000D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		[HideInInspector]
		private float lposZ;

		[Token(Token = "0x4000D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[HideInInspector]
		private float lrotX;

		[Token(Token = "0x4000D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		[HideInInspector]
		private float lrotY;

		[Token(Token = "0x4000D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		[HideInInspector]
		private float lrotZ;

		[Token(Token = "0x4000D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		[HideInInspector]
		private float lrotW;

		[Token(Token = "0x170001AF")]
		public Vector3 position
		{
			[Token(Token = "0x6001601")]
			[Address(RVA = "0xFCD600", Offset = "0xFCD600", VA = "0xFCD600")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001602")]
			[Address(RVA = "0xFCD674", Offset = "0xFCD674", VA = "0xFCD674")]
			set
			{
			}
		}

		[Token(Token = "0x170001B0")]
		public Quaternion rotation
		{
			[Token(Token = "0x6001603")]
			[Address(RVA = "0xFCD6D0", Offset = "0xFCD6D0", VA = "0xFCD6D0")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6001604")]
			[Address(RVA = "0xFCD74C", Offset = "0xFCD74C", VA = "0xFCD74C")]
			set
			{
			}
		}

		[Token(Token = "0x170001B1")]
		public Vector3 scale
		{
			[Token(Token = "0x6001605")]
			[Address(RVA = "0xFCD7B4", Offset = "0xFCD7B4", VA = "0xFCD7B4")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001606")]
			[Address(RVA = "0xFCD828", Offset = "0xFCD828", VA = "0xFCD828")]
			set
			{
			}
		}

		[Token(Token = "0x170001B2")]
		public Vector3 lossyScale
		{
			[Token(Token = "0x6001607")]
			[Address(RVA = "0xFCD880", Offset = "0xFCD880", VA = "0xFCD880")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001608")]
			[Address(RVA = "0xFCD8F4", Offset = "0xFCD8F4", VA = "0xFCD8F4")]
			set
			{
			}
		}

		[Token(Token = "0x170001B3")]
		public Vector3 localPosition
		{
			[Token(Token = "0x6001609")]
			[Address(RVA = "0xFCD94C", Offset = "0xFCD94C", VA = "0xFCD94C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600160A")]
			[Address(RVA = "0xFCD9C0", Offset = "0xFCD9C0", VA = "0xFCD9C0")]
			set
			{
			}
		}

		[Token(Token = "0x170001B4")]
		public Quaternion localRotation
		{
			[Token(Token = "0x600160B")]
			[Address(RVA = "0xFCDA1C", Offset = "0xFCDA1C", VA = "0xFCDA1C")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x600160C")]
			[Address(RVA = "0xFCDA98", Offset = "0xFCDA98", VA = "0xFCDA98")]
			set
			{
			}
		}

		[Token(Token = "0x170001B5")]
		public Transform transform
		{
			[Token(Token = "0x600160D")]
			[Address(RVA = "0xFCDB00", Offset = "0xFCDB00", VA = "0xFCDB00")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600160E")]
		[Address(RVA = "0xFCDB08", Offset = "0xFCDB08", VA = "0xFCDB08")]
		public TS_Transform(Transform input)
		{
		}

		[Token(Token = "0x600160F")]
		[Address(RVA = "0xFCDB90", Offset = "0xFCDB90", VA = "0xFCDB90")]
		public void Update()
		{
		}

		[Token(Token = "0x6001610")]
		[Address(RVA = "0xFCDB80", Offset = "0xFCDB80", VA = "0xFCDB80")]
		public void SetTransform(Transform input)
		{
		}

		[Token(Token = "0x6001611")]
		[Address(RVA = "0xFCDE78", Offset = "0xFCDE78", VA = "0xFCDE78")]
		public bool HasChange()
		{
			return default(bool);
		}

		[Token(Token = "0x6001612")]
		[Address(RVA = "0xFCDEBC", Offset = "0xFCDEBC", VA = "0xFCDEBC")]
		public bool HasPositionChange()
		{
			return default(bool);
		}

		[Token(Token = "0x6001613")]
		[Address(RVA = "0xFCDF48", Offset = "0xFCDF48", VA = "0xFCDF48")]
		public bool HasRotationChange()
		{
			return default(bool);
		}

		[Token(Token = "0x6001614")]
		[Address(RVA = "0xFCDFF0", Offset = "0xFCDFF0", VA = "0xFCDFF0")]
		public bool HasScaleChange()
		{
			return default(bool);
		}

		[Token(Token = "0x6001615")]
		[Address(RVA = "0xFCE07C", Offset = "0xFCE07C", VA = "0xFCE07C")]
		public Vector3 TransformPoint(Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001616")]
		[Address(RVA = "0xFCE1EC", Offset = "0xFCE1EC", VA = "0xFCE1EC")]
		public Vector3 TransformDirection(Vector3 direction)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001617")]
		[Address(RVA = "0xFCE2C0", Offset = "0xFCE2C0", VA = "0xFCE2C0")]
		public Vector3 InverseTransformPoint(Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001618")]
		[Address(RVA = "0xFCE37C", Offset = "0xFCE37C", VA = "0xFCE37C")]
		public Vector3 InverseTransformDirection(Vector3 direction)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001619")]
		public T GetComponent<T>()
		{
			return (T)null;
		}
	}
}
namespace Dreamteck.Splines
{
	[Token(Token = "0x200033C")]
	public class BlankUser : SplineUser
	{
		[Token(Token = "0x600161A")]
		[Address(RVA = "0xE83BC0", Offset = "0xE83BC0", VA = "0xE83BC0")]
		private void Start()
		{
		}

		[Token(Token = "0x600161B")]
		[Address(RVA = "0xE83BC4", Offset = "0xE83BC4", VA = "0xE83BC4", Slot = "19")]
		protected override void LateRun()
		{
		}

		[Token(Token = "0x600161C")]
		[Address(RVA = "0xE83BCC", Offset = "0xE83BCC", VA = "0xE83BCC", Slot = "20")]
		protected override void Build()
		{
		}

		[Token(Token = "0x600161D")]
		[Address(RVA = "0xE83BD4", Offset = "0xE83BD4", VA = "0xE83BD4", Slot = "21")]
		protected override void PostBuild()
		{
		}

		[Token(Token = "0x600161E")]
		[Address(RVA = "0xE83BDC", Offset = "0xE83BDC", VA = "0xE83BDC")]
		public BlankUser()
		{
		}
	}
	[Token(Token = "0x200033D")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9B9974", Offset = "0x9B9974")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9B9974", Offset = "0x9B9974")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9B9974", Offset = "0x9B9974")]
	public class ExtrudeMesh : MeshGenerator
	{
		[Token(Token = "0x20005E3")]
		public enum Axis
		{
			[Token(Token = "0x4001A41")]
			X,
			[Token(Token = "0x4001A42")]
			Y,
			[Token(Token = "0x4001A43")]
			Z
		}

		[Token(Token = "0x20005E4")]
		public enum Iteration
		{
			[Token(Token = "0x4001A45")]
			Ordered,
			[Token(Token = "0x4001A46")]
			Random
		}

		[Token(Token = "0x20005E5")]
		public enum MirrorMethod
		{
			[Token(Token = "0x4001A48")]
			None,
			[Token(Token = "0x4001A49")]
			X,
			[Token(Token = "0x4001A4A")]
			Y,
			[Token(Token = "0x4001A4B")]
			Z
		}

		[Token(Token = "0x20005E6")]
		public enum TileUVs
		{
			[Token(Token = "0x4001A4D")]
			None,
			[Token(Token = "0x4001A4E")]
			U,
			[Token(Token = "0x4001A4F")]
			V,
			[Token(Token = "0x4001A50")]
			UniformU,
			[Token(Token = "0x4001A51")]
			UniformV
		}

		[Serializable]
		[Token(Token = "0x20005E7")]
		internal class ExtrudableMesh
		{
			[Serializable]
			[Token(Token = "0x20006E0")]
			public class VertexGroup
			{
				[Token(Token = "0x4001E18")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public float value;

				[Token(Token = "0x4001E19")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public int[] ids;

				[Token(Token = "0x600294A")]
				[Address(RVA = "0x17AACF4", Offset = "0x17AACF4", VA = "0x17AACF4")]
				public VertexGroup(float val, int[] vertIds)
				{
				}

				[Token(Token = "0x600294B")]
				[Address(RVA = "0x17AAD30", Offset = "0x17AAD30", VA = "0x17AAD30")]
				public void AddId(int id)
				{
				}
			}

			[Serializable]
			[Token(Token = "0x20006E1")]
			public class Submesh
			{
				[Token(Token = "0x4001E1A")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public int[] triangles;

				[Token(Token = "0x600294C")]
				[Address(RVA = "0x17AABE8", Offset = "0x17AABE8", VA = "0x17AABE8")]
				public Submesh()
				{
				}

				[Token(Token = "0x600294D")]
				[Address(RVA = "0x17AAC48", Offset = "0x17AAC48", VA = "0x17AAC48")]
				public Submesh(int[] input)
				{
				}
			}

			[Token(Token = "0x4001A52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3[] vertices;

			[Token(Token = "0x4001A53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3[] normals;

			[Token(Token = "0x4001A54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector4[] tangents;

			[Token(Token = "0x4001A55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Color[] colors;

			[Token(Token = "0x4001A56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector2[] uv;

			[Token(Token = "0x4001A57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public List<Submesh> subMeshes;

			[Token(Token = "0x4001A58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public TS_Bounds bounds;

			[Token(Token = "0x4001A59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public List<VertexGroup> vertexGroups;

			[Token(Token = "0x4001A5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[SerializeField]
			private MirrorMethod _mirror;

			[Token(Token = "0x4001A5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			[SerializeField]
			private Axis _axis;

			[Token(Token = "0x17000465")]
			public MirrorMethod mirror
			{
				[Token(Token = "0x60025AB")]
				[Address(RVA = "0xE864DC", Offset = "0xE864DC", VA = "0xE864DC")]
				get
				{
					return default(MirrorMethod);
				}
				[Token(Token = "0x60025AC")]
				[Address(RVA = "0xE866BC", Offset = "0xE866BC", VA = "0xE866BC")]
				set
				{
				}
			}

			[Token(Token = "0x60025AD")]
			[Address(RVA = "0xE8A65C", Offset = "0xE8A65C", VA = "0xE8A65C")]
			public ExtrudableMesh()
			{
			}

			[Token(Token = "0x60025AE")]
			[Address(RVA = "0xE86AEC", Offset = "0xE86AEC", VA = "0xE86AEC")]
			public ExtrudableMesh(Mesh inputMesh, Axis axis)
			{
			}

			[Token(Token = "0x60025AF")]
			[Address(RVA = "0xE893B4", Offset = "0xE893B4", VA = "0xE893B4")]
			public void Update(Mesh inputMesh, Axis axis)
			{
			}

			[Token(Token = "0x60025B0")]
			[Address(RVA = "0xE89AEC", Offset = "0xE89AEC", VA = "0xE89AEC")]
			private void Mirror(MirrorMethod method)
			{
			}

			[Token(Token = "0x60025B1")]
			[Address(RVA = "0xE8A908", Offset = "0xE8A908", VA = "0xE8A908")]
			private void GroupVertices(Axis axis)
			{
			}

			[Token(Token = "0x60025B2")]
			[Address(RVA = "0xE8BA90", Offset = "0xE8BA90", VA = "0xE8BA90")]
			private int FindInsertIndex(Vector3 pos, float value)
			{
				return default(int);
			}

			[Token(Token = "0x60025B3")]
			[Address(RVA = "0xE8ADC0", Offset = "0xE8ADC0", VA = "0xE8ADC0")]
			private void CalculateTangents()
			{
			}
		}

		[Token(Token = "0x4000D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		[HideInInspector]
		private Mesh _sourceMesh;

		[Token(Token = "0x4000D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		[HideInInspector]
		private Mesh _startMesh;

		[Token(Token = "0x4000D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		[HideInInspector]
		private Mesh _endMesh;

		[Token(Token = "0x4000D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		[HideInInspector]
		private bool _dontStretchCaps;

		[Token(Token = "0x4000D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		[SerializeField]
		[HideInInspector]
		private TileUVs _tileUVs;

		[Token(Token = "0x4000D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		[HideInInspector]
		private Mesh[] _middleMeshes;

		[Token(Token = "0x4000D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		[HideInInspector]
		private List<ExtrudableMesh> extrudableMeshes;

		[Token(Token = "0x4000D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		[HideInInspector]
		private Axis _axis;

		[Token(Token = "0x4000D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		[SerializeField]
		[HideInInspector]
		private Iteration _iteration;

		[Token(Token = "0x4000D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		[HideInInspector]
		private int _randomSeed;

		[Token(Token = "0x4000D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		[SerializeField]
		[HideInInspector]
		private int _repeat;

		[Token(Token = "0x4000D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		[HideInInspector]
		private double _spacing;

		[Token(Token = "0x4000D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		[HideInInspector]
		private Vector2 _scale;

		[Token(Token = "0x4000D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private SplineResult lastResult;

		[Token(Token = "0x4000D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private bool useLastResult;

		[Token(Token = "0x4000D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private List<TS_Mesh> combineMeshes;

		[Token(Token = "0x4000D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private System.Random random;

		[Token(Token = "0x4000D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private int iterations;

		[Token(Token = "0x4000D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		private bool _hasAnyMesh;

		[Token(Token = "0x4000D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x195")]
		private bool _hasStartMesh;

		[Token(Token = "0x4000D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x196")]
		private bool _hasEndMesh;

		[Token(Token = "0x170001B6")]
		public Axis axis
		{
			[Token(Token = "0x600161F")]
			[Address(RVA = "0xE8551C", Offset = "0xE8551C", VA = "0xE8551C")]
			get
			{
				return default(Axis);
			}
			[Token(Token = "0x6001620")]
			[Address(RVA = "0xE85524", Offset = "0xE85524", VA = "0xE85524")]
			set
			{
			}
		}

		[Token(Token = "0x170001B7")]
		public Iteration iteration
		{
			[Token(Token = "0x6001621")]
			[Address(RVA = "0xE85AC4", Offset = "0xE85AC4", VA = "0xE85AC4")]
			get
			{
				return default(Iteration);
			}
			[Token(Token = "0x6001622")]
			[Address(RVA = "0xE85ACC", Offset = "0xE85ACC", VA = "0xE85ACC")]
			set
			{
			}
		}

		[Token(Token = "0x170001B8")]
		public int randomSeed
		{
			[Token(Token = "0x6001623")]
			[Address(RVA = "0xE85B1C", Offset = "0xE85B1C", VA = "0xE85B1C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001624")]
			[Address(RVA = "0xE85B24", Offset = "0xE85B24", VA = "0xE85B24")]
			set
			{
			}
		}

		[Token(Token = "0x170001B9")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9D9EC4", Offset = "0x9D9EC4")]
		public Mesh sourceMesh
		{
			[Token(Token = "0x6001625")]
			[Address(RVA = "0xE85B80", Offset = "0xE85B80", VA = "0xE85B80")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001626")]
			[Address(RVA = "0xE85B88", Offset = "0xE85B88", VA = "0xE85B88")]
			set
			{
			}
		}

		[Token(Token = "0x170001BA")]
		public int repeat
		{
			[Token(Token = "0x6001627")]
			[Address(RVA = "0xE85C4C", Offset = "0xE85C4C", VA = "0xE85C4C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001628")]
			[Address(RVA = "0xE85C54", Offset = "0xE85C54", VA = "0xE85C54")]
			set
			{
			}
		}

		[Token(Token = "0x170001BB")]
		public bool dontStretchCaps
		{
			[Token(Token = "0x6001629")]
			[Address(RVA = "0xE8601C", Offset = "0xE8601C", VA = "0xE8601C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600162A")]
			[Address(RVA = "0xE86024", Offset = "0xE86024", VA = "0xE86024")]
			set
			{
			}
		}

		[Token(Token = "0x170001BC")]
		public TileUVs tileUVs
		{
			[Token(Token = "0x600162B")]
			[Address(RVA = "0xE86054", Offset = "0xE86054", VA = "0xE86054")]
			get
			{
				return default(TileUVs);
			}
			[Token(Token = "0x600162C")]
			[Address(RVA = "0xE8605C", Offset = "0xE8605C", VA = "0xE8605C")]
			set
			{
			}
		}

		[Token(Token = "0x170001BD")]
		public double spacing
		{
			[Token(Token = "0x600162D")]
			[Address(RVA = "0xE86080", Offset = "0xE86080", VA = "0xE86080")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x600162E")]
			[Address(RVA = "0xE86088", Offset = "0xE86088", VA = "0xE86088")]
			set
			{
			}
		}

		[Token(Token = "0x170001BE")]
		public Vector2 scale
		{
			[Token(Token = "0x600162F")]
			[Address(RVA = "0xE86108", Offset = "0xE86108", VA = "0xE86108")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6001630")]
			[Address(RVA = "0xE86114", Offset = "0xE86114", VA = "0xE86114")]
			set
			{
			}
		}

		[Token(Token = "0x170001BF")]
		public bool hasAnyMesh
		{
			[Token(Token = "0x6001631")]
			[Address(RVA = "0xE861DC", Offset = "0xE861DC", VA = "0xE861DC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001632")]
		[Address(RVA = "0xE861E4", Offset = "0xE861E4", VA = "0xE861E4", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001633")]
		[Address(RVA = "0xE86400", Offset = "0xE86400", VA = "0xE86400")]
		public Mesh GetStartMesh()
		{
			return null;
		}

		[Token(Token = "0x6001634")]
		[Address(RVA = "0xE86408", Offset = "0xE86408", VA = "0xE86408")]
		public Mesh GetEndMesh()
		{
			return null;
		}

		[Token(Token = "0x6001635")]
		[Address(RVA = "0xE86410", Offset = "0xE86410", VA = "0xE86410")]
		public MirrorMethod GetStartMeshMirror()
		{
			return default(MirrorMethod);
		}

		[Token(Token = "0x6001636")]
		[Address(RVA = "0xE864E4", Offset = "0xE864E4", VA = "0xE864E4")]
		public MirrorMethod GetEndMeshMirror()
		{
			return default(MirrorMethod);
		}

		[Token(Token = "0x6001637")]
		[Address(RVA = "0xE865BC", Offset = "0xE865BC", VA = "0xE865BC")]
		public void SetStartMeshMirror(MirrorMethod mirror)
		{
		}

		[Token(Token = "0x6001638")]
		[Address(RVA = "0xE8670C", Offset = "0xE8670C", VA = "0xE8670C")]
		public void SetEndMeshMirror(MirrorMethod mirror)
		{
		}

		[Token(Token = "0x6001639")]
		[Address(RVA = "0xE86810", Offset = "0xE86810", VA = "0xE86810")]
		public void SetMeshMirror(int index, MirrorMethod mirror)
		{
		}

		[Token(Token = "0x600163A")]
		[Address(RVA = "0xE86928", Offset = "0xE86928", VA = "0xE86928")]
		public void SetStartMesh(Mesh inputMesh, MirrorMethod mirror = MirrorMethod.None)
		{
		}

		[Token(Token = "0x600163B")]
		[Address(RVA = "0xE86CB4", Offset = "0xE86CB4", VA = "0xE86CB4")]
		public void SetEndMesh(Mesh inputMesh, MirrorMethod mirror = MirrorMethod.None)
		{
		}

		[Token(Token = "0x600163C")]
		[Address(RVA = "0xE86EB4", Offset = "0xE86EB4", VA = "0xE86EB4")]
		public Mesh GetMesh(int index)
		{
			return null;
		}

		[Token(Token = "0x600163D")]
		[Address(RVA = "0xE86F08", Offset = "0xE86F08", VA = "0xE86F08")]
		public MirrorMethod GetMeshMirror(int index)
		{
			return default(MirrorMethod);
		}

		[Token(Token = "0x600163E")]
		[Address(RVA = "0xE86FB4", Offset = "0xE86FB4", VA = "0xE86FB4")]
		public void SetMesh(int index, Mesh inputMesh, MirrorMethod mirror = MirrorMethod.None)
		{
		}

		[Token(Token = "0x600163F")]
		[Address(RVA = "0xE87120", Offset = "0xE87120", VA = "0xE87120")]
		public void RemoveMesh(int index)
		{
		}

		[Token(Token = "0x6001640")]
		[Address(RVA = "0xE87350", Offset = "0xE87350", VA = "0xE87350")]
		public void AddMesh(Mesh inputMesh)
		{
		}

		[Token(Token = "0x6001641")]
		[Address(RVA = "0xE8629C", Offset = "0xE8629C", VA = "0xE8629C")]
		private void CheckMeshes()
		{
		}

		[Token(Token = "0x6001642")]
		[Address(RVA = "0xE874BC", Offset = "0xE874BC", VA = "0xE874BC")]
		public int GetMeshCount()
		{
			return default(int);
		}

		[Token(Token = "0x6001643")]
		[Address(RVA = "0xE874E8", Offset = "0xE874E8", VA = "0xE874E8", Slot = "29")]
		protected override void BuildMesh()
		{
		}

		[Token(Token = "0x6001644")]
		[Address(RVA = "0xE87568", Offset = "0xE87568", VA = "0xE87568")]
		private void Generate()
		{
		}

		[Token(Token = "0x6001645")]
		[Address(RVA = "0xE87A5C", Offset = "0xE87A5C", VA = "0xE87A5C")]
		private int GetMeshIndex(int repeatIndex)
		{
			return default(int);
		}

		[Token(Token = "0x6001646")]
		[Address(RVA = "0xE887B4", Offset = "0xE887B4", VA = "0xE887B4")]
		private void TRS(ExtrudableMesh source, TS_Mesh target, double percent)
		{
		}

		[Token(Token = "0x6001647")]
		[Address(RVA = "0xE88DC0", Offset = "0xE88DC0", VA = "0xE88DC0")]
		private void CreateTSFromExtrudableMesh(ExtrudableMesh source, ref TS_Mesh target)
		{
		}

		[Token(Token = "0x6001648")]
		[Address(RVA = "0xE87BA8", Offset = "0xE87BA8", VA = "0xE87BA8")]
		private void Stretch(ExtrudableMesh source, TS_Mesh target, double from, double to)
		{
		}

		[Token(Token = "0x6001649")]
		[Address(RVA = "0xE85574", Offset = "0xE85574", VA = "0xE85574")]
		private void UpdateExtrudableMeshes()
		{
		}

		[Token(Token = "0x600164A")]
		[Address(RVA = "0xE896FC", Offset = "0xE896FC", VA = "0xE896FC")]
		private void UpdateStartExtrudeMesh()
		{
		}

		[Token(Token = "0x600164B")]
		[Address(RVA = "0xE85CAC", Offset = "0xE85CAC", VA = "0xE85CAC")]
		private void UpdateEndExtrudeMesh()
		{
		}

		[Token(Token = "0x600164C")]
		[Address(RVA = "0xE899BC", Offset = "0xE899BC", VA = "0xE899BC")]
		public ExtrudeMesh()
		{
		}
	}
	[Token(Token = "0x200033E")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9B9A24", Offset = "0x9B9A24")]
	public class LengthCalculator : SplineUser
	{
		[Serializable]
		[Token(Token = "0x20005E8")]
		public class LengthEvent
		{
			[Token(Token = "0x20006E2")]
			public enum Type
			{
				[Token(Token = "0x4001E1C")]
				Growing,
				[Token(Token = "0x4001E1D")]
				Shrinking,
				[Token(Token = "0x4001E1E")]
				Both
			}

			[Token(Token = "0x4001A5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool enabled;

			[Token(Token = "0x4001A5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float targetLength;

			[Token(Token = "0x4001A5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SplineAction action;

			[Token(Token = "0x4001A5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Type type;

			[Token(Token = "0x60025B4")]
			[Address(RVA = "0x17B7520", Offset = "0x17B7520", VA = "0x17B7520")]
			public LengthEvent()
			{
			}

			[Token(Token = "0x60025B5")]
			[Address(RVA = "0x17B7598", Offset = "0x17B7598", VA = "0x17B7598")]
			public LengthEvent(Type t)
			{
			}

			[Token(Token = "0x60025B6")]
			[Address(RVA = "0x17B6E20", Offset = "0x17B6E20", VA = "0x17B6E20")]
			public LengthEvent(Type t, SplineAction a)
			{
			}

			[Token(Token = "0x60025B7")]
			[Address(RVA = "0x17B6BA4", Offset = "0x17B6BA4", VA = "0x17B6BA4")]
			public void Check(float fromLength, float toLength)
			{
			}
		}

		[Token(Token = "0x4000D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[HideInInspector]
		public LengthEvent[] lengthEvents;

		[Token(Token = "0x4000D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[HideInInspector]
		public float idealLength;

		[Token(Token = "0x4000D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private float _length;

		[Token(Token = "0x4000D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float lastLength;

		[Token(Token = "0x170001C0")]
		public float length
		{
			[Token(Token = "0x600164D")]
			[Address(RVA = "0x17B6944", Offset = "0x17B6944", VA = "0x17B6944")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600164E")]
		[Address(RVA = "0x17B694C", Offset = "0x17B694C", VA = "0x17B694C", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600164F")]
		[Address(RVA = "0x17B6AA0", Offset = "0x17B6AA0", VA = "0x17B6AA0", Slot = "20")]
		protected override void Build()
		{
		}

		[Token(Token = "0x6001650")]
		[Address(RVA = "0x17B6C3C", Offset = "0x17B6C3C", VA = "0x17B6C3C")]
		private void AddEvent(LengthEvent lengthEvent)
		{
		}

		[Token(Token = "0x6001651")]
		[Address(RVA = "0x17B6D4C", Offset = "0x17B6D4C", VA = "0x17B6D4C")]
		public void AddEvent(LengthEvent.Type t, UnityAction call, float targetLength = 0f, LengthEvent.Type type = LengthEvent.Type.Both)
		{
		}

		[Token(Token = "0x6001652")]
		[Address(RVA = "0x17B6EB4", Offset = "0x17B6EB4", VA = "0x17B6EB4")]
		public void AddEvent(LengthEvent.Type t, UnityAction<int> call, int value, float targetLength = 0f, LengthEvent.Type type = LengthEvent.Type.Both)
		{
		}

		[Token(Token = "0x6001653")]
		[Address(RVA = "0x17B6F90", Offset = "0x17B6F90", VA = "0x17B6F90")]
		public void AddEvent(LengthEvent.Type t, UnityAction<float> call, float value, float targetLength = 0f, LengthEvent.Type type = LengthEvent.Type.Both)
		{
		}

		[Token(Token = "0x6001654")]
		[Address(RVA = "0x17B706C", Offset = "0x17B706C", VA = "0x17B706C")]
		public void AddEvent(LengthEvent.Type t, UnityAction<double> call, double value, float targetLength = 0f, LengthEvent.Type type = LengthEvent.Type.Both)
		{
		}

		[Token(Token = "0x6001655")]
		[Address(RVA = "0x17B7148", Offset = "0x17B7148", VA = "0x17B7148")]
		public void AddTrigger(LengthEvent.Type t, UnityAction<string> call, string value, float targetLength = 0f, LengthEvent.Type type = LengthEvent.Type.Both)
		{
		}

		[Token(Token = "0x6001656")]
		[Address(RVA = "0x17B7224", Offset = "0x17B7224", VA = "0x17B7224")]
		public void AddEvent(LengthEvent.Type t, UnityAction<bool> call, bool value, float targetLength = 0f, LengthEvent.Type type = LengthEvent.Type.Both)
		{
		}

		[Token(Token = "0x6001657")]
		[Address(RVA = "0x17B7300", Offset = "0x17B7300", VA = "0x17B7300")]
		public void AddEvent(LengthEvent.Type t, UnityAction<GameObject> call, GameObject value, float targetLength = 0f, LengthEvent.Type type = LengthEvent.Type.Both)
		{
		}

		[Token(Token = "0x6001658")]
		[Address(RVA = "0x17B73DC", Offset = "0x17B73DC", VA = "0x17B73DC")]
		public void AddEvent(LengthEvent.Type t, UnityAction<Transform> call, Transform value, float targetLength = 0f, LengthEvent.Type type = LengthEvent.Type.Both)
		{
		}

		[Token(Token = "0x6001659")]
		[Address(RVA = "0x17B74B8", Offset = "0x17B74B8", VA = "0x17B74B8")]
		public LengthCalculator()
		{
		}
	}
	[Token(Token = "0x200033F")]
	public class MeshGenerator : SplineUser
	{
		[Token(Token = "0x20005E9")]
		public enum UVMode
		{
			[Token(Token = "0x4001A61")]
			Clip,
			[Token(Token = "0x4001A62")]
			UniformClip,
			[Token(Token = "0x4001A63")]
			Clamp,
			[Token(Token = "0x4001A64")]
			UniformClamp
		}

		[Token(Token = "0x4000D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		[HideInInspector]
		private bool _baked;

		[Token(Token = "0x4000D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[SerializeField]
		[HideInInspector]
		private float _size;

		[Token(Token = "0x4000D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		[HideInInspector]
		private Color _color;

		[Token(Token = "0x4000D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		[HideInInspector]
		private Vector3 _offset;

		[Token(Token = "0x4000D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[SerializeField]
		[HideInInspector]
		private int _normalMethod;

		[Token(Token = "0x4000D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		[HideInInspector]
		private bool _tangents;

		[Token(Token = "0x4000D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		[HideInInspector]
		private float _rotation;

		[Token(Token = "0x4000D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		[HideInInspector]
		private bool _flipFaces;

		[Token(Token = "0x4000D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
		[SerializeField]
		[HideInInspector]
		private bool _doubleSided;

		[Token(Token = "0x4000D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		[HideInInspector]
		private UVMode _uvMode;

		[Token(Token = "0x4000D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		[HideInInspector]
		private Vector2 _uvScale;

		[Token(Token = "0x4000D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		[HideInInspector]
		private Vector2 _uvOffset;

		[Token(Token = "0x4000D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		[HideInInspector]
		private float _uvRotation;

		[Token(Token = "0x4000D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		[HideInInspector]
		protected MeshCollider meshCollider;

		[Token(Token = "0x4000D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		[HideInInspector]
		protected MeshFilter filter;

		[Token(Token = "0x4000D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		[HideInInspector]
		protected MeshRenderer meshRenderer;

		[Token(Token = "0x4000D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		[HideInInspector]
		protected TS_Mesh tsMesh;

		[Token(Token = "0x4000D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		[HideInInspector]
		protected Mesh mesh;

		[Token(Token = "0x4000D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[HideInInspector]
		public float colliderUpdateRate;

		[Token(Token = "0x4000D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		protected bool updateCollider;

		[Token(Token = "0x4000D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		protected float lastUpdateTime;

		[Token(Token = "0x4000D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private float vDist;

		[Token(Token = "0x4000D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static Vector2 uvs;

		[Token(Token = "0x170001C1")]
		public float size
		{
			[Token(Token = "0x600165A")]
			[Address(RVA = "0x17B7624", Offset = "0x17B7624", VA = "0x17B7624")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600165B")]
			[Address(RVA = "0x17B762C", Offset = "0x17B762C", VA = "0x17B762C")]
			set
			{
			}
		}

		[Token(Token = "0x170001C2")]
		public Color color
		{
			[Token(Token = "0x600165C")]
			[Address(RVA = "0x17B7650", Offset = "0x17B7650", VA = "0x17B7650")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x600165D")]
			[Address(RVA = "0x17B765C", Offset = "0x17B765C", VA = "0x17B765C")]
			set
			{
			}
		}

		[Token(Token = "0x170001C3")]
		public Vector3 offset
		{
			[Token(Token = "0x600165E")]
			[Address(RVA = "0x17B76D8", Offset = "0x17B76D8", VA = "0x17B76D8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600165F")]
			[Address(RVA = "0x17B76E4", Offset = "0x17B76E4", VA = "0x17B76E4")]
			set
			{
			}
		}

		[Token(Token = "0x170001C4")]
		public int normalMethod
		{
			[Token(Token = "0x6001660")]
			[Address(RVA = "0x17B77C4", Offset = "0x17B77C4", VA = "0x17B77C4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001661")]
			[Address(RVA = "0x17B77CC", Offset = "0x17B77CC", VA = "0x17B77CC")]
			set
			{
			}
		}

		[Token(Token = "0x170001C5")]
		public bool calculateTangents
		{
			[Token(Token = "0x6001662")]
			[Address(RVA = "0x17B77F0", Offset = "0x17B77F0", VA = "0x17B77F0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001663")]
			[Address(RVA = "0x17B77F8", Offset = "0x17B77F8", VA = "0x17B77F8")]
			set
			{
			}
		}

		[Token(Token = "0x170001C6")]
		public float rotation
		{
			[Token(Token = "0x6001664")]
			[Address(RVA = "0x17B7828", Offset = "0x17B7828", VA = "0x17B7828")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001665")]
			[Address(RVA = "0x17B7830", Offset = "0x17B7830", VA = "0x17B7830")]
			set
			{
			}
		}

		[Token(Token = "0x170001C7")]
		public bool flipFaces
		{
			[Token(Token = "0x6001666")]
			[Address(RVA = "0x17B7854", Offset = "0x17B7854", VA = "0x17B7854")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001667")]
			[Address(RVA = "0x17B785C", Offset = "0x17B785C", VA = "0x17B785C")]
			set
			{
			}
		}

		[Token(Token = "0x170001C8")]
		public bool doubleSided
		{
			[Token(Token = "0x6001668")]
			[Address(RVA = "0x17B788C", Offset = "0x17B788C", VA = "0x17B788C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001669")]
			[Address(RVA = "0x17B7894", Offset = "0x17B7894", VA = "0x17B7894")]
			set
			{
			}
		}

		[Token(Token = "0x170001C9")]
		public UVMode uvMode
		{
			[Token(Token = "0x600166A")]
			[Address(RVA = "0x17B78C4", Offset = "0x17B78C4", VA = "0x17B78C4")]
			get
			{
				return default(UVMode);
			}
			[Token(Token = "0x600166B")]
			[Address(RVA = "0x17B78CC", Offset = "0x17B78CC", VA = "0x17B78CC")]
			set
			{
			}
		}

		[Token(Token = "0x170001CA")]
		public Vector2 uvScale
		{
			[Token(Token = "0x600166C")]
			[Address(RVA = "0x17B78F0", Offset = "0x17B78F0", VA = "0x17B78F0")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x600166D")]
			[Address(RVA = "0x17B78F8", Offset = "0x17B78F8", VA = "0x17B78F8")]
			set
			{
			}
		}

		[Token(Token = "0x170001CB")]
		public Vector2 uvOffset
		{
			[Token(Token = "0x600166E")]
			[Address(RVA = "0x17B79B8", Offset = "0x17B79B8", VA = "0x17B79B8")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x600166F")]
			[Address(RVA = "0x17B79C0", Offset = "0x17B79C0", VA = "0x17B79C0")]
			set
			{
			}
		}

		[Token(Token = "0x170001CC")]
		public float uvRotation
		{
			[Token(Token = "0x6001670")]
			[Address(RVA = "0x17B7A80", Offset = "0x17B7A80", VA = "0x17B7A80")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001671")]
			[Address(RVA = "0x17B7A88", Offset = "0x17B7A88", VA = "0x17B7A88")]
			set
			{
			}
		}

		[Token(Token = "0x170001CD")]
		public bool baked
		{
			[Token(Token = "0x6001672")]
			[Address(RVA = "0x17B7AAC", Offset = "0x17B7AAC", VA = "0x17B7AAC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001673")]
		[Address(RVA = "0x17B7AB4", Offset = "0x17B7AB4", VA = "0x17B7AB4", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001674")]
		[Address(RVA = "0x17B7BA0", Offset = "0x17B7BA0", VA = "0x17B7BA0", Slot = "5")]
		protected override void Reset()
		{
		}

		[Token(Token = "0x6001675")]
		[Address(RVA = "0x17B7CD0", Offset = "0x17B7CD0", VA = "0x17B7CD0", Slot = "11")]
		public override void Rebuild(bool sampleComputer)
		{
		}

		[Token(Token = "0x6001676")]
		[Address(RVA = "0x17B7CE8", Offset = "0x17B7CE8", VA = "0x17B7CE8", Slot = "12")]
		public override void RebuildImmediate(bool sampleComputer)
		{
		}

		[Token(Token = "0x6001677")]
		[Address(RVA = "0x17B7D00", Offset = "0x17B7D00", VA = "0x17B7D00", Slot = "6")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001678")]
		[Address(RVA = "0x17B7D08", Offset = "0x17B7D08", VA = "0x17B7D08", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001679")]
		[Address(RVA = "0x17B7D10", Offset = "0x17B7D10", VA = "0x17B7D10", Slot = "8")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x600167A")]
		[Address(RVA = "0x17B7E3C", Offset = "0x17B7E3C", VA = "0x17B7E3C")]
		public void UpdateCollider()
		{
		}

		[Token(Token = "0x600167B")]
		[Address(RVA = "0x17B7F40", Offset = "0x17B7F40", VA = "0x17B7F40", Slot = "19")]
		protected override void LateRun()
		{
		}

		[Token(Token = "0x600167C")]
		[Address(RVA = "0x17B8050", Offset = "0x17B8050", VA = "0x17B8050", Slot = "20")]
		protected override void Build()
		{
		}

		[Token(Token = "0x600167D")]
		[Address(RVA = "0x17B80B0", Offset = "0x17B80B0", VA = "0x17B80B0", Slot = "21")]
		protected override void PostBuild()
		{
		}

		[Token(Token = "0x600167E")]
		[Address(RVA = "0x17B80E4", Offset = "0x17B80E4", VA = "0x17B80E4", Slot = "29")]
		protected virtual void BuildMesh()
		{
		}

		[Token(Token = "0x600167F")]
		[Address(RVA = "0x17B80E8", Offset = "0x17B80E8", VA = "0x17B80E8", Slot = "30")]
		protected virtual void WriteMesh()
		{
		}

		[Token(Token = "0x6001680")]
		[Address(RVA = "0x17B82B8", Offset = "0x17B82B8", VA = "0x17B82B8")]
		protected void ResetUVDistance()
		{
		}

		[Token(Token = "0x6001681")]
		[Address(RVA = "0x17B8344", Offset = "0x17B8344", VA = "0x17B8344")]
		protected void AddUVDistance(int sampleIndex)
		{
		}

		[Token(Token = "0x6001682")]
		[Address(RVA = "0x17B84AC", Offset = "0x17B84AC", VA = "0x17B84AC")]
		protected void CalculateUVs(double percent, float u)
		{
		}

		[Token(Token = "0x6001683")]
		[Address(RVA = "0x17B8670", Offset = "0x17B8670", VA = "0x17B8670")]
		public MeshGenerator()
		{
		}
	}
	[Token(Token = "0x2000340")]
	public class Node : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20005EA")]
		public class Connection
		{
			[Token(Token = "0x4001A65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool invertTangents;

			[Token(Token = "0x4001A66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[SerializeField]
			private int _pointIndex;

			[Token(Token = "0x4001A67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private SplineComputer _computer;

			[Token(Token = "0x4001A68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			[HideInInspector]
			internal SplinePoint point;

			[Token(Token = "0x17000466")]
			public SplineComputer computer
			{
				[Token(Token = "0x60025B8")]
				[Address(RVA = "0x17B99A8", Offset = "0x17B99A8", VA = "0x17B99A8")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000467")]
			public int pointIndex
			{
				[Token(Token = "0x60025B9")]
				[Address(RVA = "0x17B99B0", Offset = "0x17B99B0", VA = "0x17B99B0")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x17000468")]
			internal bool isValid
			{
				[Token(Token = "0x60025BA")]
				[Address(RVA = "0x17B99B8", Offset = "0x17B99B8", VA = "0x17B99B8")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x60025BB")]
			[Address(RVA = "0x17BA384", Offset = "0x17BA384", VA = "0x17BA384")]
			internal Connection(SplineComputer comp, int index, SplinePoint inputPoint)
			{
			}
		}

		[Token(Token = "0x20005EB")]
		public enum Type
		{
			[Token(Token = "0x4001A6A")]
			Smooth,
			[Token(Token = "0x4001A6B")]
			Free
		}

		[Token(Token = "0x4000D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Type type;

		[Token(Token = "0x4000D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Connection[] connections;

		[Token(Token = "0x4000D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool _transformSize;

		[Token(Token = "0x4000D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[SerializeField]
		private bool _transformNormals;

		[Token(Token = "0x4000D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		[SerializeField]
		private bool _transformTangents;

		[Token(Token = "0x4000D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TS_Transform tsTransform;

		[Token(Token = "0x170001CE")]
		public bool transformNormals
		{
			[Token(Token = "0x6001685")]
			[Address(RVA = "0x17B8818", Offset = "0x17B8818", VA = "0x17B8818")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001686")]
			[Address(RVA = "0x17B8820", Offset = "0x17B8820", VA = "0x17B8820")]
			set
			{
			}
		}

		[Token(Token = "0x170001CF")]
		public bool transformSize
		{
			[Token(Token = "0x6001687")]
			[Address(RVA = "0x17B8A1C", Offset = "0x17B8A1C", VA = "0x17B8A1C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001688")]
			[Address(RVA = "0x17B8A24", Offset = "0x17B8A24", VA = "0x17B8A24")]
			set
			{
			}
		}

		[Token(Token = "0x170001D0")]
		public bool transformTangents
		{
			[Token(Token = "0x6001689")]
			[Address(RVA = "0x17B8A48", Offset = "0x17B8A48", VA = "0x17B8A48")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600168A")]
			[Address(RVA = "0x17B8A50", Offset = "0x17B8A50", VA = "0x17B8A50")]
			set
			{
			}
		}

		[Token(Token = "0x600168B")]
		[Address(RVA = "0x17B8A74", Offset = "0x17B8A74", VA = "0x17B8A74")]
		private void Awake()
		{
		}

		[Token(Token = "0x600168C")]
		[Address(RVA = "0x17B8AF4", Offset = "0x17B8AF4", VA = "0x17B8AF4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600168D")]
		[Address(RVA = "0x17B8B64", Offset = "0x17B8B64", VA = "0x17B8B64")]
		private void Update()
		{
		}

		[Token(Token = "0x600168E")]
		[Address(RVA = "0x17B8AF8", Offset = "0x17B8AF8", VA = "0x17B8AF8")]
		private void Run()
		{
		}

		[Token(Token = "0x600168F")]
		[Address(RVA = "0x17B9120", Offset = "0x17B9120", VA = "0x17B9120")]
		public SplinePoint GetPoint(int connectionIndex, bool swapTangents)
		{
			return default(SplinePoint);
		}

		[Token(Token = "0x6001690")]
		[Address(RVA = "0x17B9454", Offset = "0x17B9454", VA = "0x17B9454")]
		public void SetPoint(int connectionIndex, SplinePoint worldPoint, bool swappedTangents)
		{
		}

		[Token(Token = "0x6001691")]
		[Address(RVA = "0x17B97F4", Offset = "0x17B97F4", VA = "0x17B97F4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001692")]
		[Address(RVA = "0x17B97F8", Offset = "0x17B97F8", VA = "0x17B97F8")]
		public void ClearConnections()
		{
		}

		[Token(Token = "0x6001693")]
		[Address(RVA = "0x17B8B68", Offset = "0x17B8B68", VA = "0x17B8B68")]
		public void UpdateConnectedComputers([Optional] SplineComputer excludeComputer)
		{
		}

		[Token(Token = "0x6001694")]
		[Address(RVA = "0x17B9D3C", Offset = "0x17B9D3C", VA = "0x17B9D3C")]
		public void UpdatePoint(SplineComputer computer, int pointIndex, SplinePoint point, bool updatePosition = true)
		{
		}

		[Token(Token = "0x6001695")]
		[Address(RVA = "0x17B8844", Offset = "0x17B8844", VA = "0x17B8844")]
		private void UpdatePoints()
		{
		}

		[Token(Token = "0x6001696")]
		[Address(RVA = "0x17B9F18", Offset = "0x17B9F18", VA = "0x17B9F18")]
		protected void RemoveInvalidConnections()
		{
		}

		[Token(Token = "0x6001697")]
		[Address(RVA = "0x17B9FF4", Offset = "0x17B9FF4", VA = "0x17B9FF4", Slot = "4")]
		public virtual void AddConnection(SplineComputer computer, int pointIndex)
		{
		}

		[Token(Token = "0x6001698")]
		[Address(RVA = "0x17B9608", Offset = "0x17B9608", VA = "0x17B9608")]
		protected SplinePoint PointToLocal(SplinePoint worldPoint)
		{
			return default(SplinePoint);
		}

		[Token(Token = "0x6001699")]
		[Address(RVA = "0x17B9294", Offset = "0x17B9294", VA = "0x17B9294")]
		protected SplinePoint PointToWorld(SplinePoint localPoint)
		{
			return default(SplinePoint);
		}

		[Token(Token = "0x600169A")]
		[Address(RVA = "0x17BA3D4", Offset = "0x17BA3D4", VA = "0x17BA3D4", Slot = "5")]
		public virtual void RemoveConnection(SplineComputer computer, int pointIndex)
		{
		}

		[Token(Token = "0x600169B")]
		[Address(RVA = "0x17B9A60", Offset = "0x17B9A60", VA = "0x17B9A60")]
		private void RemoveConnection(int index)
		{
		}

		[Token(Token = "0x600169C")]
		[Address(RVA = "0x17BA5A0", Offset = "0x17BA5A0", VA = "0x17BA5A0", Slot = "6")]
		public virtual bool HasConnection(SplineComputer computer, int pointIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x600169D")]
		[Address(RVA = "0x17BA754", Offset = "0x17BA754", VA = "0x17BA754")]
		public Connection[] GetConnections()
		{
			return null;
		}

		[Token(Token = "0x600169E")]
		[Address(RVA = "0x17BA75C", Offset = "0x17BA75C", VA = "0x17BA75C")]
		public Node()
		{
		}
	}
	[Token(Token = "0x2000341")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9B9A5C", Offset = "0x9B9A5C")]
	public class ObjectBender : SplineUser
	{
		[Token(Token = "0x20005EC")]
		public enum Axis
		{
			[Token(Token = "0x4001A6D")]
			X,
			[Token(Token = "0x4001A6E")]
			Y,
			[Token(Token = "0x4001A6F")]
			Z
		}

		[Serializable]
		[Token(Token = "0x20005ED")]
		public class BendProperty
		{
			[Token(Token = "0x4001A70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool enabled;

			[Token(Token = "0x4001A71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public TS_Transform transform;

			[Token(Token = "0x4001A72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool applyRotation;

			[Token(Token = "0x4001A73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
			public bool applyScale;

			[Token(Token = "0x4001A74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
			[SerializeField]
			[HideInInspector]
			private bool _bendMesh;

			[Token(Token = "0x4001A75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
			[SerializeField]
			[HideInInspector]
			private bool _bendSpline;

			[Token(Token = "0x4001A76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[SerializeField]
			[HideInInspector]
			private bool _bendCollider;

			[Token(Token = "0x4001A77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float colliderUpdateDue;

			[Token(Token = "0x4001A78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float colliderUpdateRate;

			[Token(Token = "0x4001A79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private bool updateCollider;

			[Token(Token = "0x4001A7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public Vector3 originalPosition;

			[Token(Token = "0x4001A7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Vector3 originalScale;

			[Token(Token = "0x4001A7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public Quaternion originalRotation;

			[Token(Token = "0x4001A7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public Vector3 positionPercent;

			[Token(Token = "0x4001A7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public Vector3[] vertexPercents;

			[Token(Token = "0x4001A7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public Vector3[] normals;

			[Token(Token = "0x4001A80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public Vector3[] colliderVertexPercents;

			[Token(Token = "0x4001A81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public Vector3[] colliderNormals;

			[Token(Token = "0x4001A82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			[SerializeField]
			[HideInInspector]
			private Mesh originalMesh;

			[Token(Token = "0x4001A83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			[SerializeField]
			[HideInInspector]
			private Mesh originalColliderMesh;

			[Token(Token = "0x4001A84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			private Spline _originalSpline;

			[Token(Token = "0x4001A85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			[SerializeField]
			[HideInInspector]
			private Mesh destinationMesh;

			[Token(Token = "0x4001A86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			[SerializeField]
			[HideInInspector]
			private Mesh destinationColliderMesh;

			[Token(Token = "0x4001A87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			public Spline destinationSpline;

			[Token(Token = "0x4001A88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public TS_Mesh _editMesh;

			[Token(Token = "0x4001A89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public TS_Mesh _editColliderMesh;

			[Token(Token = "0x4001A8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			public MeshFilter filter;

			[Token(Token = "0x4001A8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			public MeshCollider collider;

			[Token(Token = "0x4001A8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			public SplineComputer splineComputer;

			[Token(Token = "0x4001A8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			public Vector3[] splinePointPercents;

			[Token(Token = "0x4001A8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
			public Vector3[] primaryTangentPercents;

			[Token(Token = "0x4001A8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
			public Vector3[] secondaryTangentPercents;

			[Token(Token = "0x4001A90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
			[SerializeField]
			[HideInInspector]
			private bool parent;

			[Token(Token = "0x17000469")]
			public bool isValid
			{
				[Token(Token = "0x60025BC")]
				[Address(RVA = "0x17BFC20", Offset = "0x17BFC20", VA = "0x17BFC20")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x1700046A")]
			public bool bendMesh
			{
				[Token(Token = "0x60025BD")]
				[Address(RVA = "0x17BC068", Offset = "0x17BC068", VA = "0x17BC068")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x60025BE")]
				[Address(RVA = "0x17BC070", Offset = "0x17BC070", VA = "0x17BC070")]
				set
				{
				}
			}

			[Token(Token = "0x1700046B")]
			public bool bendCollider
			{
				[Token(Token = "0x60025BF")]
				[Address(RVA = "0x17BC2BC", Offset = "0x17BC2BC", VA = "0x17BC2BC")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x60025C0")]
				[Address(RVA = "0x17BC2C4", Offset = "0x17BC2C4", VA = "0x17BC2C4")]
				set
				{
				}
			}

			[Token(Token = "0x1700046C")]
			public bool bendSpline
			{
				[Token(Token = "0x60025C1")]
				[Address(RVA = "0x17BFE00", Offset = "0x17BFE00", VA = "0x17BFE00")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x60025C2")]
				[Address(RVA = "0x17BFE08", Offset = "0x17BFE08", VA = "0x17BFE08")]
				set
				{
				}
			}

			[Token(Token = "0x1700046D")]
			public TS_Mesh editMesh
			{
				[Token(Token = "0x60025C3")]
				[Address(RVA = "0x17BDA4C", Offset = "0x17BDA4C", VA = "0x17BDA4C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700046E")]
			public TS_Mesh editColliderMesh
			{
				[Token(Token = "0x60025C4")]
				[Address(RVA = "0x17BDB4C", Offset = "0x17BDB4C", VA = "0x17BDB4C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700046F")]
			public Spline originalSpline
			{
				[Token(Token = "0x60025C5")]
				[Address(RVA = "0x17BDC78", Offset = "0x17BDC78", VA = "0x17BDC78")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60025C6")]
			[Address(RVA = "0x17BB8AC", Offset = "0x17BB8AC", VA = "0x17BB8AC")]
			public BendProperty(Transform t, bool isParent = false)
			{
			}

			[Token(Token = "0x60025C7")]
			[Address(RVA = "0x17BE0F8", Offset = "0x17BE0F8", VA = "0x17BE0F8")]
			public void Revert()
			{
			}

			[Token(Token = "0x60025C8")]
			[Address(RVA = "0x17BFCB0", Offset = "0x17BFCB0", VA = "0x17BFCB0")]
			private void RevertMesh()
			{
			}

			[Token(Token = "0x60025C9")]
			[Address(RVA = "0x17BFE14", Offset = "0x17BFE14", VA = "0x17BFE14")]
			private void RevertTransform()
			{
			}

			[Token(Token = "0x60025CA")]
			[Address(RVA = "0x17BFD58", Offset = "0x17BFD58", VA = "0x17BFD58")]
			private void RevertCollider()
			{
			}

			[Token(Token = "0x60025CB")]
			[Address(RVA = "0x17BE280", Offset = "0x17BE280", VA = "0x17BE280")]
			public void Apply(bool applyTransform)
			{
			}

			[Token(Token = "0x60025CC")]
			[Address(RVA = "0x17BE418", Offset = "0x17BE418", VA = "0x17BE418")]
			public void Update()
			{
			}

			[Token(Token = "0x60025CD")]
			[Address(RVA = "0x17BFF08", Offset = "0x17BFF08", VA = "0x17BFF08")]
			private void ApplyMesh()
			{
			}

			[Token(Token = "0x60025CE")]
			[Address(RVA = "0x17C0140", Offset = "0x17C0140", VA = "0x17C0140")]
			private void ApplyCollider()
			{
			}

			[Token(Token = "0x60025CF")]
			[Address(RVA = "0x17C00F8", Offset = "0x17C00F8", VA = "0x17C00F8")]
			private void ApplySpline()
			{
			}
		}

		[Token(Token = "0x4000D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		[HideInInspector]
		private bool _bend;

		[Token(Token = "0x4000D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[HideInInspector]
		public BendProperty[] bendProperties;

		[Token(Token = "0x4000D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		[HideInInspector]
		private TS_Bounds bounds;

		[Token(Token = "0x4000D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		[HideInInspector]
		private Axis _axis;

		[Token(Token = "0x4000D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[SerializeField]
		[HideInInspector]
		private bool _autoNormals;

		[Token(Token = "0x4000D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		[HideInInspector]
		private Vector3 _upVector;

		[Token(Token = "0x4000D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private SplineResult bendResult;

		[Token(Token = "0x170001D1")]
		public bool bend
		{
			[Token(Token = "0x600169F")]
			[Address(RVA = "0x17BA7CC", Offset = "0x17BA7CC", VA = "0x17BA7CC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60016A0")]
			[Address(RVA = "0x17BA7D4", Offset = "0x17BA7D4", VA = "0x17BA7D4")]
			set
			{
			}
		}

		[Token(Token = "0x170001D2")]
		public Axis axis
		{
			[Token(Token = "0x60016A1")]
			[Address(RVA = "0x17BAB30", Offset = "0x17BAB30", VA = "0x17BAB30")]
			get
			{
				return default(Axis);
			}
			[Token(Token = "0x60016A2")]
			[Address(RVA = "0x17BAB38", Offset = "0x17BAB38", VA = "0x17BAB38")]
			set
			{
			}
		}

		[Token(Token = "0x170001D3")]
		public bool autoNormals
		{
			[Token(Token = "0x60016A3")]
			[Address(RVA = "0x17BAC08", Offset = "0x17BAC08", VA = "0x17BAC08")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60016A4")]
			[Address(RVA = "0x17BAC10", Offset = "0x17BAC10", VA = "0x17BAC10")]
			set
			{
			}
		}

		[Token(Token = "0x170001D4")]
		public Vector3 upVector
		{
			[Token(Token = "0x60016A5")]
			[Address(RVA = "0x17BACE8", Offset = "0x17BACE8", VA = "0x17BACE8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60016A6")]
			[Address(RVA = "0x17BACF4", Offset = "0x17BACF4", VA = "0x17BACF4")]
			set
			{
			}
		}

		[Token(Token = "0x60016A7")]
		[Address(RVA = "0x17BAE24", Offset = "0x17BAE24", VA = "0x17BAE24")]
		private void GetTransformsRecursively(Transform current, ref List<Transform> transformList)
		{
		}

		[Token(Token = "0x60016A8")]
		[Address(RVA = "0x17BB118", Offset = "0x17BB118", VA = "0x17BB118")]
		private void GetObjects()
		{
		}

		[Token(Token = "0x60016A9")]
		[Address(RVA = "0x17BB7AC", Offset = "0x17BB7AC", VA = "0x17BB7AC")]
		public TS_Bounds GetBounds()
		{
			return null;
		}

		[Token(Token = "0x60016AA")]
		[Address(RVA = "0x17BB29C", Offset = "0x17BB29C", VA = "0x17BB29C")]
		private void CreateProperty(ref BendProperty property, Transform t)
		{
		}

		[Token(Token = "0x60016AB")]
		[Address(RVA = "0x17BC440", Offset = "0x17BC440", VA = "0x17BC440")]
		private void CalculateBounds()
		{
		}

		[Token(Token = "0x60016AC")]
		[Address(RVA = "0x17BC66C", Offset = "0x17BC66C", VA = "0x17BC66C")]
		private void CalculatePropertyBounds(ref BendProperty property)
		{
		}

		[Token(Token = "0x60016AD")]
		[Address(RVA = "0x17BD1F8", Offset = "0x17BD1F8", VA = "0x17BD1F8")]
		public void GetPercent(BendProperty property)
		{
		}

		[Token(Token = "0x60016AE")]
		[Address(RVA = "0x17BAA98", Offset = "0x17BAA98", VA = "0x17BAA98")]
		private void Revert()
		{
		}

		[Token(Token = "0x60016AF")]
		[Address(RVA = "0x17BA844", Offset = "0x17BA844", VA = "0x17BA844")]
		public void UpdateReferences()
		{
		}

		[Token(Token = "0x60016B0")]
		[Address(RVA = "0x17BE464", Offset = "0x17BE464", VA = "0x17BE464")]
		private void GetBendResult(Vector3 percentage)
		{
		}

		[Token(Token = "0x60016B1")]
		[Address(RVA = "0x17BDDC8", Offset = "0x17BDDC8", VA = "0x17BDDC8")]
		private Vector3 GetPercentage(Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60016B2")]
		[Address(RVA = "0x17BE8B4", Offset = "0x17BE8B4", VA = "0x17BE8B4", Slot = "20")]
		protected override void Build()
		{
		}

		[Token(Token = "0x60016B3")]
		[Address(RVA = "0x17BE1D4", Offset = "0x17BE1D4", VA = "0x17BE1D4")]
		private void Bend()
		{
		}

		[Token(Token = "0x60016B4")]
		[Address(RVA = "0x17BE8F0", Offset = "0x17BE8F0", VA = "0x17BE8F0")]
		public void BendObject(BendProperty p)
		{
		}

		[Token(Token = "0x60016B5")]
		[Address(RVA = "0x17BF8FC", Offset = "0x17BF8FC", VA = "0x17BF8FC", Slot = "21")]
		protected override void PostBuild()
		{
		}

		[Token(Token = "0x60016B6")]
		[Address(RVA = "0x17BFAC8", Offset = "0x17BFAC8", VA = "0x17BFAC8", Slot = "19")]
		protected override void LateRun()
		{
		}

		[Token(Token = "0x60016B7")]
		[Address(RVA = "0x17BFB68", Offset = "0x17BFB68", VA = "0x17BFB68")]
		public ObjectBender()
		{
		}
	}
	[Token(Token = "0x2000342")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9B9A94", Offset = "0x9B9A94")]
	public class ObjectController : SplineUser
	{
		[Serializable]
		[Token(Token = "0x20005EE")]
		internal class ObjectControl
		{
			[Token(Token = "0x4001A91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject gameObject;

			[Token(Token = "0x4001A92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 position;

			[Token(Token = "0x4001A93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Quaternion rotation;

			[Token(Token = "0x4001A94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public Vector3 scale;

			[Token(Token = "0x4001A95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public bool active;

			[Token(Token = "0x4001A96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public Vector3 baseScale;

			[Token(Token = "0x17000470")]
			public bool isNull
			{
				[Token(Token = "0x60025D0")]
				[Address(RVA = "0x17C381C", Offset = "0x17C381C", VA = "0x17C381C")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000471")]
			public Transform transform
			{
				[Token(Token = "0x60025D1")]
				[Address(RVA = "0x17C1534", Offset = "0x17C1534", VA = "0x17C1534")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60025D2")]
			[Address(RVA = "0x17C1D48", Offset = "0x17C1D48", VA = "0x17C1D48")]
			public ObjectControl(GameObject input)
			{
			}

			[Token(Token = "0x60025D3")]
			[Address(RVA = "0x17C15D4", Offset = "0x17C15D4", VA = "0x17C15D4")]
			public void Destroy()
			{
			}

			[Token(Token = "0x60025D4")]
			[Address(RVA = "0x17C1688", Offset = "0x17C1688", VA = "0x17C1688")]
			public void DestroyImmediate()
			{
			}

			[Token(Token = "0x60025D5")]
			[Address(RVA = "0x17C3348", Offset = "0x17C3348", VA = "0x17C3348")]
			public void Apply()
			{
			}
		}

		[Token(Token = "0x20005EF")]
		public enum ObjectMethod
		{
			[Token(Token = "0x4001A98")]
			Instantiate,
			[Token(Token = "0x4001A99")]
			GetChildren
		}

		[Token(Token = "0x20005F0")]
		public enum Positioning
		{
			[Token(Token = "0x4001A9B")]
			Stretch,
			[Token(Token = "0x4001A9C")]
			Clip
		}

		[Token(Token = "0x20005F1")]
		public enum Iteration
		{
			[Token(Token = "0x4001A9E")]
			Ordered,
			[Token(Token = "0x4001A9F")]
			Random
		}

		[Token(Token = "0x20005F2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BB9F4", Offset = "0x9BB9F4")]
		private sealed class <InstantiateAllWithDelay>d__97 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001AA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001AA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001AA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ObjectController <>4__this;

			[Token(Token = "0x4001AA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x17000472")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60025D9")]
				[Address(RVA = "0x17C37A4", Offset = "0x17C37A4", VA = "0x17C37A4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000473")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60025DB")]
				[Address(RVA = "0x17C3814", Offset = "0x17C3814", VA = "0x17C3814", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60025D6")]
			[Address(RVA = "0x17C2048", Offset = "0x17C2048", VA = "0x17C2048")]
			[DebuggerHidden]
			public <InstantiateAllWithDelay>d__97(int <>1__state)
			{
			}

			[Token(Token = "0x60025D7")]
			[Address(RVA = "0x17C3634", Offset = "0x17C3634", VA = "0x17C3634", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60025D8")]
			[Address(RVA = "0x17C3638", Offset = "0x17C3638", VA = "0x17C3638", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60025DA")]
			[Address(RVA = "0x17C37AC", Offset = "0x17C37AC", VA = "0x17C37AC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		[HideInInspector]
		public GameObject[] objects;

		[Token(Token = "0x4000D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		[HideInInspector]
		private float _positionOffset;

		[Token(Token = "0x4000D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[SerializeField]
		[HideInInspector]
		private int _spawnCount;

		[Token(Token = "0x4000D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		[HideInInspector]
		private Positioning _objectPositioning;

		[Token(Token = "0x4000D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[SerializeField]
		[HideInInspector]
		private Iteration _iteration;

		[Token(Token = "0x4000D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		[HideInInspector]
		private int _randomSeed;

		[Token(Token = "0x4000D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[SerializeField]
		[HideInInspector]
		private Vector2 _randomSize;

		[Token(Token = "0x4000D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[SerializeField]
		[HideInInspector]
		private Vector2 _offset;

		[Token(Token = "0x4000D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		[HideInInspector]
		private Vector3 _minRotationOffset;

		[Token(Token = "0x4000D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		[HideInInspector]
		private Vector3 _maxRotationOffset;

		[Token(Token = "0x4000D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		[HideInInspector]
		private Vector3 _minScaleMultiplier;

		[Token(Token = "0x4000D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		[HideInInspector]
		private Vector3 _maxScaleMultiplier;

		[Token(Token = "0x4000D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[SerializeField]
		[HideInInspector]
		private bool _randomizeOffset;

		[Token(Token = "0x4000D5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF5")]
		[SerializeField]
		[HideInInspector]
		private bool _useRandomOffsetRotation;

		[Token(Token = "0x4000D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF6")]
		[SerializeField]
		[HideInInspector]
		private bool _shellOffset;

		[Token(Token = "0x4000D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF7")]
		[SerializeField]
		[HideInInspector]
		private bool _randomOffset;

		[Token(Token = "0x4000D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		[HideInInspector]
		private bool _applyRotation;

		[Token(Token = "0x4000D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF9")]
		[SerializeField]
		[HideInInspector]
		private bool _applyScale;

		[Token(Token = "0x4000D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		[SerializeField]
		[HideInInspector]
		private ObjectMethod _objectMethod;

		[Token(Token = "0x4000D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[HideInInspector]
		public bool delayedSpawn;

		[Token(Token = "0x4000D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		[HideInInspector]
		public float spawnDelay;

		[Token(Token = "0x4000D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		[HideInInspector]
		private int lastChildCount;

		[Token(Token = "0x4000D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		[HideInInspector]
		private ObjectControl[] spawned;

		[Token(Token = "0x4000D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private SplineResult evaluateResult;

		[Token(Token = "0x4000D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private System.Random randomizer;

		[Token(Token = "0x4000D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private System.Random randomizer2;

		[Token(Token = "0x4000D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private System.Random rotationRandomizer;

		[Token(Token = "0x4000D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private System.Random scaleRandomizer;

		[Token(Token = "0x170001D5")]
		public ObjectMethod objectMethod
		{
			[Token(Token = "0x60016B8")]
			[Address(RVA = "0x17C0398", Offset = "0x17C0398", VA = "0x17C0398")]
			get
			{
				return default(ObjectMethod);
			}
			[Token(Token = "0x60016B9")]
			[Address(RVA = "0x17C03A0", Offset = "0x17C03A0", VA = "0x17C03A0")]
			set
			{
			}
		}

		[Token(Token = "0x170001D6")]
		public int spawnCount
		{
			[Token(Token = "0x60016BA")]
			[Address(RVA = "0x17C0474", Offset = "0x17C0474", VA = "0x17C0474")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60016BB")]
			[Address(RVA = "0x17C047C", Offset = "0x17C047C", VA = "0x17C047C")]
			set
			{
			}
		}

		[Token(Token = "0x170001D7")]
		public Positioning objectPositioning
		{
			[Token(Token = "0x60016BC")]
			[Address(RVA = "0x17C0840", Offset = "0x17C0840", VA = "0x17C0840")]
			get
			{
				return default(Positioning);
			}
			[Token(Token = "0x60016BD")]
			[Address(RVA = "0x17C0848", Offset = "0x17C0848", VA = "0x17C0848")]
			set
			{
			}
		}

		[Token(Token = "0x170001D8")]
		public Iteration iteration
		{
			[Token(Token = "0x60016BE")]
			[Address(RVA = "0x17C086C", Offset = "0x17C086C", VA = "0x17C086C")]
			get
			{
				return default(Iteration);
			}
			[Token(Token = "0x60016BF")]
			[Address(RVA = "0x17C0874", Offset = "0x17C0874", VA = "0x17C0874")]
			set
			{
			}
		}

		[Token(Token = "0x170001D9")]
		public int randomSeed
		{
			[Token(Token = "0x60016C0")]
			[Address(RVA = "0x17C0898", Offset = "0x17C0898", VA = "0x17C0898")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60016C1")]
			[Address(RVA = "0x17C08A0", Offset = "0x17C08A0", VA = "0x17C08A0")]
			set
			{
			}
		}

		[Token(Token = "0x170001DA")]
		public Vector2 offset
		{
			[Token(Token = "0x60016C2")]
			[Address(RVA = "0x17C08C4", Offset = "0x17C08C4", VA = "0x17C08C4")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x60016C3")]
			[Address(RVA = "0x17C08CC", Offset = "0x17C08CC", VA = "0x17C08CC")]
			set
			{
			}
		}

		[Token(Token = "0x170001DB")]
		public Vector3 minRotationOffset
		{
			[Token(Token = "0x60016C4")]
			[Address(RVA = "0x17C098C", Offset = "0x17C098C", VA = "0x17C098C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60016C5")]
			[Address(RVA = "0x17C0998", Offset = "0x17C0998", VA = "0x17C0998")]
			set
			{
			}
		}

		[Token(Token = "0x170001DC")]
		public Vector3 maxRotationOffset
		{
			[Token(Token = "0x60016C6")]
			[Address(RVA = "0x17C0A78", Offset = "0x17C0A78", VA = "0x17C0A78")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60016C7")]
			[Address(RVA = "0x17C0A84", Offset = "0x17C0A84", VA = "0x17C0A84")]
			set
			{
			}
		}

		[Token(Token = "0x170001DD")]
		public Vector3 rotationOffset
		{
			[Token(Token = "0x60016C8")]
			[Address(RVA = "0x17C0B64", Offset = "0x17C0B64", VA = "0x17C0B64")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60016C9")]
			[Address(RVA = "0x17C0C10", Offset = "0x17C0C10", VA = "0x17C0C10")]
			set
			{
			}
		}

		[Token(Token = "0x170001DE")]
		public Vector3 minScaleMultiplier
		{
			[Token(Token = "0x60016CA")]
			[Address(RVA = "0x17C0D38", Offset = "0x17C0D38", VA = "0x17C0D38")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60016CB")]
			[Address(RVA = "0x17C0D44", Offset = "0x17C0D44", VA = "0x17C0D44")]
			set
			{
			}
		}

		[Token(Token = "0x170001DF")]
		public Vector3 maxScaleMultiplier
		{
			[Token(Token = "0x60016CC")]
			[Address(RVA = "0x17C0E24", Offset = "0x17C0E24", VA = "0x17C0E24")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60016CD")]
			[Address(RVA = "0x17C0E30", Offset = "0x17C0E30", VA = "0x17C0E30")]
			set
			{
			}
		}

		[Token(Token = "0x170001E0")]
		public Vector3 scaleMultiplier
		{
			[Token(Token = "0x60016CE")]
			[Address(RVA = "0x17C0F10", Offset = "0x17C0F10", VA = "0x17C0F10")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60016CF")]
			[Address(RVA = "0x17C0FBC", Offset = "0x17C0FBC", VA = "0x17C0FBC")]
			set
			{
			}
		}

		[Token(Token = "0x170001E1")]
		public bool randomizeOffset
		{
			[Token(Token = "0x60016D0")]
			[Address(RVA = "0x17C10E4", Offset = "0x17C10E4", VA = "0x17C10E4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60016D1")]
			[Address(RVA = "0x17C10EC", Offset = "0x17C10EC", VA = "0x17C10EC")]
			set
			{
			}
		}

		[Token(Token = "0x170001E2")]
		public bool useRandomOffsetRotation
		{
			[Token(Token = "0x60016D2")]
			[Address(RVA = "0x17C111C", Offset = "0x17C111C", VA = "0x17C111C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60016D3")]
			[Address(RVA = "0x17C1124", Offset = "0x17C1124", VA = "0x17C1124")]
			set
			{
			}
		}

		[Token(Token = "0x170001E3")]
		public bool shellOffset
		{
			[Token(Token = "0x60016D4")]
			[Address(RVA = "0x17C1154", Offset = "0x17C1154", VA = "0x17C1154")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60016D5")]
			[Address(RVA = "0x17C115C", Offset = "0x17C115C", VA = "0x17C115C")]
			set
			{
			}
		}

		[Token(Token = "0x170001E4")]
		public bool randomOffset
		{
			[Token(Token = "0x60016D6")]
			[Address(RVA = "0x17C118C", Offset = "0x17C118C", VA = "0x17C118C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60016D7")]
			[Address(RVA = "0x17C1194", Offset = "0x17C1194", VA = "0x17C1194")]
			set
			{
			}
		}

		[Token(Token = "0x170001E5")]
		public bool applyRotation
		{
			[Token(Token = "0x60016D8")]
			[Address(RVA = "0x17C11C4", Offset = "0x17C11C4", VA = "0x17C11C4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60016D9")]
			[Address(RVA = "0x17C11CC", Offset = "0x17C11CC", VA = "0x17C11CC")]
			set
			{
			}
		}

		[Token(Token = "0x170001E6")]
		public bool applyScale
		{
			[Token(Token = "0x60016DA")]
			[Address(RVA = "0x17C11FC", Offset = "0x17C11FC", VA = "0x17C11FC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60016DB")]
			[Address(RVA = "0x17C1204", Offset = "0x17C1204", VA = "0x17C1204")]
			set
			{
			}
		}

		[Token(Token = "0x170001E7")]
		public Vector2 randomSize
		{
			[Token(Token = "0x60016DC")]
			[Address(RVA = "0x17C1234", Offset = "0x17C1234", VA = "0x17C1234")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x60016DD")]
			[Address(RVA = "0x17C123C", Offset = "0x17C123C", VA = "0x17C123C")]
			set
			{
			}
		}

		[Token(Token = "0x170001E8")]
		public float positionOffset
		{
			[Token(Token = "0x60016DE")]
			[Address(RVA = "0x17C12FC", Offset = "0x17C12FC", VA = "0x17C12FC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60016DF")]
			[Address(RVA = "0x17C1304", Offset = "0x17C1304", VA = "0x17C1304")]
			set
			{
			}
		}

		[Token(Token = "0x60016E0")]
		[Address(RVA = "0x17C1328", Offset = "0x17C1328", VA = "0x17C1328")]
		public void Clear()
		{
		}

		[Token(Token = "0x60016E1")]
		[Address(RVA = "0x17C04B0", Offset = "0x17C04B0", VA = "0x17C04B0")]
		private void Remove()
		{
		}

		[Token(Token = "0x60016E2")]
		[Address(RVA = "0x17C173C", Offset = "0x17C173C", VA = "0x17C173C")]
		public void GetAll()
		{
		}

		[Token(Token = "0x60016E3")]
		[Address(RVA = "0x17C03C0", Offset = "0x17C03C0", VA = "0x17C03C0")]
		public void Spawn()
		{
		}

		[Token(Token = "0x60016E4")]
		[Address(RVA = "0x17C1FB0", Offset = "0x17C1FB0", VA = "0x17C1FB0", Slot = "19")]
		protected override void LateRun()
		{
		}

		[Token(Token = "0x60016E5")]
		[Address(RVA = "0x17C1E64", Offset = "0x17C1E64", VA = "0x17C1E64")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9D16D8", Offset = "0x9D16D8")]
		private IEnumerator InstantiateAllWithDelay()
		{
			return null;
		}

		[Token(Token = "0x60016E6")]
		[Address(RVA = "0x17C1ED8", Offset = "0x17C1ED8", VA = "0x17C1ED8")]
		private void InstantiateAll()
		{
		}

		[Token(Token = "0x60016E7")]
		[Address(RVA = "0x17C2074", Offset = "0x17C2074", VA = "0x17C2074")]
		private void InstantiateSingle()
		{
		}

		[Token(Token = "0x60016E8")]
		[Address(RVA = "0x17C2454", Offset = "0x17C2454", VA = "0x17C2454", Slot = "20")]
		protected override void Build()
		{
		}

		[Token(Token = "0x60016E9")]
		[Address(RVA = "0x17C32A8", Offset = "0x17C32A8", VA = "0x17C32A8", Slot = "21")]
		protected override void PostBuild()
		{
		}

		[Token(Token = "0x60016EA")]
		[Address(RVA = "0x17C34A8", Offset = "0x17C34A8", VA = "0x17C34A8", Slot = "8")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x60016EB")]
		[Address(RVA = "0x17C34E4", Offset = "0x17C34E4", VA = "0x17C34E4")]
		public ObjectController()
		{
		}
	}
	[Token(Token = "0x2000343")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9B9ACC", Offset = "0x9B9ACC")]
	public class ParticleController : SplineUser
	{
		[Token(Token = "0x20005F3")]
		public class Particle
		{
			[Token(Token = "0x4001AA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector2 startOffset;

			[Token(Token = "0x4001AA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector2 endOffset;

			[Token(Token = "0x4001AA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float speed;

			[Token(Token = "0x4001AA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public double splinePercent;

			[Token(Token = "0x4001AA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float lifePercent;

			[Token(Token = "0x60025DC")]
			[Address(RVA = "0x17C4A0C", Offset = "0x17C4A0C", VA = "0x17C4A0C")]
			public Particle()
			{
			}
		}

		[Token(Token = "0x20005F4")]
		public enum EmitPoint
		{
			[Token(Token = "0x4001AAA")]
			Beginning,
			[Token(Token = "0x4001AAB")]
			Ending,
			[Token(Token = "0x4001AAC")]
			Random,
			[Token(Token = "0x4001AAD")]
			Ordered
		}

		[Token(Token = "0x20005F5")]
		public enum MotionType
		{
			[Token(Token = "0x4001AAF")]
			None,
			[Token(Token = "0x4001AB0")]
			UseParticleSystem,
			[Token(Token = "0x4001AB1")]
			FollowForward,
			[Token(Token = "0x4001AB2")]
			FollowBackward,
			[Token(Token = "0x4001AB3")]
			ByNormal,
			[Token(Token = "0x4001AB4")]
			ByNormalRandomized
		}

		[Token(Token = "0x20005F6")]
		public enum Wrap
		{
			[Token(Token = "0x4001AB6")]
			Default,
			[Token(Token = "0x4001AB7")]
			Loop
		}

		[Token(Token = "0x4000D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[HideInInspector]
		public ParticleSystem _particleSystem;

		[Token(Token = "0x4000D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[HideInInspector]
		public bool volumetric;

		[Token(Token = "0x4000D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		[HideInInspector]
		public bool emitFromShell;

		[Token(Token = "0x4000D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[HideInInspector]
		public Vector2 scale;

		[Token(Token = "0x4000D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[HideInInspector]
		public EmitPoint emitPoint;

		[Token(Token = "0x4000D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[HideInInspector]
		public MotionType motionType;

		[Token(Token = "0x4000D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[HideInInspector]
		public Wrap wrapMode;

		[Token(Token = "0x4000D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[HideInInspector]
		public float minCycles;

		[Token(Token = "0x4000D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[HideInInspector]
		public float maxCycles;

		[Token(Token = "0x4000D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private ParticleSystem.Particle[] particles;

		[Token(Token = "0x4000D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Particle[] particleControllers;

		[Token(Token = "0x4000D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private int particleCount;

		[Token(Token = "0x4000D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private int birthIndex;

		[Token(Token = "0x4000D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private SplineResult evaluateResult;

		[Token(Token = "0x60016EC")]
		[Address(RVA = "0x17C388C", Offset = "0x17C388C", VA = "0x17C388C", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60016ED")]
		[Address(RVA = "0x17C3894", Offset = "0x17C3894", VA = "0x17C3894", Slot = "19")]
		protected override void LateRun()
		{
		}

		[Token(Token = "0x60016EE")]
		[Address(RVA = "0x17C4970", Offset = "0x17C4970", VA = "0x17C4970", Slot = "5")]
		protected override void Reset()
		{
		}

		[Token(Token = "0x60016EF")]
		[Address(RVA = "0x17C3EB4", Offset = "0x17C3EB4", VA = "0x17C3EB4")]
		private void HandleParticle(int index)
		{
		}

		[Token(Token = "0x60016F0")]
		[Address(RVA = "0x17C4A8C", Offset = "0x17C4A8C", VA = "0x17C4A8C")]
		private void OnParticleBorn(int index)
		{
		}

		[Token(Token = "0x60016F1")]
		[Address(RVA = "0x17C5C44", Offset = "0x17C5C44", VA = "0x17C5C44")]
		public ParticleController()
		{
		}
	}
	[Token(Token = "0x2000344")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9B9B18", Offset = "0x9B9B18")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9B9B18", Offset = "0x9B9B18")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9B9B18", Offset = "0x9B9B18")]
	public class PathGenerator : MeshGenerator
	{
		[Token(Token = "0x4000D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		[HideInInspector]
		private int _slices;

		[Token(Token = "0x4000D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		[SerializeField]
		[HideInInspector]
		private bool _useShapeCurve;

		[Token(Token = "0x4000D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		[HideInInspector]
		private AnimationCurve _shape;

		[Token(Token = "0x4000D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		[HideInInspector]
		private AnimationCurve _lastShape;

		[Token(Token = "0x4000D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		[HideInInspector]
		private float _shapeExposure;

		[Token(Token = "0x170001E9")]
		public int slices
		{
			[Token(Token = "0x60016F2")]
			[Address(RVA = "0x17C5CEC", Offset = "0x17C5CEC", VA = "0x17C5CEC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60016F3")]
			[Address(RVA = "0x17C5CF4", Offset = "0x17C5CF4", VA = "0x17C5CF4")]
			set
			{
			}
		}

		[Token(Token = "0x170001EA")]
		public bool useShapeCurve
		{
			[Token(Token = "0x60016F4")]
			[Address(RVA = "0x17C5D20", Offset = "0x17C5D20", VA = "0x17C5D20")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60016F5")]
			[Address(RVA = "0x17C5D28", Offset = "0x17C5D28", VA = "0x17C5D28")]
			set
			{
			}
		}

		[Token(Token = "0x170001EB")]
		public float shapeExposure
		{
			[Token(Token = "0x60016F6")]
			[Address(RVA = "0x17C5E74", Offset = "0x17C5E74", VA = "0x17C5E74")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60016F7")]
			[Address(RVA = "0x17C5E7C", Offset = "0x17C5E7C", VA = "0x17C5E7C")]
			set
			{
			}
		}

		[Token(Token = "0x170001EC")]
		public AnimationCurve shape
		{
			[Token(Token = "0x60016F8")]
			[Address(RVA = "0x17C5F40", Offset = "0x17C5F40", VA = "0x17C5F40")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016F9")]
			[Address(RVA = "0x17C5F48", Offset = "0x17C5F48", VA = "0x17C5F48")]
			set
			{
			}
		}

		[Token(Token = "0x60016FA")]
		[Address(RVA = "0x17C6474", Offset = "0x17C6474", VA = "0x17C6474", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60016FB")]
		[Address(RVA = "0x17C64E0", Offset = "0x17C64E0", VA = "0x17C64E0", Slot = "5")]
		protected override void Reset()
		{
		}

		[Token(Token = "0x60016FC")]
		[Address(RVA = "0x17C64E4", Offset = "0x17C64E4", VA = "0x17C64E4", Slot = "29")]
		protected override void BuildMesh()
		{
		}

		[Token(Token = "0x60016FD")]
		[Address(RVA = "0x17C663C", Offset = "0x17C663C", VA = "0x17C663C")]
		private void GenerateVertices()
		{
		}

		[Token(Token = "0x60016FE")]
		[Address(RVA = "0x17C7A34", Offset = "0x17C7A34", VA = "0x17C7A34")]
		public PathGenerator()
		{
		}
	}
	[Token(Token = "0x2000345")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9B9BC8", Offset = "0x9B9BC8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9B9BC8", Offset = "0x9B9BC8")]
	public class PolygonColliderGenerator : SplineUser
	{
		[Token(Token = "0x20005F7")]
		public enum Type
		{
			[Token(Token = "0x4001AB9")]
			Path,
			[Token(Token = "0x4001ABA")]
			Shape
		}

		[Token(Token = "0x4000D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		[HideInInspector]
		private Type _type;

		[Token(Token = "0x4000D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[SerializeField]
		[HideInInspector]
		private float _size;

		[Token(Token = "0x4000D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		[HideInInspector]
		private float _offset;

		[Token(Token = "0x4000D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		[HideInInspector]
		protected PolygonCollider2D polygonCollider;

		[Token(Token = "0x4000D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		[HideInInspector]
		protected Vector2[] vertices;

		[Token(Token = "0x4000D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[HideInInspector]
		public float updateRate;

		[Token(Token = "0x4000D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		protected float lastUpdateTime;

		[Token(Token = "0x4000D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool updateCollider;

		[Token(Token = "0x170001ED")]
		public Type type
		{
			[Token(Token = "0x60016FF")]
			[Address(RVA = "0x17C7AA8", Offset = "0x17C7AA8", VA = "0x17C7AA8")]
			get
			{
				return default(Type);
			}
			[Token(Token = "0x6001700")]
			[Address(RVA = "0x17C7AB0", Offset = "0x17C7AB0", VA = "0x17C7AB0")]
			set
			{
			}
		}

		[Token(Token = "0x170001EE")]
		public float size
		{
			[Token(Token = "0x6001701")]
			[Address(RVA = "0x17C7AD4", Offset = "0x17C7AD4", VA = "0x17C7AD4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001702")]
			[Address(RVA = "0x17C7ADC", Offset = "0x17C7ADC", VA = "0x17C7ADC")]
			set
			{
			}
		}

		[Token(Token = "0x170001EF")]
		public float offset
		{
			[Token(Token = "0x6001703")]
			[Address(RVA = "0x17C7B00", Offset = "0x17C7B00", VA = "0x17C7B00")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001704")]
			[Address(RVA = "0x17C7B08", Offset = "0x17C7B08", VA = "0x17C7B08")]
			set
			{
			}
		}

		[Token(Token = "0x6001705")]
		[Address(RVA = "0x17C7B2C", Offset = "0x17C7B2C", VA = "0x17C7B2C", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001706")]
		[Address(RVA = "0x17C7B90", Offset = "0x17C7B90", VA = "0x17C7B90", Slot = "5")]
		protected override void Reset()
		{
		}

		[Token(Token = "0x6001707")]
		[Address(RVA = "0x17C7B98", Offset = "0x17C7B98", VA = "0x17C7B98", Slot = "6")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001708")]
		[Address(RVA = "0x17C7BA0", Offset = "0x17C7BA0", VA = "0x17C7BA0", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001709")]
		[Address(RVA = "0x17C7BA8", Offset = "0x17C7BA8", VA = "0x17C7BA8", Slot = "8")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x600170A")]
		[Address(RVA = "0x17C7BB0", Offset = "0x17C7BB0", VA = "0x17C7BB0", Slot = "19")]
		protected override void LateRun()
		{
		}

		[Token(Token = "0x600170B")]
		[Address(RVA = "0x17C7C9C", Offset = "0x17C7C9C", VA = "0x17C7C9C", Slot = "20")]
		protected override void Build()
		{
		}

		[Token(Token = "0x600170C")]
		[Address(RVA = "0x17C85EC", Offset = "0x17C85EC", VA = "0x17C85EC", Slot = "21")]
		protected override void PostBuild()
		{
		}

		[Token(Token = "0x600170D")]
		[Address(RVA = "0x17C7D10", Offset = "0x17C7D10", VA = "0x17C7D10")]
		private void GeneratePath()
		{
		}

		[Token(Token = "0x600170E")]
		[Address(RVA = "0x17C826C", Offset = "0x17C826C", VA = "0x17C826C")]
		private void GenerateShape()
		{
		}

		[Token(Token = "0x600170F")]
		[Address(RVA = "0x17C8804", Offset = "0x17C8804", VA = "0x17C8804")]
		public PolygonColliderGenerator()
		{
		}
	}
	[Token(Token = "0x2000346")]
	public delegate void EmptySplineHandler();
	[Token(Token = "0x2000347")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9B9C50", Offset = "0x9B9C50")]
	public class SplineComputer : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20005F8")]
		public class NodeLink
		{
			[Token(Token = "0x4001ABB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Node node;

			[Token(Token = "0x4001ABC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int pointIndex;

			[Token(Token = "0x60025DD")]
			[Address(RVA = "0x1A00EC4", Offset = "0x1A00EC4", VA = "0x1A00EC4")]
			public NodeLink()
			{
			}
		}

		[Token(Token = "0x20005F9")]
		public enum Space
		{
			[Token(Token = "0x4001ABE")]
			World,
			[Token(Token = "0x4001ABF")]
			Local
		}

		[Serializable]
		[Token(Token = "0x20005FA")]
		public class Morph
		{
			[Serializable]
			[Token(Token = "0x20006E3")]
			internal class SplineMorphState
			{
				[Token(Token = "0x4001E1F")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public SplinePoint[] points;

				[Token(Token = "0x4001E20")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public float percent;

				[Token(Token = "0x4001E21")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public string name;

				[Token(Token = "0x600294E")]
				[Address(RVA = "0x1A0794C", Offset = "0x1A0794C", VA = "0x1A0794C")]
				public SplineMorphState()
				{
				}
			}

			[Token(Token = "0x4001AC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			private SplineComputer computer;

			[Token(Token = "0x4001AC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private SplineMorphState[] morphStates;

			[Token(Token = "0x4001AC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			internal bool initialized;

			[Token(Token = "0x60025DE")]
			[Address(RVA = "0x19FF77C", Offset = "0x19FF77C", VA = "0x19FF77C")]
			public Morph(SplineComputer input)
			{
			}

			[Token(Token = "0x60025DF")]
			[Address(RVA = "0x1A054A0", Offset = "0x1A054A0", VA = "0x1A054A0")]
			public void SetWeight(int index, float weight)
			{
			}

			[Token(Token = "0x60025E0")]
			[Address(RVA = "0x1A070DC", Offset = "0x1A070DC", VA = "0x1A070DC")]
			public void SetWeight(string name, float weight)
			{
			}

			[Token(Token = "0x60025E1")]
			[Address(RVA = "0x1A072E8", Offset = "0x1A072E8", VA = "0x1A072E8")]
			public void CaptureSnapshot(int index)
			{
			}

			[Token(Token = "0x60025E2")]
			[Address(RVA = "0x1A074F8", Offset = "0x1A074F8", VA = "0x1A074F8")]
			public void CaptureSnapshot(string name)
			{
			}

			[Token(Token = "0x60025E3")]
			[Address(RVA = "0x1A07520", Offset = "0x1A07520", VA = "0x1A07520")]
			public void Clear()
			{
			}

			[Token(Token = "0x60025E4")]
			[Address(RVA = "0x1A07578", Offset = "0x1A07578", VA = "0x1A07578")]
			public SplinePoint[] GetSnapshot(int index)
			{
				return null;
			}

			[Token(Token = "0x60025E5")]
			[Address(RVA = "0x1A075DC", Offset = "0x1A075DC", VA = "0x1A075DC")]
			public SplinePoint[] GetSnapshot(string name)
			{
				return null;
			}

			[Token(Token = "0x60025E6")]
			[Address(RVA = "0x1A05974", Offset = "0x1A05974", VA = "0x1A05974")]
			public float GetWeight(int index)
			{
				return default(float);
			}

			[Token(Token = "0x60025E7")]
			[Address(RVA = "0x1A07648", Offset = "0x1A07648", VA = "0x1A07648")]
			public float GetWeight(string name)
			{
				return default(float);
			}

			[Token(Token = "0x60025E8")]
			[Address(RVA = "0x1A076B4", Offset = "0x1A076B4", VA = "0x1A076B4")]
			public void AddChannel(string name)
			{
			}

			[Token(Token = "0x60025E9")]
			[Address(RVA = "0x1A079C4", Offset = "0x1A079C4", VA = "0x1A079C4")]
			public void RemoveChannel(string name)
			{
			}

			[Token(Token = "0x60025EA")]
			[Address(RVA = "0x1A079EC", Offset = "0x1A079EC", VA = "0x1A079EC")]
			public void RemoveChannel(int index)
			{
			}

			[Token(Token = "0x60025EB")]
			[Address(RVA = "0x1A06328", Offset = "0x1A06328", VA = "0x1A06328")]
			private void Update()
			{
			}

			[Token(Token = "0x60025EC")]
			[Address(RVA = "0x1A071C0", Offset = "0x1A071C0", VA = "0x1A071C0")]
			private int GetChannelIndex(string name)
			{
				return default(int);
			}

			[Token(Token = "0x60025ED")]
			[Address(RVA = "0x19FF828", Offset = "0x19FF828", VA = "0x19FF828")]
			public int GetChannelCount()
			{
				return default(int);
			}

			[Token(Token = "0x60025EE")]
			[Address(RVA = "0x1A056C8", Offset = "0x1A056C8", VA = "0x1A056C8")]
			public string[] GetChannelNames()
			{
				return null;
			}
		}

		[Token(Token = "0x20005FB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBA04", Offset = "0x9BBA04")]
		private sealed class <DoRebuildUpdate>d__53 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001AC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001AC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001AC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SplineComputer <>4__this;

			[Token(Token = "0x17000474")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60025F2")]
				[Address(RVA = "0x1A062B0", Offset = "0x1A062B0", VA = "0x1A062B0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000475")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60025F4")]
				[Address(RVA = "0x1A06320", Offset = "0x1A06320", VA = "0x1A06320", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60025EF")]
			[Address(RVA = "0x19FFC10", Offset = "0x19FFC10", VA = "0x19FFC10")]
			[DebuggerHidden]
			public <DoRebuildUpdate>d__53(int <>1__state)
			{
			}

			[Token(Token = "0x60025F0")]
			[Address(RVA = "0x1A06214", Offset = "0x1A06214", VA = "0x1A06214", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60025F1")]
			[Address(RVA = "0x1A06218", Offset = "0x1A06218", VA = "0x1A06218", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60025F3")]
			[Address(RVA = "0x1A062B8", Offset = "0x1A062B8", VA = "0x1A062B8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		[SerializeField]
		private Spline spline;

		[Token(Token = "0x4000D87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		[SerializeField]
		private Morph _morph;

		[Token(Token = "0x4000D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		[SerializeField]
		private Space _space;

		[Token(Token = "0x4000D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		[SerializeField]
		private SplineUser[] subscribers;

		[Token(Token = "0x4000D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		[SerializeField]
		private NodeLink[] _nodeLinks;

		[Token(Token = "0x4000D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool rebuildPending;

		[Token(Token = "0x4000D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TS_Transform tsTransform;

		[Token(Token = "0x4000D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool updateRebuild;

		[Token(Token = "0x4000D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool lateUpdateRebuild;

		[Token(Token = "0x4000D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private SplineUser.UpdateMethod method;

		[Token(Token = "0x170001F0")]
		public Space space
		{
			[Token(Token = "0x6001714")]
			[Address(RVA = "0x19FF4E8", Offset = "0x19FF4E8", VA = "0x19FF4E8")]
			get
			{
				return default(Space);
			}
			[Token(Token = "0x6001715")]
			[Address(RVA = "0x19FF4F0", Offset = "0x19FF4F0", VA = "0x19FF4F0")]
			set
			{
			}
		}

		[Token(Token = "0x170001F1")]
		public Spline.Type type
		{
			[Token(Token = "0x6001716")]
			[Address(RVA = "0x19FF518", Offset = "0x19FF518", VA = "0x19FF518")]
			get
			{
				return default(Spline.Type);
			}
			[Token(Token = "0x6001717")]
			[Address(RVA = "0x19F41F4", Offset = "0x19F41F4", VA = "0x19F41F4")]
			set
			{
			}
		}

		[Token(Token = "0x170001F2")]
		public double precision
		{
			[Token(Token = "0x6001718")]
			[Address(RVA = "0x19FF544", Offset = "0x19FF544", VA = "0x19FF544")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6001719")]
			[Address(RVA = "0x19FF570", Offset = "0x19FF570", VA = "0x19FF570")]
			set
			{
			}
		}

		[Token(Token = "0x170001F3")]
		public AnimationCurve customValueInterpolation
		{
			[Token(Token = "0x600171A")]
			[Address(RVA = "0x19FF5FC", Offset = "0x19FF5FC", VA = "0x19FF5FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600171B")]
			[Address(RVA = "0x19FF628", Offset = "0x19FF628", VA = "0x19FF628")]
			set
			{
			}
		}

		[Token(Token = "0x170001F4")]
		public AnimationCurve customNormalInterpolation
		{
			[Token(Token = "0x600171C")]
			[Address(RVA = "0x19FF66C", Offset = "0x19FF66C", VA = "0x19FF66C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600171D")]
			[Address(RVA = "0x19FF698", Offset = "0x19FF698", VA = "0x19FF698")]
			set
			{
			}
		}

		[Token(Token = "0x170001F5")]
		public int iterations
		{
			[Token(Token = "0x600171E")]
			[Address(RVA = "0x19FF6DC", Offset = "0x19FF6DC", VA = "0x19FF6DC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001F6")]
		public double moveStep
		{
			[Token(Token = "0x600171F")]
			[Address(RVA = "0x19FC1F0", Offset = "0x19FC1F0", VA = "0x19FC1F0")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170001F7")]
		public bool isClosed
		{
			[Token(Token = "0x6001720")]
			[Address(RVA = "0x19F4B78", Offset = "0x19F4B78", VA = "0x19F4B78")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001F8")]
		public int pointCount
		{
			[Token(Token = "0x6001721")]
			[Address(RVA = "0x19FC048", Offset = "0x19FC048", VA = "0x19FC048")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001F9")]
		public Morph morph
		{
			[Token(Token = "0x6001722")]
			[Address(RVA = "0x19FF708", Offset = "0x19FF708", VA = "0x19FF708")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FA")]
		public NodeLink[] nodeLinks
		{
			[Token(Token = "0x6001723")]
			[Address(RVA = "0x19FF7F8", Offset = "0x19FF7F8", VA = "0x19FF7F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FB")]
		public bool hasMorph
		{
			[Token(Token = "0x6001724")]
			[Address(RVA = "0x19FF800", Offset = "0x19FF800", VA = "0x19FF800")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001FC")]
		public Vector3 position
		{
			[Token(Token = "0x6001725")]
			[Address(RVA = "0x19FF840", Offset = "0x19FF840", VA = "0x19FF840")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170001FD")]
		public Quaternion rotation
		{
			[Token(Token = "0x6001726")]
			[Address(RVA = "0x19FF888", Offset = "0x19FF888", VA = "0x19FF888")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x170001FE")]
		public Vector3 scale
		{
			[Token(Token = "0x6001727")]
			[Address(RVA = "0x19FF8D0", Offset = "0x19FF8D0", VA = "0x19FF8D0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170001FF")]
		public int subscriberCount
		{
			[Token(Token = "0x6001728")]
			[Address(RVA = "0x19FF918", Offset = "0x19FF918", VA = "0x19FF918")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000025")]
		public event EmptySplineHandler onRebuild
		{
			[Token(Token = "0x6001729")]
			[Address(RVA = "0x19FF944", Offset = "0x19FF944", VA = "0x19FF944")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D173C", Offset = "0x9D173C")]
			add
			{
			}
			[Token(Token = "0x600172A")]
			[Address(RVA = "0x19FFA30", Offset = "0x19FFA30", VA = "0x19FFA30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D174C", Offset = "0x9D174C")]
			remove
			{
			}
		}

		[Token(Token = "0x600172B")]
		[Address(RVA = "0x19FFB1C", Offset = "0x19FFB1C", VA = "0x19FFB1C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600172C")]
		[Address(RVA = "0x19FFB9C", Offset = "0x19FFB9C", VA = "0x19FFB9C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9D175C", Offset = "0x9D175C")]
		private IEnumerator DoRebuildUpdate()
		{
			return null;
		}

		[Token(Token = "0x600172D")]
		[Address(RVA = "0x19FFC3C", Offset = "0x19FFC3C", VA = "0x19FFC3C")]
		private void disabled_LateUpdate()
		{
		}

		[Token(Token = "0x600172E")]
		[Address(RVA = "0x19FFECC", Offset = "0x19FFECC", VA = "0x19FFECC")]
		private void disabled_Update()
		{
		}

		[Token(Token = "0x600172F")]
		[Address(RVA = "0x19FFC78", Offset = "0x19FFC78", VA = "0x19FFC78")]
		private void Run()
		{
		}

		[Token(Token = "0x6001730")]
		[Address(RVA = "0x1A001C8", Offset = "0x1A001C8", VA = "0x1A001C8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001731")]
		[Address(RVA = "0x1A00198", Offset = "0x1A00198", VA = "0x1A00198")]
		public void ResampleTransform()
		{
		}

		[Token(Token = "0x6001732")]
		[Address(RVA = "0x1A00244", Offset = "0x1A00244", VA = "0x1A00244")]
		public void Subscribe(SplineUser input)
		{
		}

		[Token(Token = "0x6001733")]
		[Address(RVA = "0x1A004D0", Offset = "0x1A004D0", VA = "0x1A004D0")]
		public void Unsubscribe(SplineUser input)
		{
		}

		[Token(Token = "0x6001734")]
		[Address(RVA = "0x1A00750", Offset = "0x1A00750", VA = "0x1A00750")]
		public bool IsSubscribed(SplineUser user)
		{
			return default(bool);
		}

		[Token(Token = "0x6001735")]
		[Address(RVA = "0x1A00840", Offset = "0x1A00840", VA = "0x1A00840")]
		public SplineUser[] GetSubscribers()
		{
			return null;
		}

		[Token(Token = "0x6001736")]
		[Address(RVA = "0x1A00848", Offset = "0x1A00848", VA = "0x1A00848")]
		public void AddNodeLink(Node node, int pointIndex)
		{
		}

		[Token(Token = "0x6001737")]
		[Address(RVA = "0x1A00ECC", Offset = "0x1A00ECC", VA = "0x1A00ECC")]
		public void RemoveNodeLink(int pointIndex)
		{
		}

		[Token(Token = "0x6001738")]
		[Address(RVA = "0x1A016A0", Offset = "0x1A016A0", VA = "0x1A016A0")]
		public SplinePoint[] GetPoints(Space getSpace = Space.World)
		{
			return null;
		}

		[Token(Token = "0x6001739")]
		[Address(RVA = "0x1A01BEC", Offset = "0x1A01BEC", VA = "0x1A01BEC")]
		public SplinePoint GetPoint(int index, Space getSpace = Space.World)
		{
			return default(SplinePoint);
		}

		[Token(Token = "0x600173A")]
		[Address(RVA = "0x1A01E00", Offset = "0x1A01E00", VA = "0x1A01E00")]
		public Vector3 GetPointPosition(int index, Space getSpace = Space.World)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600173B")]
		[Address(RVA = "0x1A01EE8", Offset = "0x1A01EE8", VA = "0x1A01EE8")]
		public Vector3 GetPointNormal(int index, Space getSpace = Space.World)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600173C")]
		[Address(RVA = "0x1A01FB0", Offset = "0x1A01FB0", VA = "0x1A01FB0")]
		public Vector3 GetPointTangent(int index, Space getSpace = Space.World)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600173D")]
		[Address(RVA = "0x1A02098", Offset = "0x1A02098", VA = "0x1A02098")]
		public Vector3 GetPointTangent2(int index, Space getSpace = Space.World)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600173E")]
		[Address(RVA = "0x1A02180", Offset = "0x1A02180", VA = "0x1A02180")]
		public float GetPointSize(int index, Space getSpace = Space.World)
		{
			return default(float);
		}

		[Token(Token = "0x600173F")]
		[Address(RVA = "0x1A021E8", Offset = "0x1A021E8", VA = "0x1A021E8")]
		public Color GetPointColor(int index, Space getSpace = Space.World)
		{
			return default(Color);
		}

		[Token(Token = "0x6001740")]
		[Address(RVA = "0x19F4268", Offset = "0x19F4268", VA = "0x19F4268")]
		public void SetPoints(SplinePoint[] points, Space setSpace = Space.World)
		{
		}

		[Token(Token = "0x6001741")]
		[Address(RVA = "0x1A0282C", Offset = "0x1A0282C", VA = "0x1A0282C")]
		public void SetPointPosition(int index, Vector3 pos, Space setSpace = Space.World)
		{
		}

		[Token(Token = "0x6001742")]
		[Address(RVA = "0x1A02CA8", Offset = "0x1A02CA8", VA = "0x1A02CA8")]
		public void SetPointTangents(int index, Vector3 tan1, Vector3 tan2, Space setSpace = Space.World)
		{
		}

		[Token(Token = "0x6001743")]
		[Address(RVA = "0x1A03024", Offset = "0x1A03024", VA = "0x1A03024")]
		public void SetPointNormal(int index, Vector3 nrm, Space setSpace = Space.World)
		{
		}

		[Token(Token = "0x6001744")]
		[Address(RVA = "0x1A03240", Offset = "0x1A03240", VA = "0x1A03240")]
		public void SetPointSize(int index, float size)
		{
		}

		[Token(Token = "0x6001745")]
		[Address(RVA = "0x1A033A8", Offset = "0x1A033A8", VA = "0x1A033A8")]
		public void SetPointColor(int index, Color color)
		{
		}

		[Token(Token = "0x6001746")]
		[Address(RVA = "0x1A03540", Offset = "0x1A03540", VA = "0x1A03540")]
		public void SetPoint(int index, SplinePoint point, Space setSpace = Space.World)
		{
		}

		[Token(Token = "0x6001747")]
		[Address(RVA = "0x1A02A48", Offset = "0x1A02A48", VA = "0x1A02A48")]
		private void AppendPoints(int count)
		{
		}

		[Token(Token = "0x6001748")]
		[Address(RVA = "0x19FCD94", Offset = "0x19FCD94", VA = "0x19FCD94")]
		public Vector3 EvaluatePosition(double percent)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001749")]
		[Address(RVA = "0x19FC974", Offset = "0x19FC974", VA = "0x19FC974")]
		public SplineResult Evaluate(double percent)
		{
			return null;
		}

		[Token(Token = "0x600174A")]
		[Address(RVA = "0x1A03B3C", Offset = "0x1A03B3C", VA = "0x1A03B3C")]
		public void Evaluate(SplineResult result, double percent)
		{
		}

		[Token(Token = "0x600174B")]
		[Address(RVA = "0x1A03CAC", Offset = "0x1A03CAC", VA = "0x1A03CAC")]
		public void Evaluate(ref SplineResult[] samples, double from = 0.0, double to = 1.0)
		{
		}

		[Token(Token = "0x600174C")]
		[Address(RVA = "0x1A03D84", Offset = "0x1A03D84", VA = "0x1A03D84")]
		public void EvaluatePositions(ref Vector3[] positions, double from = 0.0, double to = 1.0)
		{
		}

		[Token(Token = "0x600174D")]
		[Address(RVA = "0x1A03EB4", Offset = "0x1A03EB4", VA = "0x1A03EB4")]
		public double Travel(double start, float distance, Spline.Direction direction)
		{
			return default(double);
		}

		[Token(Token = "0x600174E")]
		[Address(RVA = "0x1A03BB8", Offset = "0x1A03BB8", VA = "0x1A03BB8")]
		private void TransformResult(SplineResult result)
		{
		}

		[Token(Token = "0x600174F")]
		[Address(RVA = "0x19FF50C", Offset = "0x19FF50C", VA = "0x19FF50C")]
		public void Rebuild()
		{
		}

		[Token(Token = "0x6001750")]
		[Address(RVA = "0x1A04120", Offset = "0x1A04120", VA = "0x1A04120")]
		public void RebuildImmediate()
		{
		}

		[Token(Token = "0x6001751")]
		[Address(RVA = "0x1A04340", Offset = "0x1A04340", VA = "0x1A04340")]
		private void RemoveSubscriber(int index)
		{
		}

		[Token(Token = "0x6001752")]
		[Address(RVA = "0x19FFCEC", Offset = "0x19FFCEC", VA = "0x19FFCEC")]
		private void RebuildOnUpdate()
		{
		}

		[Token(Token = "0x6001753")]
		[Address(RVA = "0x1A044AC", Offset = "0x1A044AC", VA = "0x1A044AC")]
		public void RebuildConnectedUsers()
		{
		}

		[Token(Token = "0x6001754")]
		[Address(RVA = "0x1A044B0", Offset = "0x1A044B0", VA = "0x1A044B0")]
		private void RebuildUser(int index)
		{
		}

		[Token(Token = "0x6001755")]
		[Address(RVA = "0x19FD49C", Offset = "0x19FD49C", VA = "0x19FD49C")]
		public double Project(Vector3 point, int subdivide = 3, double from = 0.0, double to = 1.0)
		{
			return default(double);
		}

		[Token(Token = "0x6001756")]
		[Address(RVA = "0x19F4BCC", Offset = "0x19F4BCC", VA = "0x19F4BCC")]
		public void Break()
		{
		}

		[Token(Token = "0x6001757")]
		[Address(RVA = "0x1A046B0", Offset = "0x1A046B0", VA = "0x1A046B0")]
		public void Break(int at)
		{
		}

		[Token(Token = "0x6001758")]
		[Address(RVA = "0x19F4A20", Offset = "0x19F4A20", VA = "0x19F4A20")]
		public void Close()
		{
		}

		[Token(Token = "0x6001759")]
		[Address(RVA = "0x1A04730", Offset = "0x1A04730", VA = "0x1A04730")]
		public void ConvertToBezier()
		{
		}

		[Token(Token = "0x600175A")]
		[Address(RVA = "0x19FD924", Offset = "0x19FD924", VA = "0x19FD924")]
		public float CalculateLength(double from = 0.0, double to = 1.0, double resolution = 1.0)
		{
			return default(float);
		}

		[Token(Token = "0x600175B")]
		[Address(RVA = "0x1A0475C", Offset = "0x1A0475C", VA = "0x1A0475C")]
		public bool Raycast(out RaycastHit hit, out double hitPercent, LayerMask layerMask, double resolution = 1.0, double from = 0.0, double to = 1.0, QueryTriggerInteraction hitTriggers = QueryTriggerInteraction.UseGlobal)
		{
			return default(bool);
		}

		[Token(Token = "0x600175C")]
		[Address(RVA = "0x1A049A0", Offset = "0x1A049A0", VA = "0x1A049A0")]
		public bool RaycastAll(out RaycastHit[] hits, out double[] hitPercents, LayerMask layerMask, double resolution = 1.0, double from = 0.0, double to = 1.0, QueryTriggerInteraction hitTriggers = QueryTriggerInteraction.UseGlobal)
		{
			return default(bool);
		}

		[Token(Token = "0x600175D")]
		[Address(RVA = "0x1A04DD4", Offset = "0x1A04DD4", VA = "0x1A04DD4")]
		public int[] GetAvailableNodeLinksAtPosition(double percent, Spline.Direction direction)
		{
			return null;
		}

		[Token(Token = "0x600175E")]
		[Address(RVA = "0x1A04F44", Offset = "0x1A04F44", VA = "0x1A04F44")]
		public void GetConnectedComputers(List<SplineComputer> computers, List<int> connectionIndices, List<int> connectedIndices, double percent, Spline.Direction direction, bool includeEqual)
		{
		}

		[Token(Token = "0x600175F")]
		[Address(RVA = "0x1A053E8", Offset = "0x1A053E8", VA = "0x1A053E8")]
		public void SetMorphState(int index)
		{
		}

		[Token(Token = "0x6001760")]
		[Address(RVA = "0x1A05574", Offset = "0x1A05574", VA = "0x1A05574")]
		public void SetMorphState(string morphName)
		{
		}

		[Token(Token = "0x6001761")]
		[Address(RVA = "0x1A05804", Offset = "0x1A05804", VA = "0x1A05804")]
		public void SetMorphState(int index, float percent)
		{
		}

		[Token(Token = "0x6001762")]
		[Address(RVA = "0x1A059D8", Offset = "0x1A059D8", VA = "0x1A059D8")]
		public void SetMorphState(string morphName, float percent)
		{
		}

		[Token(Token = "0x6001763")]
		[Address(RVA = "0x1A05B44", Offset = "0x1A05B44", VA = "0x1A05B44")]
		public void SetMorphState(float percent)
		{
		}

		[Token(Token = "0x6001764")]
		[Address(RVA = "0x1A05C60", Offset = "0x1A05C60", VA = "0x1A05C60")]
		public List<SplineComputer> GetConnectedComputers()
		{
			return null;
		}

		[Token(Token = "0x6001765")]
		[Address(RVA = "0x1A05D1C", Offset = "0x1A05D1C", VA = "0x1A05D1C")]
		private void GetConnectedComputers(ref List<SplineComputer> computers)
		{
		}

		[Token(Token = "0x6001766")]
		[Address(RVA = "0x1A01118", Offset = "0x1A01118", VA = "0x1A01118")]
		private void RemoveNodeLinkAt(int index)
		{
		}

		[Token(Token = "0x6001767")]
		[Address(RVA = "0x1A02B20", Offset = "0x1A02B20", VA = "0x1A02B20")]
		private void SetNodeForPoint(int index, SplinePoint worldPoint)
		{
		}

		[Token(Token = "0x6001768")]
		[Address(RVA = "0x1A0246C", Offset = "0x1A0246C", VA = "0x1A0246C")]
		private void UpdateConnectedNodes(SplinePoint[] worldPoints)
		{
		}

		[Token(Token = "0x6001769")]
		[Address(RVA = "0x19FFF04", Offset = "0x19FFF04", VA = "0x19FFF04")]
		private void UpdateConnectedNodes()
		{
		}

		[Token(Token = "0x600176A")]
		[Address(RVA = "0x1A019D4", Offset = "0x1A019D4", VA = "0x1A019D4")]
		private Vector3 TransformPoint(Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600176B")]
		[Address(RVA = "0x1A02254", Offset = "0x1A02254", VA = "0x1A02254")]
		private Vector3 InverseTransformPoint(Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600176C")]
		[Address(RVA = "0x1A01AE0", Offset = "0x1A01AE0", VA = "0x1A01AE0")]
		private Vector3 TransformDirection(Vector3 direction)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600176D")]
		[Address(RVA = "0x1A02360", Offset = "0x1A02360", VA = "0x1A02360")]
		private Vector3 InverseTransformDirection(Vector3 direction)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600176E")]
		[Address(RVA = "0x1A06174", Offset = "0x1A06174", VA = "0x1A06174")]
		public SplineComputer()
		{
		}
	}
	[Token(Token = "0x2000348")]
	public delegate void SplineReachHandler();
	[Token(Token = "0x2000349")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9B9C88", Offset = "0x9B9C88")]
	public class SplineFollower : SplineTracer
	{
		[Token(Token = "0x20005FC")]
		public enum FollowMode
		{
			[Token(Token = "0x4001AC7")]
			Uniform,
			[Token(Token = "0x4001AC8")]
			Time
		}

		[Token(Token = "0x20005FD")]
		public enum Wrap
		{
			[Token(Token = "0x4001ACA")]
			Default,
			[Token(Token = "0x4001ACB")]
			Loop,
			[Token(Token = "0x4001ACC")]
			PingPong
		}

		[Token(Token = "0x4000D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[HideInInspector]
		public Wrap wrapMode;

		[Token(Token = "0x4000D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		[HideInInspector]
		public FollowMode followMode;

		[Token(Token = "0x4000D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[HideInInspector]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x9C58A8", Offset = "0x9C58A8")]
		public bool autoStartPosition;

		[Token(Token = "0x4000D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x111")]
		[HideInInspector]
		public bool autoFollow;

		[Token(Token = "0x4000D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		[HideInInspector]
		private float _followSpeed;

		[Token(Token = "0x4000D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		[SerializeField]
		[HideInInspector]
		private float _followDuration;

		[Token(Token = "0x4000D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private double lastClippedPercent;

		[Token(Token = "0x17000200")]
		public float followSpeed
		{
			[Token(Token = "0x6001773")]
			[Address(RVA = "0x1A07B78", Offset = "0x1A07B78", VA = "0x1A07B78")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001774")]
			[Address(RVA = "0x1A07B80", Offset = "0x1A07B80", VA = "0x1A07B80")]
			set
			{
			}
		}

		[Token(Token = "0x17000201")]
		public float followDuration
		{
			[Token(Token = "0x6001775")]
			[Address(RVA = "0x1A07B9C", Offset = "0x1A07B9C", VA = "0x1A07B9C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001776")]
			[Address(RVA = "0x1A07BA4", Offset = "0x1A07BA4", VA = "0x1A07BA4")]
			set
			{
			}
		}

		[Token(Token = "0x17000202")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9D9EFC", Offset = "0x9D9EFC")]
		public SplineResult followResult
		{
			[Token(Token = "0x6001777")]
			[Address(RVA = "0x1A07BC0", Offset = "0x1A07BC0", VA = "0x1A07BC0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000203")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9D9F34", Offset = "0x9D9F34")]
		public SplineResult offsettedFollowResult
		{
			[Token(Token = "0x6001778")]
			[Address(RVA = "0x1A07BC8", Offset = "0x1A07BC8", VA = "0x1A07BC8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000026")]
		public event SplineReachHandler onEndReached
		{
			[Token(Token = "0x6001779")]
			[Address(RVA = "0x1A08014", Offset = "0x1A08014", VA = "0x1A08014")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D17C0", Offset = "0x9D17C0")]
			add
			{
			}
			[Token(Token = "0x600177A")]
			[Address(RVA = "0x1A08104", Offset = "0x1A08104", VA = "0x1A08104")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D17D0", Offset = "0x9D17D0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000027")]
		public event SplineReachHandler onBeginningReached
		{
			[Token(Token = "0x600177B")]
			[Address(RVA = "0x1A081F4", Offset = "0x1A081F4", VA = "0x1A081F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D17E0", Offset = "0x9D17E0")]
			add
			{
			}
			[Token(Token = "0x600177C")]
			[Address(RVA = "0x1A082E4", Offset = "0x1A082E4", VA = "0x1A082E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D17F0", Offset = "0x9D17F0")]
			remove
			{
			}
		}

		[Token(Token = "0x600177D")]
		[Address(RVA = "0x1A083D4", Offset = "0x1A083D4", VA = "0x1A083D4", Slot = "29")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600177E")]
		[Address(RVA = "0x1A08478", Offset = "0x1A08478", VA = "0x1A08478", Slot = "19")]
		protected override void LateRun()
		{
		}

		[Token(Token = "0x600177F")]
		[Address(RVA = "0x1A0850C", Offset = "0x1A0850C", VA = "0x1A0850C", Slot = "21")]
		protected override void PostBuild()
		{
		}

		[Token(Token = "0x6001780")]
		[Address(RVA = "0x1A0848C", Offset = "0x1A0848C", VA = "0x1A0848C")]
		private void AutoFollow()
		{
		}

		[Token(Token = "0x6001781")]
		[Address(RVA = "0x1A09C24", Offset = "0x1A09C24", VA = "0x1A09C24")]
		public void Restart(double startPosition = 0.0)
		{
		}

		[Token(Token = "0x6001782")]
		[Address(RVA = "0x1A09D04", Offset = "0x1A09D04", VA = "0x1A09D04", Slot = "30")]
		public override void SetPercent(double percent, bool checkTriggers = false)
		{
		}

		[Token(Token = "0x6001783")]
		[Address(RVA = "0x1A09E1C", Offset = "0x1A09E1C", VA = "0x1A09E1C", Slot = "31")]
		public override void SetDistance(float distance, bool checkTriggers = false)
		{
		}

		[Token(Token = "0x6001784")]
		[Address(RVA = "0x1A09840", Offset = "0x1A09840", VA = "0x1A09840")]
		public void Move(double percent)
		{
		}

		[Token(Token = "0x6001785")]
		[Address(RVA = "0x1A08A98", Offset = "0x1A08A98", VA = "0x1A08A98")]
		public void Move(float distance)
		{
		}

		[Token(Token = "0x6001786")]
		[Address(RVA = "0x1A0AA58", Offset = "0x1A0AA58", VA = "0x1A0AA58")]
		public SplineFollower()
		{
		}
	}
	[Token(Token = "0x200034A")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9B9CC0", Offset = "0x9B9CC0")]
	public class SplinePositioner : SplineTracer
	{
		[Token(Token = "0x20005FE")]
		public enum Mode
		{
			[Token(Token = "0x4001ACE")]
			Percent,
			[Token(Token = "0x4001ACF")]
			Distance
		}

		[Token(Token = "0x4000D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		[HideInInspector]
		private Transform _applyTransform;

		[Token(Token = "0x4000D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		[HideInInspector]
		private GameObject _targetObject;

		[Token(Token = "0x4000D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		[HideInInspector]
		private double _position;

		[Token(Token = "0x4000D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		[HideInInspector]
		private float animPosition;

		[Token(Token = "0x4000D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		[SerializeField]
		[HideInInspector]
		private Mode _mode;

		[Token(Token = "0x17000204")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9D9F6C", Offset = "0x9D9F6C")]
		public Transform applyTransform
		{
			[Token(Token = "0x6001787")]
			[Address(RVA = "0x1A0B5A8", Offset = "0x1A0B5A8", VA = "0x1A0B5A8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001788")]
			[Address(RVA = "0x1A0B6C8", Offset = "0x1A0B6C8", VA = "0x1A0B6C8")]
			set
			{
			}
		}

		[Token(Token = "0x17000205")]
		public GameObject targetObject
		{
			[Token(Token = "0x6001789")]
			[Address(RVA = "0x1A0B5D8", Offset = "0x1A0B5D8", VA = "0x1A0B5D8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600178A")]
			[Address(RVA = "0x1A0B774", Offset = "0x1A0B774", VA = "0x1A0B774")]
			set
			{
			}
		}

		[Token(Token = "0x17000206")]
		public double position
		{
			[Token(Token = "0x600178B")]
			[Address(RVA = "0x1A0B8A8", Offset = "0x1A0B8A8", VA = "0x1A0B8A8")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x600178C")]
			[Address(RVA = "0x1A0B8B0", Offset = "0x1A0B8B0", VA = "0x1A0B8B0")]
			set
			{
			}
		}

		[Token(Token = "0x17000207")]
		public Mode mode
		{
			[Token(Token = "0x600178D")]
			[Address(RVA = "0x1A0B900", Offset = "0x1A0B900", VA = "0x1A0B900")]
			get
			{
				return default(Mode);
			}
			[Token(Token = "0x600178E")]
			[Address(RVA = "0x1A0B908", Offset = "0x1A0B908", VA = "0x1A0B908")]
			set
			{
			}
		}

		[Token(Token = "0x17000208")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9D9FA4", Offset = "0x9D9FA4")]
		public SplineResult positionResult
		{
			[Token(Token = "0x600178F")]
			[Address(RVA = "0x1A0B92C", Offset = "0x1A0B92C", VA = "0x1A0B92C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000209")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9D9FDC", Offset = "0x9D9FDC")]
		public SplineResult offsettedPositionResult
		{
			[Token(Token = "0x6001790")]
			[Address(RVA = "0x1A0B934", Offset = "0x1A0B934", VA = "0x1A0B934")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001791")]
		[Address(RVA = "0x1A0B938", Offset = "0x1A0B938", VA = "0x1A0B938", Slot = "10")]
		protected override void OnDidApplyAnimationProperties()
		{
		}

		[Token(Token = "0x6001792")]
		[Address(RVA = "0x1A0BA28", Offset = "0x1A0BA28", VA = "0x1A0BA28", Slot = "34")]
		protected override Transform GetTransform()
		{
			return null;
		}

		[Token(Token = "0x6001793")]
		[Address(RVA = "0x1A0BA58", Offset = "0x1A0BA58", VA = "0x1A0BA58", Slot = "32")]
		protected override Rigidbody GetRigidbody()
		{
			return null;
		}

		[Token(Token = "0x6001794")]
		[Address(RVA = "0x1A0BABC", Offset = "0x1A0BABC", VA = "0x1A0BABC", Slot = "33")]
		protected override Rigidbody2D GetRigidbody2D()
		{
			return null;
		}

		[Token(Token = "0x6001795")]
		[Address(RVA = "0x1A0BB20", Offset = "0x1A0BB20", VA = "0x1A0BB20", Slot = "21")]
		protected override void PostBuild()
		{
		}

		[Token(Token = "0x6001796")]
		[Address(RVA = "0x1A0BBAC", Offset = "0x1A0BBAC", VA = "0x1A0BBAC", Slot = "30")]
		public override void SetPercent(double percent, bool checkTriggers = false)
		{
		}

		[Token(Token = "0x6001797")]
		[Address(RVA = "0x1A0BBE0", Offset = "0x1A0BBE0", VA = "0x1A0BBE0", Slot = "31")]
		public override void SetDistance(float distance, bool checkTriggers = false)
		{
		}

		[Token(Token = "0x6001798")]
		[Address(RVA = "0x1A0BC18", Offset = "0x1A0BC18", VA = "0x1A0BC18")]
		public SplinePositioner()
		{
		}
	}
	[Token(Token = "0x200034B")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9B9CF8", Offset = "0x9B9CF8")]
	public class SplineProjector : SplineTracer
	{
		[Token(Token = "0x20005FF")]
		public enum Mode
		{
			[Token(Token = "0x4001AD1")]
			Accurate,
			[Token(Token = "0x4001AD2")]
			Cached
		}

		[Token(Token = "0x4000D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		[HideInInspector]
		private Mode _mode;

		[Token(Token = "0x4000DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		[SerializeField]
		[HideInInspector]
		private bool _autoProject;

		[Token(Token = "0x4000DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		[HideInInspector]
		private int _subdivide;

		[Token(Token = "0x4000DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		[HideInInspector]
		private Transform _projectTarget;

		[Token(Token = "0x4000DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		[HideInInspector]
		private Transform applyTarget;

		[Token(Token = "0x4000DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		[HideInInspector]
		private GameObject _targetObject;

		[Token(Token = "0x4000DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		[HideInInspector]
		private TS_Transform finalTarget;

		[Token(Token = "0x4000DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private double traceFromA;

		[Token(Token = "0x4000DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private double traceToA;

		[Token(Token = "0x4000DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private double traceFromB;

		[Token(Token = "0x4000DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		[HideInInspector]
		public Vector2 _offset;

		[Token(Token = "0x4000DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		[HideInInspector]
		public Vector3 _rotationOffset;

		[Token(Token = "0x1700020A")]
		public Mode mode
		{
			[Token(Token = "0x6001799")]
			[Address(RVA = "0x1A0BC1C", Offset = "0x1A0BC1C", VA = "0x1A0BC1C")]
			get
			{
				return default(Mode);
			}
			[Token(Token = "0x600179A")]
			[Address(RVA = "0x1A0BC24", Offset = "0x1A0BC24", VA = "0x1A0BC24")]
			set
			{
			}
		}

		[Token(Token = "0x1700020B")]
		public bool autoProject
		{
			[Token(Token = "0x600179B")]
			[Address(RVA = "0x1A0BC48", Offset = "0x1A0BC48", VA = "0x1A0BC48")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600179C")]
			[Address(RVA = "0x1A0BC50", Offset = "0x1A0BC50", VA = "0x1A0BC50")]
			set
			{
			}
		}

		[Token(Token = "0x1700020C")]
		public int subdivide
		{
			[Token(Token = "0x600179D")]
			[Address(RVA = "0x1A0BC84", Offset = "0x1A0BC84", VA = "0x1A0BC84")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600179E")]
			[Address(RVA = "0x1A0BC8C", Offset = "0x1A0BC8C", VA = "0x1A0BC8C")]
			set
			{
			}
		}

		[Token(Token = "0x1700020D")]
		public Transform projectTarget
		{
			[Token(Token = "0x600179F")]
			[Address(RVA = "0x1A0BCB8", Offset = "0x1A0BCB8", VA = "0x1A0BCB8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60017A0")]
			[Address(RVA = "0x1A0BD48", Offset = "0x1A0BD48", VA = "0x1A0BD48")]
			set
			{
			}
		}

		[Token(Token = "0x1700020E")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9DA014", Offset = "0x9DA014")]
		public Transform target
		{
			[Token(Token = "0x60017A1")]
			[Address(RVA = "0x1A0BE14", Offset = "0x1A0BE14", VA = "0x1A0BE14")]
			get
			{
				return null;
			}
			[Token(Token = "0x60017A2")]
			[Address(RVA = "0x1A0BF18", Offset = "0x1A0BF18", VA = "0x1A0BF18")]
			set
			{
			}
		}

		[Token(Token = "0x1700020F")]
		public GameObject targetObject
		{
			[Token(Token = "0x60017A3")]
			[Address(RVA = "0x1A0BE44", Offset = "0x1A0BE44", VA = "0x1A0BE44")]
			get
			{
				return null;
			}
			[Token(Token = "0x60017A4")]
			[Address(RVA = "0x1A0BFC0", Offset = "0x1A0BFC0", VA = "0x1A0BFC0")]
			set
			{
			}
		}

		[Token(Token = "0x17000210")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9DA04C", Offset = "0x9DA04C")]
		public SplineResult projectResult
		{
			[Token(Token = "0x60017A5")]
			[Address(RVA = "0x1A0C070", Offset = "0x1A0C070", VA = "0x1A0C070")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000028")]
		public event SplineReachHandler onEndReached
		{
			[Token(Token = "0x60017A6")]
			[Address(RVA = "0x1A0C080", Offset = "0x1A0C080", VA = "0x1A0C080")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D1800", Offset = "0x9D1800")]
			add
			{
			}
			[Token(Token = "0x60017A7")]
			[Address(RVA = "0x1A0C170", Offset = "0x1A0C170", VA = "0x1A0C170")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D1810", Offset = "0x9D1810")]
			remove
			{
			}
		}

		[Token(Token = "0x14000029")]
		public event SplineReachHandler onBeginningReached
		{
			[Token(Token = "0x60017A8")]
			[Address(RVA = "0x1A0C260", Offset = "0x1A0C260", VA = "0x1A0C260")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D1820", Offset = "0x9D1820")]
			add
			{
			}
			[Token(Token = "0x60017A9")]
			[Address(RVA = "0x1A0C350", Offset = "0x1A0C350", VA = "0x1A0C350")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D1830", Offset = "0x9D1830")]
			remove
			{
			}
		}

		[Token(Token = "0x60017AA")]
		[Address(RVA = "0x1A0C440", Offset = "0x1A0C440", VA = "0x1A0C440", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60017AB")]
		[Address(RVA = "0x1A0C688", Offset = "0x1A0C688", VA = "0x1A0C688", Slot = "34")]
		protected override Transform GetTransform()
		{
			return null;
		}

		[Token(Token = "0x60017AC")]
		[Address(RVA = "0x1A0C738", Offset = "0x1A0C738", VA = "0x1A0C738", Slot = "32")]
		protected override Rigidbody GetRigidbody()
		{
			return null;
		}

		[Token(Token = "0x60017AD")]
		[Address(RVA = "0x1A0C7EC", Offset = "0x1A0C7EC", VA = "0x1A0C7EC", Slot = "33")]
		protected override Rigidbody2D GetRigidbody2D()
		{
			return null;
		}

		[Token(Token = "0x60017AE")]
		[Address(RVA = "0x1A0C5BC", Offset = "0x1A0C5BC", VA = "0x1A0C5BC")]
		private void GetProjectTarget()
		{
		}

		[Token(Token = "0x60017AF")]
		[Address(RVA = "0x1A0C8A0", Offset = "0x1A0C8A0", VA = "0x1A0C8A0", Slot = "19")]
		protected override void LateRun()
		{
		}

		[Token(Token = "0x60017B0")]
		[Address(RVA = "0x1A0C994", Offset = "0x1A0C994", VA = "0x1A0C994", Slot = "21")]
		protected override void PostBuild()
		{
		}

		[Token(Token = "0x60017B1")]
		[Address(RVA = "0x1A0CD7C", Offset = "0x1A0CD7C", VA = "0x1A0CD7C")]
		private void CheckTriggers()
		{
		}

		[Token(Token = "0x60017B2")]
		[Address(RVA = "0x1A0D010", Offset = "0x1A0D010", VA = "0x1A0D010")]
		public void CalculateProjection()
		{
		}

		[Token(Token = "0x60017B3")]
		[Address(RVA = "0x1A0CA5C", Offset = "0x1A0CA5C", VA = "0x1A0CA5C")]
		private void InternalCalculateProjection()
		{
		}

		[Token(Token = "0x60017B4")]
		[Address(RVA = "0x1A0D058", Offset = "0x1A0D058", VA = "0x1A0D058")]
		public SplineProjector()
		{
		}
	}
	[Token(Token = "0x200034C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9B9D30", Offset = "0x9B9D30")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9B9D30", Offset = "0x9B9D30")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9B9D30", Offset = "0x9B9D30")]
	[ExecuteInEditMode]
	public class SplineRenderer : MeshGenerator
	{
		[Token(Token = "0x4000DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[HideInInspector]
		public bool autoOrient;

		[Token(Token = "0x4000DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		[HideInInspector]
		public int updateFrameInterval;

		[Token(Token = "0x4000DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private int currentFrame;

		[Token(Token = "0x4000DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		[SerializeField]
		[HideInInspector]
		private int _slices;

		[Token(Token = "0x4000DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		[HideInInspector]
		private Vector3 vertexDirection;

		[Token(Token = "0x4000DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private bool orthographic;

		[Token(Token = "0x4000DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13D")]
		private bool init;

		[Token(Token = "0x17000211")]
		public int slices
		{
			[Token(Token = "0x60017B5")]
			[Address(RVA = "0x1A0D144", Offset = "0x1A0D144", VA = "0x1A0D144")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60017B6")]
			[Address(RVA = "0x1A0D14C", Offset = "0x1A0D14C", VA = "0x1A0D14C")]
			set
			{
			}
		}

		[Token(Token = "0x60017B7")]
		[Address(RVA = "0x1A0D178", Offset = "0x1A0D178", VA = "0x1A0D178", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60017B8")]
		[Address(RVA = "0x1A0D1E8", Offset = "0x1A0D1E8", VA = "0x1A0D1E8")]
		private void Start()
		{
		}

		[Token(Token = "0x60017B9")]
		[Address(RVA = "0x1A0D294", Offset = "0x1A0D294", VA = "0x1A0D294", Slot = "19")]
		protected override void LateRun()
		{
		}

		[Token(Token = "0x60017BA")]
		[Address(RVA = "0x1A0D2B8", Offset = "0x1A0D2B8", VA = "0x1A0D2B8", Slot = "29")]
		protected override void BuildMesh()
		{
		}

		[Token(Token = "0x60017BB")]
		[Address(RVA = "0x1A0DF3C", Offset = "0x1A0DF3C", VA = "0x1A0DF3C")]
		public void RenderWithCamera(Camera cam)
		{
		}

		[Token(Token = "0x60017BC")]
		[Address(RVA = "0x1A0E12C", Offset = "0x1A0E12C", VA = "0x1A0E12C")]
		private void OnWillRenderObject()
		{
		}

		[Token(Token = "0x60017BD")]
		[Address(RVA = "0x1A0D390", Offset = "0x1A0D390", VA = "0x1A0D390")]
		public void GenerateVertices(Vector3 vertexDirection, bool orthoGraphic)
		{
		}

		[Token(Token = "0x60017BE")]
		[Address(RVA = "0x1A0E1AC", Offset = "0x1A0E1AC", VA = "0x1A0E1AC")]
		public SplineRenderer()
		{
		}
	}
	[Token(Token = "0x200034D")]
	public class SplineTracer : SplineUser
	{
		[Token(Token = "0x2000600")]
		public enum PhysicsMode
		{
			[Token(Token = "0x4001AD4")]
			Transform,
			[Token(Token = "0x4001AD5")]
			Rigidbody,
			[Token(Token = "0x4001AD6")]
			Rigidbody2D
		}

		[Token(Token = "0x4000DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Trigger[] triggerInvokeQueue;

		[Token(Token = "0x4000DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private int addTriggerIndex;

		[Token(Token = "0x4000DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[HideInInspector]
		public bool applyDirectionRotation;

		[Token(Token = "0x4000DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		[HideInInspector]
		protected Spline.Direction _direction;

		[Token(Token = "0x4000DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[SerializeField]
		[HideInInspector]
		protected PhysicsMode _physicsMode;

		[Token(Token = "0x4000DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		[HideInInspector]
		protected TransformModule _motion;

		[Token(Token = "0x4000DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[HideInInspector]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x9C5E0C", Offset = "0x9C5E0C")]
		protected SplineTrigger[] triggers_old;

		[Token(Token = "0x4000DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[HideInInspector]
		public Trigger[] triggers;

		[Token(Token = "0x4000DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		[HideInInspector]
		protected CustomRotationModule _customRotations;

		[Token(Token = "0x4000DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		[HideInInspector]
		protected CustomOffsetModule _customOffsets;

		[Token(Token = "0x4000DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		[HideInInspector]
		protected Rigidbody targetRigidbody;

		[Token(Token = "0x4000DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		[HideInInspector]
		protected Rigidbody2D targetRigidbody2D;

		[Token(Token = "0x4000DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		[HideInInspector]
		protected Transform targetTransform;

		[Token(Token = "0x4000DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		[HideInInspector]
		protected SplineResult _result;

		[Token(Token = "0x4000DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private bool setPercentOnRebuild;

		[Token(Token = "0x4000DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private double targetPercentOnRebuild;

		[Token(Token = "0x17000212")]
		public PhysicsMode physicsMode
		{
			[Token(Token = "0x60017BF")]
			[Address(RVA = "0x1A0E9FC", Offset = "0x1A0E9FC", VA = "0x1A0E9FC")]
			get
			{
				return default(PhysicsMode);
			}
			[Token(Token = "0x60017C0")]
			[Address(RVA = "0x1A0EA04", Offset = "0x1A0EA04", VA = "0x1A0EA04")]
			set
			{
			}
		}

		[Token(Token = "0x17000213")]
		public TransformModule motion
		{
			[Token(Token = "0x60017C1")]
			[Address(RVA = "0x1A0EA0C", Offset = "0x1A0EA0C", VA = "0x1A0EA0C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000214")]
		public CustomRotationModule customRotations
		{
			[Token(Token = "0x60017C2")]
			[Address(RVA = "0x1A0EA78", Offset = "0x1A0EA78", VA = "0x1A0EA78")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000215")]
		public CustomOffsetModule customOffsets
		{
			[Token(Token = "0x60017C3")]
			[Address(RVA = "0x1A0EAE4", Offset = "0x1A0EAE4", VA = "0x1A0EAE4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000216")]
		public SplineResult result
		{
			[Token(Token = "0x60017C4")]
			[Address(RVA = "0x1A0C078", Offset = "0x1A0C078", VA = "0x1A0C078")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000217")]
		public SplineResult offsettedResult
		{
			[Token(Token = "0x60017C5")]
			[Address(RVA = "0x1A07BCC", Offset = "0x1A07BCC", VA = "0x1A07BCC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000218")]
		public Spline.Direction direction
		{
			[Token(Token = "0x60017C6")]
			[Address(RVA = "0x1A0EB50", Offset = "0x1A0EB50", VA = "0x1A0EB50")]
			get
			{
				return default(Spline.Direction);
			}
			[Token(Token = "0x60017C7")]
			[Address(RVA = "0x1A0EB58", Offset = "0x1A0EB58", VA = "0x1A0EB58")]
			set
			{
			}
		}

		[Token(Token = "0x17000219")]
		public double clampedPercent
		{
			[Token(Token = "0x60017C8")]
			[Address(RVA = "0x1A0EB70", Offset = "0x1A0EB70", VA = "0x1A0EB70")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x1700021A")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9DA084", Offset = "0x9DA084")]
		public bool applyPosition
		{
			[Token(Token = "0x60017C9")]
			[Address(RVA = "0x1A0EBBC", Offset = "0x1A0EBBC", VA = "0x1A0EBBC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60017CA")]
			[Address(RVA = "0x1A0EBEC", Offset = "0x1A0EBEC", VA = "0x1A0EBEC")]
			set
			{
			}
		}

		[Token(Token = "0x1700021B")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9DA0BC", Offset = "0x9DA0BC")]
		public bool applyRotation
		{
			[Token(Token = "0x60017CB")]
			[Address(RVA = "0x1A0EC24", Offset = "0x1A0EC24", VA = "0x1A0EC24")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60017CC")]
			[Address(RVA = "0x1A0EC54", Offset = "0x1A0EC54", VA = "0x1A0EC54")]
			set
			{
			}
		}

		[Token(Token = "0x1700021C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9DA0F4", Offset = "0x9DA0F4")]
		public bool applyScale
		{
			[Token(Token = "0x60017CD")]
			[Address(RVA = "0x1A0EC8C", Offset = "0x1A0EC8C", VA = "0x1A0EC8C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60017CE")]
			[Address(RVA = "0x1A0ECBC", Offset = "0x1A0ECBC", VA = "0x1A0ECBC")]
			set
			{
			}
		}

		[Token(Token = "0x1700021D")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9DA12C", Offset = "0x9DA12C")]
		public Vector2 offset
		{
			[Token(Token = "0x60017CF")]
			[Address(RVA = "0x1A0ECF4", Offset = "0x1A0ECF4", VA = "0x1A0ECF4")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x60017D0")]
			[Address(RVA = "0x1A0ED24", Offset = "0x1A0ED24", VA = "0x1A0ED24")]
			set
			{
			}
		}

		[Token(Token = "0x1700021E")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9DA164", Offset = "0x9DA164")]
		public Vector3 rotationOffset
		{
			[Token(Token = "0x60017D1")]
			[Address(RVA = "0x1A0ED6C", Offset = "0x1A0ED6C", VA = "0x1A0ED6C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60017D2")]
			[Address(RVA = "0x1A0ED9C", Offset = "0x1A0ED9C", VA = "0x1A0ED9C")]
			set
			{
			}
		}

		[Token(Token = "0x60017D3")]
		[Address(RVA = "0x1A08474", Offset = "0x1A08474", VA = "0x1A08474", Slot = "29")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x60017D4")]
		[Address(RVA = "0x1A0EDF4", Offset = "0x1A0EDF4", VA = "0x1A0EDF4")]
		public Node GetNextNode()
		{
			return null;
		}

		[Token(Token = "0x60017D5")]
		[Address(RVA = "0x1A0F1D8", Offset = "0x1A0F1D8", VA = "0x1A0F1D8")]
		public void GetCurrentComputer(out SplineComputer comp, out double percent, out Spline.Direction dir)
		{
		}

		[Token(Token = "0x60017D6")]
		[Address(RVA = "0x1A09C68", Offset = "0x1A09C68", VA = "0x1A09C68")]
		public void ResetTriggers()
		{
		}

		[Token(Token = "0x60017D7")]
		[Address(RVA = "0x1A09D38", Offset = "0x1A09D38", VA = "0x1A09D38", Slot = "30")]
		public virtual void SetPercent(double percent, bool checkTriggers = false)
		{
		}

		[Token(Token = "0x60017D8")]
		[Address(RVA = "0x1A09EAC", Offset = "0x1A09EAC", VA = "0x1A09EAC", Slot = "31")]
		public virtual void SetDistance(float distance, bool checkTriggers = false)
		{
		}

		[Token(Token = "0x60017D9")]
		[Address(RVA = "0x1A08614", Offset = "0x1A08614", VA = "0x1A08614", Slot = "21")]
		protected override void PostBuild()
		{
		}

		[Token(Token = "0x60017DA")]
		[Address(RVA = "0x1A0F750", Offset = "0x1A0F750", VA = "0x1A0F750", Slot = "13")]
		public override void EnterAddress(Node node, int pointIndex, Spline.Direction direction = Spline.Direction.Forward)
		{
		}

		[Token(Token = "0x60017DB")]
		[Address(RVA = "0x1A0F918", Offset = "0x1A0F918", VA = "0x1A0F918", Slot = "14")]
		public override void AddComputer(SplineComputer computer, int connectionIndex, int connectedIndex, Spline.Direction direction = Spline.Direction.Forward)
		{
		}

		[Token(Token = "0x60017DC")]
		[Address(RVA = "0x1A0FAFC", Offset = "0x1A0FAFC", VA = "0x1A0FAFC", Slot = "17")]
		public override void ExitAddress(int depth)
		{
		}

		[Token(Token = "0x60017DD")]
		[Address(RVA = "0x1A0FC8C", Offset = "0x1A0FC8C", VA = "0x1A0FC8C", Slot = "32")]
		protected virtual Rigidbody GetRigidbody()
		{
			return null;
		}

		[Token(Token = "0x60017DE")]
		[Address(RVA = "0x1A0FCDC", Offset = "0x1A0FCDC", VA = "0x1A0FCDC", Slot = "33")]
		protected virtual Rigidbody2D GetRigidbody2D()
		{
			return null;
		}

		[Token(Token = "0x60017DF")]
		[Address(RVA = "0x1A0FD2C", Offset = "0x1A0FD2C", VA = "0x1A0FD2C", Slot = "34")]
		protected virtual Transform GetTransform()
		{
			return null;
		}

		[Token(Token = "0x60017E0")]
		[Address(RVA = "0x1A08708", Offset = "0x1A08708", VA = "0x1A08708")]
		protected void ApplyMotion()
		{
		}

		[Token(Token = "0x60017E1")]
		[Address(RVA = "0x1A0CEE4", Offset = "0x1A0CEE4", VA = "0x1A0CEE4")]
		protected void CheckTriggers(double from, double to)
		{
		}

		[Token(Token = "0x60017E2")]
		[Address(RVA = "0x1A0A1E0", Offset = "0x1A0A1E0", VA = "0x1A0A1E0")]
		protected void CheckTriggersClipped(double from, double to)
		{
		}

		[Token(Token = "0x60017E3")]
		[Address(RVA = "0x1A0A650", Offset = "0x1A0A650", VA = "0x1A0A650")]
		protected void InvokeTriggers()
		{
		}

		[Token(Token = "0x60017E4")]
		[Address(RVA = "0x1A0FE78", Offset = "0x1A0FE78", VA = "0x1A0FE78")]
		private bool MigrateTriggers()
		{
			return default(bool);
		}

		[Token(Token = "0x60017E5")]
		[Address(RVA = "0x1A0B824", Offset = "0x1A0B824", VA = "0x1A0B824")]
		protected void RefreshTargets()
		{
		}

		[Token(Token = "0x60017E6")]
		[Address(RVA = "0x1A0FD34", Offset = "0x1A0FD34", VA = "0x1A0FD34")]
		private void AddTriggerToQueue(Trigger trigger)
		{
		}

		[Token(Token = "0x60017E7")]
		[Address(RVA = "0x1A10320", Offset = "0x1A10320", VA = "0x1A10320")]
		private void AddTrigger(Trigger trigger)
		{
		}

		[Token(Token = "0x60017E8")]
		[Address(RVA = "0x1A10430", Offset = "0x1A10430", VA = "0x1A10430")]
		public void AddTrigger(Trigger.Type t, UnityAction call, double position = 0.0, Trigger.Type type = Trigger.Type.Double)
		{
		}

		[Token(Token = "0x60017E9")]
		[Address(RVA = "0x1A10514", Offset = "0x1A10514", VA = "0x1A10514")]
		public void AddTrigger(Trigger.Type t, UnityAction<int> call, int value, double position = 0.0, Trigger.Type type = Trigger.Type.Double)
		{
		}

		[Token(Token = "0x60017EA")]
		[Address(RVA = "0x1A10604", Offset = "0x1A10604", VA = "0x1A10604")]
		public void AddTrigger(Trigger.Type t, UnityAction<float> call, float value, double position = 0.0, Trigger.Type type = Trigger.Type.Double)
		{
		}

		[Token(Token = "0x60017EB")]
		[Address(RVA = "0x1A106F4", Offset = "0x1A106F4", VA = "0x1A106F4")]
		public void AddTrigger(Trigger.Type t, UnityAction<double> call, double value, double position = 0.0, Trigger.Type type = Trigger.Type.Double)
		{
		}

		[Token(Token = "0x60017EC")]
		[Address(RVA = "0x1A107E4", Offset = "0x1A107E4", VA = "0x1A107E4")]
		public void AddTrigger(Trigger.Type t, UnityAction<string> call, string value, double position = 0.0, Trigger.Type type = Trigger.Type.Double)
		{
		}

		[Token(Token = "0x60017ED")]
		[Address(RVA = "0x1A108D4", Offset = "0x1A108D4", VA = "0x1A108D4")]
		public void AddTrigger(Trigger.Type t, UnityAction<bool> call, bool value, double position = 0.0, Trigger.Type type = Trigger.Type.Double)
		{
		}

		[Token(Token = "0x60017EE")]
		[Address(RVA = "0x1A109C4", Offset = "0x1A109C4", VA = "0x1A109C4")]
		public void AddTrigger(Trigger.Type t, UnityAction<GameObject> call, GameObject value, double position = 0.0, Trigger.Type type = Trigger.Type.Double)
		{
		}

		[Token(Token = "0x60017EF")]
		[Address(RVA = "0x1A10AB4", Offset = "0x1A10AB4", VA = "0x1A10AB4")]
		public void AddTrigger(Trigger.Type t, UnityAction<Transform> call, Transform value, double position = 0.0, Trigger.Type type = Trigger.Type.Double)
		{
		}

		[Token(Token = "0x60017F0")]
		[Address(RVA = "0x1A086BC", Offset = "0x1A086BC", VA = "0x1A086BC")]
		public void EvaluateClipped(SplineResult result, double clippedPercent)
		{
		}

		[Token(Token = "0x60017F1")]
		[Address(RVA = "0x1A10BA4", Offset = "0x1A10BA4", VA = "0x1A10BA4")]
		public Vector3 EvaluatePositionClipped(double clippedPercent)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60017F2")]
		[Address(RVA = "0x1A0F3EC", Offset = "0x1A0F3EC", VA = "0x1A0F3EC")]
		public double TravelClipped(double start, float distance, Spline.Direction direction)
		{
			return default(double);
		}

		[Token(Token = "0x60017F3")]
		[Address(RVA = "0x1A10BE0", Offset = "0x1A10BE0", VA = "0x1A10BE0")]
		public SplineResult ProjectClipped(Vector3 point)
		{
			return null;
		}

		[Token(Token = "0x60017F4")]
		[Address(RVA = "0x1A0AA70", Offset = "0x1A0AA70", VA = "0x1A0AA70")]
		public SplineTracer()
		{
		}
	}
	[Token(Token = "0x200034E")]
	public class SplineUser : MonoBehaviour
	{
		[Token(Token = "0x2000601")]
		public enum UpdateMethod
		{
			[Token(Token = "0x4001AD8")]
			Update,
			[Token(Token = "0x4001AD9")]
			FixedUpdate,
			[Token(Token = "0x4001ADA")]
			LateUpdate
		}

		[Token(Token = "0x2000602")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBA14", Offset = "0x9BBA14")]
		private sealed class <UpdateSubscribersRoutine>d__76 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001ADB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001ADC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001ADD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SplineUser <>4__this;

			[Token(Token = "0x17000476")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60025F8")]
				[Address(RVA = "0xFBE174", Offset = "0xFBE174", VA = "0xFBE174", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000477")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60025FA")]
				[Address(RVA = "0xFBE1E4", Offset = "0xFBE1E4", VA = "0xFBE1E4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60025F5")]
			[Address(RVA = "0xFBE0DC", Offset = "0xFBE0DC", VA = "0xFBE0DC")]
			[DebuggerHidden]
			public <UpdateSubscribersRoutine>d__76(int <>1__state)
			{
			}

			[Token(Token = "0x60025F6")]
			[Address(RVA = "0xFBE108", Offset = "0xFBE108", VA = "0xFBE108", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60025F7")]
			[Address(RVA = "0xFBE10C", Offset = "0xFBE10C", VA = "0xFBE10C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60025F9")]
			[Address(RVA = "0xFBE17C", Offset = "0xFBE17C", VA = "0xFBE17C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public SplineAddress _address;

		[Token(Token = "0x4000DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[HideInInspector]
		private SplineUser[] subscribers;

		[Token(Token = "0x4000DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public UpdateMethod updateMethod;

		[Token(Token = "0x4000DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		[SerializeField]
		private SplineUser _user;

		[Token(Token = "0x4000DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[HideInInspector]
		private double _resolution;

		[Token(Token = "0x4000DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[HideInInspector]
		private double _clipTo;

		[Token(Token = "0x4000DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[HideInInspector]
		private double _clipFrom;

		[Token(Token = "0x4000DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[HideInInspector]
		private bool _autoUpdate;

		[Token(Token = "0x4000DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		[SerializeField]
		[HideInInspector]
		private bool _averageResultVectors;

		[Token(Token = "0x4000DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		[SerializeField]
		[HideInInspector]
		private bool _uniformSample;

		[Token(Token = "0x4000DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[HideInInspector]
		private SplineResult[] _samples;

		[Token(Token = "0x4000DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[HideInInspector]
		private SplineResult[] _clippedSamples;

		[Token(Token = "0x4000DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		[HideInInspector]
		private float animClipFrom;

		[Token(Token = "0x4000DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		[HideInInspector]
		private float animClipTo;

		[Token(Token = "0x4000DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		[HideInInspector]
		private double animResolution;

		[Token(Token = "0x4000DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		[HideInInspector]
		protected bool sampleUser;

		[Token(Token = "0x4000DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		private bool rebuild;

		[Token(Token = "0x4000DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
		private bool sample;

		[Token(Token = "0x4000DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7B")]
		private bool getClippedSamples;

		[Token(Token = "0x4000DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[HideInInspector]
		public bool multithreaded;

		[Token(Token = "0x4000DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
		[HideInInspector]
		public bool buildOnAwake;

		[Token(Token = "0x4000DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Thread buildThread;

		[Token(Token = "0x4000DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool postThread;

		[Token(Token = "0x4000DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		private bool threadSample;

		[Token(Token = "0x4000DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
		private bool threadWork;

		[Token(Token = "0x4000DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8B")]
		private bool _threadWorking;

		[Token(Token = "0x4000DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private object locker;

		[Token(Token = "0x1700021F")]
		public SplineUser user
		{
			[Token(Token = "0x60017F5")]
			[Address(RVA = "0x1A10D3C", Offset = "0x1A10D3C", VA = "0x1A10D3C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60017F6")]
			[Address(RVA = "0x1A10D44", Offset = "0x1A10D44", VA = "0x1A10D44")]
			set
			{
			}
		}

		[Token(Token = "0x17000220")]
		public SplineUser rootUser
		{
			[Token(Token = "0x60017F7")]
			[Address(RVA = "0x1A11008", Offset = "0x1A11008", VA = "0x1A11008")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000221")]
		public SplineComputer computer
		{
			[Token(Token = "0x60017F8")]
			[Address(RVA = "0x1A04314", Offset = "0x1A04314", VA = "0x1A04314")]
			get
			{
				return null;
			}
			[Token(Token = "0x60017F9")]
			[Address(RVA = "0x1A11124", Offset = "0x1A11124", VA = "0x1A11124")]
			set
			{
			}
		}

		[Token(Token = "0x17000222")]
		public double resolution
		{
			[Token(Token = "0x60017FA")]
			[Address(RVA = "0x1A118F8", Offset = "0x1A118F8", VA = "0x1A118F8")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x60017FB")]
			[Address(RVA = "0x1A11900", Offset = "0x1A11900", VA = "0x1A11900")]
			set
			{
			}
		}

		[Token(Token = "0x17000223")]
		public double clipFrom
		{
			[Token(Token = "0x60017FC")]
			[Address(RVA = "0x1A0A084", Offset = "0x1A0A084", VA = "0x1A0A084")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x60017FD")]
			[Address(RVA = "0x1A11938", Offset = "0x1A11938", VA = "0x1A11938")]
			set
			{
			}
		}

		[Token(Token = "0x17000224")]
		public double clipTo
		{
			[Token(Token = "0x60017FE")]
			[Address(RVA = "0x1A0A08C", Offset = "0x1A0A08C", VA = "0x1A0A08C")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x60017FF")]
			[Address(RVA = "0x1A119E4", Offset = "0x1A119E4", VA = "0x1A119E4")]
			set
			{
			}
		}

		[Token(Token = "0x17000225")]
		public bool averageResultVectors
		{
			[Token(Token = "0x6001800")]
			[Address(RVA = "0x1A11A90", Offset = "0x1A11A90", VA = "0x1A11A90")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001801")]
			[Address(RVA = "0x1A11A98", Offset = "0x1A11A98", VA = "0x1A11A98")]
			set
			{
			}
		}

		[Token(Token = "0x17000226")]
		public bool autoUpdate
		{
			[Token(Token = "0x6001802")]
			[Address(RVA = "0x1A11AD0", Offset = "0x1A11AD0", VA = "0x1A11AD0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001803")]
			[Address(RVA = "0x1A11AD8", Offset = "0x1A11AD8", VA = "0x1A11AD8")]
			set
			{
			}
		}

		[Token(Token = "0x17000227")]
		public bool uniformSample
		{
			[Token(Token = "0x6001804")]
			[Address(RVA = "0x1A11B0C", Offset = "0x1A11B0C", VA = "0x1A11B0C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001805")]
			[Address(RVA = "0x1A11B14", Offset = "0x1A11B14", VA = "0x1A11B14")]
			set
			{
			}
		}

		[Token(Token = "0x17000228")]
		public double span
		{
			[Token(Token = "0x6001806")]
			[Address(RVA = "0x1A11B44", Offset = "0x1A11B44", VA = "0x1A11B44")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x17000229")]
		public SplineAddress address
		{
			[Token(Token = "0x6001807")]
			[Address(RVA = "0x1A0610C", Offset = "0x1A0610C", VA = "0x1A0610C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022A")]
		public bool samplesAreLooped
		{
			[Token(Token = "0x6001808")]
			[Address(RVA = "0x1A09FA4", Offset = "0x1A09FA4", VA = "0x1A09FA4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700022B")]
		public SplineResult[] samples
		{
			[Token(Token = "0x6001809")]
			[Address(RVA = "0x1A08658", Offset = "0x1A08658", VA = "0x1A08658")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022C")]
		public SplineResult[] clippedSamples
		{
			[Token(Token = "0x600180A")]
			[Address(RVA = "0x1A0A094", Offset = "0x1A0A094", VA = "0x1A0A094")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022D")]
		protected bool willRebuild
		{
			[Token(Token = "0x600180B")]
			[Address(RVA = "0x1A12534", Offset = "0x1A12534", VA = "0x1A12534")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700022E")]
		public bool threadWorking
		{
			[Token(Token = "0x600180C")]
			[Address(RVA = "0x1A1253C", Offset = "0x1A1253C", VA = "0x1A1253C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600180D")]
		[Address(RVA = "0x1A0C464", Offset = "0x1A0C464", VA = "0x1A0C464", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600180E")]
		[Address(RVA = "0x1A12634", Offset = "0x1A12634", VA = "0x1A12634", Slot = "5")]
		protected virtual void Reset()
		{
		}

		[Token(Token = "0x600180F")]
		[Address(RVA = "0x1A12638", Offset = "0x1A12638", VA = "0x1A12638", Slot = "6")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001810")]
		[Address(RVA = "0x1A126E4", Offset = "0x1A126E4", VA = "0x1A126E4", Slot = "7")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001811")]
		[Address(RVA = "0x1A12790", Offset = "0x1A12790", VA = "0x1A12790", Slot = "8")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001812")]
		[Address(RVA = "0x1A127E0", Offset = "0x1A127E0", VA = "0x1A127E0", Slot = "9")]
		protected virtual void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001813")]
		[Address(RVA = "0x1A0B974", Offset = "0x1A0B974", VA = "0x1A0B974", Slot = "10")]
		protected virtual void OnDidApplyAnimationProperties()
		{
		}

		[Token(Token = "0x6001814")]
		[Address(RVA = "0x1A12830", Offset = "0x1A12830", VA = "0x1A12830", Slot = "11")]
		public virtual void Rebuild(bool sampleComputer)
		{
		}

		[Token(Token = "0x6001815")]
		[Address(RVA = "0x1A128A4", Offset = "0x1A128A4", VA = "0x1A128A4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9D1840", Offset = "0x9D1840")]
		private IEnumerator UpdateSubscribersRoutine()
		{
			return null;
		}

		[Token(Token = "0x6001816")]
		[Address(RVA = "0x1A12918", Offset = "0x1A12918", VA = "0x1A12918", Slot = "12")]
		public virtual void RebuildImmediate(bool sampleComputer)
		{
		}

		[Token(Token = "0x6001817")]
		[Address(RVA = "0x1A13948", Offset = "0x1A13948", VA = "0x1A13948")]
		public void GetClippedSamplesImmediate()
		{
		}

		[Token(Token = "0x6001818")]
		[Address(RVA = "0x1A0F844", Offset = "0x1A0F844", VA = "0x1A0F844", Slot = "13")]
		public virtual void EnterAddress(Node node, int connectionIndex, Spline.Direction direction = Spline.Direction.Forward)
		{
		}

		[Token(Token = "0x6001819")]
		[Address(RVA = "0x1A0FA14", Offset = "0x1A0FA14", VA = "0x1A0FA14", Slot = "14")]
		public virtual void AddComputer(SplineComputer computer, int connectionIndex, int connectedIndex, Spline.Direction direction = Spline.Direction.Forward)
		{
		}

		[Token(Token = "0x600181A")]
		[Address(RVA = "0x1A1397C", Offset = "0x1A1397C", VA = "0x1A1397C", Slot = "15")]
		public virtual void CollapseAddress()
		{
		}

		[Token(Token = "0x600181B")]
		[Address(RVA = "0x1A139D8", Offset = "0x1A139D8", VA = "0x1A139D8", Slot = "16")]
		public virtual void ClearAddress()
		{
		}

		[Token(Token = "0x600181C")]
		[Address(RVA = "0x1A0FBD8", Offset = "0x1A0FBD8", VA = "0x1A0FBD8", Slot = "17")]
		public virtual void ExitAddress(int depth)
		{
		}

		[Token(Token = "0x600181D")]
		[Address(RVA = "0x1A13A84", Offset = "0x1A13A84", VA = "0x1A13A84")]
		private void Update()
		{
		}

		[Token(Token = "0x600181E")]
		[Address(RVA = "0x1A13CF4", Offset = "0x1A13CF4", VA = "0x1A13CF4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600181F")]
		[Address(RVA = "0x1A13D08", Offset = "0x1A13D08", VA = "0x1A13D08")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001820")]
		[Address(RVA = "0x1A1380C", Offset = "0x1A1380C", VA = "0x1A1380C")]
		private void UpdateSubscribers()
		{
		}

		[Token(Token = "0x6001821")]
		[Address(RVA = "0x1A13A94", Offset = "0x1A13A94", VA = "0x1A13A94")]
		private void RunMain()
		{
		}

		[Token(Token = "0x6001822")]
		[Address(RVA = "0x1A13E88", Offset = "0x1A13E88", VA = "0x1A13E88")]
		private void RunThread()
		{
		}

		[Token(Token = "0x6001823")]
		[Address(RVA = "0x1A14104", Offset = "0x1A14104", VA = "0x1A14104", Slot = "18")]
		protected virtual void Run()
		{
		}

		[Token(Token = "0x6001824")]
		[Address(RVA = "0x1A08488", Offset = "0x1A08488", VA = "0x1A08488", Slot = "19")]
		protected virtual void LateRun()
		{
		}

		[Token(Token = "0x6001825")]
		[Address(RVA = "0x1A14108", Offset = "0x1A14108", VA = "0x1A14108", Slot = "20")]
		protected virtual void Build()
		{
		}

		[Token(Token = "0x6001826")]
		[Address(RVA = "0x1A1410C", Offset = "0x1A1410C", VA = "0x1A1410C", Slot = "21")]
		protected virtual void PostBuild()
		{
		}

		[Token(Token = "0x6001827")]
		[Address(RVA = "0x1A14110", Offset = "0x1A14110", VA = "0x1A14110")]
		public void SetClipRange(double from, double to)
		{
		}

		[Token(Token = "0x6001828")]
		[Address(RVA = "0x1A12A08", Offset = "0x1A12A08", VA = "0x1A12A08")]
		private void SampleComputer()
		{
		}

		[Token(Token = "0x6001829")]
		[Address(RVA = "0x1A11B84", Offset = "0x1A11B84", VA = "0x1A11B84")]
		private void GetClippedSamples()
		{
		}

		[Token(Token = "0x600182A")]
		[Address(RVA = "0x1A141B0", Offset = "0x1A141B0", VA = "0x1A141B0", Slot = "22")]
		public virtual SplineResult Evaluate(double percent)
		{
			return null;
		}

		[Token(Token = "0x600182B")]
		[Address(RVA = "0x1A1455C", Offset = "0x1A1455C", VA = "0x1A1455C", Slot = "23")]
		public virtual void Evaluate(SplineResult result, double percent)
		{
		}

		[Token(Token = "0x600182C")]
		[Address(RVA = "0x1A148B4", Offset = "0x1A148B4", VA = "0x1A148B4", Slot = "24")]
		public virtual Vector3 EvaluatePosition(double percent)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600182D")]
		[Address(RVA = "0x1A08694", Offset = "0x1A08694", VA = "0x1A08694")]
		public double ClipPercent(double percent)
		{
			return default(double);
		}

		[Token(Token = "0x600182E")]
		[Address(RVA = "0x1A14C98", Offset = "0x1A14C98", VA = "0x1A14C98")]
		public void ClipPercent(ref double percent)
		{
		}

		[Token(Token = "0x600182F")]
		[Address(RVA = "0x1A0A1B8", Offset = "0x1A0A1B8", VA = "0x1A0A1B8")]
		public double UnclipPercent(double percent)
		{
			return default(double);
		}

		[Token(Token = "0x6001830")]
		[Address(RVA = "0x1A0F24C", Offset = "0x1A0F24C", VA = "0x1A0F24C")]
		public void UnclipPercent(ref double percent)
		{
		}

		[Token(Token = "0x6001831")]
		[Address(RVA = "0x1A144F0", Offset = "0x1A144F0", VA = "0x1A144F0")]
		public int GetSampleIndex(double percent)
		{
			return default(int);
		}

		[Token(Token = "0x6001832")]
		[Address(RVA = "0x1A14E50", Offset = "0x1A14E50", VA = "0x1A14E50")]
		public int GetClippedSampleIndex(double percent)
		{
			return default(int);
		}

		[Token(Token = "0x6001833")]
		[Address(RVA = "0x1A14E98", Offset = "0x1A14E98", VA = "0x1A14E98", Slot = "25")]
		public virtual SplineResult Project(Vector3 point, double from = 0.0, double to = 1.0)
		{
			return null;
		}

		[Token(Token = "0x6001834")]
		[Address(RVA = "0x1A14F4C", Offset = "0x1A14F4C", VA = "0x1A14F4C", Slot = "26")]
		public virtual void Project(SplineResult result, Vector3 point, double from = 0.0, double to = 1.0)
		{
		}

		[Token(Token = "0x6001835")]
		[Address(RVA = "0x1A16518", Offset = "0x1A16518", VA = "0x1A16518", Slot = "27")]
		public virtual double Travel(double start, float distance, Spline.Direction direction)
		{
			return default(double);
		}

		[Token(Token = "0x6001836")]
		[Address(RVA = "0x1A11640", Offset = "0x1A11640", VA = "0x1A11640")]
		private void Subscribe(SplineUser input)
		{
		}

		[Token(Token = "0x6001837")]
		[Address(RVA = "0x1A113AC", Offset = "0x1A113AC", VA = "0x1A113AC")]
		private void Unsubscribe(SplineUser input)
		{
		}

		[Token(Token = "0x6001838")]
		[Address(RVA = "0x1A16984", Offset = "0x1A16984", VA = "0x1A16984", Slot = "28")]
		public virtual float CalculateLength(double from = 0.0, double to = 1.0)
		{
			return default(float);
		}

		[Token(Token = "0x6001839")]
		[Address(RVA = "0x1A13D1C", Offset = "0x1A13D1C", VA = "0x1A13D1C")]
		private void RemoveSubscriber(int index)
		{
		}

		[Token(Token = "0x600183A")]
		[Address(RVA = "0x1A12544", Offset = "0x1A12544", VA = "0x1A12544")]
		private bool IsSubscribed(SplineUser user)
		{
			return default(bool);
		}

		[Token(Token = "0x600183B")]
		[Address(RVA = "0x1A10BF4", Offset = "0x1A10BF4", VA = "0x1A10BF4")]
		public SplineUser()
		{
		}
	}
	[Token(Token = "0x200034F")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9B9DF0", Offset = "0x9B9DF0")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9B9DF0", Offset = "0x9B9DF0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9B9DF0", Offset = "0x9B9DF0")]
	public class SurfaceGenerator : MeshGenerator
	{
		[Token(Token = "0x4000DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		[HideInInspector]
		private float _expand;

		[Token(Token = "0x4000DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		[SerializeField]
		[HideInInspector]
		private float _extrude;

		[Token(Token = "0x4000DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		[HideInInspector]
		private Vector2 _sideUvScale;

		[Token(Token = "0x4000DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		[HideInInspector]
		private Vector2 _sideUvOffset;

		[Token(Token = "0x4000DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		[HideInInspector]
		private SplineComputer _extrudeComputer;

		[Token(Token = "0x4000DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		[HideInInspector]
		private SplineResult[] extrudeResults;

		[Token(Token = "0x4000DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		[HideInInspector]
		private Vector3[] identityVertices;

		[Token(Token = "0x4000DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		[HideInInspector]
		private Vector3[] identityNormals;

		[Token(Token = "0x4000DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		[HideInInspector]
		private Vector2[] projectedVerts;

		[Token(Token = "0x4000DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		[HideInInspector]
		private int[] capTris;

		[Token(Token = "0x4000DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		[HideInInspector]
		private int[] wallTris;

		[Token(Token = "0x4000DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[SerializeField]
		[HideInInspector]
		private double _extrudeFrom;

		[Token(Token = "0x4000DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[SerializeField]
		[HideInInspector]
		private double _extrudeTo;

		[Token(Token = "0x4000DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[SerializeField]
		[HideInInspector]
		private bool _uniformUvs;

		[Token(Token = "0x1700022F")]
		public float expand
		{
			[Token(Token = "0x600183C")]
			[Address(RVA = "0xFBE1EC", Offset = "0xFBE1EC", VA = "0xFBE1EC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600183D")]
			[Address(RVA = "0xFBE1F4", Offset = "0xFBE1F4", VA = "0xFBE1F4")]
			set
			{
			}
		}

		[Token(Token = "0x17000230")]
		public float extrude
		{
			[Token(Token = "0x600183E")]
			[Address(RVA = "0xFBE218", Offset = "0xFBE218", VA = "0xFBE218")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600183F")]
			[Address(RVA = "0xFBE220", Offset = "0xFBE220", VA = "0xFBE220")]
			set
			{
			}
		}

		[Token(Token = "0x17000231")]
		public double extrudeClipFrom
		{
			[Token(Token = "0x6001840")]
			[Address(RVA = "0xFBE244", Offset = "0xFBE244", VA = "0xFBE244")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6001841")]
			[Address(RVA = "0xFBE24C", Offset = "0xFBE24C", VA = "0xFBE24C")]
			set
			{
			}
		}

		[Token(Token = "0x17000232")]
		public double extrudeClipTo
		{
			[Token(Token = "0x6001842")]
			[Address(RVA = "0xFBE270", Offset = "0xFBE270", VA = "0xFBE270")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6001843")]
			[Address(RVA = "0xFBE278", Offset = "0xFBE278", VA = "0xFBE278")]
			set
			{
			}
		}

		[Token(Token = "0x17000233")]
		public Vector2 sideUvScale
		{
			[Token(Token = "0x6001844")]
			[Address(RVA = "0xFBE29C", Offset = "0xFBE29C", VA = "0xFBE29C")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6001845")]
			[Address(RVA = "0xFBE2A8", Offset = "0xFBE2A8", VA = "0xFBE2A8")]
			set
			{
			}
		}

		[Token(Token = "0x17000234")]
		public Vector2 sideUvOffset
		{
			[Token(Token = "0x6001846")]
			[Address(RVA = "0xFBE370", Offset = "0xFBE370", VA = "0xFBE370")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6001847")]
			[Address(RVA = "0xFBE37C", Offset = "0xFBE37C", VA = "0xFBE37C")]
			set
			{
			}
		}

		[Token(Token = "0x17000235")]
		public SplineComputer extrudeComputer
		{
			[Token(Token = "0x6001848")]
			[Address(RVA = "0xFBE444", Offset = "0xFBE444", VA = "0xFBE444")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001849")]
			[Address(RVA = "0xFBE44C", Offset = "0xFBE44C", VA = "0xFBE44C")]
			set
			{
			}
		}

		[Token(Token = "0x17000236")]
		public bool uniformUvs
		{
			[Token(Token = "0x600184A")]
			[Address(RVA = "0xFBE590", Offset = "0xFBE590", VA = "0xFBE590")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600184B")]
			[Address(RVA = "0xFBE598", Offset = "0xFBE598", VA = "0xFBE598")]
			set
			{
			}
		}

		[Token(Token = "0x600184C")]
		[Address(RVA = "0xFBE5C8", Offset = "0xFBE5C8", VA = "0xFBE5C8", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600184D")]
		[Address(RVA = "0xFBE638", Offset = "0xFBE638", VA = "0xFBE638", Slot = "29")]
		protected override void BuildMesh()
		{
		}

		[Token(Token = "0x600184E")]
		[Address(RVA = "0xFBE73C", Offset = "0xFBE73C", VA = "0xFBE73C")]
		public void Generate()
		{
		}

		[Token(Token = "0x600184F")]
		[Address(RVA = "0xFC1D4C", Offset = "0xFC1D4C", VA = "0xFC1D4C")]
		private void GenerateCapTris(bool flip)
		{
		}

		[Token(Token = "0x6001850")]
		[Address(RVA = "0xFC22F8", Offset = "0xFC22F8", VA = "0xFC22F8")]
		private int WriteTris(ref int[] tris, ref int[] target, int vertexOffset, int trisOffset, bool flip)
		{
			return default(int);
		}

		[Token(Token = "0x6001851")]
		[Address(RVA = "0xFC1BB8", Offset = "0xFC1BB8", VA = "0xFC1BB8")]
		private bool IsClockwise(Vector2[] points2D)
		{
			return default(bool);
		}

		[Token(Token = "0x6001852")]
		[Address(RVA = "0xFC1E04", Offset = "0xFC1E04", VA = "0xFC1E04")]
		private void GetIdentityVerts(Vector3 center, Vector3 normal, bool clockwise)
		{
		}

		[Token(Token = "0x6001853")]
		[Address(RVA = "0xFC17F0", Offset = "0xFC17F0", VA = "0xFC17F0")]
		private void GetProjectedVertices(Vector3[] points, Vector3 normal, Vector3 center, int count = 0)
		{
		}

		[Token(Token = "0x6001854")]
		[Address(RVA = "0xFC2618", Offset = "0xFC2618", VA = "0xFC2618")]
		public SurfaceGenerator()
		{
		}
	}
	[Token(Token = "0x2000350")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9B9EA0", Offset = "0x9B9EA0")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9B9EA0", Offset = "0x9B9EA0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9B9EA0", Offset = "0x9B9EA0")]
	public class TubeGenerator : MeshGenerator
	{
		[Token(Token = "0x2000603")]
		public enum CapMethod
		{
			[Token(Token = "0x4001ADF")]
			None,
			[Token(Token = "0x4001AE0")]
			Flat,
			[Token(Token = "0x4001AE1")]
			Round
		}

		[Token(Token = "0x4000DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		[HideInInspector]
		private int _sides;

		[Token(Token = "0x4000DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		[SerializeField]
		[HideInInspector]
		private int _roundCapLatitude;

		[Token(Token = "0x4000DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		[HideInInspector]
		private bool _cap;

		[Token(Token = "0x4000DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		[SerializeField]
		[HideInInspector]
		private CapMethod _capMode;

		[Token(Token = "0x4000DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		[HideInInspector]
		private float _integrity;

		[Token(Token = "0x4000DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		[SerializeField]
		[HideInInspector]
		private float _capUVScale;

		[Token(Token = "0x4000DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private int bodyVertexCount;

		[Token(Token = "0x4000DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private int bodyTrisCount;

		[Token(Token = "0x4000DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private int capVertexCount;

		[Token(Token = "0x4000DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		private int capTrisCount;

		[Token(Token = "0x17000237")]
		public int sides
		{
			[Token(Token = "0x6001855")]
			[Address(RVA = "0xFC57F0", Offset = "0xFC57F0", VA = "0xFC57F0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001856")]
			[Address(RVA = "0xFC57F8", Offset = "0xFC57F8", VA = "0xFC57F8")]
			set
			{
			}
		}

		[Token(Token = "0x17000238")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9DA19C", Offset = "0x9DA19C")]
		public bool cap
		{
			[Token(Token = "0x6001857")]
			[Address(RVA = "0xFC5828", Offset = "0xFC5828", VA = "0xFC5828")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001858")]
			[Address(RVA = "0xFC5830", Offset = "0xFC5830", VA = "0xFC5830")]
			set
			{
			}
		}

		[Token(Token = "0x17000239")]
		public CapMethod capMode
		{
			[Token(Token = "0x6001859")]
			[Address(RVA = "0xFC5860", Offset = "0xFC5860", VA = "0xFC5860")]
			get
			{
				return default(CapMethod);
			}
			[Token(Token = "0x600185A")]
			[Address(RVA = "0xFC5868", Offset = "0xFC5868", VA = "0xFC5868")]
			set
			{
			}
		}

		[Token(Token = "0x1700023A")]
		public int roundCapLatitude
		{
			[Token(Token = "0x600185B")]
			[Address(RVA = "0xFC588C", Offset = "0xFC588C", VA = "0xFC588C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600185C")]
			[Address(RVA = "0xFC5894", Offset = "0xFC5894", VA = "0xFC5894")]
			set
			{
			}
		}

		[Token(Token = "0x1700023B")]
		public float integrity
		{
			[Token(Token = "0x600185D")]
			[Address(RVA = "0xFC58CC", Offset = "0xFC58CC", VA = "0xFC58CC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600185E")]
			[Address(RVA = "0xFC58D4", Offset = "0xFC58D4", VA = "0xFC58D4")]
			set
			{
			}
		}

		[Token(Token = "0x1700023C")]
		public float capUVScale
		{
			[Token(Token = "0x600185F")]
			[Address(RVA = "0xFC58F8", Offset = "0xFC58F8", VA = "0xFC58F8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001860")]
			[Address(RVA = "0xFC5900", Offset = "0xFC5900", VA = "0xFC5900")]
			set
			{
			}
		}

		[Token(Token = "0x1700023D")]
		private bool useCap
		{
			[Token(Token = "0x6001861")]
			[Address(RVA = "0xFC5924", Offset = "0xFC5924", VA = "0xFC5924")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001862")]
		[Address(RVA = "0xFC5B10", Offset = "0xFC5B10", VA = "0xFC5B10", Slot = "5")]
		protected override void Reset()
		{
		}

		[Token(Token = "0x6001863")]
		[Address(RVA = "0xFC5B18", Offset = "0xFC5B18", VA = "0xFC5B18", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001864")]
		[Address(RVA = "0xFC5B9C", Offset = "0xFC5B9C", VA = "0xFC5B9C", Slot = "29")]
		protected override void BuildMesh()
		{
		}

		[Token(Token = "0x6001865")]
		[Address(RVA = "0xFC5EF4", Offset = "0xFC5EF4", VA = "0xFC5EF4")]
		private void Generate()
		{
		}

		[Token(Token = "0x6001866")]
		[Address(RVA = "0xFC68F4", Offset = "0xFC68F4", VA = "0xFC68F4")]
		private void GenerateFlatCaps()
		{
		}

		[Token(Token = "0x6001867")]
		[Address(RVA = "0xFC7420", Offset = "0xFC7420", VA = "0xFC7420")]
		private void GenerateRoundCaps()
		{
		}

		[Token(Token = "0x6001868")]
		[Address(RVA = "0xFC89D4", Offset = "0xFC89D4", VA = "0xFC89D4")]
		public TubeGenerator()
		{
		}
	}
	[Token(Token = "0x2000351")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9B9F50", Offset = "0x9B9F50")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9B9F50", Offset = "0x9B9F50")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9B9F50", Offset = "0x9B9F50")]
	public class WaveformGenerator : MeshGenerator
	{
		[Token(Token = "0x2000604")]
		public enum Axis
		{
			[Token(Token = "0x4001AE3")]
			X,
			[Token(Token = "0x4001AE4")]
			Y,
			[Token(Token = "0x4001AE5")]
			Z
		}

		[Token(Token = "0x2000605")]
		public enum UVWrapMode
		{
			[Token(Token = "0x4001AE7")]
			Clamp,
			[Token(Token = "0x4001AE8")]
			UniformX,
			[Token(Token = "0x4001AE9")]
			UniformY,
			[Token(Token = "0x4001AEA")]
			Uniform
		}

		[Token(Token = "0x4000DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		[HideInInspector]
		private Axis _axis;

		[Token(Token = "0x4000DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		[SerializeField]
		[HideInInspector]
		private bool _symmetry;

		[Token(Token = "0x4000DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		[HideInInspector]
		private UVWrapMode _uvWrapMode;

		[Token(Token = "0x4000DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		[SerializeField]
		[HideInInspector]
		private int _slices;

		[Token(Token = "0x1700023E")]
		public Axis axis
		{
			[Token(Token = "0x6001869")]
			[Address(RVA = "0xFC8A54", Offset = "0xFC8A54", VA = "0xFC8A54")]
			get
			{
				return default(Axis);
			}
			[Token(Token = "0x600186A")]
			[Address(RVA = "0xFC8A5C", Offset = "0xFC8A5C", VA = "0xFC8A5C")]
			set
			{
			}
		}

		[Token(Token = "0x1700023F")]
		public bool symmetry
		{
			[Token(Token = "0x600186B")]
			[Address(RVA = "0xFC8A80", Offset = "0xFC8A80", VA = "0xFC8A80")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600186C")]
			[Address(RVA = "0xFC8A88", Offset = "0xFC8A88", VA = "0xFC8A88")]
			set
			{
			}
		}

		[Token(Token = "0x17000240")]
		public UVWrapMode uvWrapMode
		{
			[Token(Token = "0x600186D")]
			[Address(RVA = "0xFC8AB8", Offset = "0xFC8AB8", VA = "0xFC8AB8")]
			get
			{
				return default(UVWrapMode);
			}
			[Token(Token = "0x600186E")]
			[Address(RVA = "0xFC8AC0", Offset = "0xFC8AC0", VA = "0xFC8AC0")]
			set
			{
			}
		}

		[Token(Token = "0x17000241")]
		public int slices
		{
			[Token(Token = "0x600186F")]
			[Address(RVA = "0xFC8AE4", Offset = "0xFC8AE4", VA = "0xFC8AE4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001870")]
			[Address(RVA = "0xFC8AEC", Offset = "0xFC8AEC", VA = "0xFC8AEC")]
			set
			{
			}
		}

		[Token(Token = "0x6001871")]
		[Address(RVA = "0xFC8B18", Offset = "0xFC8B18", VA = "0xFC8B18", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001872")]
		[Address(RVA = "0xFC8B88", Offset = "0xFC8B88", VA = "0xFC8B88", Slot = "29")]
		protected override void BuildMesh()
		{
		}

		[Token(Token = "0x6001873")]
		[Address(RVA = "0xFC8C94", Offset = "0xFC8C94", VA = "0xFC8C94", Slot = "20")]
		protected override void Build()
		{
		}

		[Token(Token = "0x6001874")]
		[Address(RVA = "0xFC8C9C", Offset = "0xFC8C9C", VA = "0xFC8C9C", Slot = "19")]
		protected override void LateRun()
		{
		}

		[Token(Token = "0x6001875")]
		[Address(RVA = "0xFC8BB0", Offset = "0xFC8BB0", VA = "0xFC8BB0")]
		private void Generate()
		{
		}

		[Token(Token = "0x6001876")]
		[Address(RVA = "0xFC983C", Offset = "0xFC983C", VA = "0xFC983C")]
		private void GenerateDefault()
		{
		}

		[Token(Token = "0x6001877")]
		[Address(RVA = "0xFC8CA4", Offset = "0xFC8CA4", VA = "0xFC8CA4")]
		private void GenerateSymmetrical()
		{
		}

		[Token(Token = "0x6001878")]
		[Address(RVA = "0xFCA598", Offset = "0xFCA598", VA = "0xFCA598")]
		public WaveformGenerator()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000352")]
	public class CustomOffsetModule
	{
		[Serializable]
		[Token(Token = "0x2000606")]
		public class Key
		{
			[Token(Token = "0x4001AEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			private Vector2 _offset;

			[Token(Token = "0x4001AEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private double _from;

			[Token(Token = "0x4001AED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			private double _to;

			[Token(Token = "0x4001AEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[SerializeField]
			private double _center;

			[Token(Token = "0x4001AEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[SerializeField]
			private bool _loop;

			[Token(Token = "0x4001AF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public AnimationCurve interpolation;

			[Token(Token = "0x17000478")]
			public Vector2 offset
			{
				[Token(Token = "0x60025FB")]
				[Address(RVA = "0xE844FC", Offset = "0xE844FC", VA = "0xE844FC")]
				get
				{
					return default(Vector2);
				}
				[Token(Token = "0x60025FC")]
				[Address(RVA = "0xE84504", Offset = "0xE84504", VA = "0xE84504")]
				set
				{
				}
			}

			[Token(Token = "0x17000479")]
			public double center
			{
				[Token(Token = "0x60025FD")]
				[Address(RVA = "0xE8450C", Offset = "0xE8450C", VA = "0xE8450C")]
				get
				{
					return default(double);
				}
				[Token(Token = "0x60025FE")]
				[Address(RVA = "0xE84514", Offset = "0xE84514", VA = "0xE84514")]
				set
				{
				}
			}

			[Token(Token = "0x1700047A")]
			public double from
			{
				[Token(Token = "0x60025FF")]
				[Address(RVA = "0xE844AC", Offset = "0xE844AC", VA = "0xE844AC")]
				get
				{
					return default(double);
				}
				[Token(Token = "0x6002600")]
				[Address(RVA = "0xE84530", Offset = "0xE84530", VA = "0xE84530")]
				set
				{
				}
			}

			[Token(Token = "0x1700047B")]
			public double to
			{
				[Token(Token = "0x6002601")]
				[Address(RVA = "0xE844B4", Offset = "0xE844B4", VA = "0xE844B4")]
				get
				{
					return default(double);
				}
				[Token(Token = "0x6002602")]
				[Address(RVA = "0xE8454C", Offset = "0xE8454C", VA = "0xE8454C")]
				set
				{
				}
			}

			[Token(Token = "0x1700047C")]
			public bool loop
			{
				[Token(Token = "0x6002603")]
				[Address(RVA = "0xE84568", Offset = "0xE84568", VA = "0xE84568")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6002604")]
				[Address(RVA = "0xE84570", Offset = "0xE84570", VA = "0xE84570")]
				set
				{
				}
			}

			[Token(Token = "0x1700047D")]
			public double position
			{
				[Token(Token = "0x6002605")]
				[Address(RVA = "0xE84458", Offset = "0xE84458", VA = "0xE84458")]
				get
				{
					return default(double);
				}
				[Token(Token = "0x6002606")]
				[Address(RVA = "0xE8457C", Offset = "0xE8457C", VA = "0xE8457C")]
				set
				{
				}
			}

			[Token(Token = "0x6002607")]
			[Address(RVA = "0xE83DC0", Offset = "0xE83DC0", VA = "0xE83DC0")]
			public Key(Vector2 o, double f, double t, double c)
			{
			}

			[Token(Token = "0x6002608")]
			[Address(RVA = "0xE844BC", Offset = "0xE844BC", VA = "0xE844BC")]
			public float Evaluate(float t)
			{
				return default(float);
			}
		}

		[Token(Token = "0x4000DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Key> keys;

		[Token(Token = "0x4000DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _blend;

		[Token(Token = "0x17000242")]
		public float blend
		{
			[Token(Token = "0x6001879")]
			[Address(RVA = "0xE83BE4", Offset = "0xE83BE4", VA = "0xE83BE4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600187A")]
			[Address(RVA = "0xE83BEC", Offset = "0xE83BEC", VA = "0xE83BEC")]
			set
			{
			}
		}

		[Token(Token = "0x600187B")]
		[Address(RVA = "0xE83C68", Offset = "0xE83C68", VA = "0xE83C68")]
		public CustomOffsetModule()
		{
		}

		[Token(Token = "0x600187C")]
		[Address(RVA = "0xE83D04", Offset = "0xE83D04", VA = "0xE83D04")]
		public void AddKey(Vector2 offset, double f, double t, double c)
		{
		}

		[Token(Token = "0x600187D")]
		[Address(RVA = "0xE83EB8", Offset = "0xE83EB8", VA = "0xE83EB8")]
		public Vector2 Evaluate(double time)
		{
			return default(Vector2);
		}
	}
	[Serializable]
	[Token(Token = "0x2000353")]
	public class CustomRotationModule
	{
		[Serializable]
		[Token(Token = "0x2000607")]
		public class Key
		{
			[Token(Token = "0x4001AF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			private Vector3 _rotation;

			[Token(Token = "0x4001AF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			private double _from;

			[Token(Token = "0x4001AF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[SerializeField]
			private double _to;

			[Token(Token = "0x4001AF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[SerializeField]
			private double _center;

			[Token(Token = "0x4001AF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[SerializeField]
			private bool _loop;

			[Token(Token = "0x4001AF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public AnimationCurve interpolation;

			[Token(Token = "0x1700047E")]
			public Vector3 rotation
			{
				[Token(Token = "0x6002609")]
				[Address(RVA = "0xE84FB4", Offset = "0xE84FB4", VA = "0xE84FB4")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x600260A")]
				[Address(RVA = "0xE84FC0", Offset = "0xE84FC0", VA = "0xE84FC0")]
				set
				{
				}
			}

			[Token(Token = "0x1700047F")]
			public double center
			{
				[Token(Token = "0x600260B")]
				[Address(RVA = "0xE84FCC", Offset = "0xE84FCC", VA = "0xE84FCC")]
				get
				{
					return default(double);
				}
				[Token(Token = "0x600260C")]
				[Address(RVA = "0xE84FD4", Offset = "0xE84FD4", VA = "0xE84FD4")]
				set
				{
				}
			}

			[Token(Token = "0x17000480")]
			public double from
			{
				[Token(Token = "0x600260D")]
				[Address(RVA = "0xE84F64", Offset = "0xE84F64", VA = "0xE84F64")]
				get
				{
					return default(double);
				}
				[Token(Token = "0x600260E")]
				[Address(RVA = "0xE84FF0", Offset = "0xE84FF0", VA = "0xE84FF0")]
				set
				{
				}
			}

			[Token(Token = "0x17000481")]
			public double to
			{
				[Token(Token = "0x600260F")]
				[Address(RVA = "0xE84F6C", Offset = "0xE84F6C", VA = "0xE84F6C")]
				get
				{
					return default(double);
				}
				[Token(Token = "0x6002610")]
				[Address(RVA = "0xE8500C", Offset = "0xE8500C", VA = "0xE8500C")]
				set
				{
				}
			}

			[Token(Token = "0x17000482")]
			public bool loop
			{
				[Token(Token = "0x6002611")]
				[Address(RVA = "0xE85028", Offset = "0xE85028", VA = "0xE85028")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6002612")]
				[Address(RVA = "0xE85030", Offset = "0xE85030", VA = "0xE85030")]
				set
				{
				}
			}

			[Token(Token = "0x17000483")]
			public double position
			{
				[Token(Token = "0x6002613")]
				[Address(RVA = "0xE84F10", Offset = "0xE84F10", VA = "0xE84F10")]
				get
				{
					return default(double);
				}
				[Token(Token = "0x6002614")]
				[Address(RVA = "0xE8503C", Offset = "0xE8503C", VA = "0xE8503C")]
				set
				{
				}
			}

			[Token(Token = "0x6002615")]
			[Address(RVA = "0xE847F0", Offset = "0xE847F0", VA = "0xE847F0")]
			public Key(Vector3 r, double f, double t, double c)
			{
			}

			[Token(Token = "0x6002616")]
			[Address(RVA = "0xE84F74", Offset = "0xE84F74", VA = "0xE84F74")]
			public float Evaluate(float t)
			{
				return default(float);
			}
		}

		[Token(Token = "0x4000DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Key> keys;

		[Token(Token = "0x4000DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _blend;

		[Token(Token = "0x17000243")]
		public float blend
		{
			[Token(Token = "0x600187E")]
			[Address(RVA = "0xE8460C", Offset = "0xE8460C", VA = "0xE8460C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600187F")]
			[Address(RVA = "0xE84614", Offset = "0xE84614", VA = "0xE84614")]
			set
			{
			}
		}

		[Token(Token = "0x6001880")]
		[Address(RVA = "0xE84690", Offset = "0xE84690", VA = "0xE84690")]
		public CustomRotationModule()
		{
		}

		[Token(Token = "0x6001881")]
		[Address(RVA = "0xE8472C", Offset = "0xE8472C", VA = "0xE8472C")]
		public void AddKey(Vector3 rotation, double f, double t, double c)
		{
		}

		[Token(Token = "0x6001882")]
		[Address(RVA = "0xE848F4", Offset = "0xE848F4", VA = "0xE848F4")]
		public Quaternion Evaluate(Quaternion baseRotation, double time)
		{
			return default(Quaternion);
		}
	}
	[Serializable]
	[Token(Token = "0x2000354")]
	public class ObjectSequence<T>
	{
		[Token(Token = "0x2000608")]
		public enum Iteration
		{
			[Token(Token = "0x4001AF8")]
			Ordered,
			[Token(Token = "0x4001AF9")]
			Random
		}

		[Token(Token = "0x4000DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T startObject;

		[Token(Token = "0x4000E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T endObject;

		[Token(Token = "0x4000E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T[] objects;

		[Token(Token = "0x4000E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Iteration iteration;

		[Token(Token = "0x4000E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[HideInInspector]
		private int _randomSeed;

		[Token(Token = "0x4000E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[HideInInspector]
		private int index;

		[Token(Token = "0x4000E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[HideInInspector]
		private System.Random randomizer;

		[Token(Token = "0x17000244")]
		public int randomSeed
		{
			[Token(Token = "0x6001883")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001884")]
			set
			{
			}
		}

		[Token(Token = "0x6001885")]
		public ObjectSequence()
		{
		}

		[Token(Token = "0x6001886")]
		public T GetFirst()
		{
			return (T)null;
		}

		[Token(Token = "0x6001887")]
		public T GetLast()
		{
			return (T)null;
		}

		[Token(Token = "0x6001888")]
		public T Next()
		{
			return (T)null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000355")]
	public class Spline
	{
		[Token(Token = "0x2000609")]
		public enum Direction
		{
			[Token(Token = "0x4001AFB")]
			Forward = 1,
			[Token(Token = "0x4001AFC")]
			Backward = -1
		}

		[Token(Token = "0x200060A")]
		public enum Type
		{
			[Token(Token = "0x4001AFE")]
			Hermite,
			[Token(Token = "0x4001AFF")]
			BSpline,
			[Token(Token = "0x4001B00")]
			Bezier,
			[Token(Token = "0x4001B01")]
			Linear
		}

		[Token(Token = "0x4000E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SplinePoint[] points;

		[Token(Token = "0x4000E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool closed;

		[Token(Token = "0x4000E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Type type;

		[Token(Token = "0x4000E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve customValueInterpolation;

		[Token(Token = "0x4000E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve customNormalInterpolation;

		[Token(Token = "0x4000E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9C6930", Offset = "0x9C6930")]
		public double precision;

		[Token(Token = "0x4000E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] hermitePoints;

		[Token(Token = "0x17000245")]
		public bool isClosed
		{
			[Token(Token = "0x6001889")]
			[Address(RVA = "0x19F3FE0", Offset = "0x19F3FE0", VA = "0x19F3FE0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600188A")]
			[Address(RVA = "0x19F51B0", Offset = "0x19F51B0", VA = "0x19F51B0")]
			set
			{
			}
		}

		[Token(Token = "0x17000246")]
		public double moveStep
		{
			[Token(Token = "0x600188B")]
			[Address(RVA = "0x19F51B4", Offset = "0x19F51B4", VA = "0x19F51B4")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x600188C")]
			[Address(RVA = "0x19F5288", Offset = "0x19F5288", VA = "0x19F5288")]
			set
			{
			}
		}

		[Token(Token = "0x17000247")]
		public int iterations
		{
			[Token(Token = "0x600188D")]
			[Address(RVA = "0x19F5208", Offset = "0x19F5208", VA = "0x19F5208")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600188E")]
			[Address(RVA = "0x19F528C", Offset = "0x19F528C", VA = "0x19F528C")]
			set
			{
			}
		}

		[Token(Token = "0x600188F")]
		[Address(RVA = "0x19F3DA4", Offset = "0x19F3DA4", VA = "0x19F3DA4")]
		public Spline(Type t)
		{
		}

		[Token(Token = "0x6001890")]
		[Address(RVA = "0x19F5290", Offset = "0x19F5290", VA = "0x19F5290")]
		public Spline(Type t, double p)
		{
		}

		[Token(Token = "0x6001891")]
		[Address(RVA = "0x19F5354", Offset = "0x19F5354", VA = "0x19F5354")]
		public float CalculateLength(double from = 0.0, double to = 1.0, double resolution = 1.0)
		{
			return default(float);
		}

		[Token(Token = "0x6001892")]
		[Address(RVA = "0x19F55B8", Offset = "0x19F55B8", VA = "0x19F55B8")]
		public double Project(Vector3 point, int subdivide = 3, double from = 0.0, double to = 1.0)
		{
			return default(double);
		}

		[Token(Token = "0x6001893")]
		[Address(RVA = "0x19F5B44", Offset = "0x19F5B44", VA = "0x19F5B44")]
		public bool Raycast(out RaycastHit hit, out double hitPercent, LayerMask layerMask, double resolution = 1.0, double from = 0.0, double to = 1.0, QueryTriggerInteraction hitTriggers = QueryTriggerInteraction.UseGlobal)
		{
			return default(bool);
		}

		[Token(Token = "0x6001894")]
		[Address(RVA = "0x19F5DD0", Offset = "0x19F5DD0", VA = "0x19F5DD0")]
		public bool RaycastAll(out RaycastHit[] hits, out double[] hitPercents, LayerMask layerMask, double resolution = 1.0, double from = 0.0, double to = 1.0, QueryTriggerInteraction hitTriggers = QueryTriggerInteraction.UseGlobal)
		{
			return default(bool);
		}

		[Token(Token = "0x6001895")]
		[Address(RVA = "0x19F54F8", Offset = "0x19F54F8", VA = "0x19F54F8")]
		public Vector3 EvaluatePosition(double percent)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001896")]
		[Address(RVA = "0x19F6350", Offset = "0x19F6350", VA = "0x19F6350")]
		public SplineResult Evaluate(double percent)
		{
			return null;
		}

		[Token(Token = "0x6001897")]
		[Address(RVA = "0x19F6478", Offset = "0x19F6478", VA = "0x19F6478")]
		public void Evaluate(SplineResult result, double percent)
		{
		}

		[Token(Token = "0x6001898")]
		[Address(RVA = "0x19F6F94", Offset = "0x19F6F94", VA = "0x19F6F94")]
		public void Evaluate(ref SplineResult[] samples, double from = 0.0, double to = 1.0)
		{
		}

		[Token(Token = "0x6001899")]
		[Address(RVA = "0x19F71B4", Offset = "0x19F71B4", VA = "0x19F71B4")]
		public void EvaluatePositions(ref Vector3[] positions, double from = 0.0, double to = 1.0)
		{
		}

		[Token(Token = "0x600189A")]
		[Address(RVA = "0x19F73A8", Offset = "0x19F73A8", VA = "0x19F73A8")]
		public double Travel(double start, float distance, Direction direction)
		{
			return default(double);
		}

		[Token(Token = "0x600189B")]
		[Address(RVA = "0x19F6248", Offset = "0x19F6248", VA = "0x19F6248")]
		private void EvaluatePosition(ref Vector3 point, double percent)
		{
		}

		[Token(Token = "0x600189C")]
		[Address(RVA = "0x19F58A4", Offset = "0x19F58A4", VA = "0x19F58A4")]
		private double GetClosestPoint(int iterations, Vector3 point, double start, double end, int slices)
		{
			return default(double);
		}

		[Token(Token = "0x600189D")]
		[Address(RVA = "0x19F4024", Offset = "0x19F4024", VA = "0x19F4024")]
		public void Break()
		{
		}

		[Token(Token = "0x600189E")]
		[Address(RVA = "0x19F78A4", Offset = "0x19F78A4", VA = "0x19F78A4")]
		public void Break(int at)
		{
		}

		[Token(Token = "0x600189F")]
		[Address(RVA = "0x19F3E58", Offset = "0x19F3E58", VA = "0x19F3E58")]
		public void Close()
		{
		}

		[Token(Token = "0x60018A0")]
		[Address(RVA = "0x19F7BF4", Offset = "0x19F7BF4", VA = "0x19F7BF4")]
		public void ConvertToBezier()
		{
		}

		[Token(Token = "0x60018A1")]
		[Address(RVA = "0x19F75F4", Offset = "0x19F75F4", VA = "0x19F75F4")]
		private void GetPoint(ref Vector3 point, double percent, int pointIndex)
		{
		}

		[Token(Token = "0x60018A2")]
		[Address(RVA = "0x19FA33C", Offset = "0x19FA33C", VA = "0x19FA33C")]
		private void LinearGetPoint(ref Vector3 point, double t, int i)
		{
		}

		[Token(Token = "0x60018A3")]
		[Address(RVA = "0x19F9970", Offset = "0x19F9970", VA = "0x19F9970")]
		private void BSPGetPoint(ref Vector3 point, double t, int i)
		{
		}

		[Token(Token = "0x60018A4")]
		[Address(RVA = "0x19F9430", Offset = "0x19F9430", VA = "0x19F9430")]
		private void BezierGetPoint(ref Vector3 point, double t, int i)
		{
		}

		[Token(Token = "0x60018A5")]
		[Address(RVA = "0x19F8B10", Offset = "0x19F8B10", VA = "0x19F8B10")]
		private void HermiteGetPoint(ref Vector3 point, double t, int i)
		{
		}

		[Token(Token = "0x60018A6")]
		[Address(RVA = "0x19F83B4", Offset = "0x19F83B4", VA = "0x19F83B4")]
		private void GetHermitePoints(int i)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000356")]
	public class SplineAddress
	{
		[Serializable]
		[Token(Token = "0x200060B")]
		public class Element
		{
			[Token(Token = "0x4001B02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SplineComputer computer;

			[Token(Token = "0x4001B03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private int _startPoint;

			[Token(Token = "0x4001B04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[SerializeField]
			private int _endPoint;

			[Token(Token = "0x17000484")]
			public int startPoint
			{
				[Token(Token = "0x6002617")]
				[Address(RVA = "0x19FE7BC", Offset = "0x19FE7BC", VA = "0x19FE7BC")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6002618")]
				[Address(RVA = "0x19FE808", Offset = "0x19FE808", VA = "0x19FE808")]
				set
				{
				}
			}

			[Token(Token = "0x17000485")]
			public int endPoint
			{
				[Token(Token = "0x6002619")]
				[Address(RVA = "0x19FE7C4", Offset = "0x19FE7C4", VA = "0x19FE7C4")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x600261A")]
				[Address(RVA = "0x19FBC8C", Offset = "0x19FBC8C", VA = "0x19FBC8C")]
				set
				{
				}
			}

			[Token(Token = "0x17000486")]
			public double startPercent
			{
				[Token(Token = "0x600261B")]
				[Address(RVA = "0x19FCEA4", Offset = "0x19FCEA4", VA = "0x19FCEA4")]
				get
				{
					return default(double);
				}
			}

			[Token(Token = "0x17000487")]
			public double endPercent
			{
				[Token(Token = "0x600261C")]
				[Address(RVA = "0x19FCEE8", Offset = "0x19FCEE8", VA = "0x19FCEE8")]
				get
				{
					return default(double);
				}
			}

			[Token(Token = "0x17000488")]
			public int span
			{
				[Token(Token = "0x600261D")]
				[Address(RVA = "0x19FCDEC", Offset = "0x19FCDEC", VA = "0x19FCDEC")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x600261E")]
			[Address(RVA = "0x19FBC7C", Offset = "0x19FBC7C", VA = "0x19FBC7C")]
			public Element()
			{
			}
		}

		[Token(Token = "0x4000E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Element[] _elements;

		[Token(Token = "0x17000248")]
		public int depth
		{
			[Token(Token = "0x60018A7")]
			[Address(RVA = "0x19FBA78", Offset = "0x19FBA78", VA = "0x19FBA78")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000249")]
		public SplineComputer root
		{
			[Token(Token = "0x60018A8")]
			[Address(RVA = "0x19FBA90", Offset = "0x19FBA90", VA = "0x19FBA90")]
			get
			{
				return null;
			}
			[Token(Token = "0x60018A9")]
			[Address(RVA = "0x19FBB1C", Offset = "0x19FBB1C", VA = "0x19FBB1C")]
			set
			{
			}
		}

		[Token(Token = "0x1700024A")]
		public Element[] elements
		{
			[Token(Token = "0x60018AA")]
			[Address(RVA = "0x19FBF2C", Offset = "0x19FBF2C", VA = "0x19FBF2C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024B")]
		public double moveStep
		{
			[Token(Token = "0x60018AB")]
			[Address(RVA = "0x19FBF34", Offset = "0x19FBF34", VA = "0x19FBF34")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x60018AC")]
		[Address(RVA = "0x19FC21C", Offset = "0x19FC21C", VA = "0x19FC21C")]
		public SplineAddress(SplineComputer rootComp)
		{
		}

		[Token(Token = "0x60018AD")]
		[Address(RVA = "0x19FC360", Offset = "0x19FC360", VA = "0x19FC360")]
		public SplineAddress(SplineAddress copy)
		{
		}

		[Token(Token = "0x60018AE")]
		[Address(RVA = "0x19FC564", Offset = "0x19FC564", VA = "0x19FC564")]
		public SplineResult Evaluate(double percent)
		{
			return null;
		}

		[Token(Token = "0x60018AF")]
		[Address(RVA = "0x19FC9EC", Offset = "0x19FC9EC", VA = "0x19FC9EC")]
		public Vector3 EvaluatePosition(double percent)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60018B0")]
		[Address(RVA = "0x19FCF34", Offset = "0x19FCF34", VA = "0x19FCF34")]
		public double Project(Vector3 point, int subdivide = 4, double from = 0.0, double to = 1.0)
		{
			return default(double);
		}

		[Token(Token = "0x60018B1")]
		[Address(RVA = "0x19FD7AC", Offset = "0x19FD7AC", VA = "0x19FD7AC")]
		public float CalculateLength(double from = 0.0, double to = 1.0)
		{
			return default(float);
		}

		[Token(Token = "0x60018B2")]
		[Address(RVA = "0x19FDAC0", Offset = "0x19FDAC0", VA = "0x19FDAC0")]
		public double Travel(double start, float distance, Spline.Direction direction, int iterations)
		{
			return default(double);
		}

		[Token(Token = "0x60018B3")]
		[Address(RVA = "0x19FDCC8", Offset = "0x19FDCC8", VA = "0x19FDCC8")]
		public int GetElementIndex(double percent)
		{
			return default(int);
		}

		[Token(Token = "0x60018B4")]
		[Address(RVA = "0x19FD200", Offset = "0x19FD200", VA = "0x19FD200")]
		public double PathToLocalPercent(double pathPercent, int elementIndex)
		{
			return default(double);
		}

		[Token(Token = "0x60018B5")]
		[Address(RVA = "0x19FD540", Offset = "0x19FD540", VA = "0x19FD540")]
		public double LocalToPathPercent(double localPercent, int elementIndex)
		{
			return default(double);
		}

		[Token(Token = "0x60018B6")]
		[Address(RVA = "0x19FC084", Offset = "0x19FC084", VA = "0x19FC084")]
		public int GetTotalPointCount()
		{
			return default(int);
		}

		[Token(Token = "0x60018B7")]
		[Address(RVA = "0x19FC694", Offset = "0x19FC694", VA = "0x19FC694")]
		public void GetEvaluationValues(double inputPercent, out SplineComputer computer, out double percent, out Spline.Direction direction)
		{
		}

		[Token(Token = "0x60018B8")]
		[Address(RVA = "0x19FDEA8", Offset = "0x19FDEA8", VA = "0x19FDEA8")]
		private int LocalToPathPoint(int point, int elementIndex)
		{
			return default(int);
		}

		[Token(Token = "0x60018B9")]
		[Address(RVA = "0x19FDFD0", Offset = "0x19FDFD0", VA = "0x19FDFD0")]
		private void PathToLocalPoint(int point, out int computerIndex, out int localPoint)
		{
		}

		[Token(Token = "0x60018BA")]
		[Address(RVA = "0x19FE10C", Offset = "0x19FE10C", VA = "0x19FE10C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9D18A4", Offset = "0x9D18A4")]
		public void Enter(Node node, int connectionIndex, Spline.Direction direction = Spline.Direction.Forward)
		{
		}

		[Token(Token = "0x60018BB")]
		[Address(RVA = "0x19FE110", Offset = "0x19FE110", VA = "0x19FE110")]
		public void AddSpline(Node node, int connectionIndex, Spline.Direction direction = Spline.Direction.Forward)
		{
		}

		[Token(Token = "0x60018BC")]
		[Address(RVA = "0x19FEA68", Offset = "0x19FEA68", VA = "0x19FEA68")]
		public void AddSpline(SplineComputer computer, int connectionIndex, int connectedIndex, Spline.Direction direction = Spline.Direction.Forward)
		{
		}

		[Token(Token = "0x60018BD")]
		[Address(RVA = "0x19FEEDC", Offset = "0x19FEEDC", VA = "0x19FEEDC")]
		public void Exit(int exitDepth)
		{
		}

		[Token(Token = "0x60018BE")]
		[Address(RVA = "0x19FF114", Offset = "0x19FF114", VA = "0x19FF114")]
		public void Collapse()
		{
		}

		[Token(Token = "0x60018BF")]
		[Address(RVA = "0x19FF3C4", Offset = "0x19FF3C4", VA = "0x19FF3C4")]
		public void Clear()
		{
		}

		[Token(Token = "0x60018C0")]
		[Address(RVA = "0x19FC454", Offset = "0x19FC454", VA = "0x19FC454")]
		private void AddElement(Element element)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000357")]
	public struct SplinePoint
	{
		[Token(Token = "0x200060C")]
		public enum Type
		{
			[Token(Token = "0x4001B06")]
			Smooth,
			[Token(Token = "0x4001B07")]
			Broken
		}

		[Token(Token = "0x4000E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x9C694C", Offset = "0x9C694C")]
		public Type _type;

		[Token(Token = "0x4000E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Vector3 position;

		[Token(Token = "0x4000E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Color color;

		[Token(Token = "0x4000E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 normal;

		[Token(Token = "0x4000E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float size;

		[Token(Token = "0x4000E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 tangent;

		[Token(Token = "0x4000E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 tangent2;

		[Token(Token = "0x1700024C")]
		public Type type
		{
			[Token(Token = "0x60018C1")]
			[Address(RVA = "0xAAC26C", Offset = "0xAAC26C", VA = "0xAAC26C")]
			get
			{
				return default(Type);
			}
			[Token(Token = "0x60018C2")]
			[Address(RVA = "0xAAC274", Offset = "0xAAC274", VA = "0xAAC274")]
			set
			{
			}
		}

		[Token(Token = "0x60018C3")]
		[Address(RVA = "0x1A0AC2C", Offset = "0x1A0AC2C", VA = "0x1A0AC2C")]
		public static SplinePoint Lerp(SplinePoint a, SplinePoint b, float t)
		{
			return default(SplinePoint);
		}

		[Token(Token = "0x60018C4")]
		[Address(RVA = "0x1A0AE20", Offset = "0x1A0AE20", VA = "0x1A0AE20")]
		private static void GetInterpolatedTangents(SplinePoint a, SplinePoint b, float t, out Vector3 t1, out Vector3 t2)
		{
		}

		[Token(Token = "0x60018C5")]
		[Address(RVA = "0xAAC284", Offset = "0xAAC284", VA = "0xAAC284")]
		public void SetPosition(Vector3 pos)
		{
		}

		[Token(Token = "0x60018C6")]
		[Address(RVA = "0xAAC28C", Offset = "0xAAC28C", VA = "0xAAC28C")]
		public void SetTangentPosition(Vector3 pos)
		{
		}

		[Token(Token = "0x60018C7")]
		[Address(RVA = "0xAAC2A4", Offset = "0xAAC2A4", VA = "0xAAC2A4")]
		public void SetTangent2Position(Vector3 pos)
		{
		}

		[Token(Token = "0x60018C8")]
		[Address(RVA = "0xAAC2BC", Offset = "0xAAC2BC", VA = "0xAAC2BC")]
		public SplinePoint(Vector3 p)
		{
		}

		[Token(Token = "0x60018C9")]
		[Address(RVA = "0xAAC2C4", Offset = "0xAAC2C4", VA = "0xAAC2C4")]
		public SplinePoint(Vector3 p, Vector3 t)
		{
		}

		[Token(Token = "0x60018CA")]
		[Address(RVA = "0xAAC2CC", Offset = "0xAAC2CC", VA = "0xAAC2CC")]
		public SplinePoint(Vector3 pos, Vector3 tan, Vector3 nor, float s, Color col)
		{
		}

		[Token(Token = "0x60018CB")]
		[Address(RVA = "0xAAC2FC", Offset = "0xAAC2FC", VA = "0xAAC2FC")]
		public SplinePoint(Vector3 pos, Vector3 tan, Vector3 tan2, Vector3 nor, float s, Color col)
		{
		}

		[Token(Token = "0x60018CC")]
		[Address(RVA = "0xAAC340", Offset = "0xAAC340", VA = "0xAAC340")]
		public SplinePoint(SplinePoint source)
		{
		}

		[Token(Token = "0x60018CD")]
		[Address(RVA = "0xAAC37C", Offset = "0xAAC37C", VA = "0xAAC37C")]
		private void SmoothTangent2()
		{
		}

		[Token(Token = "0x60018CE")]
		[Address(RVA = "0xAAC384", Offset = "0xAAC384", VA = "0xAAC384")]
		private void SmoothTangent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000358")]
	public class SplineResult
	{
		[Token(Token = "0x4000E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 position;

		[Token(Token = "0x4000E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 normal;

		[Token(Token = "0x4000E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 direction;

		[Token(Token = "0x4000E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Color color;

		[Token(Token = "0x4000E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float size;

		[Token(Token = "0x4000E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public double percent;

		[Token(Token = "0x1700024D")]
		public Quaternion rotation
		{
			[Token(Token = "0x60018CF")]
			[Address(RVA = "0x1A0E254", Offset = "0x1A0E254", VA = "0x1A0E254")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x1700024E")]
		public Vector3 right
		{
			[Token(Token = "0x60018D0")]
			[Address(RVA = "0x1A0E408", Offset = "0x1A0E408", VA = "0x1A0E408")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x60018D1")]
		[Address(RVA = "0x1A0E5B0", Offset = "0x1A0E5B0", VA = "0x1A0E5B0")]
		public static SplineResult Lerp(SplineResult a, SplineResult b, float t)
		{
			return null;
		}

		[Token(Token = "0x60018D2")]
		[Address(RVA = "0x1A0E814", Offset = "0x1A0E814", VA = "0x1A0E814")]
		public static SplineResult Lerp(SplineResult a, SplineResult b, double t)
		{
			return null;
		}

		[Token(Token = "0x60018D3")]
		[Address(RVA = "0x1A0A87C", Offset = "0x1A0A87C", VA = "0x1A0A87C")]
		public static void Lerp(SplineResult a, SplineResult b, double t, SplineResult target)
		{
		}

		[Token(Token = "0x60018D4")]
		[Address(RVA = "0x1A0E638", Offset = "0x1A0E638", VA = "0x1A0E638")]
		public static void Lerp(SplineResult a, SplineResult b, float t, SplineResult target)
		{
		}

		[Token(Token = "0x60018D5")]
		[Address(RVA = "0x1A0E89C", Offset = "0x1A0E89C", VA = "0x1A0E89C")]
		public void Lerp(SplineResult b, double t)
		{
		}

		[Token(Token = "0x60018D6")]
		[Address(RVA = "0x1A0E8A4", Offset = "0x1A0E8A4", VA = "0x1A0E8A4")]
		public void Lerp(SplineResult b, float t)
		{
		}

		[Token(Token = "0x60018D7")]
		[Address(RVA = "0x1A0A0EC", Offset = "0x1A0A0EC", VA = "0x1A0A0EC")]
		public void CopyFrom(SplineResult input)
		{
		}

		[Token(Token = "0x60018D8")]
		[Address(RVA = "0x19F63C8", Offset = "0x19F63C8", VA = "0x19F63C8")]
		public SplineResult()
		{
		}

		[Token(Token = "0x60018D9")]
		[Address(RVA = "0x1A0E8AC", Offset = "0x1A0E8AC", VA = "0x1A0E8AC")]
		public SplineResult(Vector3 p, Vector3 n, Vector3 d, Color c, float s, double t)
		{
		}

		[Token(Token = "0x60018DA")]
		[Address(RVA = "0x1A0A720", Offset = "0x1A0A720", VA = "0x1A0A720")]
		public SplineResult(SplineResult input)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000359")]
	public class SplineAction
	{
		[Token(Token = "0x4000E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public UnityEngine.Object target;

		[Token(Token = "0x4000E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int intValue;

		[Token(Token = "0x4000E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float floatValue;

		[Token(Token = "0x4000E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public double doubleValue;

		[Token(Token = "0x4000E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string stringValue;

		[Token(Token = "0x4000E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool boolValue;

		[Token(Token = "0x4000E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject goValue;

		[Token(Token = "0x4000E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform transformValue;

		[Token(Token = "0x4000E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private UnityAction action;

		[Token(Token = "0x4000E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private UnityAction<int> intAction;

		[Token(Token = "0x4000E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private UnityAction<float> floatAction;

		[Token(Token = "0x4000E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private UnityAction<double> doubleAction;

		[Token(Token = "0x4000E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private UnityAction<string> stringAction;

		[Token(Token = "0x4000E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private UnityAction<bool> boolAction;

		[Token(Token = "0x4000E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private UnityAction<GameObject> goAction;

		[Token(Token = "0x4000E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private UnityAction<Transform> transformAction;

		[Token(Token = "0x4000E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private MethodInfo methodInfo;

		[Token(Token = "0x4000E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private string methodName;

		[Token(Token = "0x4000E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private int paramType;

		[Token(Token = "0x60018DB")]
		[Address(RVA = "0x19FA5B0", Offset = "0x19FA5B0", VA = "0x19FA5B0")]
		public SplineAction()
		{
		}

		[Token(Token = "0x60018DC")]
		[Address(RVA = "0x19FA608", Offset = "0x19FA608", VA = "0x19FA608")]
		public SplineAction(UnityAction call)
		{
		}

		[Token(Token = "0x60018DD")]
		[Address(RVA = "0x19FA678", Offset = "0x19FA678", VA = "0x19FA678")]
		public SplineAction(UnityAction<int> call, int value)
		{
		}

		[Token(Token = "0x60018DE")]
		[Address(RVA = "0x19FA6F4", Offset = "0x19FA6F4", VA = "0x19FA6F4")]
		public SplineAction(UnityAction<float> call, float value)
		{
		}

		[Token(Token = "0x60018DF")]
		[Address(RVA = "0x19FA778", Offset = "0x19FA778", VA = "0x19FA778")]
		public SplineAction(UnityAction<double> call, double value)
		{
		}

		[Token(Token = "0x60018E0")]
		[Address(RVA = "0x19FA7FC", Offset = "0x19FA7FC", VA = "0x19FA7FC")]
		public SplineAction(UnityAction<string> call, string value)
		{
		}

		[Token(Token = "0x60018E1")]
		[Address(RVA = "0x19FA878", Offset = "0x19FA878", VA = "0x19FA878")]
		public SplineAction(UnityAction<bool> call, bool value)
		{
		}

		[Token(Token = "0x60018E2")]
		[Address(RVA = "0x19FA8F8", Offset = "0x19FA8F8", VA = "0x19FA8F8")]
		public SplineAction(UnityAction<GameObject> call, GameObject value)
		{
		}

		[Token(Token = "0x60018E3")]
		[Address(RVA = "0x19FA974", Offset = "0x19FA974", VA = "0x19FA974")]
		public SplineAction(UnityAction<Transform> call, Transform value)
		{
		}

		[Token(Token = "0x60018E4")]
		[Address(RVA = "0x19FA9F0", Offset = "0x19FA9F0", VA = "0x19FA9F0")]
		public void SetMethod(MethodInfo newMethod)
		{
		}

		[Token(Token = "0x60018E5")]
		[Address(RVA = "0x19FB4C8", Offset = "0x19FB4C8", VA = "0x19FB4C8")]
		private Type GetParamType()
		{
			return null;
		}

		[Token(Token = "0x60018E6")]
		[Address(RVA = "0x19FB600", Offset = "0x19FB600", VA = "0x19FB600")]
		public MethodInfo GetMethod()
		{
			return null;
		}

		[Token(Token = "0x60018E7")]
		[Address(RVA = "0x19FAEBC", Offset = "0x19FAEBC", VA = "0x19FAEBC")]
		private void ConstructUnityAction()
		{
		}

		[Token(Token = "0x60018E8")]
		[Address(RVA = "0x19FB7E0", Offset = "0x19FB7E0", VA = "0x19FB7E0")]
		public void Invoke()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200035A")]
	public class SplineTrigger : ScriptableObject
	{
		[Token(Token = "0x200060D")]
		public enum Type
		{
			[Token(Token = "0x4001B09")]
			Double,
			[Token(Token = "0x4001B0A")]
			Forward,
			[Token(Token = "0x4001B0B")]
			Backward
		}

		[Token(Token = "0x4000E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public Type type;

		[Token(Token = "0x4000E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9C69C4", Offset = "0x9C69C4")]
		public double position;

		[Token(Token = "0x4000E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public bool enabled;

		[Token(Token = "0x4000E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		public Color color;

		[Token(Token = "0x4000E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[HideInInspector]
		public SplineAction[] actions;

		[Token(Token = "0x4000E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject[] gameObjects;

		[Token(Token = "0x60018E9")]
		[Address(RVA = "0x1A10CBC", Offset = "0x1A10CBC", VA = "0x1A10CBC")]
		public SplineTrigger()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200035B")]
	public class Trigger
	{
		[Token(Token = "0x200060E")]
		public enum Type
		{
			[Token(Token = "0x4001B0D")]
			Double,
			[Token(Token = "0x4001B0E")]
			Forward,
			[Token(Token = "0x4001B0F")]
			Backward
		}

		[Token(Token = "0x4000E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4000E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public Type type;

		[Token(Token = "0x4000E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool workOnce;

		[Token(Token = "0x4000E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		private bool worked;

		[Token(Token = "0x4000E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9C6A44", Offset = "0x9C6A44")]
		public double position;

		[Token(Token = "0x4000E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public bool enabled;

		[Token(Token = "0x4000E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		public Color color;

		[Token(Token = "0x4000E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[HideInInspector]
		public SplineAction[] actions;

		[Token(Token = "0x4000E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject[] gameObjects;

		[Token(Token = "0x60018EA")]
		[Address(RVA = "0xFC410C", Offset = "0xFC410C", VA = "0xFC410C")]
		public void Create(Type t, UnityAction call)
		{
		}

		[Token(Token = "0x60018EB")]
		[Address(RVA = "0xFC4294", Offset = "0xFC4294", VA = "0xFC4294")]
		public void Create(Type t, UnityAction<int> call, int value)
		{
		}

		[Token(Token = "0x60018EC")]
		[Address(RVA = "0xFC4310", Offset = "0xFC4310", VA = "0xFC4310")]
		public void Create(Type t, UnityAction<float> call, float value)
		{
		}

		[Token(Token = "0x60018ED")]
		[Address(RVA = "0xFC4394", Offset = "0xFC4394", VA = "0xFC4394")]
		public void Create(Type t, UnityAction<double> call, double value)
		{
		}

		[Token(Token = "0x60018EE")]
		[Address(RVA = "0xFC4418", Offset = "0xFC4418", VA = "0xFC4418")]
		public void Create(Type t, UnityAction<string> call, string value)
		{
		}

		[Token(Token = "0x60018EF")]
		[Address(RVA = "0xFC4494", Offset = "0xFC4494", VA = "0xFC4494")]
		public void Create(Type t, UnityAction<bool> call, bool value)
		{
		}

		[Token(Token = "0x60018F0")]
		[Address(RVA = "0xFC4510", Offset = "0xFC4510", VA = "0xFC4510")]
		public void Create(Type t, UnityAction<Transform> call, Transform value)
		{
		}

		[Token(Token = "0x60018F1")]
		[Address(RVA = "0xFC458C", Offset = "0xFC458C", VA = "0xFC458C")]
		public void Create(Type t, UnityAction<GameObject> call, GameObject value)
		{
		}

		[Token(Token = "0x60018F2")]
		[Address(RVA = "0xFC4190", Offset = "0xFC4190", VA = "0xFC4190")]
		public void Create(Type t)
		{
		}

		[Token(Token = "0x60018F3")]
		[Address(RVA = "0xFC4608", Offset = "0xFC4608", VA = "0xFC4608")]
		public void ResetWorkOnce()
		{
		}

		[Token(Token = "0x60018F4")]
		[Address(RVA = "0xFC4610", Offset = "0xFC4610", VA = "0xFC4610")]
		public bool Check(double previousPercent, double currentPercent)
		{
			return default(bool);
		}

		[Token(Token = "0x60018F5")]
		[Address(RVA = "0xFC46B0", Offset = "0xFC46B0", VA = "0xFC46B0")]
		public void Invoke()
		{
		}

		[Token(Token = "0x60018F6")]
		[Address(RVA = "0xFC474C", Offset = "0xFC474C", VA = "0xFC474C")]
		private void AddAction()
		{
		}

		[Token(Token = "0x60018F7")]
		[Address(RVA = "0xFC4878", Offset = "0xFC4878", VA = "0xFC4878")]
		public void AddListener(MonoBehaviour behavior, string method, object arg)
		{
		}

		[Token(Token = "0x60018F8")]
		[Address(RVA = "0xFC41F4", Offset = "0xFC41F4", VA = "0xFC41F4")]
		public void AddAction(SplineAction action)
		{
		}

		[Token(Token = "0x60018F9")]
		[Address(RVA = "0xFC5760", Offset = "0xFC5760", VA = "0xFC5760")]
		public Trigger()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200035C")]
	public class TransformModule
	{
		[Token(Token = "0x4000E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		[HideInInspector]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x9C6AB4", Offset = "0x9C6AB4")]
		private Vector2 _offset;

		[Token(Token = "0x4000E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[HideInInspector]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x9C6B10", Offset = "0x9C6B10")]
		private Vector3 _rotationOffset;

		[Token(Token = "0x4000E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		[HideInInspector]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x9C6B6C", Offset = "0x9C6B6C")]
		private Vector3 _baseScale;

		[Token(Token = "0x4000E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private SplineResult _splineResult;

		[Token(Token = "0x4000E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public CustomRotationModule customRotation;

		[Token(Token = "0x4000E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public CustomOffsetModule customOffset;

		[Token(Token = "0x4000E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool applyPositionX;

		[Token(Token = "0x4000E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool applyPositionY;

		[Token(Token = "0x4000E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		public bool applyPositionZ;

		[Token(Token = "0x4000E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Spline.Direction direction;

		[Token(Token = "0x4000E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool applyRotationX;

		[Token(Token = "0x4000E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool applyRotationY;

		[Token(Token = "0x4000E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		public bool applyRotationZ;

		[Token(Token = "0x4000E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
		public bool applyScaleX;

		[Token(Token = "0x4000E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool applyScaleY;

		[Token(Token = "0x4000E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		public bool applyScaleZ;

		[Token(Token = "0x4000E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public SplineUser targetUser;

		[Token(Token = "0x4000E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3 position;

		[Token(Token = "0x4000E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static Quaternion rotation;

		[Token(Token = "0x1700024F")]
		public Vector2 offset
		{
			[Token(Token = "0x60018FA")]
			[Address(RVA = "0xFC2748", Offset = "0xFC2748", VA = "0xFC2748")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x60018FB")]
			[Address(RVA = "0xFC2750", Offset = "0xFC2750", VA = "0xFC2750")]
			set
			{
			}
		}

		[Token(Token = "0x17000250")]
		public Vector3 rotationOffset
		{
			[Token(Token = "0x60018FC")]
			[Address(RVA = "0xFC2858", Offset = "0xFC2858", VA = "0xFC2858")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60018FD")]
			[Address(RVA = "0xFC2864", Offset = "0xFC2864", VA = "0xFC2864")]
			set
			{
			}
		}

		[Token(Token = "0x17000251")]
		public Vector3 baseScale
		{
			[Token(Token = "0x60018FE")]
			[Address(RVA = "0xFC298C", Offset = "0xFC298C", VA = "0xFC298C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60018FF")]
			[Address(RVA = "0xFC2998", Offset = "0xFC2998", VA = "0xFC2998")]
			set
			{
			}
		}

		[Token(Token = "0x17000252")]
		public SplineResult splineResult
		{
			[Token(Token = "0x6001900")]
			[Address(RVA = "0xFC2AC0", Offset = "0xFC2AC0", VA = "0xFC2AC0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001901")]
			[Address(RVA = "0xFC2B2C", Offset = "0xFC2B2C", VA = "0xFC2B2C")]
			set
			{
			}
		}

		[Token(Token = "0x17000253")]
		public bool applyPosition
		{
			[Token(Token = "0x6001902")]
			[Address(RVA = "0xFC2BBC", Offset = "0xFC2BBC", VA = "0xFC2BBC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001903")]
			[Address(RVA = "0xFC2BE4", Offset = "0xFC2BE4", VA = "0xFC2BE4")]
			set
			{
			}
		}

		[Token(Token = "0x17000254")]
		public bool applyRotation
		{
			[Token(Token = "0x6001904")]
			[Address(RVA = "0xFC2BF8", Offset = "0xFC2BF8", VA = "0xFC2BF8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001905")]
			[Address(RVA = "0xFC2C20", Offset = "0xFC2C20", VA = "0xFC2C20")]
			set
			{
			}
		}

		[Token(Token = "0x17000255")]
		public bool applyScale
		{
			[Token(Token = "0x6001906")]
			[Address(RVA = "0xFC2C34", Offset = "0xFC2C34", VA = "0xFC2C34")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001907")]
			[Address(RVA = "0xFC2C5C", Offset = "0xFC2C5C", VA = "0xFC2C5C")]
			set
			{
			}
		}

		[Token(Token = "0x6001908")]
		[Address(RVA = "0xFC2C70", Offset = "0xFC2C70", VA = "0xFC2C70")]
		public void ApplyTransform(Transform input)
		{
		}

		[Token(Token = "0x6001909")]
		[Address(RVA = "0xFC3A74", Offset = "0xFC3A74", VA = "0xFC3A74")]
		public void ApplyRigidbody(Rigidbody input)
		{
		}

		[Token(Token = "0x600190A")]
		[Address(RVA = "0xFC3CFC", Offset = "0xFC3CFC", VA = "0xFC3CFC")]
		public void ApplyRigidbody2D(Rigidbody2D input)
		{
		}

		[Token(Token = "0x600190B")]
		[Address(RVA = "0xFC2DC8", Offset = "0xFC2DC8", VA = "0xFC2DC8")]
		private Vector3 GetPosition(Vector3 inputPosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600190C")]
		[Address(RVA = "0xFC3160", Offset = "0xFC3160", VA = "0xFC3160")]
		private Quaternion GetRotation(Quaternion inputRotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600190D")]
		[Address(RVA = "0xFC39C4", Offset = "0xFC39C4", VA = "0xFC39C4")]
		private Vector3 GetScale(Vector3 inputScale)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600190E")]
		[Address(RVA = "0xFC3FB0", Offset = "0xFC3FB0", VA = "0xFC3FB0")]
		public TransformModule()
		{
		}
	}
}
namespace Dreamteck.Splines.Primitives
{
	[Token(Token = "0x200035D")]
	public class Capsule : SplinePrimitive
	{
		[Token(Token = "0x4000E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float radius;

		[Token(Token = "0x4000E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float height;

		[Token(Token = "0x6001910")]
		[Address(RVA = "0x17C8878", Offset = "0x17C8878", VA = "0x17C8878", Slot = "4")]
		protected override void Generate()
		{
		}

		[Token(Token = "0x6001911")]
		[Address(RVA = "0x17C9300", Offset = "0x17C9300", VA = "0x17C9300")]
		public Capsule()
		{
		}
	}
	[Token(Token = "0x200035E")]
	public class Ellipse : SplinePrimitive
	{
		[Token(Token = "0x4000E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float xRadius;

		[Token(Token = "0x4000E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float yRadius;

		[Token(Token = "0x6001912")]
		[Address(RVA = "0x17C9314", Offset = "0x17C9314", VA = "0x17C9314", Slot = "4")]
		protected override void Generate()
		{
		}

		[Token(Token = "0x6001913")]
		[Address(RVA = "0x17B2498", Offset = "0x17B2498", VA = "0x17B2498")]
		public Ellipse()
		{
		}
	}
	[Token(Token = "0x200035F")]
	public class Line : SplinePrimitive
	{
		[Token(Token = "0x4000E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool mirror;

		[Token(Token = "0x4000E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float length;

		[Token(Token = "0x4000E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int segments;

		[Token(Token = "0x6001914")]
		[Address(RVA = "0x17C9924", Offset = "0x17C9924", VA = "0x17C9924", Slot = "4")]
		protected override void Generate()
		{
		}

		[Token(Token = "0x6001915")]
		[Address(RVA = "0x17C9BF4", Offset = "0x17C9BF4", VA = "0x17C9BF4")]
		public Line()
		{
		}
	}
	[Token(Token = "0x2000360")]
	public class Ngon : SplinePrimitive
	{
		[Token(Token = "0x4000E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float radius;

		[Token(Token = "0x4000E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int sides;

		[Token(Token = "0x6001916")]
		[Address(RVA = "0x17C9C10", Offset = "0x17C9C10", VA = "0x17C9C10", Slot = "4")]
		protected override void Generate()
		{
		}

		[Token(Token = "0x6001917")]
		[Address(RVA = "0x17C9EA4", Offset = "0x17C9EA4", VA = "0x17C9EA4")]
		public Ngon()
		{
		}
	}
	[Token(Token = "0x2000361")]
	public class Rectangle : SplinePrimitive
	{
		[Token(Token = "0x4000E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector2 size;

		[Token(Token = "0x6001918")]
		[Address(RVA = "0x17C9EB8", Offset = "0x17C9EB8", VA = "0x17C9EB8", Slot = "4")]
		protected override void Generate()
		{
		}

		[Token(Token = "0x6001919")]
		[Address(RVA = "0x17B22F8", Offset = "0x17B22F8", VA = "0x17B22F8")]
		public Rectangle()
		{
		}
	}
	[Token(Token = "0x2000362")]
	public class RoundedRectangle : SplinePrimitive
	{
		[Token(Token = "0x4000E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector2 size;

		[Token(Token = "0x4000E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float xRadius;

		[Token(Token = "0x4000E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float yRadius;

		[Token(Token = "0x600191A")]
		[Address(RVA = "0x17CA368", Offset = "0x17CA368", VA = "0x17CA368", Slot = "4")]
		protected override void Generate()
		{
		}

		[Token(Token = "0x600191B")]
		[Address(RVA = "0x17B236C", Offset = "0x17B236C", VA = "0x17B236C")]
		public RoundedRectangle()
		{
		}
	}
	[Token(Token = "0x2000363")]
	public class Spiral : SplinePrimitive
	{
		[Token(Token = "0x4000E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float startRadius;

		[Token(Token = "0x4000E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float endRadius;

		[Token(Token = "0x4000E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float stretch;

		[Token(Token = "0x4000E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int iterations;

		[Token(Token = "0x4000E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AnimationCurve curve;

		[Token(Token = "0x600191C")]
		[Address(RVA = "0x19F2D7C", Offset = "0x19F2D7C", VA = "0x19F2D7C", Slot = "4")]
		protected override void Generate()
		{
		}

		[Token(Token = "0x600191D")]
		[Address(RVA = "0x19F3698", Offset = "0x19F3698", VA = "0x19F3698")]
		public Spiral()
		{
		}
	}
	[Token(Token = "0x2000364")]
	public class SplinePrimitive
	{
		[Token(Token = "0x200060F")]
		public enum Axis
		{
			[Token(Token = "0x4001B11")]
			X,
			[Token(Token = "0x4001B12")]
			Y,
			[Token(Token = "0x4001B13")]
			Z,
			[Token(Token = "0x4001B14")]
			nX,
			[Token(Token = "0x4001B15")]
			nY,
			[Token(Token = "0x4001B16")]
			nZ
		}

		[Token(Token = "0x4000E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected bool closed;

		[Token(Token = "0x4000E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected SplinePoint[] points;

		[Token(Token = "0x4000E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected Spline.Type type;

		[Token(Token = "0x4000E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Axis axis;

		[Token(Token = "0x4000E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 offset;

		[Token(Token = "0x4000E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 rotation;

		[Token(Token = "0x600191E")]
		[Address(RVA = "0x19F34A0", Offset = "0x19F34A0", VA = "0x19F34A0", Slot = "4")]
		protected virtual void Generate()
		{
		}

		[Token(Token = "0x600191F")]
		[Address(RVA = "0x19F37B4", Offset = "0x19F37B4", VA = "0x19F37B4")]
		public Spline GetSpline()
		{
			return null;
		}

		[Token(Token = "0x6001920")]
		[Address(RVA = "0x19F3EF8", Offset = "0x19F3EF8", VA = "0x19F3EF8")]
		public void UpdateSpline(Spline spline)
		{
		}

		[Token(Token = "0x6001921")]
		[Address(RVA = "0x19F402C", Offset = "0x19F402C", VA = "0x19F402C")]
		public SplineComputer CreateSplineComputer(string name, Vector3 position, Quaternion rotation)
		{
			return null;
		}

		[Token(Token = "0x6001922")]
		[Address(RVA = "0x19F4A90", Offset = "0x19F4A90", VA = "0x19F4A90")]
		public void UpdateSplineComputer(SplineComputer comp)
		{
		}

		[Token(Token = "0x6001923")]
		[Address(RVA = "0x19F385C", Offset = "0x19F385C", VA = "0x19F385C")]
		private void ApplyOffset()
		{
		}

		[Token(Token = "0x6001924")]
		[Address(RVA = "0x19F34A4", Offset = "0x19F34A4", VA = "0x19F34A4")]
		protected void CreatePoints(int count, SplinePoint.Type type)
		{
		}

		[Token(Token = "0x6001925")]
		[Address(RVA = "0x19F4BD4", Offset = "0x19F4BD4", VA = "0x19F4BD4")]
		protected Vector3 GetNormal()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001926")]
		[Address(RVA = "0x19F370C", Offset = "0x19F370C", VA = "0x19F370C")]
		public SplinePrimitive()
		{
		}
	}
	[Token(Token = "0x2000365")]
	public class Star : SplinePrimitive
	{
		[Token(Token = "0x4000E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float radius;

		[Token(Token = "0x4000E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float depth;

		[Token(Token = "0x4000E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int sides;

		[Token(Token = "0x6001927")]
		[Address(RVA = "0x19F4EA8", Offset = "0x19F4EA8", VA = "0x19F4EA8", Slot = "4")]
		protected override void Generate()
		{
		}

		[Token(Token = "0x6001928")]
		[Address(RVA = "0x19F5198", Offset = "0x19F5198", VA = "0x19F5198")]
		public Star()
		{
		}
	}
}
namespace Dreamteck.Splines.IO
{
	[Token(Token = "0x2000366")]
	public class CSV : SplineParser
	{
		[Token(Token = "0x2000610")]
		public enum ColumnType
		{
			[Token(Token = "0x4001B18")]
			Position,
			[Token(Token = "0x4001B19")]
			Tangent,
			[Token(Token = "0x4001B1A")]
			Tangent2,
			[Token(Token = "0x4001B1B")]
			Normal,
			[Token(Token = "0x4001B1C")]
			Size,
			[Token(Token = "0x4001B1D")]
			Color
		}

		[Token(Token = "0x4000E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<ColumnType> columns;

		[Token(Token = "0x6001929")]
		[Address(RVA = "0x17AAE10", Offset = "0x17AAE10", VA = "0x17AAE10")]
		public CSV(SplineComputer computer)
		{
		}

		[Token(Token = "0x600192A")]
		[Address(RVA = "0x17AB240", Offset = "0x17AB240", VA = "0x17AB240")]
		public CSV(string filePath, [Optional] List<ColumnType> customColumns)
		{
		}

		[Token(Token = "0x600192B")]
		[Address(RVA = "0x17AB5F4", Offset = "0x17AB5F4", VA = "0x17AB5F4")]
		private void Read(string[] lines)
		{
		}

		[Token(Token = "0x600192C")]
		[Address(RVA = "0x17AC3A8", Offset = "0x17AC3A8", VA = "0x17AC3A8")]
		public SplineComputer CreateSplineComputer(Vector3 position, Quaternion rotation)
		{
			return null;
		}

		[Token(Token = "0x600192D")]
		[Address(RVA = "0x17AC6C8", Offset = "0x17AC6C8", VA = "0x17AC6C8")]
		public Spline CreateSpline()
		{
			return null;
		}

		[Token(Token = "0x600192E")]
		[Address(RVA = "0x17AC7B0", Offset = "0x17AC7B0", VA = "0x17AC7B0")]
		public void FlatX()
		{
		}

		[Token(Token = "0x600192F")]
		[Address(RVA = "0x17AC9D4", Offset = "0x17AC9D4", VA = "0x17AC9D4")]
		public void FlatY()
		{
		}

		[Token(Token = "0x6001930")]
		[Address(RVA = "0x17ACB9C", Offset = "0x17ACB9C", VA = "0x17ACB9C")]
		public void FlatZ()
		{
		}

		[Token(Token = "0x6001931")]
		[Address(RVA = "0x17ACDA8", Offset = "0x17ACDA8", VA = "0x17ACDA8")]
		private void AddTitle(ref string[] content, string title)
		{
		}

		[Token(Token = "0x6001932")]
		[Address(RVA = "0x17ACEAC", Offset = "0x17ACEAC", VA = "0x17ACEAC")]
		private void AddVector3Title(ref string[] content, string prefix)
		{
		}

		[Token(Token = "0x6001933")]
		[Address(RVA = "0x17AD104", Offset = "0x17AD104", VA = "0x17AD104")]
		private void AddColorTitle(ref string[] content, string prefix)
		{
		}

		[Token(Token = "0x6001934")]
		[Address(RVA = "0x17AD3F8", Offset = "0x17AD3F8", VA = "0x17AD3F8")]
		private void AddVector3(ref string[] content, int index, Vector3 vector)
		{
		}

		[Token(Token = "0x6001935")]
		[Address(RVA = "0x17AD584", Offset = "0x17AD584", VA = "0x17AD584")]
		private void AddColor(ref string[] content, int index, Color color)
		{
		}

		[Token(Token = "0x6001936")]
		[Address(RVA = "0x17AD448", Offset = "0x17AD448", VA = "0x17AD448")]
		private void AddFloat(ref string[] content, int index, float value)
		{
		}

		[Token(Token = "0x6001937")]
		[Address(RVA = "0x17AD5F0", Offset = "0x17AD5F0", VA = "0x17AD5F0")]
		public void Write(string filePath)
		{
		}
	}
	[Token(Token = "0x2000367")]
	public class SplineParser
	{
		[Token(Token = "0x2000611")]
		internal class Transformation
		{
			[Token(Token = "0x4001B1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			protected static Matrix4x4 matrix;

			[Token(Token = "0x600261F")]
			[Address(RVA = "0x17B637C", Offset = "0x17B637C", VA = "0x17B637C")]
			internal static void ResetMatrix()
			{
			}

			[Token(Token = "0x6002620")]
			[Address(RVA = "0x17B671C", Offset = "0x17B671C", VA = "0x17B671C", Slot = "4")]
			internal virtual void Push()
			{
			}

			[Token(Token = "0x6002621")]
			[Address(RVA = "0x17B64A8", Offset = "0x17B64A8", VA = "0x17B64A8")]
			internal static void Apply(SplinePoint[] points)
			{
			}

			[Token(Token = "0x6002622")]
			[Address(RVA = "0x17B5A8C", Offset = "0x17B5A8C", VA = "0x17B5A8C")]
			public Transformation()
			{
			}
		}

		[Token(Token = "0x2000612")]
		internal class Translate : Transformation
		{
			[Token(Token = "0x4001B1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Vector2 offset;

			[Token(Token = "0x6002624")]
			[Address(RVA = "0x17B3420", Offset = "0x17B3420", VA = "0x17B3420")]
			public Translate(Vector2 o)
			{
			}

			[Token(Token = "0x6002625")]
			[Address(RVA = "0x17B6724", Offset = "0x17B6724", VA = "0x17B6724", Slot = "4")]
			internal override void Push()
			{
			}
		}

		[Token(Token = "0x2000613")]
		internal class Rotate : Transformation
		{
			[Token(Token = "0x4001B20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private float angle;

			[Token(Token = "0x6002626")]
			[Address(RVA = "0x17B34CC", Offset = "0x17B34CC", VA = "0x17B34CC")]
			public Rotate(float a)
			{
			}

			[Token(Token = "0x6002627")]
			[Address(RVA = "0x17B5BB8", Offset = "0x17B5BB8", VA = "0x17B5BB8", Slot = "4")]
			internal override void Push()
			{
			}
		}

		[Token(Token = "0x2000614")]
		internal class Scale : Transformation
		{
			[Token(Token = "0x4001B21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Vector2 multiplier;

			[Token(Token = "0x6002628")]
			[Address(RVA = "0x17B3548", Offset = "0x17B3548", VA = "0x17B3548")]
			public Scale(Vector2 s)
			{
			}

			[Token(Token = "0x6002629")]
			[Address(RVA = "0x17B5DC4", Offset = "0x17B5DC4", VA = "0x17B5DC4", Slot = "4")]
			internal override void Push()
			{
			}
		}

		[Token(Token = "0x2000615")]
		internal class SkewX : Transformation
		{
			[Token(Token = "0x4001B22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private float amount;

			[Token(Token = "0x600262A")]
			[Address(RVA = "0x17B35F4", Offset = "0x17B35F4", VA = "0x17B35F4")]
			public SkewX(float a)
			{
			}

			[Token(Token = "0x600262B")]
			[Address(RVA = "0x17B5FD4", Offset = "0x17B5FD4", VA = "0x17B5FD4", Slot = "4")]
			internal override void Push()
			{
			}
		}

		[Token(Token = "0x2000616")]
		internal class SkewY : Transformation
		{
			[Token(Token = "0x4001B23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private float amount;

			[Token(Token = "0x600262C")]
			[Address(RVA = "0x17B3670", Offset = "0x17B3670", VA = "0x17B3670")]
			public SkewY(float a)
			{
			}

			[Token(Token = "0x600262D")]
			[Address(RVA = "0x17B61A8", Offset = "0x17B61A8", VA = "0x17B61A8", Slot = "4")]
			internal override void Push()
			{
			}
		}

		[Token(Token = "0x2000617")]
		internal class MatrixTransform : Transformation
		{
			[Token(Token = "0x4001B24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Matrix4x4 transformMatrix;

			[Token(Token = "0x600262E")]
			[Address(RVA = "0x17B36EC", Offset = "0x17B36EC", VA = "0x17B36EC")]
			public MatrixTransform(float a, float b, float c, float d, float e, float f)
			{
			}

			[Token(Token = "0x600262F")]
			[Address(RVA = "0x17B5A94", Offset = "0x17B5A94", VA = "0x17B5A94", Slot = "4")]
			internal override void Push()
			{
			}
		}

		[Token(Token = "0x2000618")]
		internal class SplineDefinition
		{
			[Token(Token = "0x4001B25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal string name;

			[Token(Token = "0x4001B26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal Spline.Type type;

			[Token(Token = "0x4001B27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal List<SplinePoint> points;

			[Token(Token = "0x4001B28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal bool closed;

			[Token(Token = "0x4001B29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal Vector3 position;

			[Token(Token = "0x4001B2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal Vector3 tangent;

			[Token(Token = "0x4001B2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			internal Vector3 tangent2;

			[Token(Token = "0x4001B2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			internal Vector3 normal;

			[Token(Token = "0x4001B2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			internal float size;

			[Token(Token = "0x4001B2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			internal Color color;

			[Token(Token = "0x17000489")]
			internal int pointCount
			{
				[Token(Token = "0x6002630")]
				[Address(RVA = "0x17AC974", Offset = "0x17AC974", VA = "0x17AC974")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x6002631")]
			[Address(RVA = "0x17AB4D8", Offset = "0x17AB4D8", VA = "0x17AB4D8")]
			internal SplineDefinition(string n, Spline.Type t)
			{
			}

			[Token(Token = "0x6002632")]
			[Address(RVA = "0x17AB0AC", Offset = "0x17AB0AC", VA = "0x17AB0AC")]
			internal SplineDefinition(string n, Spline spline)
			{
			}

			[Token(Token = "0x6002633")]
			[Address(RVA = "0x17B510C", Offset = "0x17B510C", VA = "0x17B510C")]
			internal SplinePoint GetLastPoint()
			{
				return default(SplinePoint);
			}

			[Token(Token = "0x6002634")]
			[Address(RVA = "0x17B51F4", Offset = "0x17B51F4", VA = "0x17B51F4")]
			internal void SetLastPoint(SplinePoint point)
			{
			}

			[Token(Token = "0x6002635")]
			[Address(RVA = "0x17B26D0", Offset = "0x17B26D0", VA = "0x17B26D0")]
			internal void CreateClosingPoint()
			{
			}

			[Token(Token = "0x6002636")]
			[Address(RVA = "0x17AC288", Offset = "0x17AC288", VA = "0x17AC288")]
			internal void CreateSmooth()
			{
			}

			[Token(Token = "0x6002637")]
			[Address(RVA = "0x17B52E0", Offset = "0x17B52E0", VA = "0x17B52E0")]
			internal void CreateBroken()
			{
			}

			[Token(Token = "0x6002638")]
			[Address(RVA = "0x17B2484", Offset = "0x17B2484", VA = "0x17B2484")]
			internal void CreateLinear()
			{
			}

			[Token(Token = "0x6002639")]
			[Address(RVA = "0x17AC42C", Offset = "0x17AC42C", VA = "0x17AC42C")]
			internal SplineComputer CreateSplineComputer(Vector3 position, Quaternion rotation)
			{
				return null;
			}

			[Token(Token = "0x600263A")]
			[Address(RVA = "0x17AC6F4", Offset = "0x17AC6F4", VA = "0x17AC6F4")]
			internal Spline CreateSpline()
			{
				return null;
			}

			[Token(Token = "0x600263B")]
			[Address(RVA = "0x17B5494", Offset = "0x17B5494", VA = "0x17B5494")]
			internal void Transform(List<Transformation> trs)
			{
			}
		}

		[Token(Token = "0x4000E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected string fileName;

		[Token(Token = "0x4000E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal SplineDefinition buffer;

		[Token(Token = "0x17000256")]
		public string name
		{
			[Token(Token = "0x6001938")]
			[Address(RVA = "0x17B59B4", Offset = "0x17B59B4", VA = "0x17B59B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001939")]
		[Address(RVA = "0x17B4490", Offset = "0x17B4490", VA = "0x17B4490")]
		internal Vector2[] ParseVector2(string coord)
		{
			return null;
		}

		[Token(Token = "0x600193A")]
		[Address(RVA = "0x17B470C", Offset = "0x17B470C", VA = "0x17B470C")]
		internal float[] ParseFloat(string coord)
		{
			return null;
		}

		[Token(Token = "0x600193B")]
		[Address(RVA = "0x17B24A8", Offset = "0x17B24A8", VA = "0x17B24A8")]
		internal List<float> ParseFloatArray(string content)
		{
			return null;
		}

		[Token(Token = "0x600193C")]
		[Address(RVA = "0x17B59BC", Offset = "0x17B59BC", VA = "0x17B59BC")]
		public bool IsWHiteSpace(string s)
		{
			return default(bool);
		}

		[Token(Token = "0x600193D")]
		[Address(RVA = "0x17AB054", Offset = "0x17AB054", VA = "0x17AB054")]
		public SplineParser()
		{
		}
	}
	[Token(Token = "0x2000368")]
	public class SVG : SplineParser
	{
		[Token(Token = "0x2000619")]
		public enum Axis
		{
			[Token(Token = "0x4001B30")]
			X,
			[Token(Token = "0x4001B31")]
			Y,
			[Token(Token = "0x4001B32")]
			Z
		}

		[Token(Token = "0x200061A")]
		internal class PathSegment
		{
			[Token(Token = "0x20006E4")]
			internal enum Type
			{
				[Token(Token = "0x4001E23")]
				Cubic,
				[Token(Token = "0x4001E24")]
				CubicShort,
				[Token(Token = "0x4001E25")]
				Quadratic,
				[Token(Token = "0x4001E26")]
				QuadraticShort
			}

			[Token(Token = "0x4001B33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Vector3 startTangent;

			[Token(Token = "0x4001B34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal Vector3 endTangent;

			[Token(Token = "0x4001B35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal Vector3 endPoint;

			[Token(Token = "0x600263C")]
			[Address(RVA = "0x17B57F0", Offset = "0x17B57F0", VA = "0x17B57F0")]
			internal PathSegment(Vector2 s, Vector2 e, Vector2 c)
			{
			}

			[Token(Token = "0x600263D")]
			[Address(RVA = "0x17B5758", Offset = "0x17B5758", VA = "0x17B5758")]
			internal PathSegment()
			{
			}
		}

		[Token(Token = "0x200061B")]
		public enum Element
		{
			[Token(Token = "0x4001B37")]
			All,
			[Token(Token = "0x4001B38")]
			Path,
			[Token(Token = "0x4001B39")]
			Polygon,
			[Token(Token = "0x4001B3A")]
			Ellipse,
			[Token(Token = "0x4001B3B")]
			Rectangle,
			[Token(Token = "0x4001B3C")]
			Line
		}

		[Serializable]
		[Token(Token = "0x200061C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBA24", Offset = "0x9BBA24")]
		private sealed class <>c
		{
			[Token(Token = "0x4001B3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001B3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<string, bool> <>9__23_0;

			[Token(Token = "0x600263F")]
			[Address(RVA = "0x17B5988", Offset = "0x17B5988", VA = "0x17B5988")]
			public <>c()
			{
			}

			[Token(Token = "0x6002640")]
			[Address(RVA = "0x17B5990", Offset = "0x17B5990", VA = "0x17B5990")]
			internal bool <ReadPath>b__23_0(string t)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<SplineDefinition> paths;

		[Token(Token = "0x4000E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<SplineDefinition> polygons;

		[Token(Token = "0x4000E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<SplineDefinition> ellipses;

		[Token(Token = "0x4000E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<SplineDefinition> rectangles;

		[Token(Token = "0x4000E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<SplineDefinition> lines;

		[Token(Token = "0x4000E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Transformation> transformBuffer;

		[Token(Token = "0x600193E")]
		[Address(RVA = "0x17ADB70", Offset = "0x17ADB70", VA = "0x17ADB70")]
		public SVG(string filePath)
		{
		}

		[Token(Token = "0x600193F")]
		[Address(RVA = "0x17ADF2C", Offset = "0x17ADF2C", VA = "0x17ADF2C")]
		public SVG(List<SplineComputer> computers)
		{
		}

		[Token(Token = "0x6001940")]
		[Address(RVA = "0x17AE300", Offset = "0x17AE300", VA = "0x17AE300")]
		public void Write(string filePath, Axis ax = Axis.Z)
		{
		}

		[Token(Token = "0x6001941")]
		[Address(RVA = "0x17AF50C", Offset = "0x17AF50C", VA = "0x17AF50C")]
		private Vector2 MapPoint(Vector3 original, Axis ax)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001942")]
		[Address(RVA = "0x17ADE98", Offset = "0x17ADE98", VA = "0x17ADE98")]
		private void Read(XmlDocument doc)
		{
		}

		[Token(Token = "0x6001943")]
		[Address(RVA = "0x17AF5F4", Offset = "0x17AF5F4", VA = "0x17AF5F4")]
		private void Traverse(XmlNodeList nodes)
		{
		}

		[Token(Token = "0x6001944")]
		[Address(RVA = "0x17B1488", Offset = "0x17B1488", VA = "0x17B1488")]
		public List<SplineComputer> CreateSplineComputers(Vector3 position, Quaternion rotation, Element elements = Element.All)
		{
			return null;
		}

		[Token(Token = "0x6001945")]
		[Address(RVA = "0x17B1B74", Offset = "0x17B1B74", VA = "0x17B1B74")]
		public List<Spline> CreateSplines(Element elements = Element.All)
		{
			return null;
		}

		[Token(Token = "0x6001946")]
		[Address(RVA = "0x17B0F48", Offset = "0x17B0F48", VA = "0x17B0F48")]
		private int ReadRectangle(XmlNode rectNode)
		{
			return default(int);
		}

		[Token(Token = "0x6001947")]
		[Address(RVA = "0x17B0C0C", Offset = "0x17B0C0C", VA = "0x17B0C0C")]
		private int ReadLine(XmlNode lineNode)
		{
			return default(int);
		}

		[Token(Token = "0x6001948")]
		[Address(RVA = "0x17B074C", Offset = "0x17B074C", VA = "0x17B074C")]
		private int ReadEllipse(XmlNode ellipseNode)
		{
			return default(int);
		}

		[Token(Token = "0x6001949")]
		[Address(RVA = "0x17B03D8", Offset = "0x17B03D8", VA = "0x17B03D8")]
		private int ReadPolygon(XmlNode polyNode, bool closed)
		{
			return default(int);
		}

		[Token(Token = "0x600194A")]
		[Address(RVA = "0x17AFBF0", Offset = "0x17AFBF0", VA = "0x17AFBF0")]
		private int ParseTransformation(XmlNode node)
		{
			return default(int);
		}

		[Token(Token = "0x600194B")]
		[Address(RVA = "0x17B27C8", Offset = "0x17B27C8", VA = "0x17B27C8")]
		private List<Transformation> ParseTransformations(string transformContent)
		{
			return null;
		}

		[Token(Token = "0x600194C")]
		[Address(RVA = "0x17AFCD0", Offset = "0x17AFCD0", VA = "0x17AFCD0")]
		private int ReadPath(XmlNode pathNode)
		{
			return default(int);
		}

		[Token(Token = "0x600194D")]
		[Address(RVA = "0x17B3878", Offset = "0x17B3878", VA = "0x17B3878")]
		private void PathStart(string name, string coords, bool relative)
		{
		}

		[Token(Token = "0x600194E")]
		[Address(RVA = "0x17B3A5C", Offset = "0x17B3A5C", VA = "0x17B3A5C")]
		private void PathClose()
		{
		}

		[Token(Token = "0x600194F")]
		[Address(RVA = "0x17B3A8C", Offset = "0x17B3A8C", VA = "0x17B3A8C")]
		private void PathLineTo(string coords, bool relative)
		{
		}

		[Token(Token = "0x6001950")]
		[Address(RVA = "0x17B3C34", Offset = "0x17B3C34", VA = "0x17B3C34")]
		private void PathHorizontalLineTo(string coords, bool relative)
		{
		}

		[Token(Token = "0x6001951")]
		[Address(RVA = "0x17B3D10", Offset = "0x17B3D10", VA = "0x17B3D10")]
		private void PathVerticalLineTo(string coords, bool relative)
		{
		}

		[Token(Token = "0x6001952")]
		[Address(RVA = "0x17B3DEC", Offset = "0x17B3DEC", VA = "0x17B3DEC")]
		private void PathCurveTo(string coords, PathSegment.Type type, bool relative)
		{
		}

		[Token(Token = "0x6001953")]
		[Address(RVA = "0x17B23EC", Offset = "0x17B23EC", VA = "0x17B23EC")]
		private void WriteBufferTo(List<SplineDefinition> list)
		{
		}

		[Token(Token = "0x6001954")]
		[Address(RVA = "0x17B4830", Offset = "0x17B4830", VA = "0x17B4830")]
		private PathSegment[] ParsePathSegment(string coord, PathSegment.Type type)
		{
			return null;
		}

		[Token(Token = "0x6001955")]
		[Address(RVA = "0x17AED00", Offset = "0x17AED00", VA = "0x17AED00")]
		private string EncodePath(SplineDefinition definition, Axis ax)
		{
			return null;
		}

		[Token(Token = "0x6001956")]
		[Address(RVA = "0x17AEA14", Offset = "0x17AEA14", VA = "0x17AEA14")]
		private string EncodePolygon(SplineDefinition definition, Axis ax)
		{
			return null;
		}

		[Token(Token = "0x6001957")]
		[Address(RVA = "0x17B2198", Offset = "0x17B2198", VA = "0x17B2198")]
		private string GetAttributeContent(XmlNode node, string attributeName)
		{
			return null;
		}
	}
}
namespace StringLeakTest
{
	[Token(Token = "0x2000369")]
	public static class StringBuilderExtensions
	{
		[Token(Token = "0x4000E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly char[] ms_digits;

		[Token(Token = "0x4000E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly uint ms_default_decimal_places;

		[Token(Token = "0x4000E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static readonly char ms_default_pad_char;

		[Token(Token = "0x6001958")]
		public static StringBuilder ConcatFormat<A>(this StringBuilder string_builder, string format_string, A arg1) where A : IConvertible
		{
			return null;
		}

		[Token(Token = "0x6001959")]
		public static StringBuilder ConcatFormat<A, B>(this StringBuilder string_builder, string format_string, A arg1, B arg2) where A : IConvertible where B : IConvertible
		{
			return null;
		}

		[Token(Token = "0x600195A")]
		public static StringBuilder ConcatFormat<A, B, C>(this StringBuilder string_builder, string format_string, A arg1, B arg2, C arg3) where A : IConvertible where B : IConvertible where C : IConvertible
		{
			return null;
		}

		[Token(Token = "0x600195B")]
		public static StringBuilder ConcatFormat<A, B, C, D>(this StringBuilder string_builder, string format_string, A arg1, B arg2, C arg3, D arg4) where A : IConvertible where B : IConvertible where C : IConvertible where D : IConvertible
		{
			return null;
		}

		[Token(Token = "0x600195C")]
		private static void ConcatFormatValue<T>(this StringBuilder string_builder, T arg, uint padding, uint base_value, uint decimal_places) where T : IConvertible
		{
		}

		[Token(Token = "0x600195D")]
		[Address(RVA = "0xD7CE0C", Offset = "0xD7CE0C", VA = "0xD7CE0C")]
		public static StringBuilder Concat(this StringBuilder string_builder, uint uint_val, uint pad_amount, char pad_char, uint base_val)
		{
			return null;
		}

		[Token(Token = "0x600195E")]
		[Address(RVA = "0xD7CFC8", Offset = "0xD7CFC8", VA = "0xD7CFC8")]
		public static StringBuilder Concat(this StringBuilder string_builder, uint uint_val)
		{
			return null;
		}

		[Token(Token = "0x600195F")]
		[Address(RVA = "0xD7D050", Offset = "0xD7D050", VA = "0xD7D050")]
		public static StringBuilder Concat(this StringBuilder string_builder, uint uint_val, uint pad_amount)
		{
			return null;
		}

		[Token(Token = "0x6001960")]
		[Address(RVA = "0xD7D0DC", Offset = "0xD7D0DC", VA = "0xD7D0DC")]
		public static StringBuilder Concat(this StringBuilder string_builder, uint uint_val, uint pad_amount, char pad_char)
		{
			return null;
		}

		[Token(Token = "0x6001961")]
		[Address(RVA = "0xD7D16C", Offset = "0xD7D16C", VA = "0xD7D16C")]
		public static StringBuilder Concat(this StringBuilder string_builder, int int_val, uint pad_amount, char pad_char, uint base_val)
		{
			return null;
		}

		[Token(Token = "0x6001962")]
		[Address(RVA = "0xD7D234", Offset = "0xD7D234", VA = "0xD7D234")]
		public static StringBuilder Concat(this StringBuilder string_builder, int int_val)
		{
			return null;
		}

		[Token(Token = "0x6001963")]
		[Address(RVA = "0xD7D2BC", Offset = "0xD7D2BC", VA = "0xD7D2BC")]
		public static StringBuilder Concat(this StringBuilder string_builder, int int_val, uint pad_amount)
		{
			return null;
		}

		[Token(Token = "0x6001964")]
		[Address(RVA = "0xD7D348", Offset = "0xD7D348", VA = "0xD7D348")]
		public static StringBuilder Concat(this StringBuilder string_builder, int int_val, uint pad_amount, char pad_char)
		{
			return null;
		}

		[Token(Token = "0x6001965")]
		[Address(RVA = "0xD7D3D8", Offset = "0xD7D3D8", VA = "0xD7D3D8")]
		public static StringBuilder Concat(this StringBuilder string_builder, float float_val, uint decimal_places, uint pad_amount, char pad_char)
		{
			return null;
		}

		[Token(Token = "0x6001966")]
		[Address(RVA = "0xD7D564", Offset = "0xD7D564", VA = "0xD7D564")]
		public static StringBuilder Concat(this StringBuilder string_builder, float float_val)
		{
			return null;
		}

		[Token(Token = "0x6001967")]
		[Address(RVA = "0xD7D5EC", Offset = "0xD7D5EC", VA = "0xD7D5EC")]
		public static StringBuilder Concat(this StringBuilder string_builder, float float_val, uint decimal_places)
		{
			return null;
		}

		[Token(Token = "0x6001968")]
		[Address(RVA = "0xD7D680", Offset = "0xD7D680", VA = "0xD7D680")]
		public static StringBuilder Concat(this StringBuilder string_builder, float float_val, uint decimal_places, uint pad_amount)
		{
			return null;
		}
	}
}
namespace Patterns.StateMachine
{
	[Token(Token = "0x200036A")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9BA010", Offset = "0x9BA010")]
	public class StateMachine : MonoBehaviour
	{
		[Token(Token = "0x4000E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9C6BD8", Offset = "0x9C6BD8")]
		public UnityEngine.Object EntryState;

		[Token(Token = "0x4000E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9C6C10", Offset = "0x9C6C10")]
		public bool RestartOnEnable;

		[Token(Token = "0x4000E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private IState _currentState;

		[Token(Token = "0x4000E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _currentIsTickable;

		[Token(Token = "0x4000E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool _currentIsLateTickable;

		[Token(Token = "0x4000E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		private bool _currentIsFixedTickable;

		[Token(Token = "0x4000E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
		private bool _startOccured;

		[Token(Token = "0x600196A")]
		[Address(RVA = "0xEB00BC", Offset = "0xEB00BC", VA = "0xEB00BC")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x600196B")]
		[Address(RVA = "0xEB01D0", Offset = "0xEB01D0", VA = "0xEB01D0")]
		private void Start()
		{
		}

		[Token(Token = "0x600196C")]
		[Address(RVA = "0xEB032C", Offset = "0xEB032C", VA = "0xEB032C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600196D")]
		[Address(RVA = "0xEB0344", Offset = "0xEB0344", VA = "0xEB0344")]
		private void Update()
		{
		}

		[Token(Token = "0x600196E")]
		[Address(RVA = "0xEB06D4", Offset = "0xEB06D4", VA = "0xEB06D4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600196F")]
		[Address(RVA = "0xEB07E4", Offset = "0xEB07E4", VA = "0xEB07E4")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001970")]
		[Address(RVA = "0xEB08F4", Offset = "0xEB08F4", VA = "0xEB08F4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x9D19EC", Offset = "0x9D19EC")]
		private void ClearState()
		{
		}

		[Token(Token = "0x6001971")]
		[Address(RVA = "0xEB01DC", Offset = "0xEB01DC", VA = "0xEB01DC")]
		private void ProcessEntryState()
		{
		}

		[Token(Token = "0x6001972")]
		[Address(RVA = "0xEB0148", Offset = "0xEB0148", VA = "0xEB0148")]
		public bool IsEntryStateValid()
		{
			return default(bool);
		}

		[Token(Token = "0x6001973")]
		[Address(RVA = "0xEB08FC", Offset = "0xEB08FC", VA = "0xEB08FC")]
		public bool IsEntryStateEmpty()
		{
			return default(bool);
		}

		[Token(Token = "0x6001974")]
		[Address(RVA = "0xEB04C0", Offset = "0xEB04C0", VA = "0xEB04C0")]
		public void SetState(IState newState)
		{
		}

		[Token(Token = "0x6001975")]
		[Address(RVA = "0xEB096C", Offset = "0xEB096C", VA = "0xEB096C")]
		public IState CurrentState()
		{
			return null;
		}

		[Token(Token = "0x6001976")]
		private static bool IsNull<T>(T obj) where T : class
		{
			return default(bool);
		}

		[Token(Token = "0x6001977")]
		[Address(RVA = "0xEB0454", Offset = "0xEB0454", VA = "0xEB0454")]
		private void EnsureCurrentStateIsValid()
		{
		}

		[Token(Token = "0x6001978")]
		[Address(RVA = "0xEB0974", Offset = "0xEB0974", VA = "0xEB0974")]
		public StateMachine()
		{
		}
	}
	[Token(Token = "0x200036B")]
	public interface IState
	{
		[Token(Token = "0x6001979")]
		IState OnStateEnter();

		[Token(Token = "0x600197A")]
		void OnStateExit();
	}
	[Token(Token = "0x200036C")]
	public interface ITickableState : IState
	{
		[Token(Token = "0x600197B")]
		IState OnStateTick();
	}
	[Token(Token = "0x200036D")]
	public interface ILateTickableState : IState
	{
		[Token(Token = "0x600197C")]
		IState OnStateLateTick();
	}
	[Token(Token = "0x200036E")]
	public interface IFixedTickableState : IState
	{
		[Token(Token = "0x600197D")]
		IState OnStateFixedTick();
	}
	[Token(Token = "0x200036F")]
	public interface IStateProvider
	{
		[Token(Token = "0x600197E")]
		IState InitialState();
	}
	[Token(Token = "0x2000370")]
	public static class StateExtensions
	{
		[Token(Token = "0x600197F")]
		[Address(RVA = "0xEB006C", Offset = "0xEB006C", VA = "0xEB006C")]
		public static IState AsIState(this UnityEngine.Object stateObject)
		{
			return null;
		}
	}
}
namespace Patterns.StateMachine.Generic
{
	[Serializable]
	[Token(Token = "0x2000371")]
	public class MoveTo_State : ITickableState, IState
	{
		[Token(Token = "0x4000E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float MoveSpeed;

		[Token(Token = "0x4000E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float MaxAcceleration;

		[Token(Token = "0x4000E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform Destination;

		[Token(Token = "0x4000E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform ToMove;

		[Token(Token = "0x4000E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public IState OnDestinationReached;

		[Token(Token = "0x4000E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float TurnSpeedDegrees;

		[Token(Token = "0x4000E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float DistanceTolerance;

		[Token(Token = "0x6001980")]
		[Address(RVA = "0xEAFD3C", Offset = "0xEAFD3C", VA = "0xEAFD3C", Slot = "5")]
		public IState OnStateEnter()
		{
			return null;
		}

		[Token(Token = "0x6001981")]
		[Address(RVA = "0xEAFD40", Offset = "0xEAFD40", VA = "0xEAFD40", Slot = "6")]
		public void OnStateExit()
		{
		}

		[Token(Token = "0x6001982")]
		[Address(RVA = "0xEAFD44", Offset = "0xEAFD44", VA = "0xEAFD44", Slot = "4")]
		public IState OnStateTick()
		{
			return null;
		}

		[Token(Token = "0x6001983")]
		[Address(RVA = "0xEB0044", Offset = "0xEB0044", VA = "0xEB0044")]
		public MoveTo_State()
		{
		}
	}
}
namespace Support
{
	[Token(Token = "0x2000372")]
	public class DebugClock
	{
		[Token(Token = "0x4000E85")]
		private const double UnitsPerSecond = 1000000.0;

		[Token(Token = "0x4000E86")]
		private const string ReadableUnitName = "μs";

		[Token(Token = "0x4000E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Stopwatch _clock;

		[Token(Token = "0x4000E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly string _comment;

		[Token(Token = "0x6001984")]
		[Address(RVA = "0xD7D7B0", Offset = "0xD7D7B0", VA = "0xD7D7B0")]
		public DebugClock(string comment)
		{
		}

		[Token(Token = "0x6001985")]
		[Address(RVA = "0xD7D864", Offset = "0xD7D864", VA = "0xD7D864")]
		public void Start()
		{
		}

		[Token(Token = "0x6001986")]
		[Address(RVA = "0xD7D8B4", Offset = "0xD7D8B4", VA = "0xD7D8B4")]
		public void StopAndLog()
		{
		}
	}
}
namespace Newtonsoft.Utilities.Miscellaneous
{
	[Token(Token = "0x2000373")]
	public static class BitUtils
	{
		[Token(Token = "0x4000E89")]
		public const int ByteLength = 8;

		[Token(Token = "0x6001987")]
		[Address(RVA = "0xCC9128", Offset = "0xCC9128", VA = "0xCC9128")]
		public static int ConvertToInt32(string input)
		{
			return default(int);
		}

		[Token(Token = "0x6001988")]
		[Address(RVA = "0xCC921C", Offset = "0xCC921C", VA = "0xCC921C")]
		public static string BitArrayToString(BitArray bits)
		{
			return null;
		}

		[Token(Token = "0x6001989")]
		[Address(RVA = "0xCC935C", Offset = "0xCC935C", VA = "0xCC935C")]
		public static byte[] BitArrayToByteArray(this BitArray bits)
		{
			return null;
		}

		[Token(Token = "0x600198A")]
		[Address(RVA = "0xCC9398", Offset = "0xCC9398", VA = "0xCC9398")]
		public static byte[] BitArrayToByteArray(this BitArray bits, int startIndex, int count)
		{
			return null;
		}
	}
}
namespace FunktronicLabs
{
	[Serializable]
	[Token(Token = "0x2000374")]
	public class Audio3DSettings
	{
		[Token(Token = "0x4000E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioRolloffMode RolloffMode;

		[Token(Token = "0x4000E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9C6C48", Offset = "0x9C6C48")]
		public float ReverbZoneMix;

		[Token(Token = "0x4000E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9C6C64", Offset = "0x9C6C64")]
		public float DopplerLevel;

		[Token(Token = "0x4000E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9C6C7C", Offset = "0x9C6C7C")]
		public float Spread;

		[Token(Token = "0x4000E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9C6C98", Offset = "0x9C6C98")]
		public float MinDistance;

		[Token(Token = "0x4000E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9C6CB8", Offset = "0x9C6CB8")]
		public float MaxDistance;

		[Token(Token = "0x600198B")]
		[Address(RVA = "0xDBBE4C", Offset = "0xDBBE4C", VA = "0xDBBE4C")]
		public void SetValuesFrom(Audio3DSettings other)
		{
		}

		[Token(Token = "0x600198C")]
		[Address(RVA = "0xDBBF10", Offset = "0xDBBF10", VA = "0xDBBF10")]
		public Audio3DSettings()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000375")]
	public class Audio3DSettingsPreset : Audio3DSettings
	{
		[Token(Token = "0x4000E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string Name;

		[Token(Token = "0x600198D")]
		[Address(RVA = "0xDBBF2C", Offset = "0xDBBF2C", VA = "0xDBBF2C")]
		public Audio3DSettingsPreset()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000376")]
	public enum SpatialSettingsType
	{
		[Token(Token = "0x4000E92")]
		Preset,
		[Token(Token = "0x4000E93")]
		Custom
	}
	[Serializable]
	[Token(Token = "0x2000377")]
	public class AudioEvent
	{
		[Token(Token = "0x4000E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Name;

		[Token(Token = "0x4000E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioMixerGroup MixerGroup;

		[Token(Token = "0x4000E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioClip[] Clips;

		[Token(Token = "0x4000E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool Loop;

		[Token(Token = "0x4000E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool PlayOnAwake;

		[Token(Token = "0x4000E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool DoNotPool;

		[Token(Token = "0x4000E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
		[AttributeAttribute(Name = "ConditionalHideAttribute", RVA = "0x9C6CD4", Offset = "0x9C6CD4")]
		public bool DestroyWhenFinished;

		[Token(Token = "0x4000E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "ConditionalHideAttribute", RVA = "0x9C6D14", Offset = "0x9C6D14")]
		public bool DeactivateWhenFinished;

		[Token(Token = "0x4000E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9C6D54", Offset = "0x9C6D54")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9C6D54", Offset = "0x9C6D54")]
		public int PoolSize;

		[Token(Token = "0x4000E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9C6DAC", Offset = "0x9C6DAC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9C6DAC", Offset = "0x9C6DAC")]
		public float Cooldown;

		[Token(Token = "0x4000E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9C6E00", Offset = "0x9C6E00")]
		public float Volume;

		[Token(Token = "0x4000E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9C6E18", Offset = "0x9C6E18")]
		public float PitchRange;

		[Token(Token = "0x4000EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9C6E30", Offset = "0x9C6E30")]
		public float IncrementPerPlay;

		[Token(Token = "0x4000EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9C6E48", Offset = "0x9C6E48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9C6E48", Offset = "0x9C6E48")]
		public float SpatialBlend;

		[Token(Token = "0x4000EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "ConditionalHideAttribute", RVA = "0x9C6E9C", Offset = "0x9C6E9C")]
		public SpatialSettingsType SpatialSettingsType;

		[Token(Token = "0x4000EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "ConditionalHideAttribute", RVA = "0x9C6EE0", Offset = "0x9C6EE0")]
		public Audio3DSettings SpatialSettings;

		[Token(Token = "0x4000EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public int PresetIndex;

		[NonSerialized]
		[Token(Token = "0x4000EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float TimeLastPlayed;

		[NonSerialized]
		[Token(Token = "0x4000EA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int PlayIndex;

		[NonSerialized]
		[Token(Token = "0x4000EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AudioSource[] SourcePool;

		[NonSerialized]
		[Token(Token = "0x4000EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public int SourceIndex;

		[Token(Token = "0x600198E")]
		[Address(RVA = "0xDBBF48", Offset = "0xDBBF48", VA = "0xDBBF48")]
		public AudioEvent Copy()
		{
			return null;
		}

		[Token(Token = "0x600198F")]
		[Address(RVA = "0xDBC188", Offset = "0xDBC188", VA = "0xDBC188")]
		public AudioEvent()
		{
		}
	}
	[Token(Token = "0x2000378")]
	public class AudioManager : MonoBehaviour
	{
		[Token(Token = "0x200061D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBA34", Offset = "0x9BBA34")]
		private sealed class <DoDeactivateDelayed>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float seconds;

			[Token(Token = "0x4001B42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameObject go;

			[Token(Token = "0x1700048A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002644")]
				[Address(RVA = "0xDBDA94", Offset = "0xDBDA94", VA = "0xDBDA94", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700048B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002646")]
				[Address(RVA = "0xDBDB04", Offset = "0xDBDB04", VA = "0xDBDB04", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002641")]
			[Address(RVA = "0xDBD90C", Offset = "0xDBD90C", VA = "0xDBD90C")]
			[DebuggerHidden]
			public <DoDeactivateDelayed>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6002642")]
			[Address(RVA = "0xDBD998", Offset = "0xDBD998", VA = "0xDBD998", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002643")]
			[Address(RVA = "0xDBD99C", Offset = "0xDBD99C", VA = "0xDBD99C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002645")]
			[Address(RVA = "0xDBDA9C", Offset = "0xDBDA9C", VA = "0xDBDA9C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static AudioManager Instance;

		[Token(Token = "0x4000EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject AudioSourcePrefab;

		[Token(Token = "0x4000EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioMixerGroup DefaultMixerGroup;

		[Token(Token = "0x4000EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Audio3DSettingsPreset[] SpatialSettingPresets;

		[Token(Token = "0x4000EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioEvent[] Events;

		[Token(Token = "0x4000EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AudioClip NewOneShot;

		[Token(Token = "0x4000EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AudioClip NewOneLoop;

		[Token(Token = "0x4000EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float IncrementalPlayDeadzone;

		[Token(Token = "0x6001990")]
		[Address(RVA = "0xDBC240", Offset = "0xDBC240", VA = "0xDBC240")]
		public void EnsureAudioEventsSpatializedCheck()
		{
		}

		[Token(Token = "0x6001991")]
		[Address(RVA = "0xDBC2C8", Offset = "0xDBC2C8", VA = "0xDBC2C8")]
		public void AllocatePools()
		{
		}

		[Token(Token = "0x6001992")]
		[Address(RVA = "0xDBC3B0", Offset = "0xDBC3B0", VA = "0xDBC3B0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001993")]
		[Address(RVA = "0xDBC448", Offset = "0xDBC448", VA = "0xDBC448")]
		public AudioSource GetAudioSource(AudioEvent audioEvent, Vector3 position, bool forceNew)
		{
			return null;
		}

		[Token(Token = "0x6001994")]
		[Address(RVA = "0xDBCCA8", Offset = "0xDBCCA8", VA = "0xDBCCA8")]
		public static void EnsureInstance()
		{
		}

		[Token(Token = "0x6001995")]
		[Address(RVA = "0xDBCEEC", Offset = "0xDBCEEC", VA = "0xDBCEEC")]
		public static AudioSource PlayEventAttachTransform(string eventName, Transform transform)
		{
			return null;
		}

		[Token(Token = "0x6001996")]
		[Address(RVA = "0xDBD720", Offset = "0xDBD720", VA = "0xDBD720")]
		public AudioEvent TryFindEvent(string eventName)
		{
			return null;
		}

		[Token(Token = "0x6001997")]
		[Address(RVA = "0xDBD808", Offset = "0xDBD808", VA = "0xDBD808")]
		public static AudioSource PlayEvent(string eventName)
		{
			return null;
		}

		[Token(Token = "0x6001998")]
		[Address(RVA = "0xDBCFD4", Offset = "0xDBCFD4", VA = "0xDBCFD4")]
		public static AudioSource PlayEvent(string eventName, Vector3 position)
		{
			return null;
		}

		[Token(Token = "0x6001999")]
		[Address(RVA = "0xDBD874", Offset = "0xDBD874", VA = "0xDBD874")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9D1A54", Offset = "0x9D1A54")]
		private IEnumerator DoDeactivateDelayed(GameObject go, float seconds)
		{
			return null;
		}

		[Token(Token = "0x600199A")]
		[Address(RVA = "0xDBD938", Offset = "0xDBD938", VA = "0xDBD938")]
		public AudioManager()
		{
		}
	}
}
namespace FunktronicLabs.Tasks
{
	[Token(Token = "0x2000379")]
	public enum TaskResult
	{
		[Token(Token = "0x4000EB2")]
		Success,
		[Token(Token = "0x4000EB3")]
		Running
	}
	[Token(Token = "0x200037A")]
	public interface ITask<T> where T : MonoBehaviour
	{
		[Token(Token = "0x17000257")]
		T Target
		{
			[Token(Token = "0x600199B")]
			get;
			[Token(Token = "0x600199C")]
			set;
		}

		[Token(Token = "0x17000258")]
		int Priority
		{
			[Token(Token = "0x600199D")]
			get;
		}

		[Token(Token = "0x600199E")]
		TaskResult OnEnter();

		[Token(Token = "0x600199F")]
		TaskResult OnUpdate();

		[Token(Token = "0x60019A0")]
		void OnExit();
	}
	[Token(Token = "0x200037B")]
	public sealed class ParallelAndTask<T> : ITask<T> where T : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200061E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBA44", Offset = "0x9BBA44")]
		private sealed class <>c
		{
			[Token(Token = "0x4001B43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001B44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<ITask<T>, int> <>9__9_0;

			[Token(Token = "0x4001B45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<bool, bool> <>9__10_0;

			[Token(Token = "0x6002648")]
			public <>c()
			{
			}

			[Token(Token = "0x6002649")]
			internal int <.ctor>b__9_0(ITask<T> t)
			{
				return default(int);
			}

			[Token(Token = "0x600264A")]
			internal bool <OnEnter>b__10_0(bool d)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C6F30", Offset = "0x9C6F30")]
		private T <Target>k__BackingField;

		[Token(Token = "0x4000EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C6F40", Offset = "0x9C6F40")]
		private readonly int <Priority>k__BackingField;

		[Token(Token = "0x4000EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly ITask<T>[] _tasks;

		[Token(Token = "0x4000EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly bool[] _done;

		[Token(Token = "0x17000259")]
		public T Target
		{
			[Token(Token = "0x60019A1")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D1AB8", Offset = "0x9D1AB8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019A2")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D1AC8", Offset = "0x9D1AC8")]
			set
			{
			}
		}

		[Token(Token = "0x1700025A")]
		public int Priority
		{
			[Token(Token = "0x60019A3")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D1AD8", Offset = "0x9D1AD8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60019A4")]
		public ParallelAndTask(params ITask<T>[] tasks)
		{
		}

		[Token(Token = "0x60019A5")]
		public TaskResult OnEnter()
		{
			return default(TaskResult);
		}

		[Token(Token = "0x60019A6")]
		public TaskResult OnUpdate()
		{
			return default(TaskResult);
		}

		[Token(Token = "0x60019A7")]
		public void OnExit()
		{
		}
	}
	[Token(Token = "0x200037C")]
	public sealed class WaitTask<T> : ITask<T> where T : MonoBehaviour
	{
		[Token(Token = "0x4000EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly float maxTime;

		[Token(Token = "0x4000EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float time;

		[Token(Token = "0x4000EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C6F50", Offset = "0x9C6F50")]
		private T <Target>k__BackingField;

		[Token(Token = "0x4000EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C6F60", Offset = "0x9C6F60")]
		private readonly int <Priority>k__BackingField;

		[Token(Token = "0x1700025B")]
		public T Target
		{
			[Token(Token = "0x60019A9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D1AE8", Offset = "0x9D1AE8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019AA")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D1AF8", Offset = "0x9D1AF8")]
			set
			{
			}
		}

		[Token(Token = "0x1700025C")]
		public int Priority
		{
			[Token(Token = "0x60019AB")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D1B08", Offset = "0x9D1B08")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60019A8")]
		public WaitTask(float seconds, int priority = 0)
		{
		}

		[Token(Token = "0x60019AC")]
		public TaskResult OnEnter()
		{
			return default(TaskResult);
		}

		[Token(Token = "0x60019AD")]
		public TaskResult OnUpdate()
		{
			return default(TaskResult);
		}

		[Token(Token = "0x60019AE")]
		public void OnExit()
		{
		}
	}
	[Token(Token = "0x200037D")]
	public sealed class DelegateTask<T> : ITask<T> where T : MonoBehaviour
	{
		[Token(Token = "0x200061F")]
		public delegate void DelegateTaskAction();

		[Token(Token = "0x4000EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly DelegateTaskAction action;

		[Token(Token = "0x4000EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C6F70", Offset = "0x9C6F70")]
		private T <Target>k__BackingField;

		[Token(Token = "0x4000EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C6F80", Offset = "0x9C6F80")]
		private readonly int <Priority>k__BackingField;

		[Token(Token = "0x1700025D")]
		public T Target
		{
			[Token(Token = "0x60019B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D1B18", Offset = "0x9D1B18")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019B1")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D1B28", Offset = "0x9D1B28")]
			set
			{
			}
		}

		[Token(Token = "0x1700025E")]
		public int Priority
		{
			[Token(Token = "0x60019B2")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D1B38", Offset = "0x9D1B38")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60019AF")]
		public DelegateTask(DelegateTaskAction action, int priority = 0)
		{
		}

		[Token(Token = "0x60019B3")]
		public TaskResult OnEnter()
		{
			return default(TaskResult);
		}

		[Token(Token = "0x60019B4")]
		public TaskResult OnUpdate()
		{
			return default(TaskResult);
		}

		[Token(Token = "0x60019B5")]
		public void OnExit()
		{
		}
	}
	[Token(Token = "0x200037E")]
	public delegate void DelegateTaskActionGeneric();
	[Token(Token = "0x200037F")]
	public sealed class DelegateActionTask<T> : ITask<T> where T : MonoBehaviour
	{
		[Token(Token = "0x2000620")]
		public delegate void DelegateTaskAction(T target);

		[Token(Token = "0x4000EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly DelegateTaskAction action;

		[Token(Token = "0x4000EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C6F90", Offset = "0x9C6F90")]
		private T <Target>k__BackingField;

		[Token(Token = "0x4000EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C6FA0", Offset = "0x9C6FA0")]
		private readonly int <Priority>k__BackingField;

		[Token(Token = "0x1700025F")]
		public T Target
		{
			[Token(Token = "0x60019BB")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D1B48", Offset = "0x9D1B48")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D1B58", Offset = "0x9D1B58")]
			set
			{
			}
		}

		[Token(Token = "0x17000260")]
		public int Priority
		{
			[Token(Token = "0x60019BD")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D1B68", Offset = "0x9D1B68")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60019BA")]
		public DelegateActionTask(DelegateTaskAction action, int priority = 0)
		{
		}

		[Token(Token = "0x60019BE")]
		public TaskResult OnEnter()
		{
			return default(TaskResult);
		}

		[Token(Token = "0x60019BF")]
		public TaskResult OnUpdate()
		{
			return default(TaskResult);
		}

		[Token(Token = "0x60019C0")]
		public void OnExit()
		{
		}
	}
	[Token(Token = "0x2000380")]
	public sealed class DelegateBoolTask<T> : ITask<T> where T : MonoBehaviour
	{
		[Token(Token = "0x2000621")]
		public delegate bool WaitUntilTrueAction();

		[Token(Token = "0x4000EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly WaitUntilTrueAction action;

		[Token(Token = "0x4000EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C6FB0", Offset = "0x9C6FB0")]
		private T <Target>k__BackingField;

		[Token(Token = "0x4000EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C6FC0", Offset = "0x9C6FC0")]
		private readonly int <Priority>k__BackingField;

		[Token(Token = "0x17000261")]
		public T Target
		{
			[Token(Token = "0x60019C2")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D1B78", Offset = "0x9D1B78")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019C3")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D1B88", Offset = "0x9D1B88")]
			set
			{
			}
		}

		[Token(Token = "0x17000262")]
		public int Priority
		{
			[Token(Token = "0x60019C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D1B98", Offset = "0x9D1B98")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60019C1")]
		public DelegateBoolTask(WaitUntilTrueAction action, int priority = 0)
		{
		}

		[Token(Token = "0x60019C5")]
		public TaskResult OnEnter()
		{
			return default(TaskResult);
		}

		[Token(Token = "0x60019C6")]
		public TaskResult OnUpdate()
		{
			return default(TaskResult);
		}

		[Token(Token = "0x60019C7")]
		public void OnExit()
		{
		}
	}
	[Token(Token = "0x2000381")]
	public delegate void OnTick(float progress01);
	[Token(Token = "0x2000382")]
	public sealed class CoroutineTask<T> : ITask<T> where T : MonoBehaviour
	{
		[Token(Token = "0x2000622")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBA54", Offset = "0x9BBA54")]
		private sealed class <RoutineHarness>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4001B47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4001B48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CoroutineTask<T> <>4__this;

			[Token(Token = "0x1700048C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600265A")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700048D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600265C")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002657")]
			[DebuggerHidden]
			public <RoutineHarness>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x6002658")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002659")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600265B")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000623")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBA64", Offset = "0x9BBA64")]
		private sealed class <DoRoutineTask>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4001B4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4001B4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public OnTick onTick;

			[Token(Token = "0x4001B4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float totalTime;

			[Token(Token = "0x4001B4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private float <timeElapsed>5__2;

			[Token(Token = "0x1700048E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002660")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700048F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002662")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600265D")]
			[DebuggerHidden]
			public <DoRoutineTask>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x600265E")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600265F")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002661")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly IEnumerator routine;

		[Token(Token = "0x4000EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly DelegateActionTask<T>.DelegateTaskAction onComplete;

		[Token(Token = "0x4000EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Coroutine runningRoutine;

		[Token(Token = "0x4000EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool running;

		[Token(Token = "0x4000EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C6FD0", Offset = "0x9C6FD0")]
		private T <Target>k__BackingField;

		[Token(Token = "0x4000ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C6FE0", Offset = "0x9C6FE0")]
		private readonly int <Priority>k__BackingField;

		[Token(Token = "0x17000263")]
		public T Target
		{
			[Token(Token = "0x60019CE")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D1BA8", Offset = "0x9D1BA8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019CF")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D1BB8", Offset = "0x9D1BB8")]
			set
			{
			}
		}

		[Token(Token = "0x17000264")]
		public int Priority
		{
			[Token(Token = "0x60019D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D1BC8", Offset = "0x9D1BC8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60019CC")]
		public CoroutineTask(IEnumerator routine, int priority = 0, [Optional] DelegateActionTask<T>.DelegateTaskAction onComplete)
		{
		}

		[Token(Token = "0x60019CD")]
		public CoroutineTask(int priority = 0, [Optional] DelegateActionTask<T>.DelegateTaskAction onComplete, [Optional] IEnumerator routine)
		{
		}

		[Token(Token = "0x60019D1")]
		public TaskResult OnEnter()
		{
			return default(TaskResult);
		}

		[Token(Token = "0x60019D2")]
		public TaskResult OnUpdate()
		{
			return default(TaskResult);
		}

		[Token(Token = "0x60019D3")]
		public void OnExit()
		{
		}

		[Token(Token = "0x60019D4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9D1BD8", Offset = "0x9D1BD8")]
		private IEnumerator RoutineHarness()
		{
			return null;
		}

		[Token(Token = "0x60019D5")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9D1C3C", Offset = "0x9D1C3C")]
		public static IEnumerator DoRoutineTask(float totalTime, OnTick onTick)
		{
			return null;
		}
	}
	[Token(Token = "0x2000383")]
	public sealed class TaskQueue<T> where T : MonoBehaviour
	{
		[Token(Token = "0x2000624")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBA74", Offset = "0x9BBA74")]
		private sealed class <>c__DisplayClass21_0
		{
			[Token(Token = "0x4001B4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public DelegateTaskActionGeneric onComplete;

			[Token(Token = "0x6002663")]
			public <>c__DisplayClass21_0()
			{
			}

			[Token(Token = "0x6002664")]
			internal void <SubmitTask>b__0(T _)
			{
			}
		}

		[Token(Token = "0x2000625")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBA84", Offset = "0x9BBA84")]
		private sealed class <>c__DisplayClass22_0
		{
			[Token(Token = "0x4001B4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action action;

			[Token(Token = "0x6002665")]
			public <>c__DisplayClass22_0()
			{
			}

			[Token(Token = "0x6002666")]
			internal void <SubmitTask>b__0(T _)
			{
			}
		}

		[Token(Token = "0x4000ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T DefaultTarget;

		[Token(Token = "0x4000ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool Verbose;

		[Token(Token = "0x4000ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly LinkedList<ITask<T>> taskQueue;

		[Token(Token = "0x17000265")]
		public bool IsEmpty
		{
			[Token(Token = "0x60019D8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000266")]
		public ITask<T> CurrentTask
		{
			[Token(Token = "0x60019D9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000267")]
		public int Count
		{
			[Token(Token = "0x60019DB")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60019D6")]
		public TaskQueue(T target)
		{
		}

		[Token(Token = "0x60019D7")]
		public TaskQueue()
		{
		}

		[Token(Token = "0x60019DA")]
		public TJ CurrentTaskCasted<TJ>() where TJ : ITask<T>
		{
			return (TJ)null;
		}

		[Token(Token = "0x60019DC")]
		public TaskQueue<T> SubmitTask(ITask<T> task, T target)
		{
			return null;
		}

		[Token(Token = "0x60019DD")]
		public TaskQueue<T> SubmitTaskFlush(ITask<T> task)
		{
			return null;
		}

		[Token(Token = "0x60019DE")]
		public TaskQueue<T> SubmitTask(ITask<T> task)
		{
			return null;
		}

		[Token(Token = "0x60019DF")]
		public TaskQueue<T> SubmitParallelAndTasks(params ITask<T>[] tasks)
		{
			return null;
		}

		[Token(Token = "0x60019E0")]
		public TaskQueue<T> SubmitTask(float totalTime, OnTick onTick)
		{
			return null;
		}

		[Token(Token = "0x60019E1")]
		public TaskQueue<T> SubmitTask(IEnumerator task)
		{
			return null;
		}

		[Token(Token = "0x60019E2")]
		public TaskQueue<T> SubmitTask(IEnumerator task, int priority)
		{
			return null;
		}

		[Token(Token = "0x60019E3")]
		public TaskQueue<T> SubmitTask(IEnumerator task, int priority, DelegateActionTask<T>.DelegateTaskAction onComplete)
		{
			return null;
		}

		[Token(Token = "0x60019E4")]
		public TaskQueue<T> SubmitTask(IEnumerator task, DelegateActionTask<T>.DelegateTaskAction onComplete)
		{
			return null;
		}

		[Token(Token = "0x60019E5")]
		public TaskQueue<T> SubmitTask(IEnumerator task, DelegateTaskActionGeneric onComplete)
		{
			return null;
		}

		[Token(Token = "0x60019E6")]
		public TaskQueue<T> SubmitTask(Action action)
		{
			return null;
		}

		[Token(Token = "0x60019E7")]
		public TaskQueue<T> SubmitTask(DelegateTask<T>.DelegateTaskAction task, int priority = 0)
		{
			return null;
		}

		[Token(Token = "0x60019E8")]
		public TaskQueue<T> SubmitTask(DelegateActionTask<T>.DelegateTaskAction task, int priority = 0)
		{
			return null;
		}

		[Token(Token = "0x60019E9")]
		public TaskQueue<T> SubmitTask(DelegateBoolTask<T>.WaitUntilTrueAction task, int priority = 0)
		{
			return null;
		}

		[Token(Token = "0x60019EA")]
		public TaskQueue<T> SubmitTask(float secondsToWait, int priority = 0)
		{
			return null;
		}

		[Token(Token = "0x60019EB")]
		public void Update()
		{
		}

		[Token(Token = "0x60019EC")]
		public void Clear()
		{
		}

		[Token(Token = "0x60019ED")]
		public void Clear(bool endOngoingTask)
		{
		}

		[Token(Token = "0x60019EE")]
		public bool CheckOngoingTaskType<TT>()
		{
			return default(bool);
		}

		[Token(Token = "0x60019EF")]
		private void StartTopLevelTask()
		{
		}
	}
}
namespace FunktronicLabs.Collections.Generic
{
	[Token(Token = "0x2000384")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x9BA068", Offset = "0x9BA068")]
	public class ArrayRingBuffer<T>
	{
		[Token(Token = "0x4000ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly T[] Values;

		[Token(Token = "0x4000ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int startingIndex;

		[Token(Token = "0x4000ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C6FF0", Offset = "0x9C6FF0")]
		private int <Count>k__BackingField;

		[Token(Token = "0x17000268")]
		public int Count
		{
			[Token(Token = "0x60019F2")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D1CA0", Offset = "0x9D1CA0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60019F3")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D1CB0", Offset = "0x9D1CB0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000269")]
		public T Last
		{
			[Token(Token = "0x60019F4")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x1700026A")]
		public int Capacity
		{
			[Token(Token = "0x60019F5")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700026B")]
		public bool Empty
		{
			[Token(Token = "0x60019F6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700026C")]
		public bool NonEmpty
		{
			[Token(Token = "0x60019F7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700026D")]
		private int NextWriteIndex
		{
			[Token(Token = "0x60019F8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700026E")]
		public T Item
		{
			[Token(Token = "0x60019F9")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x60019FA")]
			set
			{
			}
		}

		[Token(Token = "0x60019F0")]
		public ArrayRingBuffer(int size, T defaultValue)
		{
		}

		[Token(Token = "0x60019F1")]
		public ArrayRingBuffer(int size)
		{
		}

		[Token(Token = "0x60019FB")]
		public void Enqueue(T t)
		{
		}

		[Token(Token = "0x60019FC")]
		public T Dequeue()
		{
			return (T)null;
		}

		[Token(Token = "0x60019FD")]
		public T Dequeue(bool clearEntry)
		{
			return (T)null;
		}

		[Token(Token = "0x60019FE")]
		public void Clear()
		{
		}

		[Token(Token = "0x60019FF")]
		public void Clear(bool erase)
		{
		}

		[Token(Token = "0x6001A00")]
		private int CalculateIndex(int relativeIndex)
		{
			return default(int);
		}
	}
}
namespace Fuji
{
	[Token(Token = "0x2000385")]
	public static class FujiDebug
	{
		[Token(Token = "0x2000626")]
		[Flags]
		public enum DebugFlags
		{
			[Token(Token = "0x4001B51")]
			All = -1,
			[Token(Token = "0x4001B52")]
			None = 0,
			[Token(Token = "0x4001B53")]
			WorldStateInfo = 1,
			[Token(Token = "0x4001B54")]
			Perf = 2,
			[Token(Token = "0x4001B55")]
			Configuration = 4,
			[Token(Token = "0x4001B56")]
			Fatal = 8
		}

		[Token(Token = "0x4000ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static DebugFlags LogLevel;

		[Token(Token = "0x6001A01")]
		[Address(RVA = "0xC815A0", Offset = "0xC815A0", VA = "0xC815A0")]
		public static bool Check(DebugFlags flag)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A02")]
		[Address(RVA = "0xC81658", Offset = "0xC81658", VA = "0xC81658")]
		public static void NotImplemented()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000386")]
	public struct FujiAreaEntryBlendParams
	{
		[Token(Token = "0x4000ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float BlendTimeFog;

		[Token(Token = "0x4000ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float BlendTimeCylinderLight;
	}
	[Serializable]
	[Token(Token = "0x2000387")]
	public struct BGMParam
	{
		[Token(Token = "0x4000ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string ParamName;

		[Token(Token = "0x4000ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float ParamValue;

		[Token(Token = "0x4000ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float LerpTime;
	}
	[Token(Token = "0x2000388")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9BA0A0", Offset = "0x9BA0A0")]
	public class PresetCollider : MonoBehaviour, LocomotionService.IPlayerTriggerable, IGameObject
	{
		[Token(Token = "0x4000ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9C7000", Offset = "0x9C7000")]
		[SerializeField]
		private FujiAtmosphericPreset _atmosphericPreset;

		[Token(Token = "0x4000ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x9C704C", Offset = "0x9C704C")]
		private FujiAreaEntryBlendParams _atmosphericBlendParams;

		[Token(Token = "0x4000ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9C7098", Offset = "0x9C7098")]
		[SerializeField]
		private LoadingZoneKey _startBGMForZone;

		[Token(Token = "0x4000EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private LoadingZoneKey _stopBGMForZone;

		[Token(Token = "0x4000EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9C70F4", Offset = "0x9C70F4")]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x9C70F4", Offset = "0x9C70F4")]
		private FujiSubArea _areaToEnter;

		[Token(Token = "0x4000EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private bool _transitionOnTriggerExit;

		[Token(Token = "0x4000EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private FujiSubArea _exitTransitionArea;

		[Token(Token = "0x4000EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9C7184", Offset = "0x9C7184")]
		[SerializeField]
		private BGMParam[] _bgmParamsToChange;

		[Token(Token = "0x4000EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9C71D0", Offset = "0x9C71D0")]
		[SerializeField]
		private LoadingZoneKey _expectedLightRailDestination;

		[Token(Token = "0x4000EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool _debugVisuals;

		[Token(Token = "0x4000EE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool Verbose;

		[NonSerialized]
		[Token(Token = "0x4000EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		public bool skipRailCheck;

		[Token(Token = "0x1700026F")]
		public FujiAtmosphericPreset AtmosphericPreset
		{
			[Token(Token = "0x6001A04")]
			[Address(RVA = "0xEE658C", Offset = "0xEE658C", VA = "0xEE658C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A05")]
		[Address(RVA = "0xEE6594", Offset = "0xEE6594", VA = "0xEE6594", Slot = "4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x9D1CC0", Offset = "0x9D1CC0")]
		public void OnPlayerEnterTrigger()
		{
		}

		[Token(Token = "0x6001A06")]
		[Address(RVA = "0xEE68E4", Offset = "0xEE68E4", VA = "0xEE68E4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A07")]
		[Address(RVA = "0xEE6950", Offset = "0xEE6950", VA = "0xEE6950", Slot = "5")]
		public void OnPlayerExitTrigger()
		{
		}

		[Token(Token = "0x6001A08")]
		[Address(RVA = "0xEE69FC", Offset = "0xEE69FC", VA = "0xEE69FC")]
		protected void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001A09")]
		[Address(RVA = "0xEE6A9C", Offset = "0xEE6A9C", VA = "0xEE6A9C")]
		protected void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001A0A")]
		[Address(RVA = "0xEE6B3C", Offset = "0xEE6B3C", VA = "0xEE6B3C")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001A0B")]
		[Address(RVA = "0xEE686C", Offset = "0xEE686C", VA = "0xEE686C")]
		private bool PlayerTravelingInExpectedDirection()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A0C")]
		[Address(RVA = "0xEE6E60", Offset = "0xEE6E60", VA = "0xEE6E60")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x9D1CF8", Offset = "0x9D1CF8")]
		public void ToggleDebugVisuals()
		{
		}

		[Token(Token = "0x6001A0D")]
		[Address(RVA = "0xEE6E64", Offset = "0xEE6E64", VA = "0xEE6E64")]
		public PresetCollider()
		{
		}

		[SpecialName]
		[Token(Token = "0x6001A0F")]
		[Address(RVA = "0xEE6E78", Offset = "0xEE6E78", VA = "0xEE6E78", Slot = "6")]
		private GameObject IGameObject.get_gameObject()
		{
			return null;
		}

		[SpecialName]
		[Token(Token = "0x6001A10")]
		[Address(RVA = "0xEE6E80", Offset = "0xEE6E80", VA = "0xEE6E80", Slot = "7")]
		private Transform IGameObject.get_transform()
		{
			return null;
		}
	}
	[Token(Token = "0x2000389")]
	public enum FujiSubArea
	{
		[Token(Token = "0x4000EE4")]
		None = -1,
		[Token(Token = "0x4000EE5")]
		InnerGarden = 1,
		[Token(Token = "0x4000EE6")]
		Garden1 = 2,
		[Token(Token = "0x4000EE7")]
		Garden2 = 3,
		[Token(Token = "0x4000EE8")]
		Garden3 = 4,
		[Token(Token = "0x4000EE9")]
		GardenOutsideRim = 5,
		[Token(Token = "0x4000EEA")]
		LightRailToBiome1 = 6,
		[Token(Token = "0x4000EEB")]
		LightRailToBiomeDesert = 7,
		[Token(Token = "0x4000EEC")]
		Biome1Entrance = 100,
		[Token(Token = "0x4000EED")]
		Biome1Center = 101,
		[Token(Token = "0x4000EEE")]
		Biome1Kelp = 102,
		[Token(Token = "0x4000EEF")]
		Biome1KelpMother = 103,
		[Token(Token = "0x4000EF0")]
		Biome1CallAndResponse_01 = 104,
		[Token(Token = "0x4000EF1")]
		Biome1CallAndResponse_02 = 105,
		[Token(Token = "0x4000EF2")]
		Biome1CallAndResponseMother = 106,
		[Token(Token = "0x4000EF3")]
		Biome1CallAndResponseMotherAlternate = 107,
		[Token(Token = "0x4000EF4")]
		Biome1Dandelion = 108,
		[Token(Token = "0x4000EF5")]
		Biome1DandelionMother = 109,
		[Token(Token = "0x4000EF6")]
		Biome1Water_01 = 110,
		[Token(Token = "0x4000EF7")]
		Biome1SecretRoom = 111,
		[Token(Token = "0x4000EF8")]
		Biome1CloverArea = 112,
		[Token(Token = "0x4000EF9")]
		Biome1Water_02 = 113,
		[Token(Token = "0x4000EFA")]
		Biome1DandelionBackdoor = 114,
		[Token(Token = "0x4000EFB")]
		Biome2BoatRide = 200,
		[Token(Token = "0x4000EFC")]
		Biome2Entrance = 201,
		[Token(Token = "0x4000EFD")]
		Biome3BoatRide = 300,
		[Token(Token = "0x4000EFE")]
		Biome3Entrance1 = 301,
		[Token(Token = "0x4000EFF")]
		Biome3Entrance2 = 302,
		[Token(Token = "0x4000F00")]
		Biome3Center1 = 303,
		[Token(Token = "0x4000F01")]
		Biome3Ascension1 = 304,
		[Token(Token = "0x4000F02")]
		Biome3Ascension2 = 305,
		[Token(Token = "0x4000F03")]
		Biome3Ascension3 = 306,
		[Token(Token = "0x4000F04")]
		Biome3Ascension4 = 307,
		[Token(Token = "0x4000F05")]
		Biome3Ascension5 = 308,
		[Token(Token = "0x4000F06")]
		Biome3PathToBeach1 = 309,
		[Token(Token = "0x4000F07")]
		Biome3PathToBeach2 = 310,
		[Token(Token = "0x4000F08")]
		Biome3PathToBeach3 = 311,
		[Token(Token = "0x4000F09")]
		Biome3PathToBeach4 = 312,
		[Token(Token = "0x4000F0A")]
		Biome3Beach1 = 313,
		[Token(Token = "0x4000F0B")]
		Biome3Beach2 = 314,
		[Token(Token = "0x4000F0C")]
		Biome3Beach3 = 315,
		[Token(Token = "0x4000F0D")]
		Biome3Stonehenge1 = 316,
		[Token(Token = "0x4000F0E")]
		Biome3Stonehenge2 = 317,
		[Token(Token = "0x4000F0F")]
		Biome3Stonehenge3 = 318,
		[Token(Token = "0x4000F10")]
		Biome3Sayonara1 = 319,
		[Token(Token = "0x4000F11")]
		Biome3Sayonara2 = 320,
		[Token(Token = "0x4000F12")]
		Biome3Ocean = 321,
		[Token(Token = "0x4000F13")]
		Biome3VineMother = 322,
		[Token(Token = "0x4000F14")]
		Biome3BopItMother = 333,
		[Token(Token = "0x4000F15")]
		Biome3Bridge = 334,
		[Token(Token = "0x4000F16")]
		Birthing = 400,
		[Token(Token = "0x4000F17")]
		EndingBiomeEndingCave = 500,
		[Token(Token = "0x4000F18")]
		EndingBiomeEntrance = 501,
		[Token(Token = "0x4000F19")]
		Test_Kelp = 1000,
		[Token(Token = "0x4000F1A")]
		Test_CallAndResponse_Biome = 1001,
		[Token(Token = "0x4000F1B")]
		Test_CallAndResponse_Garden = 1002,
		[Token(Token = "0x4000F1C")]
		Test_Piano = 1003,
		[Token(Token = "0x4000F1D")]
		Test_Dandelion = 1004,
		[Token(Token = "0x4000F1E")]
		Test_GardenSequencerTech = 1005,
		[Token(Token = "0x4000F1F")]
		Test_Clapper = 1006,
		[Token(Token = "0x4000F20")]
		All = 1337
	}
	[Token(Token = "0x200038A")]
	public sealed class SmartBug : MonoBehaviour
	{
		[Token(Token = "0x2000627")]
		private class SmartBugDartAway : ITask<SmartBug>
		{
			[Token(Token = "0x4001B57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C99C0", Offset = "0x9C99C0")]
			private SmartBug <Target>k__BackingField;

			[Token(Token = "0x4001B58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float FleeDistanceMeters;

			[Token(Token = "0x4001B59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Sequence _sequence;

			[Token(Token = "0x17000490")]
			public SmartBug Target
			{
				[Token(Token = "0x6002667")]
				[Address(RVA = "0xBD3D24", Offset = "0xBD3D24", VA = "0xBD3D24", Slot = "4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D8294", Offset = "0x9D8294")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002668")]
				[Address(RVA = "0xBD2D3C", Offset = "0xBD2D3C", VA = "0xBD2D3C", Slot = "5")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D82A4", Offset = "0x9D82A4")]
				set
				{
				}
			}

			[Token(Token = "0x17000491")]
			public int Priority
			{
				[Token(Token = "0x6002669")]
				[Address(RVA = "0xBD3D2C", Offset = "0xBD3D2C", VA = "0xBD3D2C", Slot = "6")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x600266A")]
			[Address(RVA = "0xBD3D34", Offset = "0xBD3D34", VA = "0xBD3D34", Slot = "7")]
			public TaskResult OnEnter()
			{
				return default(TaskResult);
			}

			[Token(Token = "0x600266B")]
			[Address(RVA = "0xBD401C", Offset = "0xBD401C", VA = "0xBD401C", Slot = "8")]
			public TaskResult OnUpdate()
			{
				return default(TaskResult);
			}

			[Token(Token = "0x600266C")]
			[Address(RVA = "0xBD4154", Offset = "0xBD4154", VA = "0xBD4154", Slot = "9")]
			public void OnExit()
			{
			}

			[Token(Token = "0x600266D")]
			[Address(RVA = "0xBD2D2C", Offset = "0xBD2D2C", VA = "0xBD2D2C")]
			public SmartBugDartAway()
			{
			}

			[Token(Token = "0x600266E")]
			[Address(RVA = "0xBD41D4", Offset = "0xBD41D4", VA = "0xBD41D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D82B4", Offset = "0x9D82B4")]
			private void <OnEnter>b__8_0()
			{
			}
		}

		[Token(Token = "0x2000628")]
		private class SmartBugHover : ITask<SmartBug>
		{
			[Token(Token = "0x4001B5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C99D0", Offset = "0x9C99D0")]
			private SmartBug <Target>k__BackingField;

			[Token(Token = "0x4001B5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Rigidbody _rigidbody;

			[Token(Token = "0x17000492")]
			public SmartBug Target
			{
				[Token(Token = "0x600266F")]
				[Address(RVA = "0xBD4C1C", Offset = "0xBD4C1C", VA = "0xBD4C1C", Slot = "4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D82C4", Offset = "0x9D82C4")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002670")]
				[Address(RVA = "0xBD2D4C", Offset = "0xBD2D4C", VA = "0xBD2D4C", Slot = "5")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D82D4", Offset = "0x9D82D4")]
				set
				{
				}
			}

			[Token(Token = "0x17000493")]
			public int Priority
			{
				[Token(Token = "0x6002671")]
				[Address(RVA = "0xBD4C24", Offset = "0xBD4C24", VA = "0xBD4C24", Slot = "6")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x6002672")]
			[Address(RVA = "0xBD4C2C", Offset = "0xBD4C2C", VA = "0xBD4C2C", Slot = "7")]
			public TaskResult OnEnter()
			{
				return default(TaskResult);
			}

			[Token(Token = "0x6002673")]
			[Address(RVA = "0xBD4CDC", Offset = "0xBD4CDC", VA = "0xBD4CDC", Slot = "9")]
			public void OnExit()
			{
			}

			[Token(Token = "0x6002674")]
			[Address(RVA = "0xBD4D94", Offset = "0xBD4D94", VA = "0xBD4D94", Slot = "8")]
			public TaskResult OnUpdate()
			{
				return default(TaskResult);
			}

			[Token(Token = "0x6002675")]
			[Address(RVA = "0xBD2D44", Offset = "0xBD2D44", VA = "0xBD2D44")]
			public SmartBugHover()
			{
			}
		}

		[Token(Token = "0x2000629")]
		private class SmartBugGoToDestination : ITask<SmartBug>
		{
			[Token(Token = "0x20006E5")]
			public enum DestinationMode
			{
				[Token(Token = "0x4001E28")]
				Unset,
				[Token(Token = "0x4001E29")]
				ByPosition,
				[Token(Token = "0x4001E2A")]
				ByTransform
			}

			[Token(Token = "0x4001B5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C99E0", Offset = "0x9C99E0")]
			private SmartBug <Target>k__BackingField;

			[Token(Token = "0x4001B5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public DestinationMode Mode;

			[Token(Token = "0x4001B5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform DestinationTransform;

			[Token(Token = "0x4001B5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 DestinationPosition;

			[Token(Token = "0x4001B60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float DistanceThreshold;

			[Token(Token = "0x4001B61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float RotationSpeed;

			[Token(Token = "0x4001B62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Sequence _destinationSequence;

			[Token(Token = "0x17000494")]
			public SmartBug Target
			{
				[Token(Token = "0x6002676")]
				[Address(RVA = "0xBD4378", Offset = "0xBD4378", VA = "0xBD4378", Slot = "4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D82E4", Offset = "0x9D82E4")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002677")]
				[Address(RVA = "0xBD2D68", Offset = "0xBD2D68", VA = "0xBD2D68", Slot = "5")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D82F4", Offset = "0x9D82F4")]
				set
				{
				}
			}

			[Token(Token = "0x17000495")]
			public int Priority
			{
				[Token(Token = "0x6002678")]
				[Address(RVA = "0xBD4380", Offset = "0xBD4380", VA = "0xBD4380", Slot = "6")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x6002679")]
			[Address(RVA = "0xBD4388", Offset = "0xBD4388", VA = "0xBD4388", Slot = "7")]
			public TaskResult OnEnter()
			{
				return default(TaskResult);
			}

			[Token(Token = "0x600267A")]
			[Address(RVA = "0xBD465C", Offset = "0xBD465C", VA = "0xBD465C", Slot = "8")]
			public TaskResult OnUpdate()
			{
				return default(TaskResult);
			}

			[Token(Token = "0x600267B")]
			[Address(RVA = "0xBD48D0", Offset = "0xBD48D0", VA = "0xBD48D0", Slot = "9")]
			public void OnExit()
			{
			}

			[Token(Token = "0x600267C")]
			[Address(RVA = "0xBD4428", Offset = "0xBD4428", VA = "0xBD4428")]
			private void DoDestinationSequence()
			{
			}

			[Token(Token = "0x600267D")]
			[Address(RVA = "0xBD2D54", Offset = "0xBD2D54", VA = "0xBD2D54")]
			public SmartBugGoToDestination()
			{
			}

			[Token(Token = "0x600267E")]
			[Address(RVA = "0xBD4998", Offset = "0xBD4998", VA = "0xBD4998")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D8304", Offset = "0x9D8304")]
			private void <DoDestinationSequence>b__16_0()
			{
			}
		}

		[Token(Token = "0x200062A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBAA4", Offset = "0x9BBAA4")]
		private sealed class <DoWingFlap>d__50 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SmartBug <>4__this;

			[Token(Token = "0x4001B66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <activeIndex>5__2;

			[Token(Token = "0x17000496")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002682")]
				[Address(RVA = "0xBD3514", Offset = "0xBD3514", VA = "0xBD3514", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000497")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002684")]
				[Address(RVA = "0xBD3584", Offset = "0xBD3584", VA = "0xBD3584", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600267F")]
			[Address(RVA = "0xBD2C7C", Offset = "0xBD2C7C", VA = "0xBD2C7C")]
			[DebuggerHidden]
			public <DoWingFlap>d__50(int <>1__state)
			{
			}

			[Token(Token = "0x6002680")]
			[Address(RVA = "0xBD33C4", Offset = "0xBD33C4", VA = "0xBD33C4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002681")]
			[Address(RVA = "0xBD33C8", Offset = "0xBD33C8", VA = "0xBD33C8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002683")]
			[Address(RVA = "0xBD351C", Offset = "0xBD351C", VA = "0xBD351C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200062B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBAB4", Offset = "0x9BBAB4")]
		private sealed class <FindNewHome>d__56 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int minNumBeatsToWait;

			[Token(Token = "0x4001B6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int maxNumBeatsToWait;

			[Token(Token = "0x4001B6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SmartBug <>4__this;

			[Token(Token = "0x4001B6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <numBeatsToWait>5__2;

			[Token(Token = "0x4001B6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private bool <newHomeFound>5__3;

			[Token(Token = "0x4001B6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <i>5__4;

			[Token(Token = "0x17000498")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002688")]
				[Address(RVA = "0xBD3CAC", Offset = "0xBD3CAC", VA = "0xBD3CAC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000499")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600268A")]
				[Address(RVA = "0xBD3D1C", Offset = "0xBD3D1C", VA = "0xBD3D1C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002685")]
			[Address(RVA = "0xBD2D70", Offset = "0xBD2D70", VA = "0xBD2D70")]
			[DebuggerHidden]
			public <FindNewHome>d__56(int <>1__state)
			{
			}

			[Token(Token = "0x6002686")]
			[Address(RVA = "0xBD39E4", Offset = "0xBD39E4", VA = "0xBD39E4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002687")]
			[Address(RVA = "0xBD39E8", Offset = "0xBD39E8", VA = "0xBD39E8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002689")]
			[Address(RVA = "0xBD3CB4", Offset = "0xBD3CB4", VA = "0xBD3CB4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200062C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBAC4", Offset = "0x9BBAC4")]
		private sealed class <>c__DisplayClass57_0
		{
			[Token(Token = "0x4001B6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SmartBug <>4__this;

			[Token(Token = "0x4001B70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform oldParent;

			[Token(Token = "0x600268B")]
			[Address(RVA = "0xBD2E2C", Offset = "0xBD2E2C", VA = "0xBD2E2C")]
			public <>c__DisplayClass57_0()
			{
			}

			[Token(Token = "0x600268C")]
			[Address(RVA = "0xBD2E34", Offset = "0xBD2E34", VA = "0xBD2E34")]
			internal void <EmitLightGemOnHand>b__0()
			{
			}

			[Token(Token = "0x600268D")]
			[Address(RVA = "0xBD2EA0", Offset = "0xBD2EA0", VA = "0xBD2EA0")]
			internal void <EmitLightGemOnHand>b__1()
			{
			}
		}

		[Token(Token = "0x200062D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBAD4", Offset = "0x9BBAD4")]
		private sealed class <EmitLightGemOnHand>d__57 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SmartBug <>4__this;

			[Token(Token = "0x4001B74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public PlayerController controller;

			[Token(Token = "0x4001B75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Sequence <seq>5__2;

			[Token(Token = "0x1700049A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002691")]
				[Address(RVA = "0xBD396C", Offset = "0xBD396C", VA = "0xBD396C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700049B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002693")]
				[Address(RVA = "0xBD39DC", Offset = "0xBD39DC", VA = "0xBD39DC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600268E")]
			[Address(RVA = "0xBD2D9C", Offset = "0xBD2D9C", VA = "0xBD2D9C")]
			[DebuggerHidden]
			public <EmitLightGemOnHand>d__57(int <>1__state)
			{
			}

			[Token(Token = "0x600268F")]
			[Address(RVA = "0xBD358C", Offset = "0xBD358C", VA = "0xBD358C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002690")]
			[Address(RVA = "0xBD3590", Offset = "0xBD3590", VA = "0xBD3590", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002692")]
			[Address(RVA = "0xBD3974", Offset = "0xBD3974", VA = "0xBD3974", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F21")]
		private const int __MAX_TASKS = 10;

		[Token(Token = "0x4000F22")]
		private const string __TOO_MANY_TASKS_MSG = "Too many tasks in {0}!";

		[Token(Token = "0x4000F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9C721C", Offset = "0x9C721C")]
		[SerializeField]
		private float _defaultDrag;

		[Token(Token = "0x4000F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _slowdownDrag;

		[Token(Token = "0x4000F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x9C7278", Offset = "0x9C7278")]
		private Vector2 _relocationRange;

		[Token(Token = "0x4000F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9C72C0", Offset = "0x9C72C0")]
		private float _propulsionVelocity;

		[Token(Token = "0x4000F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9C7304", Offset = "0x9C7304")]
		[SerializeField]
		private Transform _visualRootNode;

		[Token(Token = "0x4000F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private MeshRenderer[] _wingStates;

		[Token(Token = "0x4000F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9C7360", Offset = "0x9C7360")]
		private GenericTriggerVolume _outerProximityVolume;

		[Token(Token = "0x4000F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GenericTriggerVolume _innerProximityVolume;

		[Token(Token = "0x4000F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private InteractiveCore _interactiveCore;

		[Token(Token = "0x4000F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C73BC", Offset = "0x9C73BC")]
		private MeshRenderer <BodyRenderer>k__BackingField;

		[Token(Token = "0x4000F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C73CC", Offset = "0x9C73CC")]
		private Rigidbody <Rigidbody>k__BackingField;

		[Token(Token = "0x4000F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 _homePosition;

		[Token(Token = "0x4000F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private bool _held;

		[Token(Token = "0x4000F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private TaskQueue<SmartBug> _tasks;

		[Token(Token = "0x4000F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private SmartBugDartAway _dartAwayTask;

		[Token(Token = "0x4000F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private SmartBugHover _hoverTask;

		[Token(Token = "0x4000F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private SmartBugGoToDestination _goHomeTask;

		[Token(Token = "0x4000F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private SmartBugGoToDestination _goToHandTask;

		[Token(Token = "0x17000270")]
		public float DefaultDrag
		{
			[Token(Token = "0x6001A11")]
			[Address(RVA = "0xBD18E8", Offset = "0xBD18E8", VA = "0xBD18E8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000271")]
		public float SlowdownDrag
		{
			[Token(Token = "0x6001A12")]
			[Address(RVA = "0xBD18F0", Offset = "0xBD18F0", VA = "0xBD18F0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000272")]
		public Vector2 RelocationRange
		{
			[Token(Token = "0x6001A13")]
			[Address(RVA = "0xBD18F8", Offset = "0xBD18F8", VA = "0xBD18F8")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x17000273")]
		public float PropulsionVelocity
		{
			[Token(Token = "0x6001A14")]
			[Address(RVA = "0xBD1900", Offset = "0xBD1900", VA = "0xBD1900")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000274")]
		public Transform VisualRootNode
		{
			[Token(Token = "0x6001A15")]
			[Address(RVA = "0xBD1908", Offset = "0xBD1908", VA = "0xBD1908")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000275")]
		public MeshRenderer BodyRenderer
		{
			[Token(Token = "0x6001A16")]
			[Address(RVA = "0xBD1910", Offset = "0xBD1910", VA = "0xBD1910")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D1D30", Offset = "0x9D1D30")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A17")]
			[Address(RVA = "0xBD1918", Offset = "0xBD1918", VA = "0xBD1918")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D1D40", Offset = "0x9D1D40")]
			private set
			{
			}
		}

		[Token(Token = "0x17000276")]
		public Rigidbody Rigidbody
		{
			[Token(Token = "0x6001A18")]
			[Address(RVA = "0xBD1920", Offset = "0xBD1920", VA = "0xBD1920")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D1D50", Offset = "0x9D1D50")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A19")]
			[Address(RVA = "0xBD1928", Offset = "0xBD1928", VA = "0xBD1928")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D1D60", Offset = "0x9D1D60")]
			private set
			{
			}
		}

		[Token(Token = "0x6001A1A")]
		[Address(RVA = "0xBD1930", Offset = "0xBD1930", VA = "0xBD1930")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A1B")]
		[Address(RVA = "0xBD1D38", Offset = "0xBD1D38", VA = "0xBD1D38")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A1C")]
		[Address(RVA = "0xBD1D3C", Offset = "0xBD1D3C", VA = "0xBD1D3C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001A1D")]
		[Address(RVA = "0xBD205C", Offset = "0xBD205C", VA = "0xBD205C")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6001A1E")]
		[Address(RVA = "0xBD2304", Offset = "0xBD2304", VA = "0xBD2304")]
		private void OnHoldStart(PlayerControllerInput input)
		{
		}

		[Token(Token = "0x6001A1F")]
		[Address(RVA = "0xBD236C", Offset = "0xBD236C", VA = "0xBD236C")]
		private void OnHoldEnd(PlayerControllerInput input)
		{
		}

		[Token(Token = "0x6001A20")]
		[Address(RVA = "0xBD2424", Offset = "0xBD2424", VA = "0xBD2424")]
		private void PlayerEnteredOuterProximity()
		{
		}

		[Token(Token = "0x6001A21")]
		[Address(RVA = "0xBD25DC", Offset = "0xBD25DC", VA = "0xBD25DC")]
		private void PlayerLeftOuterProximity()
		{
		}

		[Token(Token = "0x6001A22")]
		[Address(RVA = "0xBD2670", Offset = "0xBD2670", VA = "0xBD2670")]
		private void PlayerEnteredInnerProximity()
		{
		}

		[Token(Token = "0x6001A23")]
		[Address(RVA = "0xBD276C", Offset = "0xBD276C", VA = "0xBD276C")]
		public void SetHomePosition(Vector3 newHomePosition)
		{
		}

		[Token(Token = "0x6001A24")]
		[Address(RVA = "0xBD27C0", Offset = "0xBD27C0", VA = "0xBD27C0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A25")]
		[Address(RVA = "0xBD2428", Offset = "0xBD2428", VA = "0xBD2428")]
		private void SubscribeToPalmTracking()
		{
		}

		[Token(Token = "0x6001A26")]
		[Address(RVA = "0xBD2978", Offset = "0xBD2978", VA = "0xBD2978")]
		private void UnsubscribeToPalmTracking()
		{
		}

		[Token(Token = "0x6001A27")]
		[Address(RVA = "0xBD2AAC", Offset = "0xBD2AAC", VA = "0xBD2AAC")]
		private void OnPalmHeldSkyward(PlayerController controller, bool landOnHand)
		{
		}

		[Token(Token = "0x6001A28")]
		[Address(RVA = "0xBD1CC4", Offset = "0xBD1CC4", VA = "0xBD1CC4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9D1D70", Offset = "0x9D1D70")]
		private IEnumerator DoWingFlap()
		{
			return null;
		}

		[Token(Token = "0x6001A29")]
		[Address(RVA = "0xBD2CA8", Offset = "0xBD2CA8", VA = "0xBD2CA8")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001A2A")]
		[Address(RVA = "0xBD1AB4", Offset = "0xBD1AB4", VA = "0xBD1AB4")]
		private void SetupTasks()
		{
		}

		[Token(Token = "0x6001A2B")]
		[Address(RVA = "0xBD28C8", Offset = "0xBD28C8", VA = "0xBD28C8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9D1DD4", Offset = "0x9D1DD4")]
		private IEnumerator FindNewHome(int minNumBeatsToWait = 2, int maxNumBeatsToWait = 8)
		{
			return null;
		}

		[Token(Token = "0x6001A2C")]
		[Address(RVA = "0xBD2BE4", Offset = "0xBD2BE4", VA = "0xBD2BE4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9D1E38", Offset = "0x9D1E38")]
		private IEnumerator EmitLightGemOnHand(PlayerController controller)
		{
			return null;
		}

		[Token(Token = "0x6001A2D")]
		[Address(RVA = "0xBD2DC8", Offset = "0xBD2DC8", VA = "0xBD2DC8")]
		public SmartBug()
		{
		}

		[Token(Token = "0x6001A2E")]
		[Address(RVA = "0xBD2E28", Offset = "0xBD2E28", VA = "0xBD2E28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D1E9C", Offset = "0x9D1E9C")]
		private void <SubscribeToPalmTracking>b__47_0()
		{
		}
	}
	[Token(Token = "0x200038B")]
	public class CommandMacrosProvider : ITypesProvider
	{
		[Token(Token = "0x6001A2F")]
		[Address(RVA = "0xC786C0", Offset = "0xC786C0", VA = "0xC786C0", Slot = "4")]
		public Type[] GetTypes()
		{
			return null;
		}

		[Token(Token = "0x6001A30")]
		[Address(RVA = "0xC7430C", Offset = "0xC7430C", VA = "0xC7430C")]
		public CommandMacrosProvider()
		{
		}
	}
	[Token(Token = "0x200038C")]
	public static class CommandMacros
	{
		[Serializable]
		[Token(Token = "0x200062E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBAE4", Offset = "0x9BBAE4")]
		private sealed class <>c
		{
			[Token(Token = "0x4001B76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001B77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<LoadingZoneKey, string> <>9__2_0;

			[Token(Token = "0x4001B78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<LoadingZone, int> <>9__3_0;

			[Token(Token = "0x4001B79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<LoadingZone, string> <>9__3_1;

			[Token(Token = "0x4001B7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<PersistentEntity, string> <>9__10_0;

			[Token(Token = "0x6002695")]
			[Address(RVA = "0xC78068", Offset = "0xC78068", VA = "0xC78068")]
			public <>c()
			{
			}

			[Token(Token = "0x6002696")]
			[Address(RVA = "0xC78070", Offset = "0xC78070", VA = "0xC78070")]
			internal string <PrintZone>b__2_0(LoadingZoneKey s)
			{
				return null;
			}

			[Token(Token = "0x6002697")]
			[Address(RVA = "0xC78104", Offset = "0xC78104", VA = "0xC78104")]
			internal int <PrintZones>b__3_0(LoadingZone z)
			{
				return default(int);
			}

			[Token(Token = "0x6002698")]
			[Address(RVA = "0xC78130", Offset = "0xC78130", VA = "0xC78130")]
			internal string <PrintZones>b__3_1(LoadingZone z)
			{
				return null;
			}

			[Token(Token = "0x6002699")]
			[Address(RVA = "0xC78324", Offset = "0xC78324", VA = "0xC78324")]
			internal string <SpawnList>b__10_0(PersistentEntity n)
			{
				return null;
			}
		}

		[Token(Token = "0x200062F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBAF4", Offset = "0x9BBAF4")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x4001B7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LoadingZoneKey zone;

			[Token(Token = "0x600269A")]
			[Address(RVA = "0xC76790", Offset = "0xC76790", VA = "0xC76790")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x600269B")]
			[Address(RVA = "0xC78390", Offset = "0xC78390", VA = "0xC78390")]
			internal bool <ZoneWarp>b__0(LoadingZone z)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000630")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBB04", Offset = "0x9BBB04")]
		private sealed class <>c__DisplayClass9_0
		{
			[Token(Token = "0x4001B7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string id;

			[Token(Token = "0x600269C")]
			[Address(RVA = "0xC76BF8", Offset = "0xC76BF8", VA = "0xC76BF8")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x600269D")]
			[Address(RVA = "0xC783CC", Offset = "0xC783CC", VA = "0xC783CC")]
			internal bool <SpawnPrefab>b__0(PersistentEntity n)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000631")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBB14", Offset = "0x9BBB14")]
		private sealed class <DoRailtest2>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private LightRailPath <path>5__2;

			[Token(Token = "0x1700049C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60026A1")]
				[Address(RVA = "0xC78648", Offset = "0xC78648", VA = "0xC78648", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700049D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60026A3")]
				[Address(RVA = "0xC786B8", Offset = "0xC786B8", VA = "0xC786B8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600269E")]
			[Address(RVA = "0xC77958", Offset = "0xC77958", VA = "0xC77958")]
			[DebuggerHidden]
			public <DoRailtest2>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x600269F")]
			[Address(RVA = "0xC7840C", Offset = "0xC7840C", VA = "0xC7840C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60026A0")]
			[Address(RVA = "0xC78410", Offset = "0xC78410", VA = "0xC78410", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60026A2")]
			[Address(RVA = "0xC78650", Offset = "0xC78650", VA = "0xC78650", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000632")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBB24", Offset = "0x9BBB24")]
		private sealed class <>c__DisplayClass31_0
		{
			[Token(Token = "0x4001B80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int shotId;

			[Token(Token = "0x60026A4")]
			[Address(RVA = "0xC77F58", Offset = "0xC77F58", VA = "0xC77F58")]
			public <>c__DisplayClass31_0()
			{
			}

			[Token(Token = "0x60026A5")]
			[Address(RVA = "0xC78354", Offset = "0xC78354", VA = "0xC78354")]
			internal bool <do_pan>b__0(PanningShot e)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001A31")]
		[Address(RVA = "0xC75CA4", Offset = "0xC75CA4", VA = "0xC75CA4")]
		[AttributeAttribute(Name = "CommandAttribute", RVA = "0x9D1EAC", Offset = "0x9D1EAC")]
		public static void GrantLightGemNoVisual(int count)
		{
		}

		[Token(Token = "0x6001A32")]
		[Address(RVA = "0xC75F38", Offset = "0xC75F38", VA = "0xC75F38")]
		[AttributeAttribute(Name = "CommandAttribute", RVA = "0x9D1F28", Offset = "0x9D1F28")]
		public static void GetGemCount()
		{
		}

		[Token(Token = "0x6001A33")]
		[Address(RVA = "0xC76078", Offset = "0xC76078", VA = "0xC76078")]
		[AttributeAttribute(Name = "CommandAttribute", RVA = "0x9D1F6C", Offset = "0x9D1F6C")]
		public static void PrintZone()
		{
		}

		[Token(Token = "0x6001A34")]
		[Address(RVA = "0xC7639C", Offset = "0xC7639C", VA = "0xC7639C")]
		[AttributeAttribute(Name = "CommandAttribute", RVA = "0x9D1FCC", Offset = "0x9D1FCC")]
		public static void PrintZones()
		{
		}

		[Token(Token = "0x6001A35")]
		[Address(RVA = "0xC765F0", Offset = "0xC765F0", VA = "0xC765F0")]
		[AttributeAttribute(Name = "CommandAttribute", RVA = "0x9D202C", Offset = "0x9D202C")]
		public static void ZoneWarp(int zoneStr)
		{
		}

		[Token(Token = "0x6001A36")]
		[Address(RVA = "0xC76798", Offset = "0xC76798", VA = "0xC76798")]
		[AttributeAttribute(Name = "CommandAttribute", RVA = "0x9D20A8", Offset = "0x9D20A8")]
		public static void RecordingStart()
		{
		}

		[Token(Token = "0x6001A37")]
		[Address(RVA = "0xC76800", Offset = "0xC76800", VA = "0xC76800")]
		[AttributeAttribute(Name = "CommandAttribute", RVA = "0x9D20EC", Offset = "0x9D20EC")]
		public static void Save(int slot)
		{
		}

		[Token(Token = "0x6001A38")]
		[Address(RVA = "0xC768C0", Offset = "0xC768C0", VA = "0xC768C0")]
		[AttributeAttribute(Name = "CommandAttribute", RVA = "0x9D214C", Offset = "0x9D214C")]
		public static void Save()
		{
		}

		[Token(Token = "0x6001A39")]
		[Address(RVA = "0xC768C8", Offset = "0xC768C8", VA = "0xC768C8")]
		[AttributeAttribute(Name = "CommandAttribute", RVA = "0x9D21AC", Offset = "0x9D21AC")]
		public static void Load(int slot)
		{
		}

		[Token(Token = "0x6001A3A")]
		[Address(RVA = "0xC76988", Offset = "0xC76988", VA = "0xC76988")]
		[AttributeAttribute(Name = "CommandAttribute", RVA = "0x9D220C", Offset = "0x9D220C")]
		public static void SpawnPrefab(string id)
		{
		}

		[Token(Token = "0x6001A3B")]
		[Address(RVA = "0xC76C00", Offset = "0xC76C00", VA = "0xC76C00")]
		[AttributeAttribute(Name = "CommandAttribute", RVA = "0x9D226C", Offset = "0x9D226C")]
		public static void SpawnList()
		{
		}

		[Token(Token = "0x6001A3C")]
		[Address(RVA = "0xC76D74", Offset = "0xC76D74", VA = "0xC76D74")]
		[AttributeAttribute(Name = "CommandAttribute", RVA = "0x9D22CC", Offset = "0x9D22CC")]
		public static void AgeAll()
		{
		}

		[Token(Token = "0x6001A3D")]
		[Address(RVA = "0xC76E78", Offset = "0xC76E78", VA = "0xC76E78")]
		[AttributeAttribute(Name = "CommandAttribute", RVA = "0x9D2310", Offset = "0x9D2310")]
		public static void Timescale(float timeScale)
		{
		}

		[Token(Token = "0x6001A3E")]
		[Address(RVA = "0xC76E80", Offset = "0xC76E80", VA = "0xC76E80")]
		[AttributeAttribute(Name = "CommandAttribute", RVA = "0x9D2354", Offset = "0x9D2354")]
		public static void SetVal(string key, string val)
		{
		}

		[Token(Token = "0x6001A3F")]
		[Address(RVA = "0xC76F00", Offset = "0xC76F00", VA = "0xC76F00")]
		[AttributeAttribute(Name = "CommandAttribute", RVA = "0x9D2398", Offset = "0x9D2398")]
		public static void GetVal(string key)
		{
		}

		[Token(Token = "0x6001A40")]
		[Address(RVA = "0xC76FA4", Offset = "0xC76FA4", VA = "0xC76FA4")]
		[AttributeAttribute(Name = "CommandAttribute", RVA = "0x9D23DC", Offset = "0x9D23DC")]
		public static void NoClip()
		{
		}

		[Token(Token = "0x6001A41")]
		[Address(RVA = "0xC770A4", Offset = "0xC770A4", VA = "0xC770A4")]
		[AttributeAttribute(Name = "CommandAttribute", RVA = "0x9D2420", Offset = "0x9D2420")]
		public static void EmptyWater()
		{
		}

		[Token(Token = "0x6001A42")]
		[Address(RVA = "0xC77104", Offset = "0xC77104", VA = "0xC77104")]
		[AttributeAttribute(Name = "CommandAttribute", RVA = "0x9D2464", Offset = "0x9D2464")]
		public static void SetWater(float percentage)
		{
		}

		[Token(Token = "0x6001A43")]
		[Address(RVA = "0xC77174", Offset = "0xC77174", VA = "0xC77174")]
		[AttributeAttribute(Name = "CommandAttribute", RVA = "0x9D24C4", Offset = "0x9D24C4")]
		public static void FindAllPrefabs()
		{
		}

		[Token(Token = "0x6001A44")]
		[Address(RVA = "0xC77458", Offset = "0xC77458", VA = "0xC77458")]
		[AttributeAttribute(Name = "CommandAttribute", RVA = "0x9D2524", Offset = "0x9D2524")]
		public static void PrintPlaytime()
		{
		}

		[Token(Token = "0x6001A45")]
		[Address(RVA = "0xC7754C", Offset = "0xC7754C", VA = "0xC7754C")]
		[AttributeAttribute(Name = "CommandAttribute", RVA = "0x9D2584", Offset = "0x9D2584")]
		public static void AddPlaytimeHours(double hours)
		{
		}

		[Token(Token = "0x6001A46")]
		[Address(RVA = "0xC775F8", Offset = "0xC775F8", VA = "0xC775F8")]
		[AttributeAttribute(Name = "CommandAttribute", RVA = "0x9D25E4", Offset = "0x9D25E4")]
		public static void Super()
		{
		}

		[Token(Token = "0x6001A47")]
		[Address(RVA = "0xC77614", Offset = "0xC77614", VA = "0xC77614")]
		[AttributeAttribute(Name = "CommandAttribute", RVA = "0x9D2644", Offset = "0x9D2644")]
		public static void Cheats()
		{
		}

		[Token(Token = "0x6001A48")]
		[Address(RVA = "0xC7771C", Offset = "0xC7771C", VA = "0xC7771C")]
		[AttributeAttribute(Name = "CommandAttribute", RVA = "0x9D26A4", Offset = "0x9D26A4")]
		public static void ResetSaveFile()
		{
		}

		[Token(Token = "0x6001A49")]
		[Address(RVA = "0xC777D4", Offset = "0xC777D4", VA = "0xC777D4")]
		[AttributeAttribute(Name = "CommandAttribute", RVA = "0x9D2704", Offset = "0x9D2704")]
		public static void LightRailTest()
		{
		}

		[Token(Token = "0x6001A4A")]
		[Address(RVA = "0xC77888", Offset = "0xC77888", VA = "0xC77888")]
		[AttributeAttribute(Name = "CommandAttribute", RVA = "0x9D2748", Offset = "0x9D2748")]
		public static void LightRailTest2()
		{
		}

		[Token(Token = "0x6001A4B")]
		[Address(RVA = "0xC778F8", Offset = "0xC778F8", VA = "0xC778F8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9D278C", Offset = "0x9D278C")]
		private static IEnumerator DoRailtest2()
		{
			return null;
		}

		[Token(Token = "0x6001A4C")]
		[Address(RVA = "0xC77984", Offset = "0xC77984", VA = "0xC77984")]
		[AttributeAttribute(Name = "CommandAttribute", RVA = "0x9D27F0", Offset = "0x9D27F0")]
		public static void SetScale(float scale)
		{
		}

		[Token(Token = "0x6001A4D")]
		[Address(RVA = "0xC77A28", Offset = "0xC77A28", VA = "0xC77A28")]
		[AttributeAttribute(Name = "CommandAttribute", RVA = "0x9D2834", Offset = "0x9D2834")]
		public static void hide_exteriors()
		{
		}

		[Token(Token = "0x6001A4E")]
		[Address(RVA = "0xC77A88", Offset = "0xC77A88", VA = "0xC77A88")]
		[AttributeAttribute(Name = "CommandAttribute", RVA = "0x9D2878", Offset = "0x9D2878")]
		public static void narrative_all()
		{
		}

		[Token(Token = "0x6001A4F")]
		[Address(RVA = "0xC77DC4", Offset = "0xC77DC4", VA = "0xC77DC4")]
		[AttributeAttribute(Name = "CommandAttribute", RVA = "0x9D28BC", Offset = "0x9D28BC")]
		public static void light_ring_visible(bool visible)
		{
		}

		[Token(Token = "0x6001A50")]
		[Address(RVA = "0xC77E2C", Offset = "0xC77E2C", VA = "0xC77E2C")]
		[AttributeAttribute(Name = "CommandAttribute", RVA = "0x9D2900", Offset = "0x9D2900")]
		public static void do_pan(int shotId)
		{
		}

		[Token(Token = "0x6001A51")]
		[Address(RVA = "0xC77F60", Offset = "0xC77F60", VA = "0xC77F60")]
		[AttributeAttribute(Name = "CommandAttribute", RVA = "0x9D2944", Offset = "0x9D2944")]
		public static void bloom(bool active)
		{
		}
	}
	[Token(Token = "0x200038D")]
	public sealed class DynaPlanter : MonoBehaviour, IFujiSerializable
	{
		[Token(Token = "0x2000633")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBB34", Offset = "0x9BBB34")]
		private sealed class <DoHandlePulsate>d__27 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlayerControllerInput input;

			[Token(Token = "0x4001B84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DynaPlanterHandle handle;

			[Token(Token = "0x4001B85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public DynaPlanter <>4__this;

			[Token(Token = "0x4001B86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Vector3 <prevScale>5__2;

			[Token(Token = "0x1700049E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60026A9")]
				[Address(RVA = "0xC7E4A4", Offset = "0xC7E4A4", VA = "0xC7E4A4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700049F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60026AB")]
				[Address(RVA = "0xC7E514", Offset = "0xC7E514", VA = "0xC7E514", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60026A6")]
			[Address(RVA = "0xC7D640", Offset = "0xC7D640", VA = "0xC7D640")]
			[DebuggerHidden]
			public <DoHandlePulsate>d__27(int <>1__state)
			{
			}

			[Token(Token = "0x60026A7")]
			[Address(RVA = "0xC7DFCC", Offset = "0xC7DFCC", VA = "0xC7DFCC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60026A8")]
			[Address(RVA = "0xC7DFD0", Offset = "0xC7DFD0", VA = "0xC7DFD0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60026AA")]
			[Address(RVA = "0xC7E4AC", Offset = "0xC7E4AC", VA = "0xC7E4AC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000634")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBB44", Offset = "0x9BBB44")]
		private sealed class <DoInteractionSequence>d__37 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DynaPlanter <>4__this;

			[Token(Token = "0x4001B8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Collider <colliderHandle1>5__2;

			[Token(Token = "0x4001B8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Collider <colliderHandle2>5__3;

			[Token(Token = "0x170004A0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60026AF")]
				[Address(RVA = "0xC7F9AC", Offset = "0xC7F9AC", VA = "0xC7F9AC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004A1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60026B1")]
				[Address(RVA = "0xC7FA1C", Offset = "0xC7FA1C", VA = "0xC7FA1C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60026AC")]
			[Address(RVA = "0xC7D7B4", Offset = "0xC7D7B4", VA = "0xC7D7B4")]
			[DebuggerHidden]
			public <DoInteractionSequence>d__37(int <>1__state)
			{
			}

			[Token(Token = "0x60026AD")]
			[Address(RVA = "0xC7E51C", Offset = "0xC7E51C", VA = "0xC7E51C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60026AE")]
			[Address(RVA = "0xC7E520", Offset = "0xC7E520", VA = "0xC7E520", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60026B0")]
			[Address(RVA = "0xC7F9B4", Offset = "0xC7F9B4", VA = "0xC7F9B4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000635")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBB54", Offset = "0x9BBB54")]
		private sealed class <DoSeperatedHandlesRoutine>d__38 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DynaPlanter <>4__this;

			[Token(Token = "0x170004A2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60026B5")]
				[Address(RVA = "0xC80848", Offset = "0xC80848", VA = "0xC80848", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004A3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60026B7")]
				[Address(RVA = "0xC808B8", Offset = "0xC808B8", VA = "0xC808B8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60026B2")]
			[Address(RVA = "0xC7D854", Offset = "0xC7D854", VA = "0xC7D854")]
			[DebuggerHidden]
			public <DoSeperatedHandlesRoutine>d__38(int <>1__state)
			{
			}

			[Token(Token = "0x60026B3")]
			[Address(RVA = "0xC7FA24", Offset = "0xC7FA24", VA = "0xC7FA24", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60026B4")]
			[Address(RVA = "0xC7FA28", Offset = "0xC7FA28", VA = "0xC7FA28", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60026B6")]
			[Address(RVA = "0xC80850", Offset = "0xC80850", VA = "0xC80850", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9C73DC", Offset = "0x9C73DC")]
		public DynaPlanterHandle _handle1;

		[Token(Token = "0x4000F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DynaPlanterHandle _handle2;

		[Token(Token = "0x4000F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject _finalPlanter;

		[Token(Token = "0x4000F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PersistentEntity _entity;

		[Token(Token = "0x4000F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject _glowRing;

		[Token(Token = "0x4000F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9C7414", Offset = "0x9C7414")]
		public Material _shaftMaterial;

		[Token(Token = "0x4000F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Mesh _shaftMesh;

		[Token(Token = "0x4000F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _placementSequenceInProgress;

		[Token(Token = "0x4000F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private DynaPlanterBase _planterBase;

		[Token(Token = "0x4000F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private InteractiveCore iCoreHandle1;

		[Token(Token = "0x4000F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private InteractiveCore iCoreHandle2;

		[Token(Token = "0x4000F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[FujiSerialized]
		private bool _isSetInGround;

		[Token(Token = "0x4000F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool _anyHandleReleased;

		[Token(Token = "0x4000F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Coroutine _threadHandle1;

		[Token(Token = "0x4000F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Coroutine _threadHandle2;

		[Token(Token = "0x4000F44")]
		private const float MinRadius = 0.25f;

		[Token(Token = "0x4000F45")]
		private const float MaxRadius = 1f;

		[Token(Token = "0x4000F46")]
		private const float MaxHeight = 1f;

		[Token(Token = "0x4000F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[FujiSerialized]
		private float chosenRadius;

		[Token(Token = "0x4000F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[FujiSerialized]
		private float3 chosenFirstPoint;

		[Token(Token = "0x4000F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[FujiSerialized]
		private float3 chosenLocationHandle;

		[Token(Token = "0x4000F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[FujiSerialized]
		private float chosenHeight;

		[Token(Token = "0x4000F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[FujiSerialized]
		private float3 chosenSecondPoint;

		[Token(Token = "0x17000277")]
		[FujiSerialized]
		private PosRotScale _worldPositionData
		{
			[Token(Token = "0x6001A52")]
			[Address(RVA = "0xC7C4E8", Offset = "0xC7C4E8", VA = "0xC7C4E8")]
			get
			{
				return default(PosRotScale);
			}
			[Token(Token = "0x6001A53")]
			[Address(RVA = "0xC7C558", Offset = "0xC7C558", VA = "0xC7C558")]
			set
			{
			}
		}

		[Token(Token = "0x17000278")]
		public bool AnyHandleBeingHeld
		{
			[Token(Token = "0x6001A54")]
			[Address(RVA = "0xC7C5D4", Offset = "0xC7C5D4", VA = "0xC7C5D4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001A55")]
		[Address(RVA = "0xC7C62C", Offset = "0xC7C62C", VA = "0xC7C62C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A56")]
		[Address(RVA = "0xC7CF18", Offset = "0xC7CF18", VA = "0xC7CF18")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001A57")]
		[Address(RVA = "0xC7D028", Offset = "0xC7D028", VA = "0xC7D028")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001A58")]
		[Address(RVA = "0xC7D16C", Offset = "0xC7D16C", VA = "0xC7D16C")]
		private void EventOnPostDeserialize()
		{
		}

		[Token(Token = "0x6001A59")]
		[Address(RVA = "0xC7CC78", Offset = "0xC7CC78", VA = "0xC7CC78")]
		private void EventOnEnterStorageWorld(Location oldState, Location newState)
		{
		}

		[Token(Token = "0x6001A5A")]
		[Address(RVA = "0xC7D3A8", Offset = "0xC7D3A8", VA = "0xC7D3A8")]
		private void OnHandle1Grabbed(PlayerControllerInput input)
		{
		}

		[Token(Token = "0x6001A5B")]
		[Address(RVA = "0xC7D5F0", Offset = "0xC7D5F0", VA = "0xC7D5F0")]
		private void OnHandle2Grabbed(PlayerControllerInput input)
		{
		}

		[Token(Token = "0x6001A5C")]
		[Address(RVA = "0xC7D4CC", Offset = "0xC7D4CC", VA = "0xC7D4CC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9D2988", Offset = "0x9D2988")]
		private IEnumerator DoHandlePulsate(PlayerControllerInput input, DynaPlanterHandle handle)
		{
			return null;
		}

		[Token(Token = "0x6001A5D")]
		[Address(RVA = "0xC7D66C", Offset = "0xC7D66C", VA = "0xC7D66C")]
		private void OnAnyHandleReleased(PlayerControllerInput input)
		{
		}

		[Token(Token = "0x6001A5E")]
		[Address(RVA = "0xC7D57C", Offset = "0xC7D57C", VA = "0xC7D57C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9D29EC", Offset = "0x9D29EC")]
		private IEnumerator DoInteractionSequence(PlayerControllerInput input)
		{
			return null;
		}

		[Token(Token = "0x6001A5F")]
		[Address(RVA = "0xC7D7E0", Offset = "0xC7D7E0", VA = "0xC7D7E0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9D2A50", Offset = "0x9D2A50")]
		private IEnumerator DoSeperatedHandlesRoutine()
		{
			return null;
		}

		[Token(Token = "0x6001A60")]
		[Address(RVA = "0xC7D880", Offset = "0xC7D880", VA = "0xC7D880")]
		private void BecomeFused()
		{
		}

		[Token(Token = "0x6001A61")]
		[Address(RVA = "0xC7DD48", Offset = "0xC7DD48", VA = "0xC7DD48")]
		public void AllowEditingOfPlacedPlanter()
		{
		}

		[Token(Token = "0x6001A62")]
		[Address(RVA = "0xC7DE10", Offset = "0xC7DE10", VA = "0xC7DE10")]
		private void DrawLightShaft(float3 t, quaternion r, float3 s)
		{
		}

		[Token(Token = "0x6001A63")]
		[Address(RVA = "0xC7DFBC", Offset = "0xC7DFBC", VA = "0xC7DFBC", Slot = "4")]
		public void OnPreSerialize()
		{
		}

		[Token(Token = "0x6001A64")]
		[Address(RVA = "0xC7DFC0", Offset = "0xC7DFC0", VA = "0xC7DFC0", Slot = "5")]
		public void OnPostDeserialize()
		{
		}

		[Token(Token = "0x6001A65")]
		[Address(RVA = "0xC7DFC4", Offset = "0xC7DFC4", VA = "0xC7DFC4")]
		public DynaPlanter()
		{
		}
	}
	[Token(Token = "0x200038E")]
	public class DynaPlanterBase : MonoBehaviour, IPlantableSurface, IGameObject, IFujiSerializable, IWaterReceiver
	{
		[Token(Token = "0x4000F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[FujiSerialized]
		public List<FujiLocalInstanceRef> occupants;

		[Token(Token = "0x4000F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DynaPlanter ParentPlanter;

		[Token(Token = "0x17000279")]
		public int OccupantCount
		{
			[Token(Token = "0x6001A66")]
			[Address(RVA = "0xC807F8", Offset = "0xC807F8", VA = "0xC807F8", Slot = "7")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700027A")]
		public Transform UniformScaleTransform
		{
			[Token(Token = "0x6001A6C")]
			[Address(RVA = "0xC8109C", Offset = "0xC8109C", VA = "0xC8109C", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027B")]
		public bool CanBeDestroyed
		{
			[Token(Token = "0x6001A6D")]
			[Address(RVA = "0xC810CC", Offset = "0xC810CC", VA = "0xC810CC", Slot = "10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001A67")]
		[Address(RVA = "0xC808C0", Offset = "0xC808C0", VA = "0xC808C0", Slot = "6")]
		public bool CanBePlantedUpon()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A68")]
		[Address(RVA = "0xC808F8", Offset = "0xC808F8", VA = "0xC808F8", Slot = "4")]
		public Vector3? GetPlantingPosition(Vector3? desiredPlantingPosition)
		{
			return null;
		}

		[Token(Token = "0x6001A69")]
		[Address(RVA = "0xC80B00", Offset = "0xC80B00", VA = "0xC80B00", Slot = "5")]
		public void SetOccupancy(bool occupancy, PersistentEntity occupant)
		{
		}

		[Token(Token = "0x6001A6A")]
		[Address(RVA = "0xC80CD0", Offset = "0xC80CD0", VA = "0xC80CD0", Slot = "15")]
		public void ReceiveWater(float waterAmount, Vector3? worldPosition, InputHandedness? hand, Vector3? worldSprayVelocity)
		{
		}

		[Token(Token = "0x6001A6B")]
		[Address(RVA = "0xC8102C", Offset = "0xC8102C", VA = "0xC8102C", Slot = "9")]
		public FujiLocalInstanceRef GetOccupant(int index)
		{
			return default(FujiLocalInstanceRef);
		}

		[Token(Token = "0x6001A6E")]
		[Address(RVA = "0xC810D4", Offset = "0xC810D4", VA = "0xC810D4", Slot = "13")]
		public void OnPreSerialize()
		{
		}

		[Token(Token = "0x6001A6F")]
		[Address(RVA = "0xC810D8", Offset = "0xC810D8", VA = "0xC810D8", Slot = "14")]
		public void OnPostDeserialize()
		{
		}

		[Token(Token = "0x6001A70")]
		[Address(RVA = "0xC810DC", Offset = "0xC810DC", VA = "0xC810DC")]
		public DynaPlanterBase()
		{
		}

		[SpecialName]
		[Token(Token = "0x6001A71")]
		[Address(RVA = "0xC8114C", Offset = "0xC8114C", VA = "0xC8114C", Slot = "11")]
		private GameObject IGameObject.get_gameObject()
		{
			return null;
		}

		[SpecialName]
		[Token(Token = "0x6001A72")]
		[Address(RVA = "0xC81154", Offset = "0xC81154", VA = "0xC81154", Slot = "12")]
		private Transform IGameObject.get_transform()
		{
			return null;
		}
	}
	[Token(Token = "0x200038F")]
	public class DynaPlanterHandle : MonoBehaviour
	{
		[Token(Token = "0x2000636")]
		public enum DynaPlanterHandleType
		{
			[Token(Token = "0x4001B90")]
			HandleOrb,
			[Token(Token = "0x4001B91")]
			HandleNub,
			[Token(Token = "0x4001B92")]
			HandleInfinite
		}

		[Token(Token = "0x4000F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private DynaPlanterHandleType _currType;

		[Token(Token = "0x4000F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MeshRenderer[] handles;

		[Token(Token = "0x6001A73")]
		[Address(RVA = "0xC8115C", Offset = "0xC8115C", VA = "0xC8115C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A74")]
		[Address(RVA = "0xC7CC3C", Offset = "0xC7CC3C", VA = "0xC7CC3C")]
		public void SetActive(bool activeState)
		{
		}

		[Token(Token = "0x6001A75")]
		[Address(RVA = "0xC7DC9C", Offset = "0xC7DC9C", VA = "0xC7DC9C")]
		public void PlayPulsateOverlay()
		{
		}

		[Token(Token = "0x6001A76")]
		[Address(RVA = "0xC7D21C", Offset = "0xC7D21C", VA = "0xC7D21C")]
		public void EnableHandle(DynaPlanterHandleType type)
		{
		}

		[Token(Token = "0x6001A77")]
		[Address(RVA = "0xC81164", Offset = "0xC81164", VA = "0xC81164")]
		public DynaPlanterHandle()
		{
		}
	}
	[Token(Token = "0x2000390")]
	public class DynaPlanterItem : MonoBehaviour
	{
		[Token(Token = "0x6001A78")]
		[Address(RVA = "0xC8116C", Offset = "0xC8116C", VA = "0xC8116C")]
		public DynaPlanterItem()
		{
		}
	}
	[Token(Token = "0x2000391")]
	public interface IActivatable
	{
		[Token(Token = "0x1700027C")]
		bool CanActivate
		{
			[Token(Token = "0x6001A79")]
			get;
			[Token(Token = "0x6001A7A")]
			set;
		}

		[Token(Token = "0x1400002A")]
		event Action OnActivate;

		[Token(Token = "0x6001A7D")]
		void SetActivationThreshold(float threshold);
	}
	[Token(Token = "0x2000392")]
	public interface IPlantable
	{
		[Token(Token = "0x6001A7E")]
		void BuryIntoPlanter(IPlantableSurface planter, Vector3 location);
	}
	[Token(Token = "0x2000393")]
	public interface IPlantableSurface : IGameObject
	{
		[Token(Token = "0x1700027D")]
		int OccupantCount
		{
			[Token(Token = "0x6001A82")]
			get;
		}

		[Token(Token = "0x1700027E")]
		Transform UniformScaleTransform
		{
			[Token(Token = "0x6001A83")]
			get;
		}

		[Token(Token = "0x1700027F")]
		bool CanBeDestroyed
		{
			[Token(Token = "0x6001A85")]
			get;
		}

		[Token(Token = "0x6001A7F")]
		Vector3? GetPlantingPosition(Vector3? desiredPlantingPosition);

		[Token(Token = "0x6001A80")]
		void SetOccupancy(bool occupancy, PersistentEntity occupant);

		[Token(Token = "0x6001A81")]
		bool CanBePlantedUpon();

		[Token(Token = "0x6001A84")]
		FujiLocalInstanceRef GetOccupant(int index);
	}
	[Token(Token = "0x2000394")]
	public interface IRelocatablePlanter : IPlantableSurface, IGameObject
	{
		[Token(Token = "0x17000280")]
		Rigidbody Rigidbody
		{
			[Token(Token = "0x6001A86")]
			get;
		}

		[Token(Token = "0x6001A87")]
		void RandomizeStyle();

		[Token(Token = "0x6001A88")]
		void SetInGround();
	}
	[Token(Token = "0x2000395")]
	public static class PlanterHelper
	{
		[Token(Token = "0x6001A89")]
		[Address(RVA = "0xEDC05C", Offset = "0xEDC05C", VA = "0xEDC05C")]
		public static PersistentEntity GetOccupant(string occupant)
		{
			return null;
		}

		[Token(Token = "0x6001A8A")]
		[Address(RVA = "0xEDC0C4", Offset = "0xEDC0C4", VA = "0xEDC0C4")]
		public static void KillAllOccupants(List<string> occupants)
		{
		}

		[Token(Token = "0x6001A8B")]
		[Address(RVA = "0xEDC1F4", Offset = "0xEDC1F4", VA = "0xEDC1F4")]
		public static void KillOccupant(string localId)
		{
		}

		[Token(Token = "0x6001A8C")]
		[Address(RVA = "0xEDC364", Offset = "0xEDC364", VA = "0xEDC364")]
		public static RaycastHit? HandDropSphereCast(Vector3 handWorldPosition)
		{
			return null;
		}
	}
	[Token(Token = "0x2000396")]
	public interface IWaterSource
	{
		[Token(Token = "0x6001A8D")]
		float ConsumeWater(float desiredConsumption);
	}
	[Token(Token = "0x2000397")]
	public interface IWaterReceiver
	{
		[Token(Token = "0x6001A8E")]
		void ReceiveWater(float waterAmount, Vector3? worldPosition, InputHandedness? hand, Vector3? worldSprayVelocity);
	}
	[Token(Token = "0x2000398")]
	public class JellyFlySystem : MonoBehaviour
	{
		[Token(Token = "0x2000637")]
		private struct JellyFlyData
		{
			[Token(Token = "0x4001B93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float4 v;

			[Token(Token = "0x4001B94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float4 p;

			[Token(Token = "0x4001B95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public quaternion rawRotation;

			[Token(Token = "0x4001B96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float3 goalPos;

			[Token(Token = "0x4001B97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public float baseScale;

			[Token(Token = "0x4001B98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public float launchAngularVelocity;

			[Token(Token = "0x4001B99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public float? squishing;
		}

		[Token(Token = "0x4000F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9C74BC", Offset = "0x9C74BC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9C74BC", Offset = "0x9C74BC")]
		[SerializeField]
		private int _swarmCount;

		[Token(Token = "0x4000F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9C752C", Offset = "0x9C752C")]
		public float SwarmRadius;

		[Token(Token = "0x4000F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float SwarmHeight;

		[Token(Token = "0x4000F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9C7564", Offset = "0x9C7564")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x9C7564", Offset = "0x9C7564")]
		public float Slide;

		[Token(Token = "0x4000F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9C75C4", Offset = "0x9C75C4")]
		public float VelocityScale;

		[Token(Token = "0x4000F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9C75FC", Offset = "0x9C75FC")]
		public float TwirlSpeed;

		[Token(Token = "0x4000F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9C7634", Offset = "0x9C7634")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9C7634", Offset = "0x9C7634")]
		public float SwarmSynergy;

		[Token(Token = "0x4000F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9C7688", Offset = "0x9C7688")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9C7688", Offset = "0x9C7688")]
		public float SwarmWander;

		[Token(Token = "0x4000F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9C76DC", Offset = "0x9C76DC")]
		public float SwarmWanderSpeedFactor;

		[Token(Token = "0x4000F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool BounceOffOfFloor;

		[Token(Token = "0x4000F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		public bool LocalSpace;

		[Token(Token = "0x4000F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9C7714", Offset = "0x9C7714")]
		[SerializeField]
		private GameObject[] PfbFlies;

		[Token(Token = "0x4000F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private JellyFlyData[] _flyData;

		[Token(Token = "0x4000F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GameObject[] _flies;

		[Token(Token = "0x4000F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float3 _swarmCenter;

		[Token(Token = "0x4000F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float _randomSeed;

		[Token(Token = "0x4000F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float3 _influencePoint;

		[Token(Token = "0x4000F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float3 _previousPosition;

		[Token(Token = "0x6001A8F")]
		[Address(RVA = "0xC8FBF8", Offset = "0xC8FBF8", VA = "0xC8FBF8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A90")]
		[Address(RVA = "0xC90260", Offset = "0xC90260", VA = "0xC90260")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001A91")]
		[Address(RVA = "0xC902E8", Offset = "0xC902E8", VA = "0xC902E8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001A92")]
		[Address(RVA = "0xC903C8", Offset = "0xC903C8", VA = "0xC903C8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001A93")]
		[Address(RVA = "0xC90168", Offset = "0xC90168", VA = "0xC90168")]
		private float3 RandomPositionInBounds()
		{
			return default(float3);
		}

		[Token(Token = "0x6001A94")]
		[Address(RVA = "0xC904D0", Offset = "0xC904D0", VA = "0xC904D0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A95")]
		[Address(RVA = "0xC91568", Offset = "0xC91568", VA = "0xC91568")]
		public void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001A96")]
		[Address(RVA = "0xC916A4", Offset = "0xC916A4", VA = "0xC916A4")]
		public JellyFlySystem()
		{
		}
	}
	[Token(Token = "0x2000399")]
	public class PlantEntity : MonoBehaviour, ISimulationTickable, IWaterReceiver, IFujiSerializable, PlantIndicatorService.IPlantIndicatorDataProvider
	{
		[Token(Token = "0x2000638")]
		public delegate void OnWasWateredCallback(PlantEntity source, float waterAmount, Vector3? worldSpray, InputHandedness? hand, Vector3? worldSprayVelocity);

		[Serializable]
		[Token(Token = "0x2000639")]
		public class GrowthStage
		{
			[Token(Token = "0x4001B9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public WateringProfile SharedProfile;

			[Token(Token = "0x4001B9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int GemsToAwardWhenGrown;

			[Token(Token = "0x4001B9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9C99F0", Offset = "0x9C99F0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9C99F0", Offset = "0x9C99F0")]
			public GameObject Prefab;

			[Token(Token = "0x4001B9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x9C9A50", Offset = "0x9C9A50")]
			public GameObject Instance;

			[Token(Token = "0x4001B9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public NullableFloat GestationHeightOverride;

			[Token(Token = "0x60026BC")]
			[Address(RVA = "0xEDB798", Offset = "0xEDB798", VA = "0xEDB798")]
			public GrowthStage()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200063A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBB64", Offset = "0x9BBB64")]
		private sealed class <>c
		{
			[Token(Token = "0x4001B9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001BA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<JellyPoint, float> <>9__88_0;

			[Token(Token = "0x60026BE")]
			[Address(RVA = "0xEDB758", Offset = "0xEDB758", VA = "0xEDB758")]
			public <>c()
			{
			}

			[Token(Token = "0x60026BF")]
			[Address(RVA = "0xEDB760", Offset = "0xEDB760", VA = "0xEDB760")]
			internal float <TryToGetFace>b__88_0(JellyPoint p)
			{
				return default(float);
			}
		}

		[Token(Token = "0x4000F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9C7760", Offset = "0x9C7760")]
		public float PotSizeScalar;

		[Token(Token = "0x4000F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9C7798", Offset = "0x9C7798")]
		[FujiSerialized]
		public float Thirst;

		[Token(Token = "0x4000F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[FujiSerialized]
		public float TimeSpentQuenched;

		[Token(Token = "0x4000F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9C77F4", Offset = "0x9C77F4")]
		public WateringProfile BackupWateringProfile;

		[Token(Token = "0x4000F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GrowthStage[] GrowthStages;

		[Token(Token = "0x4000F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9C782C", Offset = "0x9C782C")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x9C782C", Offset = "0x9C782C")]
		public bool GetsThirsty;

		[Token(Token = "0x4000F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[SerializeField]
		private bool _manuallyDecays;

		[Token(Token = "0x4000F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x9C789C", Offset = "0x9C789C")]
		private int _currentGrowthStage;

		[Token(Token = "0x4000F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9C78E8", Offset = "0x9C78E8")]
		private float _growthScaleVariance;

		[Token(Token = "0x4000F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int2 GrowthStageClamp;

		[Token(Token = "0x4000F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool AllowNaturalGrowth;

		[Token(Token = "0x4000F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		public bool ThirstResetsGrowth;

		[Token(Token = "0x4000F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
		public bool GrowthRequiresFullWaterReserves;

		[Token(Token = "0x4000F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[FujiSerialized]
		public double LastTimeGrowthOccured;

		[NonSerialized]
		[Token(Token = "0x4000F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[FujiSerialized]
		public double _lastTimeSimulated;

		[Token(Token = "0x4000F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private FujiSubArea _area;

		[Token(Token = "0x4000F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private PlantEffectController[] _plantEffectCtrls;

		[Token(Token = "0x4000F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool _growthQueued;

		[Token(Token = "0x4000F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float _oldThirst;

		[Token(Token = "0x4000F75")]
		private const float WaterHappyThreshold = -0.9f;

		[Token(Token = "0x4000F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C79B4", Offset = "0x9C79B4")]
		private float <ProgressTowardsGrowth>k__BackingField;

		[Token(Token = "0x4000F7C")]
		private const float maxQuenchedThirst = -1f;

		[Token(Token = "0x4000F7D")]
		private const float quenchedThirst = 0f;

		[Token(Token = "0x4000F7E")]
		private const float droopingThirst = 0f;

		[Token(Token = "0x4000F7F")]
		private const float brownThirst = 1f;

		[Token(Token = "0x17000281")]
		public FujiSubArea Area
		{
			[Token(Token = "0x6001A97")]
			[Address(RVA = "0xED72DC", Offset = "0xED72DC", VA = "0xED72DC")]
			get
			{
				return default(FujiSubArea);
			}
		}

		[Token(Token = "0x17000282")]
		public float ProgressTowardsFullyWatered
		{
			[Token(Token = "0x6001AA2")]
			[Address(RVA = "0xED7C1C", Offset = "0xED7C1C", VA = "0xED7C1C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000283")]
		public bool CanGestate
		{
			[Token(Token = "0x6001AA3")]
			[Address(RVA = "0xED7C3C", Offset = "0xED7C3C", VA = "0xED7C3C", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000284")]
		public bool IsAlive
		{
			[Token(Token = "0x6001AA4")]
			[Address(RVA = "0xED7C78", Offset = "0xED7C78", VA = "0xED7C78", Slot = "9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000285")]
		public float TotalThirstFill
		{
			[Token(Token = "0x6001AA5")]
			[Address(RVA = "0xED7CE0", Offset = "0xED7CE0", VA = "0xED7CE0", Slot = "10")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000286")]
		public float ProgressTowardsGrowth
		{
			[Token(Token = "0x6001AA7")]
			[Address(RVA = "0xED7D04", Offset = "0xED7D04", VA = "0xED7D04", Slot = "11")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D2B84", Offset = "0x9D2B84")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001AA6")]
			[Address(RVA = "0xED7CFC", Offset = "0xED7CFC", VA = "0xED7CFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D2B74", Offset = "0x9D2B74")]
			private set
			{
			}
		}

		[Token(Token = "0x17000287")]
		[FujiSerialized]
		public int CurrentGrowthStageIo
		{
			[Token(Token = "0x6001AA8")]
			[Address(RVA = "0xED7D0C", Offset = "0xED7D0C", VA = "0xED7D0C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001AA9")]
			[Address(RVA = "0xED7D14", Offset = "0xED7D14", VA = "0xED7D14")]
			set
			{
			}
		}

		[Token(Token = "0x17000288")]
		[FujiSerialized]
		public float PhysicalScale
		{
			[Token(Token = "0x6001AAA")]
			[Address(RVA = "0xED7DD4", Offset = "0xED7DD4", VA = "0xED7DD4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001AAB")]
			[Address(RVA = "0xED7E10", Offset = "0xED7E10", VA = "0xED7E10")]
			set
			{
			}
		}

		[Token(Token = "0x17000289")]
		public bool IsFullyMatured
		{
			[Token(Token = "0x6001AAC")]
			[Address(RVA = "0xED7ED8", Offset = "0xED7ED8", VA = "0xED7ED8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700028A")]
		public float Quench01
		{
			[Token(Token = "0x6001AAD")]
			[Address(RVA = "0xED7F14", Offset = "0xED7F14", VA = "0xED7F14")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700028B")]
		public WateringProfile CurrentWateringProfile
		{
			[Token(Token = "0x6001AB1")]
			[Address(RVA = "0xED8314", Offset = "0xED8314", VA = "0xED8314")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700028C")]
		public int FinalGrowthStage
		{
			[Token(Token = "0x6001AC8")]
			[Address(RVA = "0xEDAB44", Offset = "0xEDAB44", VA = "0xEDAB44")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1400002B")]
		public event OnWasWateredCallback OnWasWatered
		{
			[Token(Token = "0x6001A98")]
			[Address(RVA = "0xED72E4", Offset = "0xED72E4", VA = "0xED72E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D2AD4", Offset = "0x9D2AD4")]
			add
			{
			}
			[Token(Token = "0x6001A99")]
			[Address(RVA = "0xED73D0", Offset = "0xED73D0", VA = "0xED73D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D2AE4", Offset = "0x9D2AE4")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002C")]
		public event Action<int> OnPlantGrew
		{
			[Token(Token = "0x6001A9A")]
			[Address(RVA = "0xED74BC", Offset = "0xED74BC", VA = "0xED74BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D2AF4", Offset = "0x9D2AF4")]
			add
			{
			}
			[Token(Token = "0x6001A9B")]
			[Address(RVA = "0xED75A8", Offset = "0xED75A8", VA = "0xED75A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D2B04", Offset = "0x9D2B04")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002D")]
		public event Action OnPlantGrewToFinalStage
		{
			[Token(Token = "0x6001A9C")]
			[Address(RVA = "0xED7694", Offset = "0xED7694", VA = "0xED7694")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D2B14", Offset = "0x9D2B14")]
			add
			{
			}
			[Token(Token = "0x6001A9D")]
			[Address(RVA = "0xED7780", Offset = "0xED7780", VA = "0xED7780")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D2B24", Offset = "0x9D2B24")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002E")]
		public event Action<PlantEntity> OnLightGemSpawned
		{
			[Token(Token = "0x6001A9E")]
			[Address(RVA = "0xED786C", Offset = "0xED786C", VA = "0xED786C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D2B34", Offset = "0x9D2B34")]
			add
			{
			}
			[Token(Token = "0x6001A9F")]
			[Address(RVA = "0xED7958", Offset = "0xED7958", VA = "0xED7958")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D2B44", Offset = "0x9D2B44")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002F")]
		public event Action OnWasFullyWatered
		{
			[Token(Token = "0x6001AA0")]
			[Address(RVA = "0xED7A44", Offset = "0xED7A44", VA = "0xED7A44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D2B54", Offset = "0x9D2B54")]
			add
			{
			}
			[Token(Token = "0x6001AA1")]
			[Address(RVA = "0xED7B30", Offset = "0xED7B30", VA = "0xED7B30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D2B64", Offset = "0x9D2B64")]
			remove
			{
			}
		}

		[Token(Token = "0x6001AAE")]
		[Address(RVA = "0xED7D1C", Offset = "0xED7D1C", VA = "0xED7D1C")]
		public void UpdateGrowthVisuals()
		{
		}

		[Token(Token = "0x6001AAF")]
		[Address(RVA = "0xED7F88", Offset = "0xED7F88", VA = "0xED7F88")]
		public bool IsThirsty()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AB0")]
		[Address(RVA = "0xED7F98", Offset = "0xED7F98", VA = "0xED7F98", Slot = "4")]
		public void OnSimulationTick(float deltaSeconds, bool liveUpdate)
		{
		}

		[Token(Token = "0x6001AB2")]
		[Address(RVA = "0xED8B08", Offset = "0xED8B08", VA = "0xED8B08")]
		public GameObject CreateAndAttachShineEffect([Optional] GameObject recycledShine)
		{
			return null;
		}

		[Token(Token = "0x6001AB3")]
		[Address(RVA = "0xED8C0C", Offset = "0xED8C0C", VA = "0xED8C0C")]
		private Transform GetShineAttachTransform(int index)
		{
			return null;
		}

		[Token(Token = "0x6001AB4")]
		[Address(RVA = "0xED83F8", Offset = "0xED83F8", VA = "0xED83F8")]
		public void CheckForGrowthOpportunity(bool ignoreThirst)
		{
		}

		[Token(Token = "0x6001AB5")]
		[Address(RVA = "0xED8F98", Offset = "0xED8F98", VA = "0xED8F98", Slot = "5")]
		public void ReceiveWater(float waterAmount, Vector3? worldPosition, InputHandedness? hand, Vector3? worldSprayVelocity)
		{
		}

		[Token(Token = "0x6001AB6")]
		[Address(RVA = "0xED9CA0", Offset = "0xED9CA0", VA = "0xED9CA0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x9D2B94", Offset = "0x9D2B94")]
		public void PlayPulsateOverlay()
		{
		}

		[Token(Token = "0x6001AB7")]
		[Address(RVA = "0xED9D0C", Offset = "0xED9D0C", VA = "0xED9D0C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x9D2BCC", Offset = "0x9D2BCC")]
		public void ForceGrow()
		{
		}

		[Token(Token = "0x6001AB8")]
		[Address(RVA = "0xED9D18", Offset = "0xED9D18", VA = "0xED9D18")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x9D2C04", Offset = "0x9D2C04")]
		public void SimulateWatering()
		{
		}

		[Token(Token = "0x6001AB9")]
		[Address(RVA = "0xED9D38", Offset = "0xED9D38", VA = "0xED9D38")]
		public void MakeQuenched()
		{
		}

		[Token(Token = "0x6001ABA")]
		[Address(RVA = "0xED9D44", Offset = "0xED9D44", VA = "0xED9D44")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001ABB")]
		[Address(RVA = "0xEDA5A4", Offset = "0xEDA5A4", VA = "0xEDA5A4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001ABC")]
		[Address(RVA = "0xEDA730", Offset = "0xEDA730", VA = "0xEDA730")]
		private void HandlePlantTouched(IReadOnlyList<JellySystem.JellyTouchResult> results, float dt)
		{
		}

		[Token(Token = "0x6001ABD")]
		[Address(RVA = "0xEDAC18", Offset = "0xEDAC18", VA = "0xEDAC18")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001ABE")]
		[Address(RVA = "0xEDAF28", Offset = "0xEDAF28", VA = "0xEDAF28")]
		private void Update()
		{
		}

		[Token(Token = "0x6001ABF")]
		[Address(RVA = "0xEDAFC0", Offset = "0xEDAFC0", VA = "0xEDAFC0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001AC0")]
		[Address(RVA = "0xEDB0C0", Offset = "0xEDB0C0", VA = "0xEDB0C0")]
		public void MakeMaxThirsty()
		{
		}

		[Token(Token = "0x6001AC1")]
		[Address(RVA = "0xEDB0CC", Offset = "0xEDB0CC", VA = "0xEDB0CC", Slot = "13")]
		public Vector3 SamplePreferredIndicatorHeight()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001AC2")]
		[Address(RVA = "0xEDB614", Offset = "0xEDB614", VA = "0xEDB614")]
		public void OnFujiDeserializationComplete()
		{
		}

		[Token(Token = "0x6001AC3")]
		[Address(RVA = "0xEDB618", Offset = "0xEDB618", VA = "0xEDB618")]
		public Transform TryToGetFace()
		{
			return null;
		}

		[Token(Token = "0x6001AC4")]
		[Address(RVA = "0xED8D64", Offset = "0xED8D64", VA = "0xED8D64")]
		public Transform TryToGetFace(int index)
		{
			return null;
		}

		[Token(Token = "0x6001AC5")]
		[Address(RVA = "0xEDAC3C", Offset = "0xEDAC3C", VA = "0xEDAC3C")]
		public void PollArea()
		{
		}

		[Token(Token = "0x6001AC6")]
		public T FetchComponentOnActivePlant<T>()
		{
			return (T)null;
		}

		[Token(Token = "0x6001AC7")]
		public T FetchComponentOnTargetPlantStage<T>(int growthStage)
		{
			return (T)null;
		}

		[Token(Token = "0x6001AC9")]
		[Address(RVA = "0xEDB620", Offset = "0xEDB620", VA = "0xEDB620", Slot = "6")]
		public void OnPreSerialize()
		{
		}

		[Token(Token = "0x6001ACA")]
		[Address(RVA = "0xEDB624", Offset = "0xEDB624", VA = "0xEDB624", Slot = "7")]
		public void OnPostDeserialize()
		{
		}

		[Token(Token = "0x6001ACB")]
		[Address(RVA = "0xEDB628", Offset = "0xEDB628", VA = "0xEDB628")]
		public PlantEntity()
		{
		}

		[SpecialName]
		[Token(Token = "0x6001ACC")]
		[Address(RVA = "0xEDB6EC", Offset = "0xEDB6EC", VA = "0xEDB6EC", Slot = "12")]
		private Transform PlantIndicatorService.IPlantIndicatorDataProvider.get_transform()
		{
			return null;
		}
	}
	[Token(Token = "0x200039A")]
	public interface ISeedVendor
	{
		[Token(Token = "0x1700028D")]
		int NumLightGemsFilled
		{
			[Token(Token = "0x6001ACE")]
			get;
		}

		[Token(Token = "0x6001ACD")]
		void ConsumeLightGemsInSlots(int numLightGems);
	}
	[Serializable]
	[Token(Token = "0x200039B")]
	public struct SpacingSetting
	{
		[Token(Token = "0x4000F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Transform transform;

		[Token(Token = "0x4000F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int ShelfCount;

		[Token(Token = "0x4000F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float ShelfSpacing;
	}
	[Token(Token = "0x200039C")]
	public class SeedVendor : MonoBehaviour, ISeedVendor
	{
		[Token(Token = "0x4000F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SeedVendorPurchasable PurchaseInstance;

		[Token(Token = "0x4000F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VendingInventory Inventory;

		[Token(Token = "0x4000F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SpacingSetting[] spacing;

		[Token(Token = "0x4000F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9C79C4", Offset = "0x9C79C4")]
		[SerializeField]
		private LightGemSlot _pfbDoorLightGemSlot;

		[Token(Token = "0x4000F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private LightGemSlot _instLightGemSlot;

		[Token(Token = "0x4000F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform _TfmLightGemSlotAttachPoint;

		[Token(Token = "0x4000F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool HideIfNotVisitedBiome;

		[Token(Token = "0x4000F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 _initialPos;

		[Token(Token = "0x4000F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SeedVendorPurchasable[] purchasingSlots;

		[Token(Token = "0x1700028E")]
		public int NumLightGemsFilled
		{
			[Token(Token = "0x6001ACF")]
			[Address(RVA = "0xEED1A0", Offset = "0xEED1A0", VA = "0xEED1A0", Slot = "5")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001AD0")]
		[Address(RVA = "0xEED1D0", Offset = "0xEED1D0", VA = "0xEED1D0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001AD1")]
		[Address(RVA = "0xEEDA84", Offset = "0xEEDA84", VA = "0xEEDA84")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001AD2")]
		[Address(RVA = "0xEEDD54", Offset = "0xEEDD54", VA = "0xEEDD54")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001AD3")]
		[Address(RVA = "0xEEDDD8", Offset = "0xEEDDD8", VA = "0xEEDDD8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001AD4")]
		[Address(RVA = "0xEEDDDC", Offset = "0xEEDDDC", VA = "0xEEDDDC")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001AD5")]
		[Address(RVA = "0xEED644", Offset = "0xEED644", VA = "0xEED644")]
		public PosRotTuple GetWorldPosition(int index)
		{
			return default(PosRotTuple);
		}

		[Token(Token = "0x6001AD6")]
		[Address(RVA = "0xEEE0FC", Offset = "0xEEE0FC", VA = "0xEEE0FC", Slot = "4")]
		public void ConsumeLightGemsInSlots(int numLightGems)
		{
		}

		[Token(Token = "0x6001AD7")]
		[Address(RVA = "0xEEE134", Offset = "0xEEE134", VA = "0xEEE134")]
		private void HandlePrefabFoundMessage(WorldStateService.Messages.PrefabFoundMessage message)
		{
		}

		[Token(Token = "0x6001AD8")]
		[Address(RVA = "0xEEDC40", Offset = "0xEEDC40", VA = "0xEEDC40")]
		private void RefreshSeedAvailibility()
		{
		}

		[Token(Token = "0x6001AD9")]
		[Address(RVA = "0xEEE138", Offset = "0xEEE138", VA = "0xEEE138")]
		public SeedVendor()
		{
		}

		[Token(Token = "0x6001ADA")]
		[Address(RVA = "0xEEE148", Offset = "0xEEE148", VA = "0xEEE148")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D2C3C", Offset = "0x9D2C3C")]
		private void <Awake>b__10_0(LightGemSlotMessage msg)
		{
		}
	}
	[Token(Token = "0x200039D")]
	public class SeedVendorTree : MonoBehaviour, ISeedVendor
	{
		[Token(Token = "0x4000F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9C7A20", Offset = "0x9C7A20")]
		[SerializeField]
		private LightGemSlot _pfbDoorLightGemSlot;

		[Token(Token = "0x4000F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LightGemSlot _instLightGemSlot;

		[Token(Token = "0x4000F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _TfmLightGemSlotAttachPoint;

		[Token(Token = "0x4000F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private SeedVendorPurchasable _smallPotsVendor;

		[Token(Token = "0x4000F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SeedVendorPurchasable _mediumPotsVendor;

		[Token(Token = "0x4000F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		public VendingInventory _vendingInventory;

		[Token(Token = "0x4000F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool HideIfNotVisitedBiome;

		[Token(Token = "0x4000F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 _initialPos;

		[Token(Token = "0x4000F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Transform _tfmPlatformSmallPot;

		[Token(Token = "0x4000F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform _tfmPlatformMediumPot;

		[Token(Token = "0x4000F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 _platformSmallPotStartPosLocal;

		[Token(Token = "0x4000F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Vector3 _platformMediumStartPosLocal;

		[Token(Token = "0x4000F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public FujiNarrativeKey AvailabilityKey;

		[Token(Token = "0x1700028F")]
		public int NumLightGemsFilled
		{
			[Token(Token = "0x6001ADB")]
			[Address(RVA = "0xEEE164", Offset = "0xEEE164", VA = "0xEEE164", Slot = "5")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001ADC")]
		[Address(RVA = "0xEEE194", Offset = "0xEEE194", VA = "0xEEE194")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001ADD")]
		[Address(RVA = "0xEEE46C", Offset = "0xEEE46C", VA = "0xEEE46C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001ADE")]
		[Address(RVA = "0xEEE5EC", Offset = "0xEEE5EC", VA = "0xEEE5EC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001ADF")]
		[Address(RVA = "0xEEE634", Offset = "0xEEE634", VA = "0xEEE634")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001AE0")]
		[Address(RVA = "0xEEE7C0", Offset = "0xEEE7C0", VA = "0xEEE7C0", Slot = "4")]
		public void ConsumeLightGemsInSlots(int numLightGems)
		{
		}

		[Token(Token = "0x6001AE1")]
		[Address(RVA = "0xEEE8A4", Offset = "0xEEE8A4", VA = "0xEEE8A4")]
		private void RefreshPurchasableFor(SeedVendorPurchasable purchasableItem, Transform itemTfm, Vector3 itemLocalStartPos)
		{
		}

		[Token(Token = "0x6001AE2")]
		[Address(RVA = "0xEEE5F0", Offset = "0xEEE5F0", VA = "0xEEE5F0")]
		private void RefreshSeedAvailibility()
		{
		}

		[Token(Token = "0x6001AE3")]
		[Address(RVA = "0xEEEB80", Offset = "0xEEEB80", VA = "0xEEEB80")]
		public SeedVendorTree()
		{
		}

		[Token(Token = "0x6001AE4")]
		[Address(RVA = "0xEEEC10", Offset = "0xEEEC10", VA = "0xEEEC10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D2C4C", Offset = "0x9D2C4C")]
		private void <Awake>b__15_0(LightGemSlotMessage msg)
		{
		}
	}
	[Token(Token = "0x200039E")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9BA104", Offset = "0x9BA104")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9BA104", Offset = "0x9BA104")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9BA104", Offset = "0x9BA104")]
	public class SmallMovablePlanter : MonoBehaviour, IRelocatablePlanter, IPlantableSurface, IGameObject, IFujiSerializable, IWaterReceiver, ISpecialGrabbable
	{
		[Token(Token = "0x200063B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBB74", Offset = "0x9BBB74")]
		private sealed class <>c__DisplayClass33_0
		{
			[Token(Token = "0x4001BA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SmallMovablePlanter <>4__this;

			[Token(Token = "0x4001BA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public PersistentEntity entity;

			[Token(Token = "0x60026C0")]
			[Address(RVA = "0xBD0B2C", Offset = "0xBD0B2C", VA = "0xBD0B2C")]
			public <>c__DisplayClass33_0()
			{
			}

			[Token(Token = "0x60026C1")]
			[Address(RVA = "0xBD1550", Offset = "0xBD1550", VA = "0xBD1550")]
			internal void <Awake>b__0()
			{
			}

			[Token(Token = "0x60026C2")]
			[Address(RVA = "0xBD1684", Offset = "0xBD1684", VA = "0xBD1684")]
			internal void <Awake>b__1()
			{
			}

			[Token(Token = "0x60026C3")]
			[Address(RVA = "0xBD16F0", Offset = "0xBD16F0", VA = "0xBD16F0")]
			internal void <Awake>b__2(PlayerControllerInput input)
			{
			}

			[Token(Token = "0x60026C4")]
			[Address(RVA = "0xBD17EC", Offset = "0xBD17EC", VA = "0xBD17EC")]
			internal void <Awake>b__3(PlayerControllerInput input)
			{
			}
		}

		[Token(Token = "0x4000F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FujiLocalInstanceRef Occupant;

		[Token(Token = "0x4000F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool TranslateOccupant;

		[Token(Token = "0x4000F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool NoSaveIfEmpty;

		[Token(Token = "0x4000F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public NullableVector3 LocalPlantingPosition;

		[Token(Token = "0x4000F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x9C7AEC", Offset = "0x9C7AEC")]
		private GameObject[] _styles;

		[Token(Token = "0x4000F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Transform _scaleNode;

		[Token(Token = "0x4000FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int _style;

		[Token(Token = "0x4000FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private InteractiveCore _interactiveCore;

		[Token(Token = "0x4000FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float3 _occupantLocalPos;

		[Token(Token = "0x4000FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private quaternion _occupantLocalRot;

		[Token(Token = "0x4000FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool _applyOccupantPose;

		[Token(Token = "0x17000290")]
		public Transform UniformScaleTransform
		{
			[Token(Token = "0x6001AE7")]
			[Address(RVA = "0xBCFE50", Offset = "0xBCFE50", VA = "0xBCFE50", Slot = "11")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000291")]
		public bool CanBeDestroyed
		{
			[Token(Token = "0x6001AE8")]
			[Address(RVA = "0xBCFE58", Offset = "0xBCFE58", VA = "0xBCFE58", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000292")]
		[FujiSerialized]
		public FujiLocalInstanceRef OccupantSerialized
		{
			[Token(Token = "0x6001AE9")]
			[Address(RVA = "0xBCFE60", Offset = "0xBCFE60", VA = "0xBCFE60")]
			get
			{
				return default(FujiLocalInstanceRef);
			}
			[Token(Token = "0x6001AEA")]
			[Address(RVA = "0xBCFE6C", Offset = "0xBCFE6C", VA = "0xBCFE6C")]
			set
			{
			}
		}

		[Token(Token = "0x17000293")]
		public Rigidbody Rigidbody
		{
			[Token(Token = "0x6001AEB")]
			[Address(RVA = "0xBCFE74", Offset = "0xBCFE74", VA = "0xBCFE74", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000294")]
		[FujiSerialized]
		public int Style
		{
			[Token(Token = "0x6001AEC")]
			[Address(RVA = "0xBCFEC4", Offset = "0xBCFEC4", VA = "0xBCFEC4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001AED")]
			[Address(RVA = "0xBCFECC", Offset = "0xBCFECC", VA = "0xBCFECC")]
			set
			{
			}
		}

		[Token(Token = "0x17000295")]
		public int OccupantCount
		{
			[Token(Token = "0x6001AF0")]
			[Address(RVA = "0xBD0044", Offset = "0xBD0044", VA = "0xBD0044", Slot = "10")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000030")]
		public event Action<bool> EventOccupancyChange
		{
			[Token(Token = "0x6001AE5")]
			[Address(RVA = "0xBCFC78", Offset = "0xBCFC78", VA = "0xBCFC78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D2C5C", Offset = "0x9D2C5C")]
			add
			{
			}
			[Token(Token = "0x6001AE6")]
			[Address(RVA = "0xBCFD64", Offset = "0xBCFD64", VA = "0xBCFD64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D2C6C", Offset = "0x9D2C6C")]
			remove
			{
			}
		}

		[Token(Token = "0x6001AEE")]
		[Address(RVA = "0xBD003C", Offset = "0xBD003C", VA = "0xBD003C", Slot = "16")]
		public void OnPreSerialize()
		{
		}

		[Token(Token = "0x6001AEF")]
		[Address(RVA = "0xBD0040", Offset = "0xBD0040", VA = "0xBD0040", Slot = "17")]
		public void OnPostDeserialize()
		{
		}

		[Token(Token = "0x6001AF1")]
		[Address(RVA = "0xBD0064", Offset = "0xBD0064", VA = "0xBD0064", Slot = "5")]
		public void RandomizeStyle()
		{
		}

		[Token(Token = "0x6001AF2")]
		[Address(RVA = "0xBD00AC", Offset = "0xBD00AC", VA = "0xBD00AC")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001AF3")]
		[Address(RVA = "0xBD0140", Offset = "0xBD0140", VA = "0xBD0140", Slot = "7")]
		public Vector3? GetPlantingPosition(Vector3? _)
		{
			return null;
		}

		[Token(Token = "0x6001AF4")]
		[Address(RVA = "0xBD01FC", Offset = "0xBD01FC", VA = "0xBD01FC", Slot = "8")]
		public void SetOccupancy(bool occupancy, PersistentEntity occupant)
		{
		}

		[Token(Token = "0x6001AF5")]
		[Address(RVA = "0xBD05BC", Offset = "0xBD05BC", VA = "0xBD05BC", Slot = "9")]
		public bool CanBePlantedUpon()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AF6")]
		[Address(RVA = "0xBD05E4", Offset = "0xBD05E4", VA = "0xBD05E4", Slot = "6")]
		public void SetInGround()
		{
		}

		[Token(Token = "0x6001AF7")]
		[Address(RVA = "0xBD0798", Offset = "0xBD0798", VA = "0xBD0798")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001AF8")]
		[Address(RVA = "0xBD0B34", Offset = "0xBD0B34", VA = "0xBD0B34")]
		private void Start()
		{
		}

		[Token(Token = "0x6001AF9")]
		[Address(RVA = "0xBD0B84", Offset = "0xBD0B84", VA = "0xBD0B84")]
		private void OnPostMove(PlayerControllerInput controller)
		{
		}

		[Token(Token = "0x6001AFA")]
		[Address(RVA = "0xBD0E44", Offset = "0xBD0E44", VA = "0xBD0E44")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001AFB")]
		[Address(RVA = "0xBD1064", Offset = "0xBD1064", VA = "0xBD1064")]
		private void Update()
		{
		}

		[Token(Token = "0x6001AFC")]
		[Address(RVA = "0xBD0C2C", Offset = "0xBD0C2C", VA = "0xBD0C2C")]
		private void FaceUpwards()
		{
		}

		[Token(Token = "0x6001AFD")]
		[Address(RVA = "0xBD12D0", Offset = "0xBD12D0", VA = "0xBD12D0", Slot = "18")]
		public void ReceiveWater(float waterAmount, Vector3? worldPosition, InputHandedness? hand, Vector3? worldSprayVelocity)
		{
		}

		[Token(Token = "0x6001AFE")]
		[Address(RVA = "0xBD1404", Offset = "0xBD1404", VA = "0xBD1404", Slot = "12")]
		public FujiLocalInstanceRef GetOccupant(int index)
		{
			return default(FujiLocalInstanceRef);
		}

		[Token(Token = "0x6001AFF")]
		[Address(RVA = "0xBD1410", Offset = "0xBD1410", VA = "0xBD1410", Slot = "19")]
		public Vector3 GetGrabCenterWorld()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B00")]
		[Address(RVA = "0xBD1490", Offset = "0xBD1490", VA = "0xBD1490")]
		public SmallMovablePlanter()
		{
		}

		[SpecialName]
		[Token(Token = "0x6001B01")]
		[Address(RVA = "0xBD1540", Offset = "0xBD1540", VA = "0xBD1540", Slot = "14")]
		private GameObject IGameObject.get_gameObject()
		{
			return null;
		}

		[SpecialName]
		[Token(Token = "0x6001B02")]
		[Address(RVA = "0xBD1548", Offset = "0xBD1548", VA = "0xBD1548", Slot = "15")]
		private Transform IGameObject.get_transform()
		{
			return null;
		}
	}
	[Token(Token = "0x200039F")]
	public class AtmosphericEffect : MonoBehaviour
	{
		[Token(Token = "0x4000FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x9C7B48", Offset = "0x9C7B48")]
		private FujiAtmosphericPreset[] _presetsToFollow;

		[Token(Token = "0x6001B03")]
		[Address(RVA = "0xC6DEC4", Offset = "0xC6DEC4", VA = "0xC6DEC4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B04")]
		[Address(RVA = "0xC6DF98", Offset = "0xC6DF98", VA = "0xC6DF98")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001B05")]
		[Address(RVA = "0xC6E044", Offset = "0xC6E044", VA = "0xC6E044")]
		private void HandleRoomEnter(FujiAreaService roomService)
		{
		}

		[Token(Token = "0x6001B06")]
		[Address(RVA = "0xC6E2E8", Offset = "0xC6E2E8", VA = "0xC6E2E8")]
		public AtmosphericEffect()
		{
		}
	}
	[Token(Token = "0x20003A0")]
	public static class FujiConstants
	{
		[Token(Token = "0x200063C")]
		public static class Positions
		{
			[Token(Token = "0x4001BA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly Vector3 OutOfSight;
		}

		[Token(Token = "0x200063D")]
		public static class EntityLimits
		{
			[Token(Token = "0x4001BA4")]
			public const int LightGemLimitPerZone = 50;

			[Token(Token = "0x4001BA5")]
			public const int PotLimitPerZone = 100;

			[Token(Token = "0x4001BA6")]
			public const float GlobalYKillFloor = -20f;
		}

		[Token(Token = "0x4000FA6")]
		public const float WaterDropsPerSecond = 30f;

		[Token(Token = "0x4000FA7")]
		public const float WaterCooldown = 1f / 30f;

		[Token(Token = "0x4000FA8")]
		public const string RuntimeDiagnosticInfoDirectory = "RuntimeDiagnosticInfo";

		[Token(Token = "0x4000FA9")]
		public const string PlayerTag = "Player";

		[Token(Token = "0x4000FAA")]
		public const int NullIndex = -1;

		[Token(Token = "0x4000FAB")]
		public const int LeftHandIndex = 0;

		[Token(Token = "0x4000FAC")]
		public const int RightHandIndex = 1;

		[Token(Token = "0x4000FAD")]
		public const int LeftHandIndex2 = 2;

		[Token(Token = "0x4000FAE")]
		public const int RightHandIndex2 = 3;

		[Token(Token = "0x4000FAF")]
		public const string DefaultLayerName = "Default";

		[Token(Token = "0x4000FB0")]
		public const int DefaultLayerIndex = 0;

		[Token(Token = "0x4000FB1")]
		public const int DefaultLayerMask = 1;

		[Token(Token = "0x4000FB2")]
		public const string InteractiveLayerName = "Interactive";

		[Token(Token = "0x4000FB3")]
		public const int InteractiveLayerIndex = 9;

		[Token(Token = "0x4000FB4")]
		public const int InteractiveLayerMask = 512;

		[Token(Token = "0x4000FB5")]
		public const string NavigationLayerName = "Navigation";

		[Token(Token = "0x4000FB6")]
		public const int NavigationLayerIndex = 10;

		[Token(Token = "0x4000FB7")]
		public const int NavigationLayerMask = 1024;

		[Token(Token = "0x4000FB8")]
		public const string HandSolidCollidersLayerName = "HandSolidColliders";

		[Token(Token = "0x4000FB9")]
		public const int HandSolidCollidersLayerIndex = 11;

		[Token(Token = "0x4000FBA")]
		public const int HandSolidCollidersLayerMask = 1024;

		[Token(Token = "0x4000FBB")]
		public const string InteractiveStorageLayer = "InteractiveStorage";

		[Token(Token = "0x4000FBC")]
		public const int InteractiveStorageLayerIndex = 12;

		[Token(Token = "0x4000FBD")]
		public const int InteractiveStorageLayerMask = 4096;

		[Token(Token = "0x4000FBE")]
		public const string PlayerTriggerLayerName = "PlayerTrigger";

		[Token(Token = "0x4000FBF")]
		public const int PlayerTriggerLayerIndex = 13;

		[Token(Token = "0x4000FC0")]
		public const int PlayerTriggerLayerMask = 8192;

		[Token(Token = "0x4000FC1")]
		public const string PlantsLayerName = "Plants";

		[Token(Token = "0x4000FC2")]
		public const int PlantsLayerIndex = 15;

		[Token(Token = "0x4000FC3")]
		public const int PlantsLayerMask = 32768;

		[Token(Token = "0x4000FC4")]
		public const string GnomeRagdollLayerName = "GnomeRagdoll";

		[Token(Token = "0x4000FC5")]
		public const int GnomeRagdollLayerIndex = 16;

		[Token(Token = "0x4000FC6")]
		public const int GnomeRagdollLayerMask = 65536;

		[Token(Token = "0x4000FC7")]
		public const string NoWalkLayerName = "NoWalk";

		[Token(Token = "0x4000FC8")]
		public const int NoWalkLayerIndex = 18;

		[Token(Token = "0x4000FC9")]
		public const int NoWalkLayerMask = 262144;

		[Token(Token = "0x4000FCA")]
		public const int WaterSplashLayerMask = 99841;

		[Token(Token = "0x4000FCB")]
		public const int PlantingLayerMask = 1537;

		[Token(Token = "0x4000FCC")]
		public const int PlanterCollisionLayerMask = 1537;

		[Token(Token = "0x4000FCD")]
		public const int HeadCollisionLayerMask = 1025;

		[Token(Token = "0x4000FCE")]
		public const int LocomotionArcCollisionLayerMask = 263169;

		[Token(Token = "0x4000FCF")]
		public const int LocomotionArcCollisionLayerMaskNoClip = 263168;

		[Token(Token = "0x4000FD0")]
		public const int RemoteGrabLayerMask = 5633;

		[Token(Token = "0x4000FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Vector3 VerySmallVector3;

		[Token(Token = "0x4000FD2")]
		public const float GardenTutorialGemCeiling = 3f;

		[Token(Token = "0x4000FD3")]
		public const float OneFrameMobile = 1f / 72f;

		[Token(Token = "0x4000FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly string LinesAndTrails;

		[Token(Token = "0x17000296")]
		public static bool DisableDoubleInstancing
		{
			[Token(Token = "0x6001B07")]
			[Address(RVA = "0xC813D0", Offset = "0xC813D0", VA = "0xC813D0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000297")]
		public static bool MobileQualityPlatform
		{
			[Token(Token = "0x6001B08")]
			[Address(RVA = "0xC813D8", Offset = "0xC813D8", VA = "0xC813D8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000298")]
		public static float GlobalInstancedEnviroDensityScalar
		{
			[Token(Token = "0x6001B09")]
			[Address(RVA = "0xC81410", Offset = "0xC81410", VA = "0xC81410")]
			get
			{
				return default(float);
			}
		}
	}
	[Token(Token = "0x20003A1")]
	public static class FujiTime
	{
		[Token(Token = "0x4000FD5")]
		public const float MinutesToSeconds = 60f;

		[Token(Token = "0x4000FD6")]
		public const float HoursToSeconds = 3600f;

		[Token(Token = "0x4000FD7")]
		public const float DaysToSeconds = 86400f;

		[Token(Token = "0x4000FD8")]
		public const float WeeksToSeconds = 604800f;

		[Token(Token = "0x4000FD9")]
		public const float YearsToSeconds = 31536000f;
	}
	[Token(Token = "0x20003A2")]
	public static class FujiGuid
	{
		[Token(Token = "0x4000FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string EmptyGuid;

		[Token(Token = "0x17000299")]
		public static string NewGuid
		{
			[Token(Token = "0x6001B0B")]
			[Address(RVA = "0xC8172C", Offset = "0xC8172C", VA = "0xC8172C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B0C")]
		[Address(RVA = "0xC817AC", Offset = "0xC817AC", VA = "0xC817AC")]
		public static bool HasValidLocalId(this PersistentEntity persistentObject)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B0D")]
		[Address(RVA = "0xC81858", Offset = "0xC81858", VA = "0xC81858")]
		public static bool HasEmptyLocalId(this PersistentEntity persistentObject)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003A3")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9BA1C8", Offset = "0x9BA1C8")]
	public class FujiAtmosphericPreset : ScriptableObject
	{
		[Token(Token = "0x4000FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool ShowLightRing;

		[Token(Token = "0x4000FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public FogSettingGroup FogSettings;

		[Token(Token = "0x4000FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9C7B94", Offset = "0x9C7B94")]
		public FujiCylinderLightSettings CylinderLightSettings;

		[Token(Token = "0x6001B0F")]
		[Address(RVA = "0xC813C0", Offset = "0xC813C0", VA = "0xC813C0")]
		public FujiAtmosphericPreset()
		{
		}
	}
	[Token(Token = "0x20003A4")]
	public sealed class PersistentEntity : MonoBehaviour
	{
		[Token(Token = "0x200063E")]
		public delegate void OnPoolEvent();

		[Token(Token = "0x200063F")]
		public delegate void LocationStateChangedEvent(Location oldState, Location newState);

		[Serializable]
		[Token(Token = "0x2000640")]
		public struct EntityReferenceOverrides
		{
			[Token(Token = "0x4001BA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameObject LogicRoot;

			[Token(Token = "0x4001BA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public InteractiveCore InteractiveRoot;

			[Token(Token = "0x4001BA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Collider ColliderRoot;
		}

		[Token(Token = "0x4000FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9C7BCC", Offset = "0x9C7BCC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9C7BCC", Offset = "0x9C7BCC")]
		public string PrefabId;

		[Token(Token = "0x4000FDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PersistentEntitySaveSetting SaveSetting;

		[Token(Token = "0x4000FE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int PreservationImportance;

		[Token(Token = "0x4000FE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9C7C2C", Offset = "0x9C7C2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9C7C2C", Offset = "0x9C7C2C")]
		public LoadingZoneKey CurrentZone;

		[Token(Token = "0x4000FE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x9C7C8C", Offset = "0x9C7C8C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9C7C8C", Offset = "0x9C7C8C")]
		public string LocalId;

		[Token(Token = "0x4000FE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public double SpawnTime;

		[Token(Token = "0x4000FE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9C7CEC", Offset = "0x9C7CEC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9C7CEC", Offset = "0x9C7CEC")]
		public EntityReferenceOverrides ReferenceOverrides;

		[Token(Token = "0x4000FE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9C7D4C", Offset = "0x9C7D4C")]
		public bool Storeable;

		[Token(Token = "0x4000FE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		public bool ApplyLocalStorageOffset;

		[Token(Token = "0x4000FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9C7D84", Offset = "0x9C7D84")]
		public PosRotScale LocalStorageOffset;

		[Token(Token = "0x4000FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Location _location;

		[Token(Token = "0x4000FED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C7DFC", Offset = "0x9C7DFC")]
		private Vector3 <SpawnedScale>k__BackingField;

		[Token(Token = "0x4000FEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private IFujiSerializable[] _serializables;

		[NonSerialized]
		[Token(Token = "0x4000FEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public bool ForceNoSave;

		[Token(Token = "0x4000FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
		private bool _markDynamicForDeath;

		[Token(Token = "0x4000FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC2")]
		public bool RespawnInBiomes;

		[Token(Token = "0x1700029A")]
		public Vector3 SpawnedScale
		{
			[Token(Token = "0x6001B18")]
			[Address(RVA = "0xD9BF38", Offset = "0xD9BF38", VA = "0xD9BF38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D2D1C", Offset = "0x9D2D1C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001B19")]
			[Address(RVA = "0xD9BF44", Offset = "0xD9BF44", VA = "0xD9BF44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D2D2C", Offset = "0x9D2D2C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700029B")]
		public Vector3 StorageScale
		{
			[Token(Token = "0x6001B1A")]
			[Address(RVA = "0xD9BF50", Offset = "0xD9BF50", VA = "0xD9BF50")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700029C")]
		public Location Location
		{
			[Token(Token = "0x6001B1B")]
			[Address(RVA = "0xD9BFF4", Offset = "0xD9BFF4", VA = "0xD9BFF4")]
			get
			{
				return default(Location);
			}
			[Token(Token = "0x6001B1C")]
			[Address(RVA = "0xD9BFFC", Offset = "0xD9BFFC", VA = "0xD9BFFC")]
			set
			{
			}
		}

		[Token(Token = "0x1700029D")]
		public PosRotTuple PosRot
		{
			[Token(Token = "0x6001B1D")]
			[Address(RVA = "0xD9C24C", Offset = "0xD9C24C", VA = "0xD9C24C")]
			get
			{
				return default(PosRotTuple);
			}
			[Token(Token = "0x6001B1E")]
			[Address(RVA = "0xD9C288", Offset = "0xD9C288", VA = "0xD9C288")]
			set
			{
			}
		}

		[Token(Token = "0x1700029E")]
		public GameObject LogicRoot
		{
			[Token(Token = "0x6001B1F")]
			[Address(RVA = "0xD9C2B8", Offset = "0xD9C2B8", VA = "0xD9C2B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700029F")]
		public InteractiveCore InteractiveRoot
		{
			[Token(Token = "0x6001B20")]
			[Address(RVA = "0xD9C348", Offset = "0xD9C348", VA = "0xD9C348")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A0")]
		public Collider ColliderRoot
		{
			[Token(Token = "0x6001B21")]
			[Address(RVA = "0xD9C3DC", Offset = "0xD9C3DC", VA = "0xD9C3DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A1")]
		public bool IsDynamicAllocated
		{
			[Token(Token = "0x6001B22")]
			[Address(RVA = "0xD9C470", Offset = "0xD9C470", VA = "0xD9C470")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x14000031")]
		public event Action EventOnPreSerialize
		{
			[Token(Token = "0x6001B10")]
			[Address(RVA = "0xD9B7D8", Offset = "0xD9B7D8", VA = "0xD9B7D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D2C9C", Offset = "0x9D2C9C")]
			add
			{
			}
			[Token(Token = "0x6001B11")]
			[Address(RVA = "0xD9B8C4", Offset = "0xD9B8C4", VA = "0xD9B8C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D2CAC", Offset = "0x9D2CAC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000032")]
		public event Action EventOnPostDeserialize
		{
			[Token(Token = "0x6001B12")]
			[Address(RVA = "0xD9B9B0", Offset = "0xD9B9B0", VA = "0xD9B9B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D2CBC", Offset = "0x9D2CBC")]
			add
			{
			}
			[Token(Token = "0x6001B13")]
			[Address(RVA = "0xD9BA9C", Offset = "0xD9BA9C", VA = "0xD9BA9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D2CCC", Offset = "0x9D2CCC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000033")]
		public event OnPoolEvent EventOnPool
		{
			[Token(Token = "0x6001B14")]
			[Address(RVA = "0xD9BB88", Offset = "0xD9BB88", VA = "0xD9BB88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D2CDC", Offset = "0x9D2CDC")]
			add
			{
			}
			[Token(Token = "0x6001B15")]
			[Address(RVA = "0xD9BC74", Offset = "0xD9BC74", VA = "0xD9BC74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D2CEC", Offset = "0x9D2CEC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000034")]
		public event LocationStateChangedEvent EventOnLocationStateChanged
		{
			[Token(Token = "0x6001B16")]
			[Address(RVA = "0xD9BD60", Offset = "0xD9BD60", VA = "0xD9BD60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D2CFC", Offset = "0x9D2CFC")]
			add
			{
			}
			[Token(Token = "0x6001B17")]
			[Address(RVA = "0xD9BE4C", Offset = "0xD9BE4C", VA = "0xD9BE4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D2D0C", Offset = "0x9D2D0C")]
			remove
			{
			}
		}

		[Token(Token = "0x6001B23")]
		[Address(RVA = "0xD9C484", Offset = "0xD9C484", VA = "0xD9C484")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9D2D3C", Offset = "0x9D2D3C")]
		public string GetPrefabIndex()
		{
			return null;
		}

		[Token(Token = "0x6001B24")]
		[Address(RVA = "0xD9C48C", Offset = "0xD9C48C", VA = "0xD9C48C")]
		public void Serialize(Dictionary<string, string> outData)
		{
		}

		[Token(Token = "0x6001B25")]
		[Address(RVA = "0xD9C618", Offset = "0xD9C618", VA = "0xD9C618")]
		public void Deserialize(Dictionary<string, string> inData)
		{
		}

		[Token(Token = "0x6001B26")]
		[Address(RVA = "0xD9C744", Offset = "0xD9C744", VA = "0xD9C744")]
		public void PreSerialize()
		{
		}

		[Token(Token = "0x6001B27")]
		[Address(RVA = "0xD9C8B0", Offset = "0xD9C8B0", VA = "0xD9C8B0")]
		public void PostDeserialize()
		{
		}

		[Token(Token = "0x6001B28")]
		[Address(RVA = "0xD9CA20", Offset = "0xD9CA20", VA = "0xD9CA20")]
		public void OnPooled()
		{
		}

		[Token(Token = "0x6001B29")]
		[Address(RVA = "0xD9CA34", Offset = "0xD9CA34", VA = "0xD9CA34")]
		public void ClearLocalId()
		{
		}

		[Token(Token = "0x6001B2A")]
		[Address(RVA = "0xD9CAA4", Offset = "0xD9CAA4", VA = "0xD9CAA4")]
		public void RegenerateLocalId()
		{
		}

		[Token(Token = "0x6001B2B")]
		[Address(RVA = "0xD9CB10", Offset = "0xD9CB10", VA = "0xD9CB10")]
		public void SampleSaveState()
		{
		}

		[Token(Token = "0x6001B2C")]
		[Address(RVA = "0xD9C000", Offset = "0xD9C000", VA = "0xD9C000")]
		private void SetLocation(Location newState)
		{
		}

		[Token(Token = "0x6001B2D")]
		[Address(RVA = "0xD9CB78", Offset = "0xD9CB78", VA = "0xD9CB78")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B2E")]
		[Address(RVA = "0xD9CEE0", Offset = "0xD9CEE0", VA = "0xD9CEE0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001B2F")]
		[Address(RVA = "0xD9CF9C", Offset = "0xD9CF9C", VA = "0xD9CF9C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001B30")]
		[Address(RVA = "0xD9C5B4", Offset = "0xD9C5B4", VA = "0xD9C5B4")]
		private void CacheSerializables()
		{
		}

		[Token(Token = "0x6001B31")]
		[Address(RVA = "0xD9D034", Offset = "0xD9D034", VA = "0xD9D034")]
		public PersistentEntity()
		{
		}

		[Token(Token = "0x6001B32")]
		[Address(RVA = "0xD9D0C8", Offset = "0xD9D0C8", VA = "0xD9D0C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D2D78", Offset = "0x9D2D78")]
		private void <Awake>b__59_0(PlayerControllerInput input)
		{
		}

		[Token(Token = "0x6001B33")]
		[Address(RVA = "0xD9D1A0", Offset = "0xD9D1A0", VA = "0xD9D1A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D2D88", Offset = "0x9D2D88")]
		private void <Awake>b__59_1(PlayerControllerInput input)
		{
		}
	}
	[Token(Token = "0x20003A5")]
	public enum PersistentEntitySaveSetting
	{
		[Token(Token = "0x4000FF3")]
		Dynamic = 1,
		[Token(Token = "0x4000FF4")]
		Scene,
		[Token(Token = "0x4000FF5")]
		PreloadedDynamic
	}
	[Token(Token = "0x20003A6")]
	public class PersistentObjectSerializeLocalPosition : MonoBehaviour
	{
		[Token(Token = "0x170002A2")]
		[FujiSerialized]
		public Vector3 LocalPosition
		{
			[Token(Token = "0x6001B35")]
			[Address(RVA = "0xED7208", Offset = "0xED7208", VA = "0xED7208")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001B34")]
			[Address(RVA = "0xED71AC", Offset = "0xED71AC", VA = "0xED71AC")]
			set
			{
			}
		}

		[Token(Token = "0x170002A3")]
		[FujiSerialized]
		public Quaternion LocalRotation
		{
			[Token(Token = "0x6001B37")]
			[Address(RVA = "0xED72A0", Offset = "0xED72A0", VA = "0xED72A0")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6001B36")]
			[Address(RVA = "0xED723C", Offset = "0xED723C", VA = "0xED723C")]
			set
			{
			}
		}

		[Token(Token = "0x6001B38")]
		[Address(RVA = "0xED72D4", Offset = "0xED72D4", VA = "0xED72D4")]
		public PersistentObjectSerializeLocalPosition()
		{
		}
	}
	[Token(Token = "0x20003A7")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x9BA228", Offset = "0x9BA228")]
	public class FujiSerialized : Attribute
	{
		[Token(Token = "0x6001B39")]
		[Address(RVA = "0xC82AE4", Offset = "0xC82AE4", VA = "0xC82AE4")]
		public FujiSerialized()
		{
		}
	}
	[Token(Token = "0x20003A8")]
	public interface IFujiSerializable
	{
		[Token(Token = "0x6001B3A")]
		void OnPreSerialize();

		[Token(Token = "0x6001B3B")]
		void OnPostDeserialize();
	}
	[Serializable]
	[Token(Token = "0x20003A9")]
	public struct FujiWrapper<T>
	{
		[Token(Token = "0x4000FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T Data;
	}
	[Token(Token = "0x20003AA")]
	public static class SerializationUtils
	{
		[Token(Token = "0x2000641")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBB84", Offset = "0x9BBB84")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x4001BAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public object obj;

			[Token(Token = "0x60026CE")]
			[Address(RVA = "0xBCEFF8", Offset = "0xBCEFF8", VA = "0xBCEFF8")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x60026CF")]
			[Address(RVA = "0xBCF000", Offset = "0xBCF000", VA = "0xBCF000")]
			internal bool <SerializeAttributeFields>b__1(FieldInfo field)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x2000642")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBB94", Offset = "0x9BBB94")]
		private sealed class <>c
		{
			[Token(Token = "0x4001BAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001BAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<FieldInfo, bool> <>9__5_0;

			[Token(Token = "0x4001BAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<PropertyInfo, bool> <>9__5_2;

			[Token(Token = "0x4001BAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<PropertyInfo, bool> <>9__5_3;

			[Token(Token = "0x4001BAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<FieldInfo, bool> <>9__7_0;

			[Token(Token = "0x4001BB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<PropertyInfo, bool> <>9__7_2;

			[Token(Token = "0x4001BB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Func<PropertyInfo, bool> <>9__7_3;

			[Token(Token = "0x4001BB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static Func<string, FujiLocalInstanceRef> <>9__8_0;

			[Token(Token = "0x4001BB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public static Func<string, FujiLocalInstanceRef> <>9__9_0;

			[Token(Token = "0x4001BB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public static Func<FujiLocalInstanceRef, string> <>9__10_0;

			[Token(Token = "0x60026D1")]
			[Address(RVA = "0xEF2978", Offset = "0xEF2978", VA = "0xEF2978")]
			public <>c()
			{
			}

			[Token(Token = "0x60026D2")]
			[Address(RVA = "0xEF2980", Offset = "0xEF2980", VA = "0xEF2980")]
			internal bool <SerializeAttributeFields>b__5_0(FieldInfo field)
			{
				return default(bool);
			}

			[Token(Token = "0x60026D3")]
			[Address(RVA = "0xEF2A1C", Offset = "0xEF2A1C", VA = "0xEF2A1C")]
			internal bool <SerializeAttributeFields>b__5_2(PropertyInfo field)
			{
				return default(bool);
			}

			[Token(Token = "0x60026D4")]
			[Address(RVA = "0xEF2AB8", Offset = "0xEF2AB8", VA = "0xEF2AB8")]
			internal bool <SerializeAttributeFields>b__5_3(PropertyInfo field)
			{
				return default(bool);
			}

			[Token(Token = "0x60026D5")]
			[Address(RVA = "0xEF2B44", Offset = "0xEF2B44", VA = "0xEF2B44")]
			internal bool <DeserializeAttributeFields>b__7_0(FieldInfo field)
			{
				return default(bool);
			}

			[Token(Token = "0x60026D6")]
			[Address(RVA = "0xEF2BE0", Offset = "0xEF2BE0", VA = "0xEF2BE0")]
			internal bool <DeserializeAttributeFields>b__7_2(PropertyInfo field)
			{
				return default(bool);
			}

			[Token(Token = "0x60026D7")]
			[Address(RVA = "0xEF2C7C", Offset = "0xEF2C7C", VA = "0xEF2C7C")]
			internal bool <DeserializeAttributeFields>b__7_3(PropertyInfo field)
			{
				return default(bool);
			}

			[Token(Token = "0x60026D8")]
			[Address(RVA = "0xEF2D08", Offset = "0xEF2D08", VA = "0xEF2D08")]
			internal FujiLocalInstanceRef <DeserializeType>b__8_0(string str)
			{
				return default(FujiLocalInstanceRef);
			}

			[Token(Token = "0x60026D9")]
			[Address(RVA = "0xEF2D34", Offset = "0xEF2D34", VA = "0xEF2D34")]
			internal FujiLocalInstanceRef <DeserializeType>b__9_0(string str)
			{
				return default(FujiLocalInstanceRef);
			}

			[Token(Token = "0x60026DA")]
			[Address(RVA = "0xEF2D60", Offset = "0xEF2D60", VA = "0xEF2D60")]
			internal string <SerializeType>b__10_0(FujiLocalInstanceRef r)
			{
				return null;
			}
		}

		[Token(Token = "0x2000643")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBBA4", Offset = "0x9BBBA4")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x4001BB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public object obj;

			[Token(Token = "0x60026DB")]
			[Address(RVA = "0xBCF0B4", Offset = "0xBCF0B4", VA = "0xBCF0B4")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x60026DC")]
			[Address(RVA = "0xBCF0BC", Offset = "0xBCF0BC", VA = "0xBCF0BC")]
			internal bool <DeserializeAttributeFields>b__1(FieldInfo field)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool ExtractPrefabCacheData;

		[Token(Token = "0x4000FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly Dictionary<string, Dictionary<string, string>> PrefabDataCache;

		[Token(Token = "0x6001B3C")]
		[Address(RVA = "0xEEEC2C", Offset = "0xEEEC2C", VA = "0xEEEC2C")]
		public static string ToJson(object t)
		{
			return null;
		}

		[Token(Token = "0x6001B3D")]
		public static T FromJson<T>(string data)
		{
			return (T)null;
		}

		[Token(Token = "0x6001B3E")]
		[Address(RVA = "0xEEEC5C", Offset = "0xEEEC5C", VA = "0xEEEC5C")]
		public static Dictionary<string, string> GetSerializedPrefab(PersistentEntity obj)
		{
			return null;
		}

		[Token(Token = "0x6001B3F")]
		[Address(RVA = "0xEEEE1C", Offset = "0xEEEE1C", VA = "0xEEEE1C")]
		public static void SerializeAttributeFields(int serialIndex, object obj, Dictionary<string, string> data)
		{
		}

		[Token(Token = "0x6001B40")]
		[Address(RVA = "0xEEF95C", Offset = "0xEEF95C", VA = "0xEEF95C")]
		public static string Key(string name, int serialIndex)
		{
			return null;
		}

		[Token(Token = "0x6001B41")]
		[Address(RVA = "0xEF02CC", Offset = "0xEF02CC", VA = "0xEF02CC")]
		public static void DeserializeAttributeFields(int serialIndex, object obj, Dictionary<string, string> data, PersistentEntity persistObj)
		{
		}

		[Token(Token = "0x6001B42")]
		[Address(RVA = "0xEF10D4", Offset = "0xEF10D4", VA = "0xEF10D4")]
		public static void DeserializeType(object obj, FieldInfo field, string data)
		{
		}

		[Token(Token = "0x6001B43")]
		[Address(RVA = "0xEF1A10", Offset = "0xEF1A10", VA = "0xEF1A10")]
		public static void DeserializeType(object obj, PropertyInfo field, string data)
		{
		}

		[Token(Token = "0x6001B44")]
		[Address(RVA = "0xEEF9D8", Offset = "0xEEF9D8", VA = "0xEEF9D8")]
		public static string SerializeType(object obj)
		{
			return null;
		}

		[Token(Token = "0x6001B45")]
		[Address(RVA = "0xEF234C", Offset = "0xEF234C", VA = "0xEF234C")]
		public static bool IsSupportedType(Type type)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003AB")]
	public enum LoadingZoneKey
	{
		[Token(Token = "0x4000FFA")]
		None = 0,
		[Token(Token = "0x4000FFB")]
		Birthing = -100000,
		[Token(Token = "0x4000FFC")]
		Test = -1,
		[Token(Token = "0x4000FFD")]
		Garden = 1,
		[Token(Token = "0x4000FFE")]
		Biome1 = 5,
		[Token(Token = "0x4000FFF")]
		Biome2 = 10,
		[Token(Token = "0x4001000")]
		Biome3 = 15,
		[Token(Token = "0x4001001")]
		Ending = 20,
		[Token(Token = "0x4001002")]
		MainMenu = 30
	}
	[Serializable]
	[Token(Token = "0x20003AC")]
	public class SimulationWorldStateV1
	{
		[Token(Token = "0x4001003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Version;

		[Token(Token = "0x4001004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public long TimeStamp;

		[Token(Token = "0x4001005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<DataPairV1> GenericData;

		[Token(Token = "0x4001006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SimulationPlayerV1 Player;

		[Token(Token = "0x4001007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<ZoneV1> Zones;

		[Token(Token = "0x170002A4")]
		public bool UsingSystemLanguage
		{
			[Token(Token = "0x6001B48")]
			[Address(RVA = "0xBCF96C", Offset = "0xBCF96C", VA = "0xBCF96C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001B47")]
			[Address(RVA = "0xBCF918", Offset = "0xBCF918", VA = "0xBCF918")]
			set
			{
			}
		}

		[Token(Token = "0x170002A5")]
		public SystemLanguage ChosenLanguage
		{
			[Token(Token = "0x6001B4A")]
			[Address(RVA = "0xBCFA1C", Offset = "0xBCFA1C", VA = "0xBCFA1C")]
			get
			{
				return default(SystemLanguage);
			}
			[Token(Token = "0x6001B49")]
			[Address(RVA = "0xBCF9C8", Offset = "0xBCF9C8", VA = "0xBCF9C8")]
			set
			{
			}
		}

		[Token(Token = "0x6001B4B")]
		[Address(RVA = "0xBCFA6C", Offset = "0xBCFA6C", VA = "0xBCFA6C")]
		public SimulationWorldStateV1()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003AD")]
	public class ZoneV1
	{
		[Token(Token = "0x4001008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LoadingZoneKey Zone;

		[Token(Token = "0x4001009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<SimulationTrackedObjectV1> TrackedObjects;

		[Token(Token = "0x400100A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int LightGems;

		[Token(Token = "0x400100B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool HasVisitedAtLeastOnce;

		[Token(Token = "0x400100C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool HasLeftAtLeastOnce;

		[Token(Token = "0x400100D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float[] TuningVals;

		[Token(Token = "0x6001B4C")]
		[Address(RVA = "0xBCFBF0", Offset = "0xBCFBF0", VA = "0xBCFBF0")]
		public ZoneV1()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003AE")]
	public class SimulationPlayerV1
	{
		[Token(Token = "0x400100E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ulong LightGems;

		[Token(Token = "0x400100F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 WorldPosition;

		[Token(Token = "0x4001010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ZoneV1 CurrentIsland;

		[Token(Token = "0x4001011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string[] Inventory;

		[Token(Token = "0x4001012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public double SimulationTimeSeconds;

		[Token(Token = "0x4001013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public double ActualPlayTimeSeconds;

		[Token(Token = "0x6001B4D")]
		[Address(RVA = "0xBCF4D4", Offset = "0xBCF4D4", VA = "0xBCF4D4")]
		public SimulationPlayerV1()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003AF")]
	public class SimulationTrackedObjectV1
	{
		[Serializable]
		[Token(Token = "0x2000644")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBBB4", Offset = "0x9BBBB4")]
		private sealed class <>c
		{
			[Token(Token = "0x4001BB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001BB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<KeyValuePair<string, string>, DataPairV1> <>9__9_0;

			[Token(Token = "0x60026DE")]
			[Address(RVA = "0xBCF880", Offset = "0xBCF880", VA = "0xBCF880")]
			public <>c()
			{
			}

			[Token(Token = "0x60026DF")]
			[Address(RVA = "0xBCF888", Offset = "0xBCF888", VA = "0xBCF888")]
			internal DataPairV1 <.ctor>b__9_0(KeyValuePair<string, string> pair)
			{
				return default(DataPairV1);
			}
		}

		[Token(Token = "0x4001014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Guid;

		[Token(Token = "0x4001015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string PrefabIndex;

		[Token(Token = "0x4001016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string GlobalName;

		[Token(Token = "0x4001017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool DynamicAllocated;

		[Token(Token = "0x4001018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int Importance;

		[Token(Token = "0x4001019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<DataPairV1> GenericDatas;

		[Token(Token = "0x400101A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public PosRotTuple PosRot;

		[Token(Token = "0x400101B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public double SpawnTime;

		[Token(Token = "0x6001B4E")]
		[Address(RVA = "0xBCF534", Offset = "0xBCF534", VA = "0xBCF534")]
		public SimulationTrackedObjectV1()
		{
		}

		[Token(Token = "0x6001B4F")]
		[Address(RVA = "0xBCF5A4", Offset = "0xBCF5A4", VA = "0xBCF5A4")]
		public SimulationTrackedObjectV1(PersistentEntity entity, Dictionary<string, string> data)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003B0")]
	public struct DataPairV1
	{
		[Token(Token = "0x400101C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string Key;

		[Token(Token = "0x400101D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string Value;

		[Token(Token = "0x6001B50")]
		[Address(RVA = "0xA823C8", Offset = "0xA823C8", VA = "0xA823C8")]
		public DataPairV1(string key, string value)
		{
		}
	}
	[Token(Token = "0x20003B1")]
	public static class WorldStateExtensions
	{
		[Token(Token = "0x400101E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly LoadingZoneKey[] Zones;

		[Token(Token = "0x6001B51")]
		[Address(RVA = "0xBE1A68", Offset = "0xBE1A68", VA = "0xBE1A68")]
		public static void SetGenericData(this List<DataPairV1> datas, string key, string value)
		{
		}

		[Token(Token = "0x6001B52")]
		[Address(RVA = "0xBE1BA8", Offset = "0xBE1BA8", VA = "0xBE1BA8")]
		public static string GetGenericData(this List<DataPairV1> datas, string key)
		{
			return null;
		}
	}
	[Token(Token = "0x20003B2")]
	public interface ISimulationTickable
	{
		[Token(Token = "0x6001B54")]
		void OnSimulationTick(float deltaSeconds, bool liveUpdate);
	}
	[Token(Token = "0x20003B3")]
	public enum Location
	{
		[Token(Token = "0x4001020")]
		World,
		[Token(Token = "0x4001021")]
		Storage
	}
	[Serializable]
	[Token(Token = "0x20003B4")]
	public struct PosRotScale
	{
		[Token(Token = "0x4001022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 Position;

		[Token(Token = "0x4001023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 Rotation;

		[Token(Token = "0x4001024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 Scale;

		[Token(Token = "0x170002A6")]
		public Quaternion QuatRot
		{
			[Token(Token = "0x6001B55")]
			[Address(RVA = "0xA883E4", Offset = "0xA883E4", VA = "0xA883E4")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x6001B56")]
		[Address(RVA = "0xA883EC", Offset = "0xA883EC", VA = "0xA883EC")]
		public PosRotScale(Vector3 pos, Quaternion rot, Vector3 scale)
		{
		}

		[Token(Token = "0x6001B57")]
		[Address(RVA = "0xA88404", Offset = "0xA88404", VA = "0xA88404")]
		public PosRotScale(Transform transform)
		{
		}

		[Token(Token = "0x6001B58")]
		[Address(RVA = "0xEE56A4", Offset = "0xEE56A4", VA = "0xEE56A4")]
		public static PosRotScale Lerp(PosRotScale a, PosRotScale b, float t)
		{
			return default(PosRotScale);
		}

		[Token(Token = "0x6001B59")]
		[Address(RVA = "0xEE5860", Offset = "0xEE5860", VA = "0xEE5860")]
		public static implicit operator PosRotScale(Transform d)
		{
			return default(PosRotScale);
		}

		[Token(Token = "0x6001B5A")]
		[Address(RVA = "0xA8840C", Offset = "0xA8840C", VA = "0xA8840C")]
		public void Apply(Transform transform)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003B5")]
	public struct PosRotTuple
	{
		[Token(Token = "0x4001025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 Position;

		[Token(Token = "0x4001026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion Rotation;

		[Token(Token = "0x6001B5B")]
		[Address(RVA = "0xA88414", Offset = "0xA88414", VA = "0xA88414")]
		public PosRotTuple(Vector3 pos, Quaternion rot)
		{
		}

		[Token(Token = "0x6001B5C")]
		[Address(RVA = "0xA88428", Offset = "0xA88428", VA = "0xA88428")]
		public PosRotTuple(Transform transform)
		{
		}

		[Token(Token = "0x6001B5D")]
		[Address(RVA = "0xEE5AC4", Offset = "0xEE5AC4", VA = "0xEE5AC4")]
		public static PosRotTuple Lerp(PosRotTuple a, PosRotTuple b, float t)
		{
			return default(PosRotTuple);
		}

		[Token(Token = "0x6001B5E")]
		[Address(RVA = "0xEE5C20", Offset = "0xEE5C20", VA = "0xEE5C20")]
		public static implicit operator PosRotTuple(Transform d)
		{
			return default(PosRotTuple);
		}

		[Token(Token = "0x6001B5F")]
		[Address(RVA = "0xEE5CD0", Offset = "0xEE5CD0", VA = "0xEE5CD0")]
		public static implicit operator Vector3(PosRotTuple d)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B60")]
		[Address(RVA = "0xEE5CDC", Offset = "0xEE5CDC", VA = "0xEE5CDC")]
		public static implicit operator Quaternion(PosRotTuple d)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001B61")]
		[Address(RVA = "0xA88430", Offset = "0xA88430", VA = "0xA88430")]
		public void Apply(Transform transform)
		{
		}
	}
	[Token(Token = "0x20003B6")]
	public interface ISpecialGrabbable
	{
		[Token(Token = "0x6001B62")]
		Vector3 GetGrabCenterWorld();
	}
	[Token(Token = "0x20003B7")]
	public sealed class FireEventWhenPrefabsDiscovered : MonoBehaviour
	{
		[Token(Token = "0x4001027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int CountRequired;

		[Token(Token = "0x4001028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool FireOncePerPlaySession;

		[Token(Token = "0x4001029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PersistentEntity[] Prefabs;

		[Token(Token = "0x400102A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent WhenFound;

		[Token(Token = "0x400102B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _firedOnceThisPlaySession;

		[Token(Token = "0x6001B63")]
		[Address(RVA = "0xC81174", Offset = "0xC81174", VA = "0xC81174")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001B64")]
		[Address(RVA = "0xC81324", Offset = "0xC81324", VA = "0xC81324")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001B65")]
		[Address(RVA = "0xC81200", Offset = "0xC81200", VA = "0xC81200")]
		private void Poll([Optional] WorldStateService.Messages.PrefabFoundMessage _)
		{
		}

		[Token(Token = "0x6001B66")]
		[Address(RVA = "0xC813A8", Offset = "0xC813A8", VA = "0xC813A8")]
		public FireEventWhenPrefabsDiscovered()
		{
		}
	}
	[Token(Token = "0x20003B8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9BA24C", Offset = "0x9BA24C")]
	public class JellySystemWaterJiggle : MonoBehaviour, IWaterReceiver
	{
		[Token(Token = "0x400102C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float KickScalar;

		[Token(Token = "0x400102D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PlantEntity plantEntity;

		[Token(Token = "0x400102E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool forceWakeUpOnJiggle;

		[Token(Token = "0x400102F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public JellySystem jellySystem;

		[Token(Token = "0x6001B67")]
		[Address(RVA = "0xD8820C", Offset = "0xD8820C", VA = "0xD8820C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B68")]
		[Address(RVA = "0xD882F4", Offset = "0xD882F4", VA = "0xD882F4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001B69")]
		[Address(RVA = "0xD883F4", Offset = "0xD883F4", VA = "0xD883F4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001B6A")]
		[Address(RVA = "0xD884F4", Offset = "0xD884F4", VA = "0xD884F4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x9D2DB8", Offset = "0x9D2DB8")]
		private void SimulateWatering()
		{
		}

		[Token(Token = "0x6001B6B")]
		[Address(RVA = "0xD885F0", Offset = "0xD885F0", VA = "0xD885F0")]
		public void OnWasWatered(PlantEntity sourceOrNull, float waterAmount, Vector3? position, InputHandedness? hand, Vector3? worldSprayVelocity)
		{
		}

		[Token(Token = "0x6001B6C")]
		[Address(RVA = "0xD888A0", Offset = "0xD888A0", VA = "0xD888A0")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001B6D")]
		[Address(RVA = "0xD88990", Offset = "0xD88990", VA = "0xD88990", Slot = "4")]
		public void ReceiveWater(float waterAmount, Vector3? worldPosition, InputHandedness? hand, Vector3? worldSprayVelocity)
		{
		}

		[Token(Token = "0x6001B6E")]
		[Address(RVA = "0xD88A64", Offset = "0xD88A64", VA = "0xD88A64")]
		public JellySystemWaterJiggle()
		{
		}
	}
	[Token(Token = "0x20003B9")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9BA2B0", Offset = "0x9BA2B0")]
	public class JellyPlantFace : MonoBehaviour
	{
		[Token(Token = "0x2000645")]
		public enum SuggestedBehaviour
		{
			[Token(Token = "0x4001BB9")]
			SpinnyDance,
			[Token(Token = "0x4001BBA")]
			LightGemPresent,
			[Token(Token = "0x4001BBB")]
			LittleBounce
		}

		[Token(Token = "0x2000646")]
		public abstract class JellyPlantFaceTask : ITask<JellyPlantFace>
		{
			[Token(Token = "0x4001BBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9C9A88", Offset = "0x9C9A88")]
			public float RandomWeight;

			[Token(Token = "0x4001BBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C9AC0", Offset = "0x9C9AC0")]
			private JellyPlantFace <Target>k__BackingField;

			[Token(Token = "0x4001BBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C9AD0", Offset = "0x9C9AD0")]
			private readonly int <Priority>k__BackingField;

			[Token(Token = "0x170004A4")]
			public JellyPlantFace Target
			{
				[Token(Token = "0x60026E0")]
				[Address(RVA = "0xD866EC", Offset = "0xD866EC", VA = "0xD866EC", Slot = "4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D8544", Offset = "0x9D8544")]
				get
				{
					return null;
				}
				[Token(Token = "0x60026E1")]
				[Address(RVA = "0xD87038", Offset = "0xD87038", VA = "0xD87038", Slot = "5")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D8554", Offset = "0x9D8554")]
				set
				{
				}
			}

			[Token(Token = "0x170004A5")]
			public int Priority
			{
				[Token(Token = "0x60026E2")]
				[Address(RVA = "0xD87040", Offset = "0xD87040", VA = "0xD87040", Slot = "6")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D8564", Offset = "0x9D8564")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x60026E3")]
			public abstract TaskResult OnEnter();

			[Token(Token = "0x60026E4")]
			public abstract TaskResult OnUpdate();

			[Token(Token = "0x60026E5")]
			public abstract void OnExit();

			[Token(Token = "0x60026E6")]
			[Address(RVA = "0xD866F4", Offset = "0xD866F4", VA = "0xD866F4")]
			protected JellyPlantFaceTask()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000647")]
		public sealed class DoIdleTask : JellyPlantFaceTask
		{
			[Token(Token = "0x4001BBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Vector2 CooldownRange;

			[Token(Token = "0x4001BC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float TwistLerp;

			[Token(Token = "0x4001BC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float PositionLerp;

			[Token(Token = "0x4001BC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public Cooldown Cooldown;

			[Token(Token = "0x60026E7")]
			[Address(RVA = "0xD869AC", Offset = "0xD869AC", VA = "0xD869AC", Slot = "10")]
			public override TaskResult OnEnter()
			{
				return default(TaskResult);
			}

			[Token(Token = "0x60026E8")]
			[Address(RVA = "0xD869E4", Offset = "0xD869E4", VA = "0xD869E4", Slot = "11")]
			public override TaskResult OnUpdate()
			{
				return default(TaskResult);
			}

			[Token(Token = "0x60026E9")]
			[Address(RVA = "0xD86AF4", Offset = "0xD86AF4", VA = "0xD86AF4", Slot = "12")]
			public override void OnExit()
			{
			}

			[Token(Token = "0x60026EA")]
			[Address(RVA = "0xD85CD0", Offset = "0xD85CD0", VA = "0xD85CD0")]
			public DoIdleTask()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000648")]
		public sealed class DoTrackTask : JellyPlantFaceTask
		{
			[Token(Token = "0x4001BC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Vector2 CooldownRange;

			[Token(Token = "0x4001BC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float TwistLerp;

			[Token(Token = "0x4001BC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float PositionLerp;

			[Token(Token = "0x4001BC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public Cooldown Cooldown;

			[Token(Token = "0x60026EB")]
			[Address(RVA = "0xD86DE0", Offset = "0xD86DE0", VA = "0xD86DE0", Slot = "10")]
			public override TaskResult OnEnter()
			{
				return default(TaskResult);
			}

			[Token(Token = "0x60026EC")]
			[Address(RVA = "0xD86F08", Offset = "0xD86F08", VA = "0xD86F08", Slot = "11")]
			public override TaskResult OnUpdate()
			{
				return default(TaskResult);
			}

			[Token(Token = "0x60026ED")]
			[Address(RVA = "0xD87034", Offset = "0xD87034", VA = "0xD87034", Slot = "12")]
			public override void OnExit()
			{
			}

			[Token(Token = "0x60026EE")]
			[Address(RVA = "0xD85D28", Offset = "0xD85D28", VA = "0xD85D28")]
			public DoTrackTask()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000649")]
		public sealed class DoJumpTask : JellyPlantFaceTask
		{
			[Token(Token = "0x4001BC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C9AE0", Offset = "0x9C9AE0")]
			private float <TimeRemaining>k__BackingField;

			[Token(Token = "0x170004A6")]
			public float TimeRemaining
			{
				[Token(Token = "0x60026EF")]
				[Address(RVA = "0xD86AF8", Offset = "0xD86AF8", VA = "0xD86AF8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D8574", Offset = "0x9D8574")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x60026F0")]
				[Address(RVA = "0xD86B00", Offset = "0xD86B00", VA = "0xD86B00")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D8584", Offset = "0x9D8584")]
				set
				{
				}
			}

			[Token(Token = "0x60026F1")]
			[Address(RVA = "0xD86B08", Offset = "0xD86B08", VA = "0xD86B08", Slot = "10")]
			public override TaskResult OnEnter()
			{
				return default(TaskResult);
			}

			[Token(Token = "0x60026F2")]
			[Address(RVA = "0xD86B60", Offset = "0xD86B60", VA = "0xD86B60", Slot = "11")]
			public override TaskResult OnUpdate()
			{
				return default(TaskResult);
			}

			[Token(Token = "0x60026F3")]
			[Address(RVA = "0xD86BA0", Offset = "0xD86BA0", VA = "0xD86BA0", Slot = "12")]
			public override void OnExit()
			{
			}

			[Token(Token = "0x60026F4")]
			[Address(RVA = "0xD85EE4", Offset = "0xD85EE4", VA = "0xD85EE4")]
			public DoJumpTask()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200064A")]
		public sealed class DoDanceTask : JellyPlantFaceTask
		{
			[Token(Token = "0x4001BC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Vector2 CooldownRange;

			[Token(Token = "0x4001BC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float oscillationsPerSecond;

			[Token(Token = "0x4001BCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float amplitudeRadians;

			[Token(Token = "0x4001BCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public Cooldown Cooldown;

			[Token(Token = "0x60026F5")]
			[Address(RVA = "0xD86704", Offset = "0xD86704", VA = "0xD86704", Slot = "10")]
			public override TaskResult OnEnter()
			{
				return default(TaskResult);
			}

			[Token(Token = "0x60026F6")]
			[Address(RVA = "0xD867EC", Offset = "0xD867EC", VA = "0xD867EC", Slot = "12")]
			public override void OnExit()
			{
			}

			[Token(Token = "0x60026F7")]
			[Address(RVA = "0xD867F0", Offset = "0xD867F0", VA = "0xD867F0", Slot = "11")]
			public override TaskResult OnUpdate()
			{
				return default(TaskResult);
			}

			[Token(Token = "0x60026F8")]
			[Address(RVA = "0xD85DE0", Offset = "0xD85DE0", VA = "0xD85DE0")]
			public DoDanceTask()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200064B")]
		public sealed class DoBopToBeat : JellyPlantFaceTask
		{
			[Token(Token = "0x4001BCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9C9AF0", Offset = "0x9C9AF0")]
			public float3 BopSwayPosOffset;

			[Token(Token = "0x4001BCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9C9B28", Offset = "0x9C9B28")]
			public float BopSwayAngleDeg;

			[Token(Token = "0x4001BCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float BopSwayAngleLerpCoeff;

			[Token(Token = "0x4001BCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9C9B60", Offset = "0x9C9B60")]
			public int MaxNumBops;

			[Token(Token = "0x4001BD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public bool InfiniteBopping;

			[Token(Token = "0x4001BD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public SequencerNoteType BopToNoteType;

			[Token(Token = "0x4001BD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private int _numNotesReceived;

			[Token(Token = "0x60026F9")]
			[Address(RVA = "0xD863AC", Offset = "0xD863AC", VA = "0xD863AC", Slot = "10")]
			public override TaskResult OnEnter()
			{
				return default(TaskResult);
			}

			[Token(Token = "0x60026FA")]
			[Address(RVA = "0xD864C0", Offset = "0xD864C0", VA = "0xD864C0", Slot = "12")]
			public override void OnExit()
			{
			}

			[Token(Token = "0x60026FB")]
			[Address(RVA = "0xD865D0", Offset = "0xD865D0", VA = "0xD865D0")]
			private void HandleBeatEvent(SequencerStepEvent ev)
			{
			}

			[Token(Token = "0x60026FC")]
			[Address(RVA = "0xD865EC", Offset = "0xD865EC", VA = "0xD865EC", Slot = "11")]
			public override TaskResult OnUpdate()
			{
				return default(TaskResult);
			}

			[Token(Token = "0x60026FD")]
			[Address(RVA = "0xD85E40", Offset = "0xD85E40", VA = "0xD85E40")]
			public DoBopToBeat()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200064C")]
		public sealed class DoPresentLightGemTask : JellyPlantFaceTask
		{
			[Token(Token = "0x4001BD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float oscillationsPerSecond;

			[Token(Token = "0x4001BD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float amplitudeRadians;

			[Token(Token = "0x60026FE")]
			[Address(RVA = "0xD86BA4", Offset = "0xD86BA4", VA = "0xD86BA4", Slot = "10")]
			public override TaskResult OnEnter()
			{
				return default(TaskResult);
			}

			[Token(Token = "0x60026FF")]
			[Address(RVA = "0xD86BAC", Offset = "0xD86BAC", VA = "0xD86BAC", Slot = "12")]
			public override void OnExit()
			{
			}

			[Token(Token = "0x6002700")]
			[Address(RVA = "0xD86BD8", Offset = "0xD86BD8", VA = "0xD86BD8", Slot = "11")]
			public override TaskResult OnUpdate()
			{
				return default(TaskResult);
			}

			[Token(Token = "0x6002701")]
			[Address(RVA = "0xD85EC4", Offset = "0xD85EC4", VA = "0xD85EC4")]
			public DoPresentLightGemTask()
			{
			}
		}

		[Token(Token = "0x4001030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9C7E2C", Offset = "0x9C7E2C")]
		public float TargetTwistAroundNormal;

		[Token(Token = "0x4001031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float3 TargetPinTranslation;

		[Token(Token = "0x4001032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform TargetTransform;

		[Token(Token = "0x4001033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9C7E64", Offset = "0x9C7E64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9C7E64", Offset = "0x9C7E64")]
		[SerializeField]
		private float3 Normal;

		[Token(Token = "0x4001034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9C7ED4", Offset = "0x9C7ED4")]
		[SerializeField]
		private float3 Up;

		[Token(Token = "0x4001035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TaskQueue<JellyPlantFace> _taskQueue;

		[Token(Token = "0x4001036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private WeightedSampler<JellyPlantFaceTask> _emptyTaskSampler;

		[Token(Token = "0x4001037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9C7F20", Offset = "0x9C7F20")]
		public DoIdleTask _doIdleTask;

		[Token(Token = "0x4001038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public DoTrackTask _doTrackTask;

		[Token(Token = "0x4001039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public DoDanceTask _doDanceTask;

		[Token(Token = "0x400103A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public DoBopToBeat _doBopToBeatTask;

		[Token(Token = "0x400103B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public DoPresentLightGemTask _doPresentLightGemTask;

		[Token(Token = "0x400103C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public DoJumpTask _doJumpTask;

		[Token(Token = "0x400103D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9C7F58", Offset = "0x9C7F58")]
		[SerializeField]
		private JellyPoint[] PointChildren;

		[Token(Token = "0x400103E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private quaternion LookOffset;

		[Token(Token = "0x400103F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private FastMathExtension.Orientation[] ChildLocalOrientations;

		[Token(Token = "0x4001040")]
		private const float TargetWorldClamp = 0.5f;

		[Token(Token = "0x4001041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float3 _defaultTargetLocalInRootSpace;

		[Token(Token = "0x4001042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private float3 _currentTargetWorld;

		[Token(Token = "0x4001043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private JellySystem _jellySystem;

		[Token(Token = "0x4001044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Cooldown _trackObjectCooldown;

		[Token(Token = "0x4001045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private bool _wasTouched;

		[Token(Token = "0x4001046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float3? _defaultLocalPinPosition;

		[Token(Token = "0x170002A7")]
		private float3 DefaultTargetWorld
		{
			[Token(Token = "0x6001B72")]
			[Address(RVA = "0xD84AA8", Offset = "0xD84AA8", VA = "0xD84AA8")]
			get
			{
				return default(float3);
			}
		}

		[Token(Token = "0x6001B6F")]
		[Address(RVA = "0xD8434C", Offset = "0xD8434C", VA = "0xD8434C")]
		public void SuggestBehaviour(SuggestedBehaviour behaviour, bool cancelCurrentBehaviour = true)
		{
		}

		[Token(Token = "0x6001B70")]
		[Address(RVA = "0xD84494", Offset = "0xD84494", VA = "0xD84494")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B71")]
		[Address(RVA = "0xD84530", Offset = "0xD84530", VA = "0xD84530")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B73")]
		[Address(RVA = "0xD84B38", Offset = "0xD84B38", VA = "0xD84B38")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001B74")]
		[Address(RVA = "0xD84B98", Offset = "0xD84B98", VA = "0xD84B98")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B75")]
		[Address(RVA = "0xD84C9C", Offset = "0xD84C9C", VA = "0xD84C9C")]
		private void ParentalJellySystemOnOnJellyPhysicsSync(float timestep)
		{
		}

		[Token(Token = "0x6001B76")]
		[Address(RVA = "0xD854A0", Offset = "0xD854A0", VA = "0xD854A0")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001B77")]
		[Address(RVA = "0xD85630", Offset = "0xD85630", VA = "0xD85630")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x9D2DF0", Offset = "0x9D2DF0")]
		public void GatherChildren()
		{
		}

		[Token(Token = "0x6001B78")]
		[Address(RVA = "0xD85AF0", Offset = "0xD85AF0", VA = "0xD85AF0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x9D2E28", Offset = "0x9D2E28")]
		public void NormalizeVectors()
		{
		}

		[Token(Token = "0x6001B79")]
		[Address(RVA = "0xD85B48", Offset = "0xD85B48", VA = "0xD85B48")]
		public JellyPlantFace()
		{
		}

		[Token(Token = "0x6001B7A")]
		[Address(RVA = "0xD85EF4", Offset = "0xD85EF4", VA = "0xD85EF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D2E60", Offset = "0x9D2E60")]
		private void <Start>b__26_0(AwakeStatus asleep)
		{
		}

		[Token(Token = "0x6001B7B")]
		[Address(RVA = "0xD85F04", Offset = "0xD85F04", VA = "0xD85F04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D2E70", Offset = "0x9D2E70")]
		private void <Start>b__26_1(IReadOnlyList<JellySystem.JellyTouchResult> results, float dt)
		{
		}

		[Token(Token = "0x6001B7C")]
		[Address(RVA = "0xD861FC", Offset = "0xD861FC", VA = "0xD861FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D2E80", Offset = "0x9D2E80")]
		private void <Start>b__26_2(PlantEntity source, float waterAmount, Vector3? location, InputHandedness? hand, Vector3? veclotiy)
		{
		}
	}
	[Token(Token = "0x20003BA")]
	public class SusparillaBallEntity : MonoBehaviour, IWaterReceiver
	{
		[Token(Token = "0x200064D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBBC4", Offset = "0x9BBBC4")]
		private sealed class <DoDeathRoutine>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001BD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001BD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001BD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SusparillaBallEntity <>4__this;

			[Token(Token = "0x4001BD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 worldHitPoint;

			[Token(Token = "0x4001BD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private WaitForFixedUpdate <wait>5__2;

			[Token(Token = "0x4001BDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <t>5__3;

			[Token(Token = "0x4001BDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float <maxTime>5__4;

			[Token(Token = "0x4001BDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Cooldown <_sparkleCooldown>5__5;

			[Token(Token = "0x170004A7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002705")]
				[Address(RVA = "0xBD96AC", Offset = "0xBD96AC", VA = "0xBD96AC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004A8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002707")]
				[Address(RVA = "0xBD971C", Offset = "0xBD971C", VA = "0xBD971C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002702")]
			[Address(RVA = "0xBD8D3C", Offset = "0xBD8D3C", VA = "0xBD8D3C")]
			[DebuggerHidden]
			public <DoDeathRoutine>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6002703")]
			[Address(RVA = "0xBD8E9C", Offset = "0xBD8E9C", VA = "0xBD8E9C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002704")]
			[Address(RVA = "0xBD8EA0", Offset = "0xBD8EA0", VA = "0xBD8EA0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002706")]
			[Address(RVA = "0xBD96B4", Offset = "0xBD96B4", VA = "0xBD96B4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Rigidbody _rigidbody;

		[Token(Token = "0x4001048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _death;

		[Token(Token = "0x4001049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform _target;

		[Token(Token = "0x400104A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private JellySystem _jellySystem;

		[Token(Token = "0x170002A8")]
		public bool Alive
		{
			[Token(Token = "0x6001B7D")]
			[Address(RVA = "0xBD86AC", Offset = "0xBD86AC", VA = "0xBD86AC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001B7E")]
		[Address(RVA = "0xBD86BC", Offset = "0xBD86BC", VA = "0xBD86BC")]
		public void Setup(Transform branch, JellySystem jellySystem)
		{
		}

		[Token(Token = "0x6001B7F")]
		[Address(RVA = "0xBD86C4", Offset = "0xBD86C4", VA = "0xBD86C4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B80")]
		[Address(RVA = "0xBD8804", Offset = "0xBD8804", VA = "0xBD8804")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B81")]
		[Address(RVA = "0xBD896C", Offset = "0xBD896C", VA = "0xBD896C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001B82")]
		[Address(RVA = "0xBD8AA4", Offset = "0xBD8AA4", VA = "0xBD8AA4")]
		private void TriggerDeath(Vector3 hitPoint)
		{
		}

		[Token(Token = "0x6001B83")]
		[Address(RVA = "0xBD8C90", Offset = "0xBD8C90", VA = "0xBD8C90")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9D2E90", Offset = "0x9D2E90")]
		private IEnumerator DoDeathRoutine(Vector3 worldHitPoint)
		{
			return null;
		}

		[Token(Token = "0x6001B84")]
		[Address(RVA = "0xBD8D68", Offset = "0xBD8D68", VA = "0xBD8D68", Slot = "4")]
		public void ReceiveWater(float waterAmount, Vector3? worldPosition, InputHandedness? hand, Vector3? worldSprayVelocity)
		{
		}

		[Token(Token = "0x6001B85")]
		[Address(RVA = "0xBD8E58", Offset = "0xBD8E58", VA = "0xBD8E58")]
		public SusparillaBallEntity()
		{
		}

		[Token(Token = "0x6001B86")]
		[Address(RVA = "0xBD8E60", Offset = "0xBD8E60", VA = "0xBD8E60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D2EF4", Offset = "0x9D2EF4")]
		private void <Awake>b__7_0(PlayerControllerInput input)
		{
		}
	}
	[Token(Token = "0x20003BB")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9BA314", Offset = "0x9BA314")]
	public class SusparillaBallSpawner : MonoBehaviour
	{
		[Token(Token = "0x200064E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBBD4", Offset = "0x9BBBD4")]
		private sealed class <DoSpawnBall>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001BDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001BDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001BDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SusparillaBallSpawner <>4__this;

			[Token(Token = "0x170004A9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600270B")]
				[Address(RVA = "0xBD9D44", Offset = "0xBD9D44", VA = "0xBD9D44", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004AA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600270D")]
				[Address(RVA = "0xBD9DB4", Offset = "0xBD9DB4", VA = "0xBD9DB4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002708")]
			[Address(RVA = "0xBD98FC", Offset = "0xBD98FC", VA = "0xBD98FC")]
			[DebuggerHidden]
			public <DoSpawnBall>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6002709")]
			[Address(RVA = "0xBD9930", Offset = "0xBD9930", VA = "0xBD9930", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600270A")]
			[Address(RVA = "0xBD9934", Offset = "0xBD9934", VA = "0xBD9934", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600270C")]
			[Address(RVA = "0xBD9D4C", Offset = "0xBD9D4C", VA = "0xBD9D4C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400104B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private PlantEntity _plant;

		[Token(Token = "0x400104C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private JellySystem _jellySystem;

		[Token(Token = "0x400104D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private SusparillaBallEntity _ball;

		[Token(Token = "0x400104E")]
		private const float TimeFactor = 0.5f;

		[Token(Token = "0x6001B87")]
		[Address(RVA = "0xBD9724", Offset = "0xBD9724", VA = "0xBD9724")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B88")]
		[Address(RVA = "0xBD9794", Offset = "0xBD9794", VA = "0xBD9794")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001B89")]
		[Address(RVA = "0xBD9834", Offset = "0xBD9834", VA = "0xBD9834")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001B8A")]
		[Address(RVA = "0xBD97C0", Offset = "0xBD97C0", VA = "0xBD97C0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9D2F04", Offset = "0x9D2F04")]
		private IEnumerator DoSpawnBall()
		{
			return null;
		}

		[Token(Token = "0x6001B8B")]
		[Address(RVA = "0xBD9928", Offset = "0xBD9928", VA = "0xBD9928")]
		public SusparillaBallSpawner()
		{
		}
	}
	[Token(Token = "0x20003BC")]
	public class SusparillaPlantEntity : MonoBehaviour
	{
		[Token(Token = "0x200064F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBBE4", Offset = "0x9BBBE4")]
		private sealed class <SpawnSusBalls>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001BE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001BE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001BE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SusparillaPlantEntity <>4__this;

			[Token(Token = "0x170004AB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002711")]
				[Address(RVA = "0xBDA1D0", Offset = "0xBDA1D0", VA = "0xBDA1D0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004AC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002713")]
				[Address(RVA = "0xBDA240", Offset = "0xBDA240", VA = "0xBDA240", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600270E")]
			[Address(RVA = "0xBD9E5C", Offset = "0xBD9E5C", VA = "0xBD9E5C")]
			[DebuggerHidden]
			public <SpawnSusBalls>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x600270F")]
			[Address(RVA = "0xBD9E90", Offset = "0xBD9E90", VA = "0xBD9E90", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002710")]
			[Address(RVA = "0xBD9E94", Offset = "0xBD9E94", VA = "0xBD9E94", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002712")]
			[Address(RVA = "0xBDA1D8", Offset = "0xBDA1D8", VA = "0xBDA1D8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400104F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SusparillaBallEntity BallPrefab;

		[Token(Token = "0x6001B8C")]
		[Address(RVA = "0xBD9DBC", Offset = "0xBD9DBC", VA = "0xBD9DBC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001B8D")]
		[Address(RVA = "0xBD9DE8", Offset = "0xBD9DE8", VA = "0xBD9DE8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9D2F68", Offset = "0x9D2F68")]
		private IEnumerator SpawnSusBalls()
		{
			return null;
		}

		[Token(Token = "0x6001B8E")]
		[Address(RVA = "0xBD9E88", Offset = "0xBD9E88", VA = "0xBD9E88")]
		public SusparillaPlantEntity()
		{
		}
	}
	[Token(Token = "0x20003BD")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9BA378", Offset = "0x9BA378")]
	public class WateringProfile : ScriptableObject
	{
		[Token(Token = "0x4001050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool NullProfile;

		[Token(Token = "0x4001051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9C7FC4", Offset = "0x9C7FC4")]
		public TimeSpanStruct TimeUntilThirsty;

		[Token(Token = "0x4001052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public TimeSpanStruct TimeToBrown;

		[Token(Token = "0x4001053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9C7FFC", Offset = "0x9C7FFC")]
		public TimeSpanStruct TimeToQuenched;

		[Token(Token = "0x4001054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9C8034", Offset = "0x9C8034")]
		public TimeSpanStruct QuenchedTimeRequiredForGrowth;

		[Token(Token = "0x4001055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9C806C", Offset = "0x9C806C")]
		public TimeSpanStruct GrowthCooldown;

		[Token(Token = "0x6001B8F")]
		[Address(RVA = "0xBE1930", Offset = "0xBE1930", VA = "0xBE1930")]
		public WateringProfile()
		{
		}
	}
	[Token(Token = "0x20003BE")]
	public class PlayerController : MonoBehaviour
	{
		[Token(Token = "0x2000650")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBBF4", Offset = "0x9BBBF4")]
		private sealed class <DoPalmTracking>d__41 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001BE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001BE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001BE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlayerController <>4__this;

			[Token(Token = "0x4001BE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <palmSkywardThreshold>5__2;

			[Token(Token = "0x4001BE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <palmSkywardThresholdSec>5__3;

			[Token(Token = "0x4001BE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <elapsedTime>5__4;

			[Token(Token = "0x170004AD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002717")]
				[Address(RVA = "0xEDF89C", Offset = "0xEDF89C", VA = "0xEDF89C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004AE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002719")]
				[Address(RVA = "0xEDF90C", Offset = "0xEDF90C", VA = "0xEDF90C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002714")]
			[Address(RVA = "0xEDF19C", Offset = "0xEDF19C", VA = "0xEDF19C")]
			[DebuggerHidden]
			public <DoPalmTracking>d__41(int <>1__state)
			{
			}

			[Token(Token = "0x6002715")]
			[Address(RVA = "0xEDF480", Offset = "0xEDF480", VA = "0xEDF480", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002716")]
			[Address(RVA = "0xEDF484", Offset = "0xEDF484", VA = "0xEDF484", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002718")]
			[Address(RVA = "0xEDF8A4", Offset = "0xEDF8A4", VA = "0xEDF8A4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[EditorReadOnly]
		public InputHandedness Handedness;

		[Token(Token = "0x4001057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerControllerVisual Visual;

		[Token(Token = "0x4001058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PlayerHandLightGemSlot LightGemSlot;

		[Token(Token = "0x4001059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PlayerControllerInput Input;

		[Token(Token = "0x400105A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public RemoteHandConeCollider RemoteGrabCone;

		[Token(Token = "0x400105B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public InteractiveCore HeldInteractiveObj;

		[Token(Token = "0x400105C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float HandWallPenetrationDistance;

		[Token(Token = "0x400105D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Vector3 ForwardAngleOffset;

		[Token(Token = "0x400105E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Vector3 ForwardAngleOffsetLower;

		[Token(Token = "0x4001060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform teleportRay;

		[Token(Token = "0x4001061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject _vines;

		[Token(Token = "0x4001062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C80E4", Offset = "0x9C80E4")]
		private bool <Busy>k__BackingField;

		[Token(Token = "0x170002A9")]
		public Vector3 WorldForward
		{
			[Token(Token = "0x6001B92")]
			[Address(RVA = "0xEDE9CC", Offset = "0xEDE9CC", VA = "0xEDE9CC")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170002AA")]
		public Vector3 WorldForwardLower
		{
			[Token(Token = "0x6001B93")]
			[Address(RVA = "0xEDEB1C", Offset = "0xEDEB1C", VA = "0xEDEB1C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170002AB")]
		public Ray WorldFingerRay
		{
			[Token(Token = "0x6001B94")]
			[Address(RVA = "0xEDEC6C", Offset = "0xEDEC6C", VA = "0xEDEC6C")]
			get
			{
				return default(Ray);
			}
		}

		[Token(Token = "0x170002AC")]
		public Vector3 WorldPosition
		{
			[Token(Token = "0x6001B95")]
			[Address(RVA = "0xEDECDC", Offset = "0xEDECDC", VA = "0xEDECDC")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170002AD")]
		public bool Busy
		{
			[Token(Token = "0x6001B96")]
			[Address(RVA = "0xEDED10", Offset = "0xEDED10", VA = "0xEDED10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D2FEC", Offset = "0x9D2FEC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001B97")]
			[Address(RVA = "0xEDED18", Offset = "0xEDED18", VA = "0xEDED18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D2FFC", Offset = "0x9D2FFC")]
			set
			{
			}
		}

		[Token(Token = "0x170002AE")]
		public bool IsHoldingItem
		{
			[Token(Token = "0x6001B98")]
			[Address(RVA = "0xEDED24", Offset = "0xEDED24", VA = "0xEDED24")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002AF")]
		public SphereVolume FingerTouchVolume
		{
			[Token(Token = "0x6001B9C")]
			[Address(RVA = "0xEDABA8", Offset = "0xEDABA8", VA = "0xEDABA8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B0")]
		public BoxCollider HandTouchVolume
		{
			[Token(Token = "0x6001B9D")]
			[Address(RVA = "0xEDEFB0", Offset = "0xEDEFB0", VA = "0xEDEFB0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B1")]
		public Transform WigglyArmAttachPoint
		{
			[Token(Token = "0x6001B9E")]
			[Address(RVA = "0xEDEFEC", Offset = "0xEDEFEC", VA = "0xEDEFEC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B2")]
		public Transform TeleportRay
		{
			[Token(Token = "0x6001B9F")]
			[Address(RVA = "0xEDF028", Offset = "0xEDF028", VA = "0xEDF028")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000035")]
		public event Action<PlayerController, bool> PalmHeldSkyward
		{
			[Token(Token = "0x6001B90")]
			[Address(RVA = "0xEDE7F4", Offset = "0xEDE7F4", VA = "0xEDE7F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D2FCC", Offset = "0x9D2FCC")]
			add
			{
			}
			[Token(Token = "0x6001B91")]
			[Address(RVA = "0xEDE8E0", Offset = "0xEDE8E0", VA = "0xEDE8E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D2FDC", Offset = "0x9D2FDC")]
			remove
			{
			}
		}

		[Token(Token = "0x6001B99")]
		[Address(RVA = "0xEDED94", Offset = "0xEDED94", VA = "0xEDED94")]
		public void SetHandedness(InputHandedness newHandedness)
		{
		}

		[Token(Token = "0x6001B9A")]
		[Address(RVA = "0xEDEEB0", Offset = "0xEDEEB0", VA = "0xEDEEB0")]
		public void OnHoldStart(InteractiveCore interactive)
		{
		}

		[Token(Token = "0x6001B9B")]
		[Address(RVA = "0xEDEF08", Offset = "0xEDEF08", VA = "0xEDEF08")]
		public void OnHoldEnd(InteractiveCore interactive)
		{
		}

		[Token(Token = "0x6001BA0")]
		[Address(RVA = "0xEDF030", Offset = "0xEDF030", VA = "0xEDF030")]
		public void SetWateringMode(bool wateringMode)
		{
		}

		[Token(Token = "0x6001BA1")]
		[Address(RVA = "0xEDF068", Offset = "0xEDF068", VA = "0xEDF068")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BA2")]
		[Address(RVA = "0xEDF128", Offset = "0xEDF128", VA = "0xEDF128")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9D300C", Offset = "0x9D300C")]
		private IEnumerator DoPalmTracking()
		{
			return null;
		}

		[Token(Token = "0x6001BA3")]
		[Address(RVA = "0xEDF1C8", Offset = "0xEDF1C8", VA = "0xEDF1C8")]
		private void OnHandPoseWritten()
		{
		}

		[Token(Token = "0x6001BA4")]
		[Address(RVA = "0xEDEE60", Offset = "0xEDEE60", VA = "0xEDEE60")]
		public void SetVinesActive(bool active)
		{
		}

		[Token(Token = "0x6001BA5")]
		[Address(RVA = "0xEDF3E4", Offset = "0xEDF3E4", VA = "0xEDF3E4")]
		public PlayerController()
		{
		}
	}
	[Token(Token = "0x20003BF")]
	public class RemoteHandConeCollider : MonoBehaviour
	{
		[Token(Token = "0x2000651")]
		public enum DistancePolicy
		{
			[Token(Token = "0x4001BEA")]
			DistanceFromCenterRay,
			[Token(Token = "0x4001BEB")]
			DistanceFromPalm
		}

		[Token(Token = "0x4001063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly List<Collider> _colliders;

		[Token(Token = "0x4001064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DistancePolicy Policy;

		[Token(Token = "0x4001065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public InputHandedness handedness;

		[Token(Token = "0x4001066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool adjustConesBasedOnHandTilt;

		[Token(Token = "0x4001067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float degrees;

		[Token(Token = "0x170002B3")]
		public IReadOnlyList<Collider> Colliders
		{
			[Token(Token = "0x6001BA6")]
			[Address(RVA = "0xEE6E88", Offset = "0xEE6E88", VA = "0xEE6E88")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BA7")]
		[Address(RVA = "0xEE6E90", Offset = "0xEE6E90", VA = "0xEE6E90")]
		private void OnTriggerStay(Collider other)
		{
		}

		[Token(Token = "0x6001BA8")]
		[Address(RVA = "0xEE6F68", Offset = "0xEE6F68", VA = "0xEE6F68")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001BA9")]
		[Address(RVA = "0xEE6FC8", Offset = "0xEE6FC8", VA = "0xEE6FC8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BAA")]
		[Address(RVA = "0xEE721C", Offset = "0xEE721C", VA = "0xEE721C")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001BAB")]
		[Address(RVA = "0xEE4F88", Offset = "0xEE4F88", VA = "0xEE4F88")]
		public Collider GetClosestCollider()
		{
			return null;
		}

		[Token(Token = "0x6001BAC")]
		[Address(RVA = "0xEE7418", Offset = "0xEE7418", VA = "0xEE7418")]
		public RemoteHandConeCollider()
		{
		}
	}
	[Token(Token = "0x20003C0")]
	public class WaterHandCannon : MonoBehaviour, IWaterSource
	{
		[Token(Token = "0x2000652")]
		internal struct DelayedWateringImpact
		{
			[Token(Token = "0x4001BEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CooldownStruct Timer;

			[Token(Token = "0x4001BED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public PhysicsExtension.SurfacePoint3 WorldPosition;

			[Token(Token = "0x4001BEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float3 Velocity;

			[Token(Token = "0x4001BEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public GameObject ImpactedObject;

			[Token(Token = "0x4001BF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public float Strength;
		}

		[Token(Token = "0x2000653")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBC04", Offset = "0x9BBC04")]
		private sealed class <Start>d__23 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001BF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001BF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001BF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WaterHandCannon <>4__this;

			[Token(Token = "0x170004AF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600271D")]
				[Address(RVA = "0xBE18B8", Offset = "0xBE18B8", VA = "0xBE18B8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004B0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600271F")]
				[Address(RVA = "0xBE1928", Offset = "0xBE1928", VA = "0xBE1928", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600271A")]
			[Address(RVA = "0xBE0194", Offset = "0xBE0194", VA = "0xBE0194")]
			[DebuggerHidden]
			public <Start>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x600271B")]
			[Address(RVA = "0xBE16CC", Offset = "0xBE16CC", VA = "0xBE16CC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600271C")]
			[Address(RVA = "0xBE16D0", Offset = "0xBE16D0", VA = "0xBE16D0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600271E")]
			[Address(RVA = "0xBE18C0", Offset = "0xBE18C0", VA = "0xBE18C0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float SprayForce;

		[Token(Token = "0x4001069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float StartLifeTime;

		[Token(Token = "0x400106A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InputHandedness Handedness;

		[Token(Token = "0x400106B")]
		private const int MaxWaterTargetLocationsCount = 100;

		[Token(Token = "0x400106C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly List<DelayedWateringImpact> waterTargetLocations;

		[Token(Token = "0x400106D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9C80F4", Offset = "0x9C80F4")]
		[SerializeField]
		private float maximumEmissionRate;

		[Token(Token = "0x400106E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float sprayDistance;

		[Token(Token = "0x400106F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ParticleSystem particles;

		[Token(Token = "0x4001070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private ParticleSystem handSplashParticles;

		[Token(Token = "0x4001071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private ParticleSystem targetSplashParticles;

		[Token(Token = "0x4001072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9C8180", Offset = "0x9C8180")]
		[SerializeField]
		private StudioEventEmitter waterChargeEvent;

		[Token(Token = "0x4001073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private StudioEventEmitter waterChargeFullEvent;

		[Token(Token = "0x4001074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private StudioEventEmitter waterSquirtEvent;

		[Token(Token = "0x4001075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private StudioEventEmitter waterSquirtEmptyEvent;

		[Token(Token = "0x4001076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private StudioEventEmitter waterSplashOnGroundEvent;

		[Token(Token = "0x4001077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private CooldownStruct waterCannonCastCooldown;

		[Token(Token = "0x4001078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private ParticleSystem.MainModule mainModule;

		[Token(Token = "0x4001079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private ParticleSystem.EmissionModule mainEmitModule;

		[Token(Token = "0x400107A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private ParticleSystem.EmissionModule subEmitModule;

		[Token(Token = "0x400107B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private ParticleSystem.ForceOverLifetimeModule mainForceModule;

		[Token(Token = "0x400107C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Transform _fingerJoint;

		[Token(Token = "0x400107D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private readonly List<IWaterReceiver> _waterables;

		[Token(Token = "0x170002B4")]
		private Vector3 handForward
		{
			[Token(Token = "0x6001BB8")]
			[Address(RVA = "0xBE1018", Offset = "0xBE1018", VA = "0xBE1018")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170002B5")]
		private Vector3 handPosition
		{
			[Token(Token = "0x6001BB9")]
			[Address(RVA = "0xBE11A0", Offset = "0xBE11A0", VA = "0xBE11A0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6001BAD")]
		[Address(RVA = "0xBDFDA4", Offset = "0xBDFDA4", VA = "0xBDFDA4", Slot = "4")]
		public float ConsumeWater(float desiredConsumption)
		{
			return default(float);
		}

		[Token(Token = "0x6001BAE")]
		[Address(RVA = "0xBDFDCC", Offset = "0xBDFDCC", VA = "0xBDFDCC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001BAF")]
		[Address(RVA = "0xBE0120", Offset = "0xBE0120", VA = "0xBE0120")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9D3070", Offset = "0x9D3070")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6001BB0")]
		[Address(RVA = "0xBE01C0", Offset = "0xBE01C0", VA = "0xBE01C0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BB1")]
		[Address(RVA = "0xBE0E30", Offset = "0xBE0E30", VA = "0xBE0E30")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001BB2")]
		[Address(RVA = "0xBE0E90", Offset = "0xBE0E90", VA = "0xBE0E90")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001BB3")]
		[Address(RVA = "0xBE10E4", Offset = "0xBE10E4", VA = "0xBE10E4")]
		private void OnSprayBegin()
		{
		}

		[Token(Token = "0x6001BB4")]
		[Address(RVA = "0xBE1138", Offset = "0xBE1138", VA = "0xBE1138")]
		private void OnSprayEnd()
		{
		}

		[Token(Token = "0x6001BB5")]
		[Address(RVA = "0xBDFF9C", Offset = "0xBDFF9C", VA = "0xBDFF9C")]
		private void SprayUpdateTick()
		{
		}

		[Token(Token = "0x6001BB6")]
		[Address(RVA = "0xBE118C", Offset = "0xBE118C", VA = "0xBE118C")]
		private float StartSpeed()
		{
			return default(float);
		}

		[Token(Token = "0x6001BB7")]
		[Address(RVA = "0xBE01E4", Offset = "0xBE01E4", VA = "0xBE01E4")]
		private void SplashRaycastUpdateTick()
		{
		}

		[Token(Token = "0x6001BBA")]
		[Address(RVA = "0xBE12B0", Offset = "0xBE12B0", VA = "0xBE12B0")]
		public WaterHandCannon()
		{
		}

		[Token(Token = "0x6001BBB")]
		[Address(RVA = "0xBE1388", Offset = "0xBE1388", VA = "0xBE1388")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D30D4", Offset = "0x9D30D4")]
		private void <Awake>b__22_0(PlayerToolService.Messages.PlayerWaterStorageMessage waterStoreMessage)
		{
		}

		[Token(Token = "0x6001BBC")]
		[Address(RVA = "0xBE1414", Offset = "0xBE1414", VA = "0xBE1414")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D30E4", Offset = "0x9D30E4")]
		private void <Awake>b__22_1(PlayerToolService.Messages.PlayerWaterStateMessage waterStateMessage)
		{
		}

		[Token(Token = "0x6001BBD")]
		[Address(RVA = "0xBE160C", Offset = "0xBE160C", VA = "0xBE160C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D30F4", Offset = "0x9D30F4")]
		private void <Awake>b__22_2(PlayerToolService.Messages.PlayerWaterSquirtMessage message)
		{
		}
	}
	[Token(Token = "0x20003C1")]
	public class ResizeablePlanter : MonoBehaviour, IFujiSerializable, IPlantableSurface, IGameObject
	{
		[Token(Token = "0x2000654")]
		private enum InteractionMode
		{
			[Token(Token = "0x4001BF5")]
			GrabAndPull,
			[Token(Token = "0x4001BF6")]
			RaisedHandles
		}

		[Token(Token = "0x2000655")]
		[Flags]
		private enum PinInteractionMode
		{
			[Token(Token = "0x4001BF8")]
			X = 1,
			[Token(Token = "0x4001BF9")]
			Y = 2,
			[Token(Token = "0x4001BFA")]
			Z = 4
		}

		[Token(Token = "0x2000656")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBC24", Offset = "0x9BBC24")]
		private sealed class <DoRaiseHandles>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001BFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001BFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001BFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlayerControllerInput input;

			[Token(Token = "0x4001BFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ResizeablePlanter <>4__this;

			[Token(Token = "0x4001BFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private InteractiveCore <grabbedCore>5__2;

			[Token(Token = "0x4001C00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private bool <raiseOnly>5__3;

			[Token(Token = "0x4001C01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float3 <pivot>5__4;

			[Token(Token = "0x4001C02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private ResizeTest.NodeBasedResizer <resizer>5__5;

			[Token(Token = "0x4001C03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			private float3 <grabOffset>5__6;

			[Token(Token = "0x170004B1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002723")]
				[Address(RVA = "0xEE9D10", Offset = "0xEE9D10", VA = "0xEE9D10", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004B2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002725")]
				[Address(RVA = "0xEE9D80", Offset = "0xEE9D80", VA = "0xEE9D80", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002720")]
			[Address(RVA = "0xEE7E70", Offset = "0xEE7E70", VA = "0xEE7E70")]
			[DebuggerHidden]
			public <DoRaiseHandles>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x6002721")]
			[Address(RVA = "0xEE97FC", Offset = "0xEE97FC", VA = "0xEE97FC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002722")]
			[Address(RVA = "0xEE9800", Offset = "0xEE9800", VA = "0xEE9800", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002724")]
			[Address(RVA = "0xEE9D18", Offset = "0xEE9D18", VA = "0xEE9D18", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000657")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBC34", Offset = "0x9BBC34")]
		private sealed class <DoGrabAndHoldResizing>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ResizeablePlanter <>4__this;

			[Token(Token = "0x4001C07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public PlayerControllerInput input;

			[Token(Token = "0x4001C08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private bool <raiseOnly>5__2;

			[Token(Token = "0x4001C09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float3 <pivot>5__3;

			[Token(Token = "0x4001C0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private ResizeTest.NodeBasedResizer <resizer>5__4;

			[Token(Token = "0x4001C0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			private float3 <grabOffset>5__5;

			[Token(Token = "0x170004B3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002729")]
				[Address(RVA = "0xEE9784", Offset = "0xEE9784", VA = "0xEE9784", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004B4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600272B")]
				[Address(RVA = "0xEE97F4", Offset = "0xEE97F4", VA = "0xEE97F4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002726")]
			[Address(RVA = "0xEE7F0C", Offset = "0xEE7F0C", VA = "0xEE7F0C")]
			[DebuggerHidden]
			public <DoGrabAndHoldResizing>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x6002727")]
			[Address(RVA = "0xEE9004", Offset = "0xEE9004", VA = "0xEE9004", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002728")]
			[Address(RVA = "0xEE9008", Offset = "0xEE9008", VA = "0xEE9008", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600272A")]
			[Address(RVA = "0xEE978C", Offset = "0xEE978C", VA = "0xEE978C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000658")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBC44", Offset = "0x9BBC44")]
		private sealed class <DoTrackCloseness>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ResizeablePlanter <>4__this;

			[Token(Token = "0x170004B5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600272F")]
				[Address(RVA = "0xEE9EC4", Offset = "0xEE9EC4", VA = "0xEE9EC4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004B6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002731")]
				[Address(RVA = "0xEE9F34", Offset = "0xEE9F34", VA = "0xEE9F34", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600272C")]
			[Address(RVA = "0xEE885C", Offset = "0xEE885C", VA = "0xEE885C")]
			[DebuggerHidden]
			public <DoTrackCloseness>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x600272D")]
			[Address(RVA = "0xEE9D88", Offset = "0xEE9D88", VA = "0xEE9D88", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600272E")]
			[Address(RVA = "0xEE9D8C", Offset = "0xEE9D8C", VA = "0xEE9D8C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002730")]
			[Address(RVA = "0xEE9ECC", Offset = "0xEE9ECC", VA = "0xEE9ECC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000659")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBC54", Offset = "0x9BBC54")]
		private sealed class <>c
		{
			[Token(Token = "0x4001C0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001C10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<string, FujiLocalInstanceRef> <>9__33_0;

			[Token(Token = "0x6002733")]
			[Address(RVA = "0xEE8FD0", Offset = "0xEE8FD0", VA = "0xEE8FD0")]
			public <>c()
			{
			}

			[Token(Token = "0x6002734")]
			[Address(RVA = "0xEE8FD8", Offset = "0xEE8FD8", VA = "0xEE8FD8")]
			internal FujiLocalInstanceRef <set_OccupantsAsString>b__33_0(string id)
			{
				return default(FujiLocalInstanceRef);
			}
		}

		[Token(Token = "0x400107E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private InteractiveCore _pfbHandle;

		[Token(Token = "0x400107F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _slide;

		[Token(Token = "0x4001080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _translate;

		[Token(Token = "0x4001081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform _rotate;

		[Token(Token = "0x4001082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private InteractiveCore _interactiveCore;

		[Token(Token = "0x4001083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private InteractionMode _interactionMode;

		[Token(Token = "0x4001084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		[AttributeAttribute(Name = "EnumFlagAttribute", RVA = "0x9C826C", Offset = "0x9C826C")]
		private PinInteractionMode _pinInteractionMode;

		[Token(Token = "0x4001085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float _rodVerticalOffset;

		[Token(Token = "0x4001086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly InteractiveCore[] _handles;

		[Token(Token = "0x4001087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool _routineInProgress;

		[Token(Token = "0x4001088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Cooldown _cooldownTimeRemaining;

		[Token(Token = "0x4001089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<FujiLocalInstanceRef> _occupants;

		[Token(Token = "0x170002B6")]
		public Transform UniformScaleTransform
		{
			[Token(Token = "0x6001BBE")]
			[Address(RVA = "0xEE7498", Offset = "0xEE7498", VA = "0xEE7498", Slot = "10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B7")]
		public bool CanBeDestroyed
		{
			[Token(Token = "0x6001BBF")]
			[Address(RVA = "0xEE74A0", Offset = "0xEE74A0", VA = "0xEE74A0", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002B8")]
		[FujiSerialized]
		public string OccupantsAsString
		{
			[Token(Token = "0x6001BCD")]
			[Address(RVA = "0xEE8B14", Offset = "0xEE8B14", VA = "0xEE8B14")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001BCE")]
			[Address(RVA = "0xEE8B84", Offset = "0xEE8B84", VA = "0xEE8B84")]
			set
			{
			}
		}

		[Token(Token = "0x170002B9")]
		public int OccupantCount
		{
			[Token(Token = "0x6001BCF")]
			[Address(RVA = "0xEE8D34", Offset = "0xEE8D34", VA = "0xEE8D34", Slot = "9")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001BC0")]
		[Address(RVA = "0xEE74A8", Offset = "0xEE74A8", VA = "0xEE74A8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001BC1")]
		[Address(RVA = "0xEE7788", Offset = "0xEE7788", VA = "0xEE7788")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001BC2")]
		[Address(RVA = "0xEE7B84", Offset = "0xEE7B84", VA = "0xEE7B84")]
		private void HandlePlayerTouch(PlayerControllerInput input)
		{
		}

		[Token(Token = "0x6001BC3")]
		[Address(RVA = "0xEE7C94", Offset = "0xEE7C94", VA = "0xEE7C94")]
		private void HandleOrbTouch(PlayerControllerInput input)
		{
		}

		[Token(Token = "0x6001BC4")]
		[Address(RVA = "0xEE7DA8", Offset = "0xEE7DA8", VA = "0xEE7DA8")]
		private bool IsPositionAboveSelfAndRoughlyCenter(float3 worldPosition, float centerThreshold = 0.25f)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BC5")]
		[Address(RVA = "0xEE7D10", Offset = "0xEE7D10", VA = "0xEE7D10")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9D3104", Offset = "0x9D3104")]
		private IEnumerator DoRaiseHandles(PlayerControllerInput input)
		{
			return null;
		}

		[Token(Token = "0x6001BC6")]
		[Address(RVA = "0xEE7E9C", Offset = "0xEE7E9C", VA = "0xEE7E9C", Slot = "11")]
		public FujiLocalInstanceRef GetOccupant(int index)
		{
			return default(FujiLocalInstanceRef);
		}

		[Token(Token = "0x6001BC7")]
		[Address(RVA = "0xEE7BFC", Offset = "0xEE7BFC", VA = "0xEE7BFC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9D3168", Offset = "0x9D3168")]
		private IEnumerator DoGrabAndHoldResizing(PlayerControllerInput input)
		{
			return null;
		}

		[Token(Token = "0x6001BC8")]
		[Address(RVA = "0xEE7F38", Offset = "0xEE7F38", VA = "0xEE7F38")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001BC9")]
		[Address(RVA = "0xEE87E8", Offset = "0xEE87E8", VA = "0xEE87E8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9D31CC", Offset = "0x9D31CC")]
		private IEnumerator DoTrackCloseness()
		{
			return null;
		}

		[Token(Token = "0x6001BCA")]
		[Address(RVA = "0xEE8334", Offset = "0xEE8334", VA = "0xEE8334")]
		private void PutActiveRodsInTheirPlace(bool raised)
		{
		}

		[Token(Token = "0x6001BCB")]
		[Address(RVA = "0xEE8888", Offset = "0xEE8888", VA = "0xEE8888")]
		private void DisableAllNodes()
		{
		}

		[Token(Token = "0x6001BCC")]
		[Address(RVA = "0xEE8A10", Offset = "0xEE8A10", VA = "0xEE8A10")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001BD0")]
		[Address(RVA = "0xEE8D84", Offset = "0xEE8D84", VA = "0xEE8D84", Slot = "6")]
		public Vector3? GetPlantingPosition(Vector3? desiredPlantingPosition)
		{
			return null;
		}

		[Token(Token = "0x6001BD1")]
		[Address(RVA = "0xEE8D90", Offset = "0xEE8D90", VA = "0xEE8D90", Slot = "7")]
		public void SetOccupancy(bool occupancy, PersistentEntity occupant)
		{
		}

		[Token(Token = "0x6001BD2")]
		[Address(RVA = "0xEE8E7C", Offset = "0xEE8E7C", VA = "0xEE8E7C", Slot = "8")]
		public bool CanBePlantedUpon()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BD3")]
		[Address(RVA = "0xEE8ECC", Offset = "0xEE8ECC", VA = "0xEE8ECC", Slot = "4")]
		public void OnPreSerialize()
		{
		}

		[Token(Token = "0x6001BD4")]
		[Address(RVA = "0xEE8ED0", Offset = "0xEE8ED0", VA = "0xEE8ED0", Slot = "5")]
		public void OnPostDeserialize()
		{
		}

		[Token(Token = "0x6001BD5")]
		[Address(RVA = "0xEE8ED4", Offset = "0xEE8ED4", VA = "0xEE8ED4")]
		public ResizeablePlanter()
		{
		}

		[SpecialName]
		[Token(Token = "0x6001BD6")]
		[Address(RVA = "0xEE8F5C", Offset = "0xEE8F5C", VA = "0xEE8F5C", Slot = "13")]
		private GameObject IGameObject.get_gameObject()
		{
			return null;
		}

		[SpecialName]
		[Token(Token = "0x6001BD7")]
		[Address(RVA = "0xEE8F64", Offset = "0xEE8F64", VA = "0xEE8F64", Slot = "14")]
		private Transform IGameObject.get_transform()
		{
			return null;
		}
	}
	[Token(Token = "0x20003C2")]
	public class SaveFruit : MonoBehaviour
	{
		[Token(Token = "0x400108A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int SaveNumber;

		[Token(Token = "0x400108B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private InteractiveCore _interactiveCore;

		[Token(Token = "0x400108C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Rigidbody Rb;

		[Token(Token = "0x400108D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RelocateOnDrop relocateOnDrop;

		[Token(Token = "0x400108E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject biome1ProgressMarker;

		[Token(Token = "0x400108F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject biome3ProgressMarker;

		[Token(Token = "0x4001090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GameObject endingBiomeProgressMarker;

		[Token(Token = "0x6001BD8")]
		[Address(RVA = "0xEEA870", Offset = "0xEEA870", VA = "0xEEA870")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001BD9")]
		[Address(RVA = "0xEEAA88", Offset = "0xEEAA88", VA = "0xEEAA88")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001BDA")]
		[Address(RVA = "0xEEAFE8", Offset = "0xEEAFE8", VA = "0xEEAFE8")]
		public void SetSaveSlot()
		{
		}

		[Token(Token = "0x6001BDB")]
		[Address(RVA = "0xEEAD54", Offset = "0xEEAD54", VA = "0xEEAD54")]
		public void ResetSocketPosition()
		{
		}

		[Token(Token = "0x6001BDC")]
		[Address(RVA = "0xEEAEA8", Offset = "0xEEAEA8", VA = "0xEEAEA8")]
		private void SetupProgressMarkers(FujiNarrativeKey checkpoint)
		{
		}

		[Token(Token = "0x6001BDD")]
		[Address(RVA = "0xEEB1C8", Offset = "0xEEB1C8", VA = "0xEEB1C8")]
		public SaveFruit()
		{
		}

		[Token(Token = "0x6001BDE")]
		[Address(RVA = "0xEEB1D0", Offset = "0xEEB1D0", VA = "0xEEB1D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D3230", Offset = "0x9D3230")]
		private void <Awake>b__7_0(PlayerControllerInput input)
		{
		}

		[Token(Token = "0x6001BDF")]
		[Address(RVA = "0xEEB328", Offset = "0xEEB328", VA = "0xEEB328")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D3240", Offset = "0x9D3240")]
		private void <Awake>b__7_1(PlayerControllerInput input)
		{
		}
	}
	[Token(Token = "0x20003C3")]
	public class SaveFruitSlot : MonoBehaviour
	{
		[Token(Token = "0x200065A")]
		public enum SaveSlotFunction
		{
			[Token(Token = "0x4001C12")]
			ActiveSaveSlot,
			[Token(Token = "0x4001C13")]
			InactiveSaveSlot,
			[Token(Token = "0x4001C14")]
			NewGameSlot
		}

		[Token(Token = "0x200065B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBC64", Offset = "0x9BBC64")]
		private sealed class <DoHandleSaveFruitHoverStart>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SaveFruitSlot <>4__this;

			[Token(Token = "0x4001C18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SaveFruit saveFruit;

			[Token(Token = "0x4001C19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private PlayerService <playerService>5__2;

			[Token(Token = "0x4001C1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private PlayerController <playerController>5__3;

			[Token(Token = "0x4001C1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private PlayerControllerInput <playerInput>5__4;

			[Token(Token = "0x170004B7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002738")]
				[Address(RVA = "0xEEC24C", Offset = "0xEEC24C", VA = "0xEEC24C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004B8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600273A")]
				[Address(RVA = "0xEEC2BC", Offset = "0xEEC2BC", VA = "0xEEC2BC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002735")]
			[Address(RVA = "0xEEB7E4", Offset = "0xEEB7E4", VA = "0xEEB7E4")]
			[DebuggerHidden]
			public <DoHandleSaveFruitHoverStart>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6002736")]
			[Address(RVA = "0xEEBDE8", Offset = "0xEEBDE8", VA = "0xEEBDE8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002737")]
			[Address(RVA = "0xEEBDEC", Offset = "0xEEBDEC", VA = "0xEEBDEC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002739")]
			[Address(RVA = "0xEEC254", Offset = "0xEEC254", VA = "0xEEC254", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200065C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBC74", Offset = "0x9BBC74")]
		private sealed class <DoChangeSaveFade>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private CameraFade <fader>5__2;

			[Token(Token = "0x170004B9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600273E")]
				[Address(RVA = "0xEEBD70", Offset = "0xEEBD70", VA = "0xEEBD70", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004BA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002740")]
				[Address(RVA = "0xEEBDE0", Offset = "0xEEBDE0", VA = "0xEEBDE0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600273B")]
			[Address(RVA = "0xEEBBF8", Offset = "0xEEBBF8", VA = "0xEEBBF8")]
			[DebuggerHidden]
			public <DoChangeSaveFade>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x600273C")]
			[Address(RVA = "0xEEBC2C", Offset = "0xEEBC2C", VA = "0xEEBC2C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600273D")]
			[Address(RVA = "0xEEBC30", Offset = "0xEEBC30", VA = "0xEEBC30", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600273F")]
			[Address(RVA = "0xEEBD78", Offset = "0xEEBD78", VA = "0xEEBD78", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SaveSlotFunction _slotFunction;

		[Token(Token = "0x4001092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool _saveSlotFilled;

		[Token(Token = "0x4001093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform TfmFruitTarget;

		[Token(Token = "0x4001094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Coroutine _threadHandleSaveFruitHover;

		[Token(Token = "0x4001095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private SaveFruit _currActiveSaveFruit;

		[Token(Token = "0x170002BA")]
		public bool SaveSlotFilled
		{
			[Token(Token = "0x6001BE0")]
			[Address(RVA = "0xEEB414", Offset = "0xEEB414", VA = "0xEEB414")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001BE1")]
		[Address(RVA = "0xEEB054", Offset = "0xEEB054", VA = "0xEEB054")]
		public static SaveFruitSlot GetFreeSlotOfType(SaveSlotFunction slotFunction)
		{
			return null;
		}

		[Token(Token = "0x6001BE2")]
		[Address(RVA = "0xEEB41C", Offset = "0xEEB41C", VA = "0xEEB41C")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001BE3")]
		[Address(RVA = "0xEEB57C", Offset = "0xEEB57C", VA = "0xEEB57C")]
		private void OnTriggerStay(Collider other)
		{
		}

		[Token(Token = "0x6001BE4")]
		[Address(RVA = "0xEEB654", Offset = "0xEEB654", VA = "0xEEB654")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001BE5")]
		[Address(RVA = "0xEEB524", Offset = "0xEEB524", VA = "0xEEB524")]
		public bool AddSaveFruit(SaveFruit saveFruit)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BE6")]
		[Address(RVA = "0xEEB74C", Offset = "0xEEB74C", VA = "0xEEB74C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9D3250", Offset = "0x9D3250")]
		private IEnumerator DoHandleSaveFruitHoverStart(SaveFruit saveFruit)
		{
			return null;
		}

		[Token(Token = "0x6001BE7")]
		[Address(RVA = "0xEEB810", Offset = "0xEEB810", VA = "0xEEB810")]
		public bool SnapSaveFruit(SaveFruit saveFruit)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BE8")]
		[Address(RVA = "0xEEBB98", Offset = "0xEEBB98", VA = "0xEEBB98")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9D32B4", Offset = "0x9D32B4")]
		private IEnumerator DoChangeSaveFade()
		{
			return null;
		}

		[Token(Token = "0x6001BE9")]
		[Address(RVA = "0xEEBC24", Offset = "0xEEBC24", VA = "0xEEBC24")]
		public SaveFruitSlot()
		{
		}
	}
	[Token(Token = "0x20003C4")]
	public class AnalyticsService : MonoBehaviour, ServiceLocator.ILocatableService
	{
		[Token(Token = "0x170002BB")]
		public bool AnalyticsEnabled
		{
			[Token(Token = "0x6001BEA")]
			[Address(RVA = "0xC6DEA4", Offset = "0xC6DEA4", VA = "0xC6DEA4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001BEB")]
			[Address(RVA = "0xC6DEAC", Offset = "0xC6DEAC", VA = "0xC6DEAC")]
			set
			{
			}
		}

		[Token(Token = "0x6001BEC")]
		[Address(RVA = "0xC6DEB0", Offset = "0xC6DEB0", VA = "0xC6DEB0")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9D3318", Offset = "0x9D3318")]
		public void CustomEventWithPlaytime(string eventName)
		{
		}

		[Token(Token = "0x6001BED")]
		[Address(RVA = "0xC6DEB4", Offset = "0xC6DEB4", VA = "0xC6DEB4")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9D3350", Offset = "0x9D3350")]
		public void CustomEvent(string eventName)
		{
		}

		[Token(Token = "0x6001BEE")]
		[Address(RVA = "0xC6DEB8", Offset = "0xC6DEB8", VA = "0xC6DEB8")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9D3388", Offset = "0x9D3388")]
		public void SetUserId(string userId)
		{
		}

		[Token(Token = "0x6001BEF")]
		[Address(RVA = "0xC6DEBC", Offset = "0xC6DEBC", VA = "0xC6DEBC")]
		public AnalyticsService()
		{
		}
	}
	[Token(Token = "0x20003C5")]
	public class AtmosphericPresetService : MonoBehaviour, ServiceLocator.ILocatableService
	{
		[NonSerialized]
		[Token(Token = "0x4001096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FujiAtmosphericPreset CurrentPreset;

		[Token(Token = "0x6001BF0")]
		[Address(RVA = "0xC6E2F0", Offset = "0xC6E2F0", VA = "0xC6E2F0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001BF1")]
		[Address(RVA = "0xC6E39C", Offset = "0xC6E39C", VA = "0xC6E39C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001BF2")]
		[Address(RVA = "0xC6E448", Offset = "0xC6E448", VA = "0xC6E448")]
		private void OnRoomChanged(FujiAreaService roomService)
		{
		}

		[Token(Token = "0x6001BF3")]
		[Address(RVA = "0xC6E7BC", Offset = "0xC6E7BC", VA = "0xC6E7BC")]
		public void ForceApplyAreaPresetImmediate(FujiAtmosphericPreset areaPreset)
		{
		}

		[Token(Token = "0x6001BF4")]
		[Address(RVA = "0xC6E998", Offset = "0xC6E998", VA = "0xC6E998")]
		public AtmosphericPresetService()
		{
		}
	}
	[Token(Token = "0x20003C6")]
	public class AudioService : ServiceLocator.ILocatableService
	{
		[Token(Token = "0x200065D")]
		public delegate void CustomizeFmodOneShot(EventInstance instance);

		[Token(Token = "0x200065E")]
		public enum AudioStopMode
		{
			[Token(Token = "0x4001C20")]
			AllowFadeout,
			[Token(Token = "0x4001C21")]
			Immediate
		}

		[Token(Token = "0x200065F")]
		public struct AudioServiceLoopHandle
		{
			[Token(Token = "0x4001C22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private EventInstance _fmodEvent;

			[Token(Token = "0x4001C23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private string _path;

			[Token(Token = "0x170004BB")]
			public bool IsValid
			{
				[Token(Token = "0x6002750")]
				[Address(RVA = "0xA821B4", Offset = "0xA821B4", VA = "0xA821B4")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6002745")]
			[Address(RVA = "0xA82114", Offset = "0xA82114", VA = "0xA82114")]
			public AudioServiceLoopHandle(EventInstance fmodEvent)
			{
			}

			[Token(Token = "0x6002746")]
			[Address(RVA = "0xA82158", Offset = "0xA82158", VA = "0xA82158")]
			public void Restart()
			{
			}

			[Token(Token = "0x6002747")]
			[Address(RVA = "0xA82160", Offset = "0xA82160", VA = "0xA82160")]
			private void StopAndKeep()
			{
			}

			[Token(Token = "0x6002748")]
			[Address(RVA = "0xA8216C", Offset = "0xA8216C", VA = "0xA8216C")]
			private void StopAndKeep(AudioStopMode stopMode)
			{
			}

			[Token(Token = "0x6002749")]
			[Address(RVA = "0xA82174", Offset = "0xA82174", VA = "0xA82174")]
			public void StopAndRelease()
			{
			}

			[Token(Token = "0x600274A")]
			[Address(RVA = "0xA82180", Offset = "0xA82180", VA = "0xA82180")]
			public void StopAndRelease(AudioStopMode stopMode)
			{
			}

			[Token(Token = "0x600274B")]
			[Address(RVA = "0xA82188", Offset = "0xA82188", VA = "0xA82188")]
			public void SetParameter(string key, float value)
			{
			}

			[Token(Token = "0x600274C")]
			[Address(RVA = "0xA82190", Offset = "0xA82190", VA = "0xA82190")]
			public void SetParameterFast(float value)
			{
			}

			[Token(Token = "0x600274D")]
			[Address(RVA = "0xA8219C", Offset = "0xA8219C", VA = "0xA8219C")]
			public void SetParameter(int index, float value)
			{
			}

			[Token(Token = "0x600274E")]
			[Address(RVA = "0xA821A4", Offset = "0xA821A4", VA = "0xA821A4")]
			public float GetParameter(int index)
			{
				return default(float);
			}

			[Token(Token = "0x600274F")]
			[Address(RVA = "0xA821AC", Offset = "0xA821AC", VA = "0xA821AC")]
			public float GetParameter(string key)
			{
				return default(float);
			}

			[Token(Token = "0x6002751")]
			[Address(RVA = "0xC70AD8", Offset = "0xC70AD8", VA = "0xC70AD8")]
			private static FMOD.Studio.STOP_MODE ConvertToNativeStopMode(AudioStopMode mode)
			{
				return default(FMOD.Studio.STOP_MODE);
			}
		}

		[Token(Token = "0x4001097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string[] FmodBanksToLoad;

		[Token(Token = "0x4001098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static bool LoadSampleData;

		[Token(Token = "0x170002BC")]
		public bool HasBanksLoaded
		{
			[Token(Token = "0x6001BF5")]
			[Address(RVA = "0xC6E9A0", Offset = "0xC6E9A0", VA = "0xC6E9A0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001BF6")]
		[Address(RVA = "0xC6EA00", Offset = "0xC6EA00", VA = "0xC6EA00")]
		public AudioService()
		{
		}

		[Token(Token = "0x6001BF7")]
		[Address(RVA = "0xC6ECEC", Offset = "0xC6ECEC", VA = "0xC6ECEC")]
		public void PlayOneShot(string fmodEventId)
		{
		}

		[Token(Token = "0x6001BF8")]
		[Address(RVA = "0xC6C24C", Offset = "0xC6C24C", VA = "0xC6C24C")]
		public void PlayOneShot(string fmodEventId, Vector3 pos)
		{
		}

		[Token(Token = "0x6001BF9")]
		[Address(RVA = "0xC6EE24", Offset = "0xC6EE24", VA = "0xC6EE24")]
		public void PlayOneShotAttached(string fmodEventId, GameObject track)
		{
		}

		[Token(Token = "0x6001BFA")]
		[Address(RVA = "0xC6EF64", Offset = "0xC6EF64", VA = "0xC6EF64")]
		public void PlayOneShot(string fmodEventId, Vector3 pos, CustomizeFmodOneShot preStartCustomize)
		{
		}

		[Token(Token = "0x6001BFB")]
		[Address(RVA = "0xC6F578", Offset = "0xC6F578", VA = "0xC6F578")]
		public void PlayOneShotAttached(string fmodEventId, GameObject track, CustomizeFmodOneShot preStartCustomize)
		{
		}

		[Token(Token = "0x6001BFC")]
		[Address(RVA = "0xC6F770", Offset = "0xC6F770", VA = "0xC6F770")]
		public void PlayOneShot(string fmodEventId, Vector3 pos, string parameterKey, float parameterValue)
		{
		}

		[Token(Token = "0x6001BFD")]
		[Address(RVA = "0xC6F944", Offset = "0xC6F944", VA = "0xC6F944")]
		public void PlayOneShot(string fmodEventId, Vector3 pos, int parameterKey, float parameterValue)
		{
		}

		[Token(Token = "0x6001BFE")]
		[Address(RVA = "0xC6FB18", Offset = "0xC6FB18", VA = "0xC6FB18")]
		public void PlayOneShotAttached(string fmodEventId, GameObject track, string parameterKey, float parameterValue)
		{
		}

		[Token(Token = "0x6001BFF")]
		[Address(RVA = "0xC6FCF4", Offset = "0xC6FCF4", VA = "0xC6FCF4")]
		public void PlayOneShotAttached(string fmodEventId, GameObject track, int parameterKey, float parameterValue)
		{
		}

		[Token(Token = "0x6001C00")]
		[Address(RVA = "0xC6FED0", Offset = "0xC6FED0", VA = "0xC6FED0")]
		public AudioServiceLoopHandle PlayLoop(string fmodEventId, Vector3 position)
		{
			return default(AudioServiceLoopHandle);
		}

		[Token(Token = "0x6001C01")]
		[Address(RVA = "0xC700F4", Offset = "0xC700F4", VA = "0xC700F4")]
		public AudioServiceLoopHandle PlayLoop(string fmodEventId)
		{
			return default(AudioServiceLoopHandle);
		}

		[Token(Token = "0x6001C02")]
		[Address(RVA = "0xC7027C", Offset = "0xC7027C", VA = "0xC7027C")]
		public AudioServiceLoopHandle PlayLoopAttached(string fmodEventId, GameObject toTrack)
		{
			return default(AudioServiceLoopHandle);
		}

		[Token(Token = "0x6001C03")]
		[Address(RVA = "0xC70470", Offset = "0xC70470", VA = "0xC70470")]
		public AudioServiceLoopHandle PlayLoopAttached(string fmodEventId, GameObject toTrack, string paramKey, float paramValue)
		{
			return default(AudioServiceLoopHandle);
		}

		[Token(Token = "0x6001C04")]
		[Address(RVA = "0xC70688", Offset = "0xC70688", VA = "0xC70688")]
		public AudioServiceLoopHandle PlayLoopAttached(string fmodEventId, GameObject toTrack, int paramKey, float paramValue)
		{
			return default(AudioServiceLoopHandle);
		}
	}
	[Token(Token = "0x20003C7")]
	[ExecuteInEditMode]
	public class Bootstrap : MonoBehaviour, ServiceLocator.ILocatableService
	{
		[Token(Token = "0x2000660")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBC84", Offset = "0x9BBC84")]
		private sealed class <DoConfigurePlayerDynamics>d__59 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x170004BC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002755")]
				[Address(RVA = "0xC75268", Offset = "0xC75268", VA = "0xC75268", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004BD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002757")]
				[Address(RVA = "0xC752D8", Offset = "0xC752D8", VA = "0xC752D8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002752")]
			[Address(RVA = "0xC74B98", Offset = "0xC74B98", VA = "0xC74B98")]
			[DebuggerHidden]
			public <DoConfigurePlayerDynamics>d__59(int <>1__state)
			{
			}

			[Token(Token = "0x6002753")]
			[Address(RVA = "0xC74FD8", Offset = "0xC74FD8", VA = "0xC74FD8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002754")]
			[Address(RVA = "0xC74FDC", Offset = "0xC74FDC", VA = "0xC74FDC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002756")]
			[Address(RVA = "0xC75270", Offset = "0xC75270", VA = "0xC75270", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000661")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBC94", Offset = "0x9BBC94")]
		private sealed class <>c__DisplayClass60_0
		{
			[Token(Token = "0x4001C26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OVRManager.TiledMultiResLevel defaultMultiresLevel;

			[Token(Token = "0x6002758")]
			[Address(RVA = "0xC74E0C", Offset = "0xC74E0C", VA = "0xC74E0C")]
			public <>c__DisplayClass60_0()
			{
			}

			[Token(Token = "0x6002759")]
			[Address(RVA = "0xC74E14", Offset = "0xC74E14", VA = "0xC74E14")]
			internal void <DoQualitySettings>b__2(BoatEvent boatEvent)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000662")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBCA4", Offset = "0x9BBCA4")]
		private sealed class <>c
		{
			[Token(Token = "0x4001C27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001C28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<bool> <>9__60_0;

			[Token(Token = "0x4001C29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<bool> <>9__60_1;

			[Token(Token = "0x600275B")]
			[Address(RVA = "0xC74CDC", Offset = "0xC74CDC", VA = "0xC74CDC")]
			public <>c()
			{
			}

			[Token(Token = "0x600275C")]
			[Address(RVA = "0xC74CE4", Offset = "0xC74CE4", VA = "0xC74CE4")]
			internal bool <DoQualitySettings>b__60_0()
			{
				return default(bool);
			}

			[Token(Token = "0x600275D")]
			[Address(RVA = "0xC74D78", Offset = "0xC74D78", VA = "0xC74D78")]
			internal bool <DoQualitySettings>b__60_1()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000663")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBCB4", Offset = "0x9BBCB4")]
		private sealed class <DoQualitySettings>d__60 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private <>c__DisplayClass60_0 <>8__1;

			[Token(Token = "0x4001C2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Bootstrap <>4__this;

			[Token(Token = "0x170004BE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002761")]
				[Address(RVA = "0xC75C2C", Offset = "0xC75C2C", VA = "0xC75C2C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004BF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002763")]
				[Address(RVA = "0xC75C9C", Offset = "0xC75C9C", VA = "0xC75C9C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600275E")]
			[Address(RVA = "0xC74BC4", Offset = "0xC74BC4", VA = "0xC74BC4")]
			[DebuggerHidden]
			public <DoQualitySettings>d__60(int <>1__state)
			{
			}

			[Token(Token = "0x600275F")]
			[Address(RVA = "0xC752E0", Offset = "0xC752E0", VA = "0xC752E0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002760")]
			[Address(RVA = "0xC752E4", Offset = "0xC752E4", VA = "0xC752E4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002762")]
			[Address(RVA = "0xC75C34", Offset = "0xC75C34", VA = "0xC75C34", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001099")]
		public const int MobileFrameRate = 72;

		[Token(Token = "0x400109A")]
		public const int DesktopFrameRate = 60;

		[Token(Token = "0x400109B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9C82B4", Offset = "0x9C82B4")]
		public FujiDebug.DebugFlags DebugLevel;

		[Token(Token = "0x400109C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9C82EC", Offset = "0x9C82EC")]
		public PrefabLookupTable PrefabLookup;

		[Token(Token = "0x400109D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PlayerService PlayerPrefab;

		[Token(Token = "0x400109E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public VisualEffectsService VisualEffectServicePrefab;

		[Token(Token = "0x400109F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public RecordingPlaybackDummy PlaybackDummyPrefab;

		[Token(Token = "0x40010A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public LightGemService LightGemServicePrefab;

		[Token(Token = "0x40010A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public LocomotionService LocomotionServicePrefab;

		[Token(Token = "0x40010A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public LightingService LightingServicePrefab;

		[Token(Token = "0x40010A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject DeveloperConsolePrefab;

		[Token(Token = "0x40010A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public WindService WindServicePrefab;

		[Token(Token = "0x40010A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public ContentLoadingService ContentLoadingServicePrefab;

		[Token(Token = "0x40010A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public FujiVrik FujiVrikPrefab;

		[Token(Token = "0x40010A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public GlobalValuesService GlobalValuesServicePrefab;

		[Token(Token = "0x40010A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public PlayerToolService PlayerToolServicePrefab;

		[Token(Token = "0x40010A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public BPMService BPMServicePrefab;

		[Token(Token = "0x40010AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public PlantSprayService PlantSprayServicePrefab;

		[Token(Token = "0x40010AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public BGMService BGMServicePrefab;

		[Token(Token = "0x40010AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public DefaultsService DefaultServiceInstance;

		[Token(Token = "0x40010AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public PortableInventory PortableInventory;

		[Token(Token = "0x40010AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public GameObject BuildInfoPrefab;

		[Token(Token = "0x40010AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public PlantIndicatorService PlantIndicatorServicePrefab;

		[Token(Token = "0x40010B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public SerpentService PfbSerpentService;

		[Token(Token = "0x40010B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9C8324", Offset = "0x9C8324")]
		public bool EnableAnalytics;

		[Token(Token = "0x40010B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
		public bool EnableLodCompensationForVr;

		[Token(Token = "0x40010B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCA")]
		public bool EnableGuardianPreViz;

		[Token(Token = "0x40010B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCB")]
		public bool FadeWhenActivatingZones;

		[Token(Token = "0x40010B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public bool LanguagePickerInMenu;

		[Token(Token = "0x40010B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public float HighQualityPhysicsTimestep;

		[Token(Token = "0x40010B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public FujiAtmosphericPreset DefaultAtmosphericPreset;

		[Token(Token = "0x40010B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public FujiConfig userConfig;

		[Token(Token = "0x40010B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool _installed;

		[Token(Token = "0x40010BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C835C", Offset = "0x9C835C")]
		private static bool <Quitting>k__BackingField;

		[Token(Token = "0x40010BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C836C", Offset = "0x9C836C")]
		private static float <TimeSinceGameStart>k__BackingField;

		[Token(Token = "0x40010BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C837C", Offset = "0x9C837C")]
		private bool <GameModeSet>k__BackingField;

		[Token(Token = "0x40010BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static bool? paused;

		[Token(Token = "0x40010BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE9")]
		private bool? _hasFocus;

		[Token(Token = "0x170002BD")]
		public static bool Quitting
		{
			[Token(Token = "0x6001C06")]
			[Address(RVA = "0xC6038C", Offset = "0xC6038C", VA = "0xC6038C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D33C0", Offset = "0x9D33C0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C07")]
			[Address(RVA = "0xC731BC", Offset = "0xC731BC", VA = "0xC731BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D33D0", Offset = "0x9D33D0")]
			private set
			{
			}
		}

		[Token(Token = "0x170002BE")]
		public static float TimeSinceGameStart
		{
			[Token(Token = "0x6001C08")]
			[Address(RVA = "0xC7322C", Offset = "0xC7322C", VA = "0xC7322C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D33E0", Offset = "0x9D33E0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C09")]
			[Address(RVA = "0xC73294", Offset = "0xC73294", VA = "0xC73294")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D33F0", Offset = "0x9D33F0")]
			private set
			{
			}
		}

		[Token(Token = "0x170002BF")]
		public bool GameModeSet
		{
			[Token(Token = "0x6001C0A")]
			[Address(RVA = "0xC73308", Offset = "0xC73308", VA = "0xC73308")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D3400", Offset = "0x9D3400")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C0B")]
			[Address(RVA = "0xC73310", Offset = "0xC73310", VA = "0xC73310")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D3410", Offset = "0x9D3410")]
			set
			{
			}
		}

		[Token(Token = "0x170002C0")]
		public static bool Paused
		{
			[Token(Token = "0x6001C12")]
			[Address(RVA = "0xC74628", Offset = "0xC74628", VA = "0xC74628")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001C0C")]
		[Address(RVA = "0xC7331C", Offset = "0xC7331C", VA = "0xC7331C")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6001C0D")]
		[Address(RVA = "0xC734AC", Offset = "0xC734AC", VA = "0xC734AC")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001C0E")]
		[Address(RVA = "0xC73654", Offset = "0xC73654", VA = "0xC73654")]
		private void SetupBindings()
		{
		}

		[Token(Token = "0x6001C0F")]
		[Address(RVA = "0xC73354", Offset = "0xC73354", VA = "0xC73354")]
		private void SetupEditorBindings()
		{
		}

		[Token(Token = "0x6001C10")]
		[Address(RVA = "0xC743E8", Offset = "0xC743E8", VA = "0xC743E8")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001C11")]
		[Address(RVA = "0xC74468", Offset = "0xC74468", VA = "0xC74468")]
		private void OnApplicationFocus(bool hasFocus)
		{
		}

		[Token(Token = "0x6001C13")]
		[Address(RVA = "0xC744B4", Offset = "0xC744B4", VA = "0xC744B4")]
		private void OnApplicationPause(bool pauseStatus)
		{
		}

		[Token(Token = "0x6001C14")]
		[Address(RVA = "0xC746D0", Offset = "0xC746D0", VA = "0xC746D0")]
		private void EnterFullScreen()
		{
		}

		[Token(Token = "0x6001C15")]
		[Address(RVA = "0xC7477C", Offset = "0xC7477C", VA = "0xC7477C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C16")]
		[Address(RVA = "0xC74B08", Offset = "0xC74B08", VA = "0xC74B08")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001C17")]
		[Address(RVA = "0xC74388", Offset = "0xC74388", VA = "0xC74388")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9D3420", Offset = "0x9D3420")]
		private static IEnumerator DoConfigurePlayerDynamics()
		{
			return null;
		}

		[Token(Token = "0x6001C18")]
		[Address(RVA = "0xC74314", Offset = "0xC74314", VA = "0xC74314")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9D3484", Offset = "0x9D3484")]
		private IEnumerator DoQualitySettings()
		{
			return null;
		}

		[Token(Token = "0x6001C19")]
		[Address(RVA = "0xC74BF0", Offset = "0xC74BF0", VA = "0xC74BF0")]
		public Bootstrap()
		{
		}
	}
	[Token(Token = "0x20003C8")]
	[Flags]
	public enum SequencerNoteType
	{
		[Token(Token = "0x40010C0")]
		None = 0,
		[Token(Token = "0x40010C1")]
		Whole = 1,
		[Token(Token = "0x40010C2")]
		Half = 2,
		[Token(Token = "0x40010C3")]
		Quarter = 4,
		[Token(Token = "0x40010C4")]
		Eighth = 8,
		[Token(Token = "0x40010C5")]
		Sixteenth = 0x10,
		[Token(Token = "0x40010C6")]
		ThirtySecond = 0x20
	}
	[Token(Token = "0x20003C9")]
	public enum BPMSource
	{
		[Token(Token = "0x40010C8")]
		DeltaTime,
		[Token(Token = "0x40010C9")]
		FMODTimelineCallback
	}
	[StructLayout(0)]
	[Token(Token = "0x20003CA")]
	internal class TimelineInfo
	{
		[Token(Token = "0x40010CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int currentMusicBar;

		[Token(Token = "0x40010CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StringWrapper lastMarker;

		[Token(Token = "0x6001C1B")]
		[Address(RVA = "0xBDB570", Offset = "0xBDB570", VA = "0xBDB570")]
		public TimelineInfo()
		{
		}
	}
	[Token(Token = "0x20003CB")]
	public class BPMService : MonoBehaviour, ServiceLocator.ILocatableService
	{
		[Serializable]
		[Token(Token = "0x2000664")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBCC4", Offset = "0x9BBCC4")]
		private sealed class <>c
		{
			[Token(Token = "0x4001C2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001C2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<bool> <>9__43_0;

			[Token(Token = "0x6002765")]
			[Address(RVA = "0xC726E4", Offset = "0xC726E4", VA = "0xC726E4")]
			public <>c()
			{
			}

			[Token(Token = "0x6002766")]
			[Address(RVA = "0xC726EC", Offset = "0xC726EC", VA = "0xC726EC")]
			internal bool <SetTimeSignatureCoroutine>b__43_0()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000665")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBCD4", Offset = "0x9BBCD4")]
		private sealed class <SetTimeSignatureCoroutine>d__43 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int beatsPerMeasure;

			[Token(Token = "0x4001C33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public SequencerNoteType beatNote;

			[Token(Token = "0x4001C34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public BPMService <>4__this;

			[Token(Token = "0x170004C0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600276A")]
				[Address(RVA = "0xC72C78", Offset = "0xC72C78", VA = "0xC72C78", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004C1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600276C")]
				[Address(RVA = "0xC72CE8", Offset = "0xC72CE8", VA = "0xC72CE8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002767")]
			[Address(RVA = "0xC720A0", Offset = "0xC720A0", VA = "0xC720A0")]
			[DebuggerHidden]
			public <SetTimeSignatureCoroutine>d__43(int <>1__state)
			{
			}

			[Token(Token = "0x6002768")]
			[Address(RVA = "0xC72754", Offset = "0xC72754", VA = "0xC72754", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002769")]
			[Address(RVA = "0xC72758", Offset = "0xC72758", VA = "0xC72758", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600276B")]
			[Address(RVA = "0xC72C80", Offset = "0xC72C80", VA = "0xC72C80", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000666")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBCE4", Offset = "0x9BBCE4")]
		private sealed class <StepCoroutine>d__45 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public BPMService <>4__this;

			[Token(Token = "0x4001C38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private ulong <measureNum>5__2;

			[Token(Token = "0x4001C39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <currentStep>5__3;

			[Token(Token = "0x170004C2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002770")]
				[Address(RVA = "0xC72FD4", Offset = "0xC72FD4", VA = "0xC72FD4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004C3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002772")]
				[Address(RVA = "0xC73044", Offset = "0xC73044", VA = "0xC73044", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600276D")]
			[Address(RVA = "0xC72200", Offset = "0xC72200", VA = "0xC72200")]
			[DebuggerHidden]
			public <StepCoroutine>d__45(int <>1__state)
			{
			}

			[Token(Token = "0x600276E")]
			[Address(RVA = "0xC72CF0", Offset = "0xC72CF0", VA = "0xC72CF0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600276F")]
			[Address(RVA = "0xC72CF4", Offset = "0xC72CF4", VA = "0xC72CF4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002771")]
			[Address(RVA = "0xC72FDC", Offset = "0xC72FDC", VA = "0xC72FDC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40010CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[EventRef]
		private string _bpmTrackEvent;

		[Token(Token = "0x40010CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool UseFMODCallback;

		[Token(Token = "0x40010CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TimelineInfo _timelineInfo;

		[Token(Token = "0x40010CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GCHandle _timelineHandle;

		[Token(Token = "0x40010D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private EventInstance _bgmInstance;

		[Token(Token = "0x40010D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C83C4", Offset = "0x9C83C4")]
		private static int <BeatsPerMeasure>k__BackingField;

		[Token(Token = "0x40010D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C83D4", Offset = "0x9C83D4")]
		private static SequencerNoteType <BeatNote>k__BackingField;

		[Token(Token = "0x40010D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C83E4", Offset = "0x9C83E4")]
		private static int <StepNum>k__BackingField;

		[Token(Token = "0x40010D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C83F4", Offset = "0x9C83F4")]
		private static int <BPM>k__BackingField;

		[Token(Token = "0x40010D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static SequencerNoteType[] AllNoteTypes;

		[Token(Token = "0x40010D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static EVENT_CALLBACK _fmodCallback;

		[Token(Token = "0x40010D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static BPMSource _bpmSource;

		[Token(Token = "0x40010D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private double _timeSinceLastStep;

		[Token(Token = "0x40010D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private BitArray _beatMask;

		[Token(Token = "0x40010DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Dictionary<SequencerNoteType, BitArray> _noteMasks;

		[Token(Token = "0x40010DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int _beatOccuredLastFrame;

		[Token(Token = "0x40010DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int _beatsThisFrameBuffer;

		[Token(Token = "0x40010DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool _measureOccuredLastFrame;

		[Token(Token = "0x40010DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool _measureOccuredThisFrame;

		[Token(Token = "0x170002C1")]
		public static int BeatsPerMeasure
		{
			[Token(Token = "0x6001C1C")]
			[Address(RVA = "0xC716DC", Offset = "0xC716DC", VA = "0xC716DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D34E8", Offset = "0x9D34E8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001C1D")]
			[Address(RVA = "0xC71744", Offset = "0xC71744", VA = "0xC71744")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D34F8", Offset = "0x9D34F8")]
			private set
			{
			}
		}

		[Token(Token = "0x170002C2")]
		public static SequencerNoteType BeatNote
		{
			[Token(Token = "0x6001C1E")]
			[Address(RVA = "0xC717B0", Offset = "0xC717B0", VA = "0xC717B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D3508", Offset = "0x9D3508")]
			get
			{
				return default(SequencerNoteType);
			}
			[Token(Token = "0x6001C1F")]
			[Address(RVA = "0xC71818", Offset = "0xC71818", VA = "0xC71818")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D3518", Offset = "0x9D3518")]
			private set
			{
			}
		}

		[Token(Token = "0x170002C3")]
		public static int StepNum
		{
			[Token(Token = "0x6001C20")]
			[Address(RVA = "0xC71884", Offset = "0xC71884", VA = "0xC71884")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D3528", Offset = "0x9D3528")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001C21")]
			[Address(RVA = "0xC718EC", Offset = "0xC718EC", VA = "0xC718EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D3538", Offset = "0x9D3538")]
			private set
			{
			}
		}

		[Token(Token = "0x170002C4")]
		public static int BPM
		{
			[Token(Token = "0x6001C22")]
			[Address(RVA = "0xC71958", Offset = "0xC71958", VA = "0xC71958")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D3548", Offset = "0x9D3548")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001C23")]
			[Address(RVA = "0xC719C0", Offset = "0xC719C0", VA = "0xC719C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D3558", Offset = "0x9D3558")]
			private set
			{
			}
		}

		[Token(Token = "0x6001C24")]
		[Address(RVA = "0xC71A2C", Offset = "0xC71A2C", VA = "0xC71A2C")]
		public float GetSecsPerBeat()
		{
			return default(float);
		}

		[Token(Token = "0x6001C25")]
		[Address(RVA = "0xC71AA4", Offset = "0xC71AA4", VA = "0xC71AA4")]
		public float GetSecsPerNoteType(SequencerNoteType noteType)
		{
			return default(float);
		}

		[Token(Token = "0x6001C26")]
		[Address(RVA = "0xC71AD4", Offset = "0xC71AD4", VA = "0xC71AD4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C27")]
		[Address(RVA = "0xC71BE8", Offset = "0xC71BE8", VA = "0xC71BE8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C28")]
		[Address(RVA = "0xC71F48", Offset = "0xC71F48", VA = "0xC71F48")]
		public bool PollBeat(SequencerNoteType noteType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C29")]
		[Address(RVA = "0xC71F58", Offset = "0xC71F58", VA = "0xC71F58")]
		public bool PollBeat(int noteType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C2A")]
		[Address(RVA = "0xC6CC8C", Offset = "0xC6CC8C", VA = "0xC6CC8C")]
		public bool PollBeat()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C2B")]
		[Address(RVA = "0xC71F74", Offset = "0xC71F74", VA = "0xC71F74")]
		public bool PollMeasure()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C2C")]
		[Address(RVA = "0xC71D50", Offset = "0xC71D50", VA = "0xC71D50")]
		public void SetBPMTrack(string FMODEventID)
		{
		}

		[Token(Token = "0x6001C2D")]
		[Address(RVA = "0xC713CC", Offset = "0xC713CC", VA = "0xC713CC")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9D3568", Offset = "0x9D3568")]
		private static RESULT FMODEventCallback(EVENT_CALLBACK_TYPE type, EventInstance instance, IntPtr parameterPtr)
		{
			return default(RESULT);
		}

		[Token(Token = "0x6001C2E")]
		[Address(RVA = "0xC71F7C", Offset = "0xC71F7C", VA = "0xC71F7C")]
		public void SetBPM(int bpm)
		{
		}

		[Token(Token = "0x6001C2F")]
		[Address(RVA = "0xC71CB0", Offset = "0xC71CB0", VA = "0xC71CB0")]
		public void SetTimeSignature(int beatsPerMeasure, SequencerNoteType beatNote)
		{
		}

		[Token(Token = "0x6001C30")]
		[Address(RVA = "0xC71FF0", Offset = "0xC71FF0", VA = "0xC71FF0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9D35CC", Offset = "0x9D35CC")]
		private IEnumerator SetTimeSignatureCoroutine(int beatsPerMeasure, SequencerNoteType beatNote)
		{
			return null;
		}

		[Token(Token = "0x6001C31")]
		[Address(RVA = "0xC720CC", Offset = "0xC720CC", VA = "0xC720CC")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001C32")]
		[Address(RVA = "0xC71CDC", Offset = "0xC71CDC", VA = "0xC71CDC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9D3630", Offset = "0x9D3630")]
		private IEnumerator StepCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6001C33")]
		[Address(RVA = "0xC7222C", Offset = "0xC7222C", VA = "0xC7222C")]
		private void NotifySequencers()
		{
		}

		[Token(Token = "0x6001C34")]
		[Address(RVA = "0xC72434", Offset = "0xC72434", VA = "0xC72434")]
		public void GetTimeSignature(out int beatsPerMeasure, out SequencerNoteType beatNote)
		{
		}

		[Token(Token = "0x6001C35")]
		[Address(RVA = "0xC724B0", Offset = "0xC724B0", VA = "0xC724B0")]
		public BPMService()
		{
		}

		[Token(Token = "0x6001C37")]
		[Address(RVA = "0xC72640", Offset = "0xC72640", VA = "0xC72640")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D3694", Offset = "0x9D3694")]
		private void <Awake>b__33_0(SequencerBeatEvent beatMesage)
		{
		}

		[Token(Token = "0x6001C38")]
		[Address(RVA = "0xC7265C", Offset = "0xC7265C", VA = "0xC7265C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D36A4", Offset = "0x9D36A4")]
		private void <Awake>b__33_1(SequencerMeasureEvent measureEvent)
		{
		}

		[Token(Token = "0x6001C39")]
		[Address(RVA = "0xC72668", Offset = "0xC72668", VA = "0xC72668")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D36B4", Offset = "0x9D36B4")]
		private void <Awake>b__33_2(PreUpdateMessage _)
		{
		}
	}
	[Token(Token = "0x20003CC")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9BA3F8", Offset = "0x9BA3F8")]
	public class WaitForSequencerEvent<T> : CustomYieldInstruction where T : struct
	{
		[Token(Token = "0x40010DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool _waiting;

		[Token(Token = "0x40010E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int _numEvents;

		[Token(Token = "0x40010E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int _numElapsedEvents;

		[Token(Token = "0x170002C5")]
		public override bool keepWaiting
		{
			[Token(Token = "0x6001C3A")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001C3B")]
		public WaitForSequencerEvent()
		{
		}

		[Token(Token = "0x6001C3C")]
		public WaitForSequencerEvent(int numEvents)
		{
		}

		[Token(Token = "0x6001C3D")]
		private void EventCounter(T ev)
		{
		}

		[Token(Token = "0x6001C3E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D36C4", Offset = "0x9D36C4")]
		private void <.ctor>b__5_0(T ev)
		{
		}
	}
	[Token(Token = "0x20003CD")]
	public class WaitForNoteEvent : CustomYieldInstruction
	{
		[Token(Token = "0x40010E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private SequencerNoteType _noteType;

		[Token(Token = "0x40010E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private bool _waiting;

		[Token(Token = "0x170002C6")]
		public override bool keepWaiting
		{
			[Token(Token = "0x6001C3F")]
			[Address(RVA = "0xBDFB54", Offset = "0xBDFB54", VA = "0xBDFB54", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001C40")]
		[Address(RVA = "0xBDFB5C", Offset = "0xBDFB5C", VA = "0xBDFB5C")]
		public WaitForNoteEvent(SequencerNoteType noteType)
		{
		}

		[Token(Token = "0x6001C41")]
		[Address(RVA = "0xBDFC80", Offset = "0xBDFC80", VA = "0xBDFC80")]
		private void OnStepEvent(SequencerStepEvent ev)
		{
		}
	}
	[Token(Token = "0x20003CE")]
	public class ContentLoadingService : MonoBehaviour, ServiceLocator.ILocatableService
	{
		[Serializable]
		[Token(Token = "0x2000667")]
		public struct SceneConfig
		{
			[Token(Token = "0x20006E6")]
			public enum SceneLoadPolicy
			{
				[Token(Token = "0x4001E2C")]
				Always,
				[Token(Token = "0x4001E2D")]
				EditorOnly,
				[Token(Token = "0x4001E2E")]
				BuildOnly,
				[Token(Token = "0x4001E2F")]
				Never
			}

			[Token(Token = "0x4001C3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string SceneName;

			[Token(Token = "0x4001C3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public SceneLoadPolicy Policy;

			[Token(Token = "0x4001C3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ShaderVariantCollection ShaderVariantCollectionToLoad;
		}

		[Token(Token = "0x2000668")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBCF4", Offset = "0x9BBCF4")]
		private sealed class <LoadBirthingScene>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ContentLoadingService <>4__this;

			[Token(Token = "0x170004C4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002776")]
				[Address(RVA = "0xC79028", Offset = "0xC79028", VA = "0xC79028", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004C5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002778")]
				[Address(RVA = "0xC79098", Offset = "0xC79098", VA = "0xC79098", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002773")]
			[Address(RVA = "0xC787C8", Offset = "0xC787C8", VA = "0xC787C8")]
			[DebuggerHidden]
			public <LoadBirthingScene>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6002774")]
			[Address(RVA = "0xC78ED0", Offset = "0xC78ED0", VA = "0xC78ED0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002775")]
			[Address(RVA = "0xC78ED4", Offset = "0xC78ED4", VA = "0xC78ED4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002777")]
			[Address(RVA = "0xC79030", Offset = "0xC79030", VA = "0xC79030", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000669")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBD04", Offset = "0x9BBD04")]
		private sealed class <UnloadBirthingScene>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ContentLoadingService <>4__this;

			[Token(Token = "0x170004C6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600277C")]
				[Address(RVA = "0xC79228", Offset = "0xC79228", VA = "0xC79228", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004C7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600277E")]
				[Address(RVA = "0xC79298", Offset = "0xC79298", VA = "0xC79298", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002779")]
			[Address(RVA = "0xC78868", Offset = "0xC78868", VA = "0xC78868")]
			[DebuggerHidden]
			public <UnloadBirthingScene>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x600277A")]
			[Address(RVA = "0xC791AC", Offset = "0xC791AC", VA = "0xC791AC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600277B")]
			[Address(RVA = "0xC791B0", Offset = "0xC791B0", VA = "0xC791B0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600277D")]
			[Address(RVA = "0xC79230", Offset = "0xC79230", VA = "0xC79230", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200066A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBD14", Offset = "0x9BBD14")]
		private sealed class <UnloadMainMenuScene>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ContentLoadingService <>4__this;

			[Token(Token = "0x170004C8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002782")]
				[Address(RVA = "0xC7931C", Offset = "0xC7931C", VA = "0xC7931C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004C9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002784")]
				[Address(RVA = "0xC7938C", Offset = "0xC7938C", VA = "0xC7938C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600277F")]
			[Address(RVA = "0xC78918", Offset = "0xC78918", VA = "0xC78918")]
			[DebuggerHidden]
			public <UnloadMainMenuScene>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6002780")]
			[Address(RVA = "0xC792A0", Offset = "0xC792A0", VA = "0xC792A0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002781")]
			[Address(RVA = "0xC792A4", Offset = "0xC792A4", VA = "0xC792A4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002783")]
			[Address(RVA = "0xC79324", Offset = "0xC79324", VA = "0xC79324", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200066B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBD24", Offset = "0x9BBD24")]
		private sealed class <LoadScenesAsync>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ContentLoadingService <>4__this;

			[Token(Token = "0x170004CA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002788")]
				[Address(RVA = "0xC79134", Offset = "0xC79134", VA = "0xC79134", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004CB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600278A")]
				[Address(RVA = "0xC791A4", Offset = "0xC791A4", VA = "0xC791A4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002785")]
			[Address(RVA = "0xC789B8", Offset = "0xC789B8", VA = "0xC789B8")]
			[DebuggerHidden]
			public <LoadScenesAsync>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6002786")]
			[Address(RVA = "0xC790A0", Offset = "0xC790A0", VA = "0xC790A0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002787")]
			[Address(RVA = "0xC790A4", Offset = "0xC790A4", VA = "0xC790A4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002789")]
			[Address(RVA = "0xC7913C", Offset = "0xC7913C", VA = "0xC7913C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200066C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBD34", Offset = "0x9BBD34")]
		private sealed class <DoLoadContentScenes>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ContentLoadingService <>4__this;

			[Token(Token = "0x4001C4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private SceneConfig[] <>7__wrap1;

			[Token(Token = "0x4001C4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <>7__wrap2;

			[Token(Token = "0x170004CC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600278E")]
				[Address(RVA = "0xC78E58", Offset = "0xC78E58", VA = "0xC78E58", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004CD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002790")]
				[Address(RVA = "0xC78EC8", Offset = "0xC78EC8", VA = "0xC78EC8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600278B")]
			[Address(RVA = "0xC78A58", Offset = "0xC78A58", VA = "0xC78A58")]
			[DebuggerHidden]
			public <DoLoadContentScenes>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x600278C")]
			[Address(RVA = "0xC78AEC", Offset = "0xC78AEC", VA = "0xC78AEC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600278D")]
			[Address(RVA = "0xC78AF0", Offset = "0xC78AF0", VA = "0xC78AF0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600278F")]
			[Address(RVA = "0xC78E60", Offset = "0xC78E60", VA = "0xC78E60", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40010E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string BirthingSceneName;

		[Token(Token = "0x40010E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ShaderVariantCollection BirthingShaderVariantCollection;

		[Token(Token = "0x40010E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string MainMenuSceneName;

		[Token(Token = "0x40010E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SceneConfig[] ScenesToLoad;

		[Token(Token = "0x40010E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool loading;

		[Token(Token = "0x40010E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C8404", Offset = "0x9C8404")]
		private bool <AllLevelsLoaded>k__BackingField;

		[Token(Token = "0x170002C7")]
		public bool AllLevelsLoaded
		{
			[Token(Token = "0x6001C42")]
			[Address(RVA = "0xC78740", Offset = "0xC78740", VA = "0xC78740")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D36D4", Offset = "0x9D36D4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C43")]
			[Address(RVA = "0xC78748", Offset = "0xC78748", VA = "0xC78748")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D36E4", Offset = "0x9D36E4")]
			set
			{
			}
		}

		[Token(Token = "0x6001C44")]
		[Address(RVA = "0xC78754", Offset = "0xC78754", VA = "0xC78754")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9D36F4", Offset = "0x9D36F4")]
		public IEnumerator LoadBirthingScene()
		{
			return null;
		}

		[Token(Token = "0x6001C45")]
		[Address(RVA = "0xC787F4", Offset = "0xC787F4", VA = "0xC787F4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9D3758", Offset = "0x9D3758")]
		public IEnumerator UnloadBirthingScene()
		{
			return null;
		}

		[Token(Token = "0x6001C46")]
		[Address(RVA = "0xC78894", Offset = "0xC78894", VA = "0xC78894")]
		public void LoadMainMenuScene()
		{
		}

		[Token(Token = "0x6001C47")]
		[Address(RVA = "0xC788A4", Offset = "0xC788A4", VA = "0xC788A4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9D37BC", Offset = "0x9D37BC")]
		public IEnumerator UnloadMainMenuScene()
		{
			return null;
		}

		[Token(Token = "0x6001C48")]
		[Address(RVA = "0xC78944", Offset = "0xC78944", VA = "0xC78944")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9D3820", Offset = "0x9D3820")]
		public IEnumerator LoadScenesAsync()
		{
			return null;
		}

		[Token(Token = "0x6001C49")]
		[Address(RVA = "0xC789E4", Offset = "0xC789E4", VA = "0xC789E4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9D3884", Offset = "0x9D3884")]
		private IEnumerator DoLoadContentScenes()
		{
			return null;
		}

		[Token(Token = "0x6001C4A")]
		[Address(RVA = "0xC78A84", Offset = "0xC78A84", VA = "0xC78A84")]
		public ContentLoadingService()
		{
		}
	}
	[Token(Token = "0x20003CF")]
	public class DefaultsService : MonoBehaviour, ServiceLocator.ILocatableService
	{
		[Token(Token = "0x40010EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PersistentEntity[] PreDiscoveredPrefabs;

		[Token(Token = "0x40010EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WateringProfile wateringProfile;

		[Token(Token = "0x40010EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SusparillaBallEntity susparillaBallEntityPrefab;

		[Token(Token = "0x40010ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Material LightShaftMaterial;

		[Token(Token = "0x6001C4B")]
		[Address(RVA = "0xC7939C", Offset = "0xC7939C", VA = "0xC7939C")]
		public DefaultsService()
		{
		}
	}
	[Token(Token = "0x20003D0")]
	public static class FujiSaveLoadUtility
	{
		[Token(Token = "0x40010EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Encoding Encoding;

		[Token(Token = "0x40010EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int numSaveSlots;

		[Token(Token = "0x40010F0")]
		private const string BackupSuffix = "~OLD";

		[Token(Token = "0x40010F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string _dataToSave;

		[Token(Token = "0x40010F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static bool _dirty;

		[Token(Token = "0x40010F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static string _primaryPath_Cache;

		[Token(Token = "0x40010F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static int SaveNumber;

		[Token(Token = "0x40010F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static string _secondaryPath_Cache;

		[Token(Token = "0x6001C4C")]
		[Address(RVA = "0xC81DCC", Offset = "0xC81DCC", VA = "0xC81DCC")]
		public static string GetPath()
		{
			return null;
		}

		[Token(Token = "0x6001C4D")]
		[Address(RVA = "0xC82218", Offset = "0xC82218", VA = "0xC82218")]
		public static string GetSaveNumber(int saveNum)
		{
			return null;
		}

		[Token(Token = "0x6001C4E")]
		[Address(RVA = "0xC82330", Offset = "0xC82330", VA = "0xC82330")]
		private static string GetPathBackup()
		{
			return null;
		}

		[Token(Token = "0x6001C4F")]
		[Address(RVA = "0xC82400", Offset = "0xC82400", VA = "0xC82400")]
		public static void ForceSaveToDisk()
		{
		}

		[Token(Token = "0x6001C50")]
		[Address(RVA = "0xC81FA8", Offset = "0xC81FA8", VA = "0xC81FA8")]
		public static void SetSaveNumber(int saveNum)
		{
		}

		[Token(Token = "0x6001C51")]
		[Address(RVA = "0xC8279C", Offset = "0xC8279C", VA = "0xC8279C")]
		public static void SetSave(string save)
		{
		}

		[Token(Token = "0x6001C52")]
		[Address(RVA = "0xC821B4", Offset = "0xC821B4", VA = "0xC821B4")]
		public static bool SaveExists()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C53")]
		[Address(RVA = "0xC82848", Offset = "0xC82848", VA = "0xC82848")]
		public static string GetSave()
		{
			return null;
		}

		[Token(Token = "0x6001C54")]
		[Address(RVA = "0xC82960", Offset = "0xC82960", VA = "0xC82960")]
		public static void DeleteSaveFile()
		{
		}
	}
	[Token(Token = "0x20003D1")]
	public class GlobalValuesService : MonoBehaviour, ServiceLocator.ILocatableService
	{
		[Token(Token = "0x40010F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool CheatsEnabled;

		[Token(Token = "0x40010F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int UniformId_FujiTuneVals;

		[Token(Token = "0x40010F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int UniformId_FujiTouchPos;

		[Token(Token = "0x40010F9")]
		private const int NumTouchPositions = 2;

		[Token(Token = "0x40010FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector4[] FujiTouchPos;

		[Token(Token = "0x6001C56")]
		[Address(RVA = "0xC851D0", Offset = "0xC851D0", VA = "0xC851D0")]
		public GlobalValuesService()
		{
		}

		[Token(Token = "0x6001C57")]
		[Address(RVA = "0xC852A8", Offset = "0xC852A8", VA = "0xC852A8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C58")]
		[Address(RVA = "0xC8531C", Offset = "0xC8531C", VA = "0xC8531C")]
		public void Update()
		{
		}

		[Token(Token = "0x6001C59")]
		[Address(RVA = "0xC85238", Offset = "0xC85238", VA = "0xC85238")]
		private void InitGlobalShaderVals()
		{
		}

		[Token(Token = "0x6001C5A")]
		[Address(RVA = "0xC8574C", Offset = "0xC8574C", VA = "0xC8574C")]
		public static void EditorResetShaderValues()
		{
		}

		[Token(Token = "0x6001C5B")]
		[Address(RVA = "0xC85320", Offset = "0xC85320", VA = "0xC85320")]
		private void UpdateGlobalShaderVals()
		{
		}
	}
	[Token(Token = "0x20003D2")]
	public class GnomeService : ServiceLocator.ILocatableService
	{
		[Token(Token = "0x200066D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBD44", Offset = "0x9BBD44")]
		private sealed class <DoFindIdleTargetAsync>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action<GnomeAnimationTarget> animTargetCallback;

			[Token(Token = "0x4001C51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private LinkedListNode<GnomeAnimationTarget> <node>5__2;

			[Token(Token = "0x4001C52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <count>5__3;

			[Token(Token = "0x170004CE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002794")]
				[Address(RVA = "0xC85B3C", Offset = "0xC85B3C", VA = "0xC85B3C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004CF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002796")]
				[Address(RVA = "0xC85BAC", Offset = "0xC85BAC", VA = "0xC85BAC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002791")]
			[Address(RVA = "0xC8597C", Offset = "0xC8597C", VA = "0xC8597C")]
			[DebuggerHidden]
			public <DoFindIdleTargetAsync>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x6002792")]
			[Address(RVA = "0xC859B0", Offset = "0xC859B0", VA = "0xC859B0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002793")]
			[Address(RVA = "0xC859B4", Offset = "0xC859B4", VA = "0xC859B4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002795")]
			[Address(RVA = "0xC85B44", Offset = "0xC85B44", VA = "0xC85B44", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6001C5C")]
		[Address(RVA = "0xC85890", Offset = "0xC85890", VA = "0xC85890")]
		public void FindIdleTargetAsync(Action<GnomeAnimationTarget> animTargetCallback)
		{
		}

		[Token(Token = "0x6001C5D")]
		[Address(RVA = "0xC85908", Offset = "0xC85908", VA = "0xC85908")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9D38E8", Offset = "0x9D38E8")]
		public IEnumerator DoFindIdleTargetAsync(Action<GnomeAnimationTarget> animTargetCallback)
		{
			return null;
		}

		[Token(Token = "0x6001C5E")]
		[Address(RVA = "0xC859A8", Offset = "0xC859A8", VA = "0xC859A8")]
		public GnomeService()
		{
		}
	}
	[Token(Token = "0x20003D3")]
	public class JellySystemService : MonoBehaviour, ServiceLocator.ILocatableService
	{
		[Token(Token = "0x200066E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBD54", Offset = "0x9BBD54")]
		private sealed class <Start>d__27 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public JellySystemService <>4__this;

			[Token(Token = "0x170004D0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600279A")]
				[Address(RVA = "0xD88194", Offset = "0xD88194", VA = "0xD88194", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004D1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600279C")]
				[Address(RVA = "0xD88204", Offset = "0xD88204", VA = "0xD88204", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002797")]
			[Address(RVA = "0xD874B4", Offset = "0xD874B4", VA = "0xD874B4")]
			[DebuggerHidden]
			public <Start>d__27(int <>1__state)
			{
			}

			[Token(Token = "0x6002798")]
			[Address(RVA = "0xD87F68", Offset = "0xD87F68", VA = "0xD87F68", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002799")]
			[Address(RVA = "0xD87F6C", Offset = "0xD87F6C", VA = "0xD87F6C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600279B")]
			[Address(RVA = "0xD8819C", Offset = "0xD8819C", VA = "0xD8819C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40010FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly LinkedList<JellySystem> _systems;

		[Token(Token = "0x40010FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static SphereVolume _leftHandTouchCollider;

		[Token(Token = "0x40010FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static SphereVolume _rightHandTouchCollider;

		[Token(Token = "0x40010FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static PlayerControllerInput _leftHandInput;

		[Token(Token = "0x40010FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static PlayerControllerInput _rightHandInput;

		[Token(Token = "0x4001100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C8414", Offset = "0x9C8414")]
		private static Vector3 <_previousLeftPos>k__BackingField;

		[Token(Token = "0x4001101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C8424", Offset = "0x9C8424")]
		private static Vector3 <_previousRightPos>k__BackingField;

		[Token(Token = "0x4001102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C8434", Offset = "0x9C8434")]
		private static float2? <_cacheCalculateExtraHandRadius>k__BackingField;

		[Token(Token = "0x4001103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C8444", Offset = "0x9C8444")]
		private static FastMathExtension.LineSegmentShared? <_cacheLeftHandTouchColliderPos>k__BackingField;

		[Token(Token = "0x4001104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C8454", Offset = "0x9C8454")]
		private static FastMathExtension.LineSegmentShared? <_cacheRightHandTouchColliderPos>k__BackingField;

		[Token(Token = "0x4001105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public static bool2 _grabBreak;

		[Token(Token = "0x4001106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _initialized;

		[Token(Token = "0x170002C8")]
		public static Vector3 _previousLeftPos
		{
			[Token(Token = "0x6001C60")]
			[Address(RVA = "0xD870B8", Offset = "0xD870B8", VA = "0xD870B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D395C", Offset = "0x9D395C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001C5F")]
			[Address(RVA = "0xD87048", Offset = "0xD87048", VA = "0xD87048")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D394C", Offset = "0x9D394C")]
			private set
			{
			}
		}

		[Token(Token = "0x170002C9")]
		public static Vector3 _previousRightPos
		{
			[Token(Token = "0x6001C62")]
			[Address(RVA = "0xD8717C", Offset = "0xD8717C", VA = "0xD8717C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D397C", Offset = "0x9D397C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001C61")]
			[Address(RVA = "0xD8710C", Offset = "0xD8710C", VA = "0xD8710C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D396C", Offset = "0x9D396C")]
			private set
			{
			}
		}

		[Token(Token = "0x170002CA")]
		public static float2? _cacheCalculateExtraHandRadius
		{
			[Token(Token = "0x6001C64")]
			[Address(RVA = "0xD87234", Offset = "0xD87234", VA = "0xD87234")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D399C", Offset = "0x9D399C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C63")]
			[Address(RVA = "0xD871D0", Offset = "0xD871D0", VA = "0xD871D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D398C", Offset = "0x9D398C")]
			private set
			{
			}
		}

		[Token(Token = "0x170002CB")]
		public static FastMathExtension.LineSegmentShared? _cacheLeftHandTouchColliderPos
		{
			[Token(Token = "0x6001C66")]
			[Address(RVA = "0xD872FC", Offset = "0xD872FC", VA = "0xD872FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D39BC", Offset = "0x9D39BC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C65")]
			[Address(RVA = "0xD87288", Offset = "0xD87288", VA = "0xD87288")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D39AC", Offset = "0x9D39AC")]
			private set
			{
			}
		}

		[Token(Token = "0x170002CC")]
		public static FastMathExtension.LineSegmentShared? _cacheRightHandTouchColliderPos
		{
			[Token(Token = "0x6001C68")]
			[Address(RVA = "0xD873D8", Offset = "0xD873D8", VA = "0xD873D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D39DC", Offset = "0x9D39DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C67")]
			[Address(RVA = "0xD87364", Offset = "0xD87364", VA = "0xD87364")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D39CC", Offset = "0x9D39CC")]
			private set
			{
			}
		}

		[Token(Token = "0x6001C69")]
		[Address(RVA = "0xD87440", Offset = "0xD87440", VA = "0xD87440")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9D39EC", Offset = "0x9D39EC")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6001C6A")]
		[Address(RVA = "0xD874E0", Offset = "0xD874E0", VA = "0xD874E0")]
		public LinkedListNode<JellySystem> AddToSchedule(JellySystem system)
		{
			return null;
		}

		[Token(Token = "0x6001C6B")]
		[Address(RVA = "0xD87580", Offset = "0xD87580", VA = "0xD87580")]
		public void RemoveFromSchedule(LinkedListNode<JellySystem> system)
		{
		}

		[Token(Token = "0x6001C6C")]
		[Address(RVA = "0xD875F0", Offset = "0xD875F0", VA = "0xD875F0")]
		private bool SkipCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C6D")]
		[Address(RVA = "0xD87600", Offset = "0xD87600", VA = "0xD87600")]
		public void Update()
		{
		}

		[Token(Token = "0x6001C6E")]
		[Address(RVA = "0xD87E34", Offset = "0xD87E34", VA = "0xD87E34")]
		public void LateUpdate()
		{
		}

		[Token(Token = "0x6001C6F")]
		[Address(RVA = "0xD879A4", Offset = "0xD879A4", VA = "0xD879A4")]
		public static void ClearStaticCaches()
		{
		}

		[Token(Token = "0x6001C70")]
		[Address(RVA = "0xD87AA4", Offset = "0xD87AA4", VA = "0xD87AA4")]
		private static float2 CalculateExtraHandRadius()
		{
			return default(float2);
		}

		[Token(Token = "0x6001C71")]
		[Address(RVA = "0xD87EF8", Offset = "0xD87EF8", VA = "0xD87EF8")]
		public JellySystemService()
		{
		}
	}
	[Token(Token = "0x20003D4")]
	public class LightGemService : MonoBehaviour, ServiceLocator.ILocatableService
	{
		[Token(Token = "0x200066F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBD64", Offset = "0x9BBD64")]
		private sealed class <DoDebugSpawn>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LightGemService <>4__this;

			[Token(Token = "0x4001C59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Player <player>5__2;

			[Token(Token = "0x170004D2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60027A0")]
				[Address(RVA = "0xD892DC", Offset = "0xD892DC", VA = "0xD892DC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004D3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60027A2")]
				[Address(RVA = "0xD8934C", Offset = "0xD8934C", VA = "0xD8934C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600279D")]
			[Address(RVA = "0xD88D98", Offset = "0xD88D98", VA = "0xD88D98")]
			[DebuggerHidden]
			public <DoDebugSpawn>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x600279E")]
			[Address(RVA = "0xD88DCC", Offset = "0xD88DCC", VA = "0xD88DCC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600279F")]
			[Address(RVA = "0xD88DD0", Offset = "0xD88DD0", VA = "0xD88DD0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60027A1")]
			[Address(RVA = "0xD892E4", Offset = "0xD892E4", VA = "0xD892E4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject PfbLightGem;

		[Token(Token = "0x6001C72")]
		[Address(RVA = "0xD88A7C", Offset = "0xD88A7C", VA = "0xD88A7C")]
		public void Start()
		{
		}

		[Token(Token = "0x6001C73")]
		[Address(RVA = "0xD88B1C", Offset = "0xD88B1C", VA = "0xD88B1C")]
		public void GrantLightGemNoVisual()
		{
		}

		[Token(Token = "0x6001C74")]
		[Address(RVA = "0xD88BAC", Offset = "0xD88BAC", VA = "0xD88BAC")]
		public void GrantLightGem(Vector3 worldGemLocation)
		{
		}

		[Token(Token = "0x6001C75")]
		[Address(RVA = "0xD88C3C", Offset = "0xD88C3C", VA = "0xD88C3C")]
		public GameObject SpawnLightGem(Vector3 worldPos)
		{
			return null;
		}

		[Token(Token = "0x6001C76")]
		[Address(RVA = "0xD88AA8", Offset = "0xD88AA8", VA = "0xD88AA8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9D3A50", Offset = "0x9D3A50")]
		private IEnumerator DoDebugSpawn()
		{
			return null;
		}

		[Token(Token = "0x6001C77")]
		[Address(RVA = "0xD88DC4", Offset = "0xD88DC4", VA = "0xD88DC4")]
		public LightGemService()
		{
		}
	}
	[Token(Token = "0x20003D5")]
	public class LightingService : MonoBehaviour, ServiceLocator.ILocatableService
	{
		[Serializable]
		[Token(Token = "0x2000670")]
		public struct ZoneSetting
		{
			[Token(Token = "0x4001C5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public LoadingZoneKey Zone;

			[Token(Token = "0x4001C5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AnimationCurve GemToRadiusCurve;

			[Token(Token = "0x4001C5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AnimationCurve GemToHeightCurve;

			[Token(Token = "0x4001C5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Material Skybox;
		}

		[Token(Token = "0x4001108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool KillSelfIfNotOriginal;

		[Token(Token = "0x4001109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ZoneSetting[] ZoneSettings;

		[Token(Token = "0x400110A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public FujiCylinderLightController LightCylinderController;

		[Token(Token = "0x400110B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public FujiBackgroundFog BackgroundFog;

		[Token(Token = "0x400110C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject LightRingVisual;

		[Token(Token = "0x6001C78")]
		[Address(RVA = "0xD89354", Offset = "0xD89354", VA = "0xD89354")]
		public void Start()
		{
		}

		[Token(Token = "0x6001C79")]
		[Address(RVA = "0xD89434", Offset = "0xD89434", VA = "0xD89434")]
		public ZoneSetting? GetZoneSetting()
		{
			return null;
		}

		[Token(Token = "0x6001C7A")]
		[Address(RVA = "0xD894B4", Offset = "0xD894B4", VA = "0xD894B4")]
		public ZoneSetting? GetZoneSetting(LoadingZoneKey zone)
		{
			return null;
		}

		[Token(Token = "0x6001C7B")]
		[Address(RVA = "0xD895F8", Offset = "0xD895F8", VA = "0xD895F8")]
		public static void EditorReset()
		{
		}

		[Token(Token = "0x6001C7C")]
		[Address(RVA = "0xD897E8", Offset = "0xD897E8", VA = "0xD897E8")]
		public void SetSkybox(LoadingZoneKey zone)
		{
		}

		[Token(Token = "0x6001C7D")]
		[Address(RVA = "0xD898E0", Offset = "0xD898E0", VA = "0xD898E0")]
		public void SetEnableLightRingVisual(bool enableVisual)
		{
		}

		[Token(Token = "0x6001C7E")]
		[Address(RVA = "0xD89918", Offset = "0xD89918", VA = "0xD89918")]
		public LightingService()
		{
		}
	}
	[Token(Token = "0x20003D6")]
	public class LocalizationService : MonoBehaviour, ServiceLocator.ILocatableService
	{
		[Token(Token = "0x2000671")]
		public static class Messages
		{
			[Token(Token = "0x20006E7")]
			public struct LocalizationChangedMessage
			{
				[Token(Token = "0x4001E30")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public readonly SystemLanguage language;

				[Token(Token = "0x600294F")]
				[Address(RVA = "0xA83354", Offset = "0xA83354", VA = "0xA83354")]
				public LocalizationChangedMessage(SystemLanguage language)
				{
				}
			}
		}

		[Token(Token = "0x2000672")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBD74", Offset = "0x9BBD74")]
		private sealed class <EnumerateLanguages>d__9 : IEnumerable<SystemLanguage>, IEnumerable, IEnumerator<SystemLanguage>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private SystemLanguage <>2__current;

			[Token(Token = "0x4001C60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001C61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LocalizationService <>4__this;

			[Token(Token = "0x4001C62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x170004D4")]
			private SystemLanguage System.Collections.Generic.IEnumerator<UnityEngine.SystemLanguage>.Current
			{
				[Token(Token = "0x60027A6")]
				[Address(RVA = "0xD8B2F8", Offset = "0xD8B2F8", VA = "0xD8B2F8", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return default(SystemLanguage);
				}
			}

			[Token(Token = "0x170004D5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60027A8")]
				[Address(RVA = "0xD8B368", Offset = "0xD8B368", VA = "0xD8B368", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60027A3")]
			[Address(RVA = "0xD8AD20", Offset = "0xD8AD20", VA = "0xD8AD20")]
			[DebuggerHidden]
			public <EnumerateLanguages>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x60027A4")]
			[Address(RVA = "0xD8B1C4", Offset = "0xD8B1C4", VA = "0xD8B1C4", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60027A5")]
			[Address(RVA = "0xD8B1C8", Offset = "0xD8B1C8", VA = "0xD8B1C8", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60027A7")]
			[Address(RVA = "0xD8B300", Offset = "0xD8B300", VA = "0xD8B300", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60027A9")]
			[Address(RVA = "0xD8B3CC", Offset = "0xD8B3CC", VA = "0xD8B3CC", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<SystemLanguage> System.Collections.Generic.IEnumerable<UnityEngine.SystemLanguage>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60027AA")]
			[Address(RVA = "0xD8B47C", Offset = "0xD8B47C", VA = "0xD8B47C", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x400110D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x9C8464", Offset = "0x9C8464")]
		private TextMeshLOC_Asset _langPickerAsset;

		[Token(Token = "0x400110E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C84B0", Offset = "0x9C84B0")]
		private SystemLanguage <CurrentLanguage>k__BackingField;

		[Token(Token = "0x170002CD")]
		public SystemLanguage CurrentLanguage
		{
			[Token(Token = "0x6001C80")]
			[Address(RVA = "0xD8AABC", Offset = "0xD8AABC", VA = "0xD8AABC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D3AC4", Offset = "0x9D3AC4")]
			get
			{
				return default(SystemLanguage);
			}
			[Token(Token = "0x6001C7F")]
			[Address(RVA = "0xD8AAB4", Offset = "0xD8AAB4", VA = "0xD8AAB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D3AB4", Offset = "0x9D3AB4")]
			private set
			{
			}
		}

		[Token(Token = "0x170002CE")]
		public int LanguageCount
		{
			[Token(Token = "0x6001C81")]
			[Address(RVA = "0xD8AAC4", Offset = "0xD8AAC4", VA = "0xD8AAC4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001C82")]
		[Address(RVA = "0xD8AB34", Offset = "0xD8AB34", VA = "0xD8AB34")]
		public SystemLanguage GetLanguageAtIndex(int index)
		{
			return default(SystemLanguage);
		}

		[Token(Token = "0x6001C83")]
		[Address(RVA = "0xD8ABB8", Offset = "0xD8ABB8", VA = "0xD8ABB8")]
		public bool IsLanguageSupported(SystemLanguage lang)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C84")]
		[Address(RVA = "0xD8AC9C", Offset = "0xD8AC9C", VA = "0xD8AC9C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9D3AD4", Offset = "0x9D3AD4")]
		public IEnumerable<SystemLanguage> EnumerateLanguages()
		{
			return null;
		}

		[Token(Token = "0x6001C85")]
		[Address(RVA = "0xD8AD58", Offset = "0xD8AD58", VA = "0xD8AD58")]
		private SystemLanguage GetCurrentLanguage()
		{
			return default(SystemLanguage);
		}

		[Token(Token = "0x6001C86")]
		[Address(RVA = "0xD8ADFC", Offset = "0xD8ADFC", VA = "0xD8ADFC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C87")]
		[Address(RVA = "0xD8AE80", Offset = "0xD8AE80", VA = "0xD8AE80")]
		private void HandleSaveStateAlteredMessage(WorldStateService.Messages.SaveStateAlteredMessaged message)
		{
		}

		[Token(Token = "0x6001C88")]
		[Address(RVA = "0xD8AE90", Offset = "0xD8AE90", VA = "0xD8AE90")]
		private void PollSaveLanguage()
		{
		}

		[Token(Token = "0x6001C89")]
		[Address(RVA = "0xD8AF08", Offset = "0xD8AF08", VA = "0xD8AF08")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x9D3B38", Offset = "0x9D3B38")]
		public void _ToggleLang()
		{
		}

		[Token(Token = "0x6001C8A")]
		[Address(RVA = "0xD8AFC4", Offset = "0xD8AFC4", VA = "0xD8AFC4")]
		public int GetCurrentLangIndex()
		{
			return default(int);
		}

		[Token(Token = "0x6001C8B")]
		[Address(RVA = "0xD8B0A8", Offset = "0xD8B0A8", VA = "0xD8B0A8")]
		public void SetCurrentLanguage(int index)
		{
		}

		[Token(Token = "0x6001C8C")]
		[Address(RVA = "0xD8B1B4", Offset = "0xD8B1B4", VA = "0xD8B1B4")]
		public LocalizationService()
		{
		}
	}
	[Token(Token = "0x20003D7")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9BA434", Offset = "0x9BA434")]
	public class LocomotionService : MonoBehaviour, IStateProvider, ServiceLocator.ILocatableService
	{
		[Token(Token = "0x2000673")]
		public interface IPlayerTriggerable : IGameObject
		{
			[Token(Token = "0x60027AB")]
			void OnPlayerEnterTrigger();

			[Token(Token = "0x60027AC")]
			void OnPlayerExitTrigger();
		}

		[Token(Token = "0x2000674")]
		public static class Messages
		{
			[Token(Token = "0x20006E8")]
			public struct PreLocomotionTeleportGlobalMessage
			{
			}

			[Token(Token = "0x20006E9")]
			public struct PostLocomotionTeleportGlobalMessage
			{
			}

			[Token(Token = "0x20006EA")]
			public struct PostLocomotionClickTurnGlobalMessage
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000675")]
		public class SpiritWalkingState : ILateTickableState, IState
		{
			[Token(Token = "0x20006EB")]
			public enum NavigationArcValidityStatus
			{
				[Token(Token = "0x4001E32")]
				ValidNavMesh,
				[Token(Token = "0x4001E33")]
				ValidUnrestricted,
				[Token(Token = "0x4001E34")]
				ValidLightRail,
				[Token(Token = "0x4001E35")]
				InvalidNonNavmesh,
				[Token(Token = "0x4001E36")]
				InvalidDark,
				[Token(Token = "0x4001E37")]
				InvalidNoHit,
				[Token(Token = "0x4001E38")]
				InvalidNonNavigationBlocked,
				[Token(Token = "0x4001E39")]
				InvalidCeilingTooLow,
				[Token(Token = "0x4001E3A")]
				InvalidTooHigh,
				[Token(Token = "0x4001E3B")]
				InvalidTooLow,
				[Token(Token = "0x4001E3C")]
				InvalidNotVertical
			}

			[Token(Token = "0x20006EC")]
			private struct LaunchArc
			{
				[Token(Token = "0x4001E3D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public float3 InitialPosition;

				[Token(Token = "0x4001E3E")]
				[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
				public float3 InitialVelocity;

				[Token(Token = "0x4001E3F")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public float3 Force;

				[Token(Token = "0x4001E40")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
				public float Time;
			}

			[Token(Token = "0x20006ED")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BC184", Offset = "0x9BC184")]
			private sealed class <DoSpiritLocomotion>d__41 : IEnumerator<object>, IEnumerator, IDisposable
			{
				[Token(Token = "0x4001E41")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private int <>1__state;

				[Token(Token = "0x4001E42")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private object <>2__current;

				[Token(Token = "0x4001E43")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public SpiritWalkingState <>4__this;

				[Token(Token = "0x4001E44")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				private PlayerService <playerService>5__2;

				[Token(Token = "0x4001E45")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				private Player <player>5__3;

				[Token(Token = "0x4001E46")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
				private LaunchArc <arcSettings>5__4;

				[Token(Token = "0x4001E47")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
				private bool <snapping>5__5;

				[Token(Token = "0x4001E48")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
				private PlayerController <currController>5__6;

				[Token(Token = "0x4001E49")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
				private PlayerController <otherController>5__7;

				[Token(Token = "0x4001E4A")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
				private PlayerControllerInput <currControllerInput>5__8;

				[Token(Token = "0x4001E4B")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
				private Vector3 <lastHapticPos>5__9;

				[Token(Token = "0x4001E4C")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
				private PhysicsExtension.SurfacePoint3? <spiritWalkPosition>5__10;

				[Token(Token = "0x4001E4D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
				private bool <cancel>5__11;

				[Token(Token = "0x4001E4E")]
				[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
				private GameObject <hitGameObject>5__12;

				[Token(Token = "0x4001E4F")]
				[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
				private Vector3 <controllerDir>5__13;

				[Token(Token = "0x4001E50")]
				[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
				private TeleportRedirectNode <lastHitNode>5__14;

				[Token(Token = "0x4001E51")]
				[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
				private bool <lastValidHitState>5__15;

				[Token(Token = "0x4001E52")]
				[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
				private PlayerController[] <>7__wrap15;

				[Token(Token = "0x4001E53")]
				[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
				private int <>7__wrap16;

				[Token(Token = "0x4001E54")]
				[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
				private PlayerController <controller>5__18;

				[Token(Token = "0x4001E55")]
				[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
				private ILightRailPath <lightRailHit>5__19;

				[Token(Token = "0x17000523")]
				private object System.Collections.Generic.IEnumerator<System.Object>.Current
				{
					[Token(Token = "0x6002953")]
					[Address(RVA = "0xD99FE0", Offset = "0xD99FE0", VA = "0xD99FE0", Slot = "4")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x17000524")]
				private object System.Collections.IEnumerator.Current
				{
					[Token(Token = "0x6002955")]
					[Address(RVA = "0xD9A050", Offset = "0xD9A050", VA = "0xD9A050", Slot = "7")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x6002950")]
				[Address(RVA = "0xD953B8", Offset = "0xD953B8", VA = "0xD953B8")]
				[DebuggerHidden]
				public <DoSpiritLocomotion>d__41(int <>1__state)
				{
				}

				[Token(Token = "0x6002951")]
				[Address(RVA = "0xD979C8", Offset = "0xD979C8", VA = "0xD979C8", Slot = "5")]
				[DebuggerHidden]
				private void System.IDisposable.Dispose()
				{
				}

				[Token(Token = "0x6002952")]
				[Address(RVA = "0xD979CC", Offset = "0xD979CC", VA = "0xD979CC", Slot = "6")]
				private bool MoveNext()
				{
					return default(bool);
				}

				[Token(Token = "0x6002954")]
				[Address(RVA = "0xD99FE8", Offset = "0xD99FE8", VA = "0xD99FE8", Slot = "8")]
				[DebuggerHidden]
				private void System.Collections.IEnumerator.Reset()
				{
				}
			}

			[Token(Token = "0x20006EE")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BC194", Offset = "0x9BC194")]
			private sealed class <DoAvatar>d__43 : IEnumerator<object>, IEnumerator, IDisposable
			{
				[Token(Token = "0x4001E56")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private int <>1__state;

				[Token(Token = "0x4001E57")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private object <>2__current;

				[Token(Token = "0x4001E58")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public SpiritWalkingState <>4__this;

				[Token(Token = "0x4001E59")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				private Player <player>5__2;

				[Token(Token = "0x17000525")]
				private object System.Collections.Generic.IEnumerator<System.Object>.Current
				{
					[Token(Token = "0x6002959")]
					[Address(RVA = "0xD96444", Offset = "0xD96444", VA = "0xD96444", Slot = "4")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x17000526")]
				private object System.Collections.IEnumerator.Current
				{
					[Token(Token = "0x600295B")]
					[Address(RVA = "0xD964B4", Offset = "0xD964B4", VA = "0xD964B4", Slot = "7")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x6002956")]
				[Address(RVA = "0xD95458", Offset = "0xD95458", VA = "0xD95458")]
				[DebuggerHidden]
				public <DoAvatar>d__43(int <>1__state)
				{
				}

				[Token(Token = "0x6002957")]
				[Address(RVA = "0xD96078", Offset = "0xD96078", VA = "0xD96078", Slot = "5")]
				[DebuggerHidden]
				private void System.IDisposable.Dispose()
				{
				}

				[Token(Token = "0x6002958")]
				[Address(RVA = "0xD9607C", Offset = "0xD9607C", VA = "0xD9607C", Slot = "6")]
				private bool MoveNext()
				{
					return default(bool);
				}

				[Token(Token = "0x600295A")]
				[Address(RVA = "0xD9644C", Offset = "0xD9644C", VA = "0xD9644C", Slot = "8")]
				[DebuggerHidden]
				private void System.Collections.IEnumerator.Reset()
				{
				}
			}

			[Token(Token = "0x20006EF")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BC1A4", Offset = "0x9BC1A4")]
			private sealed class <>c__DisplayClass44_0
			{
				[Token(Token = "0x4001E5A")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public PlayerService playerService;

				[Token(Token = "0x4001E5B")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public Vector3 rigTarget;

				[Token(Token = "0x4001E5C")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				public SpiritWalkingState <>4__this;

				[Token(Token = "0x600295C")]
				[Address(RVA = "0xD9585C", Offset = "0xD9585C", VA = "0xD9585C")]
				public <>c__DisplayClass44_0()
				{
				}
			}

			[Token(Token = "0x20006F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BC1B4", Offset = "0x9BC1B4")]
			private sealed class <>c__DisplayClass44_1
			{
				[Token(Token = "0x4001E5D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public Vector3 movRigPosPrev;

				[Token(Token = "0x4001E5E")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public VRIK vrik;

				[Token(Token = "0x4001E5F")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				public <>c__DisplayClass44_0 CS$<>8__locals1;

				[Token(Token = "0x600295D")]
				[Address(RVA = "0xD95864", Offset = "0xD95864", VA = "0xD95864")]
				public <>c__DisplayClass44_1()
				{
				}

				[Token(Token = "0x600295E")]
				[Address(RVA = "0xD9586C", Offset = "0xD9586C", VA = "0xD9586C")]
				internal void <DoRelativeWarp>b__0()
				{
				}
			}

			[Token(Token = "0x20006F1")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BC1C4", Offset = "0x9BC1C4")]
			private sealed class <>c__DisplayClass44_2
			{
				[Token(Token = "0x4001E60")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public bool blocked;

				[Token(Token = "0x4001E61")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public <>c__DisplayClass44_0 CS$<>8__locals2;

				[Token(Token = "0x600295F")]
				[Address(RVA = "0xD95A58", Offset = "0xD95A58", VA = "0xD95A58")]
				public <>c__DisplayClass44_2()
				{
				}

				[Token(Token = "0x6002960")]
				[Address(RVA = "0xD95A60", Offset = "0xD95A60", VA = "0xD95A60")]
				internal void <DoRelativeWarp>b__1()
				{
				}
			}

			[Token(Token = "0x20006F2")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BC1D4", Offset = "0x9BC1D4")]
			private sealed class <DoRelativeWarp>d__44 : IEnumerator<object>, IEnumerator, IDisposable
			{
				[Token(Token = "0x4001E62")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private int <>1__state;

				[Token(Token = "0x4001E63")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private object <>2__current;

				[Token(Token = "0x4001E64")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public SpiritWalkingState <>4__this;

				[Token(Token = "0x4001E65")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				public PlayerControllerInput fromInput;

				[Token(Token = "0x4001E66")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				public Vector3 target;

				[Token(Token = "0x4001E67")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
				public LaunchArc arc;

				[Token(Token = "0x4001E68")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
				private <>c__DisplayClass44_0 <>8__1;

				[Token(Token = "0x4001E69")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
				private <>c__DisplayClass44_1 <>8__2;

				[Token(Token = "0x4001E6A")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
				private <>c__DisplayClass44_2 <>8__3;

				[Token(Token = "0x4001E6B")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
				public Vector3? directionWorld;

				[Token(Token = "0x4001E6C")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
				private Player <player>5__2;

				[Token(Token = "0x4001E6D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
				private Vector3 <start>5__3;

				[Token(Token = "0x4001E6E")]
				[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
				private Vector3 <end>5__4;

				[Token(Token = "0x4001E6F")]
				[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
				private Vector3 <arcInitialVelocity>5__5;

				[Token(Token = "0x4001E70")]
				[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
				private float <t>5__6;

				[Token(Token = "0x17000527")]
				private object System.Collections.Generic.IEnumerator<System.Object>.Current
				{
					[Token(Token = "0x6002964")]
					[Address(RVA = "0xD976E0", Offset = "0xD976E0", VA = "0xD976E0", Slot = "4")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x17000528")]
				private object System.Collections.IEnumerator.Current
				{
					[Token(Token = "0x6002966")]
					[Address(RVA = "0xD97750", Offset = "0xD97750", VA = "0xD97750", Slot = "7")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x6002961")]
				[Address(RVA = "0xD955BC", Offset = "0xD955BC", VA = "0xD955BC")]
				[DebuggerHidden]
				public <DoRelativeWarp>d__44(int <>1__state)
				{
				}

				[Token(Token = "0x6002962")]
				[Address(RVA = "0xD964BC", Offset = "0xD964BC", VA = "0xD964BC", Slot = "5")]
				[DebuggerHidden]
				private void System.IDisposable.Dispose()
				{
				}

				[Token(Token = "0x6002963")]
				[Address(RVA = "0xD964C0", Offset = "0xD964C0", VA = "0xD964C0", Slot = "6")]
				private bool MoveNext()
				{
					return default(bool);
				}

				[Token(Token = "0x6002965")]
				[Address(RVA = "0xD976E8", Offset = "0xD976E8", VA = "0xD976E8", Slot = "8")]
				[DebuggerHidden]
				private void System.Collections.IEnumerator.Reset()
				{
				}
			}

			[Token(Token = "0x20006F3")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BC1E4", Offset = "0x9BC1E4")]
			private sealed class <>c__DisplayClass45_0
			{
				[Token(Token = "0x4001E71")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public Vector3 directionWorld;

				[Token(Token = "0x4001E72")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public PlayerService playerService;

				[Token(Token = "0x4001E73")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				public SpiritWalkingState <>4__this;

				[Token(Token = "0x6002967")]
				[Address(RVA = "0xD95DC0", Offset = "0xD95DC0", VA = "0xD95DC0")]
				public <>c__DisplayClass45_0()
				{
				}

				[Token(Token = "0x6002968")]
				[Address(RVA = "0xD95DC8", Offset = "0xD95DC8", VA = "0xD95DC8")]
				internal void <DoRotationWarp>b__0()
				{
				}
			}

			[Token(Token = "0x20006F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BC1F4", Offset = "0x9BC1F4")]
			private sealed class <DoRotationWarp>d__45 : IEnumerator<object>, IEnumerator, IDisposable
			{
				[Token(Token = "0x4001E74")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private int <>1__state;

				[Token(Token = "0x4001E75")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private object <>2__current;

				[Token(Token = "0x4001E76")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public Vector3 directionWorld;

				[Token(Token = "0x4001E77")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				public SpiritWalkingState <>4__this;

				[Token(Token = "0x17000529")]
				private object System.Collections.Generic.IEnumerator<System.Object>.Current
				{
					[Token(Token = "0x600296C")]
					[Address(RVA = "0xD97950", Offset = "0xD97950", VA = "0xD97950", Slot = "4")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x1700052A")]
				private object System.Collections.IEnumerator.Current
				{
					[Token(Token = "0x600296E")]
					[Address(RVA = "0xD979C0", Offset = "0xD979C0", VA = "0xD979C0", Slot = "7")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x6002969")]
				[Address(RVA = "0xD95694", Offset = "0xD95694", VA = "0xD95694")]
				[DebuggerHidden]
				public <DoRotationWarp>d__45(int <>1__state)
				{
				}

				[Token(Token = "0x600296A")]
				[Address(RVA = "0xD97758", Offset = "0xD97758", VA = "0xD97758", Slot = "5")]
				[DebuggerHidden]
				private void System.IDisposable.Dispose()
				{
				}

				[Token(Token = "0x600296B")]
				[Address(RVA = "0xD9775C", Offset = "0xD9775C", VA = "0xD9775C", Slot = "6")]
				private bool MoveNext()
				{
					return default(bool);
				}

				[Token(Token = "0x600296D")]
				[Address(RVA = "0xD97958", Offset = "0xD97958", VA = "0xD97958", Slot = "8")]
				[DebuggerHidden]
				private void System.Collections.IEnumerator.Reset()
				{
				}
			}

			[Token(Token = "0x4001C63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float MaximumAscension;

			[Token(Token = "0x4001C64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float MaximumAscensionBoostInEnding;

			[Token(Token = "0x4001C65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float MaximumDescent;

			[Token(Token = "0x4001C66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform GroundRing;

			[Token(Token = "0x4001C67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Transform GroundRingStretchNode;

			[Token(Token = "0x4001C68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Transform GroundRingLightShaft;

			[Token(Token = "0x4001C69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Transform GroundRingDirectionTransform;

			[Token(Token = "0x4001C6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public TeleportationArcVisual TeleportationInterface;

			[Token(Token = "0x4001C6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Transform ZoneSphere;

			[Token(Token = "0x4001C6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9C9B98", Offset = "0x9C9B98")]
			public float SphereTravelTime;

			[Token(Token = "0x4001C6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public float BlinkTime;

			[Token(Token = "0x4001C6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public float RotationWarpTime;

			[Token(Token = "0x4001C6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public bool ZoneZoom;

			[Token(Token = "0x4001C70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public Ease SpiritWalkEaseFunc;

			[Token(Token = "0x4001C71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			[HideInInspector]
			public LayerMask WalkingRaycastLayers;

			[Token(Token = "0x4001C72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[HideInInspector]
			public LayerMask NavigationLayerMask;

			[Token(Token = "0x4001C73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			[HideInInspector]
			public LayerMask WalkableNavMeshLayerMask;

			[Token(Token = "0x4001C74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public StudioEventEmitter SfxSpawnPlantSpray;

			[Token(Token = "0x4001C75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9C9C00", Offset = "0x9C9C00")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9C9C00", Offset = "0x9C9C00")]
			public float ArcGravity;

			[Token(Token = "0x4001C76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			public float ArcEulerTime;

			[Token(Token = "0x4001C77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public Vector2 ArcTargetDistanceClamp;

			[Token(Token = "0x4001C78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9C9C54", Offset = "0x9C9C54")]
			public GameObject AvatarParent;

			[Token(Token = "0x4001C79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public GameObject AvatarHead;

			[Token(Token = "0x4001C7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			public GameObject AvatarFootprint;

			[Token(Token = "0x4001C7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			public GameObject[] AvatarHands;

			[Token(Token = "0x4001C7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9C9C8C", Offset = "0x9C9C8C")]
			public bool PrintValidityStatus;

			[Token(Token = "0x4001C7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
			public bool DisableNavMeshCheck;

			[Token(Token = "0x4001C7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xAA")]
			public bool PrintRaycastHit;

			[Token(Token = "0x4001C7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			private LocomotionService locomotionService;

			[Token(Token = "0x4001C80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			private Coroutine routine;

			[Token(Token = "0x4001C81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			private GameObject unresetrictedObjectPointingAt;

			[Token(Token = "0x4001C82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			[SerializeField]
			private PhysicsSpring _linePhysicsSpring;

			[Token(Token = "0x4001C83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
			public bool DynamicTeleportation;

			[Token(Token = "0x4001C84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF9")]
			public bool DynamicTeleportAvoidPlants;

			[Token(Token = "0x4001C85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
			private Coroutine _threadAvatar;

			[Token(Token = "0x170004D6")]
			private float MaximumAscensionInArea
			{
				[Token(Token = "0x60027AD")]
				[Address(RVA = "0xD91890", Offset = "0xD91890", VA = "0xD91890")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x60027AE")]
			[Address(RVA = "0xD9190C", Offset = "0xD9190C", VA = "0xD9190C", Slot = "5")]
			public IState OnStateEnter()
			{
				return null;
			}

			[Token(Token = "0x60027AF")]
			[Address(RVA = "0xD91CE0", Offset = "0xD91CE0", VA = "0xD91CE0", Slot = "4")]
			public IState OnStateLateTick()
			{
				return null;
			}

			[Token(Token = "0x60027B0")]
			[Address(RVA = "0xD92958", Offset = "0xD92958", VA = "0xD92958", Slot = "6")]
			public void OnStateExit()
			{
			}

			[Token(Token = "0x60027B1")]
			[Address(RVA = "0xD92C14", Offset = "0xD92C14", VA = "0xD92C14")]
			private void ArcHitTest(Vector3 initialPos, Vector3 initialVelocity, Transform teleportRay, Vector3 footPosition, out PhysicsExtension.SurfacePoint3? finalPosition, out GameObject hitSurface, ref LaunchArc arcSettings, float? height, out bool snapping, out PhysicsExtension.SurfacePoint3 arcTip, out TeleportRedirectNode teleportRedirectNodeHit, out bool teleportValid)
			{
			}

			[Token(Token = "0x60027B2")]
			[Address(RVA = "0xD91C6C", Offset = "0xD91C6C", VA = "0xD91C6C")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9D8CE4", Offset = "0x9D8CE4")]
			private IEnumerator DoSpiritLocomotion()
			{
				return null;
			}

			[Token(Token = "0x60027B3")]
			[Address(RVA = "0xD953E4", Offset = "0xD953E4", VA = "0xD953E4")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9D8D48", Offset = "0x9D8D48")]
			private IEnumerator DoAvatar(PhysicsExtension.SurfacePoint3? spiritWalkPosition)
			{
				return null;
			}

			[Token(Token = "0x60027B4")]
			[Address(RVA = "0xD95484", Offset = "0xD95484", VA = "0xD95484")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9D8DAC", Offset = "0x9D8DAC")]
			private IEnumerator DoRelativeWarp(Vector3 target, PlayerControllerInput fromInput, Vector3? directionWorld, LaunchArc arc)
			{
				return null;
			}

			[Token(Token = "0x60027B5")]
			[Address(RVA = "0xD955E8", Offset = "0xD955E8", VA = "0xD955E8")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9D8E10", Offset = "0x9D8E10")]
			private IEnumerator DoRotationWarp(Vector3 directionWorld)
			{
				return null;
			}

			[Token(Token = "0x60027B6")]
			[Address(RVA = "0xD92540", Offset = "0xD92540", VA = "0xD92540")]
			private bool CheckValidWalkPosition(Vector3 delta)
			{
				return default(bool);
			}

			[Token(Token = "0x60027B7")]
			[Address(RVA = "0xD92760", Offset = "0xD92760", VA = "0xD92760")]
			private void EnforceGroundheightConstraint()
			{
			}

			[Token(Token = "0x60027B8")]
			[Address(RVA = "0xD956C0", Offset = "0xD956C0", VA = "0xD956C0")]
			private void HandleNavigationArcValidityStatus(NavigationArcValidityStatus message)
			{
			}

			[Token(Token = "0x60027B9")]
			[Address(RVA = "0xD8F47C", Offset = "0xD8F47C", VA = "0xD8F47C")]
			public SpiritWalkingState()
			{
			}

			[Token(Token = "0x60027BA")]
			[Address(RVA = "0xD957B4", Offset = "0xD957B4", VA = "0xD957B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D8E74", Offset = "0x9D8E74")]
			private void <DoSpiritLocomotion>b__41_0()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000676")]
		public class LightRailPassageState : ILateTickableState, IState
		{
			[Token(Token = "0x4001C86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform BoatRoot;

			[Token(Token = "0x4001C87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform BoatAnimationRoot;

			[Token(Token = "0x4001C88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameObject BellWhole;

			[Token(Token = "0x4001C89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public BoxCollider BoatInclusionTrigger;

			[Token(Token = "0x4001C8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float Speed;

			[Token(Token = "0x4001C8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public bool IsHeadFixed;

			[Token(Token = "0x4001C8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float FixedHeadLerpSpeed;

			[Token(Token = "0x4001C8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public bool AllowManualBoatExit;

			[Token(Token = "0x4001C8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public ParticleSystem ParticleLightEels;

			[Token(Token = "0x4001C8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Transform GnomeRoot;

			[NonSerialized]
			[Token(Token = "0x4001C90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public ILightRailPath LightRail;

			[Token(Token = "0x4001C91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Coroutine routine;

			[Token(Token = "0x4001C92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private bool active;

			[Token(Token = "0x4001C93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
			private bool animationActive;

			[Token(Token = "0x4001C94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private LocomotionService locomotionService;

			[Token(Token = "0x4001C95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public LightRailDirection direction;

			[Token(Token = "0x4001C96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			public bool AllowBell;

			[Token(Token = "0x4001C97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
			private bool bellRung;

			[Token(Token = "0x4001C98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x76")]
			private bool bellAnimPlaying;

			[Token(Token = "0x4001C99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x77")]
			private bool relocAllowed;

			[Token(Token = "0x60027BB")]
			[Address(RVA = "0xD90340", Offset = "0xD90340", VA = "0xD90340", Slot = "5")]
			public IState OnStateEnter()
			{
				return null;
			}

			[Token(Token = "0x60027BC")]
			[Address(RVA = "0xD907C4", Offset = "0xD907C4", VA = "0xD907C4", Slot = "6")]
			public void OnStateExit()
			{
			}

			[Token(Token = "0x60027BD")]
			[Address(RVA = "0xD90940", Offset = "0xD90940", VA = "0xD90940")]
			private void HandleBellHit(PuzzleSolvedMessage message)
			{
			}

			[Token(Token = "0x60027BE")]
			[Address(RVA = "0xD9094C", Offset = "0xD9094C", VA = "0xD9094C", Slot = "4")]
			public IState OnStateLateTick()
			{
				return null;
			}

			[Token(Token = "0x60027BF")]
			[Address(RVA = "0xD8D748", Offset = "0xD8D748", VA = "0xD8D748")]
			public void Setup(ILightRailPath rail, Vector3 initialBoatPosition, LightRailDirection direction)
			{
			}

			[Token(Token = "0x60027C0")]
			[Address(RVA = "0xD90B58", Offset = "0xD90B58", VA = "0xD90B58")]
			private void ActivateBoat()
			{
			}

			[Token(Token = "0x60027C1")]
			[Address(RVA = "0xD8E998", Offset = "0xD8E998", VA = "0xD8E998")]
			public void TransferRail(LightRailDirection direction, ILightRailPath path, float progress)
			{
			}

			[Token(Token = "0x60027C2")]
			[Address(RVA = "0xD91018", Offset = "0xD91018", VA = "0xD91018")]
			private void DeactivateBoat()
			{
			}

			[Token(Token = "0x60027C3")]
			[Address(RVA = "0xD912F4", Offset = "0xD912F4", VA = "0xD912F4")]
			private void OnPostPose()
			{
			}

			[Token(Token = "0x60027C4")]
			[Address(RVA = "0xD90F50", Offset = "0xD90F50", VA = "0xD90F50")]
			public void SetProgress(float progressPercentage)
			{
			}

			[Token(Token = "0x60027C5")]
			[Address(RVA = "0xD8F568", Offset = "0xD8F568", VA = "0xD8F568")]
			public LightRailPassageState()
			{
			}

			[Token(Token = "0x60027C6")]
			[Address(RVA = "0xD91750", Offset = "0xD91750", VA = "0xD91750")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D8E84", Offset = "0x9D8E84")]
			private void <OnStateEnter>b__20_0()
			{
			}

			[Token(Token = "0x60027C7")]
			[Address(RVA = "0xD91820", Offset = "0xD91820", VA = "0xD91820")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D8E94", Offset = "0x9D8E94")]
			private void <OnStateLateTick>b__23_0()
			{
			}

			[Token(Token = "0x60027C8")]
			[Address(RVA = "0xD91880", Offset = "0xD91880", VA = "0xD91880")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D8EA4", Offset = "0x9D8EA4")]
			private void <ActivateBoat>b__25_0()
			{
			}

			[Token(Token = "0x60027C9")]
			[Address(RVA = "0xD91888", Offset = "0xD91888", VA = "0xD91888")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D8EB4", Offset = "0x9D8EB4")]
			private void <TransferRail>b__26_0()
			{
			}
		}

		[Token(Token = "0x2000677")]
		public enum ClickTurnResult
		{
			[Token(Token = "0x4001C9B")]
			None,
			[Token(Token = "0x4001C9C")]
			Left,
			[Token(Token = "0x4001C9D")]
			Right
		}

		[Token(Token = "0x2000678")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBD84", Offset = "0x9BBD84")]
		private sealed class <Start>d__37 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001CA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LocomotionService <>4__this;

			[Token(Token = "0x170004D7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60027CD")]
				[Address(RVA = "0xD8FC98", Offset = "0xD8FC98", VA = "0xD8FC98", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004D8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60027CF")]
				[Address(RVA = "0xD8FD08", Offset = "0xD8FD08", VA = "0xD8FD08", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60027CA")]
			[Address(RVA = "0xD8D3B4", Offset = "0xD8D3B4", VA = "0xD8D3B4")]
			[DebuggerHidden]
			public <Start>d__37(int <>1__state)
			{
			}

			[Token(Token = "0x60027CB")]
			[Address(RVA = "0xD8FA90", Offset = "0xD8FA90", VA = "0xD8FA90", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60027CC")]
			[Address(RVA = "0xD8FA94", Offset = "0xD8FA94", VA = "0xD8FA94", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60027CE")]
			[Address(RVA = "0xD8FCA0", Offset = "0xD8FCA0", VA = "0xD8FCA0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000679")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBD94", Offset = "0x9BBD94")]
		private sealed class <DoColliderSweepAfterRailJump>d__60 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001CA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001CA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001CA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LightRailDirection direction;

			[Token(Token = "0x4001CA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ILightRailPath lightRailPath;

			[Token(Token = "0x4001CA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float progressPercentage;

			[Token(Token = "0x4001CA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private int <i>5__2;

			[Token(Token = "0x170004D9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60027D3")]
				[Address(RVA = "0xD8FA18", Offset = "0xD8FA18", VA = "0xD8FA18", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004DA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60027D5")]
				[Address(RVA = "0xD8FA88", Offset = "0xD8FA88", VA = "0xD8FA88", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60027D0")]
			[Address(RVA = "0xD8EBE0", Offset = "0xD8EBE0", VA = "0xD8EBE0")]
			[DebuggerHidden]
			public <DoColliderSweepAfterRailJump>d__60(int <>1__state)
			{
			}

			[Token(Token = "0x60027D1")]
			[Address(RVA = "0xD8F720", Offset = "0xD8F720", VA = "0xD8F720", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60027D2")]
			[Address(RVA = "0xD8F724", Offset = "0xD8F724", VA = "0xD8F724", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60027D4")]
			[Address(RVA = "0xD8FA20", Offset = "0xD8FA20", VA = "0xD8FA20", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200067A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBDA4", Offset = "0x9BBDA4")]
		private sealed class <WaitThenTeleportToPrePauseLocation>d__65 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001CA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001CA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001CA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LocomotionService <>4__this;

			[Token(Token = "0x4001CAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x170004DB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60027D9")]
				[Address(RVA = "0xD902C8", Offset = "0xD902C8", VA = "0xD902C8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004DC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60027DB")]
				[Address(RVA = "0xD90338", Offset = "0xD90338", VA = "0xD90338", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60027D6")]
			[Address(RVA = "0xD8F330", Offset = "0xD8F330", VA = "0xD8F330")]
			[DebuggerHidden]
			public <WaitThenTeleportToPrePauseLocation>d__65(int <>1__state)
			{
			}

			[Token(Token = "0x60027D7")]
			[Address(RVA = "0xD8FD10", Offset = "0xD8FD10", VA = "0xD8FD10", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60027D8")]
			[Address(RVA = "0xD8FD14", Offset = "0xD8FD14", VA = "0xD8FD14", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60027DA")]
			[Address(RVA = "0xD902D0", Offset = "0xD902D0", VA = "0xD902D0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400110F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool AllowSpritWalking;

		[Token(Token = "0x4001110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool AllowQuickTurn;

		[Token(Token = "0x4001111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool AllowLightRail;

		[Token(Token = "0x4001112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public bool RestrictSpiritWalkingToLitAreas;

		[Token(Token = "0x4001113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform GnomeBoatTarget;

		[Token(Token = "0x4001114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float RadiusClearanceForTeleport;

		[Token(Token = "0x4001115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float ClickTurnThreshold;

		[Token(Token = "0x4001116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool NoClip;

		[Token(Token = "0x4001117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool smoothLoco;

		[Token(Token = "0x4001118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		public bool OnlyAllowTeleportOnMostlyVerticalSurfaces;

		[Token(Token = "0x4001119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
		public bool PerformRelocationOnFocusRegained;

		[Token(Token = "0x400111B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x9C84D0", Offset = "0x9C84D0")]
		public SpiritWalkingState spiritWalkingState;

		[Token(Token = "0x400111C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x9C8508", Offset = "0x9C8508")]
		public LightRailPassageState lightRailState;

		[Token(Token = "0x400111D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private PosRotTuple? _lastMovableRigPose;

		[Token(Token = "0x400111E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool? paused;

		[Token(Token = "0x400111F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float3? lastTeleportPos;

		[Token(Token = "0x4001120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Coroutine _postPauseDelayRoutine;

		[Token(Token = "0x4001121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3 lastKnownHeadPosition;

		[Token(Token = "0x4001122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C8540", Offset = "0x9C8540")]
		private LightRailPathZones <CurrentRailDirection>k__BackingField;

		[Token(Token = "0x4001123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C8550", Offset = "0x9C8550")]
		private ILightRailPath <CurrentRailPath>k__BackingField;

		[Token(Token = "0x4001124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool smoothLocoOverride;

		[Token(Token = "0x4001125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
		public bool2 ForceMustReleaseWalkTrigger;

		[Token(Token = "0x4001126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private readonly RaycastHit[] raycastHitBuffer;

		[Token(Token = "0x4001127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private readonly List<IPlayerTriggerable> triggerableBuffer;

		[Token(Token = "0x170002CF")]
		public LightRailPathZones CurrentRailDirection
		{
			[Token(Token = "0x6001C90")]
			[Address(RVA = "0xD8B50C", Offset = "0xD8B50C", VA = "0xD8B50C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D3BA0", Offset = "0x9D3BA0")]
			get
			{
				return default(LightRailPathZones);
			}
			[Token(Token = "0x6001C8F")]
			[Address(RVA = "0xD8CEE0", Offset = "0xD8CEE0", VA = "0xD8CEE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D3B90", Offset = "0x9D3B90")]
			private set
			{
			}
		}

		[Token(Token = "0x170002D0")]
		public ILightRailPath CurrentRailPath
		{
			[Token(Token = "0x6001C92")]
			[Address(RVA = "0xD8CEF0", Offset = "0xD8CEF0", VA = "0xD8CEF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D3BC0", Offset = "0x9D3BC0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C91")]
			[Address(RVA = "0xD8CEE8", Offset = "0xD8CEE8", VA = "0xD8CEE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D3BB0", Offset = "0x9D3BB0")]
			private set
			{
			}
		}

		[Token(Token = "0x170002D1")]
		public bool GuardianEnabled
		{
			[Token(Token = "0x6001C93")]
			[Address(RVA = "0xD8CEF8", Offset = "0xD8CEF8", VA = "0xD8CEF8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C94")]
			[Address(RVA = "0xD8CFB8", Offset = "0xD8CFB8", VA = "0xD8CFB8")]
			set
			{
			}
		}

		[Token(Token = "0x170002D2")]
		public bool IsInBoat
		{
			[Token(Token = "0x6001C95")]
			[Address(RVA = "0xD8D080", Offset = "0xD8D080", VA = "0xD8D080")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x14000036")]
		public event Action OnPostTeleport
		{
			[Token(Token = "0x6001C8D")]
			[Address(RVA = "0xD8CD08", Offset = "0xD8CD08", VA = "0xD8CD08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D3B70", Offset = "0x9D3B70")]
			add
			{
			}
			[Token(Token = "0x6001C8E")]
			[Address(RVA = "0xD8CDF4", Offset = "0xD8CDF4", VA = "0xD8CDF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D3B80", Offset = "0x9D3B80")]
			remove
			{
			}
		}

		[Token(Token = "0x6001C96")]
		[Address(RVA = "0xD8D0F8", Offset = "0xD8D0F8", VA = "0xD8D0F8")]
		public LocomotionService Setup(PlayerService playerServiceSetup)
		{
			return null;
		}

		[Token(Token = "0x6001C97")]
		[Address(RVA = "0xD8D340", Offset = "0xD8D340", VA = "0xD8D340")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9D3BD0", Offset = "0x9D3BD0")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6001C98")]
		[Address(RVA = "0xD8D3E0", Offset = "0xD8D3E0", VA = "0xD8D3E0", Slot = "4")]
		public IState InitialState()
		{
			return null;
		}

		[Token(Token = "0x6001C99")]
		[Address(RVA = "0xD8D3E8", Offset = "0xD8D3E8", VA = "0xD8D3E8")]
		public void ToStateSpiritWalking()
		{
		}

		[Token(Token = "0x6001C9A")]
		[Address(RVA = "0xD8D458", Offset = "0xD8D458", VA = "0xD8D458")]
		public void ToStateLightRail(ILightRailPath rail, Vector3 initialBoatPosition, LightRailDirection? preferredDirection)
		{
		}

		[Token(Token = "0x6001C9B")]
		[Address(RVA = "0xD8D7BC", Offset = "0xD8D7BC", VA = "0xD8D7BC")]
		public bool IsWalkButtonPressed(PlayerControllerInput input, bool mustBeVerticalOnStick)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C9C")]
		[Address(RVA = "0xD8D934", Offset = "0xD8D934", VA = "0xD8D934")]
		public ClickTurnResult IsClickTurnPressed(PlayerControllerInput input)
		{
			return default(ClickTurnResult);
		}

		[Token(Token = "0x6001C9D")]
		[Address(RVA = "0xD8DA08", Offset = "0xD8DA08", VA = "0xD8DA08")]
		public bool IsWalkButtonPressedOnEitherController(bool mustBeVerticalOnStick)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C9E")]
		[Address(RVA = "0xD8DB0C", Offset = "0xD8DB0C", VA = "0xD8DB0C")]
		public void Teleport(Vector3 target)
		{
		}

		[Token(Token = "0x6001C9F")]
		[Address(RVA = "0xD8DF60", Offset = "0xD8DF60", VA = "0xD8DF60")]
		public void TeleportPreserveY(Vector3 position)
		{
		}

		[Token(Token = "0x6001CA0")]
		[Address(RVA = "0xD8E010", Offset = "0xD8E010", VA = "0xD8E010")]
		public void Teleport(PosRotTuple pose)
		{
		}

		[Token(Token = "0x6001CA1")]
		[Address(RVA = "0xD8E110", Offset = "0xD8E110", VA = "0xD8E110")]
		public void TeleportMatchTransformPose(Transform pose)
		{
		}

		[Token(Token = "0x6001CA2")]
		[Address(RVA = "0xD8DD48", Offset = "0xD8DD48", VA = "0xD8DD48")]
		private void ForceUpdateHeadPosition()
		{
		}

		[Token(Token = "0x6001CA3")]
		[Address(RVA = "0xD8E230", Offset = "0xD8E230", VA = "0xD8E230")]
		public void RotateToFacePoint(Vector3 position)
		{
		}

		[Token(Token = "0x6001CA4")]
		[Address(RVA = "0xD8E4F8", Offset = "0xD8E4F8", VA = "0xD8E4F8")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001CA5")]
		[Address(RVA = "0xD8E584", Offset = "0xD8E584", VA = "0xD8E584")]
		public void SetForceWalkReleaseTrigger(InputHandedness handedness)
		{
		}

		[Token(Token = "0x6001CA6")]
		[Address(RVA = "0xD8E59C", Offset = "0xD8E59C", VA = "0xD8E59C")]
		public void FlushState()
		{
		}

		[Token(Token = "0x6001CA7")]
		[Address(RVA = "0xD8DDD8", Offset = "0xD8DDD8", VA = "0xD8DDD8")]
		private void ResetArmPhysics()
		{
		}

		[Token(Token = "0x6001CA8")]
		[Address(RVA = "0xD8E63C", Offset = "0xD8E63C", VA = "0xD8E63C")]
		public void TriggerLightRailTraversalSequence(ILightRailPath lightRailPath, LightRailDirection direction, float progressPercentage)
		{
		}

		[Token(Token = "0x6001CA9")]
		[Address(RVA = "0xD8EB28", Offset = "0xD8EB28", VA = "0xD8EB28")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9D3C34", Offset = "0x9D3C34")]
		private IEnumerator DoColliderSweepAfterRailJump(ILightRailPath lightRailPath, LightRailDirection direction, float progressPercentage)
		{
			return null;
		}

		[Token(Token = "0x6001CAA")]
		[Address(RVA = "0xD8EC0C", Offset = "0xD8EC0C", VA = "0xD8EC0C")]
		public void PerformTeleportTriggerSweep(Vector3 headPrevious, Vector3 headCurrent)
		{
		}

		[Token(Token = "0x6001CAB")]
		[Address(RVA = "0xD8F0F8", Offset = "0xD8F0F8", VA = "0xD8F0F8")]
		private void HandleAppPause(ApplicationPauseEvent message)
		{
		}

		[Token(Token = "0x6001CAC")]
		[Address(RVA = "0xD8F2BC", Offset = "0xD8F2BC", VA = "0xD8F2BC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9D3C98", Offset = "0x9D3C98")]
		private IEnumerator WaitThenTeleportToPrePauseLocation()
		{
			return null;
		}

		[Token(Token = "0x6001CAD")]
		[Address(RVA = "0xD8F35C", Offset = "0xD8F35C", VA = "0xD8F35C")]
		public LocomotionService()
		{
		}

		[Token(Token = "0x6001CAE")]
		[Address(RVA = "0xD8F588", Offset = "0xD8F588", VA = "0xD8F588")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D3CFC", Offset = "0x9D3CFC")]
		private void <Start>b__37_0(Player.Messages.RigWorldPositionDirtied message)
		{
		}

		[Token(Token = "0x6001CAF")]
		[Address(RVA = "0xD8F654", Offset = "0xD8F654", VA = "0xD8F654")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D3D0C", Offset = "0x9D3D0C")]
		private void <Start>b__37_1(Player.Messages.RigWorldRotationDirtied message)
		{
		}
	}
	[Token(Token = "0x20003D8")]
	public class PlantSprayService : MonoBehaviour, ServiceLocator.ILocatableService
	{
		[Serializable]
		[Token(Token = "0x200067B")]
		public struct PlantSprayGroup
		{
			[Token(Token = "0x4001CAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public LoadingZoneKey LoadingZone;

			[Token(Token = "0x4001CAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public InstancedPlantSpray[] PlantSprays;
		}

		[Token(Token = "0x200067C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBDB4", Offset = "0x9BBDB4")]
		private sealed class <DoSpawnAroundPlayerFeet>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001CAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001CAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001CAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlantSprayService <>4__this;

			[Token(Token = "0x4001CB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private PlayerService <player>5__2;

			[Token(Token = "0x4001CB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private WaitForSeconds <wait>5__3;

			[Token(Token = "0x170004DD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60027DF")]
				[Address(RVA = "0xEDBFE4", Offset = "0xEDBFE4", VA = "0xEDBFE4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004DE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60027E1")]
				[Address(RVA = "0xEDC054", Offset = "0xEDC054", VA = "0xEDC054", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60027DC")]
			[Address(RVA = "0xEDBD64", Offset = "0xEDBD64", VA = "0xEDBD64")]
			[DebuggerHidden]
			public <DoSpawnAroundPlayerFeet>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x60027DD")]
			[Address(RVA = "0xEDBD98", Offset = "0xEDBD98", VA = "0xEDBD98", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60027DE")]
			[Address(RVA = "0xEDBD9C", Offset = "0xEDBD9C", VA = "0xEDBD9C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60027E0")]
			[Address(RVA = "0xEDBFEC", Offset = "0xEDBFEC", VA = "0xEDBFEC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlantSprayGroup[] PlantSprayGroups;

		[Token(Token = "0x4001129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int CurrPlantSprayGroupIndex;

		[Token(Token = "0x400112A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool EnableSpawnAroundPlayer;

		[Token(Token = "0x400112B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Coroutine _threadSpawnPlantsAroundPlayerFeet;

		[Token(Token = "0x6001CB0")]
		[Address(RVA = "0xEDB8B0", Offset = "0xEDB8B0", VA = "0xEDB8B0")]
		public void SpawnAt(Vector3 worldPos, Vector3 worldSurfaceNormal)
		{
		}

		[Token(Token = "0x6001CB1")]
		[Address(RVA = "0xEDBB60", Offset = "0xEDBB60", VA = "0xEDBB60")]
		public void Start()
		{
		}

		[Token(Token = "0x6001CB2")]
		[Address(RVA = "0xEDBBB4", Offset = "0xEDBBB4", VA = "0xEDBBB4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001CB3")]
		[Address(RVA = "0xEDBB70", Offset = "0xEDBB70", VA = "0xEDBB70")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x9D3D1C", Offset = "0x9D3D1C")]
		public void StartSpawnAroundPlayerFeet()
		{
		}

		[Token(Token = "0x6001CB4")]
		[Address(RVA = "0xEDBD58", Offset = "0xEDBD58", VA = "0xEDBD58")]
		public void StopSpawnAroundPlayerFeet()
		{
		}

		[Token(Token = "0x6001CB5")]
		[Address(RVA = "0xEDBCE4", Offset = "0xEDBCE4", VA = "0xEDBCE4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9D3D54", Offset = "0x9D3D54")]
		private IEnumerator DoSpawnAroundPlayerFeet()
		{
			return null;
		}

		[Token(Token = "0x6001CB6")]
		[Address(RVA = "0xEDBD90", Offset = "0xEDBD90", VA = "0xEDBD90")]
		public PlantSprayService()
		{
		}
	}
	[Token(Token = "0x20003D9")]
	public class PlayerAnimationRecordingService : ServiceLocator.ILocatableService
	{
		[Token(Token = "0x200067D")]
		public enum PoseAssignMode
		{
			[Token(Token = "0x4001CB3")]
			AssignAll,
			[Token(Token = "0x4001CB4")]
			AssignAllBelowRoot,
			[Token(Token = "0x4001CB5")]
			AssignAllBelowHead
		}

		[Token(Token = "0x200067E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBDC4", Offset = "0x9BBDC4")]
		private sealed class <RecordRoutine>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001CB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001CB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001CB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlayerAnimationRecordingService <>4__this;

			[Token(Token = "0x4001CB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int seconds;

			[Token(Token = "0x4001CBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Transform playerRoot;

			[Token(Token = "0x4001CBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Transform head;

			[Token(Token = "0x4001CBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Transform leftHand;

			[Token(Token = "0x4001CBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Transform rightHand;

			[Token(Token = "0x4001CBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public bool realtimePlayback;

			[Token(Token = "0x4001CBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public Action onComplete;

			[Token(Token = "0x4001CC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private float <timeElapsed>5__2;

			[Token(Token = "0x4001CC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			private float <timeUntilNextFrame>5__3;

			[Token(Token = "0x170004DF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60027E5")]
				[Address(RVA = "0xEDE77C", Offset = "0xEDE77C", VA = "0xEDE77C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004E0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60027E7")]
				[Address(RVA = "0xEDE7EC", Offset = "0xEDE7EC", VA = "0xEDE7EC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60027E2")]
			[Address(RVA = "0xEDD454", Offset = "0xEDD454", VA = "0xEDD454")]
			[DebuggerHidden]
			public <RecordRoutine>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x60027E3")]
			[Address(RVA = "0xEDE304", Offset = "0xEDE304", VA = "0xEDE304", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60027E4")]
			[Address(RVA = "0xEDE308", Offset = "0xEDE308", VA = "0xEDE308", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60027E6")]
			[Address(RVA = "0xEDE784", Offset = "0xEDE784", VA = "0xEDE784", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200067F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBDD4", Offset = "0x9BBDD4")]
		private sealed class <PlayRecordingBackOnDummy>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001CC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001CC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001CC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlayerAnimationRecordingService <>4__this;

			[Token(Token = "0x4001CC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool loop;

			[Token(Token = "0x4001CC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <maxTime>5__2;

			[Token(Token = "0x4001CC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <timeElapsed>5__3;

			[Token(Token = "0x170004E1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60027EB")]
				[Address(RVA = "0xEDE28C", Offset = "0xEDE28C", VA = "0xEDE28C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004E2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60027ED")]
				[Address(RVA = "0xEDE2FC", Offset = "0xEDE2FC", VA = "0xEDE2FC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60027E8")]
			[Address(RVA = "0xEDD51C", Offset = "0xEDD51C", VA = "0xEDD51C")]
			[DebuggerHidden]
			public <PlayRecordingBackOnDummy>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x60027E9")]
			[Address(RVA = "0xEDE0D8", Offset = "0xEDE0D8", VA = "0xEDE0D8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60027EA")]
			[Address(RVA = "0xEDE0DC", Offset = "0xEDE0DC", VA = "0xEDE0DC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60027EC")]
			[Address(RVA = "0xEDE294", Offset = "0xEDE294", VA = "0xEDE294", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400112C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private MonoBehaviour _coroutineRunner;

		[Token(Token = "0x400112D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private RecordingPlaybackDummy _playbackDummy;

		[Token(Token = "0x400112E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private PlayerAnimationRecordV1 _animationRecord;

		[Token(Token = "0x400112F")]
		public const int FramesPerSecond = 30;

		[Token(Token = "0x4001130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PoseAssignMode AnimationPoseMode;

		[Token(Token = "0x4001131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Coroutine _recordRoutine;

		[Token(Token = "0x6001CB7")]
		[Address(RVA = "0xEDD08C", Offset = "0xEDD08C", VA = "0xEDD08C")]
		public PlayerAnimationRecordingService(MonoBehaviour coroutineRunner, RecordingPlaybackDummy playbackDummy)
		{
		}

		[Token(Token = "0x6001CB8")]
		[Address(RVA = "0xEDD188", Offset = "0xEDD188", VA = "0xEDD188")]
		public void StartRecording(int seconds, bool realtimePlayback)
		{
		}

		[Token(Token = "0x6001CB9")]
		[Address(RVA = "0xEDD194", Offset = "0xEDD194", VA = "0xEDD194")]
		public void StartRecording(int seconds, bool realtimePlayback, Action onComplete)
		{
		}

		[Token(Token = "0x6001CBA")]
		[Address(RVA = "0xEDD314", Offset = "0xEDD314", VA = "0xEDD314")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9D3DB8", Offset = "0x9D3DB8")]
		private IEnumerator RecordRoutine(int seconds, Transform playerRoot, Transform head, Transform leftHand, Transform rightHand, bool realtimePlayback, Action onComplete)
		{
			return null;
		}

		[Token(Token = "0x6001CBB")]
		[Address(RVA = "0xEDD480", Offset = "0xEDD480", VA = "0xEDD480")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9D3E1C", Offset = "0x9D3E1C")]
		private IEnumerator PlayRecordingBackOnDummy(bool loop)
		{
			return null;
		}

		[Token(Token = "0x6001CBC")]
		[Address(RVA = "0xEDD548", Offset = "0xEDD548", VA = "0xEDD548")]
		private void DummyAssignFrame(float timeElapsed)
		{
		}

		[Token(Token = "0x6001CBD")]
		[Address(RVA = "0xEDDC74", Offset = "0xEDDC74", VA = "0xEDDC74")]
		private PlayerAnimationRecordV1.AnimationFrame GenerateFrame(float time, Transform playerRoot, Transform head, Transform leftHand, Transform rightHand)
		{
			return default(PlayerAnimationRecordV1.AnimationFrame);
		}

		[Token(Token = "0x6001CBE")]
		[Address(RVA = "0xEDD6D8", Offset = "0xEDD6D8", VA = "0xEDD6D8")]
		private void AssignPoseFromFrame(float time, Transform playerRoot, Transform head, Transform leftHand, Transform rightHand, CapsuleCollider hipsCapsuleCollider, float leftHandRadius, float rightHandRadius, PoseAssignMode poseAssignMode)
		{
		}

		[Token(Token = "0x6001CBF")]
		[Address(RVA = "0xEDE070", Offset = "0xEDE070", VA = "0xEDE070")]
		public void SetDummyDisplayPosition(Vector3 transformPosition)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003DA")]
	public class PlayerAnimationRecordV1
	{
		[Serializable]
		[Token(Token = "0x2000680")]
		public struct AnimationFrame
		{
			[Token(Token = "0x4001CC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float Time;

			[Token(Token = "0x4001CC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public Vector3 RootWorldPos;

			[Token(Token = "0x4001CCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Quaternion RootWorldRot;

			[Token(Token = "0x4001CCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 HeadPosition;

			[Token(Token = "0x4001CCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Quaternion HeadRotation;

			[Token(Token = "0x4001CCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public Vector3 LeftHandPosition;

			[Token(Token = "0x4001CCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Quaternion LeftHandRotation;

			[Token(Token = "0x4001CCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public Vector3 RightHandPosition;

			[Token(Token = "0x4001CD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			public Quaternion RightHandRotation;
		}

		[Token(Token = "0x4001132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<AnimationFrame> Frames;

		[Token(Token = "0x4001133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int FramesPerSecond;

		[Token(Token = "0x4001134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int Version;

		[Token(Token = "0x170002D3")]
		public float LengthSeconds
		{
			[Token(Token = "0x6001CC5")]
			[Address(RVA = "0xEDCF4C", Offset = "0xEDCF4C", VA = "0xEDCF4C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002D4")]
		public int FrameCount
		{
			[Token(Token = "0x6001CC6")]
			[Address(RVA = "0xEDD02C", Offset = "0xEDD02C", VA = "0xEDD02C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001CC0")]
		[Address(RVA = "0xEDC49C", Offset = "0xEDC49C", VA = "0xEDC49C")]
		public PlayerAnimationRecordV1()
		{
		}

		[Token(Token = "0x6001CC1")]
		[Address(RVA = "0xEDC510", Offset = "0xEDC510", VA = "0xEDC510")]
		public PlayerAnimationRecordV1(PlayerAnimationRecordV1 copyFrom)
		{
		}

		[Token(Token = "0x6001CC2")]
		[Address(RVA = "0xEDC5DC", Offset = "0xEDC5DC", VA = "0xEDC5DC")]
		public void PrepareForRecording(int secondsOfRecording, int framesPerSecond)
		{
		}

		[Token(Token = "0x6001CC3")]
		[Address(RVA = "0xEDC67C", Offset = "0xEDC67C", VA = "0xEDC67C")]
		public void PushFrame(AnimationFrame frame)
		{
		}

		[Token(Token = "0x6001CC4")]
		[Address(RVA = "0xEDC7C0", Offset = "0xEDC7C0", VA = "0xEDC7C0")]
		public AnimationFrame GetBlendedFrame(float timeSeconds)
		{
			return default(AnimationFrame);
		}
	}
	[Token(Token = "0x20003DB")]
	public class PlayerService : MonoBehaviour, ServiceLocator.ILocatableService
	{
		[Token(Token = "0x4001135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Player Player;

		[Token(Token = "0x4001136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 _lastKnownHeadLocation;

		[Token(Token = "0x4001137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C8560", Offset = "0x9C8560")]
		private CameraFade <Fader>k__BackingField;

		[Token(Token = "0x4001138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C8570", Offset = "0x9C8570")]
		private FujiVrik <FujiVrik>k__BackingField;

		[Token(Token = "0x4001139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C8580", Offset = "0x9C8580")]
		private Camera <Camera>k__BackingField;

		[Token(Token = "0x170002D5")]
		public float HeadRadius
		{
			[Token(Token = "0x6001CC7")]
			[Address(RVA = "0xEDF914", Offset = "0xEDF914", VA = "0xEDF914")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002D6")]
		public CameraFade Fader
		{
			[Token(Token = "0x6001CC8")]
			[Address(RVA = "0xEDF920", Offset = "0xEDF920", VA = "0xEDF920")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D3E80", Offset = "0x9D3E80")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CC9")]
			[Address(RVA = "0xEDF928", Offset = "0xEDF928", VA = "0xEDF928")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D3E90", Offset = "0x9D3E90")]
			private set
			{
			}
		}

		[Token(Token = "0x170002D7")]
		public Vector3 WorldFootPosition
		{
			[Token(Token = "0x6001CCA")]
			[Address(RVA = "0xEDF930", Offset = "0xEDF930", VA = "0xEDF930")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170002D8")]
		public Vector3 WorldHeadPosition
		{
			[Token(Token = "0x6001CCB")]
			[Address(RVA = "0xEDBFA4", Offset = "0xEDBFA4", VA = "0xEDBFA4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170002D9")]
		public float VrHeadHeight
		{
			[Token(Token = "0x6001CCC")]
			[Address(RVA = "0xEDF99C", Offset = "0xEDF99C", VA = "0xEDF99C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002DA")]
		public Ray HeadUnitRay
		{
			[Token(Token = "0x6001CCD")]
			[Address(RVA = "0xEDF9D4", Offset = "0xEDF9D4", VA = "0xEDF9D4")]
			get
			{
				return default(Ray);
			}
		}

		[Token(Token = "0x170002DB")]
		public FujiVrik FujiVrik
		{
			[Token(Token = "0x6001CCE")]
			[Address(RVA = "0xEDFA68", Offset = "0xEDFA68", VA = "0xEDFA68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D3EA0", Offset = "0x9D3EA0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CCF")]
			[Address(RVA = "0xEDFA70", Offset = "0xEDFA70", VA = "0xEDFA70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D3EB0", Offset = "0x9D3EB0")]
			set
			{
			}
		}

		[Token(Token = "0x170002DC")]
		public Camera Camera
		{
			[Token(Token = "0x6001CD1")]
			[Address(RVA = "0xEDFA80", Offset = "0xEDFA80", VA = "0xEDFA80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D3ED0", Offset = "0x9D3ED0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CD0")]
			[Address(RVA = "0xEDFA78", Offset = "0xEDFA78", VA = "0xEDFA78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D3EC0", Offset = "0x9D3EC0")]
			private set
			{
			}
		}

		[Token(Token = "0x170002DD")]
		private InteractiveCore ObjectBeingHeldInLeftHand
		{
			[Token(Token = "0x6001CD2")]
			[Address(RVA = "0xEDFA88", Offset = "0xEDFA88", VA = "0xEDFA88")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002DE")]
		private InteractiveCore ObjectBeingHeldInRightHand
		{
			[Token(Token = "0x6001CD3")]
			[Address(RVA = "0xEDFB20", Offset = "0xEDFB20", VA = "0xEDFB20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CD4")]
		[Address(RVA = "0xEDAB74", Offset = "0xEDAB74", VA = "0xEDAB74")]
		public PlayerController GetLeftHand()
		{
			return null;
		}

		[Token(Token = "0x6001CD5")]
		[Address(RVA = "0xEDABE4", Offset = "0xEDABE4", VA = "0xEDABE4")]
		public PlayerController GetRightHand()
		{
			return null;
		}

		[Token(Token = "0x6001CD6")]
		[Address(RVA = "0xED9380", Offset = "0xED9380", VA = "0xED9380")]
		public PlayerController GetHand(InputHandedness hand)
		{
			return null;
		}

		[Token(Token = "0x6001CD7")]
		[Address(RVA = "0xEDFBB8", Offset = "0xEDFBB8", VA = "0xEDFBB8")]
		public PlayerControllerInput GetInput(InputHandedness hand)
		{
			return null;
		}

		[Token(Token = "0x6001CD8")]
		[Address(RVA = "0xEDFC60", Offset = "0xEDFC60", VA = "0xEDFC60")]
		public PlayerController GetOtherHand(InputHandedness handCurr)
		{
			return null;
		}

		[Token(Token = "0x6001CD9")]
		[Address(RVA = "0xEDFC7C", Offset = "0xEDFC7C", VA = "0xEDFC7C")]
		public FastMathExtension.LineSegment GetHandSegment(InputHandedness hand)
		{
			return default(FastMathExtension.LineSegment);
		}

		[Token(Token = "0x6001CDA")]
		[Address(RVA = "0xEDFD94", Offset = "0xEDFD94", VA = "0xEDFD94")]
		public FastMathExtension.LineSegmentShared GetForearmSegment(InputHandedness hand)
		{
			return default(FastMathExtension.LineSegmentShared);
		}

		[Token(Token = "0x6001CDB")]
		[Address(RVA = "0xEDFF8C", Offset = "0xEDFF8C", VA = "0xEDFF8C")]
		public Vector3 GetWorldPositionFromHeight(float percentageHeight01)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001CDC")]
		[Address(RVA = "0xEE0058", Offset = "0xEE0058", VA = "0xEE0058")]
		public InteractiveCore GetHeldObject(InputHandedness hand)
		{
			return null;
		}

		[Token(Token = "0x6001CDD")]
		public T GetHeldObject<T>(InputHandedness hand) where T : class
		{
			return null;
		}

		[Token(Token = "0x6001CDE")]
		[Address(RVA = "0xEE0074", Offset = "0xEE0074", VA = "0xEE0074")]
		public PlayerController GetHandThatsHoldingObject(GameObject heldObj)
		{
			return null;
		}

		[Token(Token = "0x6001CDF")]
		[Address(RVA = "0xEE020C", Offset = "0xEE020C", VA = "0xEE020C")]
		public float ClosestHandSqrDistance(Vector3 position)
		{
			return default(float);
		}

		[Token(Token = "0x6001CE0")]
		[Address(RVA = "0xEE0420", Offset = "0xEE0420", VA = "0xEE0420")]
		public bool HandsReady()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CE1")]
		[Address(RVA = "0xEE0450", Offset = "0xEE0450", VA = "0xEE0450")]
		public void SetBodyPhysicsActive(bool active)
		{
		}

		[Token(Token = "0x6001CE2")]
		[Address(RVA = "0xEE0568", Offset = "0xEE0568", VA = "0xEE0568")]
		public bool IsPlayerWithinRadius(Vector3 pos, float radius)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CE3")]
		[Address(RVA = "0xEE05EC", Offset = "0xEE05EC", VA = "0xEE05EC")]
		public bool IsPlayerWithinRadius3D(Vector3 pos, float radius)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CE4")]
		[Address(RVA = "0xEE0670", Offset = "0xEE0670", VA = "0xEE0670")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001CE5")]
		[Address(RVA = "0xEE078C", Offset = "0xEE078C", VA = "0xEE078C")]
		private void HandlePostLocomotionTeleportGlobalMessage(LocomotionService.Messages.PostLocomotionTeleportGlobalMessage message)
		{
		}

		[Token(Token = "0x6001CE6")]
		[Address(RVA = "0xEE089C", Offset = "0xEE089C", VA = "0xEE089C")]
		public PlayerService()
		{
		}

		[Token(Token = "0x6001CE7")]
		[Address(RVA = "0xEE08A4", Offset = "0xEE08A4", VA = "0xEE08A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D3EE0", Offset = "0x9D3EE0")]
		private void <Awake>b__44_0(WorldStateService.Messages.ZoneChangeMessage message)
		{
		}
	}
	[Token(Token = "0x20003DC")]
	public sealed class PlayerToolService : MonoBehaviour, ServiceLocator.ILocatableService
	{
		[Token(Token = "0x2000681")]
		public static class Messages
		{
			[Token(Token = "0x20006F5")]
			public enum PlayerWaterState
			{
				[Token(Token = "0x4001E79")]
				Empty,
				[Token(Token = "0x4001E7A")]
				Nothing,
				[Token(Token = "0x4001E7B")]
				Filling,
				[Token(Token = "0x4001E7C")]
				StartFilling,
				[Token(Token = "0x4001E7D")]
				Full,
				[Token(Token = "0x4001E7E")]
				EndFilling,
				[Token(Token = "0x4001E7F")]
				StartSquirt,
				[Token(Token = "0x4001E80")]
				EndSquirt
			}

			[Token(Token = "0x20006F6")]
			public struct PlayerWaterStateMessage
			{
				[Token(Token = "0x4001E81")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public InputHandedness Handedness;

				[Token(Token = "0x4001E82")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
				public PlayerWaterState WaterState;
			}

			[Token(Token = "0x20006F7")]
			public struct PlayerWaterStorageMessage
			{
				[Token(Token = "0x4001E83")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public float RawStorageAmountLeft;

				[Token(Token = "0x4001E84")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
				public float RawStorageAmountRight;

				[Token(Token = "0x1700052B")]
				public float RawStorageMaxAmount
				{
					[Token(Token = "0x600296F")]
					[Address(RVA = "0xA8835C", Offset = "0xA8835C", VA = "0xA8835C")]
					get
					{
						return default(float);
					}
				}

				[Token(Token = "0x1700052C")]
				public float PercentageLeft
				{
					[Token(Token = "0x6002970")]
					[Address(RVA = "0xA88360", Offset = "0xA88360", VA = "0xA88360")]
					get
					{
						return default(float);
					}
				}

				[Token(Token = "0x1700052D")]
				public float PercentageRight
				{
					[Token(Token = "0x6002971")]
					[Address(RVA = "0xA88384", Offset = "0xA88384", VA = "0xA88384")]
					get
					{
						return default(float);
					}
				}

				[Token(Token = "0x6002972")]
				[Address(RVA = "0xA883A8", Offset = "0xA883A8", VA = "0xA883A8")]
				public float GetPercentage(InputHandedness handedness)
				{
					return default(float);
				}
			}

			[Token(Token = "0x20006F8")]
			public struct PlayerWaterSquirtMessage
			{
				[Token(Token = "0x4001E85")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public InputHandedness Handedness;

				[Token(Token = "0x4001E86")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
				public float SquirtForce;
			}
		}

		[Token(Token = "0x2000682")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBDE4", Offset = "0x9BBDE4")]
		private sealed class <DoHandLightGemSlots>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001CD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001CD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001CD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlayerToolService <>4__this;

			[Token(Token = "0x4001CD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private PlayerService <playerService>5__2;

			[Token(Token = "0x170004E3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60027F1")]
				[Address(RVA = "0xEE22E0", Offset = "0xEE22E0", VA = "0xEE22E0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004E4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60027F3")]
				[Address(RVA = "0xEE2350", Offset = "0xEE2350", VA = "0xEE2350", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60027EE")]
			[Address(RVA = "0xEE12FC", Offset = "0xEE12FC", VA = "0xEE12FC")]
			[DebuggerHidden]
			public <DoHandLightGemSlots>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x60027EF")]
			[Address(RVA = "0xEE1F60", Offset = "0xEE1F60", VA = "0xEE1F60", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60027F0")]
			[Address(RVA = "0xEE1F64", Offset = "0xEE1F64", VA = "0xEE1F64", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60027F2")]
			[Address(RVA = "0xEE22E8", Offset = "0xEE22E8", VA = "0xEE22E8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000683")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBDF4", Offset = "0x9BBDF4")]
		private sealed class <>c__DisplayClass35_0
		{
			[Token(Token = "0x4001CD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform plantVisualization;

			[Token(Token = "0x4001CD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform planterVisualization;

			[Token(Token = "0x4001CD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TweenCallback <>9__0;

			[Token(Token = "0x4001CD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TweenCallback <>9__1;

			[Token(Token = "0x60027F4")]
			[Address(RVA = "0xEE1E10", Offset = "0xEE1E10", VA = "0xEE1E10")]
			public <>c__DisplayClass35_0()
			{
			}

			[Token(Token = "0x60027F5")]
			[Address(RVA = "0xEE1E18", Offset = "0xEE1E18", VA = "0xEE1E18")]
			internal void <ToolHandRoutine>b__0()
			{
			}

			[Token(Token = "0x60027F6")]
			[Address(RVA = "0xEE1EBC", Offset = "0xEE1EBC", VA = "0xEE1EBC")]
			internal void <ToolHandRoutine>b__1()
			{
			}
		}

		[Token(Token = "0x2000684")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBE04", Offset = "0x9BBE04")]
		private sealed class <ToolHandRoutine>d__35 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001CD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001CDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001CDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public InputHandedness handedness;

			[Token(Token = "0x4001CDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public PlayerToolService <>4__this;

			[Token(Token = "0x4001CDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private <>c__DisplayClass35_0 <>8__1;

			[Token(Token = "0x4001CDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private InteractiveCore <lastTouched>5__2;

			[Token(Token = "0x4001CDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private bool <plantInView>5__3;

			[Token(Token = "0x4001CE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
			private bool <planterInView>5__4;

			[Token(Token = "0x4001CE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private PhysicsExtension.SurfacePoint3 <hit>5__5;

			[Token(Token = "0x4001CE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Transform <plantVisualizationRay>5__6;

			[Token(Token = "0x4001CE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private TeleportationArcVisual <handArc>5__7;

			[Token(Token = "0x4001CE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private PlayerService <playerService>5__8;

			[Token(Token = "0x4001CE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private PlayerController <input>5__9;

			[Token(Token = "0x4001CE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private bool <wasHoldingObjLastFrame>5__10;

			[Token(Token = "0x4001CE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			private Cooldown <tillerVisualDirtSplashCooldown>5__11;

			[Token(Token = "0x4001CE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			private Cooldown <tillerActivationLeniency>5__12;

			[Token(Token = "0x4001CE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
			private float <timeSpendTryingToTillASeed>5__13;

			[Token(Token = "0x4001CEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			private Mesh <dirtBallVisualMesh>5__14;

			[Token(Token = "0x4001CEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			private Material <dirtBallVisualMaterial>5__15;

			[Token(Token = "0x4001CEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			private Vector3 <grabPos>5__16;

			[Token(Token = "0x4001CED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			private InteractiveCore <iCore>5__17;

			[Token(Token = "0x4001CEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			private float <timeToGrabExtend>5__18;

			[Token(Token = "0x4001CEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
			private float <timeToGrabRetract>5__19;

			[Token(Token = "0x4001CF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			private Vector3 <pos>5__20;

			[Token(Token = "0x4001CF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
			private Vector3 <targetPos>5__21;

			[Token(Token = "0x4001CF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			private float <time>5__22;

			[Token(Token = "0x170004E5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60027FA")]
				[Address(RVA = "0xEE538C", Offset = "0xEE538C", VA = "0xEE538C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004E6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60027FC")]
				[Address(RVA = "0xEE53FC", Offset = "0xEE53FC", VA = "0xEE53FC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60027F7")]
			[Address(RVA = "0xEE1328", Offset = "0xEE1328", VA = "0xEE1328")]
			[DebuggerHidden]
			public <ToolHandRoutine>d__35(int <>1__state)
			{
			}

			[Token(Token = "0x60027F8")]
			[Address(RVA = "0xEE2358", Offset = "0xEE2358", VA = "0xEE2358", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60027F9")]
			[Address(RVA = "0xEE235C", Offset = "0xEE235C", VA = "0xEE235C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60027FB")]
			[Address(RVA = "0xEE5394", Offset = "0xEE5394", VA = "0xEE5394", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400113A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float MaxFillAmount;

		[Token(Token = "0x400113B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float PullWaterSpeed;

		[Token(Token = "0x400113C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool AllowToolUse;

		[Token(Token = "0x400113D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool ShowPlantingRay;

		[Token(Token = "0x400113E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		public bool AllowRemoteSeeding;

		[Token(Token = "0x400113F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		public bool AllowRemoteGrabbing;

		[Token(Token = "0x4001140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool AllowHandExtending;

		[Token(Token = "0x4001141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool AllowRemoteHandTilling;

		[Token(Token = "0x4001142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
		public bool AutoEjectHandsWhenWaterFull;

		[Token(Token = "0x4001143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9C8590", Offset = "0x9C8590")]
		public float RemoteGrabPlantScanRadius;

		[Token(Token = "0x4001144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool GripBlocksWaterCannon;

		[Token(Token = "0x4001145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TeleportationArcVisual leftHandArc;

		[Token(Token = "0x4001146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TeleportationArcVisual rightHandArc;

		[Token(Token = "0x4001147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform[] plantVisualizations;

		[Token(Token = "0x4001148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Transform[] plantVisualRibbons;

		[Token(Token = "0x4001149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Transform[] genericVisualizations;

		[Token(Token = "0x400114A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private WaterHandCannon waterHandCannonPrefab;

		[Token(Token = "0x400114B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private PlayerHandLightGemSlot playerHandLigthGemSlotPrefab;

		[Token(Token = "0x400114C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9C8638", Offset = "0x9C8638")]
		private AnimationCurve reservesToSprayForceCurve;

		[Token(Token = "0x400114D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private SmallMovablePlanter PfbDirtMound;

		[Token(Token = "0x400114E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private WaterHandCannon leftHandCannon;

		[Token(Token = "0x400114F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private WaterHandCannon rightHandCannon;

		[Token(Token = "0x4001150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float2 fillAmount;

		[Token(Token = "0x4001151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool2 _prevIsFilling;

		[Token(Token = "0x4001152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private readonly Collider[] _colliderSingleCache;

		[Token(Token = "0x4001153")]
		private const float HandControlExtendOutScalar = 4.5f;

		[Token(Token = "0x4001154")]
		private const float HandControlPullInScalar = 8f;

		[Token(Token = "0x4001155")]
		private const float HandRetractScalar = 20f;

		[Token(Token = "0x170002DF")]
		public float CombinedWaterAmount
		{
			[Token(Token = "0x6001CE8")]
			[Address(RVA = "0xEE09B8", Offset = "0xEE09B8", VA = "0xEE09B8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001CE9")]
		[Address(RVA = "0xEE09C4", Offset = "0xEE09C4", VA = "0xEE09C4")]
		private static bool RaycastPlantingPositionOutOfHand(PlayerController input, out PhysicsExtension.SurfacePoint3 surfacePoint, out GameObject hitObject)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CEA")]
		[Address(RVA = "0xEE0B08", Offset = "0xEE0B08", VA = "0xEE0B08")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001CEB")]
		[Address(RVA = "0xEE0F38", Offset = "0xEE0F38", VA = "0xEE0F38")]
		private void Start()
		{
		}

		[Token(Token = "0x6001CEC")]
		[Address(RVA = "0xEE0F88", Offset = "0xEE0F88", VA = "0xEE0F88")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001CED")]
		[Address(RVA = "0xEE1288", Offset = "0xEE1288", VA = "0xEE1288")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9D3EF0", Offset = "0x9D3EF0")]
		private IEnumerator DoHandLightGemSlots()
		{
			return null;
		}

		[Token(Token = "0x6001CEE")]
		[Address(RVA = "0xEE11F0", Offset = "0xEE11F0", VA = "0xEE11F0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9D3F54", Offset = "0x9D3F54")]
		private IEnumerator ToolHandRoutine(InputHandedness handedness)
		{
			return null;
		}

		[Token(Token = "0x6001CEF")]
		[Address(RVA = "0xEE1354", Offset = "0xEE1354", VA = "0xEE1354")]
		private float PollUnscaledYInput(PlayerController input)
		{
			return default(float);
		}

		[Token(Token = "0x6001CF0")]
		[Address(RVA = "0xEE1448", Offset = "0xEE1448", VA = "0xEE1448")]
		public float WaterToolFillAmount(InputHandedness handedness)
		{
			return default(float);
		}

		[Token(Token = "0x6001CF1")]
		[Address(RVA = "0xEE1460", Offset = "0xEE1460", VA = "0xEE1460")]
		public bool WaterToolIsFull(InputHandedness handedness)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CF2")]
		[Address(RVA = "0xEE1484", Offset = "0xEE1484", VA = "0xEE1484")]
		private void WaterToolUpdate(InputHandedness handedness, PlayerController input, PlayerService playerService)
		{
		}

		[Token(Token = "0x6001CF3")]
		[Address(RVA = "0xEE1B40", Offset = "0xEE1B40", VA = "0xEE1B40")]
		private void _AssignCannon(WaterHandCannon cannon, PlayerController hand)
		{
		}

		[Token(Token = "0x6001CF4")]
		[Address(RVA = "0xEE18D0", Offset = "0xEE18D0", VA = "0xEE18D0")]
		private void TickCannon(WaterHandCannon cannon, PlayerController hand, ref float waterStore)
		{
		}

		[Token(Token = "0x6001CF5")]
		[Address(RVA = "0xEE15F8", Offset = "0xEE15F8", VA = "0xEE15F8")]
		private void TickHandPump(InputHandedness hand, PlayerService playerService, ref float waterStore)
		{
		}

		[Token(Token = "0x6001CF6")]
		[Address(RVA = "0xEE1C94", Offset = "0xEE1C94", VA = "0xEE1C94")]
		public void RemoveAllWater()
		{
		}

		[Token(Token = "0x6001CF7")]
		[Address(RVA = "0xEE1C9C", Offset = "0xEE1C9C", VA = "0xEE1C9C")]
		public void SetWater(float percentage)
		{
		}

		[Token(Token = "0x6001CF8")]
		[Address(RVA = "0xEE1CF4", Offset = "0xEE1CF4", VA = "0xEE1CF4")]
		public bool IsCannonSpraying(InputHandedness hand)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CF9")]
		[Address(RVA = "0xEE1D3C", Offset = "0xEE1D3C", VA = "0xEE1D3C")]
		public PlayerToolService()
		{
		}
	}
	[Token(Token = "0x20003DD")]
	public class SearchableSceneObject : MonoBehaviour
	{
		[Token(Token = "0x4001156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string SearchKey;

		[Token(Token = "0x6001CFA")]
		[Address(RVA = "0xEEC4CC", Offset = "0xEEC4CC", VA = "0xEEC4CC")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001CFB")]
		[Address(RVA = "0xEEC6BC", Offset = "0xEEC6BC", VA = "0xEEC6BC")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6001CFC")]
		[Address(RVA = "0xEEC8EC", Offset = "0xEEC8EC", VA = "0xEEC8EC")]
		public SearchableSceneObject()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003DE")]
	public struct SearchableObjectField
	{
		[Token(Token = "0x4001157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string Key;

		[Token(Token = "0x4001158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private object instance;

		[Token(Token = "0x6001CFD")]
		[Address(RVA = "0xEEC2C4", Offset = "0xEEC2C4", VA = "0xEEC2C4")]
		public static implicit operator SearchableObjectField(string key)
		{
			return default(SearchableObjectField);
		}

		[Token(Token = "0x6001CFE")]
		public T Resolve<T>() where T : Component
		{
			return null;
		}

		[Token(Token = "0x6001CFF")]
		[Address(RVA = "0xA8857C", Offset = "0xA8857C", VA = "0xA8857C")]
		public GameObject Resolve()
		{
			return null;
		}

		[Token(Token = "0x6001D00")]
		[Address(RVA = "0xA88584", Offset = "0xA88584", VA = "0xA88584")]
		public bool Exists()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003DF")]
	public class SearchableSceneObjectService : ServiceLocator.ILocatableService
	{
		[Token(Token = "0x2000685")]
		public static class Validation
		{
			[Serializable]
			[Token(Token = "0x20006F9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BC204", Offset = "0x9BC204")]
			private sealed class <>c
			{
				[Token(Token = "0x4001E87")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public static readonly <>c <>9;

				[Token(Token = "0x4001E88")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public static Func<FieldInfo, bool> <>9__0_0;

				[Token(Token = "0x6002974")]
				[Address(RVA = "0xEED0EC", Offset = "0xEED0EC", VA = "0xEED0EC")]
				public <>c()
				{
				}

				[Token(Token = "0x6002975")]
				[Address(RVA = "0xEED0F4", Offset = "0xEED0F4", VA = "0xEED0F4")]
				internal bool <ValidateScene>b__0_0(FieldInfo field)
				{
					return default(bool);
				}
			}

			[Token(Token = "0x60027FD")]
			[Address(RVA = "0xEEC96C", Offset = "0xEEC96C", VA = "0xEEC96C")]
			public static void ValidateScene(Scene scene)
			{
			}
		}

		[Token(Token = "0x4001159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly bool displayWarnings;

		[Token(Token = "0x400115A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Dictionary<string, SearchableSceneObject> searchableSceneObjects;

		[Token(Token = "0x6001D01")]
		[Address(RVA = "0xEEC530", Offset = "0xEEC530", VA = "0xEEC530")]
		public void AddToSearchIndex(SearchableSceneObject searchableSceneObject)
		{
		}

		[Token(Token = "0x6001D02")]
		[Address(RVA = "0xEEC740", Offset = "0xEEC740", VA = "0xEEC740")]
		public void RemoveFromSearchIndex(SearchableSceneObject searchableSceneObject)
		{
		}

		[Token(Token = "0x6001D03")]
		[Address(RVA = "0xEEC3D8", Offset = "0xEEC3D8", VA = "0xEEC3D8")]
		public SearchableSceneObject LocateSearchableSceneObject(string searchKey, bool errorIfNotFound = true)
		{
			return null;
		}

		[Token(Token = "0x6001D04")]
		public T LocateSearchableSceneObject<T>(string searchKey, bool errorIfNotFound = true) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6001D05")]
		[Address(RVA = "0xEEC8F4", Offset = "0xEEC8F4", VA = "0xEEC8F4")]
		public SearchableSceneObjectService()
		{
		}
	}
	[Token(Token = "0x20003E0")]
	public sealed class SpawnService : ServiceLocator.ILocatableService
	{
		[Serializable]
		[Token(Token = "0x2000686")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBE14", Offset = "0x9BBE14")]
		private sealed class <>c
		{
			[Token(Token = "0x4001CF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001CF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<PersistentEntity, bool> <>9__11_0;

			[Token(Token = "0x60027FF")]
			[Address(RVA = "0xBD8638", Offset = "0xBD8638", VA = "0xBD8638")]
			public <>c()
			{
			}

			[Token(Token = "0x6002800")]
			[Address(RVA = "0xBD8640", Offset = "0xBD8640", VA = "0xBD8640")]
			internal bool <ListAllSpawnableObjects>b__11_0(PersistentEntity n)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400115B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly PrefabLookupTable prefabLut;

		[Token(Token = "0x6001D06")]
		[Address(RVA = "0xBD7EC8", Offset = "0xBD7EC8", VA = "0xBD7EC8")]
		public SpawnService(PrefabLookupTable prefabLutInstance)
		{
		}

		[Token(Token = "0x6001D07")]
		public T GetInstance<T>(bool newAndActive = true) where T : Component
		{
			return null;
		}

		[Token(Token = "0x6001D08")]
		public T GetInstance<T>(LoadingZoneKey zone, bool newAndActive = true) where T : Component
		{
			return null;
		}

		[Token(Token = "0x6001D09")]
		[Address(RVA = "0xBD7EF4", Offset = "0xBD7EF4", VA = "0xBD7EF4")]
		public GameObject GetInstance(GameObject prefabType)
		{
			return null;
		}

		[Token(Token = "0x6001D0A")]
		[Address(RVA = "0xBD7B60", Offset = "0xBD7B60", VA = "0xBD7B60")]
		public PersistentEntity GetInstance(PersistentEntity prefabType, bool newAndActive = true)
		{
			return null;
		}

		[Token(Token = "0x6001D0B")]
		[Address(RVA = "0xBD809C", Offset = "0xBD809C", VA = "0xBD809C")]
		public PersistentEntity GetInstance(PersistentEntity prefabType, LoadingZoneKey zone, bool newAndActive = true)
		{
			return null;
		}

		[Token(Token = "0x6001D0C")]
		[Address(RVA = "0xBD7A04", Offset = "0xBD7A04", VA = "0xBD7A04")]
		public void DestroyInstance(GameObject persistentObject)
		{
		}

		[Token(Token = "0x6001D0D")]
		[Address(RVA = "0xBD83BC", Offset = "0xBD83BC", VA = "0xBD83BC")]
		public void DestroyInstance(MonoBehaviour persistentObject)
		{
		}

		[Token(Token = "0x6001D0E")]
		[Address(RVA = "0xBD78E0", Offset = "0xBD78E0", VA = "0xBD78E0")]
		public void DestroyInstance(PersistentEntity persistentObject)
		{
		}

		[Token(Token = "0x6001D0F")]
		[Address(RVA = "0xBD8414", Offset = "0xBD8414", VA = "0xBD8414")]
		public PersistentEntity GetPrefab(PersistentEntity prefabType)
		{
			return null;
		}

		[Token(Token = "0x6001D10")]
		[Address(RVA = "0xBD849C", Offset = "0xBD849C", VA = "0xBD849C")]
		public IEnumerable<PersistentEntity> ListAllSpawnableObjects()
		{
			return null;
		}

		[Token(Token = "0x6001D11")]
		[Address(RVA = "0xBD8018", Offset = "0xBD8018", VA = "0xBD8018")]
		public PersistentEntity GetInstanceByPrefabId(string prefabType, bool newAndActive = true)
		{
			return null;
		}

		[Token(Token = "0x6001D12")]
		[Address(RVA = "0xBD80E8", Offset = "0xBD80E8", VA = "0xBD80E8")]
		private PersistentEntity GetInstance(string prefabType, LoadingZoneKey zone, bool newAndActive = true)
		{
			return null;
		}

		[Token(Token = "0x6001D13")]
		[Address(RVA = "0xBD859C", Offset = "0xBD859C", VA = "0xBD859C")]
		public string GetPrefab(string gameObjectName)
		{
			return null;
		}

		[Token(Token = "0x6001D14")]
		public string GetPrefab<T>() where T : class
		{
			return null;
		}
	}
	[Token(Token = "0x20003E1")]
	public class TaskQueueService : MonoBehaviour, ServiceLocator.ILocatableService
	{
		[Token(Token = "0x400115C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Queue<TaskQueue<MonoBehaviour>> _taskPool;

		[Token(Token = "0x400115D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private LinkedList<TaskQueue<MonoBehaviour>> _runningTasks;

		[Token(Token = "0x6001D15")]
		[Address(RVA = "0xBDAC54", Offset = "0xBDAC54", VA = "0xBDAC54")]
		public static TaskQueue<MonoBehaviour> Empty(MonoBehaviour mono)
		{
			return null;
		}

		[Token(Token = "0x6001D16")]
		[Address(RVA = "0xBDAD00", Offset = "0xBDAD00", VA = "0xBDAD00")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D17")]
		[Address(RVA = "0xBDAE98", Offset = "0xBDAE98", VA = "0xBDAE98")]
		private TaskQueue<MonoBehaviour> GetEmptyTaskQueue()
		{
			return null;
		}

		[Token(Token = "0x6001D18")]
		[Address(RVA = "0xBDACCC", Offset = "0xBDACCC", VA = "0xBDACCC")]
		public TaskQueue<MonoBehaviour> GetEmptyTaskQueue(MonoBehaviour target)
		{
			return null;
		}

		[Token(Token = "0x6001D19")]
		[Address(RVA = "0xBDAF80", Offset = "0xBDAF80", VA = "0xBDAF80")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x9D3FB8", Offset = "0x9D3FB8")]
		public void LogTaskQueueCount()
		{
		}

		[Token(Token = "0x6001D1A")]
		[Address(RVA = "0xBDB1E4", Offset = "0xBDB1E4", VA = "0xBDB1E4")]
		public TaskQueueService()
		{
		}
	}
	[Token(Token = "0x20003E2")]
	public class UserService : MonoBehaviour, ServiceLocator.ILocatableService
	{
		[Token(Token = "0x2000687")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBE24", Offset = "0x9BBE24")]
		private sealed class <>c__DisplayClass12_0
		{
			[Token(Token = "0x4001CF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Message entitlementMessage;

			[Token(Token = "0x6002801")]
			[Address(RVA = "0xBDC6A0", Offset = "0xBDC6A0", VA = "0xBDC6A0")]
			public <>c__DisplayClass12_0()
			{
			}

			[Token(Token = "0x6002802")]
			[Address(RVA = "0xBDC6A8", Offset = "0xBDC6A8", VA = "0xBDC6A8")]
			internal void <LoginRoutine>b__0(Message message)
			{
			}

			[Token(Token = "0x6002803")]
			[Address(RVA = "0xBDC6B0", Offset = "0xBDC6B0", VA = "0xBDC6B0")]
			internal bool <LoginRoutine>b__1()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000688")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBE34", Offset = "0x9BBE34")]
		private sealed class <>c__DisplayClass12_1
		{
			[Token(Token = "0x4001CF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Message<User> userMessage;

			[Token(Token = "0x6002804")]
			[Address(RVA = "0xBDC6C0", Offset = "0xBDC6C0", VA = "0xBDC6C0")]
			public <>c__DisplayClass12_1()
			{
			}

			[Token(Token = "0x6002805")]
			[Address(RVA = "0xBDC6C8", Offset = "0xBDC6C8", VA = "0xBDC6C8")]
			internal void <LoginRoutine>b__2(Message<User> message)
			{
			}

			[Token(Token = "0x6002806")]
			[Address(RVA = "0xBDC6D0", Offset = "0xBDC6D0", VA = "0xBDC6D0")]
			internal bool <LoginRoutine>b__3()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000689")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBE44", Offset = "0x9BBE44")]
		private sealed class <LoginRoutine>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001CF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001CF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001CF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UserService <>4__this;

			[Token(Token = "0x4001CFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass12_0 <>8__1;

			[Token(Token = "0x4001CFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private <>c__DisplayClass12_1 <>8__2;

			[Token(Token = "0x170004E7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600280A")]
				[Address(RVA = "0xBDD6B8", Offset = "0xBDD6B8", VA = "0xBDD6B8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004E8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600280C")]
				[Address(RVA = "0xBDD728", Offset = "0xBDD728", VA = "0xBDD728", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002807")]
			[Address(RVA = "0xBDC4C8", Offset = "0xBDC4C8", VA = "0xBDC4C8")]
			[DebuggerHidden]
			public <LoginRoutine>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6002808")]
			[Address(RVA = "0xBDCC78", Offset = "0xBDCC78", VA = "0xBDCC78", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002809")]
			[Address(RVA = "0xBDCC7C", Offset = "0xBDCC7C", VA = "0xBDCC7C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600280B")]
			[Address(RVA = "0xBDD6C0", Offset = "0xBDD6C0", VA = "0xBDD6C0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200068A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBE54", Offset = "0x9BBE54")]
		private sealed class <>c__DisplayClass13_0
		{
			[Token(Token = "0x4001CFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Message<UserList> userListMessage;

			[Token(Token = "0x600280D")]
			[Address(RVA = "0xBDC6E0", Offset = "0xBDC6E0", VA = "0xBDC6E0")]
			public <>c__DisplayClass13_0()
			{
			}

			[Token(Token = "0x600280E")]
			[Address(RVA = "0xBDC6E8", Offset = "0xBDC6E8", VA = "0xBDC6E8")]
			internal void <UpdateFriendsList>b__0(Message<UserList> message)
			{
			}

			[Token(Token = "0x600280F")]
			[Address(RVA = "0xBDC6F0", Offset = "0xBDC6F0", VA = "0xBDC6F0")]
			internal bool <UpdateFriendsList>b__1()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200068B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBE64", Offset = "0x9BBE64")]
		private sealed class <UpdateFriendsList>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001CFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001CFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001CFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private <>c__DisplayClass13_0 <>8__1;

			[Token(Token = "0x4001D00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public UserService <>4__this;

			[Token(Token = "0x170004E9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002813")]
				[Address(RVA = "0xBDD994", Offset = "0xBDD994", VA = "0xBDD994", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004EA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002815")]
				[Address(RVA = "0xBDDA04", Offset = "0xBDDA04", VA = "0xBDDA04", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002810")]
			[Address(RVA = "0xBDC568", Offset = "0xBDC568", VA = "0xBDC568")]
			[DebuggerHidden]
			public <UpdateFriendsList>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6002811")]
			[Address(RVA = "0xBDD730", Offset = "0xBDD730", VA = "0xBDD730", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002812")]
			[Address(RVA = "0xBDD734", Offset = "0xBDD734", VA = "0xBDD734", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002814")]
			[Address(RVA = "0xBDD99C", Offset = "0xBDD99C", VA = "0xBDD99C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200068C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBE74", Offset = "0x9BBE74")]
		private sealed class <DoGetUserImageTextureSmall>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UserService <>4__this;

			[Token(Token = "0x4001D04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action<Texture> callback;

			[Token(Token = "0x4001D05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UnityWebRequest <uwr>5__2;

			[Token(Token = "0x170004EB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600281A")]
				[Address(RVA = "0xBDCC00", Offset = "0xBDCC00", VA = "0xBDCC00", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004EC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600281C")]
				[Address(RVA = "0xBDCC70", Offset = "0xBDCC70", VA = "0xBDCC70", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002816")]
			[Address(RVA = "0xBDC66C", Offset = "0xBDC66C", VA = "0xBDC66C")]
			[DebuggerHidden]
			public <DoGetUserImageTextureSmall>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6002817")]
			[Address(RVA = "0xBDC700", Offset = "0xBDC700", VA = "0xBDC700", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002818")]
			[Address(RVA = "0xBDC7EC", Offset = "0xBDC7EC", VA = "0xBDC7EC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002819")]
			[Address(RVA = "0xBDC72C", Offset = "0xBDC72C", VA = "0xBDC72C")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x600281B")]
			[Address(RVA = "0xBDCC08", Offset = "0xBDCC08", VA = "0xBDCC08", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400115E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C8694", Offset = "0x9C8694")]
		private UserServiceState <State>k__BackingField;

		[Token(Token = "0x400115F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Texture2D _userProfilePictureSmall;

		[Token(Token = "0x4001160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C86A4", Offset = "0x9C86A4")]
		private bool <EntitlementChecksCompleted>k__BackingField;

		[Token(Token = "0x4001161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private User _loggedInUser;

		[Token(Token = "0x4001162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private UserList _friendsList;

		[Token(Token = "0x170002E0")]
		public UserServiceState State
		{
			[Token(Token = "0x6001D1C")]
			[Address(RVA = "0xBDC278", Offset = "0xBDC278", VA = "0xBDC278")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D4000", Offset = "0x9D4000")]
			get
			{
				return default(UserServiceState);
			}
			[Token(Token = "0x6001D1B")]
			[Address(RVA = "0xBDC270", Offset = "0xBDC270", VA = "0xBDC270")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D3FF0", Offset = "0x9D3FF0")]
			private set
			{
			}
		}

		[Token(Token = "0x170002E1")]
		public bool EntitlementChecksCompleted
		{
			[Token(Token = "0x6001D1E")]
			[Address(RVA = "0xBDC28C", Offset = "0xBDC28C", VA = "0xBDC28C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D4020", Offset = "0x9D4020")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D1D")]
			[Address(RVA = "0xBDC280", Offset = "0xBDC280", VA = "0xBDC280")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D4010", Offset = "0x9D4010")]
			private set
			{
			}
		}

		[Token(Token = "0x6001D1F")]
		[Address(RVA = "0xBDC294", Offset = "0xBDC294", VA = "0xBDC294")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001D20")]
		[Address(RVA = "0xBDC454", Offset = "0xBDC454", VA = "0xBDC454")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9D4030", Offset = "0x9D4030")]
		private IEnumerator LoginRoutine()
		{
			return null;
		}

		[Token(Token = "0x6001D21")]
		[Address(RVA = "0xBDC4F4", Offset = "0xBDC4F4", VA = "0xBDC4F4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9D4094", Offset = "0x9D4094")]
		private IEnumerator UpdateFriendsList()
		{
			return null;
		}

		[Token(Token = "0x6001D22")]
		[Address(RVA = "0xBDC594", Offset = "0xBDC594", VA = "0xBDC594")]
		public void GetUserImageTextureSmall(Action<Texture> callback)
		{
		}

		[Token(Token = "0x6001D23")]
		[Address(RVA = "0xBDC5D4", Offset = "0xBDC5D4", VA = "0xBDC5D4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9D40F8", Offset = "0x9D40F8")]
		private IEnumerator DoGetUserImageTextureSmall(Action<Texture> callback)
		{
			return null;
		}

		[Token(Token = "0x6001D24")]
		[Address(RVA = "0xBDC698", Offset = "0xBDC698", VA = "0xBDC698")]
		public UserService()
		{
		}
	}
	[Token(Token = "0x20003E3")]
	public enum UserServiceState
	{
		[Token(Token = "0x4001164")]
		Uninitialized,
		[Token(Token = "0x4001165")]
		Initializing,
		[Token(Token = "0x4001166")]
		LoggingIn,
		[Token(Token = "0x4001167")]
		LoggedInAndReady,
		[Token(Token = "0x4001168")]
		UnEntitled
	}
	[Token(Token = "0x20003E4")]
	public class VisualEffectsService : MonoBehaviour, ServiceLocator.ILocatableService
	{
		[Token(Token = "0x200068D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBE84", Offset = "0x9BBE84")]
		private sealed class <Start>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VisualEffectsService <>4__this;

			[Token(Token = "0x4001D09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x170004ED")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002820")]
				[Address(RVA = "0xBDFADC", Offset = "0xBDFADC", VA = "0xBDFADC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004EE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002822")]
				[Address(RVA = "0xBDFB4C", Offset = "0xBDFB4C", VA = "0xBDFB4C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600281D")]
			[Address(RVA = "0xBDDB58", Offset = "0xBDDB58", VA = "0xBDDB58")]
			[DebuggerHidden]
			public <Start>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x600281E")]
			[Address(RVA = "0xBDF4F8", Offset = "0xBDF4F8", VA = "0xBDF4F8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600281F")]
			[Address(RVA = "0xBDF4FC", Offset = "0xBDF4FC", VA = "0xBDF4FC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002821")]
			[Address(RVA = "0xBDFAE4", Offset = "0xBDFAE4", VA = "0xBDFAE4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200068E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBE94", Offset = "0x9BBE94")]
		private sealed class <>c__DisplayClass38_0
		{
			[Token(Token = "0x4001D0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Color highlightColor;

			[Token(Token = "0x4001D0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MaterialPropertyBlock block;

			[Token(Token = "0x4001D0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VisualEffectsService <>4__this;

			[Token(Token = "0x4001D0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Renderer renderer;

			[Token(Token = "0x6002823")]
			[Address(RVA = "0xBDDECC", Offset = "0xBDDECC", VA = "0xBDDECC")]
			public <>c__DisplayClass38_0()
			{
			}

			[Token(Token = "0x6002824")]
			[Address(RVA = "0xBDEC80", Offset = "0xBDEC80", VA = "0xBDEC80")]
			internal Color <PulsateOverlay>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6002825")]
			[Address(RVA = "0xBDEC8C", Offset = "0xBDEC8C", VA = "0xBDEC8C")]
			internal void <PulsateOverlay>b__1(Color x)
			{
			}

			[Token(Token = "0x6002826")]
			[Address(RVA = "0xBDEC98", Offset = "0xBDEC98", VA = "0xBDEC98")]
			internal void <PulsateOverlay>b__2()
			{
			}
		}

		[Token(Token = "0x200068F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBEA4", Offset = "0x9BBEA4")]
		private sealed class <DoSpawnRadialFlowerPoof>d__49 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float totalTimeSeconds;

			[Token(Token = "0x4001D11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int innerRingCount;

			[Token(Token = "0x4001D12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float outerRadius;

			[Token(Token = "0x4001D13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float3 worldCenter;

			[Token(Token = "0x4001D14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public int flowersPerRingLevel;

			[Token(Token = "0x4001D15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <timePerRing>5__2;

			[Token(Token = "0x4001D16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private int <currentRing>5__3;

			[Token(Token = "0x4001D17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float <ringWaitTime>5__4;

			[Token(Token = "0x170004EF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600282A")]
				[Address(RVA = "0xBDF480", Offset = "0xBDF480", VA = "0xBDF480", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004F0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600282C")]
				[Address(RVA = "0xBDF4F0", Offset = "0xBDF4F0", VA = "0xBDF4F0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002827")]
			[Address(RVA = "0xBDEA38", Offset = "0xBDEA38", VA = "0xBDEA38")]
			[DebuggerHidden]
			public <DoSpawnRadialFlowerPoof>d__49(int <>1__state)
			{
			}

			[Token(Token = "0x6002828")]
			[Address(RVA = "0xBDF170", Offset = "0xBDF170", VA = "0xBDF170", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002829")]
			[Address(RVA = "0xBDF174", Offset = "0xBDF174", VA = "0xBDF174", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600282B")]
			[Address(RVA = "0xBDF488", Offset = "0xBDF488", VA = "0xBDF488", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000690")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBEB4", Offset = "0x9BBEB4")]
		private sealed class <DoFlowerTrailPoof>d__51 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float unitsPerSecond;

			[Token(Token = "0x4001D1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float3 worldStartPosition;

			[Token(Token = "0x4001D1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float3 worldEndPosition;

			[Token(Token = "0x4001D1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public int flowersPerUnit;

			[Token(Token = "0x4001D1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public float pathThickness;

			[Token(Token = "0x4001D1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Action onComplete;

			[Token(Token = "0x4001D20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private float <totalTime>5__2;

			[Token(Token = "0x4001D21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private float <flowersPerSecond>5__3;

			[Token(Token = "0x4001D22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private float <timeElapsed>5__4;

			[Token(Token = "0x4001D23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			private float <timeSinceLastFlower>5__5;

			[Token(Token = "0x170004F1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002830")]
				[Address(RVA = "0xBDF0F8", Offset = "0xBDF0F8", VA = "0xBDF0F8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004F2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002832")]
				[Address(RVA = "0xBDF168", Offset = "0xBDF168", VA = "0xBDF168", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600282D")]
			[Address(RVA = "0xBDEBC4", Offset = "0xBDEBC4", VA = "0xBDEBC4")]
			[DebuggerHidden]
			public <DoFlowerTrailPoof>d__51(int <>1__state)
			{
			}

			[Token(Token = "0x600282E")]
			[Address(RVA = "0xBDEDA4", Offset = "0xBDEDA4", VA = "0xBDEDA4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600282F")]
			[Address(RVA = "0xBDEDA8", Offset = "0xBDEDA8", VA = "0xBDEDA8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002831")]
			[Address(RVA = "0xBDF100", Offset = "0xBDF100", VA = "0xBDF100", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LightGemVfx lightGemEmitterInstance;

		[Token(Token = "0x400116A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WorldSpaceParticleVfx smallPlantPoofParticles;

		[Token(Token = "0x400116B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public WorldSpaceParticleVfx bigPlantPoofParticles;

		[Token(Token = "0x400116C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public WorldSpaceParticleVfx microLightGemSparkParticles;

		[Token(Token = "0x400116D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public WorldSpaceParticleVfx waterSpherePoofParticles;

		[Token(Token = "0x400116E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public WorldSpaceParticleVfx dirtSplashParicles;

		[Token(Token = "0x400116F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public WorldSpaceParticleVfx lightRingTunerParticles;

		[Token(Token = "0x4001170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public WorldSpaceParticleVfx heartParticles;

		[Token(Token = "0x4001171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Material VendorInvisibleMaterial;

		[Token(Token = "0x4001172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject pfbDirtBall;

		[Token(Token = "0x4001173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GameObject pfbShineEffect;

		[Token(Token = "0x4001174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public WorldSpaceParticleVfx strokingSparks;

		[Token(Token = "0x4001175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool ForceSortingLayerFix;

		[Token(Token = "0x4001176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Material _dirtBallmat;

		[Token(Token = "0x4001177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Mesh _dirtBallmesh;

		[Token(Token = "0x4001178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public TouchRingEffect touchRingEffectProto;

		[Token(Token = "0x4001179")]
		private const int _numTouchRingCached = 16;

		[Token(Token = "0x400117A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private TouchRingEffect[] _touchRingEffectCache;

		[Token(Token = "0x400117B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Material _shineMaterial;

		[Token(Token = "0x400117C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Mesh _shineMesh;

		[Token(Token = "0x400117D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private int uniformId_FujiOverlayColor;

		[Token(Token = "0x400117E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Queue<GameObject> _dirtballs;

		[Token(Token = "0x6001D25")]
		[Address(RVA = "0xBDDA0C", Offset = "0xBDDA0C", VA = "0xBDDA0C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D26")]
		[Address(RVA = "0xBDDAE4", Offset = "0xBDDAE4", VA = "0xBDDAE4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9D415C", Offset = "0x9D415C")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6001D27")]
		[Address(RVA = "0xBDDB84", Offset = "0xBDDB84", VA = "0xBDDB84")]
		public void SetLightSparkTargetWorld(Transform target)
		{
		}

		[Token(Token = "0x6001D28")]
		[Address(RVA = "0xBDDBB4", Offset = "0xBDDBB4", VA = "0xBDDBB4")]
		public void EmitPyramidLightGemSpark(Vector3 v3, int count)
		{
		}

		[Token(Token = "0x6001D29")]
		[Address(RVA = "0xBDDC14", Offset = "0xBDDC14", VA = "0xBDDC14")]
		public void EmitPlantingPoof(Vector3 v3, int count = 10)
		{
		}

		[Token(Token = "0x6001D2A")]
		[Address(RVA = "0xBDDC74", Offset = "0xBDDC74", VA = "0xBDDC74")]
		public void EmitGemCollectPoof(Vector3 v3, int count = 5)
		{
		}

		[Token(Token = "0x6001D2B")]
		[Address(RVA = "0xBDDCD4", Offset = "0xBDDCD4", VA = "0xBDDCD4")]
		public void EmitGemCollectPoof(Vector3 v3)
		{
		}

		[Token(Token = "0x6001D2C")]
		[Address(RVA = "0xBDDCDC", Offset = "0xBDDCDC", VA = "0xBDDCDC")]
		public void EmitBasicStrokingPoof(Vector3 v3)
		{
		}

		[Token(Token = "0x6001D2D")]
		[Address(RVA = "0xBD79A8", Offset = "0xBD79A8", VA = "0xBD79A8")]
		public void EmitBigPlantingPoof(Vector3 v3)
		{
		}

		[Token(Token = "0x6001D2E")]
		[Address(RVA = "0xBDDD38", Offset = "0xBDDD38", VA = "0xBDDD38")]
		public void PlayTouchRingEffect(Vector3 pos, Color color)
		{
		}

		[Token(Token = "0x6001D2F")]
		[Address(RVA = "0xBDDE2C", Offset = "0xBDDE2C", VA = "0xBDDE2C")]
		public void EmitHeart(Vector3 pos)
		{
		}

		[Token(Token = "0x6001D30")]
		[Address(RVA = "0xBDDE88", Offset = "0xBDDE88", VA = "0xBDDE88")]
		public void EmitTouchRingEffect(Vector3 pos)
		{
		}

		[Token(Token = "0x6001D31")]
		[Address(RVA = "0xBD5958", Offset = "0xBD5958", VA = "0xBD5958")]
		public void PlayTouchRingEffect(Vector3 pos, float animTime = 0.3f, float ringEndScale = 0.15f, float ringThicknessStart = 0.015f, [Optional] Color? color, float ringStartScale = 0f)
		{
		}

		[Token(Token = "0x6001D32")]
		[Address(RVA = "0xBD76F8", Offset = "0xBD76F8", VA = "0xBD76F8")]
		public void PlayTouchRingEffect(Vector3 pos, Quaternion rot, float animTime = 0.3f, float ringEndScale = 0.15f, float ringThicknessStart = 0.015f, [Optional] Color? color, float ringStartScale = 0f)
		{
		}

		[Token(Token = "0x6001D33")]
		[Address(RVA = "0xBD9650", Offset = "0xBD9650", VA = "0xBD9650")]
		public void EmitWaterPoof(Vector3 v3)
		{
		}

		[Token(Token = "0x6001D34")]
		[Address(RVA = "0xBD7A5C", Offset = "0xBD7A5C", VA = "0xBD7A5C")]
		public void EmitDirtSplash(Vector3 v3, int count = 5)
		{
		}

		[Token(Token = "0x6001D35")]
		[Address(RVA = "0xBD95F0", Offset = "0xBD95F0", VA = "0xBD95F0")]
		public void EmitLightRingTunerPfx(Vector3 v3, int count = 5)
		{
		}

		[Token(Token = "0x6001D36")]
		[Address(RVA = "0xBD3034", Offset = "0xBD3034", VA = "0xBD3034")]
		public void PulsateOverlay(Renderer renderer, float pulseTime = 0.3f, [Optional] MaterialPropertyBlock block)
		{
		}

		[Token(Token = "0x6001D37")]
		[Address(RVA = "0xBDDED4", Offset = "0xBDDED4", VA = "0xBDDED4")]
		public GameObject BorrowDirtBall()
		{
			return null;
		}

		[Token(Token = "0x6001D38")]
		[Address(RVA = "0xBDE034", Offset = "0xBDE034", VA = "0xBDE034")]
		public void ReturnDirtBall(GameObject dirtBall)
		{
		}

		[Token(Token = "0x6001D39")]
		[Address(RVA = "0xBD7ABC", Offset = "0xBD7ABC", VA = "0xBD7ABC")]
		public void DrawHoloDirtBall(float3 target, float scale)
		{
		}

		[Token(Token = "0x6001D3A")]
		[Address(RVA = "0xBDE0C0", Offset = "0xBDE0C0", VA = "0xBDE0C0")]
		public void DrawDirtBall(float3 target, quaternion rot, float scale)
		{
		}

		[Token(Token = "0x6001D3B")]
		[Address(RVA = "0xBDE270", Offset = "0xBDE270", VA = "0xBDE270")]
		public void DrawShine(Transform target, float scale)
		{
		}

		[Token(Token = "0x6001D3C")]
		[Address(RVA = "0xBDE550", Offset = "0xBDE550", VA = "0xBDE550")]
		public void DrawShine(float3 pos, float scale)
		{
		}

		[Token(Token = "0x6001D3D")]
		[Address(RVA = "0xBDE3A0", Offset = "0xBDE3A0", VA = "0xBDE3A0")]
		public void DrawShine(float3 pos, quaternion rot, float scale)
		{
		}

		[Token(Token = "0x6001D3E")]
		[Address(RVA = "0xBDE5F4", Offset = "0xBDE5F4", VA = "0xBDE5F4")]
		public GameObject CreateAndAttachShineEffect([Optional] Transform parentToAttachTo, float scale = 5f, [Optional] GameObject recycledShine, [Optional] Vector3? posLocalOffset)
		{
			return null;
		}

		[Token(Token = "0x6001D3F")]
		[Address(RVA = "0xBDE908", Offset = "0xBDE908", VA = "0xBDE908")]
		public void SpawnRadialFlowerPoof(float3 worldCenter, float outerRadius = 1f, int innerRingCount = 5, float totalTimeSeconds = 0.5f, int flowersPerRingLevel = 10)
		{
		}

		[Token(Token = "0x6001D40")]
		[Address(RVA = "0xBDE934", Offset = "0xBDE934", VA = "0xBDE934")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9D41C0", Offset = "0x9D41C0")]
		private IEnumerator DoSpawnRadialFlowerPoof(float3 worldCenter, float outerRadius, int innerRingCount, float totalTimeSeconds, int flowersPerRingLevel)
		{
			return null;
		}

		[Token(Token = "0x6001D41")]
		[Address(RVA = "0xBDEA64", Offset = "0xBDEA64", VA = "0xBDEA64")]
		public Coroutine SpawnFlowerTrailPoof(float3 worldStartPosition, float3 worldEndPosition, float unitsPerSecond = 4f, int flowersPerUnit = 20, float pathThickness = 0.5f, [Optional] Action onComplete)
		{
			return null;
		}

		[Token(Token = "0x6001D42")]
		[Address(RVA = "0xBDEA90", Offset = "0xBDEA90", VA = "0xBDEA90")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9D4224", Offset = "0x9D4224")]
		private IEnumerator DoFlowerTrailPoof(float3 worldStartPosition, float3 worldEndPosition, float unitsPerSecond, int flowersPerUnit, float pathThickness, Action onComplete)
		{
			return null;
		}

		[Token(Token = "0x6001D43")]
		[Address(RVA = "0xBDEBF0", Offset = "0xBDEBF0", VA = "0xBDEBF0")]
		public VisualEffectsService()
		{
		}
	}
	[Token(Token = "0x20003E5")]
	public class WindService : MonoBehaviour, ServiceLocator.ILocatableService
	{
		[Token(Token = "0x400117F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 WindDirection;

		[Token(Token = "0x6001D44")]
		[Address(RVA = "0xBE1970", Offset = "0xBE1970", VA = "0xBE1970")]
		public Vector3 GetWindVectorAtPosition(Vector3 position)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001D45")]
		[Address(RVA = "0xBE1A60", Offset = "0xBE1A60", VA = "0xBE1A60")]
		public WindService()
		{
		}
	}
	[Token(Token = "0x20003E6")]
	public class WorldStateService : MonoBehaviour, ServiceLocator.ILocatableService
	{
		[Token(Token = "0x2000691")]
		public static class Messages
		{
			[Token(Token = "0x20006FA")]
			public struct SaveStateAlteredMessaged
			{
				[Token(Token = "0x2000702")]
				public enum Event
				{
					[Token(Token = "0x4001E9C")]
					Saved,
					[Token(Token = "0x4001E9D")]
					Loaded,
					[Token(Token = "0x4001E9E")]
					PreSave
				}

				[Token(Token = "0x4001E89")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public Event EventType;
			}

			[Token(Token = "0x20006FB")]
			public struct ZoneChangeMessage
			{
				[Token(Token = "0x4001E8A")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public LoadingZoneKey Zone;

				[Token(Token = "0x4001E8B")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
				public bool Entered;

				[Token(Token = "0x1700052E")]
				public bool Exited
				{
					[Token(Token = "0x6002976")]
					[Address(RVA = "0xA81C1C", Offset = "0xA81C1C", VA = "0xA81C1C")]
					get
					{
						return default(bool);
					}
					[Token(Token = "0x6002977")]
					[Address(RVA = "0xA81C2C", Offset = "0xA81C2C", VA = "0xA81C2C")]
					set
					{
					}
				}
			}

			[Token(Token = "0x20006FC")]
			public struct PrefabFoundMessage
			{
				[Token(Token = "0x4001E8C")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public string PrefabId;

				[Token(Token = "0x4001E8D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public bool Found;
			}

			[Token(Token = "0x20006FD")]
			public struct UserDataSetMessage
			{
				[Token(Token = "0x4001E8E")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public string Key;

				[Token(Token = "0x4001E8F")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public string Value;
			}

			[Token(Token = "0x20006FE")]
			public struct NarrativeKeySetMessage
			{
				[Token(Token = "0x4001E90")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public FujiNarrativeKey Key;

				[Token(Token = "0x4001E91")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
				public bool Value;
			}
		}

		[Token(Token = "0x2000692")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBEC4", Offset = "0x9BBEC4")]
		private sealed class <DoFadeAndTrigger>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool active;

			[Token(Token = "0x4001D27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public WorldStateService <>4__this;

			[Token(Token = "0x4001D28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public LoadingZone zone;

			[Token(Token = "0x4001D29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private bool <allowFade>5__2;

			[Token(Token = "0x170004F3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002836")]
				[Address(RVA = "0xBE6458", Offset = "0xBE6458", VA = "0xBE6458", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004F4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002838")]
				[Address(RVA = "0xBE64C8", Offset = "0xBE64C8", VA = "0xBE64C8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002833")]
			[Address(RVA = "0xBE2048", Offset = "0xBE2048", VA = "0xBE2048")]
			[DebuggerHidden]
			public <DoFadeAndTrigger>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x6002834")]
			[Address(RVA = "0xBE6250", Offset = "0xBE6250", VA = "0xBE6250", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002835")]
			[Address(RVA = "0xBE6254", Offset = "0xBE6254", VA = "0xBE6254", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002837")]
			[Address(RVA = "0xBE6460", Offset = "0xBE6460", VA = "0xBE6460", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000693")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBED4", Offset = "0x9BBED4")]
		private sealed class <>c__DisplayClass51_0
		{
			[Token(Token = "0x4001D2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string localId;

			[Token(Token = "0x6002839")]
			[Address(RVA = "0xBE3FD8", Offset = "0xBE3FD8", VA = "0xBE3FD8")]
			public <>c__DisplayClass51_0()
			{
			}

			[Token(Token = "0x600283A")]
			[Address(RVA = "0xBE6218", Offset = "0xBE6218", VA = "0xBE6218")]
			internal bool <FindActiveObject>b__0(PersistentEntity obj)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x2000694")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBEE4", Offset = "0x9BBEE4")]
		private sealed class <>c
		{
			[Token(Token = "0x4001D2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001D2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<SimulationTrackedObjectV1> <>9__53_0;

			[Token(Token = "0x4001D2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Predicate<PersistentEntity> <>9__53_1;

			[Token(Token = "0x4001D2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<SimulationTrackedObjectV1, bool> <>9__80_0;

			[Token(Token = "0x4001D2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<SimulationTrackedObjectV1, int> <>9__80_1;

			[Token(Token = "0x4001D30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<SimulationTrackedObjectV1, double> <>9__80_2;

			[Token(Token = "0x600283C")]
			[Address(RVA = "0xBE6110", Offset = "0xBE6110", VA = "0xBE6110")]
			public <>c()
			{
			}

			[Token(Token = "0x600283D")]
			[Address(RVA = "0xBE6118", Offset = "0xBE6118", VA = "0xBE6118")]
			internal bool <SaveState>b__53_0(SimulationTrackedObjectV1 virtualObj)
			{
				return default(bool);
			}

			[Token(Token = "0x600283E")]
			[Address(RVA = "0xBE6144", Offset = "0xBE6144", VA = "0xBE6144")]
			internal bool <SaveState>b__53_1(PersistentEntity o)
			{
				return default(bool);
			}

			[Token(Token = "0x600283F")]
			[Address(RVA = "0xBE6194", Offset = "0xBE6194", VA = "0xBE6194")]
			internal bool <PruneGardenInstancesAboveTheLimit>b__80_0(SimulationTrackedObjectV1 i)
			{
				return default(bool);
			}

			[Token(Token = "0x6002840")]
			[Address(RVA = "0xBE61C0", Offset = "0xBE61C0", VA = "0xBE61C0")]
			internal int <PruneGardenInstancesAboveTheLimit>b__80_1(SimulationTrackedObjectV1 i)
			{
				return default(int);
			}

			[Token(Token = "0x6002841")]
			[Address(RVA = "0xBE61EC", Offset = "0xBE61EC", VA = "0xBE61EC")]
			internal double <PruneGardenInstancesAboveTheLimit>b__80_2(SimulationTrackedObjectV1 i)
			{
				return default(double);
			}
		}

		[Token(Token = "0x4001180")]
		private const int LowestSupportedSaveCode = 1;

		[Token(Token = "0x4001181")]
		private const int CurrentSaveCode = 1;

		[Token(Token = "0x4001182")]
		public const int GardenObjectLimit = 400;

		[Token(Token = "0x4001183")]
		private const string SaveVersion = "saveVersion";

		[Token(Token = "0x4001184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Dictionary<string, string> _dataCache;

		[Token(Token = "0x4001185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly List<ISimulationTickable> _tickableCache;

		[Token(Token = "0x4001186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly List<PersistentEntity> _activeObjects;

		[Token(Token = "0x4001187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly List<LoadingZoneKey> _activeZones;

		[Token(Token = "0x4001188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly Dictionary<LoadingZoneKey, LoadingZone> WorldLoadingZones;

		[Token(Token = "0x4001189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly Dictionary<string, string> _foundKeyLookupCache;

		[Token(Token = "0x400118A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private SimulationWorldStateV1 _worldState;

		[Token(Token = "0x400118B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C86B4", Offset = "0x9C86B4")]
		private bool <DeserializationInProgress>k__BackingField;

		[Token(Token = "0x400118C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool ForceEmptySave;

		[NonSerialized]
		[Token(Token = "0x400118D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		public bool AllowQuickSave;

		[Token(Token = "0x400118E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private TaskQueue<WorldStateService> _zoneQueue;

		[Token(Token = "0x400118F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool FadeWhenLoadingZones;

		[Token(Token = "0x4001190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string TestSaveLocation;

		[Token(Token = "0x170002E2")]
		public bool DeserializationInProgress
		{
			[Token(Token = "0x6001D47")]
			[Address(RVA = "0xBE1DD0", Offset = "0xBE1DD0", VA = "0xBE1DD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D4298", Offset = "0x9D4298")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D46")]
			[Address(RVA = "0xBE1DC4", Offset = "0xBE1DC4", VA = "0xBE1DC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D4288", Offset = "0x9D4288")]
			private set
			{
			}
		}

		[Token(Token = "0x170002E3")]
		public LoadingZoneKey ActiveZone
		{
			[Token(Token = "0x6001D4D")]
			[Address(RVA = "0xBD536C", Offset = "0xBD536C", VA = "0xBD536C")]
			get
			{
				return default(LoadingZoneKey);
			}
		}

		[Token(Token = "0x170002E4")]
		public IReadOnlyList<LoadingZoneKey> ActiveZones
		{
			[Token(Token = "0x6001D4E")]
			[Address(RVA = "0xBCF4C4", Offset = "0xBCF4C4", VA = "0xBCF4C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E5")]
		public IReadOnlyList<PersistentEntity> ActiveObjects
		{
			[Token(Token = "0x6001D4F")]
			[Address(RVA = "0xBE2F00", Offset = "0xBE2F00", VA = "0xBE2F00")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E6")]
		public Vector3? ActiveZonePositionWorld
		{
			[Token(Token = "0x6001D50")]
			[Address(RVA = "0xBE2F08", Offset = "0xBE2F08", VA = "0xBE2F08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E7")]
		public string[] Inventory
		{
			[Token(Token = "0x6001D51")]
			[Address(RVA = "0xBE3000", Offset = "0xBE3000", VA = "0xBE3000")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D52")]
			[Address(RVA = "0xBE303C", Offset = "0xBE303C", VA = "0xBE303C")]
			set
			{
			}
		}

		[Token(Token = "0x170002E8")]
		public double SimulationTimeSeconds
		{
			[Token(Token = "0x6001D53")]
			[Address(RVA = "0xBE307C", Offset = "0xBE307C", VA = "0xBE307C")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6001D54")]
			[Address(RVA = "0xBE30B8", Offset = "0xBE30B8", VA = "0xBE30B8")]
			set
			{
			}
		}

		[Token(Token = "0x170002E9")]
		public double ActualPlayTimeSeconds
		{
			[Token(Token = "0x6001D55")]
			[Address(RVA = "0xBE3100", Offset = "0xBE3100", VA = "0xBE3100")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6001D56")]
			[Address(RVA = "0xBE313C", Offset = "0xBE313C", VA = "0xBE313C")]
			set
			{
			}
		}

		[Token(Token = "0x6001D48")]
		[Address(RVA = "0xBE1DD8", Offset = "0xBE1DD8", VA = "0xBE1DD8")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001D49")]
		[Address(RVA = "0xBE1F38", Offset = "0xBE1F38", VA = "0xBE1F38")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D4A")]
		[Address(RVA = "0xBDB8CC", Offset = "0xBDB8CC", VA = "0xBDB8CC")]
		public void QueueZoneChange(LoadingZone zone, bool active)
		{
		}

		[Token(Token = "0x6001D4B")]
		[Address(RVA = "0xBE1F98", Offset = "0xBE1F98", VA = "0xBE1F98")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9D42A8", Offset = "0x9D42A8")]
		private IEnumerator DoFadeAndTrigger(LoadingZone zone, bool active)
		{
			return null;
		}

		[Token(Token = "0x6001D4C")]
		[Address(RVA = "0xBE2074", Offset = "0xBE2074", VA = "0xBE2074")]
		private void QuickSave()
		{
		}

		[Token(Token = "0x6001D57")]
		[Address(RVA = "0xBE3184", Offset = "0xBE3184", VA = "0xBE3184")]
		public bool HasPrefabBeenFound(PersistentEntity prefabId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D58")]
		[Address(RVA = "0xBE32AC", Offset = "0xBE32AC", VA = "0xBE32AC")]
		public void SetPrefabFound(GameObject prefabId, bool found)
		{
		}

		[Token(Token = "0x6001D59")]
		[Address(RVA = "0xBE3364", Offset = "0xBE3364", VA = "0xBE3364")]
		public void SetPrefabFound(PersistentEntity prefabId, bool found)
		{
		}

		[Token(Token = "0x6001D5A")]
		[Address(RVA = "0xBE3584", Offset = "0xBE3584", VA = "0xBE3584")]
		public bool CanPlantSeedsInCurrentZone()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D5B")]
		[Address(RVA = "0xBE35C8", Offset = "0xBE35C8", VA = "0xBE35C8")]
		public bool PlantIndicatorShowsInCurrentZone()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D5C")]
		[Address(RVA = "0xBE3604", Offset = "0xBE3604", VA = "0xBE3604")]
		public void AddActiveObject(PersistentEntity obj)
		{
		}

		[Token(Token = "0x6001D5D")]
		[Address(RVA = "0xBE39C0", Offset = "0xBE39C0", VA = "0xBE39C0")]
		public void RemoveActiveObject(PersistentEntity obj)
		{
		}

		[Token(Token = "0x6001D5E")]
		[Address(RVA = "0xBE3C5C", Offset = "0xBE3C5C", VA = "0xBE3C5C")]
		public void AddLiveObjectToZoneModel(PersistentEntity obj, LoadingZoneKey targetZone)
		{
		}

		[Token(Token = "0x6001D5F")]
		[Address(RVA = "0xBE3E0C", Offset = "0xBE3E0C", VA = "0xBE3E0C")]
		public bool IsObjectInZoneModel(PersistentEntity entity)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D60")]
		[Address(RVA = "0xBE3F08", Offset = "0xBE3F08", VA = "0xBE3F08")]
		public PersistentEntity FindActiveObject(string localId)
		{
			return null;
		}

		[Token(Token = "0x6001D61")]
		[Address(RVA = "0xBE3FE0", Offset = "0xBE3FE0", VA = "0xBE3FE0")]
		public bool DestroyActiveObject(string localId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D62")]
		[Address(RVA = "0xBE2130", Offset = "0xBE2130", VA = "0xBE2130")]
		public bool SaveState()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D63")]
		[Address(RVA = "0xBE1EDC", Offset = "0xBE1EDC", VA = "0xBE1EDC")]
		public void ClearSaveFile()
		{
		}

		[Token(Token = "0x6001D64")]
		[Address(RVA = "0xBE40A0", Offset = "0xBE40A0", VA = "0xBE40A0")]
		public void LoadState(SimulationWorldStateV1 state)
		{
		}

		[Token(Token = "0x6001D65")]
		[Address(RVA = "0xBE4790", Offset = "0xBE4790", VA = "0xBE4790")]
		public FujiNarrativeKey GetLastNarrativeCheckpointFromState(SimulationWorldStateV1 pWorldState)
		{
			return default(FujiNarrativeKey);
		}

		[Token(Token = "0x6001D66")]
		[Address(RVA = "0xBE4850", Offset = "0xBE4850", VA = "0xBE4850")]
		public ZoneV1 GetZoneModel()
		{
			return null;
		}

		[Token(Token = "0x6001D67")]
		[Address(RVA = "0xBD56CC", Offset = "0xBD56CC", VA = "0xBD56CC")]
		public ZoneV1 GetZoneModel(LoadingZoneKey zone)
		{
			return null;
		}

		[Token(Token = "0x6001D68")]
		[Address(RVA = "0xBE4878", Offset = "0xBE4878", VA = "0xBE4878")]
		public bool IsZoneActive(LoadingZoneKey zone)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D69")]
		public void SetUserData<TK, TV>(TK key, TV value)
		{
		}

		[Token(Token = "0x6001D6A")]
		public string GetUserData<TK>(TK key)
		{
			return null;
		}

		[Token(Token = "0x6001D6B")]
		public bool GetUserDataBool<TK>(TK key, bool defaultValue)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D6C")]
		public bool GetWorldStateDataBool<TK>(TK key, bool defaultValue, SimulationWorldStateV1 worldState)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D6D")]
		public float GetUserDataFloat<TK>(TK key, float defaultValue)
		{
			return default(float);
		}

		[Token(Token = "0x6001D6E")]
		public float GetUserDataInt<TK>(TK key, int defaultValue)
		{
			return default(float);
		}

		[Token(Token = "0x6001D6F")]
		[Address(RVA = "0xBE48E8", Offset = "0xBE48E8", VA = "0xBE48E8")]
		public bool QuickloadUserProfile()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D70")]
		[Address(RVA = "0xBE4A98", Offset = "0xBE4A98", VA = "0xBE4A98")]
		public void ResetSave(bool preserveLanguageSettings)
		{
		}

		[Token(Token = "0x6001D71")]
		[Address(RVA = "0xBE4B58", Offset = "0xBE4B58", VA = "0xBE4B58")]
		public void ClearSave()
		{
		}

		[Token(Token = "0x6001D72")]
		[Address(RVA = "0xBE4384", Offset = "0xBE4384", VA = "0xBE4384")]
		public void SetZoneActive(LoadingZoneKey zone, bool active, bool force = false, bool noSave = false)
		{
		}

		[Token(Token = "0x6001D73")]
		[Address(RVA = "0xBE3A64", Offset = "0xBE3A64", VA = "0xBE3A64")]
		public void SaveStateForObject(PersistentEntity entity)
		{
		}

		[Token(Token = "0x6001D74")]
		[Address(RVA = "0xBE36A8", Offset = "0xBE36A8", VA = "0xBE36A8")]
		public void SampleSaveStateForObject(PersistentEntity entity)
		{
		}

		[Token(Token = "0x6001D75")]
		[Address(RVA = "0xBE4BB8", Offset = "0xBE4BB8", VA = "0xBE4BB8")]
		private void ReturnAllTrackedObjectsToPool(LoadingZoneKey unloadZone)
		{
		}

		[Token(Token = "0x6001D76")]
		[Address(RVA = "0xBE4E1C", Offset = "0xBE4E1C", VA = "0xBE4E1C")]
		private void InstantiatePersistentObjects(LoadingZoneKey zone)
		{
		}

		[Token(Token = "0x6001D77")]
		[Address(RVA = "0xBE54E0", Offset = "0xBE54E0", VA = "0xBE54E0")]
		public bool IsGardenActiveZone()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D78")]
		[Address(RVA = "0xBE5518", Offset = "0xBE5518", VA = "0xBE5518")]
		public FujiSubArea? GetClosestGardenArea(Vector3 transformPosition, bool assumeInsideGarden)
		{
			return null;
		}

		[Token(Token = "0x6001D79")]
		[Address(RVA = "0xBE5680", Offset = "0xBE5680", VA = "0xBE5680")]
		public bool CheckNarrativeKey(FujiNarrativeKey key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D7A")]
		[Address(RVA = "0xBE56E4", Offset = "0xBE56E4", VA = "0xBE56E4")]
		public void SetNarrativeKey(FujiNarrativeKey key)
		{
		}

		[Token(Token = "0x6001D7B")]
		[Address(RVA = "0xBE5760", Offset = "0xBE5760", VA = "0xBE5760")]
		public void HideExteriorsOfAllInactiveScenes()
		{
		}

		[Token(Token = "0x6001D7C")]
		[Address(RVA = "0xBE5900", Offset = "0xBE5900", VA = "0xBE5900")]
		public void PruneGardenInstancesAboveTheLimit()
		{
		}

		[Token(Token = "0x6001D7D")]
		[Address(RVA = "0xBE5D10", Offset = "0xBE5D10", VA = "0xBE5D10")]
		public SystemLanguage? GetSavedLanguageSetting()
		{
			return null;
		}

		[Token(Token = "0x6001D7E")]
		[Address(RVA = "0xBE5DB0", Offset = "0xBE5DB0", VA = "0xBE5DB0")]
		public void SetSavedLanguageSetting(SystemLanguage? language)
		{
		}

		[Token(Token = "0x6001D7F")]
		[Address(RVA = "0xBE5E70", Offset = "0xBE5E70", VA = "0xBE5E70")]
		public WorldStateService()
		{
		}

		[Token(Token = "0x6001D81")]
		[Address(RVA = "0xBE6004", Offset = "0xBE6004", VA = "0xBE6004")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D430C", Offset = "0x9D430C")]
		private void <Awake>b__19_0(ApplicationWillQuitEvent _)
		{
		}

		[Token(Token = "0x6001D82")]
		[Address(RVA = "0xBE609C", Offset = "0xBE609C", VA = "0xBE609C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D431C", Offset = "0x9D431C")]
		private void <Awake>b__19_1(ApplicationPauseEvent pauseMessage)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003E7")]
	public struct FujiLocalInstanceRef
	{
		[Token(Token = "0x4001191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string LocalId;

		[Token(Token = "0x4001192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		[EditorReadOnly]
		private PersistentEntity _instance;

		[Token(Token = "0x4001193")]
		public const char SplitChar = '|';

		[Token(Token = "0x170002EA")]
		public bool Null
		{
			[Token(Token = "0x6001D85")]
			[Address(RVA = "0xA8242C", Offset = "0xA8242C", VA = "0xA8242C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002EB")]
		public bool Valid
		{
			[Token(Token = "0x6001D86")]
			[Address(RVA = "0xA8244C", Offset = "0xA8244C", VA = "0xA8244C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001D83")]
		[Address(RVA = "0xA8241C", Offset = "0xA8241C", VA = "0xA8241C")]
		public FujiLocalInstanceRef(string localId)
		{
		}

		[Token(Token = "0x6001D84")]
		[Address(RVA = "0xA82424", Offset = "0xA82424", VA = "0xA82424")]
		public FujiLocalInstanceRef(string localId, PersistentEntity instance)
		{
		}

		[Token(Token = "0x6001D87")]
		[Address(RVA = "0xA82454", Offset = "0xA82454", VA = "0xA82454")]
		public PersistentEntity Resolve()
		{
			return null;
		}

		[Token(Token = "0x6001D88")]
		[Address(RVA = "0xC81A40", Offset = "0xC81A40", VA = "0xC81A40")]
		public static implicit operator FujiLocalInstanceRef(string localId)
		{
			return default(FujiLocalInstanceRef);
		}

		[Token(Token = "0x6001D89")]
		[Address(RVA = "0xC80C44", Offset = "0xC80C44", VA = "0xC80C44")]
		public static implicit operator FujiLocalInstanceRef(PersistentEntity local)
		{
			return default(FujiLocalInstanceRef);
		}

		[Token(Token = "0x6001D8A")]
		[Address(RVA = "0xC81A48", Offset = "0xC81A48", VA = "0xC81A48")]
		public static implicit operator PersistentEntity(FujiLocalInstanceRef local)
		{
			return null;
		}

		[Token(Token = "0x6001D8B")]
		[Address(RVA = "0xC81A6C", Offset = "0xC81A6C", VA = "0xC81A6C")]
		public static implicit operator string(FujiLocalInstanceRef local)
		{
			return null;
		}

		[Token(Token = "0x6001D8C")]
		public bool CheckComponent<T>() where T : Component
		{
			return default(bool);
		}

		[Token(Token = "0x6001D8D")]
		[Address(RVA = "0xC81A70", Offset = "0xC81A70", VA = "0xC81A70")]
		public static implicit operator bool(FujiLocalInstanceRef local)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D8E")]
		[Address(RVA = "0xA8245C", Offset = "0xA8245C", VA = "0xA8245C", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D8F")]
		[Address(RVA = "0xA82464", Offset = "0xA82464", VA = "0xA82464")]
		public bool Equals(FujiLocalInstanceRef other)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D90")]
		[Address(RVA = "0xA82470", Offset = "0xA82470", VA = "0xA82470", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6001D91")]
		[Address(RVA = "0xC81C8C", Offset = "0xC81C8C", VA = "0xC81C8C")]
		public static FujiLocalInstanceRef Empty()
		{
			return default(FujiLocalInstanceRef);
		}

		[Token(Token = "0x6001D92")]
		[Address(RVA = "0xC81C98", Offset = "0xC81C98", VA = "0xC81C98")]
		public static FujiLocalInstanceRef Init(string localId)
		{
			return default(FujiLocalInstanceRef);
		}
	}
	[Token(Token = "0x20003E8")]
	public class SpadeTool : MonoBehaviour, ISpecialGrabbable
	{
		[Token(Token = "0x4001194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float4 LocalKillSphere;

		[Token(Token = "0x4001195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private InteractiveCore _interactiveCore;

		[Token(Token = "0x4001196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject _meshHighlightVisual;

		[Token(Token = "0x4001197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform _visualTransform;

		[Token(Token = "0x4001198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform _visualTransformDeathSpade;

		[Token(Token = "0x4001199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Mesh _killMesh;

		[Token(Token = "0x400119A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float3 _killScale;

		[Token(Token = "0x400119B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Material _killMaterial;

		[Token(Token = "0x400119C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Cooldown _killCooldown;

		[Token(Token = "0x400119D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private PosRotScale _startingState;

		[Token(Token = "0x400119E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Rigidbody _body;

		[Token(Token = "0x400119F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool _droppedByPlayer;

		[Token(Token = "0x40011A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private float _timeSpentDroppedByPlayer;

		[Token(Token = "0x40011A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float MaxDroppedTimeUntilRespawn;

		[Token(Token = "0x40011A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public LoadingZoneKey ZoneToWatch;

		[Token(Token = "0x40011A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public bool NarrativeGardenLock;

		[Token(Token = "0x40011A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
		private bool _didHitGroundPrevFrame;

		[Token(Token = "0x40011A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private IPlantableSurface _planterPrevFrame;

		[Token(Token = "0x40011A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public PersistentEntity PfbDirtPot;

		[Token(Token = "0x40011A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Vector3 LocalGrabCenter;

		[Token(Token = "0x170002EC")]
		private float3 WorldKillSpherePosition
		{
			[Token(Token = "0x6001D9C")]
			[Address(RVA = "0xBD75D0", Offset = "0xBD75D0", VA = "0xBD75D0")]
			get
			{
				return default(float3);
			}
		}

		[Token(Token = "0x170002ED")]
		private float WorldKillSphereRadius
		{
			[Token(Token = "0x6001D9D")]
			[Address(RVA = "0xBD7650", Offset = "0xBD7650", VA = "0xBD7650")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001D93")]
		[Address(RVA = "0xBD4FC0", Offset = "0xBD4FC0", VA = "0xBD4FC0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D94")]
		[Address(RVA = "0xBD5648", Offset = "0xBD5648", VA = "0xBD5648")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001D95")]
		[Address(RVA = "0xBD5444", Offset = "0xBD5444", VA = "0xBD5444")]
		private void ZoneChangeMessageHandler(WorldStateService.Messages.ZoneChangeMessage message)
		{
		}

		[Token(Token = "0x6001D96")]
		[Address(RVA = "0xBD5BD0", Offset = "0xBD5BD0", VA = "0xBD5BD0")]
		private static int GetClosestOccupantIndex(IPlantableSurface planter, float3 currentPos)
		{
			return default(int);
		}

		[Token(Token = "0x6001D97")]
		[Address(RVA = "0xBD5E04", Offset = "0xBD5E04", VA = "0xBD5E04")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D98")]
		[Address(RVA = "0xBD7658", Offset = "0xBD7658", VA = "0xBD7658")]
		private PlayerControllerInput ActionInput()
		{
			return null;
		}

		[Token(Token = "0x6001D99")]
		[Address(RVA = "0xBD7598", Offset = "0xBD7598", VA = "0xBD7598")]
		private bool ActionButton()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D9A")]
		[Address(RVA = "0xBD5854", Offset = "0xBD5854", VA = "0xBD5854")]
		private void ApplyStartingState()
		{
		}

		[Token(Token = "0x6001D9B")]
		[Address(RVA = "0xBD7C00", Offset = "0xBD7C00", VA = "0xBD7C00")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001D9E")]
		[Address(RVA = "0xBD7BA4", Offset = "0xBD7BA4", VA = "0xBD7BA4", Slot = "4")]
		public Vector3 GetGrabCenterWorld()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001D9F")]
		[Address(RVA = "0xBD7C44", Offset = "0xBD7C44", VA = "0xBD7C44")]
		public SpadeTool()
		{
		}

		[Token(Token = "0x6001DA0")]
		[Address(RVA = "0xBD7C60", Offset = "0xBD7C60", VA = "0xBD7C60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D432C", Offset = "0x9D432C")]
		private void <Awake>b__16_0(PlayerControllerInput input)
		{
		}

		[Token(Token = "0x6001DA1")]
		[Address(RVA = "0xBD7DBC", Offset = "0xBD7DBC", VA = "0xBD7DBC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D433C", Offset = "0x9D433C")]
		private void <Awake>b__16_1(PlayerControllerInput input)
		{
		}
	}
	[Token(Token = "0x20003E9")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9BA498", Offset = "0x9BA498")]
	public class TextMeshLOC_Asset : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x2000695")]
		public struct TextMeshLOC_Entry
		{
			[Token(Token = "0x4001D31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public SystemLanguage lang;

			[Token(Token = "0x4001D32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Mesh mesh;
		}

		[Token(Token = "0x40011A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<TextMeshLOC_Entry> entries;

		[Token(Token = "0x6001DA2")]
		[Address(RVA = "0xBDB27C", Offset = "0xBDB27C", VA = "0xBDB27C")]
		public Mesh GetMeshBasedOnCurrentLanguageSettings()
		{
			return null;
		}

		[Token(Token = "0x6001DA3")]
		[Address(RVA = "0xBDB45C", Offset = "0xBDB45C", VA = "0xBDB45C")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001DA4")]
		[Address(RVA = "0xBDB4C4", Offset = "0xBDB4C4", VA = "0xBDB4C4")]
		public TextMeshLOC_Asset()
		{
		}
	}
	[Token(Token = "0x20003EA")]
	public class ThereminPlant : MonoBehaviour
	{
		[Token(Token = "0x40011A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9C873C", Offset = "0x9C873C")]
		[SerializeField]
		private ThereminRegion _thereminRegion;

		[Token(Token = "0x40011AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator _animator;

		[Token(Token = "0x40011AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private JellySystem _jellySystem;

		[Token(Token = "0x170002EE")]
		public float3? CurrentTone
		{
			[Token(Token = "0x6001DA5")]
			[Address(RVA = "0xBDB4CC", Offset = "0xBDB4CC", VA = "0xBDB4CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DA6")]
		[Address(RVA = "0xBDB568", Offset = "0xBDB568", VA = "0xBDB568")]
		public ThereminPlant()
		{
		}
	}
	[Token(Token = "0x20003EB")]
	public class FujiPostEffect : MonoBehaviour
	{
		[Token(Token = "0x40011AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material mat;

		[Token(Token = "0x6001DA7")]
		[Address(RVA = "0xC81CA0", Offset = "0xC81CA0", VA = "0xC81CA0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001DA8")]
		[Address(RVA = "0xC81D40", Offset = "0xC81D40", VA = "0xC81D40")]
		private void OnRenderImage(RenderTexture src, RenderTexture dest)
		{
		}

		[Token(Token = "0x6001DA9")]
		[Address(RVA = "0xC81DC4", Offset = "0xC81DC4", VA = "0xC81DC4")]
		public FujiPostEffect()
		{
		}
	}
	[Token(Token = "0x20003EC")]
	public class DoorGardenCenter : MonoBehaviour, IFujiSerializable
	{
		[Token(Token = "0x2000696")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBEF4", Offset = "0x9BBEF4")]
		private sealed class <>c__DisplayClass16_0
		{
			[Token(Token = "0x4001D33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float fadeTime;

			[Token(Token = "0x4001D34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float lerpVal;

			[Token(Token = "0x4001D35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public AudioService.AudioServiceLoopHandle? sfxSpinLoop;

			[Token(Token = "0x4001D36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Color highlightColorStart;

			[Token(Token = "0x4001D37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Color highlightColorEnd;

			[Token(Token = "0x4001D38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public MaterialPropertyBlock block;

			[Token(Token = "0x4001D39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public int uniformId_FujiOverlayColor;

			[Token(Token = "0x4001D3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public DoorGardenCenter <>4__this;

			[Token(Token = "0x6002842")]
			[Address(RVA = "0xC79BC0", Offset = "0xC79BC0", VA = "0xC79BC0")]
			public <>c__DisplayClass16_0()
			{
			}

			[Token(Token = "0x6002843")]
			[Address(RVA = "0xC79FF4", Offset = "0xC79FF4", VA = "0xC79FF4")]
			internal void <OpenDoor>b__0()
			{
			}

			[Token(Token = "0x6002844")]
			[Address(RVA = "0xC7A0A4", Offset = "0xC7A0A4", VA = "0xC7A0A4")]
			internal float <OpenDoor>b__1()
			{
				return default(float);
			}

			[Token(Token = "0x6002845")]
			[Address(RVA = "0xC7A0AC", Offset = "0xC7A0AC", VA = "0xC7A0AC")]
			internal void <OpenDoor>b__2(float x)
			{
			}

			[Token(Token = "0x6002846")]
			[Address(RVA = "0xC7A0B4", Offset = "0xC7A0B4", VA = "0xC7A0B4")]
			internal void <OpenDoor>b__3()
			{
			}

			[Token(Token = "0x6002847")]
			[Address(RVA = "0xC7A2DC", Offset = "0xC7A2DC", VA = "0xC7A2DC")]
			internal void <OpenDoor>b__4()
			{
			}

			[Token(Token = "0x6002848")]
			[Address(RVA = "0xC7A540", Offset = "0xC7A540", VA = "0xC7A540")]
			internal void <OpenDoor>b__5()
			{
			}
		}

		[Token(Token = "0x40011AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9C87A8", Offset = "0x9C87A8")]
		[SerializeField]
		private LightGemSlot _pfbDoorLightGemSlot;

		[Token(Token = "0x40011AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _TfmLightGemSlotAttachPoint;

		[Token(Token = "0x40011AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private int _numLightGemsToOpen;

		[Token(Token = "0x40011B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x40011B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ParticleSystem _pfxExplode;

		[Token(Token = "0x40011B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9C8834", Offset = "0x9C8834")]
		[SerializeField]
		[EventRef]
		private string _doorReceiveFinalGemSound;

		[Token(Token = "0x40011B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[EventRef]
		private string _doorSpinSound;

		[Token(Token = "0x40011B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[EventRef]
		private string _doorShatterSound;

		[Token(Token = "0x40011B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public FujiNarrativeKey _requiredNarrativeKey;

		[Token(Token = "0x40011B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool _open;

		[Token(Token = "0x40011B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private LightGemSlot _slotInstance;

		[Token(Token = "0x170002EF")]
		[FujiSerialized]
		public bool Open
		{
			[Token(Token = "0x6001DAA")]
			[Address(RVA = "0xC793FC", Offset = "0xC793FC", VA = "0xC793FC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001DAB")]
			[Address(RVA = "0xC79404", Offset = "0xC79404", VA = "0xC79404")]
			set
			{
			}
		}

		[Token(Token = "0x6001DAC")]
		[Address(RVA = "0xC79410", Offset = "0xC79410", VA = "0xC79410")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001DAD")]
		[Address(RVA = "0xC794FC", Offset = "0xC794FC", VA = "0xC794FC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001DAE")]
		[Address(RVA = "0xC796D4", Offset = "0xC796D4", VA = "0xC796D4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x9D434C", Offset = "0x9D434C")]
		private void OpenDoor()
		{
		}

		[Token(Token = "0x6001DAF")]
		[Address(RVA = "0xC79BC8", Offset = "0xC79BC8", VA = "0xC79BC8")]
		private void PostOpen()
		{
		}

		[Token(Token = "0x6001DB0")]
		[Address(RVA = "0xC79C50", Offset = "0xC79C50", VA = "0xC79C50")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001DB1")]
		[Address(RVA = "0xC79F1C", Offset = "0xC79F1C", VA = "0xC79F1C", Slot = "4")]
		public void OnPreSerialize()
		{
		}

		[Token(Token = "0x6001DB2")]
		[Address(RVA = "0xC79F20", Offset = "0xC79F20", VA = "0xC79F20", Slot = "5")]
		public void OnPostDeserialize()
		{
		}

		[Token(Token = "0x6001DB3")]
		[Address(RVA = "0xC79F24", Offset = "0xC79F24", VA = "0xC79F24")]
		public DoorGardenCenter()
		{
		}

		[Token(Token = "0x6001DB4")]
		[Address(RVA = "0xC79F90", Offset = "0xC79F90", VA = "0xC79F90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D4384", Offset = "0x9D4384")]
		private void <Awake>b__15_0(LightGemSlotMessage msg)
		{
		}

		[Token(Token = "0x6001DB5")]
		[Address(RVA = "0xC79FE4", Offset = "0xC79FE4", VA = "0xC79FE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D4394", Offset = "0x9D4394")]
		private void <Awake>b__15_1()
		{
		}
	}
	[Token(Token = "0x20003ED")]
	public class DoorTriggerAnimation : MonoBehaviour, IFujiSerializable
	{
		[Token(Token = "0x2000697")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBF04", Offset = "0x9BBF04")]
		private sealed class <DoOpenSeq>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DoorTriggerAnimation <>4__this;

			[Token(Token = "0x170004F5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600284C")]
				[Address(RVA = "0xC7B470", Offset = "0xC7B470", VA = "0xC7B470", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004F6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600284E")]
				[Address(RVA = "0xC7B4E0", Offset = "0xC7B4E0", VA = "0xC7B4E0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002849")]
			[Address(RVA = "0xC7AAD0", Offset = "0xC7AAD0", VA = "0xC7AAD0")]
			[DebuggerHidden]
			public <DoOpenSeq>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x600284A")]
			[Address(RVA = "0xC7B060", Offset = "0xC7B060", VA = "0xC7B060", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600284B")]
			[Address(RVA = "0xC7B064", Offset = "0xC7B064", VA = "0xC7B064", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600284D")]
			[Address(RVA = "0xC7B478", Offset = "0xC7B478", VA = "0xC7B478", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000698")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBF14", Offset = "0x9BBF14")]
		private sealed class <>c__DisplayClass18_0
		{
			[Token(Token = "0x4001D3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LightGemSlot lightGemSlot;

			[Token(Token = "0x4001D3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public DoorTriggerAnimation <>4__this;

			[Token(Token = "0x600284F")]
			[Address(RVA = "0xC7AC90", Offset = "0xC7AC90", VA = "0xC7AC90")]
			public <>c__DisplayClass18_0()
			{
			}

			[Token(Token = "0x6002850")]
			[Address(RVA = "0xC7AFF8", Offset = "0xC7AFF8", VA = "0xC7AFF8")]
			internal void <Awake>b__0(LightGemSlotMessage msg)
			{
			}
		}

		[Token(Token = "0x40011B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9C8900", Offset = "0x9C8900")]
		[SerializeField]
		private LightGemSlot _pfbDoorLightGemSlot;

		[Token(Token = "0x40011B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _TfmLightGemSlotAttachPoint;

		[Token(Token = "0x40011BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private int _numLightGemsToOpen;

		[Token(Token = "0x40011BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9C896C", Offset = "0x9C896C")]
		[SerializeField]
		private Animator _animator;

		[Token(Token = "0x40011BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private string _animateTriggerStr;

		[Token(Token = "0x40011BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Collider _colliderToDisableWhenOpen;

		[Token(Token = "0x40011BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private FujiNarrativeKey _keyToEmitOnOpen;

		[Token(Token = "0x40011BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9C89E8", Offset = "0x9C89E8")]
		[SerializeField]
		[EventRef]
		private string _doorReceiveFinalGemSound;

		[Token(Token = "0x40011C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[EventRef]
		private string _doorUnlockSound;

		[Token(Token = "0x40011C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[EventRef]
		private string _doorOpenSound;

		[Token(Token = "0x40011C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool _open;

		[Token(Token = "0x40011C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		private bool openVisual;

		[Token(Token = "0x40011C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Coroutine _openRoutine;

		[Token(Token = "0x40011C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool _lightGemDoor;

		[Token(Token = "0x170002F0")]
		[FujiSerialized]
		public bool Open
		{
			[Token(Token = "0x6001DB6")]
			[Address(RVA = "0xC7A920", Offset = "0xC7A920", VA = "0xC7A920")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001DB7")]
			[Address(RVA = "0xC7A928", Offset = "0xC7A928", VA = "0xC7A928")]
			set
			{
			}
		}

		[Token(Token = "0x6001DB8")]
		[Address(RVA = "0xC7AA5C", Offset = "0xC7AA5C", VA = "0xC7AA5C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9D43A4", Offset = "0x9D43A4")]
		private IEnumerator DoOpenSeq()
		{
			return null;
		}

		[Token(Token = "0x6001DB9")]
		[Address(RVA = "0xC7AAFC", Offset = "0xC7AAFC", VA = "0xC7AAFC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001DBA")]
		[Address(RVA = "0xC7AC98", Offset = "0xC7AC98", VA = "0xC7AC98")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x9D4408", Offset = "0x9D4408")]
		public void OpenDoor()
		{
		}

		[Token(Token = "0x6001DBB")]
		[Address(RVA = "0xC7ACA0", Offset = "0xC7ACA0", VA = "0xC7ACA0")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001DBC")]
		[Address(RVA = "0xC7AF6C", Offset = "0xC7AF6C", VA = "0xC7AF6C", Slot = "4")]
		public void OnPreSerialize()
		{
		}

		[Token(Token = "0x6001DBD")]
		[Address(RVA = "0xC7AF70", Offset = "0xC7AF70", VA = "0xC7AF70", Slot = "5")]
		public void OnPostDeserialize()
		{
		}

		[Token(Token = "0x6001DBE")]
		[Address(RVA = "0xC7AF74", Offset = "0xC7AF74", VA = "0xC7AF74")]
		public DoorTriggerAnimation()
		{
		}
	}
	[Token(Token = "0x20003EE")]
	public class FujiSurfaceDescription : MonoBehaviour, IFujiSurfaceDescription
	{
		[Token(Token = "0x40011C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9C8AC4", Offset = "0x9C8AC4")]
		public float Hardness;

		[Token(Token = "0x40011C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool PlantSprayable;

		[Token(Token = "0x6001DBF")]
		[Address(RVA = "0xC82AEC", Offset = "0xC82AEC", VA = "0xC82AEC", Slot = "4")]
		public float GetHardness()
		{
			return default(float);
		}

		[Token(Token = "0x6001DC0")]
		[Address(RVA = "0xC82B60", Offset = "0xC82B60", VA = "0xC82B60", Slot = "5")]
		public bool CanSprayPlantsOnto()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DC1")]
		[Address(RVA = "0xC82B68", Offset = "0xC82B68", VA = "0xC82B68")]
		public FujiSurfaceDescription()
		{
		}
	}
	[Token(Token = "0x20003EF")]
	public interface IFujiSurfaceDescription
	{
		[Token(Token = "0x6001DC2")]
		float GetHardness();

		[Token(Token = "0x6001DC3")]
		bool CanSprayPlantsOnto();
	}
	[Token(Token = "0x20003F0")]
	public class LoadingZone : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000699")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBF24", Offset = "0x9BBF24")]
		private sealed class <>c
		{
			[Token(Token = "0x4001D40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001D41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<MeshFilter, bool> <>9__11_0;

			[Token(Token = "0x6002852")]
			[Address(RVA = "0xD8A604", Offset = "0xD8A604", VA = "0xD8A604")]
			public <>c()
			{
			}

			[Token(Token = "0x6002853")]
			[Address(RVA = "0xD8A60C", Offset = "0xD8A60C", VA = "0xD8A60C")]
			internal bool <Awake>b__11_0(MeshFilter m)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200069A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBF34", Offset = "0x9BBF34")]
		private sealed class <OneFrameToggle>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LoadingZone <>4__this;

			[Token(Token = "0x4001D45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private GameObject[] <>7__wrap1;

			[Token(Token = "0x4001D46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <>7__wrap2;

			[Token(Token = "0x4001D47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private GameObject <outsideZoneObject>5__4;

			[Token(Token = "0x170004F7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002857")]
				[Address(RVA = "0xD8AA3C", Offset = "0xD8AA3C", VA = "0xD8AA3C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004F8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002859")]
				[Address(RVA = "0xD8AAAC", Offset = "0xD8AAAC", VA = "0xD8AAAC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002854")]
			[Address(RVA = "0xD8A398", Offset = "0xD8A398", VA = "0xD8A398")]
			[DebuggerHidden]
			public <OneFrameToggle>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6002855")]
			[Address(RVA = "0xD8A684", Offset = "0xD8A684", VA = "0xD8A684", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002856")]
			[Address(RVA = "0xD8A688", Offset = "0xD8A688", VA = "0xD8A688", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002858")]
			[Address(RVA = "0xD8AA44", Offset = "0xD8AA44", VA = "0xD8AA44", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40011C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x9C8ADC", Offset = "0x9C8ADC")]
		public LoadingZoneKey Zone;

		[Token(Token = "0x40011C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform lightRingCenterTarget;

		[Token(Token = "0x40011CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x9C8B24", Offset = "0x9C8B24")]
		private GameObject[] _insideZoneObjects;

		[Token(Token = "0x40011CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x9C8B70", Offset = "0x9C8B70")]
		private GameObject[] _outsideZoneObjects;

		[Token(Token = "0x40011CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject[] _alwaysOnObjects;

		[Token(Token = "0x40011CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private WorldStateService worldStateService;

		[Token(Token = "0x170002F1")]
		public Vector3 LightRingCenter
		{
			[Token(Token = "0x6001DC4")]
			[Address(RVA = "0xD89928", Offset = "0xD89928", VA = "0xD89928")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170002F2")]
		private bool IsThisZoneActive
		{
			[Token(Token = "0x6001DC5")]
			[Address(RVA = "0xD899C4", Offset = "0xD899C4", VA = "0xD899C4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001DC6")]
		[Address(RVA = "0xD89A1C", Offset = "0xD89A1C", VA = "0xD89A1C")]
		public void SetZoneLoadState(bool setLoadState)
		{
		}

		[Token(Token = "0x6001DC7")]
		[Address(RVA = "0xD89E24", Offset = "0xD89E24", VA = "0xD89E24")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001DC8")]
		[Address(RVA = "0xD8A0F0", Offset = "0xD8A0F0", VA = "0xD8A0F0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001DC9")]
		[Address(RVA = "0xD8A194", Offset = "0xD8A194", VA = "0xD8A194")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001DCA")]
		[Address(RVA = "0xD8A324", Offset = "0xD8A324", VA = "0xD8A324")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9D4440", Offset = "0x9D4440")]
		public IEnumerator OneFrameToggle()
		{
			return null;
		}

		[Token(Token = "0x6001DCB")]
		[Address(RVA = "0xD8A3C4", Offset = "0xD8A3C4", VA = "0xD8A3C4")]
		public void Hide()
		{
		}

		[Token(Token = "0x6001DCC")]
		[Address(RVA = "0xD8A520", Offset = "0xD8A520", VA = "0xD8A520")]
		public LoadingZone()
		{
		}
	}
	[Token(Token = "0x20003F1")]
	public class PoweredDoor : MonoBehaviour, IFujiSerializable
	{
		[Token(Token = "0x200069B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBF44", Offset = "0x9BBF44")]
		private sealed class <>c__DisplayClass11_0
		{
			[Token(Token = "0x4001D48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PoweredDoor <>4__this;

			[Token(Token = "0x4001D49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LightGemSlot lightGemSlot;

			[Token(Token = "0x600285A")]
			[Address(RVA = "0xEE6118", Offset = "0xEE6118", VA = "0xEE6118")]
			public <>c__DisplayClass11_0()
			{
			}

			[Token(Token = "0x600285B")]
			[Address(RVA = "0xEE6528", Offset = "0xEE6528", VA = "0xEE6528")]
			internal void <Awake>b__0(LightGemSlotMessage msg)
			{
			}
		}

		[Token(Token = "0x40011CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform _TfmDoorNode;

		[Token(Token = "0x40011CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform _tfmTargetOpen;

		[Token(Token = "0x40011D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform _tfmTargetClose;

		[Token(Token = "0x40011D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9C8BCC", Offset = "0x9C8BCC")]
		[SerializeField]
		private LightGemSlot _pfbDoorLightGemSlot;

		[Token(Token = "0x40011D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform _TfmLightGemSlotAttachPoint;

		[Token(Token = "0x40011D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private int _numLightGemsToOpen;

		[Token(Token = "0x40011D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9C8C38", Offset = "0x9C8C38")]
		[SerializeField]
		[EventRef]
		private string _doorOpenSound;

		[Token(Token = "0x40011D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _open;

		[Token(Token = "0x170002F3")]
		[FujiSerialized]
		public bool Open
		{
			[Token(Token = "0x6001DCD")]
			[Address(RVA = "0xEE5D70", Offset = "0xEE5D70", VA = "0xEE5D70")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001DCE")]
			[Address(RVA = "0xEE5D78", Offset = "0xEE5D78", VA = "0xEE5D78")]
			set
			{
			}
		}

		[Token(Token = "0x6001DCF")]
		[Address(RVA = "0xEE5F9C", Offset = "0xEE5F9C", VA = "0xEE5F9C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001DD0")]
		[Address(RVA = "0xEE6120", Offset = "0xEE6120", VA = "0xEE6120")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001DD1")]
		[Address(RVA = "0xEE6124", Offset = "0xEE6124", VA = "0xEE6124")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x9D44A4", Offset = "0x9D44A4")]
		private void OpenDoor()
		{
		}

		[Token(Token = "0x6001DD2")]
		[Address(RVA = "0xEE61F4", Offset = "0xEE61F4", VA = "0xEE61F4")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001DD3")]
		[Address(RVA = "0xEE64C0", Offset = "0xEE64C0", VA = "0xEE64C0", Slot = "4")]
		public void OnPreSerialize()
		{
		}

		[Token(Token = "0x6001DD4")]
		[Address(RVA = "0xEE64C4", Offset = "0xEE64C4", VA = "0xEE64C4", Slot = "5")]
		public void OnPostDeserialize()
		{
		}

		[Token(Token = "0x6001DD5")]
		[Address(RVA = "0xEE64C8", Offset = "0xEE64C8", VA = "0xEE64C8")]
		public PoweredDoor()
		{
		}
	}
	[Token(Token = "0x20003F2")]
	public class SetActiveBasedOnZone : MonoBehaviour
	{
		[Token(Token = "0x40011D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private LoadingZoneKey[] zonesToBeActiveIn;

		[Token(Token = "0x40011D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject[] objectsToControl;

		[Token(Token = "0x6001DD6")]
		[Address(RVA = "0xBCF178", Offset = "0xBCF178", VA = "0xBCF178")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001DD7")]
		[Address(RVA = "0xBCF3B8", Offset = "0xBCF3B8", VA = "0xBCF3B8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001DD8")]
		[Address(RVA = "0xBCF288", Offset = "0xBCF288", VA = "0xBCF288")]
		private void HandleZoneChange(WorldStateService.Messages.ZoneChangeMessage message)
		{
		}

		[Token(Token = "0x6001DD9")]
		[Address(RVA = "0xBCF4CC", Offset = "0xBCF4CC", VA = "0xBCF4CC")]
		public SetActiveBasedOnZone()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003F3")]
	public struct bool1
	{
		[Token(Token = "0x40011D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private byte value;

		[Token(Token = "0x6001DDA")]
		[Address(RVA = "0xBE64F0", Offset = "0xBE64F0", VA = "0xBE64F0")]
		public static implicit operator bool1(bool b)
		{
			return default(bool1);
		}

		[Token(Token = "0x6001DDB")]
		[Address(RVA = "0xBE6560", Offset = "0xBE6560", VA = "0xBE6560")]
		public static implicit operator bool(bool1 b)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003F4")]
	public class SwitchingWalkModesDialog : MonoBehaviour
	{
		[Token(Token = "0x40011D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject popupRoot;

		[Token(Token = "0x40011DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpriteRenderer circleRenderer;

		[Token(Token = "0x40011DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SpriteRenderer teleportRenderer;

		[Token(Token = "0x40011DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SpriteRenderer smoothRenderer;

		[Token(Token = "0x40011DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float _progress;

		[Token(Token = "0x40011DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _CullAngleHash;

		[Token(Token = "0x40011DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private MaterialPropertyBlock _block;

		[Token(Token = "0x40011E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private InputHandedness? _lastHand;

		[Token(Token = "0x40011E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float? _angleCache;

		[Token(Token = "0x40011E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool? _smoothLocoCache;

		[Token(Token = "0x6001DDC")]
		[Address(RVA = "0xBDA248", Offset = "0xBDA248", VA = "0xBDA248")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001DDD")]
		[Address(RVA = "0xBDA33C", Offset = "0xBDA33C", VA = "0xBDA33C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001DDE")]
		[Address(RVA = "0xBDA3C0", Offset = "0xBDA3C0", VA = "0xBDA3C0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001DDF")]
		[Address(RVA = "0xBDA444", Offset = "0xBDA444", VA = "0xBDA444")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001DE0")]
		[Address(RVA = "0xBDA4C8", Offset = "0xBDA4C8", VA = "0xBDA4C8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001DE1")]
		[Address(RVA = "0xBDA868", Offset = "0xBDA868", VA = "0xBDA868")]
		private void OnHandleLocoMessage(SmoothLocoGuiMessage msg)
		{
		}

		[Token(Token = "0x6001DE2")]
		[Address(RVA = "0xBDABAC", Offset = "0xBDABAC", VA = "0xBDABAC")]
		private void HandleLocoNeededMessage(SmoothLocoGuiVisualNeeded msg)
		{
		}

		[Token(Token = "0x6001DE3")]
		[Address(RVA = "0xBDABEC", Offset = "0xBDABEC", VA = "0xBDABEC")]
		public SwitchingWalkModesDialog()
		{
		}
	}
	[Token(Token = "0x20003F5")]
	public struct SmoothLocoGuiMessage
	{
		[Token(Token = "0x40011E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly float progress;

		[Token(Token = "0x40011E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public readonly InputHandedness hand;

		[Token(Token = "0x6001DE4")]
		[Address(RVA = "0xA8192C", Offset = "0xA8192C", VA = "0xA8192C")]
		public SmoothLocoGuiMessage(float progress, InputHandedness handedness)
		{
		}
	}
	[Token(Token = "0x20003F6")]
	public struct SmoothLocoGuiVisualNeeded
	{
		[Token(Token = "0x40011E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly bool needed;

		[Token(Token = "0x6001DE5")]
		[Address(RVA = "0xA8195C", Offset = "0xA8195C", VA = "0xA8195C")]
		public SmoothLocoGuiVisualNeeded(bool needed)
		{
		}
	}
}
namespace Fuji.Locomotion
{
	[Token(Token = "0x20003F7")]
	public interface ILightRailPath
	{
		[Token(Token = "0x6001DE6")]
		Vector3 ClosestPointOnRail(Vector3 pos);

		[Token(Token = "0x6001DE7")]
		IEnumerator DoRailTraversal(Transform obj, float speed, LightRailDirection direction, Action onComplete, Action postPose);

		[Token(Token = "0x6001DE8")]
		LightRailDirection LightRailDirection(Ray ray);

		[Token(Token = "0x6001DE9")]
		void SetSelected(bool selected);

		[Token(Token = "0x6001DEA")]
		LightRailPathZones LightRailDirection(LightRailDirection dir);

		[Token(Token = "0x6001DEB")]
		float3 GetPoint(float percentage);

		[Token(Token = "0x6001DEC")]
		void ForcePercentageWhileTravelling(float percentage);

		[Token(Token = "0x6001DED")]
		float GetTraversalLocation();

		[Token(Token = "0x6001DEE")]
		bool IsSkipAllowed();

		[Token(Token = "0x6001DEF")]
		bool IsActiveParticleLightEels();

		[Token(Token = "0x6001DF0")]
		bool GnomePlaysGuitar();
	}
	[Token(Token = "0x20003F8")]
	public enum LightRailDirection
	{
		[Token(Token = "0x40011E7")]
		Positive,
		[Token(Token = "0x40011E8")]
		Negative
	}
	[Serializable]
	[Token(Token = "0x20003F9")]
	public struct LightRailPathZones
	{
		[Token(Token = "0x40011E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public LoadingZoneKey FromZone;

		[Token(Token = "0x40011EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public LoadingZoneKey ToZone;

		[Token(Token = "0x6001DF1")]
		[Address(RVA = "0xA8335C", Offset = "0xA8335C", VA = "0xA8335C")]
		public bool Matches(LightRailPathZones mys)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DF2")]
		[Address(RVA = "0xA83384", Offset = "0xA83384", VA = "0xA83384")]
		public LightRailPathZones Reversed()
		{
			return default(LightRailPathZones);
		}

		[Token(Token = "0x6001DF3")]
		[Address(RVA = "0xA83390", Offset = "0xA83390", VA = "0xA83390")]
		public new string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20003FA")]
	public struct PathStateChangeEvent
	{
		[Token(Token = "0x200069C")]
		public enum EventState
		{
			[Token(Token = "0x4001D4B")]
			UNLOCK,
			[Token(Token = "0x4001D4C")]
			LOCK
		}

		[Token(Token = "0x40011EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public NarrativeEventIdentifier Identifier;

		[Token(Token = "0x40011EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public EventState State;
	}
	[Token(Token = "0x20003FB")]
	public sealed class LightRailPath : MonoBehaviour, ILightRailPath
	{
		[Token(Token = "0x200069D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBF54", Offset = "0x9BBF54")]
		private sealed class <DoRailTraversal>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LightRailPath <>4__this;

			[Token(Token = "0x4001D50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float speed;

			[Token(Token = "0x4001D51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Transform obj;

			[Token(Token = "0x4001D52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public LightRailDirection direction;

			[Token(Token = "0x4001D53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Action postPose;

			[Token(Token = "0x4001D54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Action onComplete;

			[Token(Token = "0x4001D55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private float <percentagePerSecond>5__2;

			[Token(Token = "0x4001D56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private double <currentPercentage>5__3;

			[Token(Token = "0x4001D57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private PlantSprayService <plantSprayService>5__4;

			[Token(Token = "0x170004F9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600285F")]
				[Address(RVA = "0xD8CBB4", Offset = "0xD8CBB4", VA = "0xD8CBB4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004FA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002861")]
				[Address(RVA = "0xD8CC24", Offset = "0xD8CC24", VA = "0xD8CC24", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600285C")]
			[Address(RVA = "0xD8C14C", Offset = "0xD8C14C", VA = "0xD8C14C")]
			[DebuggerHidden]
			public <DoRailTraversal>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x600285D")]
			[Address(RVA = "0xD8C478", Offset = "0xD8C478", VA = "0xD8C478", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600285E")]
			[Address(RVA = "0xD8C47C", Offset = "0xD8C47C", VA = "0xD8C47C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002860")]
			[Address(RVA = "0xD8CBBC", Offset = "0xD8CBBC", VA = "0xD8CBBC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40011ED")]
		private const string __BOAT_NAME = "BoatMesh";

		[Token(Token = "0x40011EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private LightRailPathZones _zones;

		[Token(Token = "0x40011EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _boat;

		[Token(Token = "0x40011F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private FujiNarrativeKey _unlockKey;

		[Token(Token = "0x40011F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float LightRailBoatSpeedBoost;

		[Token(Token = "0x40011F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool BellSkipAllowed;

		[Token(Token = "0x40011F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool _isLocked;

		[Token(Token = "0x40011F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		[SerializeField]
		private bool _spawnLightEels;

		[Token(Token = "0x40011F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SplineComputer spline;

		[Token(Token = "0x40011F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private MeshRenderer _splineMeshRenderer;

		[Token(Token = "0x40011F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Collider[] _extraColliders;

		[Token(Token = "0x40011F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private MeshCollider _splineMeshCollider;

		[Token(Token = "0x40011F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Material _splineMaterial;

		[Token(Token = "0x40011FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private PathRoot _pathRoot;

		[Token(Token = "0x40011FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool ShowSplineRenderer;

		[Token(Token = "0x40011FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		public bool GnomePlaysGuitar;

		[Token(Token = "0x40011FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float? _forcePercentage;

		[Token(Token = "0x40011FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float _lastTraveresalPercentage;

		[Token(Token = "0x170002F4")]
		public bool IsLocked
		{
			[Token(Token = "0x6001DF4")]
			[Address(RVA = "0xD8B480", Offset = "0xD8B480", VA = "0xD8B480")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002F5")]
		public bool CurrentlyEnabled
		{
			[Token(Token = "0x6001DF5")]
			[Address(RVA = "0xD8B488", Offset = "0xD8B488", VA = "0xD8B488")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001DF6")]
		[Address(RVA = "0xD8B53C", Offset = "0xD8B53C", VA = "0xD8B53C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001DF7")]
		[Address(RVA = "0xD8BBC0", Offset = "0xD8BBC0", VA = "0xD8BBC0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001DF8")]
		[Address(RVA = "0xD8BD18", Offset = "0xD8BD18", VA = "0xD8BD18")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001DF9")]
		[Address(RVA = "0xD8BD9C", Offset = "0xD8BD9C", VA = "0xD8BD9C", Slot = "13")]
		public bool IsActiveParticleLightEels()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DFA")]
		[Address(RVA = "0xD8BDA4", Offset = "0xD8BDA4", VA = "0xD8BDA4", Slot = "8")]
		public LightRailPathZones LightRailDirection(LightRailDirection dir)
		{
			return default(LightRailPathZones);
		}

		[Token(Token = "0x6001DFB")]
		[Address(RVA = "0xD8BDC8", Offset = "0xD8BDC8", VA = "0xD8BDC8", Slot = "9")]
		public float3 GetPoint(float percentage)
		{
			return default(float3);
		}

		[Token(Token = "0x6001DFC")]
		[Address(RVA = "0xD8BEA4", Offset = "0xD8BEA4", VA = "0xD8BEA4", Slot = "10")]
		public void ForcePercentageWhileTravelling(float percentage)
		{
		}

		[Token(Token = "0x6001DFD")]
		[Address(RVA = "0xD8BF14", Offset = "0xD8BF14", VA = "0xD8BF14")]
		private void OnUserDataChanged(WorldStateService.Messages.UserDataSetMessage message)
		{
		}

		[Token(Token = "0x6001DFE")]
		[Address(RVA = "0xD8BC4C", Offset = "0xD8BC4C", VA = "0xD8BC4C")]
		private void CheckNarrativeKey()
		{
		}

		[Token(Token = "0x6001DFF")]
		[Address(RVA = "0xD8B6C0", Offset = "0xD8B6C0", VA = "0xD8B6C0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x9D44DC", Offset = "0x9D44DC")]
		public bool Lock()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E00")]
		[Address(RVA = "0xD8B93C", Offset = "0xD8B93C", VA = "0xD8B93C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x9D4514", Offset = "0x9D4514")]
		public bool Unlock()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E01")]
		[Address(RVA = "0xD8BFB8", Offset = "0xD8BFB8", VA = "0xD8BFB8", Slot = "4")]
		public Vector3 ClosestPointOnRail(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001E02")]
		[Address(RVA = "0xD8C044", Offset = "0xD8C044", VA = "0xD8C044", Slot = "5")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9D454C", Offset = "0x9D454C")]
		public IEnumerator DoRailTraversal(Transform obj, float speed, LightRailDirection direction, Action onComplete, Action postPose)
		{
			return null;
		}

		[Token(Token = "0x6001E03")]
		[Address(RVA = "0xD8C178", Offset = "0xD8C178", VA = "0xD8C178", Slot = "6")]
		public LightRailDirection LightRailDirection(Ray ray)
		{
			return default(LightRailDirection);
		}

		[Token(Token = "0x6001E04")]
		[Address(RVA = "0xD8C43C", Offset = "0xD8C43C", VA = "0xD8C43C", Slot = "7")]
		public void SetSelected(bool selected)
		{
		}

		[Token(Token = "0x6001E05")]
		[Address(RVA = "0xD8C440", Offset = "0xD8C440", VA = "0xD8C440", Slot = "11")]
		public float GetTraversalLocation()
		{
			return default(float);
		}

		[Token(Token = "0x6001E06")]
		[Address(RVA = "0xD8C448", Offset = "0xD8C448", VA = "0xD8C448", Slot = "12")]
		public bool IsSkipAllowed()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E07")]
		[Address(RVA = "0xD8C450", Offset = "0xD8C450", VA = "0xD8C450", Slot = "14")]
		private bool Fuji.Locomotion.ILightRailPath.GnomePlaysGuitar()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E08")]
		[Address(RVA = "0xD8C458", Offset = "0xD8C458", VA = "0xD8C458")]
		public LightRailPath()
		{
		}
	}
	[Token(Token = "0x20003FC")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9BA4F8", Offset = "0x9BA4F8")]
	public class UnrestrictedWalkabilityCollider : MonoBehaviour
	{
		[Token(Token = "0x6001E09")]
		[Address(RVA = "0xD8CCC8", Offset = "0xD8CCC8", VA = "0xD8CCC8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001E0A")]
		[Address(RVA = "0xD8CD00", Offset = "0xD8CD00", VA = "0xD8CD00")]
		public UnrestrictedWalkabilityCollider()
		{
		}
	}
}
namespace Fuji.Resources
{
	[Token(Token = "0x20003FD")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9BA55C", Offset = "0x9BA55C")]
	public class PrefabLookupTable : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x200069E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBF64", Offset = "0x9BBF64")]
		private sealed class <>c
		{
			[Token(Token = "0x4001D58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001D59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<PersistentEntity, bool> <>9__6_0;

			[Token(Token = "0x4001D5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<PersistentEntity, GameObject> <>9__6_1;

			[Token(Token = "0x6002863")]
			[Address(RVA = "0xEEA79C", Offset = "0xEEA79C", VA = "0xEEA79C")]
			public <>c()
			{
			}

			[Token(Token = "0x6002864")]
			[Address(RVA = "0xEEA7A4", Offset = "0xEEA7A4", VA = "0xEEA7A4")]
			internal bool <GetOrderedPrefabIndexList>b__6_0(PersistentEntity p)
			{
				return default(bool);
			}

			[Token(Token = "0x6002865")]
			[Address(RVA = "0xEEA800", Offset = "0xEEA800", VA = "0xEEA800")]
			internal GameObject <GetOrderedPrefabIndexList>b__6_1(PersistentEntity p)
			{
				return null;
			}
		}

		[Token(Token = "0x200069F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBF74", Offset = "0x9BBF74")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x4001D5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string name;

			[Token(Token = "0x6002866")]
			[Address(RVA = "0xEEA658", Offset = "0xEEA658", VA = "0xEEA658")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x6002867")]
			[Address(RVA = "0xEEA830", Offset = "0xEEA830", VA = "0xEEA830")]
			internal bool <GetPrefabIdByName>b__0(PersistentEntity prefab)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40011FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PersistentEntity[] Prefabs;

		[Token(Token = "0x4001200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Dictionary<string, GameObject> _getPrefabIndexCache;

		[Token(Token = "0x4001201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly Dictionary<Type, string> _extractPrefabIndexCache;

		[Token(Token = "0x4001202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly Dictionary<string, string> _getPrefabIdByNameCache;

		[Token(Token = "0x6001E0B")]
		[Address(RVA = "0xEE9F3C", Offset = "0xEE9F3C", VA = "0xEE9F3C")]
		public GameObject GetPrefab(string prefabIndex)
		{
			return null;
		}

		[Token(Token = "0x6001E0C")]
		[Address(RVA = "0xEEA1B4", Offset = "0xEEA1B4", VA = "0xEEA1B4")]
		public string ExtractPrefabIndex(GameObject prefab)
		{
			return null;
		}

		[Token(Token = "0x6001E0D")]
		public string ExtractPrefabIndex<T>() where T : class
		{
			return null;
		}

		[Token(Token = "0x6001E0E")]
		[Address(RVA = "0xEEA2A4", Offset = "0xEEA2A4", VA = "0xEEA2A4")]
		public IEnumerable<string> GetOrderedPrefabIndexList()
		{
			return null;
		}

		[Token(Token = "0x6001E0F")]
		[Address(RVA = "0xEEA49C", Offset = "0xEEA49C", VA = "0xEEA49C")]
		public string GetPrefabIdByName(string name)
		{
			return null;
		}

		[Token(Token = "0x6001E10")]
		[Address(RVA = "0xEEA660", Offset = "0xEEA660", VA = "0xEEA660")]
		public PrefabLookupTable()
		{
		}
	}
}
namespace Fuji.Triggers
{
	[Token(Token = "0x20003FE")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9BA5BC", Offset = "0x9BA5BC")]
	public class PostTeleportOverlapCheck : MonoBehaviour
	{
		[Token(Token = "0x4001203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Collider[] cache;

		[Token(Token = "0x4001204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LayerMask triggerMask;

		[Token(Token = "0x4001205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private SphereCollider sphereCollider;

		[Token(Token = "0x4001206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HashSet<LocomotionService.IPlayerTriggerable> volumeTriggerCache;

		[Token(Token = "0x6001E11")]
		[Address(RVA = "0xBDBB2C", Offset = "0xBDBB2C", VA = "0xBDBB2C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001E12")]
		[Address(RVA = "0xBDBC34", Offset = "0xBDBC34", VA = "0xBDBC34")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001E13")]
		[Address(RVA = "0xBDBD34", Offset = "0xBDBD34", VA = "0xBDBD34")]
		private void PerformPostBoatCheck(BoatEvent eve)
		{
		}

		[Token(Token = "0x6001E14")]
		[Address(RVA = "0xBDBD38", Offset = "0xBDBD38", VA = "0xBDBD38")]
		private void PerformCheck()
		{
		}

		[Token(Token = "0x6001E15")]
		[Address(RVA = "0xBDBFEC", Offset = "0xBDBFEC", VA = "0xBDBFEC")]
		public PostTeleportOverlapCheck()
		{
		}

		[Token(Token = "0x6001E16")]
		[Address(RVA = "0xBDC084", Offset = "0xBDC084", VA = "0xBDC084")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D45B0", Offset = "0x9D45B0")]
		private void <OnEnable>b__4_0(LocomotionService service)
		{
		}
	}
	[Token(Token = "0x20003FF")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9BA620", Offset = "0x9BA620")]
	public sealed class CommandTrigger : GenericPlayerTrigger
	{
		[Token(Token = "0x4001207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string command;

		[Token(Token = "0x6001E17")]
		[Address(RVA = "0xBDB578", Offset = "0xBDB578", VA = "0xBDB578", Slot = "4")]
		protected override void HandleTriggerEnter()
		{
		}

		[Token(Token = "0x6001E18")]
		[Address(RVA = "0xBDB658", Offset = "0xBDB658", VA = "0xBDB658", Slot = "5")]
		protected override void HandleTriggerExit()
		{
		}

		[Token(Token = "0x6001E19")]
		[Address(RVA = "0xBDB65C", Offset = "0xBDB65C", VA = "0xBDB65C")]
		public CommandTrigger()
		{
		}
	}
	[Token(Token = "0x2000400")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9BA684", Offset = "0x9BA684")]
	public class LightRingOverrideTrigger : MonoBehaviour
	{
		[Token(Token = "0x4001208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool restricted;

		[Token(Token = "0x6001E1A")]
		[Address(RVA = "0xBDB664", Offset = "0xBDB664", VA = "0xBDB664")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001E1B")]
		[Address(RVA = "0xBDB70C", Offset = "0xBDB70C", VA = "0xBDB70C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001E1C")]
		[Address(RVA = "0xBDB7B4", Offset = "0xBDB7B4", VA = "0xBDB7B4")]
		private void Handletrigger()
		{
		}

		[Token(Token = "0x6001E1D")]
		[Address(RVA = "0xBDB818", Offset = "0xBDB818", VA = "0xBDB818")]
		public LightRingOverrideTrigger()
		{
		}
	}
	[Token(Token = "0x2000401")]
	public sealed class LoadingSeamTrigger : GenericPlayerTrigger
	{
		[Token(Token = "0x4001209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private LoadingZone zone;

		[Token(Token = "0x6001E1E")]
		[Address(RVA = "0xBDB820", Offset = "0xBDB820", VA = "0xBDB820", Slot = "4")]
		protected override void HandleTriggerEnter()
		{
		}

		[Token(Token = "0x6001E1F")]
		[Address(RVA = "0xBDB9E4", Offset = "0xBDB9E4", VA = "0xBDB9E4", Slot = "5")]
		protected override void HandleTriggerExit()
		{
		}

		[Token(Token = "0x6001E20")]
		[Address(RVA = "0xBDBA90", Offset = "0xBDBA90", VA = "0xBDBA90")]
		private new void Awake()
		{
		}

		[Token(Token = "0x6001E21")]
		[Address(RVA = "0xBDBB24", Offset = "0xBDBB24", VA = "0xBDBB24")]
		public LoadingSeamTrigger()
		{
		}
	}
	[Token(Token = "0x2000402")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9BA6E8", Offset = "0x9BA6E8")]
	public class TeleportationRestrictionSettingTrigger : GenericPlayerTrigger
	{
		[Token(Token = "0x400120A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool restricted;

		[Token(Token = "0x6001E22")]
		[Address(RVA = "0xBDC154", Offset = "0xBDC154", VA = "0xBDC154", Slot = "4")]
		protected override void HandleTriggerEnter()
		{
		}

		[Token(Token = "0x6001E23")]
		[Address(RVA = "0xBDC264", Offset = "0xBDC264", VA = "0xBDC264", Slot = "5")]
		protected override void HandleTriggerExit()
		{
		}

		[Token(Token = "0x6001E24")]
		[Address(RVA = "0xBDC268", Offset = "0xBDC268", VA = "0xBDC268")]
		public TeleportationRestrictionSettingTrigger()
		{
		}
	}
}
namespace Fuji.JellyPhysics
{
	[Token(Token = "0x2000403")]
	public class JellyPoint : MonoBehaviour
	{
		[Token(Token = "0x400120B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x9C8D44", Offset = "0x9C8D44")]
		public JellyPoint Parent;

		[Token(Token = "0x400120C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float PinDepth;

		[Token(Token = "0x400120D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9C8D7C", Offset = "0x9C8D7C")]
		public bool PreventRotations;

		[Token(Token = "0x400120E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x9C8DB4", Offset = "0x9C8DB4")]
		public bool InitialHardPinnedState;

		[Token(Token = "0x400120F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float PinForceScalar;

		[Token(Token = "0x4001210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float CapsuleSizeScalar;

		[Token(Token = "0x4001211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 lastPolledVelocity;

		[Token(Token = "0x4001212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 LocalUpVector;

		[Token(Token = "0x4001213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C8DEC", Offset = "0x9C8DEC")]
		private JellySystem <ParentalJellySystem>k__BackingField;

		[Token(Token = "0x4001214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C8DFC", Offset = "0x9C8DFC")]
		private int <PointIndex>k__BackingField;

		[Token(Token = "0x4001215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int? _getFirstChildIndexCache;

		[Token(Token = "0x170002F6")]
		public Vector3 WorldUpVector
		{
			[Token(Token = "0x6001E25")]
			[Address(RVA = "0xC93BAC", Offset = "0xC93BAC", VA = "0xC93BAC")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170002F7")]
		public JellySystem ParentalJellySystem
		{
			[Token(Token = "0x6001E26")]
			[Address(RVA = "0xC93C88", Offset = "0xC93C88", VA = "0xC93C88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D45C0", Offset = "0x9D45C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E27")]
			[Address(RVA = "0xC93C90", Offset = "0xC93C90", VA = "0xC93C90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D45D0", Offset = "0x9D45D0")]
			set
			{
			}
		}

		[Token(Token = "0x170002F8")]
		public int PointIndex
		{
			[Token(Token = "0x6001E28")]
			[Address(RVA = "0xC93C98", Offset = "0xC93C98", VA = "0xC93C98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D45E0", Offset = "0x9D45E0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001E29")]
			[Address(RVA = "0xC93CA0", Offset = "0xC93CA0", VA = "0xC93CA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D45F0", Offset = "0x9D45F0")]
			set
			{
			}
		}

		[Token(Token = "0x170002F9")]
		public int ParentIndex
		{
			[Token(Token = "0x6001E2A")]
			[Address(RVA = "0xC93CA8", Offset = "0xC93CA8", VA = "0xC93CA8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002FA")]
		public bool Orphaned
		{
			[Token(Token = "0x6001E2B")]
			[Address(RVA = "0xC93D38", Offset = "0xC93D38", VA = "0xC93D38")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002FB")]
		public bool ParentAvailable
		{
			[Token(Token = "0x6001E2C")]
			[Address(RVA = "0xC93DC0", Offset = "0xC93DC0", VA = "0xC93DC0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002FC")]
		public bool Asleep
		{
			[Token(Token = "0x6001E2D")]
			[Address(RVA = "0xC93E2C", Offset = "0xC93E2C", VA = "0xC93E2C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002FD")]
		public Vector3 VectorToParent
		{
			[Token(Token = "0x6001E2E")]
			[Address(RVA = "0xC93E58", Offset = "0xC93E58", VA = "0xC93E58")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170002FE")]
		public Vector3 Position
		{
			[Token(Token = "0x6001E2F")]
			[Address(RVA = "0xC93F94", Offset = "0xC93F94", VA = "0xC93F94")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001E30")]
			[Address(RVA = "0xC93FC8", Offset = "0xC93FC8", VA = "0xC93FC8")]
			set
			{
			}
		}

		[Token(Token = "0x170002FF")]
		public Quaternion Rotation
		{
			[Token(Token = "0x6001E31")]
			[Address(RVA = "0xC94024", Offset = "0xC94024", VA = "0xC94024")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6001E32")]
			[Address(RVA = "0xC94058", Offset = "0xC94058", VA = "0xC94058")]
			set
			{
			}
		}

		[Token(Token = "0x6001E33")]
		[Address(RVA = "0xC940BC", Offset = "0xC940BC", VA = "0xC940BC")]
		public void AddForce(Vector3 force)
		{
		}

		[Token(Token = "0x6001E34")]
		[Address(RVA = "0xC94250", Offset = "0xC94250", VA = "0xC94250")]
		public void AddForceTowards(float force, Vector3 target)
		{
		}

		[Token(Token = "0x6001E35")]
		[Address(RVA = "0xC94368", Offset = "0xC94368", VA = "0xC94368")]
		public void _SetPinPosition(float3 worldPosition)
		{
		}

		[Token(Token = "0x6001E36")]
		[Address(RVA = "0xC94614", Offset = "0xC94614", VA = "0xC94614")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001E37")]
		[Address(RVA = "0xC949BC", Offset = "0xC949BC", VA = "0xC949BC")]
		public void GetChildren(List<JellyPoint> childrenOut)
		{
		}

		[Token(Token = "0x6001E38")]
		[Address(RVA = "0xC94B34", Offset = "0xC94B34", VA = "0xC94B34")]
		public JellyPoint GetFirstChild()
		{
			return null;
		}

		[Token(Token = "0x6001E39")]
		[Address(RVA = "0xC94D70", Offset = "0xC94D70", VA = "0xC94D70")]
		public void SetHardPinned(bool? hardPinned)
		{
		}

		[Token(Token = "0x6001E3A")]
		[Address(RVA = "0xC94ECC", Offset = "0xC94ECC", VA = "0xC94ECC")]
		public JellyPoint()
		{
		}
	}
	[Token(Token = "0x2000404")]
	public class JellyPointVelocityTracker : MonoBehaviour
	{
		[Token(Token = "0x4001216")]
		public const float VelocitySmoothLerpScalar = 3f;

		[Token(Token = "0x4001217")]
		public const float TypicalFastSpeedThreshold = 0.05f;

		[Token(Token = "0x4001218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private JellyPoint jellyPoint;

		[Token(Token = "0x4001219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 lastPolledLocation;

		[Token(Token = "0x400121A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C8E0C", Offset = "0x9C8E0C")]
		private Vector3 <VelocityRaw>k__BackingField;

		[Token(Token = "0x400121B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C8E1C", Offset = "0x9C8E1C")]
		private Vector3 <SmoothedVelocity>k__BackingField;

		[Token(Token = "0x17000300")]
		public Vector3 VelocityRaw
		{
			[Token(Token = "0x6001E3B")]
			[Address(RVA = "0xC94F58", Offset = "0xC94F58", VA = "0xC94F58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D4600", Offset = "0x9D4600")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001E3C")]
			[Address(RVA = "0xC94F64", Offset = "0xC94F64", VA = "0xC94F64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D4610", Offset = "0x9D4610")]
			private set
			{
			}
		}

		[Token(Token = "0x17000301")]
		public Vector3 SmoothedVelocity
		{
			[Token(Token = "0x6001E3D")]
			[Address(RVA = "0xC94F70", Offset = "0xC94F70", VA = "0xC94F70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D4620", Offset = "0x9D4620")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001E3E")]
			[Address(RVA = "0xC94F7C", Offset = "0xC94F7C", VA = "0xC94F7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D4630", Offset = "0x9D4630")]
			private set
			{
			}
		}

		[Token(Token = "0x17000302")]
		public float SmoothedVelocitySquared
		{
			[Token(Token = "0x6001E3F")]
			[Address(RVA = "0xC94F88", Offset = "0xC94F88", VA = "0xC94F88")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001E40")]
		[Address(RVA = "0xC94FFC", Offset = "0xC94FFC", VA = "0xC94FFC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E41")]
		[Address(RVA = "0xC95230", Offset = "0xC95230", VA = "0xC95230")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001E42")]
		[Address(RVA = "0xC95400", Offset = "0xC95400", VA = "0xC95400")]
		private void OnJellyPhysicsSync(float deltaTime)
		{
		}

		[Token(Token = "0x6001E43")]
		[Address(RVA = "0xC95564", Offset = "0xC95564", VA = "0xC95564")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001E44")]
		[Address(RVA = "0xC956D8", Offset = "0xC956D8", VA = "0xC956D8")]
		public JellyPointVelocityTracker()
		{
		}
	}
	[Token(Token = "0x2000405")]
	public enum AwakeStatus
	{
		[Token(Token = "0x400121D")]
		Awake,
		[Token(Token = "0x400121E")]
		Asleep
	}
	[Token(Token = "0x2000406")]
	public delegate void JellyAwakeStatusChangedDelegate(AwakeStatus status);
	[Token(Token = "0x2000407")]
	public delegate void JellyPhysicsSyncedDelegate(float timeStep);
	[Token(Token = "0x2000408")]
	public delegate void JellyTouchReportReadyDelegate(IReadOnlyList<JellySystem.JellyTouchResult> results, float dt);
	[Token(Token = "0x2000409")]
	public delegate void JellyGrabStatusChangedDelegate(InputHandedness hand, bool grabbed, int2 index);
	[Token(Token = "0x200040A")]
	public sealed class JellySystem : MonoBehaviour
	{
		[Token(Token = "0x20006A0")]
		[Flags]
		public enum JellySystemInteractionModeFlag
		{
			[Token(Token = "0x4001D5D")]
			None = 0,
			[Token(Token = "0x4001D5E")]
			Avoid = 1,
			[Token(Token = "0x4001D5F")]
			Grab = 2,
			[Token(Token = "0x4001D60")]
			AvoidAndGrab = 3
		}

		[Token(Token = "0x20006A1")]
		public enum JellySystemInterpolationSetting
		{
			[Token(Token = "0x4001D62")]
			None,
			[Token(Token = "0x4001D63")]
			Interpolation
		}

		[Token(Token = "0x20006A2")]
		public enum UpdatePosePolicy
		{
			[Token(Token = "0x4001D65")]
			Default,
			[Token(Token = "0x4001D66")]
			LateUpdateAnimator
		}

		[Token(Token = "0x20006A3")]
		public enum PinWeightDistribution
		{
			[Token(Token = "0x4001D68")]
			Even,
			[Token(Token = "0x4001D69")]
			LinearY,
			[Token(Token = "0x4001D6A")]
			Depth
		}

		[Token(Token = "0x20006A4")]
		public struct JellyTouchResult
		{
			[Token(Token = "0x4001D6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public InputHandedness Hand;

			[Token(Token = "0x4001D6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public Vector3 Velocity;

			[Token(Token = "0x4001D6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int Index;

			[Token(Token = "0x4001D6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public bool OnEnter;
		}

		[Serializable]
		[Token(Token = "0x20006A5")]
		public struct DistanceLink
		{
			[Token(Token = "0x4001D6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public JellyPoint A;

			[Token(Token = "0x4001D70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public JellyPoint B;

			[NonSerialized]
			[Token(Token = "0x4001D71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float IdealDistance;

			[Token(Token = "0x6002868")]
			[Address(RVA = "0xA83238", Offset = "0xA83238", VA = "0xA83238")]
			public float SampleIdealDistance()
			{
				return default(float);
			}

			[Token(Token = "0x6002869")]
			[Address(RVA = "0xA83240", Offset = "0xA83240", VA = "0xA83240")]
			public bool IsValid()
			{
				return default(bool);
			}

			[Token(Token = "0x600286A")]
			[Address(RVA = "0xA83248", Offset = "0xA83248", VA = "0xA83248")]
			public float MaxCapsuleScalar()
			{
				return default(float);
			}
		}

		[Serializable]
		[Token(Token = "0x20006A6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBF94", Offset = "0x9BBF94")]
		private sealed class <>c
		{
			[Token(Token = "0x4001D72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001D73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<JellyPoint, float> <>9__100_0;

			[Token(Token = "0x4001D74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<DistanceLink, float> <>9__100_1;

			[Token(Token = "0x600286C")]
			[Address(RVA = "0xD817B8", Offset = "0xD817B8", VA = "0xD817B8")]
			public <>c()
			{
			}

			[Token(Token = "0x600286D")]
			[Address(RVA = "0xD817C0", Offset = "0xD817C0", VA = "0xD817C0")]
			internal float <OptimizeIterationLayout>b__100_0(JellyPoint point)
			{
				return default(float);
			}

			[Token(Token = "0x600286E")]
			[Address(RVA = "0xD817EC", Offset = "0xD817EC", VA = "0xD817EC")]
			internal float <OptimizeIterationLayout>b__100_1(DistanceLink link)
			{
				return default(float);
			}
		}

		[Token(Token = "0x400121F")]
		public const float PlantHapticIntensity = 0.07f;

		[Token(Token = "0x4001220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9C8E2C", Offset = "0x9C8E2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9C8E2C", Offset = "0x9C8E2C")]
		public JellySystemInteractionModeFlag InteractionModeFlags;

		[Token(Token = "0x4001221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public JellySystemInterpolationSetting InterpolationSetting;

		[Token(Token = "0x4001222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 Gravity;

		[Token(Token = "0x4001223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9C8E8C", Offset = "0x9C8E8C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9C8E8C", Offset = "0x9C8E8C")]
		public float Drag;

		[Token(Token = "0x4001224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9C8EE0", Offset = "0x9C8EE0")]
		public float PinStrength;

		[Token(Token = "0x4001225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9C8F18", Offset = "0x9C8F18")]
		public float GrabBreakThreshold;

		[Token(Token = "0x4001226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9C8F50", Offset = "0x9C8F50")]
		public GameObject DynamicRenderers;

		[Token(Token = "0x4001227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject StaticRenderers;

		[Token(Token = "0x4001228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9C8F88", Offset = "0x9C8F88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9C8F88", Offset = "0x9C8F88")]
		public bool AlwaysAwake;

		[Token(Token = "0x4001229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9C8FE8", Offset = "0x9C8FE8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9C8FE8", Offset = "0x9C8FE8")]
		public int Iterations;

		[Token(Token = "0x400122A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float GlobalSquish;

		[Token(Token = "0x400122B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform FlattenParent;

		[Token(Token = "0x400122C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public PinWeightDistribution PinStrengthDistribution;

		[Token(Token = "0x400122D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float CapsuleRadius;

		[Token(Token = "0x400122E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x9C903C", Offset = "0x9C903C")]
		public bool KeepAwakeWhileMoving;

		[Token(Token = "0x400122F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float SqrMovementAwakeThreshold;

		[Token(Token = "0x4001230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x9C9050", Offset = "0x9C9050")]
		public bool SimulateRotations;

		[Token(Token = "0x4001231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float RotationSlerpFactor;

		[Token(Token = "0x4001232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool NoDeconstructHierarchy;

		[Token(Token = "0x4001233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public UpdatePosePolicy UpdatePosePolicySetting;

		[Token(Token = "0x4001234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public bool Asleep;

		[Token(Token = "0x4001235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9C9064", Offset = "0x9C9064")]
		public JellyPoint[] Points;

		[Token(Token = "0x4001236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public DistanceLink[] DistanceLinks;

		[Token(Token = "0x4001237")]
		private const float HandActivationColumnRadius = 1f;

		[Token(Token = "0x4001238")]
		private const int MaxStepsPerUpdate = 6;

		[Token(Token = "0x4001239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float WakeUpRadius;

		[Token(Token = "0x400123A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private readonly Queue<TupleStruct<int, float3>> _forceQueue;

		[Token(Token = "0x400123B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private readonly Queue<TupleStruct<int, bool>> _hardPinnedQueue;

		[Token(Token = "0x400123C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float _leftGrabHeldForSeconds;

		[Token(Token = "0x400123D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private float _rightGrabHeldForSeconds;

		[Token(Token = "0x400123E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float _timeUntilSleep;

		[Token(Token = "0x400123F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private float _timeAccumulator;

		[Token(Token = "0x4001240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool _compressOnNextUpdate;

		[Token(Token = "0x4001241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private float _globalScale;

		[Token(Token = "0x4001242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private bool _lastSleepSetting;

		[Token(Token = "0x4001243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private JellySystemJobMarshall _job;

		[Token(Token = "0x4001244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private float2 _grabBreak;

		[Token(Token = "0x4001245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private readonly List<JellyTouchResult> _touchResultBuffer;

		[Token(Token = "0x4001246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private int[] _touchedBuffer;

		[Token(Token = "0x4001247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private bool2 _wasGrabbing;

		[Token(Token = "0x4001248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private readonly List<int> _leftTouchedLastFrame;

		[Token(Token = "0x4001249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private readonly List<int> _rightTouchedLastFrame;

		[Token(Token = "0x400124A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private readonly List<int> _hardPins;

		[Token(Token = "0x400124B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private bool _firstSampleTaken;

		[Token(Token = "0x400124C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x111")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C909C", Offset = "0x9C909C")]
		private bool <IndicesAvailable>k__BackingField;

		[Token(Token = "0x4001253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private LinkedListNode<JellySystem> _idNode;

		[Token(Token = "0x4001254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private float3 _posBeforeSleep;

		[Token(Token = "0x4001255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		private float3? _oneTimeReferenceFrameMovement;

		[Token(Token = "0x4001256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C910C", Offset = "0x9C910C")]
		private float <ThirstSlumpForce>k__BackingField;

		[Token(Token = "0x4001257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C911C", Offset = "0x9C911C")]
		private float <ThirstDragForce>k__BackingField;

		[Token(Token = "0x4001258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		private bool _renderersAreIdentical;

		[Token(Token = "0x17000303")]
		public float DefaultSleepTime
		{
			[Token(Token = "0x6001E55")]
			[Address(RVA = "0xC956E0", Offset = "0xC956E0", VA = "0xC956E0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000304")]
		public float GrabToleranceSeconds
		{
			[Token(Token = "0x6001E56")]
			[Address(RVA = "0xC956E8", Offset = "0xC956E8", VA = "0xC956E8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000305")]
		public float FixedTimestep
		{
			[Token(Token = "0x6001E57")]
			[Address(RVA = "0xC956F4", Offset = "0xC956F4", VA = "0xC956F4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000306")]
		public bool IndicesAvailable
		{
			[Token(Token = "0x6001E59")]
			[Address(RVA = "0xC9570C", Offset = "0xC9570C", VA = "0xC9570C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D4650", Offset = "0x9D4650")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E58")]
			[Address(RVA = "0xC95700", Offset = "0xC95700", VA = "0xC95700")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D4640", Offset = "0x9D4640")]
			private set
			{
			}
		}

		[Token(Token = "0x17000307")]
		public float LeftGrabHeldForSeconds
		{
			[Token(Token = "0x6001E66")]
			[Address(RVA = "0xC96074", Offset = "0xC96074", VA = "0xC96074")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000308")]
		public float RightGrabHeldForSeconds
		{
			[Token(Token = "0x6001E67")]
			[Address(RVA = "0xC9607C", Offset = "0xC9607C", VA = "0xC9607C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000309")]
		public float ThirstSlumpForce
		{
			[Token(Token = "0x6001E68")]
			[Address(RVA = "0xC96084", Offset = "0xC96084", VA = "0xC96084")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D4720", Offset = "0x9D4720")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E69")]
			[Address(RVA = "0xC9608C", Offset = "0xC9608C", VA = "0xC9608C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D4730", Offset = "0x9D4730")]
			set
			{
			}
		}

		[Token(Token = "0x1700030A")]
		public float ThirstDragForce
		{
			[Token(Token = "0x6001E6A")]
			[Address(RVA = "0xC96094", Offset = "0xC96094", VA = "0xC96094")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D4740", Offset = "0x9D4740")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E6B")]
			[Address(RVA = "0xC9609C", Offset = "0xC9609C", VA = "0xC9609C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D4750", Offset = "0x9D4750")]
			set
			{
			}
		}

		[Token(Token = "0x1700030B")]
		public bool BeingGrabbed
		{
			[Token(Token = "0x6001E6C")]
			[Address(RVA = "0xC960A4", Offset = "0xC960A4", VA = "0xC960A4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x14000037")]
		public event JellyPhysicsSyncedDelegate OnJellyPhysicsSync
		{
			[Token(Token = "0x6001E5A")]
			[Address(RVA = "0xC95140", Offset = "0xC95140", VA = "0xC95140")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D4660", Offset = "0x9D4660")]
			add
			{
			}
			[Token(Token = "0x6001E5B")]
			[Address(RVA = "0xC95310", Offset = "0xC95310", VA = "0xC95310")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D4670", Offset = "0x9D4670")]
			remove
			{
			}
		}

		[Token(Token = "0x14000038")]
		public event JellyPhysicsSyncedDelegate OnPreUpdate
		{
			[Token(Token = "0x6001E5C")]
			[Address(RVA = "0xC95714", Offset = "0xC95714", VA = "0xC95714")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D4680", Offset = "0x9D4680")]
			add
			{
			}
			[Token(Token = "0x6001E5D")]
			[Address(RVA = "0xC95804", Offset = "0xC95804", VA = "0xC95804")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D4690", Offset = "0x9D4690")]
			remove
			{
			}
		}

		[Token(Token = "0x14000039")]
		public event JellyPhysicsSyncedDelegate OnPostInterpolateSync
		{
			[Token(Token = "0x6001E5E")]
			[Address(RVA = "0xC958F4", Offset = "0xC958F4", VA = "0xC958F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D46A0", Offset = "0x9D46A0")]
			add
			{
			}
			[Token(Token = "0x6001E5F")]
			[Address(RVA = "0xC959E4", Offset = "0xC959E4", VA = "0xC959E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D46B0", Offset = "0x9D46B0")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003A")]
		public event JellyTouchReportReadyDelegate OnJellyTouchReport
		{
			[Token(Token = "0x6001E60")]
			[Address(RVA = "0xC95AD4", Offset = "0xC95AD4", VA = "0xC95AD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D46C0", Offset = "0x9D46C0")]
			add
			{
			}
			[Token(Token = "0x6001E61")]
			[Address(RVA = "0xC95BC4", Offset = "0xC95BC4", VA = "0xC95BC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D46D0", Offset = "0x9D46D0")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003B")]
		public event JellyAwakeStatusChangedDelegate OnAwakeStatusChanged
		{
			[Token(Token = "0x6001E62")]
			[Address(RVA = "0xC95CB4", Offset = "0xC95CB4", VA = "0xC95CB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D46E0", Offset = "0x9D46E0")]
			add
			{
			}
			[Token(Token = "0x6001E63")]
			[Address(RVA = "0xC95DA4", Offset = "0xC95DA4", VA = "0xC95DA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D46F0", Offset = "0x9D46F0")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003C")]
		public event JellyGrabStatusChangedDelegate OnJellyGrabStatusChanged
		{
			[Token(Token = "0x6001E64")]
			[Address(RVA = "0xC95E94", Offset = "0xC95E94", VA = "0xC95E94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D4700", Offset = "0x9D4700")]
			add
			{
			}
			[Token(Token = "0x6001E65")]
			[Address(RVA = "0xC95F84", Offset = "0xC95F84", VA = "0xC95F84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D4710", Offset = "0x9D4710")]
			remove
			{
			}
		}

		[Token(Token = "0x6001E6D")]
		[Address(RVA = "0xC960C4", Offset = "0xC960C4", VA = "0xC960C4")]
		public void WakeUp(float extraTime = 0f)
		{
		}

		[Token(Token = "0x6001E6E")]
		[Address(RVA = "0xC960D4", Offset = "0xC960D4", VA = "0xC960D4")]
		public void Sleep()
		{
		}

		[Token(Token = "0x6001E6F")]
		[Address(RVA = "0xC96BD8", Offset = "0xC96BD8", VA = "0xC96BD8")]
		public void UnfoldEffect()
		{
		}

		[Token(Token = "0x6001E70")]
		[Address(RVA = "0xC96CE4", Offset = "0xC96CE4", VA = "0xC96CE4")]
		public void AddUpKick(float kickForce = 72f)
		{
		}

		[Token(Token = "0x6001E71")]
		[Address(RVA = "0xC941A8", Offset = "0xC941A8", VA = "0xC941A8")]
		public void AddLocalForceImpulse(int index, float3 force)
		{
		}

		[Token(Token = "0x6001E72")]
		[Address(RVA = "0xC94DB4", Offset = "0xC94DB4", VA = "0xC94DB4")]
		public void SetHardPinned(int jellyPointIndex, bool? hardPinned)
		{
		}

		[Token(Token = "0x6001E73")]
		[Address(RVA = "0xC96DB4", Offset = "0xC96DB4", VA = "0xC96DB4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x9D4760", Offset = "0x9D4760")]
		public void OptimizeIterationLayout()
		{
		}

		[Token(Token = "0x6001E74")]
		[Address(RVA = "0xC96FC0", Offset = "0xC96FC0", VA = "0xC96FC0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x9D4798", Offset = "0x9D4798")]
		public void ReverseIterationLayout()
		{
		}

		[Token(Token = "0x6001E75")]
		[Address(RVA = "0xC97094", Offset = "0xC97094", VA = "0xC97094")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x9D47D0", Offset = "0x9D47D0")]
		public void BoneHierarchyPlant()
		{
		}

		[Token(Token = "0x6001E76")]
		[Address(RVA = "0xC97764", Offset = "0xC97764", VA = "0xC97764")]
		public void BreakGrabs()
		{
		}

		[Token(Token = "0x6001E77")]
		[Address(RVA = "0xC977A0", Offset = "0xC977A0", VA = "0xC977A0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001E78")]
		[Address(RVA = "0xC982D8", Offset = "0xC982D8", VA = "0xC982D8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E79")]
		[Address(RVA = "0xC982DC", Offset = "0xC982DC", VA = "0xC982DC")]
		private void TakeFirstSampleIfNeeded()
		{
		}

		[Token(Token = "0x6001E7A")]
		[Address(RVA = "0xC97AA4", Offset = "0xC97AA4", VA = "0xC97AA4")]
		public void AssignIndices()
		{
		}

		[Token(Token = "0x6001E7B")]
		[Address(RVA = "0xC98334", Offset = "0xC98334", VA = "0xC98334")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001E7C")]
		[Address(RVA = "0xC97A84", Offset = "0xC97A84", VA = "0xC97A84")]
		private bool IsBaked()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E7D")]
		[Address(RVA = "0xC98348", Offset = "0xC98348", VA = "0xC98348")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001E7E")]
		[Address(RVA = "0xC983DC", Offset = "0xC983DC", VA = "0xC983DC")]
		public void SetTimeAccumulatorPercentage(float percentage01)
		{
		}

		[Token(Token = "0x6001E7F")]
		[Address(RVA = "0xC983F0", Offset = "0xC983F0", VA = "0xC983F0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001E80")]
		[Address(RVA = "0xC9846C", Offset = "0xC9846C", VA = "0xC9846C")]
		public void _Update()
		{
		}

		[Token(Token = "0x6001E81")]
		[Address(RVA = "0xC984A8", Offset = "0xC984A8", VA = "0xC984A8")]
		private void EarlyPhysicsStep(float deltaTime)
		{
		}

		[Token(Token = "0x6001E82")]
		[Address(RVA = "0xC98D58", Offset = "0xC98D58", VA = "0xC98D58")]
		private void DispatchJob(float deltaTime, int iterations, float interpolation)
		{
		}

		[Token(Token = "0x6001E83")]
		[Address(RVA = "0xC99410", Offset = "0xC99410", VA = "0xC99410")]
		public void _LateUpdate()
		{
		}

		[Token(Token = "0x6001E84")]
		[Address(RVA = "0xC96108", Offset = "0xC96108", VA = "0xC96108")]
		private void CompleteJob()
		{
		}

		[Token(Token = "0x6001E85")]
		[Address(RVA = "0xC9944C", Offset = "0xC9944C", VA = "0xC9944C")]
		private static void _PruneTouchIndices(List<int> touchRecord, List<JellyTouchResult> touchResultBuffer, InputHandedness hand)
		{
		}

		[Token(Token = "0x6001E86")]
		[Address(RVA = "0xC98970", Offset = "0xC98970", VA = "0xC98970")]
		private void CheckRendererState()
		{
		}

		[Token(Token = "0x6001E87")]
		[Address(RVA = "0xC96BF0", Offset = "0xC96BF0", VA = "0xC96BF0")]
		private void HideAllRenderers()
		{
		}

		[Token(Token = "0x6001E88")]
		[Address(RVA = "0xC97B7C", Offset = "0xC97B7C", VA = "0xC97B7C")]
		private void SetPinPositions()
		{
		}

		[Token(Token = "0x6001E89")]
		[Address(RVA = "0xC97514", Offset = "0xC97514", VA = "0xC97514")]
		private void PinDepthCrawl(JellyPoint[] points)
		{
		}

		[Token(Token = "0x6001E8A")]
		[Address(RVA = "0xC995CC", Offset = "0xC995CC", VA = "0xC995CC")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001E8B")]
		[Address(RVA = "0xC99698", Offset = "0xC99698", VA = "0xC99698")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001E8C")]
		[Address(RVA = "0xC99724", Offset = "0xC99724", VA = "0xC99724")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001E8D")]
		[Address(RVA = "0xC943CC", Offset = "0xC943CC", VA = "0xC943CC")]
		public void _SetPinPosition(int pointIndex, Vector3 worldPosition)
		{
		}

		[Token(Token = "0x6001E8E")]
		[Address(RVA = "0xC997BC", Offset = "0xC997BC", VA = "0xC997BC")]
		public float3 _GetPinPositionLocal(int pointIndex)
		{
			return default(float3);
		}

		[Token(Token = "0x6001E8F")]
		[Address(RVA = "0xC99800", Offset = "0xC99800", VA = "0xC99800")]
		public void _SetPinPositionLocal(int pointIndex, float3 local)
		{
		}

		[Token(Token = "0x6001E90")]
		[Address(RVA = "0xC9985C", Offset = "0xC9985C", VA = "0xC9985C")]
		public int? SearchClosestJoint(float3 pos)
		{
			return null;
		}

		[Token(Token = "0x6001E91")]
		[Address(RVA = "0xC98BA0", Offset = "0xC98BA0", VA = "0xC98BA0")]
		private void SamplePoseIntoPinBuffers()
		{
		}

		[Token(Token = "0x6001E92")]
		[Address(RVA = "0xC99870", Offset = "0xC99870", VA = "0xC99870")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x9D4808", Offset = "0x9D4808")]
		private void DoUnfold()
		{
		}

		[Token(Token = "0x6001E93")]
		[Address(RVA = "0xC94A00", Offset = "0xC94A00", VA = "0xC94A00")]
		public void GetChildren(JellyPoint parent, List<JellyPoint> childrenOut)
		{
		}

		[Token(Token = "0x6001E94")]
		[Address(RVA = "0xC94C84", Offset = "0xC94C84", VA = "0xC94C84")]
		public JellyPoint GetFirstChild(JellyPoint parent)
		{
			return null;
		}

		[Token(Token = "0x6001E95")]
		[Address(RVA = "0xC99888", Offset = "0xC99888", VA = "0xC99888")]
		public JellySystem()
		{
		}
	}
	[Serializable]
	[StructLayout(2)]
	[Token(Token = "0x200040B")]
	public struct MultiVar32
	{
		[Token(Token = "0x4001259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float Float;

		[Token(Token = "0x400125A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int Integer;

		[Token(Token = "0x400125B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool1 Bool;

		[Token(Token = "0x6001E96")]
		[Address(RVA = "0xD8431C", Offset = "0xD8431C", VA = "0xD8431C")]
		public static implicit operator MultiVar32(float f)
		{
			return default(MultiVar32);
		}

		[Token(Token = "0x6001E97")]
		[Address(RVA = "0xD84324", Offset = "0xD84324", VA = "0xD84324")]
		public static implicit operator MultiVar32(int i)
		{
			return default(MultiVar32);
		}

		[Token(Token = "0x6001E98")]
		[Address(RVA = "0xD8432C", Offset = "0xD8432C", VA = "0xD8432C")]
		public static implicit operator MultiVar32(bool b)
		{
			return default(MultiVar32);
		}
	}
	[Serializable]
	[Token(Token = "0x200040C")]
	public struct JellyDistanceConstraintStruct
	{
		[Token(Token = "0x400125C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int IndexA;

		[Token(Token = "0x400125D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int IndexB;

		[Token(Token = "0x400125E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float IdealDistance;

		[Token(Token = "0x400125F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float CapsuleSizeScalar;
	}
	[Serializable]
	[Token(Token = "0x200040D")]
	public struct JellyGrabConstraintStruct
	{
		[Token(Token = "0x4001260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int PointIndex;

		[Token(Token = "0x4001261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float DistanceToHand;

		[Token(Token = "0x1700030C")]
		public static JellyGrabConstraintStruct NullIndex
		{
			[Token(Token = "0x6001E99")]
			[Address(RVA = "0xC91C78", Offset = "0xC91C78", VA = "0xC91C78")]
			get
			{
				return default(JellyGrabConstraintStruct);
			}
		}
	}
	[Serializable]
	[Token(Token = "0x200040E")]
	public struct JellyRotationConstraintStruct
	{
		[Token(Token = "0x4001262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float3 LocalUp;

		[Token(Token = "0x4001263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool1 HasOffset;

		[Token(Token = "0x4001264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public quaternion OffsetFromLook;
	}
	[Token(Token = "0x200040F")]
	public class JellySystemJobMarshall
	{
		[Token(Token = "0x20006A7")]
		public enum JobState
		{
			[Token(Token = "0x4001D76")]
			Physics,
			[Token(Token = "0x4001D77")]
			Interpolation,
			[Token(Token = "0x4001D78")]
			None
		}

		[Serializable]
		[Token(Token = "0x20006A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBFA4", Offset = "0x9BBFA4")]
		private sealed class <>c
		{
			[Token(Token = "0x4001D79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001D7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<JellyPoint, Transform> <>9__27_0;

			[Token(Token = "0x6002870")]
			[Address(RVA = "0xD83508", Offset = "0xD83508", VA = "0xD83508")]
			public <>c()
			{
			}

			[Token(Token = "0x6002871")]
			[Address(RVA = "0xD83510", Offset = "0xD83510", VA = "0xD83510")]
			internal Transform <.ctor>b__27_0(JellyPoint p)
			{
				return null;
			}
		}

		[Token(Token = "0x4001265")]
		public const int MovementStatisticsIndex = 0;

		[Token(Token = "0x4001266")]
		public const int LeftGrabStretchIndex = 1;

		[Token(Token = "0x4001267")]
		public const int RightGrabStretchIndex = 2;

		[Token(Token = "0x4001268")]
		public const float RotationDistanceThreshold = 0.001f;

		[Token(Token = "0x4001269")]
		public const int MaxContactPointsPerReport = 6;

		[Token(Token = "0x400126A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public NativeArray<float3> PreviousPointPositions;

		[Token(Token = "0x400126B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NativeArray<float3> PositionBuffer;

		[Token(Token = "0x400126C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public NativeArray<float3> LocalParentalPinOffset;

		[Token(Token = "0x400126D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public NativeArray<float> PinStrength;

		[Token(Token = "0x400126E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public NativeArray<float3> PinPositionsInWorldSpace;

		[Token(Token = "0x400126F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public NativeArray<bool1> HardPinned;

		[Token(Token = "0x4001270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public NativeArray<JellyDistanceConstraintStruct> DistanceConstraints;

		[Token(Token = "0x4001271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public TransformAccessArray PointTransforms;

		[Token(Token = "0x4001272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public NativeArray<int> ParentIndex;

		[Token(Token = "0x4001273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public NativeArray<float3> ParentPositionBuffer;

		[Token(Token = "0x4001274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public NativeArray<int> GrabbedDistanceConstraints;

		[Token(Token = "0x4001275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public NativeArray<JellyGrabConstraintStruct> GrabConstraints;

		[Token(Token = "0x4001276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public NativeArray<MultiVar32> Statistics;

		[Token(Token = "0x4001277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public NativeArray<float3> LocalForce;

		[Token(Token = "0x4001278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public NativeArray<quaternion> RotationBuffer;

		[Token(Token = "0x4001279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public NativeArray<JellyRotationConstraintStruct> RotationConstraints;

		[Token(Token = "0x400127A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public NativeArray<int> TouchedBuffer;

		[Token(Token = "0x400127B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private JobHandle _frameJobHandle;

		[Token(Token = "0x400127C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C912C", Offset = "0x9C912C")]
		private float <VirtualTimeConsumedLastUpdate>k__BackingField;

		[Token(Token = "0x400127D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C913C", Offset = "0x9C913C")]
		private JobState <State>k__BackingField;

		[Token(Token = "0x1700030D")]
		public float VirtualTimeConsumedLastUpdate
		{
			[Token(Token = "0x6001E9B")]
			[Address(RVA = "0xD81A94", Offset = "0xD81A94", VA = "0xD81A94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D4850", Offset = "0x9D4850")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E9A")]
			[Address(RVA = "0xD81A8C", Offset = "0xD81A8C", VA = "0xD81A8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D4840", Offset = "0x9D4840")]
			private set
			{
			}
		}

		[Token(Token = "0x1700030E")]
		public JobState State
		{
			[Token(Token = "0x6001E9E")]
			[Address(RVA = "0xD827F8", Offset = "0xD827F8", VA = "0xD827F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D4860", Offset = "0x9D4860")]
			get
			{
				return default(JobState);
			}
			[Token(Token = "0x6001E9F")]
			[Address(RVA = "0xD82800", Offset = "0xD82800", VA = "0xD82800")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D4870", Offset = "0x9D4870")]
			private set
			{
			}
		}

		[Token(Token = "0x6001E9C")]
		[Address(RVA = "0xD81A9C", Offset = "0xD81A9C", VA = "0xD81A9C")]
		public JellySystemJobMarshall(JellyPoint[] points, JellySystem.DistanceLink[] links)
		{
		}

		[Token(Token = "0x6001E9D")]
		[Address(RVA = "0xD826E4", Offset = "0xD826E4", VA = "0xD826E4")]
		public void SampleBonePositionsIntoBuffers(JellyPoint[] points)
		{
		}

		[Token(Token = "0x6001EA0")]
		[Address(RVA = "0xD82808", Offset = "0xD82808", VA = "0xD82808")]
		public void SubmitPhysicsJob(JellySystem system, float timeStep, float3x3 leftHandPosition, float3x3 rightHandPosition, bool compressToBase, float2 extraHandRadius, float3 gravity, float drag, int macroIterations, float interpolation, float3 referenceFrameOffset)
		{
		}

		[Token(Token = "0x6001EA1")]
		[Address(RVA = "0xD82EBC", Offset = "0xD82EBC", VA = "0xD82EBC")]
		private JobHandle ScheduleInterpolationJob(JellySystem system, float interpolation, JobHandle handle, float deltaTime)
		{
			return default(JobHandle);
		}

		[Token(Token = "0x6001EA2")]
		[Address(RVA = "0xD82FC4", Offset = "0xD82FC4", VA = "0xD82FC4")]
		public void SubmitInterpolationJob(JellySystem system, float interpolation, float deltaTime)
		{
		}

		[Token(Token = "0x6001EA3")]
		[Address(RVA = "0xD82FF8", Offset = "0xD82FF8", VA = "0xD82FF8")]
		public void WaitForInterpolationJobToComplete()
		{
		}

		[Token(Token = "0x6001EA4")]
		[Address(RVA = "0xD83010", Offset = "0xD83010", VA = "0xD83010")]
		public void WaitForPhysicsJobToComplete(out float movementSquared, out InputHandedness touched, ref int[] touchedBuffer, out float leftGrabStretch, out float rightGrabStretch)
		{
		}

		[Token(Token = "0x6001EA5")]
		[Address(RVA = "0xD8321C", Offset = "0xD8321C", VA = "0xD8321C")]
		public void NativeDestroy()
		{
		}

		[Token(Token = "0x6001EA6")]
		[Address(RVA = "0xD83374", Offset = "0xD83374", VA = "0xD83374")]
		public int? SearchForClosestPoint(float3 point)
		{
			return null;
		}
	}
	[Token(Token = "0x2000410")]
	[BurstCompile]
	public struct JellyWriteInterpolatedPositionJob : IJobParallelForTransform
	{
		[Token(Token = "0x400127E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[ReadOnly]
		public NativeArray<float3> OldPositionBuffer;

		[Token(Token = "0x400127F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[ReadOnly]
		public NativeArray<float3> PositionBuffer;

		[Token(Token = "0x4001280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[ReadOnly]
		public NativeArray<bool1> HardPinned;

		[Token(Token = "0x4001281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[ReadOnly]
		public NativeArray<quaternion> RotationBuffer;

		[Token(Token = "0x4001282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[ReadOnly]
		public float Interpolation;

		[Token(Token = "0x4001283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[ReadOnly]
		public float RotationalSlerpFactor;

		[Token(Token = "0x6001EA7")]
		[Address(RVA = "0xA83300", Offset = "0xA83300", VA = "0xA83300", Slot = "4")]
		public void Execute(int index, TransformAccess transform)
		{
		}
	}
	[Token(Token = "0x2000411")]
	[BurstCompile]
	public struct JellyJobMacroJob : IJob
	{
		[Token(Token = "0x4001284")]
		public const float GlobalScale = 0.5f;

		[Token(Token = "0x4001285")]
		public const float HandActivationRadius = 1.5f;

		[Token(Token = "0x4001286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public NativeArray<float3> PositionBuffer;

		[Token(Token = "0x4001287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public NativeArray<float3> OldPosition;

		[Token(Token = "0x4001288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NativeArray<int> GrabbedDistanceConstraints;

		[Token(Token = "0x4001289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public NativeArray<JellyGrabConstraintStruct> GrabConstraints;

		[Token(Token = "0x400128A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public NativeArray<MultiVar32> Statistics;

		[Token(Token = "0x400128B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public NativeArray<float3> PinPositionsInWorldSpace;

		[Token(Token = "0x400128C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public NativeArray<int> TouchedBuffer;

		[Token(Token = "0x400128D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public NativeArray<quaternion> RotationBuffer;

		[Token(Token = "0x400128E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public NativeArray<float3> LocalForce;

		[Token(Token = "0x400128F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[ReadOnly]
		public NativeArray<JellyRotationConstraintStruct> RotationalConstraints;

		[Token(Token = "0x4001290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[ReadOnly]
		public NativeArray<JellyDistanceConstraintStruct> DistanceConstraints;

		[Token(Token = "0x4001291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[ReadOnly]
		public NativeArray<float3> LocalParentalPinOffset;

		[Token(Token = "0x4001292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[ReadOnly]
		public NativeArray<int> ParentIndex;

		[Token(Token = "0x4001293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[ReadOnly]
		public NativeArray<bool1> HardPinned;

		[Token(Token = "0x4001294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[ReadOnly]
		public float GlobalSquish;

		[Token(Token = "0x4001295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[ReadOnly]
		public float2 CapsuleRadius;

		[Token(Token = "0x4001296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[ReadOnly]
		public float TimeStep;

		[Token(Token = "0x4001297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[ReadOnly]
		public float Drag;

		[Token(Token = "0x4001298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[ReadOnly]
		public float3 ReferenceFrameOffset;

		[Token(Token = "0x4001299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[ReadOnly]
		public float3 Force;

		[Token(Token = "0x400129A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		[ReadOnly]
		public float4x4 WorldOffsetRotation;

		[Token(Token = "0x400129B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		[ReadOnly]
		public float PinStrength;

		[Token(Token = "0x400129C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[ReadOnly]
		public NativeArray<float> PinStrengths;

		[Token(Token = "0x400129D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[ReadOnly]
		public float3x3 LeftHandPosition;

		[Token(Token = "0x400129E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		[ReadOnly]
		public float3x3 RightHandPosition;

		[Token(Token = "0x400129F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		[ReadOnly]
		public float3 WorldRoot;

		[Token(Token = "0x40012A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
		[ReadOnly]
		public float2 GrabbingForSeconds;

		[Token(Token = "0x40012A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
		[ReadOnly]
		public int Iterations;

		[Token(Token = "0x40012A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		[ReadOnly]
		public JellySystem.JellySystemInteractionModeFlag InteractionModeFlags;

		[Token(Token = "0x40012A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		[ReadOnly]
		public int MacroIterations;

		[Token(Token = "0x40012A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[ReadOnly]
		public bool1 SimulateRotations;

		[Token(Token = "0x40012A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C9")]
		[ReadOnly]
		public bool1 Compress;

		[Token(Token = "0x40012A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		[ReadOnly]
		public float3 RootWorldPosition;

		[Token(Token = "0x40012A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[ReadOnly]
		public float GrabToleranceSeconds;

		[MethodImpl(256)]
		[Token(Token = "0x6001EA8")]
		[Address(RVA = "0xC9220C", Offset = "0xC9220C", VA = "0xC9220C")]
		public static bool1 ContainsAny(JellySystem.JellySystemInteractionModeFlag toCheck, JellySystem.JellySystemInteractionModeFlag inclusionFlags)
		{
			return default(bool1);
		}

		[Token(Token = "0x6001EA9")]
		[Address(RVA = "0xA82608", Offset = "0xA82608", VA = "0xA82608", Slot = "4")]
		public void Execute()
		{
		}

		[MethodImpl(256)]
		[Token(Token = "0x6001EAA")]
		[Address(RVA = "0xC9301C", Offset = "0xC9301C", VA = "0xC9301C")]
		private static void PerHandAvoidAndGrab(bool1 handInRange, float3x3 input, ref int grabbedIndex, float grabHeldForSeconds, int opposingGrabIndex, InputHandedness hand, float handRadius, float grabToleranceSeconds, NativeArray<JellyGrabConstraintStruct> GrabConstraints, NativeArray<JellyDistanceConstraintStruct> DistanceConstraints, NativeArray<float3> PositionBuffer, JellySystem.JellySystemInteractionModeFlag InteractionModeFlags, NativeArray<int> TouchedBuffer, NativeArray<float3> OldPosition)
		{
		}

		[MethodImpl(256)]
		[Token(Token = "0x6001EAB")]
		[Address(RVA = "0xC932B0", Offset = "0xC932B0", VA = "0xC932B0")]
		private static void CheckHandAvoidance(float3x3 handPos, out int inGrabRange, out float closestCapsuleSqrDist, float handRadius, out bool1 touched, InputHandedness hand, NativeArray<JellyDistanceConstraintStruct> DistanceConstraints, NativeArray<float3> PositionBuffer, JellySystem.JellySystemInteractionModeFlag InteractionModeFlags, NativeArray<int> TouchedBuffer)
		{
		}
	}
	[Token(Token = "0x2000412")]
	[BurstCompile]
	internal struct ClosestJellyPointJob : IJob
	{
		[Token(Token = "0x40012A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[ReadOnly]
		public float3 Position;

		[Token(Token = "0x40012A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[WriteOnly]
		public NativeArray<int> Result;

		[Token(Token = "0x40012AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[ReadOnly]
		public NativeArray<float3> PositionBuffer;

		[Token(Token = "0x40012AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[ReadOnly]
		public NativeArray<bool1> HardPinned;

		[Token(Token = "0x6001EAC")]
		[Address(RVA = "0xA82588", Offset = "0xA82588", VA = "0xA82588", Slot = "4")]
		public void Execute()
		{
		}
	}
	[Token(Token = "0x2000413")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9BA77C", Offset = "0x9BA77C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9BA77C", Offset = "0x9BA77C")]
	public class JellySystemStateLerp : MonoBehaviour
	{
		[Token(Token = "0x6001EAD")]
		[Address(RVA = "0xD83540", Offset = "0xD83540", VA = "0xD83540")]
		public JellySystemStateLerp()
		{
		}
	}
	[Token(Token = "0x2000414")]
	public class JellyVelocityActivator : MonoBehaviour, IActivatable
	{
		[Token(Token = "0x40012AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _triggerSpeedSquared;

		[Token(Token = "0x40012AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private JellyPointVelocityTracker _velocityTracker;

		[Token(Token = "0x40012AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private JellyPoint _jellyPoint;

		[Token(Token = "0x40012AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float _cooldown;

		[Token(Token = "0x40012B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _lastActivation;

		[Token(Token = "0x40012B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C93BC", Offset = "0x9C93BC")]
		private bool <CanActivate>k__BackingField;

		[Token(Token = "0x1700030F")]
		public Vector3 Velocity
		{
			[Token(Token = "0x6001EAE")]
			[Address(RVA = "0xD83D90", Offset = "0xD83D90", VA = "0xD83D90")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000310")]
		public bool CanActivate
		{
			[Token(Token = "0x6001EAF")]
			[Address(RVA = "0xD83DC0", Offset = "0xD83DC0", VA = "0xD83DC0", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D4880", Offset = "0x9D4880")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001EB0")]
			[Address(RVA = "0xD83DC8", Offset = "0xD83DC8", VA = "0xD83DC8", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D4890", Offset = "0x9D4890")]
			set
			{
			}
		}

		[Token(Token = "0x1400003D")]
		public event Action OnActivate
		{
			[Token(Token = "0x6001EB1")]
			[Address(RVA = "0xD83DD4", Offset = "0xD83DD4", VA = "0xD83DD4", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D48A0", Offset = "0x9D48A0")]
			add
			{
			}
			[Token(Token = "0x6001EB2")]
			[Address(RVA = "0xD83EC0", Offset = "0xD83EC0", VA = "0xD83EC0", Slot = "7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D48B0", Offset = "0x9D48B0")]
			remove
			{
			}
		}

		[Token(Token = "0x6001EB3")]
		[Address(RVA = "0xD83FAC", Offset = "0xD83FAC", VA = "0xD83FAC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001EB4")]
		[Address(RVA = "0xD84108", Offset = "0xD84108", VA = "0xD84108")]
		private void Update()
		{
		}

		[Token(Token = "0x6001EB5")]
		[Address(RVA = "0xD84198", Offset = "0xD84198", VA = "0xD84198", Slot = "8")]
		public void SetActivationThreshold(float threshold)
		{
		}

		[Token(Token = "0x6001EB6")]
		[Address(RVA = "0xD841A0", Offset = "0xD841A0", VA = "0xD841A0")]
		public void SetCooldown(float cooldown)
		{
		}

		[Token(Token = "0x6001EB7")]
		[Address(RVA = "0xD841A8", Offset = "0xD841A8", VA = "0xD841A8")]
		public JellyVelocityActivator()
		{
		}
	}
}
namespace Fuji.Module
{
	[Token(Token = "0x2000415")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9BA7F0", Offset = "0x9BA7F0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9BA7F0", Offset = "0x9BA7F0")]
	public class SpinControlModule : MonoBehaviour
	{
		[Token(Token = "0x6001EB8")]
		[Address(RVA = "0xD9B4A4", Offset = "0xD9B4A4", VA = "0xD9B4A4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001EB9")]
		[Address(RVA = "0xD9B5CC", Offset = "0xD9B5CC", VA = "0xD9B5CC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001EBA")]
		[Address(RVA = "0xD9B6F4", Offset = "0xD9B6F4", VA = "0xD9B6F4")]
		private void SpinControl(PlayerControllerInput input)
		{
		}

		[Token(Token = "0x6001EBB")]
		[Address(RVA = "0xD9B7D0", Offset = "0xD9B7D0", VA = "0xD9B7D0")]
		public SpinControlModule()
		{
		}
	}
}
namespace Fuji.Intelligence.Gnome
{
	[Token(Token = "0x2000416")]
	public class CompanionGnomeEntity : MonoBehaviour
	{
		[Token(Token = "0x20006A9")]
		private class GnomeSleepTask : ITask<CompanionGnomeEntity>
		{
			[Token(Token = "0x4001D7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float SleepTimeRemaining;

			[Token(Token = "0x4001D7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private Vector3 sleepPosition;

			[Token(Token = "0x4001D7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C9CD4", Offset = "0x9C9CD4")]
			private CompanionGnomeEntity <Target>k__BackingField;

			[Token(Token = "0x170004FB")]
			public int Priority
			{
				[Token(Token = "0x6002872")]
				[Address(RVA = "0xC8F7CC", Offset = "0xC8F7CC", VA = "0xC8F7CC", Slot = "6")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x170004FC")]
			public CompanionGnomeEntity Target
			{
				[Token(Token = "0x6002873")]
				[Address(RVA = "0xC8F7D4", Offset = "0xC8F7D4", VA = "0xC8F7D4", Slot = "4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D9464", Offset = "0x9D9464")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002874")]
				[Address(RVA = "0xC8F7DC", Offset = "0xC8F7DC", VA = "0xC8F7DC", Slot = "5")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D9474", Offset = "0x9D9474")]
				set
				{
				}
			}

			[Token(Token = "0x6002875")]
			[Address(RVA = "0xC8F7E4", Offset = "0xC8F7E4", VA = "0xC8F7E4", Slot = "7")]
			public TaskResult OnEnter()
			{
				return default(TaskResult);
			}

			[Token(Token = "0x6002876")]
			[Address(RVA = "0xC8F974", Offset = "0xC8F974", VA = "0xC8F974", Slot = "9")]
			public void OnExit()
			{
			}

			[Token(Token = "0x6002877")]
			[Address(RVA = "0xC8FBB8", Offset = "0xC8FBB8", VA = "0xC8FBB8", Slot = "8")]
			public TaskResult OnUpdate()
			{
				return default(TaskResult);
			}

			[Token(Token = "0x6002878")]
			[Address(RVA = "0xC88258", Offset = "0xC88258", VA = "0xC88258")]
			public GnomeSleepTask()
			{
			}
		}

		[Token(Token = "0x20006AA")]
		public class TransitionToOrientationTask<T> : ITask<T> where T : MonoBehaviour
		{
			[Token(Token = "0x4001D7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly float transitionTime;

			[Token(Token = "0x4001D7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly Transform targetTransform;

			[Token(Token = "0x4001D80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private float timeElapsed;

			[Token(Token = "0x4001D81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private PosRotTuple startingOrientation;

			[Token(Token = "0x4001D82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C9CE4", Offset = "0x9C9CE4")]
			private T <Target>k__BackingField;

			[Token(Token = "0x4001D83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C9CF4", Offset = "0x9C9CF4")]
			private readonly int <Priority>k__BackingField;

			[Token(Token = "0x170004FD")]
			public T Target
			{
				[Token(Token = "0x600287A")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D9484", Offset = "0x9D9484")]
				get
				{
					return null;
				}
				[Token(Token = "0x600287B")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D9494", Offset = "0x9D9494")]
				set
				{
				}
			}

			[Token(Token = "0x170004FE")]
			public int Priority
			{
				[Token(Token = "0x600287C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D94A4", Offset = "0x9D94A4")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x6002879")]
			public TransitionToOrientationTask(Transform targetTransform, float time)
			{
			}

			[Token(Token = "0x600287D")]
			public TaskResult OnEnter()
			{
				return default(TaskResult);
			}

			[Token(Token = "0x600287E")]
			public TaskResult OnUpdate()
			{
				return default(TaskResult);
			}

			[Token(Token = "0x600287F")]
			public void OnExit()
			{
			}
		}

		[Token(Token = "0x20006AB")]
		public class GnomeHideTask : ITask<CompanionGnomeEntity>
		{
			[Token(Token = "0x4001D84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C9D04", Offset = "0x9C9D04")]
			private CompanionGnomeEntity <Target>k__BackingField;

			[Token(Token = "0x170004FF")]
			public CompanionGnomeEntity Target
			{
				[Token(Token = "0x6002880")]
				[Address(RVA = "0xC8F46C", Offset = "0xC8F46C", VA = "0xC8F46C", Slot = "4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D94B4", Offset = "0x9D94B4")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002881")]
				[Address(RVA = "0xC8F474", Offset = "0xC8F474", VA = "0xC8F474", Slot = "5")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D94C4", Offset = "0x9D94C4")]
				set
				{
				}
			}

			[Token(Token = "0x17000500")]
			public int Priority
			{
				[Token(Token = "0x6002882")]
				[Address(RVA = "0xC8F47C", Offset = "0xC8F47C", VA = "0xC8F47C", Slot = "6")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x6002883")]
			[Address(RVA = "0xC8F484", Offset = "0xC8F484", VA = "0xC8F484", Slot = "7")]
			public TaskResult OnEnter()
			{
				return default(TaskResult);
			}

			[Token(Token = "0x6002884")]
			[Address(RVA = "0xC8F614", Offset = "0xC8F614", VA = "0xC8F614", Slot = "9")]
			public void OnExit()
			{
			}

			[Token(Token = "0x6002885")]
			[Address(RVA = "0xC8F7A0", Offset = "0xC8F7A0", VA = "0xC8F7A0", Slot = "8")]
			public TaskResult OnUpdate()
			{
				return default(TaskResult);
			}

			[Token(Token = "0x6002886")]
			[Address(RVA = "0xC8A7AC", Offset = "0xC8A7AC", VA = "0xC8A7AC")]
			public GnomeHideTask()
			{
			}
		}

		[Token(Token = "0x20006AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBFB4", Offset = "0x9BBFB4")]
		private sealed class <DoIdleWithGuitarIn1Frame>d__35 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CompanionGnomeEntity <>4__this;

			[Token(Token = "0x17000501")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600288A")]
				[Address(RVA = "0xC8E280", Offset = "0xC8E280", VA = "0xC8E280", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000502")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600288C")]
				[Address(RVA = "0xC8E2F0", Offset = "0xC8E2F0", VA = "0xC8E2F0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002887")]
			[Address(RVA = "0xC86458", Offset = "0xC86458", VA = "0xC86458")]
			[DebuggerHidden]
			public <DoIdleWithGuitarIn1Frame>d__35(int <>1__state)
			{
			}

			[Token(Token = "0x6002888")]
			[Address(RVA = "0xC8E214", Offset = "0xC8E214", VA = "0xC8E214", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002889")]
			[Address(RVA = "0xC8E218", Offset = "0xC8E218", VA = "0xC8E218", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600288B")]
			[Address(RVA = "0xC8E288", Offset = "0xC8E288", VA = "0xC8E288", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006AD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBFC4", Offset = "0x9BBFC4")]
		private sealed class <>c__DisplayClass39_0
		{
			[Token(Token = "0x4001D88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CompanionGnomeEntity <>4__this;

			[Token(Token = "0x4001D89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public DoorGardenCenter door;

			[Token(Token = "0x4001D8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SearchableSceneObject waitNearWaterArrow;

			[Token(Token = "0x4001D8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SearchableSceneObject orchidSeed;

			[Token(Token = "0x4001D8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public GameObject shine;

			[Token(Token = "0x4001D8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public GameObject pot;

			[Token(Token = "0x4001D8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public PlantEntity dyrOrchidPlant;

			[Token(Token = "0x4001D8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public SearchableSceneObject dryOrchid;

			[Token(Token = "0x4001D90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public SearchableSceneObject sitNearDoor;

			[Token(Token = "0x4001D91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public Action <>9__18;

			[Token(Token = "0x4001D92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public Action <>9__19;

			[Token(Token = "0x600288D")]
			[Address(RVA = "0xC88250", Offset = "0xC88250", VA = "0xC88250")]
			public <>c__DisplayClass39_0()
			{
			}

			[Token(Token = "0x600288E")]
			[Address(RVA = "0xC8AEBC", Offset = "0xC8AEBC", VA = "0xC8AEBC")]
			internal void <QueueUpIntroTasks>b__0()
			{
			}

			[Token(Token = "0x600288F")]
			[Address(RVA = "0xC8B0C8", Offset = "0xC8B0C8", VA = "0xC8B0C8")]
			internal void <QueueUpIntroTasks>b__2()
			{
			}

			[Token(Token = "0x6002890")]
			[Address(RVA = "0xC8B3AC", Offset = "0xC8B3AC", VA = "0xC8B3AC")]
			internal void <QueueUpIntroTasks>b__18()
			{
			}

			[Token(Token = "0x6002891")]
			[Address(RVA = "0xC8B48C", Offset = "0xC8B48C", VA = "0xC8B48C")]
			internal void <QueueUpIntroTasks>b__19()
			{
			}

			[Token(Token = "0x6002892")]
			[Address(RVA = "0xC8B4D0", Offset = "0xC8B4D0", VA = "0xC8B4D0")]
			internal void <QueueUpIntroTasks>b__3(CompanionGnomeEntity gnome)
			{
			}

			[Token(Token = "0x6002893")]
			[Address(RVA = "0xC8B540", Offset = "0xC8B540", VA = "0xC8B540")]
			internal void <QueueUpIntroTasks>b__4(CompanionGnomeEntity gnome)
			{
			}

			[Token(Token = "0x6002894")]
			[Address(RVA = "0xC8B60C", Offset = "0xC8B60C", VA = "0xC8B60C")]
			internal void <QueueUpIntroTasks>b__5()
			{
			}

			[Token(Token = "0x6002895")]
			[Address(RVA = "0xC8B6A4", Offset = "0xC8B6A4", VA = "0xC8B6A4")]
			internal void <QueueUpIntroTasks>b__6()
			{
			}

			[Token(Token = "0x6002896")]
			[Address(RVA = "0xC8B718", Offset = "0xC8B718", VA = "0xC8B718")]
			internal bool <QueueUpIntroTasks>b__7()
			{
				return default(bool);
			}

			[Token(Token = "0x6002897")]
			[Address(RVA = "0xC8B748", Offset = "0xC8B748", VA = "0xC8B748")]
			internal void <QueueUpIntroTasks>b__8()
			{
			}

			[Token(Token = "0x6002898")]
			[Address(RVA = "0xC8B828", Offset = "0xC8B828", VA = "0xC8B828")]
			internal void <QueueUpIntroTasks>b__9()
			{
			}

			[Token(Token = "0x6002899")]
			[Address(RVA = "0xC8B86C", Offset = "0xC8B86C", VA = "0xC8B86C")]
			internal Vector3 <QueueUpIntroTasks>b__10()
			{
				return default(Vector3);
			}

			[Token(Token = "0x600289A")]
			[Address(RVA = "0xC8B8B4", Offset = "0xC8B8B4", VA = "0xC8B8B4")]
			internal void <QueueUpIntroTasks>b__11()
			{
			}

			[Token(Token = "0x600289B")]
			[Address(RVA = "0xC8B968", Offset = "0xC8B968", VA = "0xC8B968")]
			internal void <QueueUpIntroTasks>b__20()
			{
			}

			[Token(Token = "0x600289C")]
			[Address(RVA = "0xC8BAE8", Offset = "0xC8BAE8", VA = "0xC8BAE8")]
			internal void <QueueUpIntroTasks>b__23()
			{
			}

			[Token(Token = "0x600289D")]
			[Address(RVA = "0xC8BC60", Offset = "0xC8BC60", VA = "0xC8BC60")]
			internal void <QueueUpIntroTasks>b__24()
			{
			}

			[Token(Token = "0x600289E")]
			[Address(RVA = "0xC8BCD4", Offset = "0xC8BCD4", VA = "0xC8BCD4")]
			internal void <QueueUpIntroTasks>b__26()
			{
			}

			[Token(Token = "0x600289F")]
			[Address(RVA = "0xC8BD04", Offset = "0xC8BD04", VA = "0xC8BD04")]
			internal bool <QueueUpIntroTasks>b__31()
			{
				return default(bool);
			}

			[Token(Token = "0x60028A0")]
			[Address(RVA = "0xC8BD74", Offset = "0xC8BD74", VA = "0xC8BD74")]
			internal void <QueueUpIntroTasks>b__32()
			{
			}

			[Token(Token = "0x60028A1")]
			[Address(RVA = "0xC8BE44", Offset = "0xC8BE44", VA = "0xC8BE44")]
			internal void <QueueUpIntroTasks>b__12()
			{
			}

			[Token(Token = "0x60028A2")]
			[Address(RVA = "0xC8BEF4", Offset = "0xC8BEF4", VA = "0xC8BEF4")]
			internal void <QueueUpIntroTasks>b__13()
			{
			}

			[Token(Token = "0x60028A3")]
			[Address(RVA = "0xC8C018", Offset = "0xC8C018", VA = "0xC8C018")]
			internal void <QueueUpIntroTasks>b__14()
			{
			}

			[Token(Token = "0x60028A4")]
			[Address(RVA = "0xC8C08C", Offset = "0xC8C08C", VA = "0xC8C08C")]
			internal bool <QueueUpIntroTasks>b__15()
			{
				return default(bool);
			}

			[Token(Token = "0x60028A5")]
			[Address(RVA = "0xC8C130", Offset = "0xC8C130", VA = "0xC8C130")]
			internal void <QueueUpIntroTasks>b__16()
			{
			}

			[Token(Token = "0x60028A6")]
			[Address(RVA = "0xC8C1E0", Offset = "0xC8C1E0", VA = "0xC8C1E0")]
			internal Vector3 <QueueUpIntroTasks>b__17()
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x20006AE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBFD4", Offset = "0x9BBFD4")]
		private sealed class <>c__DisplayClass39_1
		{
			[Token(Token = "0x4001D93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool seedHeldAtLeastOnce;

			[Token(Token = "0x60028A7")]
			[Address(RVA = "0xC88414", Offset = "0xC88414", VA = "0xC88414")]
			public <>c__DisplayClass39_1()
			{
			}

			[Token(Token = "0x60028A8")]
			[Address(RVA = "0xC8C228", Offset = "0xC8C228", VA = "0xC8C228")]
			internal void <QueueUpIntroTasks>b__21(InteractiveCore.Messages.HoldItemStateChangedEvent _)
			{
			}

			[Token(Token = "0x60028A9")]
			[Address(RVA = "0xC8C234", Offset = "0xC8C234", VA = "0xC8C234")]
			internal bool <QueueUpIntroTasks>b__22()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20006AF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBFE4", Offset = "0x9BBFE4")]
		private sealed class <>c__DisplayClass39_2
		{
			[Token(Token = "0x4001D94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PlantSeedEntity seed;

			[Token(Token = "0x4001D95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SearchableSceneObject waterball;

			[Token(Token = "0x4001D96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public <>c__DisplayClass39_0 CS$<>8__locals1;

			[Token(Token = "0x60028AA")]
			[Address(RVA = "0xC8841C", Offset = "0xC8841C", VA = "0xC8841C")]
			public <>c__DisplayClass39_2()
			{
			}

			[Token(Token = "0x60028AB")]
			[Address(RVA = "0xC8C23C", Offset = "0xC8C23C", VA = "0xC8C23C")]
			internal bool <QueueUpIntroTasks>b__25()
			{
				return default(bool);
			}

			[Token(Token = "0x60028AC")]
			[Address(RVA = "0xC8C26C", Offset = "0xC8C26C", VA = "0xC8C26C")]
			internal void <QueueUpIntroTasks>b__27()
			{
			}

			[Token(Token = "0x60028AD")]
			[Address(RVA = "0xC8C488", Offset = "0xC8C488", VA = "0xC8C488")]
			internal void <QueueUpIntroTasks>b__29()
			{
			}

			[Token(Token = "0x60028AE")]
			[Address(RVA = "0xC8C5A0", Offset = "0xC8C5A0", VA = "0xC8C5A0")]
			internal void <QueueUpIntroTasks>b__30()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20006B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BBFF4", Offset = "0x9BBFF4")]
		private sealed class <>c
		{
			[Token(Token = "0x4001D97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001D98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__39_1;

			[Token(Token = "0x4001D99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static DelegateBoolTask<CompanionGnomeEntity>.WaitUntilTrueAction <>9__39_28;

			[Token(Token = "0x60028B0")]
			[Address(RVA = "0xC8AE44", Offset = "0xC8AE44", VA = "0xC8AE44")]
			public <>c()
			{
			}

			[Token(Token = "0x60028B1")]
			[Address(RVA = "0xC8AE4C", Offset = "0xC8AE4C", VA = "0xC8AE4C")]
			internal void <QueueUpIntroTasks>b__39_1()
			{
			}

			[Token(Token = "0x60028B2")]
			[Address(RVA = "0xC8AE50", Offset = "0xC8AE50", VA = "0xC8AE50")]
			internal bool <QueueUpIntroTasks>b__39_28()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20006B1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BC004", Offset = "0x9BC004")]
		private sealed class <DoGnomePresentEntityForPlayer>d__40<T> : IEnumerator<object>, IEnumerator, IDisposable where T : class
		{
			[Token(Token = "0x4001D9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4001D9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4001D9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CompanionGnomeEntity <>4__this;

			[Token(Token = "0x17000503")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60028B6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000504")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60028B8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60028B3")]
			[DebuggerHidden]
			public <DoGnomePresentEntityForPlayer>d__40(int <>1__state)
			{
			}

			[Token(Token = "0x60028B4")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60028B5")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60028B7")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006B2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BC014", Offset = "0x9BC014")]
		private sealed class <DoGnomeShowGemTaskLocal>d__41 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CompanionGnomeEntity <>4__this;

			[Token(Token = "0x4001DA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float timeAfterGemSpawnUntilItGoesInDoor;

			[Token(Token = "0x17000505")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60028BC")]
				[Address(RVA = "0xC8DC04", Offset = "0xC8DC04", VA = "0xC8DC04", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000506")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60028BE")]
				[Address(RVA = "0xC8DC74", Offset = "0xC8DC74", VA = "0xC8DC74", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60028B9")]
			[Address(RVA = "0xC88424", Offset = "0xC88424", VA = "0xC88424")]
			[DebuggerHidden]
			public <DoGnomeShowGemTaskLocal>d__41(int <>1__state)
			{
			}

			[Token(Token = "0x60028BA")]
			[Address(RVA = "0xC8D888", Offset = "0xC8D888", VA = "0xC8D888", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60028BB")]
			[Address(RVA = "0xC8D88C", Offset = "0xC8D88C", VA = "0xC8D88C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60028BD")]
			[Address(RVA = "0xC8DC0C", Offset = "0xC8DC0C", VA = "0xC8DC0C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006B3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BC024", Offset = "0x9BC024")]
		private sealed class <>c__DisplayClass43_0
		{
			[Token(Token = "0x4001DA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public NarrativeGnomeShouldBeconMessage message;

			[Token(Token = "0x4001DA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public CompanionGnomeEntity <>4__this;

			[Token(Token = "0x60028BF")]
			[Address(RVA = "0xC8891C", Offset = "0xC8891C", VA = "0xC8891C")]
			public <>c__DisplayClass43_0()
			{
			}

			[Token(Token = "0x60028C0")]
			[Address(RVA = "0xC8C878", Offset = "0xC8C878", VA = "0xC8C878")]
			internal Vector3 <HandleGnomeShouldBeconMessage>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x60028C1")]
			[Address(RVA = "0xC8C8A8", Offset = "0xC8C8A8", VA = "0xC8C8A8")]
			internal void <HandleGnomeShouldBeconMessage>b__1()
			{
			}

			[Token(Token = "0x60028C2")]
			[Address(RVA = "0xC8C908", Offset = "0xC8C908", VA = "0xC8C908")]
			internal void <HandleGnomeShouldBeconMessage>b__2()
			{
			}

			[Token(Token = "0x60028C3")]
			[Address(RVA = "0xC8C964", Offset = "0xC8C964", VA = "0xC8C964")]
			internal void <HandleGnomeShouldBeconMessage>b__3()
			{
			}
		}

		[Token(Token = "0x20006B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BC034", Offset = "0x9BC034")]
		private sealed class <DoBeconLoop>d__44 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001DA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CompanionGnomeEntity <>4__this;

			[Token(Token = "0x4001DA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <time>5__2;

			[Token(Token = "0x17000507")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60028C7")]
				[Address(RVA = "0xC8CD4C", Offset = "0xC8CD4C", VA = "0xC8CD4C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000508")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60028C9")]
				[Address(RVA = "0xC8CDBC", Offset = "0xC8CDBC", VA = "0xC8CDBC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60028C4")]
			[Address(RVA = "0xC88A54", Offset = "0xC88A54", VA = "0xC88A54")]
			[DebuggerHidden]
			public <DoBeconLoop>d__44(int <>1__state)
			{
			}

			[Token(Token = "0x60028C5")]
			[Address(RVA = "0xC8CAA4", Offset = "0xC8CAA4", VA = "0xC8CAA4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60028C6")]
			[Address(RVA = "0xC8CAA8", Offset = "0xC8CAA8", VA = "0xC8CAA8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60028C8")]
			[Address(RVA = "0xC8CD54", Offset = "0xC8CD54", VA = "0xC8CD54", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006B5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BC044", Offset = "0x9BC044")]
		private sealed class <>c__DisplayClass52_0
		{
			[Token(Token = "0x4001DA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GnomeAnimationTarget target;

			[Token(Token = "0x4001DA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public CompanionGnomeEntity <>4__this;

			[Token(Token = "0x60028CA")]
			[Address(RVA = "0xC8C994", Offset = "0xC8C994", VA = "0xC8C994")]
			public <>c__DisplayClass52_0()
			{
			}

			[Token(Token = "0x60028CB")]
			[Address(RVA = "0xC8C99C", Offset = "0xC8C99C", VA = "0xC8C99C")]
			internal void <DoFindIdleToDo>b__0(GnomeAnimationTarget found)
			{
			}

			[Token(Token = "0x60028CC")]
			[Address(RVA = "0xC8C9A4", Offset = "0xC8C9A4", VA = "0xC8C9A4")]
			internal Vector3 <DoFindIdleToDo>b__1()
			{
				return default(Vector3);
			}

			[Token(Token = "0x60028CD")]
			[Address(RVA = "0xC8C9EC", Offset = "0xC8C9EC", VA = "0xC8C9EC")]
			internal void <DoFindIdleToDo>b__2()
			{
			}
		}

		[Token(Token = "0x20006B6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BC054", Offset = "0x9BC054")]
		private sealed class <DoFindIdleToDo>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001DAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CompanionGnomeEntity <>4__this;

			[Token(Token = "0x4001DAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass52_0 <>8__1;

			[Token(Token = "0x17000509")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60028D1")]
				[Address(RVA = "0xC8D17C", Offset = "0xC8D17C", VA = "0xC8D17C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700050A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60028D3")]
				[Address(RVA = "0xC8D1EC", Offset = "0xC8D1EC", VA = "0xC8D1EC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60028CE")]
			[Address(RVA = "0xC895E8", Offset = "0xC895E8", VA = "0xC895E8")]
			[DebuggerHidden]
			public <DoFindIdleToDo>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x60028CF")]
			[Address(RVA = "0xC8CDC4", Offset = "0xC8CDC4", VA = "0xC8CDC4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60028D0")]
			[Address(RVA = "0xC8CDC8", Offset = "0xC8CDC8", VA = "0xC8CDC8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60028D2")]
			[Address(RVA = "0xC8D184", Offset = "0xC8D184", VA = "0xC8D184", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006B7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BC064", Offset = "0x9BC064")]
		private sealed class <DoTaskIdleNearPlayer>d__54 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001DAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CompanionGnomeEntity <>4__this;

			[Token(Token = "0x4001DB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float maxIdleTime;

			[Token(Token = "0x4001DB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public bool autoSubmitChaseTask;

			[Token(Token = "0x4001DB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private PlayerService <playerService>5__2;

			[Token(Token = "0x1700050B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60028D7")]
				[Address(RVA = "0xC8E5CC", Offset = "0xC8E5CC", VA = "0xC8E5CC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700050C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60028D9")]
				[Address(RVA = "0xC8E63C", Offset = "0xC8E63C", VA = "0xC8E63C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60028D4")]
			[Address(RVA = "0xC897DC", Offset = "0xC897DC", VA = "0xC897DC")]
			[DebuggerHidden]
			public <DoTaskIdleNearPlayer>d__54(int <>1__state)
			{
			}

			[Token(Token = "0x60028D5")]
			[Address(RVA = "0xC8E2F8", Offset = "0xC8E2F8", VA = "0xC8E2F8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60028D6")]
			[Address(RVA = "0xC8E2FC", Offset = "0xC8E2FC", VA = "0xC8E2FC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60028D8")]
			[Address(RVA = "0xC8E5D4", Offset = "0xC8E5D4", VA = "0xC8E5D4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BC074", Offset = "0x9BC074")]
		private sealed class <DoGnomeInBoatTask>d__65 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001DB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CompanionGnomeEntity <>4__this;

			[Token(Token = "0x1700050D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60028DD")]
				[Address(RVA = "0xC8D810", Offset = "0xC8D810", VA = "0xC8D810", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700050E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60028DF")]
				[Address(RVA = "0xC8D880", Offset = "0xC8D880", VA = "0xC8D880", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60028DA")]
			[Address(RVA = "0xC8992C", Offset = "0xC8992C", VA = "0xC8992C")]
			[DebuggerHidden]
			public <DoGnomeInBoatTask>d__65(int <>1__state)
			{
			}

			[Token(Token = "0x60028DB")]
			[Address(RVA = "0xC8D1F4", Offset = "0xC8D1F4", VA = "0xC8D1F4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60028DC")]
			[Address(RVA = "0xC8D1F8", Offset = "0xC8D1F8", VA = "0xC8D1F8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60028DE")]
			[Address(RVA = "0xC8D818", Offset = "0xC8D818", VA = "0xC8D818", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006B9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BC084", Offset = "0x9BC084")]
		private sealed class <DoGnomeSitInBoatTask>d__66 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001DB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CompanionGnomeEntity <>4__this;

			[Token(Token = "0x4001DB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Transform boatTarget;

			[Token(Token = "0x1700050F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60028E3")]
				[Address(RVA = "0xC8E19C", Offset = "0xC8E19C", VA = "0xC8E19C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000510")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60028E5")]
				[Address(RVA = "0xC8E20C", Offset = "0xC8E20C", VA = "0xC8E20C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60028E0")]
			[Address(RVA = "0xC89958", Offset = "0xC89958", VA = "0xC89958")]
			[DebuggerHidden]
			public <DoGnomeSitInBoatTask>d__66(int <>1__state)
			{
			}

			[Token(Token = "0x60028E1")]
			[Address(RVA = "0xC8DC7C", Offset = "0xC8DC7C", VA = "0xC8DC7C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60028E2")]
			[Address(RVA = "0xC8DC80", Offset = "0xC8DC80", VA = "0xC8DC80", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60028E4")]
			[Address(RVA = "0xC8E1A4", Offset = "0xC8E1A4", VA = "0xC8E1A4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006BA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BC094", Offset = "0x9BC094")]
		private sealed class <DoTaskMoveTowardDestination>d__67 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001DBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CompanionGnomeEntity <>4__this;

			[Token(Token = "0x4001DBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Func<Vector3> destinationRoutine;

			[Token(Token = "0x4001DBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool lerpOutOfCinematic;

			[Token(Token = "0x4001DBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
			public bool stopShortOfGoal;

			[Token(Token = "0x4001DC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
			public bool allowTeleport;

			[Token(Token = "0x4001DC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
			public bool overrideHeight;

			[Token(Token = "0x4001DC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <distanceToExitNavigation>5__2;

			[Token(Token = "0x4001DC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private WaitForFixedUpdate <fixedUpdate>5__3;

			[Token(Token = "0x17000511")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60028E9")]
				[Address(RVA = "0xC8EC9C", Offset = "0xC8EC9C", VA = "0xC8EC9C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000512")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60028EB")]
				[Address(RVA = "0xC8ED0C", Offset = "0xC8ED0C", VA = "0xC8ED0C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60028E6")]
			[Address(RVA = "0xC89984", Offset = "0xC89984", VA = "0xC89984")]
			[DebuggerHidden]
			public <DoTaskMoveTowardDestination>d__67(int <>1__state)
			{
			}

			[Token(Token = "0x60028E7")]
			[Address(RVA = "0xC8E644", Offset = "0xC8E644", VA = "0xC8E644", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60028E8")]
			[Address(RVA = "0xC8E648", Offset = "0xC8E648", VA = "0xC8E648", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60028EA")]
			[Address(RVA = "0xC8ECA4", Offset = "0xC8ECA4", VA = "0xC8ECA4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006BB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BC0A4", Offset = "0x9BC0A4")]
		private sealed class <DoTeleport>d__68 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001DC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CompanionGnomeEntity <>4__this;

			[Token(Token = "0x4001DC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Func<Vector3> destinationRoutine;

			[Token(Token = "0x4001DC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float distanceToExitNavigation;

			[Token(Token = "0x17000513")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60028EF")]
				[Address(RVA = "0xC8F1D4", Offset = "0xC8F1D4", VA = "0xC8F1D4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000514")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60028F1")]
				[Address(RVA = "0xC8F244", Offset = "0xC8F244", VA = "0xC8F244", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60028EC")]
			[Address(RVA = "0xC89A64", Offset = "0xC89A64", VA = "0xC89A64")]
			[DebuggerHidden]
			public <DoTeleport>d__68(int <>1__state)
			{
			}

			[Token(Token = "0x60028ED")]
			[Address(RVA = "0xC8ED14", Offset = "0xC8ED14", VA = "0xC8ED14", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60028EE")]
			[Address(RVA = "0xC8ED18", Offset = "0xC8ED18", VA = "0xC8ED18", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60028F0")]
			[Address(RVA = "0xC8F1DC", Offset = "0xC8F1DC", VA = "0xC8F1DC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BC0B4", Offset = "0x9BC0B4")]
		private sealed class <TriggerIdleEyeAnims>d__88 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001DCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CompanionGnomeEntity <>4__this;

			[Token(Token = "0x4001DCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <timer>5__2;

			[Token(Token = "0x17000515")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60028F5")]
				[Address(RVA = "0xC8F3F4", Offset = "0xC8F3F4", VA = "0xC8F3F4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000516")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60028F7")]
				[Address(RVA = "0xC8F464", Offset = "0xC8F464", VA = "0xC8F464", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60028F2")]
			[Address(RVA = "0xC8A3AC", Offset = "0xC8A3AC", VA = "0xC8A3AC")]
			[DebuggerHidden]
			public <TriggerIdleEyeAnims>d__88(int <>1__state)
			{
			}

			[Token(Token = "0x60028F3")]
			[Address(RVA = "0xC8F24C", Offset = "0xC8F24C", VA = "0xC8F24C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60028F4")]
			[Address(RVA = "0xC8F250", Offset = "0xC8F250", VA = "0xC8F250", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60028F6")]
			[Address(RVA = "0xC8F3FC", Offset = "0xC8F3FC", VA = "0xC8F3FC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40012B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9C93DC", Offset = "0x9C93DC")]
		public Transform GnomeHeadTransform;

		[Token(Token = "0x40012B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Animator AnimatorComponent;

		[Token(Token = "0x40012B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform GuitarSlotTransform;

		[Token(Token = "0x40012B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public StorageBubble StorageBubbleRightHand;

		[Token(Token = "0x40012B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform LeftHandTransform;

		[Token(Token = "0x40012B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform LeftFootTransform;

		[Token(Token = "0x40012B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform RightFootTransform;

		[Token(Token = "0x40012BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9C9414", Offset = "0x9C9414")]
		public LayerMask WorldCollisionMask;

		[Token(Token = "0x40012BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float TeleportSphereCastRadius;

		[Token(Token = "0x40012BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public PhysicMaterial GnomeSkin;

		[Token(Token = "0x40012BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject GuitarPrefab;

		[Token(Token = "0x40012BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[EventRef]
		public string SFX_Gnome_Greeting;

		[Token(Token = "0x40012BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[EventRef]
		public string SFX_Gnome_Poke;

		[Token(Token = "0x40012C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[EventRef]
		public string SFX_Gnome_Noise;

		[Token(Token = "0x40012C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private TriggerOnRigidbodyForce headTriggerRigidbodyForce;

		[Token(Token = "0x40012C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private TriggerOnRigidbodyForce hipsTriggerRigidbodyForce;

		[Token(Token = "0x40012C3")]
		private const float RotateTowardsSlerpScalar = 1f;

		[Token(Token = "0x40012C4")]
		private const float DistanceToCauseTeleport = 10f;

		[Token(Token = "0x40012C5")]
		private const float DistanceToExitNavigation = 2f;

		[Token(Token = "0x40012C6")]
		private const float DistanceToIdleNearPlayer = 4f;

		[Token(Token = "0x40012C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private NavMeshAgent NavMeshAgent;

		[Token(Token = "0x40012C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private TaskQueue<CompanionGnomeEntity> tasks;

		[Token(Token = "0x40012C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool onBoat;

		[Token(Token = "0x40012CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private GameObject guitarInstance;

		[Token(Token = "0x40012CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private HumanoidIKGoalsController _lookAtController;

		[Token(Token = "0x40012CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private int _cinematicLayerIndex;

		[Token(Token = "0x40012CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private int _bodyLayerIndex;

		[Token(Token = "0x40012CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private GnomeHideTask _hideTask;

		[Token(Token = "0x40012CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public AnimationFrameIndexesScriptableObject GnomeIntroTaskFrameIndices;

		[Token(Token = "0x40012D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private bool disableGuitarNextBoatRide;

		[Token(Token = "0x40012D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9C947C", Offset = "0x9C947C")]
		private float <LastPolledGroundHeight>k__BackingField;

		[Token(Token = "0x40012D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public float FloatSpeed;

		[Token(Token = "0x40012D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public float ProximityThreshold;

		[Token(Token = "0x40012D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Vector3 previousPosition;

		[Token(Token = "0x40012D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public Vector3 SoftOffset;

		[Token(Token = "0x17000311")]
		private Vector3 GnomeFootPosition
		{
			[Token(Token = "0x6001EBC")]
			[Address(RVA = "0xC85BB4", Offset = "0xC85BB4", VA = "0xC85BB4")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001EBD")]
			[Address(RVA = "0xC85BE8", Offset = "0xC85BE8", VA = "0xC85BE8")]
			set
			{
			}
		}

		[Token(Token = "0x17000312")]
		private Vector3 PlayerHead
		{
			[Token(Token = "0x6001ED5")]
			[Address(RVA = "0xC89868", Offset = "0xC89868", VA = "0xC89868")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000313")]
		private float HoverHeight
		{
			[Token(Token = "0x6001ED6")]
			[Address(RVA = "0xC89910", Offset = "0xC89910", VA = "0xC89910")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000314")]
		public float LastPolledGroundHeight
		{
			[Token(Token = "0x6001ED7")]
			[Address(RVA = "0xC8991C", Offset = "0xC8991C", VA = "0xC8991C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D4B50", Offset = "0x9D4B50")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001ED8")]
			[Address(RVA = "0xC89924", Offset = "0xC89924", VA = "0xC89924")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D4B60", Offset = "0x9D4B60")]
			private set
			{
			}
		}

		[Token(Token = "0x17000315")]
		private Transform ControlRoot
		{
			[Token(Token = "0x6001EE2")]
			[Address(RVA = "0xC8A3A4", Offset = "0xC8A3A4", VA = "0xC8A3A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000316")]
		public Vector3 SoftPosition
		{
			[Token(Token = "0x6001EE4")]
			[Address(RVA = "0xC89B60", Offset = "0xC89B60", VA = "0xC89B60")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001EE3")]
			[Address(RVA = "0xC8A0CC", Offset = "0xC8A0CC", VA = "0xC8A0CC")]
			set
			{
			}
		}

		[Token(Token = "0x17000317")]
		public Quaternion SoftRotation
		{
			[Token(Token = "0x6001EE6")]
			[Address(RVA = "0xC8A30C", Offset = "0xC8A30C", VA = "0xC8A30C")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6001EE5")]
			[Address(RVA = "0xC8A340", Offset = "0xC8A340", VA = "0xC8A340")]
			set
			{
			}
		}

		[Token(Token = "0x17000318")]
		public bool IsInAnIdleAllowed
		{
			[Token(Token = "0x6001EE7")]
			[Address(RVA = "0xC88F3C", Offset = "0xC88F3C", VA = "0xC88F3C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001EBE")]
		[Address(RVA = "0xC85C44", Offset = "0xC85C44", VA = "0xC85C44")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001EBF")]
		[Address(RVA = "0xC861D4", Offset = "0xC861D4", VA = "0xC861D4")]
		public void PulsateFoot(int foot)
		{
		}

		[Token(Token = "0x6001EC0")]
		[Address(RVA = "0xC863E4", Offset = "0xC863E4", VA = "0xC863E4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9D48C0", Offset = "0x9D48C0")]
		private IEnumerator DoIdleWithGuitarIn1Frame()
		{
			return null;
		}

		[Token(Token = "0x6001EC1")]
		[Address(RVA = "0xC86484", Offset = "0xC86484", VA = "0xC86484")]
		private void IdleWithGuitar()
		{
		}

		[Token(Token = "0x6001EC2")]
		[Address(RVA = "0xC866AC", Offset = "0xC866AC", VA = "0xC866AC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001EC3")]
		[Address(RVA = "0xC87F34", Offset = "0xC87F34", VA = "0xC87F34")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001EC4")]
		[Address(RVA = "0xC86A2C", Offset = "0xC86A2C", VA = "0xC86A2C")]
		private void QueueUpIntroTasks()
		{
		}

		[Token(Token = "0x6001EC5")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9D4924", Offset = "0x9D4924")]
		private IEnumerator DoGnomePresentEntityForPlayer<T>() where T : class
		{
			return null;
		}

		[Token(Token = "0x6001EC6")]
		[Address(RVA = "0xC88268", Offset = "0xC88268", VA = "0xC88268")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9D4988", Offset = "0x9D4988")]
		private IEnumerator DoGnomeShowGemTaskLocal(float timeAfterGemSpawnUntilItGoesInDoor)
		{
			return null;
		}

		[Token(Token = "0x6001EC7")]
		[Address(RVA = "0xC88450", Offset = "0xC88450", VA = "0xC88450")]
		private void HandleGnomeShouldSitMessage(NarrativeGnomeSitInAwayBoatMessage message)
		{
		}

		[Token(Token = "0x6001EC8")]
		[Address(RVA = "0xC885F8", Offset = "0xC885F8", VA = "0xC885F8")]
		private void HandleGnomeShouldBeconMessage(NarrativeGnomeShouldBeconMessage message)
		{
		}

		[Token(Token = "0x6001EC9")]
		[Address(RVA = "0xC88924", Offset = "0xC88924", VA = "0xC88924")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9D49EC", Offset = "0x9D49EC")]
		private IEnumerator DoBeconLoop()
		{
			return null;
		}

		[Token(Token = "0x6001ECA")]
		[Address(RVA = "0xC88A80", Offset = "0xC88A80", VA = "0xC88A80")]
		private void HandleBoatEventMessage(BoatEvent message)
		{
		}

		[Token(Token = "0x6001ECB")]
		[Address(RVA = "0xC88CF8", Offset = "0xC88CF8", VA = "0xC88CF8")]
		private void HandleBoatPoseUpdateMessage(BoatWritePoseMessage message)
		{
		}

		[Token(Token = "0x6001ECC")]
		[Address(RVA = "0xC88E44", Offset = "0xC88E44", VA = "0xC88E44")]
		private void Update()
		{
		}

		[Token(Token = "0x6001ECD")]
		[Address(RVA = "0xC89010", Offset = "0xC89010", VA = "0xC89010")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001ECE")]
		[Address(RVA = "0xC89068", Offset = "0xC89068", VA = "0xC89068")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x9D4A50", Offset = "0x9D4A50")]
		public void WakeUp()
		{
		}

		[Token(Token = "0x6001ECF")]
		[Address(RVA = "0xC89104", Offset = "0xC89104", VA = "0xC89104")]
		private void OnPlayerHeadTap()
		{
		}

		[Token(Token = "0x6001ED0")]
		[Address(RVA = "0xC893C4", Offset = "0xC893C4", VA = "0xC893C4")]
		private void OnPlayerHipsTap()
		{
		}

		[Token(Token = "0x6001ED1")]
		[Address(RVA = "0xC88F9C", Offset = "0xC88F9C", VA = "0xC88F9C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9D4A88", Offset = "0x9D4A88")]
		private IEnumerator DoFindIdleToDo()
		{
			return null;
		}

		[Token(Token = "0x6001ED2")]
		[Address(RVA = "0xC89614", Offset = "0xC89614", VA = "0xC89614")]
		private void SubmitIdleOrSleepTask()
		{
		}

		[Token(Token = "0x6001ED3")]
		[Address(RVA = "0xC88998", Offset = "0xC88998", VA = "0xC88998")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9D4AEC", Offset = "0x9D4AEC")]
		private IEnumerator DoTaskIdleNearPlayer(bool autoSubmitChaseTask = true, float maxIdleTime = float.PositiveInfinity)
		{
			return null;
		}

		[Token(Token = "0x6001ED4")]
		[Address(RVA = "0xC89808", Offset = "0xC89808", VA = "0xC89808")]
		private static Vector3 PlayerFoot()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001ED9")]
		[Address(RVA = "0xC88C84", Offset = "0xC88C84", VA = "0xC88C84")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9D4B70", Offset = "0x9D4B70")]
		private IEnumerator DoGnomeInBoatTask()
		{
			return null;
		}

		[Token(Token = "0x6001EDA")]
		[Address(RVA = "0xC88560", Offset = "0xC88560", VA = "0xC88560")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9D4BD4", Offset = "0x9D4BD4")]
		private IEnumerator DoGnomeSitInBoatTask(Transform boatTarget)
		{
			return null;
		}

		[Token(Token = "0x6001EDB")]
		[Address(RVA = "0xC88300", Offset = "0xC88300", VA = "0xC88300")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9D4C38", Offset = "0x9D4C38")]
		private IEnumerator DoTaskMoveTowardDestination(Func<Vector3> destinationRoutine, bool stopShortOfGoal = true, bool allowTeleport = true, bool overrideHeight = false, bool lerpOutOfCinematic = false)
		{
			return null;
		}

		[Token(Token = "0x6001EDC")]
		[Address(RVA = "0xC899B0", Offset = "0xC899B0", VA = "0xC899B0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9D4C9C", Offset = "0x9D4C9C")]
		private IEnumerator DoTeleport(bool allowTeleport, Func<Vector3> destinationRoutine, float distanceToExitNavigation)
		{
			return null;
		}

		[Token(Token = "0x6001EDD")]
		[Address(RVA = "0xC89A90", Offset = "0xC89A90", VA = "0xC89A90")]
		private bool TeleportDistanceCheck(bool allowTeleport, Func<Vector3> destinationRoutine)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EDE")]
		[Address(RVA = "0xC89C2C", Offset = "0xC89C2C", VA = "0xC89C2C")]
		public void FloatTowards(Vector3 target)
		{
		}

		[Token(Token = "0x6001EDF")]
		[Address(RVA = "0xC8A1B8", Offset = "0xC8A1B8", VA = "0xC8A1B8")]
		private bool IsSpaceClearForGnome(Vector3 worldPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EE0")]
		[Address(RVA = "0xC8A208", Offset = "0xC8A208", VA = "0xC8A208")]
		private bool CanNavToPlayer()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EE1")]
		[Address(RVA = "0xC89F2C", Offset = "0xC89F2C", VA = "0xC89F2C")]
		private void RotateTowards(Vector3 target)
		{
		}

		[Token(Token = "0x6001EE8")]
		[Address(RVA = "0xC869B8", Offset = "0xC869B8", VA = "0xC869B8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9D4D00", Offset = "0x9D4D00")]
		private IEnumerator TriggerIdleEyeAnims()
		{
			return null;
		}

		[Token(Token = "0x6001EE9")]
		[Address(RVA = "0xC8A3D8", Offset = "0xC8A3D8", VA = "0xC8A3D8")]
		private Vector3? HitTestGroundBelow(float distance = 2f)
		{
			return null;
		}

		[Token(Token = "0x6001EEA")]
		[Address(RVA = "0xC8A540", Offset = "0xC8A540", VA = "0xC8A540")]
		private void SetMacroAnimationState(GnomeMacroAnimatorState state)
		{
		}

		[Token(Token = "0x6001EEB")]
		[Address(RVA = "0xC86574", Offset = "0xC86574", VA = "0xC86574")]
		private void SetCinematicTrigger(string trigger)
		{
		}

		[Token(Token = "0x6001EEC")]
		[Address(RVA = "0xC8A63C", Offset = "0xC8A63C", VA = "0xC8A63C")]
		private void SetGnomeActive(bool active)
		{
		}

		[Token(Token = "0x6001EED")]
		[Address(RVA = "0xC8A718", Offset = "0xC8A718", VA = "0xC8A718")]
		public CompanionGnomeEntity()
		{
		}

		[Token(Token = "0x6001EEE")]
		[Address(RVA = "0xC8A7B4", Offset = "0xC8A7B4", VA = "0xC8A7B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D4D64", Offset = "0x9D4D64")]
		private void <Awake>b__32_0(WorldStateService.Messages.ZoneChangeMessage zoneChangeMessage)
		{
		}

		[Token(Token = "0x6001EEF")]
		[Address(RVA = "0xC8A890", Offset = "0xC8A890", VA = "0xC8A890")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D4D74", Offset = "0x9D4D74")]
		private void <Awake>b__32_1(BoatEvent boatEvent)
		{
		}

		[Token(Token = "0x6001EF0")]
		[Address(RVA = "0xC8A93C", Offset = "0xC8A93C", VA = "0xC8A93C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D4D84", Offset = "0x9D4D84")]
		private void <HandleGnomeShouldSitMessage>b__42_0(CompanionGnomeEntity gnome)
		{
		}

		[Token(Token = "0x6001EF1")]
		[Address(RVA = "0xC8AAC4", Offset = "0xC8AAC4", VA = "0xC8AAC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D4D94", Offset = "0x9D4D94")]
		private void <HandleBoatEventMessage>b__45_0(CompanionGnomeEntity gnome)
		{
		}

		[Token(Token = "0x6001EF2")]
		[Address(RVA = "0xC8AC88", Offset = "0xC8AC88", VA = "0xC8AC88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D4DA4", Offset = "0x9D4DA4")]
		private void <SubmitIdleOrSleepTask>b__53_0(CompanionGnomeEntity _)
		{
		}

		[Token(Token = "0x6001EF3")]
		[Address(RVA = "0xC8ACF0", Offset = "0xC8ACF0", VA = "0xC8ACF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D4DB4", Offset = "0x9D4DB4")]
		private void <DoTaskIdleNearPlayer>b__54_0(CompanionGnomeEntity _)
		{
		}

		[Token(Token = "0x6001EF4")]
		[Address(RVA = "0xC8AD58", Offset = "0xC8AD58", VA = "0xC8AD58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D4DC4", Offset = "0x9D4DC4")]
		private void <DoTaskMoveTowardDestination>b__67_0(float progress)
		{
		}

		[Token(Token = "0x6001EF5")]
		[Address(RVA = "0xC8ADD8", Offset = "0xC8ADD8", VA = "0xC8ADD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D4DD4", Offset = "0x9D4DD4")]
		private void <DoTaskMoveTowardDestination>b__67_1()
		{
		}
	}
}
namespace Fuji.GameMode
{
	[Serializable]
	[Token(Token = "0x2000417")]
	public struct LightRingChangeTrigger
	{
		[Token(Token = "0x40012D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BoxCollider Trigger;

		[Token(Token = "0x40012D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Transform LightRingLocation;
	}
	[Token(Token = "0x2000418")]
	public class DevelopmentGameMode : MonoBehaviour
	{
		[Token(Token = "0x20006BD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BC0C4", Offset = "0x9BC0C4")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x4001DCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MenuGameMode.MainMenuSelection? menuSelection;

			[Token(Token = "0x60028F8")]
			[Address(RVA = "0xC83138", Offset = "0xC83138", VA = "0xC83138")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x60028F9")]
			[Address(RVA = "0xC83140", Offset = "0xC83140", VA = "0xC83140")]
			internal void <Start>b__0(MenuGameMode.MainMenuMessage message)
			{
			}
		}

		[Token(Token = "0x20006BE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BC0D4", Offset = "0x9BC0D4")]
		private sealed class <>c__DisplayClass8_1
		{
			[Token(Token = "0x4001DCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LightRingChangeTrigger lightRingChangeTrigger;

			[Token(Token = "0x60028FA")]
			[Address(RVA = "0xC831B0", Offset = "0xC831B0", VA = "0xC831B0")]
			public <>c__DisplayClass8_1()
			{
			}

			[Token(Token = "0x60028FB")]
			[Address(RVA = "0xC831B8", Offset = "0xC831B8", VA = "0xC831B8")]
			internal void <Start>b__1(PlayerControllerInput _)
			{
			}
		}

		[Token(Token = "0x20006BF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BC0E4", Offset = "0x9BC0E4")]
		private sealed class <Start>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001DD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DevelopmentGameMode <>4__this;

			[Token(Token = "0x4001DD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass8_0 <>8__1;

			[Token(Token = "0x4001DD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private bool <relocAllowed>5__2;

			[Token(Token = "0x4001DD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Dictionary<LoadingZoneKey, LoadingZone>.ValueCollection.Enumerator <>7__wrap2;

			[Token(Token = "0x17000517")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002900")]
				[Address(RVA = "0xC84814", Offset = "0xC84814", VA = "0xC84814", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000518")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002902")]
				[Address(RVA = "0xC84884", Offset = "0xC84884", VA = "0xC84884", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60028FC")]
			[Address(RVA = "0xC82BEC", Offset = "0xC82BEC", VA = "0xC82BEC")]
			[DebuggerHidden]
			public <Start>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x60028FD")]
			[Address(RVA = "0xC8329C", Offset = "0xC8329C", VA = "0xC8329C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60028FE")]
			[Address(RVA = "0xC83310", Offset = "0xC83310", VA = "0xC83310", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60028FF")]
			[Address(RVA = "0xC832B8", Offset = "0xC832B8", VA = "0xC832B8")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002901")]
			[Address(RVA = "0xC8481C", Offset = "0xC8481C", VA = "0xC8481C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40012D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private LightRingChangeTrigger[] triggers;

		[Token(Token = "0x40012D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform playerSpawnLocation;

		[Token(Token = "0x40012DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9C94AC", Offset = "0x9C94AC")]
		[SerializeField]
		private bool _playBirthingScene;

		[Token(Token = "0x40012DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[SerializeField]
		private bool _playMainMenu;

		[Token(Token = "0x40012DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x9C9508", Offset = "0x9C9508")]
		[SerializeField]
		private bool _loadGameInEditor;

		[Token(Token = "0x40012DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
		[SerializeField]
		private bool _loadGameInBuild;

		[Token(Token = "0x40012DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x9C9550", Offset = "0x9C9550")]
		[SerializeField]
		private bool _warmupAllZones;

		[Token(Token = "0x40012DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		[SerializeField]
		private bool _useCulling;

		[Token(Token = "0x6001EF6")]
		[Address(RVA = "0xC82B78", Offset = "0xC82B78", VA = "0xC82B78")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9D4DE4", Offset = "0x9D4DE4")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6001EF7")]
		[Address(RVA = "0xC82C18", Offset = "0xC82C18", VA = "0xC82C18")]
		public void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001EF8")]
		[Address(RVA = "0xC82F00", Offset = "0xC82F00", VA = "0xC82F00")]
		private void Update()
		{
		}

		[Token(Token = "0x6001EF9")]
		[Address(RVA = "0xC82F2C", Offset = "0xC82F2C", VA = "0xC82F2C")]
		private void ProcessSaveGame()
		{
		}

		[Token(Token = "0x6001EFA")]
		[Address(RVA = "0xC8311C", Offset = "0xC8311C", VA = "0xC8311C")]
		public DevelopmentGameMode()
		{
		}
	}
	[Token(Token = "0x2000419")]
	public struct PlayerSpawnedInGardenMessage
	{
	}
	[Token(Token = "0x200041A")]
	[ExecuteInEditMode]
	public class EmptyGameMode : MonoBehaviour
	{
		[Token(Token = "0x20006C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BC0F4", Offset = "0x9BC0F4")]
		private sealed class <Start>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001DD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public EmptyGameMode <>4__this;

			[Token(Token = "0x17000519")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002906")]
				[Address(RVA = "0xC850B4", Offset = "0xC850B4", VA = "0xC850B4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700051A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002908")]
				[Address(RVA = "0xC85124", Offset = "0xC85124", VA = "0xC85124", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002903")]
			[Address(RVA = "0xC84900", Offset = "0xC84900", VA = "0xC84900")]
			[DebuggerHidden]
			public <Start>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6002904")]
			[Address(RVA = "0xC84BD0", Offset = "0xC84BD0", VA = "0xC84BD0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002905")]
			[Address(RVA = "0xC84BD4", Offset = "0xC84BD4", VA = "0xC84BD4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002907")]
			[Address(RVA = "0xC850BC", Offset = "0xC850BC", VA = "0xC850BC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40012E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FujiAtmosphericPreset ForceFujiAtmosPreset;

		[Token(Token = "0x40012E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int bonusGems;

		[Token(Token = "0x40012E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool AutoFindAllPrefabs;

		[Token(Token = "0x40012E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool NarrativeAll;

		[Token(Token = "0x40012E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
		public bool NoClipMode;

		[Token(Token = "0x6001EFB")]
		[Address(RVA = "0xC8488C", Offset = "0xC8488C", VA = "0xC8488C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9D4E48", Offset = "0x9D4E48")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6001EFC")]
		[Address(RVA = "0xC8492C", Offset = "0xC8492C", VA = "0xC8492C")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6001EFD")]
		[Address(RVA = "0xC84A10", Offset = "0xC84A10", VA = "0xC84A10")]
		public void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001EFE")]
		[Address(RVA = "0xC84BC8", Offset = "0xC84BC8", VA = "0xC84BC8")]
		public EmptyGameMode()
		{
		}
	}
	[Token(Token = "0x200041B")]
	public class GnomeAnimationTestGameMode : MonoBehaviour
	{
		[Token(Token = "0x40012E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject GnomeInstance;

		[Token(Token = "0x6001EFF")]
		[Address(RVA = "0xC8512C", Offset = "0xC8512C", VA = "0xC8512C")]
		public void Start()
		{
		}

		[Token(Token = "0x6001F00")]
		[Address(RVA = "0xC851C8", Offset = "0xC851C8", VA = "0xC851C8")]
		public GnomeAnimationTestGameMode()
		{
		}
	}
}
namespace Fuji.Messages
{
	[Token(Token = "0x200041C")]
	public struct BirthingHandTriggerEvent
	{
		[Token(Token = "0x40012E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public InputHandedness Handedness;
	}
	[Token(Token = "0x200041D")]
	public struct LevelLoadingEvent
	{
	}
	[Token(Token = "0x200041E")]
	public struct ApplicationWillQuitEvent
	{
	}
	[Token(Token = "0x200041F")]
	public struct ApplicationPauseEvent
	{
		[Token(Token = "0x40012E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool Paused;
	}
	[Token(Token = "0x2000420")]
	public struct PreUpdateMessage
	{
	}
	[Token(Token = "0x2000421")]
	public enum BoatEventType
	{
		[Token(Token = "0x40012E9")]
		Enter,
		[Token(Token = "0x40012EA")]
		Exit
	}
	[Token(Token = "0x2000422")]
	public struct BoatEvent
	{
		[Token(Token = "0x40012EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BoatEventType BoatEventType;
	}
	[Token(Token = "0x2000423")]
	public struct BoatWritePoseMessage
	{
	}
	[Token(Token = "0x2000424")]
	public struct PointAtUnrestrictedColliderEvent
	{
	}
	[Token(Token = "0x2000425")]
	public struct StopPointingAtUnrestrictedColliderEvent
	{
	}
	[Token(Token = "0x2000426")]
	public struct BellHitEvent
	{
	}
	[Token(Token = "0x2000427")]
	public struct SequencerMeasureEvent
	{
		[Token(Token = "0x40012EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong MeasureNum;
	}
	[Token(Token = "0x2000428")]
	public struct SequencerBeatEvent
	{
		[Token(Token = "0x40012ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int BeatNum;
	}
	[Token(Token = "0x2000429")]
	public struct SequencerStepEvent
	{
		[Token(Token = "0x40012EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SequencerNoteType NoteType;

		[Token(Token = "0x40012EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int StepNum;
	}
	[Token(Token = "0x200042A")]
	public struct SequencerTimeSignatureEvent
	{
		[Token(Token = "0x40012F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int BeatsPerMeasure;

		[Token(Token = "0x40012F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public SequencerNoteType BeatNote;
	}
	[Token(Token = "0x200042B")]
	public struct LightTunedEvent
	{
		[Token(Token = "0x40012F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public LightTunerRing lightTunerRing;

		[Token(Token = "0x40012F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public LoadingZoneKey zone;
	}
	[Token(Token = "0x200042C")]
	public struct PlantSequenceSubmittedMessage
	{
		[Token(Token = "0x40012F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly ArrayRingBuffer<int> Sequence;

		[Token(Token = "0x6001F01")]
		[Address(RVA = "0xA8361C", Offset = "0xA8361C", VA = "0xA8361C")]
		public PlantSequenceSubmittedMessage(ArrayRingBuffer<int> sequence)
		{
		}
	}
	[Token(Token = "0x200042D")]
	public struct LightGemMessage
	{
		[Token(Token = "0x20006C1")]
		public enum LightGemState
		{
			[Token(Token = "0x4001DD9")]
			PlayerHoldStart,
			[Token(Token = "0x4001DDA")]
			PlayerHoldEnd,
			[Token(Token = "0x4001DDB")]
			PlayerEitherHandFirstHoldStart,
			[Token(Token = "0x4001DDC")]
			PlayerEitherHandLastHoldEnd
		}

		[Token(Token = "0x40012F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public InputHandedness Handedness;

		[Token(Token = "0x40012F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public LightGemState State;

		[Token(Token = "0x40012F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public LightGem LightGem;
	}
	[Token(Token = "0x200042E")]
	public struct LightGemSlotMessage
	{
		[Token(Token = "0x20006C2")]
		public enum LightGemSlotState
		{
			[Token(Token = "0x4001DDE")]
			Added,
			[Token(Token = "0x4001DDF")]
			AddedFinal,
			[Token(Token = "0x4001DE0")]
			Removed,
			[Token(Token = "0x4001DE1")]
			RemovedFinal,
			[Token(Token = "0x4001DE2")]
			SpendLightGems,
			[Token(Token = "0x4001DE3")]
			SpendLightGemsFailed,
			[Token(Token = "0x4001DE4")]
			PlayerHoverBegin,
			[Token(Token = "0x4001DE5")]
			PlayerHoverEnd
		}

		[Token(Token = "0x40012F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public LightGemSlotState State;

		[Token(Token = "0x40012F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public LightGemSlot LightGemSlot;

		[Token(Token = "0x40012FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LightGem LightGem;
	}
	[Token(Token = "0x200042F")]
	public struct LightPyramidTouchEvent
	{
		[Token(Token = "0x40012FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public LightPyramidPuzzle lightPyramidTouched;

		[Token(Token = "0x40012FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public PlayerControllerInput playerInputSrc;
	}
	[Token(Token = "0x2000430")]
	public struct LightJewelReleasedEvent
	{
		[Token(Token = "0x40012FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public LoadingZoneKey Zone;

		[Token(Token = "0x40012FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int Sector;

		[Token(Token = "0x40012FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public PlantEntity LastPlant;
	}
	[Token(Token = "0x2000431")]
	public struct PuzzleSolvedMessage
	{
		[Token(Token = "0x4001300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3? SenderWorldPosition;
	}
	[Token(Token = "0x2000432")]
	public struct NarrativeGnomeSitInAwayBoatMessage
	{
		[Token(Token = "0x4001301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Transform SittingTransform;
	}
	[Token(Token = "0x2000433")]
	public struct NarrativeGnomeShouldBeconMessage
	{
		[Token(Token = "0x4001302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Transform BeconingTarget;
	}
	[Token(Token = "0x2000434")]
	public interface IMessageReceiver<in T> where T : struct
	{
		[Token(Token = "0x6001F02")]
		void OnMessageReceived(T message);
	}
	[Token(Token = "0x2000435")]
	public interface IBus
	{
		[Token(Token = "0x6001F03")]
		int GetMessageBufferLength();

		[Token(Token = "0x6001F04")]
		void SetMessageBufferLength(int length);

		[Token(Token = "0x6001F05")]
		void Send();

		[Token(Token = "0x6001F06")]
		void ClearMessageBuffer();

		[Token(Token = "0x6001F07")]
		void ReleaseAllSubscribers();

		[Token(Token = "0x6001F08")]
		int GetListenerCount();

		[Token(Token = "0x6001F09")]
		IEnumerable<object> GetListenerTargets();
	}
	[Token(Token = "0x2000436")]
	public interface IBus<T> : IBus where T : struct
	{
		[Token(Token = "0x6001F0A")]
		void Subscribe(MessageBus.MessageCallback<T>.Callback function);

		[Token(Token = "0x6001F0B")]
		void Subscribe(IMessageReceiver<T> messageReceiver);

		[Token(Token = "0x6001F0C")]
		void SubscribeOnce(MessageBus.MessageCallback<T>.Callback function);

		[Token(Token = "0x6001F0D")]
		void SubscribeOnce(IMessageReceiver<T> messageReceiver);

		[Token(Token = "0x6001F0E")]
		void Unsubscribe(MessageBus.MessageCallback<T>.Callback function);

		[Token(Token = "0x6001F0F")]
		void Unsubscribe(IMessageReceiver<T> messageReceiver);

		[Token(Token = "0x6001F10")]
		void Send(T message);

		[Token(Token = "0x6001F11")]
		void SendBuffered(T message);
	}
	[Token(Token = "0x2000437")]
	public sealed class DummyBusImpl<T> : IBus<T>, IBus where T : struct
	{
		[Token(Token = "0x20006C3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BC104", Offset = "0x9BC104")]
		private sealed class <GetListenerTargets>d__14 : IEnumerable<object>, IEnumerable, IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4001DE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4001DE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>l__initialThreadId;

			[Token(Token = "0x1700051B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600290C")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700051C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600290E")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002909")]
			[DebuggerHidden]
			public <GetListenerTargets>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x600290A")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600290B")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600290D")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x600290F")]
			[DebuggerHidden]
			private IEnumerator<object> System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6002910")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x6001F12")]
		public int GetListenerCount()
		{
			return default(int);
		}

		[Token(Token = "0x6001F13")]
		public void ClearMessageBuffer()
		{
		}

		[Token(Token = "0x6001F14")]
		public void Unsubscribe(MessageBus.MessageCallback<T>.Callback function)
		{
		}

		[Token(Token = "0x6001F15")]
		public void ReleaseAllSubscribers()
		{
		}

		[Token(Token = "0x6001F16")]
		public void Send(T message)
		{
		}

		[Token(Token = "0x6001F17")]
		public void Send()
		{
		}

		[Token(Token = "0x6001F18")]
		public void SendBuffered(T message)
		{
		}

		[Token(Token = "0x6001F19")]
		public void SetMessageBufferLength(int length)
		{
		}

		[Token(Token = "0x6001F1A")]
		public void Subscribe(MessageBus.MessageCallback<T>.Callback function)
		{
		}

		[Token(Token = "0x6001F1B")]
		public void SubscribeOnce(MessageBus.MessageCallback<T>.Callback function)
		{
		}

		[Token(Token = "0x6001F1C")]
		public int GetMessageBufferLength()
		{
			return default(int);
		}

		[Token(Token = "0x6001F1D")]
		public void Subscribe(IMessageReceiver<T> messageReceiver)
		{
		}

		[Token(Token = "0x6001F1E")]
		public void SubscribeOnce(IMessageReceiver<T> messageReceiver)
		{
		}

		[Token(Token = "0x6001F1F")]
		public void Unsubscribe(IMessageReceiver<T> messageReceiver)
		{
		}

		[Token(Token = "0x6001F20")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9D4EAC", Offset = "0x9D4EAC")]
		public IEnumerable<object> GetListenerTargets()
		{
			return null;
		}

		[Token(Token = "0x6001F21")]
		public DummyBusImpl()
		{
		}
	}
	[Token(Token = "0x2000438")]
	public static class MessageBus
	{
		[Token(Token = "0x20006C4")]
		public static class MessageCallback<T>
		{
			[Token(Token = "0x20006FF")]
			public delegate void Callback(T t);
		}

		[Token(Token = "0x20006C5")]
		private static class DummyBusProvider<T> where T : struct
		{
			[Token(Token = "0x4001DE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly IBus<T> Implementation;
		}

		[Token(Token = "0x20006C6")]
		private static class GlobalBusProvider<T> where T : struct
		{
			[Token(Token = "0x4001DEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly IBus<T> Implementation;
		}

		[Token(Token = "0x20006C7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BC114", Offset = "0x9BC114")]
		private sealed class <>c__DisplayClass22_0<T> where T : struct
		{
			[Token(Token = "0x4001DEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool done;

			[Token(Token = "0x6002913")]
			public <>c__DisplayClass22_0()
			{
			}

			[Token(Token = "0x6002914")]
			internal void <WaitOnce>b__0(T _)
			{
			}
		}

		[Token(Token = "0x20006C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BC124", Offset = "0x9BC124")]
		private sealed class <WaitOnce>d__22<T> : IEnumerator<object>, IEnumerator, IDisposable where T : struct
		{
			[Token(Token = "0x4001DEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4001DED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4001DEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private <>c__DisplayClass22_0<T> <>8__1;

			[Token(Token = "0x1700051D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002918")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700051E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600291A")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002915")]
			[DebuggerHidden]
			public <WaitOnce>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x6002916")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002917")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002919")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006C9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BC134", Offset = "0x9BC134")]
		private sealed class <>c__DisplayClass23_0<T> where T : struct
		{
			[Token(Token = "0x4001DEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool done;

			[Token(Token = "0x4001DF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public MessageCallback<T>.Callback func;

			[Token(Token = "0x600291B")]
			public <>c__DisplayClass23_0()
			{
			}

			[Token(Token = "0x600291C")]
			internal void <WaitOnce>b__0(T message)
			{
			}
		}

		[Token(Token = "0x20006CA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BC144", Offset = "0x9BC144")]
		private sealed class <WaitOnce>d__23<T> : IEnumerator<object>, IEnumerator, IDisposable where T : struct
		{
			[Token(Token = "0x4001DF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4001DF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4001DF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public MessageCallback<T>.Callback func;

			[Token(Token = "0x4001DF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private <>c__DisplayClass23_0<T> <>8__1;

			[Token(Token = "0x1700051F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002920")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000520")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002922")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600291D")]
			[DebuggerHidden]
			public <WaitOnce>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x600291E")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600291F")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002921")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6001F22")]
		public static IBus<T> GetBus<T>() where T : struct
		{
			return null;
		}

		[Token(Token = "0x6001F23")]
		public static void Send<T>([Optional] T message) where T : struct
		{
		}

		[Token(Token = "0x6001F24")]
		public static void Send<T>(GameObject local, [Optional] T message) where T : struct
		{
		}

		[Token(Token = "0x6001F25")]
		public static void Send<T>(MonoBehaviour local, [Optional] T message) where T : struct
		{
		}

		[Token(Token = "0x6001F26")]
		public static void SendBuffered<T>([Optional] T message) where T : struct
		{
		}

		[Token(Token = "0x6001F27")]
		public static void SendBuffered<T>(GameObject local, [Optional] T message) where T : struct
		{
		}

		[Token(Token = "0x6001F28")]
		public static void SendBuffered<T>(MonoBehaviour local, [Optional] T message) where T : struct
		{
		}

		[Token(Token = "0x6001F29")]
		public static void Subscribe<T>(MessageCallback<T>.Callback func) where T : struct
		{
		}

		[Token(Token = "0x6001F2A")]
		public static void Subscribe<T>(GameObject local, MessageCallback<T>.Callback func) where T : struct
		{
		}

		[Token(Token = "0x6001F2B")]
		public static void Subscribe<T>(MonoBehaviour local, MessageCallback<T>.Callback func) where T : struct
		{
		}

		[Token(Token = "0x6001F2C")]
		public static void Unsubscribe<T>(MessageCallback<T>.Callback func) where T : struct
		{
		}

		[Token(Token = "0x6001F2D")]
		public static void Unsubscribe<T>(GameObject local, MessageCallback<T>.Callback func) where T : struct
		{
		}

		[Token(Token = "0x6001F2E")]
		public static void Unsubscribe<T>(MonoBehaviour local, MessageCallback<T>.Callback func) where T : struct
		{
		}

		[Token(Token = "0x6001F2F")]
		public static void SubscribeOnce<T>(MessageCallback<T>.Callback func) where T : struct
		{
		}

		[Token(Token = "0x6001F30")]
		public static void SubscribeOnce<T>(GameObject local, MessageCallback<T>.Callback func) where T : struct
		{
		}

		[Token(Token = "0x6001F31")]
		public static void SubscribeOnce<T>(MonoBehaviour local, MessageCallback<T>.Callback func) where T : struct
		{
		}

		[Token(Token = "0x6001F32")]
		public static IBus<T> GetLocalBusOptional<T>(GameObject go) where T : struct
		{
			return null;
		}

		[Token(Token = "0x6001F33")]
		public static IBus<T> GetLocalBusRequired<T>(GameObject go) where T : struct
		{
			return null;
		}

		[Token(Token = "0x6001F34")]
		private static IBus<T> GetLocalBus<T>(GameObject go, bool createIfNeeded) where T : struct
		{
			return null;
		}

		[Token(Token = "0x6001F35")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9D4F10", Offset = "0x9D4F10")]
		public static IEnumerator WaitOnce<T>() where T : struct
		{
			return null;
		}

		[Token(Token = "0x6001F36")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9D4F74", Offset = "0x9D4F74")]
		public static IEnumerator WaitOnce<T>(MessageCallback<T>.Callback func) where T : struct
		{
			return null;
		}
	}
	[Token(Token = "0x2000439")]
	public static class MessageBusTests
	{
		[Token(Token = "0x20006CB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BC154", Offset = "0x9BC154")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4001DF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int[] c;

			[Token(Token = "0x4001DF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int[] d;

			[Token(Token = "0x6002923")]
			[Address(RVA = "0xD9A78C", Offset = "0xD9A78C", VA = "0xD9A78C")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6002924")]
			[Address(RVA = "0xD9A794", Offset = "0xD9A794", VA = "0xD9A794")]
			internal void <Test1>b__0(int i)
			{
			}

			[Token(Token = "0x6002925")]
			[Address(RVA = "0xD9A7E4", Offset = "0xD9A7E4", VA = "0xD9A7E4")]
			internal void <Test1>b__1(int i)
			{
			}

			[Token(Token = "0x6002926")]
			[Address(RVA = "0xD9A834", Offset = "0xD9A834", VA = "0xD9A834")]
			internal void <Test1>b__2(int i)
			{
			}

			[Token(Token = "0x6002927")]
			[Address(RVA = "0xD9A884", Offset = "0xD9A884", VA = "0xD9A884")]
			internal void <Test1>b__3(int i)
			{
			}

			[Token(Token = "0x6002928")]
			[Address(RVA = "0xD9A8D4", Offset = "0xD9A8D4", VA = "0xD9A8D4")]
			internal void <Test1>b__4(int i)
			{
			}
		}

		[Token(Token = "0x20006CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BC164", Offset = "0x9BC164")]
		private sealed class <Test1>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001DF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private <>c__DisplayClass0_0 <>8__1;

			[Token(Token = "0x4001DFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private IBus<int> <busCache>5__2;

			[Token(Token = "0x4001DFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private GameObject <go>5__3;

			[Token(Token = "0x17000521")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600292C")]
				[Address(RVA = "0xD9B424", Offset = "0xD9B424", VA = "0xD9B424", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000522")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600292E")]
				[Address(RVA = "0xD9B494", Offset = "0xD9B494", VA = "0xD9B494", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002929")]
			[Address(RVA = "0xD9A760", Offset = "0xD9A760", VA = "0xD9A760")]
			[DebuggerHidden]
			public <Test1>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x600292A")]
			[Address(RVA = "0xD9A924", Offset = "0xD9A924", VA = "0xD9A924", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600292B")]
			[Address(RVA = "0xD9A928", Offset = "0xD9A928", VA = "0xD9A928", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600292D")]
			[Address(RVA = "0xD9B42C", Offset = "0xD9B42C", VA = "0xD9B42C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6001F37")]
		[Address(RVA = "0xD9A700", Offset = "0xD9A700", VA = "0xD9A700")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9D4FD8", Offset = "0x9D4FD8")]
		[AttributeAttribute(Name = "UnityTestAttribute", RVA = "0x9D4FD8", Offset = "0x9D4FD8")]
		public static IEnumerator Test1()
		{
			return null;
		}
	}
	[Token(Token = "0x200043A")]
	public class MessageBusBehaviour : MonoBehaviour
	{
		[Token(Token = "0x20006CD")]
		public sealed class DelegateBusImpl<T> : IBus<T>, IBus where T : struct
		{
			[Token(Token = "0x2000700")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9BC214", Offset = "0x9BC214")]
			private sealed class <GetListenerTargets>d__22 : IEnumerable<object>, IEnumerable, IEnumerator<object>, IEnumerator, IDisposable
			{
				[Token(Token = "0x4001E92")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private int <>1__state;

				[Token(Token = "0x4001E93")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private object <>2__current;

				[Token(Token = "0x4001E94")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private int <>l__initialThreadId;

				[Token(Token = "0x4001E95")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public DelegateBusImpl<T> <>4__this;

				[Token(Token = "0x4001E96")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private Delegate[] <>7__wrap1;

				[Token(Token = "0x4001E97")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private int <>7__wrap2;

				[Token(Token = "0x1700052F")]
				private object System.Collections.Generic.IEnumerator<System.Object>.Current
				{
					[Token(Token = "0x600297F")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x17000530")]
				private object System.Collections.IEnumerator.Current
				{
					[Token(Token = "0x6002981")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x600297C")]
				[DebuggerHidden]
				public <GetListenerTargets>d__22(int <>1__state)
				{
				}

				[Token(Token = "0x600297D")]
				[DebuggerHidden]
				private void System.IDisposable.Dispose()
				{
				}

				[Token(Token = "0x600297E")]
				private bool MoveNext()
				{
					return default(bool);
				}

				[Token(Token = "0x6002980")]
				[DebuggerHidden]
				private void System.Collections.IEnumerator.Reset()
				{
				}

				[Token(Token = "0x6002982")]
				[DebuggerHidden]
				private IEnumerator<object> System.Collections.Generic.IEnumerable<System.Object>.GetEnumerator()
				{
					return null;
				}

				[Token(Token = "0x6002983")]
				[DebuggerHidden]
				private IEnumerator System.Collections.IEnumerable.GetEnumerator()
				{
					return null;
				}
			}

			[Token(Token = "0x4001DFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly Queue<T> messageBuffer;

			[Token(Token = "0x4001DFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int maxBufferLength;

			[Token(Token = "0x14000040")]
			private event MessageBus.MessageCallback<T>.Callback Actions
			{
				[Token(Token = "0x600292F")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D9A44", Offset = "0x9D9A44")]
				add
				{
				}
				[Token(Token = "0x6002930")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D9A54", Offset = "0x9D9A54")]
				remove
				{
				}
			}

			[Token(Token = "0x14000041")]
			private event MessageBus.MessageCallback<T>.Callback SingleAction
			{
				[Token(Token = "0x6002931")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D9A64", Offset = "0x9D9A64")]
				add
				{
				}
				[Token(Token = "0x6002932")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9D9A74", Offset = "0x9D9A74")]
				remove
				{
				}
			}

			[Token(Token = "0x6002933")]
			public int GetMessageBufferLength()
			{
				return default(int);
			}

			[Token(Token = "0x6002934")]
			public void SetMessageBufferLength(int length)
			{
			}

			[Token(Token = "0x6002935")]
			public void Subscribe(MessageBus.MessageCallback<T>.Callback function)
			{
			}

			[Token(Token = "0x6002936")]
			public void SubscribeOnce(MessageBus.MessageCallback<T>.Callback function)
			{
			}

			[Token(Token = "0x6002937")]
			public void Unsubscribe(MessageBus.MessageCallback<T>.Callback function)
			{
			}

			[Token(Token = "0x6002938")]
			public void Send(T message)
			{
			}

			[Token(Token = "0x6002939")]
			public void Send()
			{
			}

			[Token(Token = "0x600293A")]
			public void SendBuffered(T message)
			{
			}

			[Token(Token = "0x600293B")]
			public void ClearMessageBuffer()
			{
			}

			[Token(Token = "0x600293C")]
			public void ReleaseAllSubscribers()
			{
			}

			[Token(Token = "0x600293D")]
			public int GetListenerCount()
			{
				return default(int);
			}

			[Token(Token = "0x600293E")]
			public void Subscribe(IMessageReceiver<T> messageReceiver)
			{
			}

			[Token(Token = "0x600293F")]
			public void SubscribeOnce(IMessageReceiver<T> messageReceiver)
			{
			}

			[Token(Token = "0x6002940")]
			public void Unsubscribe(IMessageReceiver<T> messageReceiver)
			{
			}

			[Token(Token = "0x6002941")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9D9A84", Offset = "0x9D9A84")]
			public IEnumerable<object> GetListenerTargets()
			{
				return null;
			}

			[Token(Token = "0x6002942")]
			public DelegateBusImpl()
			{
			}
		}

		[Token(Token = "0x4001303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Dictionary<Type, IBus> busses;

		[Token(Token = "0x6001F38")]
		public IBus<T> GetBus<T>() where T : struct
		{
			return null;
		}

		[Token(Token = "0x6001F39")]
		[Address(RVA = "0xD9A058", Offset = "0xD9A058", VA = "0xD9A058")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x9D504C", Offset = "0x9D504C")]
		public void PrintListeners()
		{
		}

		[Token(Token = "0x6001F3A")]
		[Address(RVA = "0xD9A690", Offset = "0xD9A690", VA = "0xD9A690")]
		public MessageBusBehaviour()
		{
		}
	}
}
namespace Fuji.Baking
{
	[Serializable]
	[Token(Token = "0x200043B")]
	public enum BakedMeshIndex
	{
		[Token(Token = "0x4001305")]
		Unbaked,
		[Token(Token = "0x4001306")]
		SkinnedLod0,
		[Token(Token = "0x4001307")]
		StaticLod1
	}
	[Token(Token = "0x200043C")]
	public class BakedMesh : MonoBehaviour
	{
		[Token(Token = "0x4001308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BakedMeshIndex Lod;

		[Token(Token = "0x4001309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Renderer[] SourceRenderers;

		[Token(Token = "0x6001F3B")]
		[Address(RVA = "0xC7304C", Offset = "0xC7304C", VA = "0xC7304C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x9D5084", Offset = "0x9D5084")]
		public void EnableSourceRenderers()
		{
		}

		[Token(Token = "0x6001F3C")]
		[Address(RVA = "0xC730D4", Offset = "0xC730D4", VA = "0xC730D4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x9D50BC", Offset = "0x9D50BC")]
		public void DisableSourceRenderers()
		{
		}

		[Token(Token = "0x6001F3D")]
		[Address(RVA = "0xC7315C", Offset = "0xC7315C", VA = "0xC7315C")]
		public BakedMesh()
		{
		}
	}
}
